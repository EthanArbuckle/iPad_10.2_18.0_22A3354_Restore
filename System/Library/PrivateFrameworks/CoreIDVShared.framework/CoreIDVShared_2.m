uint64_t sub_1CFA30620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  unsigned __int8 v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(void);
  void (*v90)(void);
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t (*v93)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[14];

  *(_OWORD *)(v0 + 16) = 0u;
  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  LOBYTE(v97[0]) = 0;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v1 + 8);
  v8 = v7(v5, v6, v3, v4, v97, v2);
  v10 = v9;
  v11 = *(_QWORD *)(v0 + 504);
  LOBYTE(v97[0]) = 2;
  v12 = *(void (**)(void))(v11 + 24);
  v12();
  if (*(_QWORD *)(v0 + 120))
  {
    v89 = v12;
    v94 = (_QWORD *)(v0 + 56);
    sub_1CFA31488((__int128 *)(v0 + 96), v0 + 56);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v92 = v7;
    v13 = *(_QWORD *)(v0 + 560);
    v14 = *(_QWORD *)(v0 + 528);
    v15 = *(_QWORD *)(v0 + 520);
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v84 = v16;
    v82(v13, v16, v15);
    swift_bridgeObjectRetain_n();
    v17 = sub_1CFB012B4();
    v18 = sub_1CFB01FC8();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 560);
    v21 = *(_QWORD *)(v0 + 528);
    v22 = *(_QWORD *)(v0 + 520);
    if (v19)
    {
      v81 = *(_QWORD *)(v0 + 520);
      v80 = *(_QWORD *)(v0 + 560);
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v97[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 440) = sub_1CF9C974C(v8, v10, v97);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CF917000, v17, v18, "Found standard key with label %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v24, -1, -1);
      MEMORY[0x1D17DA6E4](v23, -1, -1);

      v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v80, v81);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v20, v22);
    }
    v26 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 88);
    v28 = v0 + 56;
    __swift_project_boxed_opaque_existential_1(v94, v26);
    v30 = *(_QWORD *)((*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v27 + 40))(0, v26, v27) + 16);
    swift_bridgeObjectRelease();
    if (v30)
    {
      sub_1CFA31400(v0 + 16);
      swift_bridgeObjectRelease();
      sub_1CF92B1B4((uint64_t)v94, v0 + 16);
      v12 = v89;
      v7 = v92;
    }
    else
    {
      v82(*(_QWORD *)(v0 + 552), v84, *(_QWORD *)(v0 + 520));
      swift_bridgeObjectRetain_n();
      v42 = sub_1CFB012B4();
      v43 = sub_1CFB01FC8();
      v44 = os_log_type_enabled(v42, v43);
      v45 = *(_QWORD *)(v0 + 552);
      v46 = *(_QWORD *)(v0 + 520);
      if (v44)
      {
        v85 = *(_QWORD *)(v0 + 552);
        v47 = (uint8_t *)swift_slowAlloc();
        v83 = v46;
        v48 = swift_slowAlloc();
        v97[0] = v48;
        *(_DWORD *)v47 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 432) = sub_1CF9C974C(v8, v10, v97);
        sub_1CFB021C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1CF917000, v42, v43, "Standard key with label %s does not have an attestation; deleting it",
          v47,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17DA6E4](v48, -1, -1);
        MEMORY[0x1D17DA6E4](v47, -1, -1);

        v50 = v83;
        v49 = v85;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v49 = v45;
        v50 = v46;
      }
      v25(v49, v50);
      v12 = v89;
      (*(void (**)(uint64_t, unint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 32))(v8, v10, 0, *(_QWORD *)(v0 + 496));
      v7 = v92;
      v28 = v0 + 56;
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1(v28);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CFA31400(v0 + 96);
  }
  v31 = (__int128 *)(v0 + 136);
  sub_1CFA31440(v0 + 16, v0 + 136);
  if (!*(_QWORD *)(v0 + 160))
  {
    v90 = v12;
    v93 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))v7;
    v33 = *(_QWORD *)(v0 + 504);
    v34 = *(_QWORD *)(v0 + 496);
    v36 = *(_QWORD *)(v0 + 472);
    v35 = *(_QWORD *)(v0 + 480);
    v38 = *(_QWORD *)(v0 + 456);
    v37 = *(_QWORD *)(v0 + 464);
    sub_1CFA31400(v0 + 136);
    LOBYTE(v97[0]) = 1;
    v39 = v93(v38, v37, v36, v35, v97, v34, v33);
    v41 = v40;
    LOBYTE(v97[0]) = 0;
    v90();
    v31 = (__int128 *)(v0 + 256);
    if (*(_QWORD *)(v0 + 240))
    {
      sub_1CFA31488((__int128 *)(v0 + 216), v0 + 176);
      if (qword_1ED9054E8 != -1)
        swift_once();
      v51 = *(_QWORD *)(v0 + 544);
      v52 = *(_QWORD *)(v0 + 528);
      v53 = *(_QWORD *)(v0 + 520);
      v54 = __swift_project_value_buffer(v53, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v51, v54, v53);
      swift_bridgeObjectRetain();
      v55 = sub_1CFB012B4();
      v56 = sub_1CFB01FC8();
      v57 = os_log_type_enabled(v55, v56);
      v58 = *(_QWORD *)(v0 + 544);
      v59 = *(_QWORD *)(v0 + 528);
      v60 = *(_QWORD *)(v0 + 520);
      if (v57)
      {
        v91 = *(_QWORD *)(v0 + 544);
        v61 = (uint8_t *)swift_slowAlloc();
        v86 = v59;
        v62 = swift_slowAlloc();
        v97[0] = v62;
        *(_DWORD *)v61 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 424) = sub_1CF9C974C(v39, v41, v97);
        sub_1CFB021C0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1CF917000, v55, v56, "Found background key with label %s", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17DA6E4](v62, -1, -1);
        MEMORY[0x1D17DA6E4](v61, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v91, v60);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
      }
      sub_1CFA31400(v0 + 16);
      sub_1CFA31488((__int128 *)(v0 + 176), v0 + 16);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1CFA31400(v0 + 216);
    }
    sub_1CFA31440(v0 + 16, v0 + 256);
    if (!*(_QWORD *)(v0 + 280))
    {
      v63 = *(unsigned __int8 *)(v0 + 610);
      sub_1CFA31400(v0 + 256);
      v64 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      if (qword_1ED904DB0 != -1)
        swift_once();
      if (byte_1ED907588 == 1)
      {
        v65 = (void *)sub_1CFB01A04();
        v66 = objc_msgSend(v64, sel_BOOLForKey_, v65);

        if ((v66 & 1) != 0)
        {
          v67 = 15;
LABEL_36:
          if (*(_QWORD *)(v0 + 488))
            v68 = *(_QWORD *)(v0 + 488);
          else
            v68 = sub_1CF9241BC(MEMORY[0x1E0DEE9D8]);
          v69 = *(_BYTE *)(v0 + 610);
          v95 = *(_QWORD *)(v0 + 504);
          v88 = *(_QWORD *)(v0 + 496);
          v70 = *(_QWORD *)(v0 + 472);
          v87 = *(_QWORD *)(v0 + 480);
          v71 = *(_QWORD *)(v0 + 456);
          v72 = *(_QWORD *)(v0 + 464);
          *(_QWORD *)(v0 + 416) = v67;
          swift_bridgeObjectRetain();
          v73 = sub_1CFB027F0();
          v75 = v74;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v97[0] = v68;
          sub_1CF9589D4(v73, v75, 1, isUniquelyReferenced_nonNull_native);
          *(_QWORD *)(v0 + 568) = v97[0];
          swift_bridgeObjectRelease();
          LOBYTE(v97[0]) = v69;
          *(_QWORD *)(v0 + 576) = v93(v71, v72, v70, v87, v97, v88, v95);
          *(_QWORD *)(v0 + 584) = v77;
          v78 = *(_QWORD *)(v0 + 504);
          *(_BYTE *)(v0 + 608) = *(_BYTE *)(v0 + 611);
          v96 = **(int **)(v78 + 16) + *(_QWORD *)(v78 + 16);
          v79 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 592) = v79;
          *v79 = v0;
          v79[1] = sub_1CFA310A8;
          v97[12] = *(_QWORD *)(v0 + 504);
          __asm { BR              X8 }
        }
      }
      else
      {

      }
      if (((v63 - 1) & 0xFFFFFFFFFFFFFFFDLL) != 0)
        v67 = 15;
      else
        v67 = 525600;
      goto LABEL_36;
    }
  }
  v32 = *(_QWORD *)(v0 + 448);
  sub_1CFA31400(v0 + 16);
  sub_1CFA31488(v31, v32);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA310A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 600) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1CFA31128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 520);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  v5 = sub_1CFB012B4();
  v6 = sub_1CFB01FC8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 584);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 576);
    v16 = *(_QWORD *)(v0 + 528);
    v17 = *(_QWORD *)(v0 + 520);
    v18 = *(_QWORD *)(v0 + 536);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v19 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 408) = sub_1CF9C974C(v9, v8, &v19);
    sub_1CFB021C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CF917000, v5, v6, "created new identity key with label %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v11, -1, -1);
    MEMORY[0x1D17DA6E4](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 536);
    v13 = *(_QWORD *)(v0 + 528);
    v14 = *(_QWORD *)(v0 + 520);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  sub_1CFA31400(v0 + 16);
  sub_1CFA31488((__int128 *)(v0 + 296), *(_QWORD *)(v0 + 448));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA31398()
{
  uint64_t v0;

  sub_1CFA31400(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA31400(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2E50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CFA31440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFA31488(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1CFA314A4()
{
  unint64_t result;

  result = qword_1EFBC2E58;
  if (!qword_1EFBC2E58)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IdentityKeyGenerationOption, &type metadata for IdentityKeyGenerationOption);
    atomic_store(result, (unint64_t *)&qword_1EFBC2E58);
  }
  return result;
}

unint64_t sub_1CFA314EC()
{
  unint64_t result;

  result = qword_1EFBC2E60;
  if (!qword_1EFBC2E60)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for KeystoreKeyType, &type metadata for KeystoreKeyType);
    atomic_store(result, (unint64_t *)&qword_1EFBC2E60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IdentityKeyGenerationOption(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityKeyGenerationOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1CFA3160C + 4 * byte_1CFB1A5D5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1CFA31640 + 4 * byte_1CFB1A5D0[v4]))();
}

uint64_t sub_1CFA31640(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA31648(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA31650);
  return result;
}

uint64_t sub_1CFA3165C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA31664);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1CFA31668(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA31670(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityKeyGenerationOption()
{
  return &type metadata for IdentityKeyGenerationOption;
}

uint64_t storeEnumTagSinglePayload for KeystoreKeyType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFA316D8 + 4 * byte_1CFB1A5DF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFA3170C + 4 * byte_1CFB1A5DA[v4]))();
}

uint64_t sub_1CFA3170C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA31714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA3171CLL);
  return result;
}

uint64_t sub_1CFA31728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA31730);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFA31734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA3173C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeystoreKeyType()
{
  return &type metadata for KeystoreKeyType;
}

uint64_t dispatch thunk of DIPKeystoreProtocol.identityKeyLabel(for:userInfo:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.generateIdentityKeyPair(label:algorithm:constraints:enableUAM:temporary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a9 + 16) + *(_QWORD *)(a9 + 16));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *v17 = v9;
  v17[1] = sub_1CF92F754;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of DIPKeystoreProtocol.retrieveIdentityKey(label:constraints:attestationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.deleteIdentityKey(label:constraints:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

unint64_t sub_1CFA31864(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904D88);
    v2 = (_QWORD *)sub_1CFB02628();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1CF94BBE8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_1CF94BBF0(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v39 = v25;
    v40 = v24;
    sub_1CF923FD8(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC00F8);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_1CF923FD8(v8, v9);
    sub_1CF923FD8(v9, v44);
    sub_1CF923FD8(v44, &v42);
    result = sub_1CFA922E4(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_1CF923FD8(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_1CF923FD8(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CFA31C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B08);
    v2 = sub_1CFB02628();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1CF94BBF0(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CF923FD8(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1CF923FD8(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1CF923FD8(v36, v37);
    sub_1CF923FD8(v37, &v33);
    result = sub_1CFB02334();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1CF923FD8(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CF94BBE8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CFA31FD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B08);
    v2 = sub_1CFB02628();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_1CF94BBF0(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(_QWORD *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    v38 = v40;
    *(_QWORD *)&v36[0] = v17;
    type metadata accessor for CFString(0);
    v18 = v17;
    swift_dynamicCast();
    sub_1CF923FD8((_OWORD *)((char *)v37 + 8), v31);
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1CF923FD8(v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1CF923FD8(v35, v36);
    sub_1CF923FD8(v36, &v32);
    result = sub_1CFB02334();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1CF923FD8(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1CF94BBE8();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CFA32394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B08);
    v2 = sub_1CFB02628();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1CF923FD8(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1CF923FD8(v35, v36);
    sub_1CF923FD8(v36, &v32);
    result = sub_1CFB02334();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1CF923FD8(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1CF94BBE8();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportClientTimeStamp.getter()
{
  return 0x436465646E756F72;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportSessionDuration.getter()
{
  return 0x446E6F6973736573;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportLocale.getter()
{
  return 0x656C61636F4CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSubjectIdentity.getter()
{
  return 0x797469746E656469;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportClientName.getter()
{
  return 0x74656C6C6177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeKey.getter()
{
  return 0x707954746E657665;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportButtonTagKey.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPageTagKey.getter()
{
  return 0x67615465676170;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLocalAuthenticationEventTypeKey.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSubTypeKey.getter()
{
  return 0x65707954627573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductTypeKey.getter()
{
  return 0x54746375646F7270;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductSubTypeKey.getter()
{
  return 0x53746375646F7270;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportIssuerKey.getter()
{
  return 0x726575737369;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPassStyleKey.getter()
{
  return 0x6C79745373736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPassTypeKey.getter()
{
  return 0x6570795473736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReaderTypeKey.getter()
{
  return 0x7954726564616572;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAuthorizationErrorKey.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportErrorTypeKey.getter()
{
  return 0x707954726F727265;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceKey.getter()
{
  return 0x6C61727265666572;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContactlessInterfaceSourceKey.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportHasNFCKey.getter()
{
  return 0x43464E736168;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAccessibilitySetKey.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportViewedLiveVideoKey.getter()
{
  return 0x694C646577656976;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAXFlowEnabled.getter()
{
  return 0x6E45776F6C467861;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeViewDidAppear.getter()
{
  return 0x4164694477656976;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeButtonTap.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticReportFedStatsOptInChoiceKey.getter()
{
  return 0x6F68436E6974706FLL;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeViewDidDisappear.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeToggleTap.getter()
{
  return 0x6154656C67676F74;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeNotificationAppeared.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportImproveIDVerification.getter()
{
  return 0xD000000000000015;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportiOSSettingsIDverification.getter()
{
  return 0xD000000000000019;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsOptInButtonTag.getter()
{
  return 0x6E4974704FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsOptOutButtonTag.getter()
{
  return 0x74754F74704FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsConfirmButtonTag.getter()
{
  return 0x6D7269666E6F43;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAddCardChooseDevicePageTag.getter()
{
  return 0xD000000000000013;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLearnMoreButtonTag.getter()
{
  return 0x6F6D206E7261656CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEducationPageTag.getter()
{
  return 0x6F69746163756465;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScannedEventType.getter()
{
  return 0x534449746E6F7266;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScannedEventType.getter()
{
  return 0x635344496B636162;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportUploadButtonTag.getter()
{
  return 0x64616F6C7075;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportScanIDPageTag.getter()
{
  return 0x44496E616373;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScanConfirmedEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScanConfirmedEventType.getter()
{
  return 0xD000000000000013;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConfirmIDPageTag.getter()
{
  return 0x496D7269666E6F63;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScanErrorEventType.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScanErrorEventType.getter()
{
  return 0x637344496B636162;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLivenessEducationPageTag.getter()
{
  return 0xD000000000000011;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureSuccessEventType.getter()
{
  return 0x5365727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureFailureEventType.getter()
{
  return 0x4665727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGesturePageTag.getter()
{
  return 0x65727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTimeoutErrorType.getter()
{
  return 0x74756F656D6974;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportNotRecognizedErrorType.getter()
{
  return 0x676F636552746F6ELL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureSubType.getter()
{
  return 0x5465727574736567;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAccessibilityOptionsButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieCapturedEventType.getter()
{
  return 0x61436569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTakeSelfiePageTag.getter()
{
  return 0x666C6553656B6174;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieSuccessEventType.getter()
{
  return 0x75536569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieFailureEventType.getter()
{
  return 0x61466569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportRetakeButtonTag.getter()
{
  return 0x656B61746572;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConfirmSelfiePageType.getter()
{
  return 0x536D7269666E6F63;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessActiveSubType.getter()
{
  return 0x657669746361;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessPassiveSubType.getter()
{
  return 0x4F65766973736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessStepUpInlineSubType.getter()
{
  return 0x6E49705570657473;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessStepUpAsyncSubType.getter()
{
  return 0x7341705570657473;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingStartEventType.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingStartEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingStartEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingCompleteEventType.getter()
{
  return 0xD000000000000015;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingCompleteEventType.getter()
{
  return 0xD000000000000016;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingCompleteEventType.getter()
{
  return 0xD000000000000017;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingErrorEventType.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingErrorEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingErrorEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReviewInfoSharedPageTag.getter()
{
  return 0xD000000000000010;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTermsAndConditionsPageTag.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportVerificationInProgress.getter()
{
  return 0xD000000000000016;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningSuccessEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningFailureEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportVerificationRequestEventType.getter()
{
  return 0xD000000000000015;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportDoneButtonTag.getter()
{
  return 1701736292;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningStatusPageTag.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportiPhoneSubType.getter()
{
  return 0x656E6F685069;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWatchSubType.getter()
{
  return 0x6863746177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPotraitMismatchErrorType.getter()
{
  return 0x4D74696172746F70;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportDataMismatchErrorType.getter()
{
  return 0x6D73694D61746164;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContinueButtonTag.getter()
{
  return 0x65756E69746E6F63;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTryAgainButtonTag.getter()
{
  return 0x6E69616741797274;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTryDifferentMovementButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSkipButtonTag.getter()
{
  return 1885956979;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportCancelButtonTag.getter()
{
  return 0x6C65636E6163;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportScanAgainButtonTag.getter()
{
  return 0x696167416E616373;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontSubType.getter()
{
  return 0x746E6F7266;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackSubType.getter()
{
  return 1801675106;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportOtherErrorType.getter()
{
  return 0x726568746FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportCancelAlertPageTag.getter()
{
  return 0x6C416C65636E6163;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportExtendedReviewPageTag.getter()
{
  return 0x6465646E65747865;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportExtendedReviewPushNotificationPageTag.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportOpenDMVButtonTag.getter()
{
  return 0x564D446E65706FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductTypeValue.getter()
{
  return 0x797469746E656469;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourcePhoneValue.getter()
{
  return 0x74656C6C6177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceWatchValue.getter()
{
  return 0x7070416863746177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceNotificationValue.getter()
{
  return 0x6163696669746F6ELL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceWalletValue.getter()
{
  return 0x74656C6C6177;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceStepUpNotification.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceSettingsValue.getter()
{
  return 0x73676E6974746573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBillShockAlertPageTag.getter()
{
  return 0x636F68536C6C6962;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWaitForWifiButtonTag.getter()
{
  return 0x57726F4674696177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWaitForWifiPageTag.getter()
{
  return 0x57726F4674696177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConnectToWifiButtonTag.getter()
{
  return 0x547463656E6E6F63;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContinueWithCellularButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1CFA33368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = v1;
  if (v2 == 1)
  {
    v3 = sub_1CFA369E0();
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 64) = v3;
    *(_QWORD *)(v0 + 72) = v6;
    swift_bridgeObjectRetain();
    sub_1CFA36774(v4, v5);
  }
  sub_1CFA36BDC(v1, v2);
  return v3;
}

uint64_t IdentityAnalyticsReporter.imageQualityErrorMappingForRTC.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityAnalyticsReporter.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  IdentityAnalyticsReporter.init()();
  return v0;
}

uint64_t IdentityAnalyticsReporter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];

  v29[0] = sub_1CFB02028();
  v1 = *(_QWORD *)(v29[0] - 8);
  MEMORY[0x1E0C80A78](v29[0], v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CFB0201C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11, v13, v14, v15, v16, v17, v18, v19);
  v20 = sub_1CFB01398();
  MEMORY[0x1E0C80A78](v20, v21, v22, v23, v24, v25, v26, v27);
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 24) = 0;
  sub_1CF9775E8(0, (unint64_t *)&qword_1ED9054D0);
  sub_1CFB01380();
  v29[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF920A48((unint64_t *)&qword_1ED905500, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9054F0);
  sub_1CF927944((unint64_t *)&qword_1ED9054F8, &qword_1ED9054F0);
  sub_1CFB02310();
  (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v10, *MEMORY[0x1E0DEF8D0], v29[0]);
  *(_QWORD *)(v0 + 32) = sub_1CFB02058();
  *(_QWORD *)(v0 + 40) = dispatch_group_create();
  *(_DWORD *)(v0 + 48) = 13107202;
  *(_WORD *)(v0 + 52) = 0;
  *(_DWORD *)(v0 + 56) = 1090;
  *(_OWORD *)(v0 + 64) = xmmword_1CFB102D0;
  *(_QWORD *)(v0 + 80) = sub_1CF922E4C((uint64_t)&unk_1E8CDCF88);
  swift_retain();
  sub_1CFA348DC((uint64_t)sub_1CFA338D4, v0);
  swift_release();
  return v0;
}

uint64_t sub_1CFA33664(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;

  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v35 - v23;
  if (a1)
  {
    v25 = *(void **)(a2 + 24);
    *(_QWORD *)(a2 + 24) = a1;
    v26 = a1;

    if (qword_1ED9054E8 != -1)
      swift_once();
    v27 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v27, v4);
    v28 = sub_1CFB012B4();
    v29 = sub_1CFB01FC8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1CF917000, v28, v29, "RTCReporter: Successfully established session with RTC", v30, 2u);
      MEMORY[0x1D17DA6E4](v30, -1, -1);

    }
    else
    {

      v28 = v26;
    }
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v31, v4);
    v28 = sub_1CFB012B4();
    v32 = sub_1CFB01FC8();
    if (os_log_type_enabled(v28, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1CF917000, v28, v32, "RTCReporter: Failed to establish session with RTC", v33, 2u);
      MEMORY[0x1D17DA6E4](v33, -1, -1);
    }
    v15 = v24;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v4);
}

uint64_t sub_1CFA338D4(void *a1)
{
  uint64_t v1;

  return sub_1CFA33664(a1, v1);
}

uint64_t sub_1CFA338DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v20;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  _QWORD v52[2];
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD aBlock[7];

  v62 = a7;
  v63 = a8;
  v59 = a5;
  v60 = a6;
  v66 = *(unsigned __int16 *)((char *)&a20 + 1);
  v64 = a18;
  v65 = a19;
  v54 = a17;
  v61 = a16;
  v58 = a14;
  v57 = a12;
  v52[1] = a11;
  v56 = a10;
  v55 = a20;
  v53 = a9;
  v68 = sub_1CFB01368();
  v72 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68, v25, v26, v27, v28, v29, v30, v31);
  v67 = (char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1CFB01398();
  v70 = *(_QWORD *)(v33 - 8);
  v71 = v33;
  MEMORY[0x1E0C80A78](v33, v34, v35, v36, v37, v38, v39, v40);
  v42 = (char *)v52 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v20 + 32);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v20;
  *(_QWORD *)(v43 + 24) = a1;
  *(_QWORD *)(v43 + 32) = a2;
  *(_QWORD *)(v43 + 40) = a3;
  v44 = v59;
  *(_QWORD *)(v43 + 48) = a4;
  *(_QWORD *)(v43 + 56) = v44;
  v45 = v62;
  v46 = v63;
  *(_QWORD *)(v43 + 64) = v60;
  *(_QWORD *)(v43 + 72) = v45;
  *(_QWORD *)(v43 + 80) = v46;
  *(_BYTE *)(v43 + 88) = v53;
  *(_BYTE *)(v43 + 89) = v55;
  *(_QWORD *)(v43 + 96) = v56;
  *(_QWORD *)(v43 + 104) = a11;
  *(_QWORD *)(v43 + 112) = v57;
  *(_QWORD *)(v43 + 120) = a13;
  *(_QWORD *)(v43 + 128) = v58;
  *(_QWORD *)(v43 + 136) = a15;
  *(_QWORD *)(v43 + 144) = v61;
  *(_QWORD *)(v43 + 152) = a17;
  v47 = v65;
  *(_QWORD *)(v43 + 160) = v64;
  *(_QWORD *)(v43 + 168) = v47;
  *(_WORD *)(v43 + 176) = v66;
  aBlock[4] = sub_1CFA34C80;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CFA1D3E8;
  aBlock[3] = &block_descriptor_7;
  v48 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CFB01380();
  v73 = MEMORY[0x1E0DEE9D8];
  sub_1CF920A48((unint64_t *)&qword_1ED9054B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9054B8);
  sub_1CF927944((unint64_t *)&qword_1ED9054C0, &qword_1ED9054B8);
  v50 = v67;
  v49 = v68;
  sub_1CFB02310();
  MEMORY[0x1D17D8DAC](0, v42, v50, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v49);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v71);
  return swift_release();
}

void sub_1CFA33C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, __int128 a12, __int128 a13, __int128 a14, uint64_t a15, uint64_t a16, __int128 a17, char a18, char a19)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint8_t *v44;
  void *v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  char v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  char v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _OWORD v76[2];
  __int128 v77;
  uint64_t v78;

  v71 = a6;
  v74 = a4;
  v73 = a2;
  v24 = sub_1CFB012CC();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v26, v27, v28, v29, v30, v31, v32);
  v34 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB01FF8();
  if (qword_1ED9054E8 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v34, v35, v24);
  v36 = sub_1CFB012B4();
  v37 = sub_1CFB01FC8();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v72 = a3;
    v39 = a5;
    v40 = a7;
    v41 = a8;
    v42 = a1;
    v43 = v38;
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_1CF917000, v36, v37, "RTCReporter: Session lock signalled", v38, 2u);
    v44 = v43;
    a1 = v42;
    a8 = v41;
    a7 = v40;
    a5 = v39;
    a3 = v72;
    MEMORY[0x1D17DA6E4](v44, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v24);
  v45 = *(void **)(a1 + 24);
  if (v45)
  {
    v72 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB059A0;
    *(_QWORD *)(inited + 32) = 0x707954746E657665;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v47 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v73;
    *(_QWORD *)(inited + 56) = a3;
    *(_QWORD *)(inited + 72) = v47;
    *(_QWORD *)(inited + 80) = 0x67615465676170;
    *(_QWORD *)(inited + 120) = v47;
    v48 = v74;
    *(_QWORD *)(inited + 88) = 0xE700000000000000;
    *(_QWORD *)(inited + 96) = v48;
    *(_QWORD *)(inited + 104) = a5;
    v49 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_1CF9226B8(inited);
    if (a7)
    {
      v78 = v47;
      *(_QWORD *)&v77 = v71;
      *((_QWORD *)&v77 + 1) = a7;
      sub_1CF923FD8(&v77, v76);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x65707954627573, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a9)
    {
      v78 = v47;
      *(_QWORD *)&v77 = a8;
      *((_QWORD *)&v77 + 1) = a9;
      sub_1CF923FD8(&v77, v76);
      swift_bridgeObjectRetain();
      v52 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x61546E6F74747562, 0xE900000000000067, v52);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a10 != 2)
    {
      v53 = 1702195828;
      if ((a10 & 1) == 0)
        v53 = 0x65736C6166;
      v54 = 0xE400000000000000;
      v78 = v47;
      if ((a10 & 1) == 0)
        v54 = 0xE500000000000000;
      *(_QWORD *)&v77 = v53;
      *((_QWORD *)&v77 + 1) = v54;
      sub_1CF923FD8(&v77, v76);
      v55 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0xD000000000000010, 0x80000001CFB2D520, v55);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a11 != 2)
    {
      v56 = 1702195828;
      if ((a11 & 1) == 0)
        v56 = 0x65736C6166;
      v57 = 0xE400000000000000;
      v78 = v47;
      if ((a11 & 1) == 0)
        v57 = 0xE500000000000000;
      *(_QWORD *)&v77 = v56;
      *((_QWORD *)&v77 + 1) = v57;
      sub_1CF923FD8(&v77, v76);
      v58 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x6F68436E6974706FLL, 0xEB00000000656369, v58);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((_QWORD *)&a12 + 1))
    {
      v78 = v47;
      v77 = a12;
      sub_1CF923FD8(&v77, v76);
      swift_bridgeObjectRetain();
      v59 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x54746375646F7270, 0xEB00000000657079, v59);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((_QWORD *)&a13 + 1))
    {
      v78 = v47;
      v77 = a13;
      sub_1CF923FD8(&v77, v76);
      swift_bridgeObjectRetain();
      v60 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x53746375646F7270, 0xEE00657079546275, v60);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((_QWORD *)&a14 + 1))
    {
      v78 = v47;
      v77 = a14;
      sub_1CF923FD8(&v77, v76);
      swift_bridgeObjectRetain();
      v62 = swift_isUniquelyReferenced_nonNull_native();
      v75 = v50;
      sub_1CF957EC8(v76, 0x726575737369, 0xE600000000000000, v62);
      v50 = v75;
      swift_bridgeObjectRelease();
    }
    v63 = a16;
    if (!a16)
    {
      v64 = sub_1CFA33368();
      if (!v63)
      {
LABEL_32:
        if (*((_QWORD *)&a17 + 1))
        {
          v78 = v47;
          v77 = a17;
          sub_1CF923FD8(&v77, v76);
          swift_bridgeObjectRetain();
          v66 = swift_isUniquelyReferenced_nonNull_native();
          v75 = v50;
          sub_1CF957EC8(v76, 0x707954726F727265, 0xE900000000000065, v66);
          v50 = v75;
          swift_bridgeObjectRelease();
        }
        v67 = v72;
        if (a18 != 2)
        {
          v78 = MEMORY[0x1E0DEAFA0];
          LOBYTE(v77) = a18 & 1;
          sub_1CF923FD8(&v77, v76);
          v68 = swift_isUniquelyReferenced_nonNull_native();
          v75 = v50;
          sub_1CF957EC8(v76, 0x694C646577656976, 0xEF6F656469566576, v68);
          v50 = v75;
          swift_bridgeObjectRelease();
        }
        if (a19 != 2)
        {
          v78 = MEMORY[0x1E0DEAFA0];
          LOBYTE(v77) = a19 & 1;
          sub_1CF923FD8(&v77, v76);
          v69 = swift_isUniquelyReferenced_nonNull_native();
          v75 = v50;
          sub_1CF957EC8(v76, 0x6E45776F6C467861, 0xED000064656C6261, v69);
          v50 = v75;
          swift_bridgeObjectRelease();
        }
        sub_1CFA35700(v49, v50, v67);
        swift_bridgeObjectRelease();

        return;
      }
      a15 = v64;
    }
    v78 = v47;
    *(_QWORD *)&v77 = a15;
    *((_QWORD *)&v77 + 1) = v63;
    sub_1CF923FD8(&v77, v76);
    swift_bridgeObjectRetain();
    v65 = swift_isUniquelyReferenced_nonNull_native();
    v75 = v50;
    sub_1CF957EC8(v76, 0x6C61727265666572, 0xEE00656372756F53, v65);
    v50 = v75;
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
}

uint64_t sub_1CFA34464(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;

  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = a1;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v15, v2);
    v16 = a1;
    v17 = a1;
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FC8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      v24[0] = v20 + 4;
      swift_getErrorValue();
      v22 = sub_1CFB02A24();
      v24[1] = sub_1CF9C974C(v22, v23, &v25);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CF917000, v18, v19, "Failed to send message to rtc, error: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v21, -1, -1);
      MEMORY[0x1D17DA6E4](v20, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  return result;
}

uint64_t sub_1CFA346B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904840);
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22, v23, v24, v25);
  v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v28 = *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(v28 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_7:
    v32 = (uint64_t *)&unk_1ED904840;
    v33 = (uint64_t)v16;
LABEL_8:
    sub_1CF931B1C(v33, v32);
    v34 = sub_1CFB00F54();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a3, 1, 1, v34);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_1CFA922E4(a1, a2);
  if ((v30 & 1) != 0)
  {
    sub_1CF9C1B08(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v18 + 72) * v29, (uint64_t)v16);
    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v31, 1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    goto LABEL_7;
  sub_1CF9BEC60((uint64_t)v16, (uint64_t)v27);
  v36 = sub_1CFB00F54();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v27, 1, v36) == 1)
  {
    v32 = &qword_1ED904838;
    v33 = (uint64_t)v27;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(a3, v27, v36);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(a3, 0, 1, v36);
}

uint64_t sub_1CFA348DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[6];

  v3 = v2;
  v52 = a1;
  v5 = sub_1CFB01368();
  v55 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CFB01398();
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1CFB012CC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25, v27, v28, v29, v30, v31, v32, v33);
  v35 = (char *)&v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v35, v36, v25);
  v37 = sub_1CFB012B4();
  v38 = sub_1CFB01FC8();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v51 = v24;
    v40 = v14;
    v41 = v3;
    v42 = v5;
    v43 = a2;
    v44 = v39;
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_1CF917000, v37, v38, "RTCReporter: initializeRTCSession called", v39, 2u);
    v45 = v44;
    a2 = v43;
    v5 = v42;
    v3 = v41;
    v14 = v40;
    v24 = v51;
    MEMORY[0x1D17DA6E4](v45, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v35, v25);
  v46 = (_QWORD *)swift_allocObject();
  v47 = v52;
  v46[2] = v3;
  v46[3] = v47;
  v46[4] = a2;
  aBlock[4] = sub_1CFA36C1C;
  aBlock[5] = v46;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CFA1D3E8;
  aBlock[3] = &block_descriptor_6_1;
  v48 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1CFB01380();
  v56 = MEMORY[0x1E0DEE9D8];
  sub_1CF920A48((unint64_t *)&qword_1ED9054B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9054B8);
  sub_1CF927944((unint64_t *)&qword_1ED9054C0, &qword_1ED9054B8);
  sub_1CFB02310();
  MEMORY[0x1D17D8DAC](0, v24, v14, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v5);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v54);
  return swift_release();
}

uint64_t sub_1CFA34C14()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CFA34C80()
{
  uint64_t v0;

  sub_1CFA33C10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_WORD *)(v0 + 88), HIBYTE(*(_WORD *)(v0 + 88)), *(_OWORD *)(v0 + 96), *(_OWORD *)(v0 + 112), *(_OWORD *)(v0 + 128), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_OWORD *)(v0 + 160), *(_WORD *)(v0 + 176), HIBYTE(*(_WORD *)(v0 + 176)));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_1CFA34CF4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  _QWORD aBlock[6];

  v6 = sub_1CFB012CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CFA36C28();
  if (v17)
  {
    v18 = v17;
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    sub_1CFB011B8();
    if (qword_1ED9054E8 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v19, v6);
    v20 = sub_1CFB012B4();
    v21 = sub_1CFB01FC8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1CF917000, v20, v21, "RTCReporter: Session lock enter", v22, 2u);
      MEMORY[0x1D17DA6E4](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a1;
    v23[3] = a2;
    v23[4] = a3;
    v23[5] = v18;
    aBlock[4] = sub_1CFA37530;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA35698;
    aBlock[3] = &block_descriptor_12_0;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v25 = v18;
    swift_release();
    objc_msgSend(v25, sel_startConfigurationWithCompletionHandler_, v24);
    _Block_release(v24);

  }
  else
  {
    a2();
  }
}

void sub_1CFA34F20(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint8_t *v98;
  void (*v99)(char *, uint64_t);
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  char *v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  char *v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  _QWORD v113[2];
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v118 = a5;
  v120 = a4;
  v121 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904840);
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22, v23, v24, v25);
  v27 = (char *)v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1CFB012CC();
  v122 = *(_QWORD *)(v28 - 8);
  v36 = MEMORY[0x1E0C80A78](v28, v29, v30, v31, v32, v33, v34, v35);
  v38 = (char *)v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x1E0C80A78](v36, v39, v40, v41, v42, v43, v44, v45);
  v119 = (char *)v113 - v47;
  v55 = MEMORY[0x1E0C80A78](v46, v48, v49, v50, v51, v52, v53, v54);
  v117 = (char *)v113 - v56;
  v64 = MEMORY[0x1E0C80A78](v55, v57, v58, v59, v60, v61, v62, v63);
  v66 = (char *)v113 - v65;
  MEMORY[0x1E0C80A78](v64, v67, v68, v69, v70, v71, v72, v73);
  v75 = (char *)v113 - v74;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1CFB00F48();
    v76 = sub_1CFB00F54();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v27, 0, 1, v76);
    sub_1CF9C1B08((uint64_t)v27, (uint64_t)v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    swift_beginAccess();
    sub_1CFA90DB8((uint64_t)v16, 0x797469746E656469, 0xE800000000000000);
    swift_endAccess();
    sub_1CF931B1C((uint64_t)v27, &qword_1ED904838);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v116 = a2;
    v77 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v78 = v122;
    v79 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
    v115 = v77;
    v79(v66, v77, v28);
    swift_bridgeObjectRetain();
    v80 = sub_1CFB012B4();
    v81 = sub_1CFB01FC8();
    v82 = os_log_type_enabled(v80, v81);
    v83 = MEMORY[0x1E0DEE9B8];
    if (v82)
    {
      v114 = v79;
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      v124 = v85;
      *(_DWORD *)v84 = 136315138;
      v113[0] = v84 + 4;
      v86 = swift_bridgeObjectRetain();
      v113[1] = v83 + 8;
      v87 = MEMORY[0x1D17D8A10](v86);
      v89 = v88;
      swift_bridgeObjectRelease();
      v90 = v87;
      v79 = v114;
      v123 = sub_1CF9C974C(v90, v89, &v124);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v80, v81, "RTCReporter: Retrieved backends: %s", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v85, -1, -1);
      MEMORY[0x1D17DA6E4](v84, -1, -1);

      v91 = *(void (**)(char *, uint64_t))(v122 + 8);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v91 = *(void (**)(char *, uint64_t))(v78 + 8);
    }
    v91(v66, v28);
    v103 = v117;
    if (qword_1ED904850 != -1)
      swift_once();
    v104 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED907570);
    v79(v103, v104, v28);
    v105 = sub_1CFB012B4();
    v106 = sub_1CFB01FEC();
    if (os_log_type_enabled(v105, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      v108 = swift_slowAlloc();
      v124 = v108;
      *(_DWORD *)v107 = 136315138;
      v123 = sub_1CF9C974C(0x797469746E656469, 0xE800000000000000, &v124);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v105, v106, "Initiating RTC reporting for subject: %s", v107, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v108, -1, -1);
      MEMORY[0x1D17DA6E4](v107, -1, -1);
    }

    v91(v103, v28);
    v109 = v119;
    v121(v118);
    v79(v109, v115, v28);
    v110 = sub_1CFB012B4();
    v111 = sub_1CFB01FC8();
    if (os_log_type_enabled(v110, v111))
    {
      v112 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v112 = 0;
      _os_log_impl(&dword_1CF917000, v110, v111, "RTCReporter: Session lock leave", v112, 2u);
      MEMORY[0x1D17DA6E4](v112, -1, -1);
    }

    v91(v109, v28);
    a2 = v116;
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v92 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v93 = v122;
    v94 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
    v94(v75, v92, v28);
    v95 = sub_1CFB012B4();
    v96 = sub_1CFB01FC8();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v97 = 0;
      _os_log_impl(&dword_1CF917000, v95, v96, "RTCReporter: Failed to initialize configuration, no backends retrieved", v97, 2u);
      v98 = v97;
      v93 = v122;
      MEMORY[0x1D17DA6E4](v98, -1, -1);
    }

    v99 = *(void (**)(char *, uint64_t))(v93 + 8);
    v99(v75, v28);
    v121(0);
    v94(v38, v92, v28);
    v100 = sub_1CFB012B4();
    v101 = sub_1CFB01FC8();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v102 = 0;
      _os_log_impl(&dword_1CF917000, v100, v101, "RTCReporter: Session lock leave", v102, 2u);
      MEMORY[0x1D17DA6E4](v102, -1, -1);
    }

    v99(v38, v28);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a2 + 40));
}

uint64_t sub_1CFA35698(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1CFB01CA4();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1CFA35700(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t, uint64_t);
  NSObject *v128;
  os_log_type_t v129;
  uint8_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(char *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  void (*v157)(char *, uint64_t);
  uint64_t v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t inited;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void *v167;
  id v168;
  id v169;
  id v170;
  unint64_t v171;
  uint64_t v172;
  void *v173;
  unsigned int v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  NSObject *v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  void (*v186)(char *, uint64_t);
  uint64_t v187;
  id v188;
  void *v189;
  char *v190;
  id v191;
  id v192;
  NSObject *v193;
  os_log_type_t v194;
  uint8_t *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char *v199;
  char *v200;
  NSObject *v201;
  os_log_type_t v202;
  uint8_t *v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  char *v208;
  id v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(char *, uint64_t);
  void (*v229)(char *, uint64_t, uint64_t);
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  __int128 v235;
  uint64_t v236;
  _OWORD v237[2];
  uint64_t v238;

  v227 = a3;
  v230 = a2;
  v223 = a1;
  v238 = *MEMORY[0x1E0C80C00];
  v3 = sub_1CFB01068();
  v217 = *(_QWORD *)(v3 - 8);
  v218 = v3;
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v214 = (char *)&v210 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CFB00C3C();
  v215 = *(_QWORD *)(v12 - 8);
  v216 = v12;
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16, v17, v18, v19);
  v213 = (char *)&v210 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1CFB00FFC();
  v224 = *(_QWORD *)(v21 - 8);
  v225 = v21;
  MEMORY[0x1E0C80A78](v21, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)&v210 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2E70);
  MEMORY[0x1E0C80A78](v31, v32, v33, v34, v35, v36, v37, v38);
  v40 = (char *)&v210 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  v49 = MEMORY[0x1E0C80A78](v41, v42, v43, v44, v45, v46, v47, v48);
  v226 = (uint64_t)&v210 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49, v51, v52, v53, v54, v55, v56, v57);
  v59 = (char *)&v210 - v58;
  v60 = sub_1CFB00F54();
  v231 = *(_QWORD *)(v60 - 8);
  v232 = v60;
  v68 = MEMORY[0x1E0C80A78](v60, v61, v62, v63, v64, v65, v66, v67);
  v211 = (char *)&v210 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x1E0C80A78](v68, v70, v71, v72, v73, v74, v75, v76);
  v212 = (char *)&v210 - v78;
  MEMORY[0x1E0C80A78](v77, v79, v80, v81, v82, v83, v84, v85);
  v87 = (char *)&v210 - v86;
  v88 = sub_1CFB012CC();
  v89 = *(_QWORD *)(v88 - 8);
  v97 = MEMORY[0x1E0C80A78](v88, v90, v91, v92, v93, v94, v95, v96);
  v219 = (char *)&v210 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = MEMORY[0x1E0C80A78](v97, v99, v100, v101, v102, v103, v104, v105);
  v220 = (char *)&v210 - v107;
  v115 = MEMORY[0x1E0C80A78](v106, v108, v109, v110, v111, v112, v113, v114);
  v221 = (char *)&v210 - v116;
  MEMORY[0x1E0C80A78](v115, v117, v118, v119, v120, v121, v122, v123);
  v125 = (char *)&v210 - v124;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v126 = __swift_project_value_buffer(v88, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v127 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
  v222 = v126;
  v233 = v88;
  v229 = v127;
  v127(v125, v126, v88);
  v128 = sub_1CFB012B4();
  v129 = sub_1CFB01FC8();
  if (os_log_type_enabled(v128, v129))
  {
    v130 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v130 = 0;
    _os_log_impl(&dword_1CF917000, v128, v129, "RTCReporter: Inside of sendEvent", v130, 2u);
    MEMORY[0x1D17DA6E4](v130, -1, -1);
  }

  v228 = *(void (**)(char *, uint64_t))(v89 + 8);
  v228(v125, v233);
  v131 = v230;
  swift_bridgeObjectRetain();
  sub_1CFA36504((uint64_t)v59);
  v133 = v231;
  v132 = v232;
  v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48);
  if (v134(v59, 1, v232) == 1)
  {
    sub_1CF931B1C((uint64_t)v59, &qword_1ED904838);
    v135 = v131;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v87, v59, v132);
    sub_1CFB00F18();
    v236 = MEMORY[0x1E0DEB070];
    *(_QWORD *)&v235 = v136;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v234 = v131;
    sub_1CFA3688C(&v235, 0x436465646E756F72, 0xEF5354746E65696CLL, isUniquelyReferenced_nonNull_native, v237);
    v135 = v234;
    swift_bridgeObjectRelease();
    sub_1CF931B1C((uint64_t)v237, (uint64_t *)&unk_1ED904DA0);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v87, v132);
  }
  sub_1CFB00FF0();
  sub_1CFB00FE4();
  (*(void (**)(char *, uint64_t))(v224 + 8))(v30, v225);
  v138 = sub_1CFB00FD8();
  v139 = *(_QWORD *)(v138 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v40, 1, v138) == 1)
  {
    v140 = &qword_1EFBC2E70;
    v141 = v40;
  }
  else
  {
    v142 = sub_1CFB00FCC();
    v144 = v143;
    (*(void (**)(char *, uint64_t))(v139 + 8))(v40, v138);
    v236 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v235 = v142;
    *((_QWORD *)&v235 + 1) = v144;
    v145 = swift_isUniquelyReferenced_nonNull_native();
    v234 = v135;
    sub_1CFA3688C(&v235, 0x656C61636F4CLL, 0xE600000000000000, v145, v237);
    v135 = v234;
    swift_bridgeObjectRelease();
    v140 = (uint64_t *)&unk_1ED904DA0;
    v141 = (char *)v237;
  }
  sub_1CF931B1C((uint64_t)v141, v140);
  v146 = v226;
  sub_1CFA346B4(0x797469746E656469, 0xE800000000000000, v226);
  v147 = v232;
  if (v134((char *)v146, 1, v232) == 1)
  {
    sub_1CF931B1C(v146, &qword_1ED904838);
    v148 = 0;
  }
  else
  {
    v149 = v212;
    (*(void (**)(char *, uint64_t, uint64_t))(v231 + 32))(v212, v146, v147);
    v150 = v214;
    sub_1CFB01044();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF610);
    v151 = sub_1CFB0105C();
    v152 = *(_QWORD *)(v151 - 8);
    v153 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    v154 = swift_allocObject();
    *(_OWORD *)(v154 + 16) = xmmword_1CFB05840;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v152 + 104))(v154 + v153, *MEMORY[0x1E0CB1188], v151);
    sub_1CF97FF94(v154);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v155 = v211;
    sub_1CFB00F48();
    v156 = v213;
    sub_1CFB01020();
    swift_bridgeObjectRelease();
    v157 = *(void (**)(char *, uint64_t))(v231 + 8);
    v157(v155, v147);
    (*(void (**)(char *, uint64_t))(v217 + 8))(v150, v218);
    v158 = sub_1CFB00C24();
    LOBYTE(v155) = v159;
    (*(void (**)(char *, uint64_t))(v215 + 8))(v156, v216);
    v157(v149, v147);
    if ((v155 & 1) != 0)
      v148 = 0;
    else
      v148 = v158;
  }
  v236 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v235 = v148;
  v160 = swift_isUniquelyReferenced_nonNull_native();
  v234 = v135;
  sub_1CFA3688C(&v235, 0x446E6F6973736573, 0xEF6E6F6974617275, v160, v237);
  v161 = v234;
  swift_bridgeObjectRelease();
  sub_1CF931B1C((uint64_t)v237, (uint64_t *)&unk_1ED904DA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2E78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB0DD90;
  v163 = (void *)*MEMORY[0x1E0D83850];
  if (!*MEMORY[0x1E0D83850])
  {
    __break(1u);
    goto LABEL_34;
  }
  v164 = inited;
  *(_QWORD *)(inited + 32) = v163;
  v165 = MEMORY[0x1E0DEE068];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEE068];
  *(_WORD *)(inited + 40) = 2;
  v166 = (void *)*MEMORY[0x1E0D83868];
  if (!*MEMORY[0x1E0D83868])
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  *(_QWORD *)(inited + 72) = v166;
  *(_QWORD *)(inited + 104) = v165;
  *(_WORD *)(inited + 80) = 200;
  v167 = (void *)*MEMORY[0x1E0D83860];
  if (!*MEMORY[0x1E0D83860])
    goto LABEL_35;
  *(_QWORD *)(inited + 112) = v167;
  *(_QWORD *)(inited + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0100);
  *(_QWORD *)(v164 + 120) = v161;
  v168 = v163;
  v169 = v166;
  v170 = v167;
  v171 = sub_1CF922F70(v164);
  sub_1CFA31FD0(v171);
  v172 = MEMORY[0x1E0DEE9B8];
  v173 = (void *)sub_1CFB01944();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v237[0] = 0;
  v174 = objc_msgSend(v223, sel_sendMessageWithDictionary_error_, v173, v237);

  if (v174)
  {
    v175 = qword_1ED904850;
    v176 = *(id *)&v237[0];
    if (v175 != -1)
      swift_once();
    v177 = v233;
    v178 = __swift_project_value_buffer(v233, (uint64_t)qword_1ED907570);
    v179 = v221;
    v229(v221, v178, v177);
    swift_bridgeObjectRetain_n();
    v180 = sub_1CFB012B4();
    v181 = sub_1CFB01FEC();
    if (os_log_type_enabled(v180, v181))
    {
      v182 = swift_slowAlloc();
      v232 = swift_slowAlloc();
      *(_QWORD *)&v237[0] = v232;
      *(_DWORD *)v182 = 136315394;
      *(_QWORD *)&v235 = sub_1CF9C974C(0x797469746E656469, 0xE800000000000000, (uint64_t *)v237);
      sub_1CFB021C0();
      *(_WORD *)(v182 + 12) = 2080;
      v227 = v182 + 14;
      swift_bridgeObjectRetain();
      v231 = v172 + 8;
      v183 = sub_1CFB01968();
      v185 = v184;
      swift_bridgeObjectRelease();
      v186 = v228;
      *(_QWORD *)&v235 = sub_1CF9C974C(v183, v185, (uint64_t *)v237);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v180, v181, "subject: %s event: %s", (uint8_t *)v182, 0x16u);
      v187 = v232;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v187, -1, -1);
      MEMORY[0x1D17DA6E4](v182, -1, -1);

      v186(v221, v233);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v228(v179, v233);
    }
    v200 = v219;
    v229(v219, v222, v233);
    swift_bridgeObjectRetain();
    v201 = sub_1CFB012B4();
    v202 = sub_1CFB01FC8();
    if (os_log_type_enabled(v201, v202))
    {
      v203 = (uint8_t *)swift_slowAlloc();
      v204 = swift_slowAlloc();
      *(_QWORD *)&v237[0] = v204;
      *(_DWORD *)v203 = 136315138;
      v232 = (uint64_t)(v203 + 4);
      type metadata accessor for CFString(0);
      sub_1CF920A48((unint64_t *)&qword_1EFBBDDE8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CFB05310);
      swift_bridgeObjectRetain();
      v205 = sub_1CFB01968();
      v207 = v206;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v235 = sub_1CF9C974C(v205, v207, (uint64_t *)v237);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v201, v202, "RTCReporter: Message delivered to RTC with payload: %s", v203, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v204, -1, -1);
      MEMORY[0x1D17DA6E4](v203, -1, -1);

      v208 = v219;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v208 = v200;
    }
    v228(v208, v233);
  }
  else
  {
    v188 = *(id *)&v237[0];
    swift_bridgeObjectRelease();
    v189 = (void *)sub_1CFB00D20();

    swift_willThrow();
    v190 = v220;
    v229(v220, v222, v233);
    v191 = v189;
    v192 = v189;
    v193 = sub_1CFB012B4();
    v194 = sub_1CFB01FC8();
    if (os_log_type_enabled(v193, v194))
    {
      v195 = (uint8_t *)swift_slowAlloc();
      v196 = swift_slowAlloc();
      *(_QWORD *)&v237[0] = v196;
      *(_DWORD *)v195 = 136315138;
      swift_getErrorValue();
      v197 = sub_1CFB02A24();
      *(_QWORD *)&v235 = sub_1CF9C974C(v197, v198, (uint64_t *)v237);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CF917000, v193, v194, "RTCReporter: Error sending message to RTC: %s", v195, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v196, -1, -1);
      MEMORY[0x1D17DA6E4](v195, -1, -1);

      v199 = v220;
    }
    else
    {

      v199 = v190;
    }
    v228(v199, v233);
    v209 = v189;
    sub_1CFA34464(v189);

  }
}

uint64_t sub_1CFA36504@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, _QWORD, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v1 = sub_1CFB00F54();
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  MEMORY[0x1E0C80A78](v1, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CFB00C3C();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15, v16, v17, v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1CFB01068();
  v21 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)&v39 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB01044();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF610);
  v31 = sub_1CFB0105C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1CFB0DD90;
  v36 = v35 + v34;
  v37 = *(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104);
  v37(v36, *MEMORY[0x1E0CB1158], v31);
  v37(v36 + v33, *MEMORY[0x1E0CB1160], v31);
  v37(v36 + 2 * v33, *MEMORY[0x1E0CB1130], v31);
  sub_1CF97FF94(v35);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1CFB00F48();
  sub_1CFB0102C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
  sub_1CFB01038();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v30, v39);
}

uint64_t IdentityAnalyticsReporter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1CFA36774(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CFA36774(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t IdentityAnalyticsReporter.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1CFA36774(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for IdentityAnalyticsReportEventKeys()
{
  return &type metadata for IdentityAnalyticsReportEventKeys;
}

uint64_t type metadata accessor for IdentityAnalyticsReporter()
{
  return objc_opt_self();
}

uint64_t method lookup function for IdentityAnalyticsReporter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityAnalyticsReporter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of IdentityAnalyticsReporter.trackEvent(eventType:pageTag:subType:buttonTag:accessibilitySet:productType:productSubType:issuer:referralSource:errorType:optInChoice:viewedLiveVideo:axFlowEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

_OWORD *sub_1CFA3688C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *result;
  uint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1CFA922E4(a2, a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        sub_1CF923FD8((_OWORD *)(v20[7] + 32 * v14), a5);
        return sub_1CF923FD8(a1, (_OWORD *)(v20[7] + 32 * v14));
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1CFA0D054();
      goto LABEL_7;
    }
    sub_1CFA0A45C(v17, a4 & 1);
    v22 = sub_1CFA922E4(a2, a3);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CFA0E5A4(v14, a2, a3, a1, v20);
      *a5 = 0u;
      a5[1] = 0u;
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1CFB029E8();
  __break(1u);
  return result;
}

uint64_t sub_1CFA369E0()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_processName);

  v2 = sub_1CFB01A28();
  v4 = v3;

  if (v2 == 0x6B6F6F6273736150 && v4 == 0xE800000000000000)
  {
    v6 = 0x74656C6C6177;
  }
  else if ((sub_1CFB028B0() & 1) != 0)
  {
    v6 = 0x74656C6C6177;
  }
  else if (v2 == 0x6E65726566657250 && v4 == 0xEB00000000736563)
  {
    v6 = 0x73676E6974746573;
  }
  else
  {
    if ((sub_1CFB028B0() & 1) == 0)
    {
      if (v2 == 0x656764697242 && v4 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = sub_1CFB028B0();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      return 0x7070416863746177;
    }
    v6 = 0x73676E6974746573;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1CFA36BDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1CFA36BF0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CFA36C1C()
{
  uint64_t v0;

  sub_1CFA34CF4(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

id sub_1CFA36C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  id result;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[51];

  v0 = sub_1CFB012CC();
  v79 = *(_QWORD *)(v0 - 8);
  v8 = MEMORY[0x1E0C80A78](v0, v1, v2, v3, v4, v5, v6, v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11, v12, v13, v14, v15, v16, v17);
  v77 = (char *)&v74 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB0F650;
  result = (id)*MEMORY[0x1E0D83880];
  if (!*MEMORY[0x1E0D83880])
  {
    __break(1u);
    goto LABEL_27;
  }
  *(_QWORD *)(inited + 32) = sub_1CFB01A28();
  *(_QWORD *)(inited + 40) = v21;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithChar_, 31);
  v23 = sub_1CF9775E8(0, (unint64_t *)&qword_1ED904AE0);
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 48) = v22;
  result = (id)*MEMORY[0x1E0D83888];
  if (!*MEMORY[0x1E0D83888])
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(_QWORD *)(inited + 80) = sub_1CFB01A28();
  *(_QWORD *)(inited + 88) = v24;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedShort_, 0);
  *(_QWORD *)(inited + 120) = v23;
  *(_QWORD *)(inited + 96) = v25;
  result = (id)*MEMORY[0x1E0D838A8];
  if (!*MEMORY[0x1E0D838A8])
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(inited + 128) = sub_1CFB01A28();
  *(_QWORD *)(inited + 136) = v26;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, 1090);
  *(_QWORD *)(inited + 168) = v23;
  *(_QWORD *)(inited + 144) = v27;
  result = (id)*MEMORY[0x1E0D83870];
  if (!*MEMORY[0x1E0D83870])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(_QWORD *)(inited + 176) = sub_1CFB01A28();
  *(_QWORD *)(inited + 184) = v28;
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 1);
  *(_QWORD *)(inited + 216) = v23;
  *(_QWORD *)(inited + 192) = v29;
  result = (id)*MEMORY[0x1E0D83878];
  if (!*MEMORY[0x1E0D83878])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(inited + 224) = sub_1CFB01A28();
  *(_QWORD *)(inited + 232) = v30;
  v31 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v32 = objc_msgSend(v31, sel_bundleIdentifier);

  if (v32)
  {
    v33 = sub_1CFB01A28();
    v35 = v34;

    v36 = (uint64_t *)(inited + 240);
    *(_QWORD *)(inited + 264) = MEMORY[0x1E0DEA968];
    if (v35)
    {
      *v36 = v33;
      goto LABEL_11;
    }
  }
  else
  {
    v36 = (uint64_t *)(inited + 240);
    *(_QWORD *)(inited + 264) = MEMORY[0x1E0DEA968];
  }
  *v36 = 0;
  v35 = 0xE000000000000000;
LABEL_11:
  *(_QWORD *)(inited + 248) = v35;
  v37 = sub_1CF9226B8(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904B10);
  v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = xmmword_1CFB059A0;
  result = (id)*MEMORY[0x1E0D838B0];
  if (!*MEMORY[0x1E0D838B0])
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v76 = (uint64_t)v10;
  v39 = v0;
  *(_QWORD *)(v38 + 32) = sub_1CFB01A28();
  *(_QWORD *)(v38 + 40) = v40;
  *(_QWORD *)(v38 + 48) = 0x74656C6C6177;
  *(_QWORD *)(v38 + 56) = 0xE600000000000000;
  result = (id)*MEMORY[0x1E0D838B8];
  if (!*MEMORY[0x1E0D838B8])
  {
LABEL_32:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v38 + 64) = sub_1CFB01A28();
  *(_QWORD *)(v38 + 72) = v41;
  *(_QWORD *)(v38 + 80) = 0x797469746E656469;
  *(_QWORD *)(v38 + 88) = 0xE800000000000000;
  v42 = sub_1CF9229AC(v38);
  sub_1CFA31C0C(v37);
  v78 = v42;
  sub_1CFA32394(v42);
  v43 = objc_allocWithZone(MEMORY[0x1E0D83848]);
  v44 = (void *)sub_1CFB01944();
  swift_bridgeObjectRelease();
  v45 = (void *)sub_1CFB01944();
  swift_bridgeObjectRelease();
  v46 = (void *)sub_1CFB01C8C();
  v47 = objc_msgSend(v43, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v44, v45, v46);

  if (v47)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v49 = v79;
    v50 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v48, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = sub_1CFB012B4();
    v52 = sub_1CFB01FC8();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v81[0] = v76;
      *(_DWORD *)v53 = 136315394;
      swift_bridgeObjectRetain();
      v74 = MEMORY[0x1E0DEE9B8] + 8;
      v54 = sub_1CFB01968();
      v75 = v39;
      v56 = v55;
      swift_bridgeObjectRelease();
      v80 = sub_1CF9C974C(v54, v56, v81);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain();
      v57 = sub_1CFB01968();
      v59 = v58;
      swift_bridgeObjectRelease();
      v80 = sub_1CF9C974C(v57, v59, v81);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v51, v52, "RTCReporter: Initialized new session with sessionInfo: %s, userInfo: %s", (uint8_t *)v53, 0x16u);
      v60 = v76;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v60, -1, -1);
      MEMORY[0x1D17DA6E4](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v75);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v39);
    }
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v62 = v79;
    v63 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v76, v61, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = sub_1CFB012B4();
    v65 = sub_1CFB01FC8();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v81[0] = v67;
      *(_DWORD *)v66 = 136315394;
      swift_bridgeObjectRetain();
      v77 = (char *)(MEMORY[0x1E0DEE9B8] + 8);
      v68 = sub_1CFB01968();
      v75 = v39;
      v70 = v69;
      swift_bridgeObjectRelease();
      v80 = sub_1CF9C974C(v68, v70, v81);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      swift_bridgeObjectRetain();
      v71 = sub_1CFB01968();
      v73 = v72;
      swift_bridgeObjectRelease();
      v80 = sub_1CF9C974C(v71, v73, v81);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v64, v65, "RTCReporter: Failed to create reporting session with sessionInfo: %s, userInfo: %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v67, -1, -1);
      MEMORY[0x1D17DA6E4](v66, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v75);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v39);
    }
    return 0;
  }
  return v47;
}

uint64_t sub_1CFA374FC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1CFA37530(uint64_t a1)
{
  uint64_t v1;

  sub_1CFA34F20(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:isFirstMoreRecent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v9 + 128) = a8;
  *(_QWORD *)(v9 + 136) = v12;
  *(_QWORD *)(v9 + 112) = a6;
  *(_QWORD *)(v9 + 120) = a7;
  *(_QWORD *)(v9 + 96) = a4;
  *(_QWORD *)(v9 + 104) = a5;
  *(_QWORD *)(v9 + 80) = a1;
  *(_QWORD *)(v9 + 88) = a3;
  *(_BYTE *)(v9 + 160) = *(_BYTE *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v9 + 144) = v8;
  *(_QWORD *)(v9 + 152) = v10;
  return swift_task_switch();
}

uint64_t sub_1CFA37588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_BYTE *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v11 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CFA3763C;
  v9 = swift_continuation_init();
  sub_1CFA37690(v9, v2, v3, v1, v8, v7, v6, v5, v11, *((uint64_t *)&v11 + 1), v4);
  return swift_continuation_await();
}

uint64_t sub_1CFA3763C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1CFA37690(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  _BYTE v18[8];
  uint64_t v19;

  v18[0] = a3 & 1;
  v19 = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 8))(v18, a5, a6, sub_1CFA3879C, v16, a8, a10, a11, a7, a9);
  return swift_release();
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  _QWORD *v17;
  _BYTE v19[8];
  uint64_t v20;

  v16 = *(_QWORD *)(a1 + 8);
  v19[0] = *(_BYTE *)a1;
  v20 = v16;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a5;
  (*(void (**)(_BYTE *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(v19, sub_1CFA3782C, v17, a2, a3, a5, a8, a9, a4, a6);
  return swift_release();
}

uint64_t sub_1CFA3781C()
{
  return swift_deallocObject();
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 80) = a8;
  *(_QWORD *)(v9 + 88) = v8;
  *(_QWORD *)(v9 + 64) = a6;
  *(_QWORD *)(v9 + 72) = a7;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 56) = a5;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a3;
  *(_BYTE *)(v9 + 128) = *(_BYTE *)a2;
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(a2 + 8);
  return swift_task_switch();
}

uint64_t sub_1CFA37864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 128);
  *(_QWORD *)(v0 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 104) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 24) = v5;
  *(_OWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 56) = v2;
  *(_QWORD *)(v4 + 64) = v5;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)v7 = v0;
  *(_QWORD *)(v7 + 8) = sub_1CFA3794C;
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_OWORD *)(v0 + 40);
  v10 = *(_OWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 128) = v10;
  *(_OWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 88) = sub_1CFA3782C;
  *(_QWORD *)(v7 + 96) = v4;
  *(_QWORD *)(v7 + 80) = v11;
  *(_BYTE *)(v7 + 160) = *(_BYTE *)(v0 + 16);
  *(_QWORD *)(v7 + 144) = v8;
  *(_QWORD *)(v7 + 152) = v12;
  return swift_task_switch();
}

uint64_t sub_1CFA3794C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA379C0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA379F4()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA37A04()
{
  return sub_1CFB019C8() & 1;
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:completion:)(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[8];
  uint64_t v16;

  v15[0] = *a1;
  v16 = a2;
  v10 = type metadata accessor for CreationDateSorter();
  v11 = sub_1CF920A48(&qword_1EFBC2E90, (uint64_t (*)(uint64_t))type metadata accessor for CreationDateSorter, (uint64_t)&unk_1CFB1A8BC);
  v12 = sub_1CF920A48(&qword_1EFBC2E98, (uint64_t (*)(uint64_t))type metadata accessor for CreationDateSorter, (uint64_t)&unk_1CFB1A894);
  v13 = sub_1CF920A48(&qword_1EFBC2EA0, (uint64_t (*)(uint64_t))type metadata accessor for CreationDateSorter, (uint64_t)&unk_1CFB1A86C);
  swift_bridgeObjectRetain();
  MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:completion:)((uint64_t)v15, a3, a4, a5, v10, a6, v11, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CreationDateSorter()
{
  uint64_t result;

  result = qword_1EFBC2F10;
  if (!qword_1EFBC2F10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_QWORD *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 80) = a1;
  *(_BYTE *)(v6 + 120) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA37B90()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CFA3763C;
  v6 = swift_continuation_init();
  sub_1CFA37C10(v6, v2, v1, v5, v4, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA37C10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  char v12;

  v12 = a3 & 1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:completion:)(&v12, a4, (uint64_t)sub_1CFA38928, v10, a5, a6);
  return swift_release();
}

uint64_t sub_1CFA37CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;

  v4 = sub_1CFB00DEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBFEC0);
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFA38744(a1, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *(_QWORD *)v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_allocError();
    *v26 = v25;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v28(v14, v24, v4);
    v28(*(char **)(*(_QWORD *)(a2 + 64) + 40), v14, v4);
    return swift_continuation_throwingResume();
  }
}

uint64_t MobileAssetManagerProtocol.evictAssets(type:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = v3;
  *(_QWORD *)(v4 + 80) = a2;
  *(_BYTE *)(v4 + 104) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CFA37E00()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_BYTE *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CFA3763C;
  v5 = swift_continuation_init();
  sub_1CFA37E74(v5, v2, v1, v4, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA37E74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  char v10;

  v10 = a3 & 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  (*(void (**)(char *, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(a5 + 16))(&v10, sub_1CFA3872C, v8, a4, a5);
  return swift_release();
}

uint64_t dispatch thunk of MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:isFirstMoreRecent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t dispatch thunk of MobileAssetManagerProtocol.evictAssets(type:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1CFA37F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1CFA37F50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1CFA37F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CFA37FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CFA3800C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CFA38050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CFA38094()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA380A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1CFA380DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA380E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1CFA38128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CFB00F54();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CFA38190(void *a1)
{
  _QWORD *v2;
  id v3;

  if (!a1)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
  swift_allocError();
  *v2 = a1;
  v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1CFA38208@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v36 = a2;
  v38 = sub_1CFB00F54();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v4, v5, v6, v7, v8, v9, v10);
  v37 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2F50);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CreationDateSorter();
  MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA38694();
  sub_1CFB02B2C();
  if (!v2)
  {
    sub_1CF920A48(&qword_1EFBC05A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1CFB02724();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v37, v38);
    sub_1CFA386D8((uint64_t)v32, v36);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CFA383CC()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1CFA383EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CFB028B0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CFA38498()
{
  sub_1CFA38694();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA384C0()
{
  sub_1CFA38694();
  return sub_1CFB02B80();
}

uint64_t sub_1CFA384E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CFA38208(a1, a2);
}

uint64_t sub_1CFA384FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2F60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA38694();
  sub_1CFB02B5C();
  sub_1CFB00F54();
  sub_1CF920A48(&qword_1EFBC05C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1CFB027CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

BOOL sub_1CFA38610()
{
  return (sub_1CFB00F0C() & 1) == 0;
}

BOOL sub_1CFA38638()
{
  return (sub_1CFB00F0C() & 1) == 0;
}

uint64_t sub_1CFA38654()
{
  return sub_1CFB00F0C();
}

uint64_t sub_1CFA38668()
{
  return sub_1CF920A48(&qword_1EFBC2F48, (uint64_t (*)(uint64_t))type metadata accessor for CreationDateSorter, (uint64_t)&unk_1CFB1A844);
}

unint64_t sub_1CFA38694()
{
  unint64_t result;

  result = qword_1EFBC2F58;
  if (!qword_1EFBC2F58)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1A9C8, &type metadata for CreationDateSorter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F58);
  }
  return result;
}

uint64_t sub_1CFA386D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CreationDateSorter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFA3871C()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA3872C(void *a1)
{
  return sub_1CFA38190(a1);
}

uint64_t sub_1CFA38734()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA38744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBFEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFA3878C()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA3879C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA37CA0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for CreationDateSorter.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CFA387F4 + 4 * byte_1CFB1A800[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CFA38814 + 4 * byte_1CFB1A805[v4]))();
}

_BYTE *sub_1CFA387F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CFA38814(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA3881C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA38824(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA3882C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA38834(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CreationDateSorter.CodingKeys()
{
  return &type metadata for CreationDateSorter.CodingKeys;
}

unint64_t sub_1CFA38854()
{
  unint64_t result;

  result = qword_1EFBC2F68;
  if (!qword_1EFBC2F68)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1A9A0, &type metadata for CreationDateSorter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F68);
  }
  return result;
}

unint64_t sub_1CFA3889C()
{
  unint64_t result;

  result = qword_1EFBC2F70;
  if (!qword_1EFBC2F70)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1A910, &type metadata for CreationDateSorter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F70);
  }
  return result;
}

unint64_t sub_1CFA388E4()
{
  unint64_t result;

  result = qword_1EFBC2F78;
  if (!qword_1EFBC2F78)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1A938, &type metadata for CreationDateSorter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F78);
  }
  return result;
}

CoreIDVShared::EnrolledBiometricType_optional __swiftcall EnrolledBiometricType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreIDVShared::EnrolledBiometricType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t EnrolledBiometricType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x444965636146;
  else
    return 0x44496863756F54;
}

uint64_t sub_1CFA389C4(char *a1, char *a2)
{
  return sub_1CFA28A50(*a1, *a2);
}

uint64_t sub_1CFA389D0()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA38A4C()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA38AA4()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::EnrolledBiometricType_optional sub_1CFA38B1C(Swift::String *a1)
{
  return EnrolledBiometricType.init(rawValue:)(*a1);
}

void sub_1CFA38B28(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x44496863756F54;
  if (*v1)
    v2 = 0x444965636146;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t BiometricsHelper.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BiometricsHelper.init()()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1CFA38B7C()
{
  return (unint64_t)sub_1CFA38D28() & 1;
}

void sub_1CFA38B98(char *a1@<X8>)
{
  id v2;
  id v3;
  char v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC12A0]), sel_init);
  sub_1CFA38EF4();
  v3 = objc_msgSend(v2, sel_biometryType);

  if (v3 == (id)2)
    v4 = 1;
  else
    v4 = 2;
  if (v3 == (id)1)
    v4 = 0;
  *a1 = v4;
}

uint64_t sub_1CFA38C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 104))(&var1);
  v1 = 0x44492065636146;
  if ((var1 & 1) == 0)
    v1 = 0x4449206863756F54;
  if (var1 == 2)
    return 0;
  else
    return v1;
}

uint64_t sub_1CFA38C7C()
{
  uint64_t v0;
  char v1;
  uint64_t v3;

  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v0 + 104))(&v3);
  if (v3 == 2)
  {
    v1 = 0;
  }
  else
  {
    if ((v3 & 1) != 0)
      v1 = 1;
    else
      v1 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t BiometricsHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BiometricsHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1CFA38D28()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  char v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC12A0]), sel_init);
  v9[0] = 0;
  v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 2, v9);
  if (!(_DWORD)v1)
  {
    v2 = (void *)v9[0];
    if (v9[0]
      && (type metadata accessor for Code(0),
          v9[0] = -5,
          sub_1CFA39390(),
          v3 = v2,
          v4 = sub_1CFB00C9C(),
          v3,
          (v4 & 1) != 0))
    {

    }
    else
    {
      LOWORD(v9[0]) = 0;
      v5 = v2;
      v6 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v2, 0xD000000000000032, 0x80000001CFB2DA10, (__int16 *)v9, 0, v6, 0xD000000000000059, 0x80000001CFB2DA50, v7, 0x6F63737361507369, 0xED00007465536564, 46);
      swift_willThrow();

    }
  }

  return v1;
}

unint64_t sub_1CFA38EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  id v37[4];

  v37[3] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC12A0]), sel_init);
  v37[0] = 0;
  v12 = (unint64_t)objc_msgSend(v11, sel_canEvaluatePolicy_error_, 1, v37);
  v13 = v37[0];
  if (v37[0])
  {
    v14 = qword_1ED9054E8;
    v15 = v37[0];
    if (v14 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v16, v0);
    v17 = v15;
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v36 = v31;
      v33 = v11;
      *(_DWORD *)v20 = 136446210;
      v30 = v20;
      v21 = objc_msgSend(v17, sel_localizedDescription, v20 + 4);
      v22 = sub_1CFB01A28();
      v32 = v1;
      v23 = v22;
      v34 = v12;
      v25 = v24;

      v35 = sub_1CF9C974C(v23, v25, &v36);
      sub_1CFB021C0();

      v12 = v34;
      swift_bridgeObjectRelease();
      v26 = v30;
      _os_log_impl(&dword_1CF917000, v18, v19, "LA canEvaluatePolicy returned error: %{public}s", v30, 0xCu);
      v27 = v31;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v27, -1, -1);
      MEMORY[0x1D17DA6E4](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v0);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    }
  }
  else
  {

  }
  return v12;
}

unint64_t sub_1CFA391E0()
{
  unint64_t result;

  result = qword_1EFBC2F80;
  if (!qword_1EFBC2F80)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EnrolledBiometricType, &type metadata for EnrolledBiometricType);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EnrolledBiometricType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFA39270 + 4 * byte_1CFB1AA25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFA392A4 + 4 * byte_1CFB1AA20[v4]))();
}

uint64_t sub_1CFA392A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA392AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA392B4);
  return result;
}

uint64_t sub_1CFA392C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA392C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFA392CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA392D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EnrolledBiometricType()
{
  return &type metadata for EnrolledBiometricType;
}

uint64_t dispatch thunk of LocalAuthenticationManaging.isPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() & 1;
}

uint64_t type metadata accessor for BiometricsHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for BiometricsHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiometricsHelper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of BiometricsHelper.isPasscodeSet.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))() & 1;
}

uint64_t dispatch thunk of BiometricsHelper.isEnrolledInBiometrics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of BiometricsHelper.biometricType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BiometricsHelper.biometricTypeString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of BiometricsHelper.requiresDoublePress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

unint64_t sub_1CFA39390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBBDE98;
  if (!qword_1EFBBDE98)
  {
    type metadata accessor for Code(255);
    result = MEMORY[0x1D17DA600](&unk_1CFB054A4, v1);
    atomic_store(result, (unint64_t *)&qword_1EFBBDE98);
  }
  return result;
}

uint64_t ISO18013SessionTranscript.physicalSessionTranscript.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1CFA393FC(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1CFA393FC(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2 >> 60 != 15)
  {
    sub_1CF9239E0(result, a2);
    sub_1CF92F5C8(a3, a4);
    return sub_1CFA3946C(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1CFA3946C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1CF9239E0(result, a2);
    return sub_1CF92F5C8(a3, a4);
  }
  return result;
}

uint64_t ISO18013SessionTranscript.appleSessionTranscript.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = v1[8];
  v3 = v1[9];
  v4 = v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = v1[13];
  v8 = v1[14];
  v9 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1CFA394CC(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1CFA394CC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a4)
  {
    sub_1CF9239E0(result, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1CF9239E0(a7, a8);
  }
  return result;
}

double ISO18013SessionTranscript.init(physicalSessionTranscript:)@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  double result;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  v3 = a1[3];
  a2[2] = a1[2];
  a2[3] = v3;
  result = 0.0;
  a2[4] = 0u;
  a2[5] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  return result;
}

__n128 ISO18013SessionTranscript.init(appleSessionTranscript:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)a2 = xmmword_1CFB05A20;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v4;
  *(_QWORD *)(a2 + 96) = v2;
  *(_QWORD *)(a2 + 104) = v3;
  result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 112) = result;
  return result;
}

uint64_t ISO18013SessionTranscript.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B14();
  if (!v2)
  {
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    Decoder.presentmentType.getter(v5, v6, &v24);
    if (v24 != 2)
    {
      if ((v24 & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = sub_1CFB028B0();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
          goto LABEL_5;
      }
      __swift_project_boxed_opaque_existential_1(v32, v33);
      sub_1CFA3B200();
      sub_1CFB02910();
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v34 = v24;
      v22 = v26;
      v23 = v25;
      v20 = v28;
      v21 = v27;
      v8 = v30;
      v19 = v29;
      v10 = 0xF000000000000000;
      v9 = v31;
      goto LABEL_8;
    }
LABEL_5:
    __swift_project_boxed_opaque_existential_1(v32, v33);
    sub_1CFA3B1BC();
    sub_1CFB02910();
    v34 = 0;
    v22 = 0;
    v23 = 0;
    v20 = 0;
    v21 = 0;
    v8 = 0;
    v9 = 0;
    v10 = v25;
    v18 = v26;
    v19 = 0;
    v16 = v24;
    v17 = v27;
    v11 = v29;
    v15 = v28;
    v12 = v30;
    v13 = v31;
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    *a2 = v16;
    a2[1] = v10;
    a2[2] = v18;
    a2[3] = v17;
    a2[4] = v15;
    a2[5] = v11;
    a2[6] = v12;
    a2[7] = v13;
    a2[8] = v34;
    a2[9] = v23;
    a2[10] = v22;
    a2[11] = v21;
    a2[12] = v20;
    a2[13] = v19;
    a2[14] = v8;
    a2[15] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013SessionTranscript.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  uint64_t v40;
  unint64_t v41;

  v22 = *v1;
  v41 = v1[1];
  v20 = v1[2];
  v21 = v1[3];
  v25 = v1[5];
  v26 = v1[4];
  v23 = v1[7];
  v24 = v1[6];
  v28 = v1[9];
  v29 = v1[8];
  v3 = v1[11];
  v27 = v1[10];
  v4 = v1[12];
  v5 = v1[13];
  v7 = v1[14];
  v6 = v1[15];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B50();
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  Encoder.presentmentType.getter(v8, v9, &v31);
  if (v31 == 2)
    goto LABEL_4;
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
LABEL_4:
      if (v41 >> 60 == 15)
      {
        LOWORD(v31) = 443;
        v11 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        v12 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000043, 0x80000001CFB2DB90, (__int16 *)&v31, 0, v11, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v13, 0x742865646F636E65, 0xEB00000000293A6FLL, 70);
LABEL_13:
        swift_willThrow();
        goto LABEL_14;
      }
      v31 = v22;
      v32 = v41;
      v33 = v20;
      v34 = v21;
      v35 = v26;
      v36 = v25;
      v37 = v24;
      v38 = v23;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
      sub_1CFA3B244();
      goto LABEL_10;
    }
  }
  if (!v3)
  {
    LOWORD(v31) = 439;
    v14 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v12 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000034, 0x80000001CFB2DBE0, (__int16 *)&v31, 0, v14, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v15, 0x742865646F636E65, 0xEB00000000293A6FLL, 62);
    goto LABEL_13;
  }
  v31 = v29;
  v32 = v28;
  v33 = v27;
  v34 = v3;
  v35 = v4;
  v36 = v5;
  v37 = v7;
  v38 = v6;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  sub_1CFA3B288();
LABEL_10:
  sub_1CFB02970();
  if (v30)
  {
    v12 = v30;
LABEL_14:
    LOWORD(v31) = 0;
    v16 = v12;
    v17 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v12, 0, 0xE000000000000000, (__int16 *)&v31, 0, v17, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v18, 0x742865646F636E65, 0xEB00000000293A6FLL, 74);
    swift_willThrow();

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1CFA39D1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ISO18013SessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1CFA39D30(_QWORD *a1)
{
  return ISO18013SessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013PhysicalSessionTranscript.readerKeyBytes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1CF92F5C8(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t ISO18013PhysicalSessionTranscript.handover.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1CFA3946C(v2, v3, v4, v5);
}

uint64_t ISO18013PhysicalSessionTranscript.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v5 = sub_1CFB02820();
  if ((v6 & 1) != 0 || v5 != 2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1CF92399C();
    sub_1CFB02838();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1CFB02838();
    v21 = v20;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1CFA3B2CC();
    sub_1CFB02814();
    v8 = v15;
    v9 = v14;
    v12 = v15;
    v10 = v14;
    v11 = v14;
    v21 = v15;
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1CF92399C();
    sub_1CFB02838();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1CFA3B2CC();
    sub_1CFB02838();
    v8 = v15;
    v9 = v14;
    v10 = 0;
    v11 = v14;
    v21 = v15;
    v12 = 0xF000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v12;
  v13 = v21;
  a2[4] = v11;
  a2[5] = v13;
  a2[6] = v16;
  a2[7] = v17;
  sub_1CF9239E0(v9, v8);
  sub_1CF92F5C8(v10, v12);
  sub_1CFA3946C(v11, v21, v16, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1CF923A24(v9, v8);
  sub_1CF931AB0(v10, v12);
  return sub_1CFA3B310(v11, v21, v16, v17);
}

uint64_t ISO18013PhysicalSessionTranscript.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;

  v3 = v1[3];
  v4 = v1[5];
  v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  sub_1CFA3B34C();
  sub_1CFB02868();
  if (!v2)
  {
    if (v3 >> 60 != 15)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1CFB02868();
    }
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    if (v4 >> 60 == 15)
    {
      sub_1CFB02874();
    }
    else
    {
      sub_1CFA3B390();
      sub_1CFB02868();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1CFA3A268@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013PhysicalSessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1CFA3A27C(_QWORD *a1)
{
  return ISO18013PhysicalSessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013AppleSessionTranscript.handover.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;

  v2 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v8 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  sub_1CF9239E0(v2, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1CF9239E0(v6, v7);
}

uint64_t ISO18013AppleSessionTranscript.init(nonce:merchantID:teamID:encryptionKeyHash:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t ISO18013AppleHandover.init(nonce:merchantID:teamID:encryptionKeyHash:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

__n128 ISO18013AppleSessionTranscript.init(handover:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v2;
  *(_QWORD *)(a2 + 40) = v3;
  result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t ISO18013AppleSessionTranscript.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  uint64_t v20;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    v5 = sub_1CFB02850();
    if ((v5 & 1) != 0)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      v6 = sub_1CFB02850();
      if ((v6 & 1) != 0)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
        sub_1CFA3B3D4();
        sub_1CFB02838();
        v15 = v16[1];
        v14 = v16[2];
        v7 = v17;
        v8 = v18;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        *(_OWORD *)a2 = v16[0];
        *(_OWORD *)(a2 + 16) = v15;
        *(_OWORD *)(a2 + 32) = v14;
        *(_QWORD *)(a2 + 48) = v7;
        *(_QWORD *)(a2 + 56) = v8;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      LOWORD(v16[0]) = 439;
      v12 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001CFB2DC50, (__int16 *)v16, 0, v12, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v13, 0x6F72662874696E69, 0xEB00000000293A6DLL, 145);
    }
    else
    {
      LOWORD(v16[0]) = 439;
      v9 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002CLL, 0x80000001CFB2DC20, (__int16 *)v16, 0, v9, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v10, 0x6F72662874696E69, 0xEB00000000293A6DLL, 142);
    }
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013AppleSessionTranscript.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFB02874();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFB02874();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFA3B418();
    sub_1CFB02868();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1CFA3A70C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013AppleSessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1CFA3A720(_QWORD *a1)
{
  return ISO18013AppleSessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013NFCHandover.handoverSelectMessage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1CF9239E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t ISO18013NFCHandover.handoverRequestMessage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1CF92F5C8(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t ISO18013NFCHandover.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1CF92399C();
  sub_1CFB02838();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1CF9239E0(v6, v7);
  sub_1CFB02814();
  sub_1CF92F5C8(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  sub_1CF9239E0(v6, v7);
  sub_1CF92F5C8(v6, v7);
  sub_1CF931AB0(v6, v7);
  sub_1CF923A24(v6, v7);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v6;
  a2[3] = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1CF923A24(v6, v7);
  return sub_1CF931AB0(v6, v7);
}

uint64_t ISO18013NFCHandover.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[24];
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_1CF9319D0();
  sub_1CFB02868();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    if (v3 >> 60 == 15)
      sub_1CFB02874();
    else
      sub_1CFB02868();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_1CFA3AA80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013NFCHandover.init(from:)(a1, a2);
}

uint64_t sub_1CFA3AA94(_QWORD *a1)
{
  return ISO18013NFCHandover.encode(to:)(a1);
}

uint64_t ISO18013AppleHandover.nonce.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1CF9239E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t ISO18013AppleHandover.merchantID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013AppleHandover.teamID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013AppleHandover.encryptionKeyHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t ISO18013AppleHandover.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  uint64_t v25;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    if (sub_1CFB0282C() == 0xD00000000000001CLL && v5 == 0x80000001CFB2DC80 || (sub_1CFB028B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      sub_1CF92399C();
      sub_1CFB02838();
      v6 = v22;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      sub_1CF9239E0(v21, v22);
      v7 = sub_1CFB0282C();
      v9 = v8;
      v20 = v7;
      v25 = v21;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      swift_bridgeObjectRetain();
      v19 = v9;
      v18 = sub_1CFB0282C();
      v13 = v12;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      swift_bridgeObjectRetain();
      sub_1CFB02838();
      v14 = v21;
      v15 = v22;
      sub_1CF9239E0(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      v16 = v25;
      sub_1CF9239E0(v25, v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CF9239E0(v21, v22);
      sub_1CF923A24(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CF923A24(v16, v22);
      *a2 = v16;
      a2[1] = v6;
      a2[2] = v20;
      a2[3] = v19;
      a2[4] = v18;
      a2[5] = v13;
      a2[6] = v14;
      a2[7] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      sub_1CF923A24(v16, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1CF923A24(v14, v15);
    }
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    v21 = 0xD0000000000001B7;
    v22 = 0x80000001CFB2DCA0;
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    v10 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001ELL, 0x80000001CFB2DCA0, (__int16 *)&v21, 0, v10, 0xD00000000000006DLL, 0x80000001CFB2DAF0, v11, 0x6F72662874696E69, 0xEB00000000293A6DLL, 210);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013AppleHandover.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFB0285C();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CF9319D0();
    sub_1CFB02868();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFB0285C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFB0285C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFB02868();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1CFA3B194@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013AppleHandover.init(from:)(a1, a2);
}

uint64_t sub_1CFA3B1A8(_QWORD *a1)
{
  return ISO18013AppleHandover.encode(to:)(a1);
}

unint64_t sub_1CFA3B1BC()
{
  unint64_t result;

  result = qword_1EFBC2F88;
  if (!qword_1EFBC2F88)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013PhysicalSessionTranscript, &type metadata for ISO18013PhysicalSessionTranscript);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F88);
  }
  return result;
}

unint64_t sub_1CFA3B200()
{
  unint64_t result;

  result = qword_1EFBC2F90;
  if (!qword_1EFBC2F90)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013AppleSessionTranscript, &type metadata for ISO18013AppleSessionTranscript);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F90);
  }
  return result;
}

unint64_t sub_1CFA3B244()
{
  unint64_t result;

  result = qword_1EFBC2F98;
  if (!qword_1EFBC2F98)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013PhysicalSessionTranscript, &type metadata for ISO18013PhysicalSessionTranscript);
    atomic_store(result, (unint64_t *)&qword_1EFBC2F98);
  }
  return result;
}

unint64_t sub_1CFA3B288()
{
  unint64_t result;

  result = qword_1EFBC2FA0;
  if (!qword_1EFBC2FA0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013AppleSessionTranscript, &type metadata for ISO18013AppleSessionTranscript);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FA0);
  }
  return result;
}

unint64_t sub_1CFA3B2CC()
{
  unint64_t result;

  result = qword_1EFBC2FA8;
  if (!qword_1EFBC2FA8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013NFCHandover, &type metadata for ISO18013NFCHandover);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FA8);
  }
  return result;
}

uint64_t sub_1CFA3B310(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1CF923A24(result, a2);
    return sub_1CF931AB0(a3, a4);
  }
  return result;
}

unint64_t sub_1CFA3B34C()
{
  unint64_t result;

  result = qword_1EFBC2FB0;
  if (!qword_1EFBC2FB0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for TaggedCBOR, &type metadata for TaggedCBOR);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FB0);
  }
  return result;
}

unint64_t sub_1CFA3B390()
{
  unint64_t result;

  result = qword_1EFBC2FB8;
  if (!qword_1EFBC2FB8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013NFCHandover, &type metadata for ISO18013NFCHandover);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FB8);
  }
  return result;
}

unint64_t sub_1CFA3B3D4()
{
  unint64_t result;

  result = qword_1EFBC2FC0;
  if (!qword_1EFBC2FC0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013AppleHandover, &type metadata for ISO18013AppleHandover);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FC0);
  }
  return result;
}

unint64_t sub_1CFA3B418()
{
  unint64_t result;

  result = qword_1EFBC2FC8;
  if (!qword_1EFBC2FC8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013AppleHandover, &type metadata for ISO18013AppleHandover);
    atomic_store(result, (unint64_t *)&qword_1EFBC2FC8);
  }
  return result;
}

uint64_t *destroy for ISO18013SessionTranscript(uint64_t *result)
{
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = result;
  v2 = result[1];
  if (v2 >> 60 != 15)
  {
    result = (uint64_t *)sub_1CF923A24(*result, v2);
    v3 = v1[3];
    if (v3 >> 60 != 15)
      result = (uint64_t *)sub_1CF923A24(v1[2], v3);
    v4 = v1[5];
    if (v4 >> 60 != 15)
    {
      result = (uint64_t *)sub_1CF923A24(v1[4], v4);
      v5 = v1[7];
      if (v5 >> 60 != 15)
        result = (uint64_t *)sub_1CF923A24(v1[6], v5);
    }
  }
  if (v1[11])
  {
    sub_1CF923A24(v1[8], v1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t *)sub_1CF923A24(v1[14], v1[15]);
  }
  return result;
}

uint64_t initializeWithCopy for ISO18013SessionTranscript(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
  else
  {
    v8 = *a2;
    sub_1CF9239E0(*a2, a2[1]);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v4;
    v9 = a2 + 2;
    v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      v11 = *v9;
      sub_1CF9239E0(*v9, a2[3]);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v10;
    }
    v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      v14 = a2[4];
      sub_1CF9239E0(v14, a2[5]);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = a2 + 6;
      v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
      else
      {
        v22 = *v15;
        sub_1CF9239E0(*v15, a2[7]);
        *(_QWORD *)(a1 + 48) = v22;
        *(_QWORD *)(a1 + 56) = v16;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
LABEL_14:
      v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      return a1;
    }
    v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
LABEL_12:
  v17 = a2[8];
  v18 = a2[9];
  sub_1CF9239E0(v17, v18);
  *(_QWORD *)(a1 + 64) = v17;
  *(_QWORD *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = v7;
  v19 = a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v19;
  v21 = a2[14];
  v20 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v21, v20);
  *(_QWORD *)(a1 + 112) = v21;
  *(_QWORD *)(a1 + 120) = v20;
  return a1;
}

uint64_t assignWithCopy for ISO18013SessionTranscript(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      v5 = *a2;
      v6 = a2[1];
      v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    v11 = *(_QWORD *)a2;
    sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v4;
    v12 = (uint64_t *)(a2 + 1);
    v13 = *((_QWORD *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      v20 = *v12;
      sub_1CF9239E0(*v12, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v13;
    }
    v21 = *((_QWORD *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    v29 = *((_QWORD *)a2 + 4);
    sub_1CF9239E0(v29, v21);
    *(_QWORD *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v21;
    v30 = a2 + 3;
    v31 = *((_QWORD *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    v33 = *(_QWORD *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
    v8 = a2[3];
    v10 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)a2;
  sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1CF923A24(v15, v16);
  v17 = (uint64_t *)(a2 + 1);
  v18 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  v23 = *v17;
  sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v18;
  sub_1CF923A24(v24, v25);
LABEL_18:
  v26 = (_OWORD *)(a1 + 32);
  v27 = a2 + 2;
  v21 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      v28 = a2[3];
      *v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    v32 = a2[3];
    *v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  v34 = *((_QWORD *)a2 + 4);
  sub_1CF9239E0(v34, *((_QWORD *)a2 + 5));
  v35 = *(_QWORD *)(a1 + 32);
  v36 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v34;
  *(_QWORD *)(a1 + 40) = v21;
  sub_1CF923A24(v35, v36);
  v37 = (uint64_t *)(a2 + 3);
  v31 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      v33 = *v37;
LABEL_26:
      sub_1CF9239E0(v33, v31);
      *(_QWORD *)(a1 + 48) = v33;
      *(_QWORD *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  v38 = *v37;
  sub_1CF9239E0(*v37, *((_QWORD *)a2 + 7));
  v39 = *(_QWORD *)(a1 + 48);
  v40 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v38;
  *(_QWORD *)(a1 + 56) = v31;
  sub_1CF923A24(v39, v40);
LABEL_34:
  v41 = (_OWORD *)(a1 + 64);
  v42 = a2 + 4;
  v43 = *((_QWORD *)a2 + 11);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v43)
    {
      v44 = *((_QWORD *)a2 + 8);
      v45 = *((_QWORD *)a2 + 9);
      sub_1CF9239E0(v44, v45);
      v46 = *(_QWORD *)(a1 + 64);
      v47 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v44;
      *(_QWORD *)(a1 + 72) = v45;
      sub_1CF923A24(v46, v47);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49 = *((_QWORD *)a2 + 14);
      v48 = *((_QWORD *)a2 + 15);
      sub_1CF9239E0(v49, v48);
      v50 = *(_QWORD *)(a1 + 112);
      v51 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v49;
      *(_QWORD *)(a1 + 120) = v48;
      sub_1CF923A24(v50, v51);
    }
    else
    {
      sub_1CFA3BAD0(a1 + 64);
      v56 = a2[7];
      v58 = *v42;
      v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    v52 = *((_QWORD *)a2 + 8);
    v53 = *((_QWORD *)a2 + 9);
    sub_1CF9239E0(v52, v53);
    *(_QWORD *)(a1 + 64) = v52;
    *(_QWORD *)(a1 + 72) = v53;
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    v55 = *((_QWORD *)a2 + 14);
    v54 = *((_QWORD *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF9239E0(v55, v54);
    *(_QWORD *)(a1 + 112) = v55;
    *(_QWORD *)(a1 + 120) = v54;
  }
  else
  {
    v59 = *v42;
    v60 = a2[5];
    v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  return a1;
}

uint64_t *sub_1CFA3BA78(uint64_t *a1)
{
  destroy for ISO18013NFCHandover(a1);
  return a1;
}

uint64_t *sub_1CFA3BAA4(uint64_t *a1)
{
  destroy for ISO18013PhysicalSessionTranscript(a1);
  return a1;
}

uint64_t sub_1CFA3BAD0(uint64_t a1)
{
  destroy for ISO18013AppleHandover(a1, &type metadata for ISO18013AppleSessionTranscript);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for ISO18013SessionTranscript(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1CF923A24(v8, v4);
  v9 = (_OWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  if (v10 >> 60 == 15)
    goto LABEL_8;
  v11 = *(_QWORD *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 24) = v11;
  sub_1CF923A24(v12, v10);
LABEL_10:
  v13 = *(_QWORD *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v14;
  sub_1CF923A24(v16, v13);
  v17 = (_OWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  if (v18 >> 60 == 15)
    goto LABEL_17;
  v19 = *(_QWORD *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  v20 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 56) = v19;
  sub_1CF923A24(v20, v18);
LABEL_19:
  if (!*(_QWORD *)(a1 + 88))
  {
LABEL_23:
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    return a1;
  }
  v21 = *(_QWORD *)(a2 + 88);
  if (!v21)
  {
    sub_1CFA3BAD0(a1 + 64);
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1CF923A24(v22, v23);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1CF923A24(v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013SessionTranscript(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013SessionTranscript(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 88) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionTranscript()
{
  return &type metadata for ISO18013SessionTranscript;
}

uint64_t destroy for ISO18013PhysicalSessionTranscript(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_1CF923A24(*a1, a1[1]);
  v3 = a1[3];
  if (v3 >> 60 != 15)
    result = sub_1CF923A24(a1[2], v3);
  v4 = a1[5];
  if (v4 >> 60 != 15)
  {
    result = sub_1CF923A24(a1[4], v4);
    v5 = a1[7];
    if (v5 >> 60 != 15)
      return sub_1CF923A24(a1[6], v5);
  }
  return result;
}

uint64_t initializeWithCopy for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1CF9239E0(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = (uint64_t *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1CF9239E0(*v6, *(_QWORD *)(a2 + 24));
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v7;
  }
  v9 = *(_QWORD *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 32);
    sub_1CF9239E0(v11, *(_QWORD *)(a2 + 40));
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v9;
    v12 = (uint64_t *)(a2 + 48);
    v13 = *(_QWORD *)(a2 + 56);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
    }
    else
    {
      v14 = *v12;
      sub_1CF9239E0(*v12, v13);
      *(_QWORD *)(a1 + 48) = v14;
      *(_QWORD *)(a1 + 56) = v13;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1CF9239E0(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1CF923A24(v6, v7);
  v8 = (uint64_t *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      v10 = *v8;
      sub_1CF9239E0(*v8, *(_QWORD *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  v11 = *v8;
  sub_1CF9239E0(*v8, *(_QWORD *)(a2 + 24));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v9;
  sub_1CF923A24(v12, v13);
LABEL_8:
  v14 = (_OWORD *)(a1 + 32);
  v15 = (_OWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v16 >> 60 == 15)
    {
      sub_1CFA3BA78((uint64_t *)(a1 + 32));
      v18 = *(_OWORD *)(a2 + 48);
      *v14 = *v15;
      *(_OWORD *)(a1 + 48) = v18;
      return a1;
    }
    v22 = *(_QWORD *)(a2 + 32);
    sub_1CF9239E0(v22, *(_QWORD *)(a2 + 40));
    v23 = *(_QWORD *)(a1 + 32);
    v24 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v22;
    *(_QWORD *)(a1 + 40) = v16;
    sub_1CF923A24(v23, v24);
    v25 = (uint64_t *)(a2 + 48);
    v21 = *(_QWORD *)(a2 + 56);
    if (*(_QWORD *)(a1 + 56) >> 60 == 15)
    {
      if (v21 >> 60 != 15)
      {
        v26 = *v25;
        goto LABEL_19;
      }
    }
    else
    {
      if (v21 >> 60 != 15)
      {
        v27 = *v25;
        sub_1CF9239E0(*v25, v21);
        v28 = *(_QWORD *)(a1 + 48);
        v29 = *(_QWORD *)(a1 + 56);
        *(_QWORD *)(a1 + 48) = v27;
        *(_QWORD *)(a1 + 56) = v21;
        sub_1CF923A24(v28, v29);
        return a1;
      }
      sub_1CF930DB8(a1 + 48);
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v25;
    return a1;
  }
  if (v16 >> 60 != 15)
  {
    v19 = *(_QWORD *)(a2 + 32);
    sub_1CF9239E0(v19, *(_QWORD *)(a2 + 40));
    *(_QWORD *)(a1 + 32) = v19;
    *(_QWORD *)(a1 + 40) = v16;
    v20 = (_OWORD *)(a2 + 48);
    v21 = *(_QWORD *)(a2 + 56);
    if (v21 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v20;
      return a1;
    }
    v26 = *(_QWORD *)v20;
LABEL_19:
    sub_1CF9239E0(v26, v21);
    *(_QWORD *)(a1 + 48) = v26;
    *(_QWORD *)(a1 + 56) = v21;
    return a1;
  }
  v17 = *(_OWORD *)(a2 + 48);
  *v14 = *v15;
  *(_OWORD *)(a1 + 48) = v17;
  return a1;
}

uint64_t assignWithTake for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v4, v5);
  v6 = (_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  if (v7 >> 60 == 15)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 24);
  if (v8 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 24) = v8;
  sub_1CF923A24(v9, v7);
LABEL_6:
  v10 = *(_QWORD *)(a1 + 40);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    return a1;
  }
  v11 = *(_QWORD *)(a2 + 40);
  if (v11 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v11;
  sub_1CF923A24(v13, v10);
  v14 = (_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  if (v15 >> 60 != 15)
  {
    v16 = *(_QWORD *)(a2 + 56);
    if (v16 >> 60 != 15)
    {
      v17 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = *v14;
      *(_QWORD *)(a1 + 56) = v16;
      sub_1CF923A24(v17, v15);
      return a1;
    }
    sub_1CF930DB8(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013PhysicalSessionTranscript(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ISO18013PhysicalSessionTranscript(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013PhysicalSessionTranscript()
{
  return &type metadata for ISO18013PhysicalSessionTranscript;
}

ValueMetadata *type metadata accessor for ISO18013AppleSessionTranscript()
{
  return &type metadata for ISO18013AppleSessionTranscript;
}

uint64_t destroy for ISO18013NFCHandover(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;

  result = sub_1CF923A24(*a1, a1[1]);
  v3 = a1[3];
  if (v3 >> 60 != 15)
    return sub_1CF923A24(a1[2], v3);
  return result;
}

uint64_t initializeWithCopy for ISO18013NFCHandover(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2 + 2;
  v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1CF9239E0(*v6, v7);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v7;
  }
  return a1;
}

uint64_t *assignWithCopy for ISO18013NFCHandover(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CF923A24(v6, v7);
  v8 = a2 + 2;
  v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      v11 = *v8;
      sub_1CF9239E0(*v8, v9);
      v12 = a1[2];
      v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_1CF923A24(v12, v13);
      return a1;
    }
    sub_1CF930DB8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    return a1;
  }
  v10 = *v8;
  sub_1CF9239E0(*v8, v9);
  a1[2] = v10;
  a1[3] = v9;
  return a1;
}

uint64_t *assignWithTake for ISO18013NFCHandover(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v4, v5);
  v6 = (uint64_t *)(a2 + 16);
  v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_1CF923A24(v9, v7);
      return a1;
    }
    sub_1CF930DB8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013NFCHandover(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ISO18013NFCHandover(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013NFCHandover()
{
  return &type metadata for ISO18013NFCHandover;
}

uint64_t destroy for DigitalPresentmentResponseCryptor(uint64_t a1)
{
  sub_1CF923A24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1CF923A24(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

uint64_t *initializeWithCopy for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v9 = a2[6];
  v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v9, v8);
  a1[6] = v9;
  a1[7] = v8;
  return a1;
}

uint64_t *assignWithCopy for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CF923A24(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a2[6];
  v8 = a2[7];
  sub_1CF9239E0(v9, v8);
  v10 = a1[6];
  v11 = a1[7];
  a1[6] = v9;
  a1[7] = v8;
  sub_1CF923A24(v10, v11);
  return a1;
}

uint64_t *assignWithTake for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  v8 = a1[6];
  v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_1CF923A24(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentResponseCryptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentResponseCryptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013AppleHandover()
{
  return &type metadata for ISO18013AppleHandover;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.age.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.isoBirthDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 20);
  v4 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder()
{
  uint64_t result;

  result = qword_1EFBC3038;
  if (!qword_1EFBC3038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.japanBirthDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.birthDateComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 28);
  v4 = sub_1CFB00C3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.fullName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.individualNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.isoSex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 40));
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.japanSex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.localGovernmentCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.portrait.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 52);
  v2 = *(_QWORD *)v1;
  sub_1CF9239E0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.residentAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.payloadElements.getter()
{
  type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder();
  return swift_bridgeObjectRetain();
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  void (*v151)(char *, char *, uint64_t);
  void (*v152)(char *, _QWORD, uint64_t, uint64_t);
  char *v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  void (*v159)(char *, uint64_t, uint64_t);
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  void (**v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v171;
  void *v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t inited;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  int *v193;
  uint64_t v194;
  char *v195;
  _QWORD *v196;
  uint64_t v197;
  _QWORD *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t result;
  BOOL v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  void (*v211)(char *, uint64_t);
  uint64_t v212;
  char *v213;
  uint64_t *v214;
  char *v215;
  char *v216;
  unint64_t v217;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (**v227)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v228;
  char *v229;
  char *v230;
  unint64_t v231;
  char *v232;
  char *v233;
  _QWORD *v234;
  char *v235;
  _QWORD *v236;
  char *v237;
  _QWORD *v238;
  char *v239;
  char *v240;
  char *v241;
  _QWORD *v242;
  char *v243;
  char *v244;
  unint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  __int128 v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  unint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  char *v272;
  void (**v273)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  void (**v281)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  __int128 v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;

  v280 = sub_1CFB00D50();
  v279 = *(_QWORD *)(v280 - 8);
  MEMORY[0x1E0C80A78](v280, v2, v3, v4, v5, v6, v7, v8);
  v278 = (char *)&v253 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CFB00FFC();
  MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14, v15, v16, v17);
  v277 = (char *)&v253 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF630);
  v275 = *(_QWORD *)(v276 - 8);
  v26 = MEMORY[0x1E0C80A78](v276, v19, v20, v21, v22, v23, v24, v25);
  v274 = (char *)&v253 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26, v28, v29, v30, v31, v32, v33, v34);
  v273 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v253 - v35);
  v286 = type metadata accessor for CredentialBuilderPayloadDetails.Element(0);
  *(_QWORD *)&v287 = *(_QWORD *)(v286 - 8);
  MEMORY[0x1E0C80A78](v286, v36, v37, v38, v39, v40, v41, v42);
  v272 = (char *)&v253 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v284 = sub_1CFB00DEC();
  v281 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 - 8);
  MEMORY[0x1E0C80A78](v284, v44, v45, v46, v47, v48, v49, v50);
  v271 = (char *)&v253 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  v60 = MEMORY[0x1E0C80A78](v52, v53, v54, v55, v56, v57, v58, v59);
  v269 = (uint64_t)&v253 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60, v62, v63, v64, v65, v66, v67, v68);
  *(_QWORD *)&v282 = (char *)&v253 - v69;
  v283 = sub_1CFB00C3C();
  v268 = *(_QWORD *)(v283 - 8);
  MEMORY[0x1E0C80A78](v283, v70, v71, v72, v73, v74, v75, v76);
  v267 = (char *)&v253 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  MEMORY[0x1E0C80A78](v78, v79, v80, v81, v82, v83, v84, v85);
  v264 = (char *)&v253 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = sub_1CFB00F54();
  v263 = *(char **)(v285 - 8);
  v94 = MEMORY[0x1E0C80A78](v285, v87, v88, v89, v90, v91, v92, v93);
  v266 = (char *)&v253 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v94, v96, v97, v98, v99, v100, v101, v102);
  v265 = (char *)&v253 - v103;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2FD0);
  MEMORY[0x1E0C80A78](v104, v105, v106, v107, v108, v109, v110, v111);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2FD8);
  MEMORY[0x1E0C80A78](v112, v113, v114, v115, v116, v117, v118, v119);
  v121 = (char *)&v253 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1CFB01008();
  v123 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122, v124, v125, v126, v127, v128, v129, v130);
  v132 = (char *)&v253 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1CFB01068();
  v134 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133, v135, v136, v137, v138, v139, v140, v141);
  v143 = (char *)&v253 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder();
  v145 = (uint64_t *)((char *)a1 + *(int *)(v144 + 24));
  v256 = (unint64_t)"red12CoreIDVAsset";
  *v145 = 0xD000000000000014;
  v145[1] = 0x80000001CFB27EC0;
  v146 = (char *)a1 + *(int *)(v144 + 32);
  strcpy(v146, "Kelly Garcia");
  v146[13] = 0;
  *((_WORD *)v146 + 7) = -5120;
  v147 = (uint64_t *)((char *)a1 + *(int *)(v144 + 36));
  *v147 = 0x3837363534333231;
  v147[1] = 0xE900000000000039;
  *(uint64_t *)((char *)a1 + *(int *)(v144 + 40)) = 2;
  v148 = (uint64_t *)((char *)a1 + *(int *)(v144 + 44));
  *v148 = 50;
  v148[1] = 0xE100000000000000;
  v149 = (uint64_t *)((char *)a1 + *(int *)(v144 + 48));
  *v149 = 0x3233343536373839;
  v149[1] = 0xE900000000000031;
  v150 = (uint64_t *)((char *)a1 + *(int *)(v144 + 56));
  v258 = (unint64_t)"unknown AppleHandover version ";
  *v150 = 0xD000000000000029;
  v150[1] = 0x80000001CFB2DCC0;
  (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v132, *MEMORY[0x1E0CB0EF8], v122);
  sub_1CFB01014();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v122);
  v151 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v270 = v143;
  v151(v121, v143, v133);
  v260 = v134;
  v152 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56);
  v153 = v263;
  v261 = v133;
  v154 = v133;
  v155 = a1;
  v156 = (uint64_t)v264;
  v152(v121, 0, 1, v154);
  sub_1CFB01074();
  v157 = v285;
  sub_1CFB00C30();
  sub_1CFB00C0C();
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v153 + 6))(v156, 1, v157) == 1)
  {
    v158 = v265;
    sub_1CFB00EDC();
    sub_1CF931B1C(v156, &qword_1ED904838);
    v159 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v153 + 4);
  }
  else
  {
    v159 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v153 + 4);
    v158 = v265;
    v159(v265, v156, v157);
  }
  v160 = (char *)v155 + *(int *)(v144 + 20);
  v159(v160, (uint64_t)v158, v157);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF610);
  v161 = sub_1CFB0105C();
  v162 = *(_QWORD *)(v161 - 8);
  v163 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
  v164 = swift_allocObject();
  v257 = xmmword_1CFB05840;
  *(_OWORD *)(v164 + 16) = xmmword_1CFB05840;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v162 + 104))(v164 + v163, *MEMORY[0x1E0CB1158], v161);
  sub_1CF97FF94(v164);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v165 = v266;
  sub_1CFB00F48();
  v166 = v267;
  v264 = v160;
  sub_1CFB01020();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v153 + 1))(v165, v157);
  v167 = sub_1CFB00C18();
  LOBYTE(v165) = v168;
  (*(void (**)(char *, uint64_t))(v268 + 8))(v166, v283);
  if ((v165 & 1) != 0)
    v169 = -1;
  else
    v169 = v167;
  v283 = v169;
  *v155 = v169;
  v170 = v281;
  if (qword_1EFBBD458 != -1)
LABEL_25:
    swift_once();
  v171 = (void *)qword_1EFBED260;
  v172 = (void *)sub_1CFB01A04();
  v173 = (void *)sub_1CFB01A04();
  v174 = objc_msgSend(v171, sel_URLForResource_withExtension_, v172, v173);

  v175 = v282;
  if (v174)
  {
    sub_1CFB00DC8();

    v176 = 0;
  }
  else
  {
    v176 = 1;
  }
  v177 = v284;
  v178 = v269;
  v170[7](v175, v176, 1, v284);
  sub_1CF9801EC(v175, v178);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v170[6])(v178, 1, v177) == 1)
  {
    v179 = 0;
    v180 = 0xC000000000000000;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v170[4])(v271, v178, v177);
    v179 = sub_1CFB00E04();
    v180 = v181;
    ((void (*)(char *, uint64_t))v170[1])(v271, v177);
  }
  v268 = v180;
  v269 = v179;
  sub_1CF931B1C(v175, &qword_1EFBC5440);
  v259 = v144;
  v182 = *(int *)(v144 + 52);
  v262 = v155;
  v183 = (uint64_t *)((char *)v155 + v182);
  *v183 = v179;
  v183[1] = v180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF618);
  inited = swift_initStackObject();
  v282 = xmmword_1CFB0DD90;
  *(_OWORD *)(inited + 16) = xmmword_1CFB0DD90;
  *(_QWORD *)(inited + 32) = 0x2E6F73692E67726FLL;
  *(_QWORD *)(inited + 40) = 0xEF312E3032323332;
  v267 = (char *)inited;
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF1A8);
  v186 = *(_QWORD *)(v287 + 72);
  v187 = *(unsigned __int8 *)(v287 + 80);
  v188 = (v187 + 32) & ~v187;
  v255 = 3 * v186;
  v266 = (char *)v185;
  v265 = (char *)(v187 | 7);
  v189 = swift_allocObject();
  *(_OWORD *)(v189 + 16) = v282;
  v284 = v188;
  v254 = v189;
  v190 = (_QWORD *)(v189 + v188);
  v191 = v286;
  v192 = v189 + v188 + *(int *)(v286 + 20);
  v193 = (int *)type metadata accessor for AnyCodable();
  v194 = v192 + v193[9];
  (*((void (**)(uint64_t, char *, uint64_t))v153 + 2))(v194, v264, v157);
  *(_BYTE *)v192 = 2;
  *(_QWORD *)(v192 + 8) = 0;
  *(_BYTE *)(v192 + 16) = 1;
  *(_QWORD *)(v192 + 24) = 0;
  *(_BYTE *)(v192 + 32) = 1;
  *(_DWORD *)(v192 + 36) = 0;
  *(_BYTE *)(v192 + 40) = 1;
  *(_QWORD *)(v192 + 48) = 0;
  *(_BYTE *)(v192 + 56) = 1;
  v195 = (char *)*((_QWORD *)v153 + 7);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v195)(v194, 0, 1, v157);
  v196 = (_QWORD *)(v192 + v193[10]);
  *v196 = 0;
  v196[1] = 0;
  *(_QWORD *)(v192 + v193[11]) = 0;
  *(_QWORD *)(v192 + v193[12]) = 0;
  v197 = v193[13];
  v287 = xmmword_1CFB05A20;
  *(_OWORD *)(v192 + v197) = xmmword_1CFB05A20;
  *v190 = 0x61645F6874726962;
  v190[1] = 0xEA00000000006574;
  *(_QWORD *)&v282 = v186;
  v198 = (_QWORD *)((char *)v190 + v186);
  v199 = (char *)v190 + v186 + *(int *)(v191 + 20);
  *v199 = 2;
  *((_QWORD *)v199 + 1) = 2;
  v199[16] = 0;
  *((_QWORD *)v199 + 3) = 0;
  v199[32] = 1;
  *((_DWORD *)v199 + 9) = 0;
  v199[40] = 1;
  *((_QWORD *)v199 + 6) = 0;
  v199[56] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v195)(&v199[v193[9]], 1, 1, v157);
  v200 = &v199[v193[10]];
  *(_QWORD *)v200 = 0;
  *((_QWORD *)v200 + 1) = 0;
  *(_QWORD *)&v199[v193[11]] = 0;
  *(_QWORD *)&v199[v193[12]] = 0;
  *(_OWORD *)&v199[v193[13]] = v287;
  *v198 = 7890291;
  v198[1] = 0xE300000000000000;
  v264 = (char *)(2 * v186);
  v201 = (char *)v190 + 2 * v186;
  v202 = &v201[*(int *)(v191 + 20)];
  *v202 = 2;
  *((_QWORD *)v202 + 1) = v283;
  v202[16] = 0;
  *((_QWORD *)v202 + 3) = 0;
  v202[32] = 1;
  *((_DWORD *)v202 + 9) = 0;
  v202[40] = 1;
  *((_QWORD *)v202 + 6) = 0;
  v202[56] = 1;
  v203 = &v202[v193[9]];
  v281 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v195;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v195)(v203, 1, 1, v157);
  v204 = &v202[v193[10]];
  *(_QWORD *)v204 = 0;
  *((_QWORD *)v204 + 1) = 0;
  *(_QWORD *)&v202[v193[11]] = 0;
  *(_QWORD *)&v202[v193[12]] = 0;
  *(_OWORD *)&v202[v193[13]] = v287;
  strcpy(v201, "age_in_years");
  v201[13] = 0;
  *((_WORD *)v201 + 7) = -5120;
  sub_1CF9239E0(v269, v268);
  v292 = MEMORY[0x1E0DEE9D8];
  v144 = 100;
  result = sub_1CF961094(0, 100, 0);
  v157 = 0;
  v206 = 0;
  v207 = v292;
  v271 = (char *)0xE90000000000005FLL;
  v170 = v273;
  while (!v206)
  {
    v290 = 0x7265766F5F656761;
    v291 = v271;
    v288 = v157;
    sub_1CFB00FC0();
    sub_1CF980470();
    v208 = v274;
    sub_1CFB00C84();
    v289 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF638);
    sub_1CF931BE4(&qword_1EFBBF640, &qword_1EFBBF638, MEMORY[0x1E0DEC928]);
    v209 = v278;
    sub_1CFB00D44();
    v210 = v276;
    MEMORY[0x1D17D79F0](v209, v276);
    (*(void (**)(char *, uint64_t))(v279 + 8))(v209, v280);
    v211 = *(void (**)(char *, uint64_t))(v275 + 8);
    v211(v208, v210);
    sub_1CF931BE4(&qword_1EFBBF648, &qword_1EFBBF630, MEMORY[0x1E0CAF4D0]);
    sub_1CFB0222C();
    v211((char *)v170, v210);
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    v212 = v290;
    v213 = v291;
    v214 = (uint64_t *)v272;
    v215 = &v272[*(int *)(v286 + 20)];
    *v215 = v283 >= v157;
    *((_QWORD *)v215 + 1) = 0;
    v215[16] = 1;
    *((_QWORD *)v215 + 3) = 0;
    v215[32] = 1;
    *((_DWORD *)v215 + 9) = 0;
    v215[40] = 1;
    *((_QWORD *)v215 + 6) = 0;
    v215[56] = 1;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v281)(&v215[v193[9]], 1, 1, v285);
    v216 = &v215[v193[10]];
    *(_QWORD *)v216 = 0;
    *((_QWORD *)v216 + 1) = 0;
    *(_QWORD *)&v215[v193[11]] = 0;
    *(_QWORD *)&v215[v193[12]] = 0;
    *(_OWORD *)&v215[v193[13]] = v287;
    *v214 = v212;
    v214[1] = (uint64_t)v213;
    v292 = v207;
    v155 = *(uint64_t **)(v207 + 16);
    v217 = *(_QWORD *)(v207 + 24);
    v153 = (char *)v155 + 1;
    if ((unint64_t)v155 >= v217 >> 1)
    {
      sub_1CF961094(v217 > 1, (int64_t)v155 + 1, 1);
      v207 = v292;
    }
    *(_QWORD *)(v207 + 16) = v153;
    result = sub_1CFA3E108((uint64_t)v214, v207 + v284 + (_QWORD)v155 * v282);
    v206 = v157 == 99;
    if (v157 == 99)
    {
      v157 = 0;
    }
    else if (__OFADD__(v157++, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (!--v144)
    {
      v290 = v254;
      sub_1CF97F024(v207);
      v219 = v267;
      *((_QWORD *)v267 + 6) = v290;
      *((_QWORD *)v219 + 7) = 0xD000000000000012;
      *((_QWORD *)v219 + 8) = 0x80000001CFB22E20;
      v220 = v282;
      v221 = v284;
      v222 = swift_allocObject();
      v283 = v222;
      *(_OWORD *)(v222 + 16) = xmmword_1CFB1ADC0;
      v223 = v222 + v221;
      v224 = v286;
      v225 = v222 + v221 + *(int *)(v286 + 20);
      *(_BYTE *)v225 = 2;
      *(_QWORD *)(v225 + 8) = 0;
      *(_BYTE *)(v225 + 16) = 1;
      *(_QWORD *)(v225 + 24) = 0;
      *(_BYTE *)(v225 + 32) = 1;
      *(_DWORD *)(v225 + 36) = 0;
      *(_BYTE *)(v225 + 40) = 1;
      *(_QWORD *)(v225 + 48) = 0;
      *(_BYTE *)(v225 + 56) = 1;
      v226 = v285;
      v227 = v281;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v281)(v225 + v193[9], 1, 1, v285);
      *(_OWORD *)(v225 + v193[10]) = xmmword_1CFB1ADD0;
      *(_QWORD *)(v225 + v193[11]) = 0;
      *(_QWORD *)(v225 + v193[12]) = 0;
      *(_OWORD *)(v225 + v193[13]) = v287;
      *(_QWORD *)v223 = 0xD000000000000011;
      *(_QWORD *)(v223 + 8) = 0x80000001CFB23390;
      v228 = (_QWORD *)(v223 + v220);
      v229 = (char *)(v223 + v220 + *(int *)(v224 + 20));
      *v229 = 2;
      *((_QWORD *)v229 + 1) = 0;
      v229[16] = 1;
      *((_QWORD *)v229 + 3) = 0;
      v229[32] = 1;
      *((_DWORD *)v229 + 9) = 0;
      v229[40] = 1;
      *((_QWORD *)v229 + 6) = 0;
      v229[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v229[v193[9]], 1, 1, v226);
      v230 = &v229[v193[10]];
      v231 = v256 | 0x8000000000000000;
      *(_QWORD *)v230 = 0xD000000000000014;
      *((_QWORD *)v230 + 1) = v231;
      *(_QWORD *)&v229[v193[11]] = 0;
      *(_QWORD *)&v229[v193[12]] = 0;
      *(_OWORD *)&v229[v193[13]] = v287;
      *v228 = 0xD000000000000012;
      v228[1] = 0x80000001CFB233B0;
      v232 = &v264[v223];
      v233 = &v264[v223 + *(int *)(v224 + 20)];
      *v233 = 2;
      *((_QWORD *)v233 + 1) = 0;
      v233[16] = 1;
      *((_QWORD *)v233 + 3) = 0;
      v233[32] = 1;
      *((_DWORD *)v233 + 9) = 0;
      v233[40] = 1;
      *((_QWORD *)v233 + 6) = 0;
      v233[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v233[v193[9]], 1, 1, v226);
      *(_OWORD *)&v233[v193[10]] = xmmword_1CFB1ADE0;
      *(_QWORD *)&v233[v193[11]] = 0;
      *(_QWORD *)&v233[v193[12]] = 0;
      *(_OWORD *)&v233[v193[13]] = v287;
      *(_QWORD *)v232 = 0xD000000000000016;
      *((_QWORD *)v232 + 1) = 0x80000001CFB23370;
      v234 = (_QWORD *)(v223 + v255);
      v235 = (char *)(v223 + v255 + *(int *)(v224 + 20));
      *v235 = 2;
      *((_QWORD *)v235 + 1) = 0;
      v235[16] = 1;
      *((_QWORD *)v235 + 3) = 0;
      v235[32] = 1;
      *((_DWORD *)v235 + 9) = 0;
      v235[40] = 1;
      *((_QWORD *)v235 + 6) = 0;
      v235[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v235[v193[9]], 1, 1, v226);
      *(_OWORD *)&v235[v193[10]] = xmmword_1CFB1ADF0;
      *(_QWORD *)&v235[v193[11]] = 0;
      *(_QWORD *)&v235[v193[12]] = 0;
      *(_OWORD *)&v235[v193[13]] = v287;
      *v234 = 0xD000000000000019;
      v234[1] = 0x80000001CFB23400;
      v236 = (_QWORD *)(v223 + 4 * v220);
      v237 = (char *)v236 + *(int *)(v224 + 20);
      *v237 = 2;
      *((_QWORD *)v237 + 1) = 0;
      v237[16] = 1;
      *((_QWORD *)v237 + 3) = 0;
      v237[32] = 1;
      *((_DWORD *)v237 + 9) = 0;
      v237[40] = 1;
      *((_QWORD *)v237 + 6) = 0;
      v237[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v237[v193[9]], 1, 1, v226);
      *(_OWORD *)&v237[v193[10]] = xmmword_1CFB1AE00;
      *(_QWORD *)&v237[v193[11]] = 0;
      *(_QWORD *)&v237[v193[12]] = 0;
      *(_OWORD *)&v237[v193[13]] = v287;
      *v236 = 0x63696E755F786573;
      v236[1] = 0xEB0000000065646FLL;
      v238 = (_QWORD *)(v223 + 5 * v220);
      v239 = (char *)v238 + *(int *)(v224 + 20);
      *v239 = 2;
      *((_QWORD *)v239 + 1) = 0;
      v239[16] = 1;
      *((_QWORD *)v239 + 3) = 0;
      v239[32] = 1;
      *((_DWORD *)v239 + 9) = 0;
      v239[40] = 1;
      *((_QWORD *)v239 + 6) = 0;
      v239[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v239[v193[9]], 1, 1, v226);
      v240 = &v239[v193[10]];
      *(_QWORD *)v240 = 0;
      *((_QWORD *)v240 + 1) = 0;
      *(_QWORD *)&v239[v193[11]] = 0;
      *(_QWORD *)&v239[v193[12]] = 0;
      v241 = &v239[v193[13]];
      *(_QWORD *)v241 = v269;
      *((_QWORD *)v241 + 1) = v268;
      *v238 = 0x7469617274726F70;
      v238[1] = 0xE800000000000000;
      v242 = (_QWORD *)(v223 + 6 * v220);
      v243 = (char *)v242 + *(int *)(v224 + 20);
      *v243 = 2;
      *((_QWORD *)v243 + 1) = 0;
      v243[16] = 1;
      *((_QWORD *)v243 + 3) = 0;
      v243[32] = 1;
      *((_DWORD *)v243 + 9) = 0;
      v243[40] = 1;
      *((_QWORD *)v243 + 6) = 0;
      v243[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v227)(&v243[v193[9]], 1, 1, v226);
      v244 = &v243[v193[10]];
      v245 = v258 | 0x8000000000000000;
      *(_QWORD *)v244 = 0xD000000000000029;
      *((_QWORD *)v244 + 1) = v245;
      *(_QWORD *)&v243[v193[11]] = 0;
      *(_QWORD *)&v243[v193[12]] = 0;
      *(_OWORD *)&v243[v193[13]] = v287;
      *v242 = 0xD000000000000018;
      v242[1] = 0x80000001CFB233D0;
      v246 = v267;
      *((_QWORD *)v267 + 9) = v283;
      v246[10] = 0xD00000000000002DLL;
      v246[11] = 0x80000001CFB27F40;
      v247 = v284;
      v248 = swift_allocObject();
      *(_OWORD *)(v248 + 16) = v257;
      v249 = v248 + v247;
      v250 = v249 + *(int *)(v224 + 20);
      *(_BYTE *)v250 = 1;
      *(_QWORD *)(v250 + 8) = 0;
      *(_BYTE *)(v250 + 16) = 1;
      *(_QWORD *)(v250 + 24) = 0;
      *(_BYTE *)(v250 + 32) = 1;
      *(_DWORD *)(v250 + 36) = 0;
      *(_BYTE *)(v250 + 40) = 1;
      *(_QWORD *)(v250 + 48) = 0;
      *(_BYTE *)(v250 + 56) = 1;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v227)(v250 + v193[9], 1, 1, v226);
      v251 = (_QWORD *)(v250 + v193[10]);
      *v251 = 0;
      v251[1] = 0;
      *(_QWORD *)(v250 + v193[11]) = 0;
      *(_QWORD *)(v250 + v193[12]) = 0;
      *(_OWORD *)(v250 + v193[13]) = v287;
      strcpy((char *)v249, "test_document");
      *(_WORD *)(v249 + 14) = -4864;
      v246[12] = v248;
      v252 = sub_1CF9229A0((uint64_t)v246);
      result = (*(uint64_t (**)(char *, uint64_t))(v260 + 8))(v270, v261);
      *(uint64_t *)((char *)v262 + *(int *)(v259 + 60)) = v252;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CFA3E108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CredentialBuilderPayloadDetails.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1CFB00F54();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (char *)v4 + v12;
    v17 = (char *)a2 + v12;
    v18 = sub_1CFB00C3C();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v20 = a3[8];
    v21 = a3[9];
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (uint64_t *)((char *)v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    v29 = (uint64_t *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[12];
    v33 = a3[13];
    v34 = (uint64_t *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (uint64_t *)((char *)v4 + v33);
    v38 = *(uint64_t *)((char *)a2 + v33);
    v39 = *(uint64_t *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF9239E0(v38, v39);
    *v37 = v38;
    v37[1] = v39;
    v40 = a3[14];
    v41 = a3[15];
    v42 = (uint64_t *)((char *)v4 + v40);
    v43 = (uint64_t *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *(uint64_t *)((char *)v4 + v41) = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + a2[5];
  v5 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = sub_1CFB00C3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CF923A24(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeveloperTestJapanNationalIDCardCredentialBuilder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CFB00F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (char *)a1 + v11;
  v16 = (char *)a2 + v11;
  v17 = sub_1CFB00C3C();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)((char *)a1 + v20);
  v25 = (_QWORD *)((char *)a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)((char *)a1 + v32);
  v37 = *(_QWORD *)((char *)a2 + v32);
  v38 = *(_QWORD *)((char *)a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v37, v38);
  *v36 = v37;
  v36[1] = v38;
  v39 = a3[14];
  v40 = a3[15];
  v41 = (_QWORD *)((char *)a1 + v39);
  v42 = (_QWORD *)((char *)a2 + v39);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeveloperTestJapanNationalIDCardCredentialBuilder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CFB00F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1CFB00C3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v23 = a3[11];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[12];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[13];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = *v31;
  v33 = v31[1];
  sub_1CF9239E0(*v31, v33);
  v34 = *v30;
  v35 = v30[1];
  *v30 = v32;
  v30[1] = v33;
  sub_1CF923A24(v34, v35);
  v36 = a3[14];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for DeveloperTestJapanNationalIDCardCredentialBuilder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CFB00F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1CFB00C3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  v15 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  v17 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  return a1;
}

_QWORD *assignWithTake for DeveloperTestJapanNationalIDCardCredentialBuilder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CFB00F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1CFB00C3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[12];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[13];
  v40 = *(_QWORD *)((char *)a1 + v39);
  v41 = *(_QWORD *)((char *)a1 + v39 + 8);
  *(_OWORD *)((char *)a1 + v39) = *(_OWORD *)((char *)a2 + v39);
  sub_1CF923A24(v40, v41);
  v42 = a3[14];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeveloperTestJapanNationalIDCardCredentialBuilder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA3E9B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_1CFB00F54();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1CFB00C3C();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperTestJapanNationalIDCardCredentialBuilder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA3EA64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1CFB00F54();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1CFB00C3C();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_1CFA3EB08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CFB00F54();
  if (v1 <= 0x3F)
  {
    result = sub_1CFB00C3C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1CFA3EBD4(uint64_t a1)
{
  return sub_1CF94C3F0(a1, qword_1EFBC3098);
}

uint64_t sub_1CFA3EC00(uint64_t a1)
{
  return sub_1CF94C3F0(a1, qword_1EFBC30B0);
}

uint64_t sub_1CFA3EC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC30C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC30C8);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.getStatus";
  *(_QWORD *)(v1 + 8) = 18;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGetStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD308, (uint64_t)qword_1EFBC30C8, a1);
}

uint64_t sub_1CFA3ED08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC30E0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC30E0);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.prepareBioBindingUnboundACL";
  *(_QWORD *)(v1 + 8) = 36;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareBioBindingUnboundACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD310, (uint64_t)qword_1EFBC30E0, a1);
}

uint64_t sub_1CFA3EDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC30F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC30F8);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.preparePasscodeBindingUnboundACL";
  *(_QWORD *)(v1 + 8) = 41;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPreparePasscodeBindingUnboundACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD318, (uint64_t)qword_1EFBC30F8, a1);
}

uint64_t sub_1CFA3EED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3110);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3110);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.persistACLBlob";
  *(_QWORD *)(v1 + 8) = 23;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPersistACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD320, (uint64_t)qword_1EFBC3110, a1);
}

uint64_t sub_1CFA3EFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3128);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3128);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.recoverPersistedACLBlob";
  *(_QWORD *)(v1 + 8) = 32;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVRecoverPersistedACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD328, (uint64_t)qword_1EFBC3128, a1);
}

uint64_t sub_1CFA3F098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3140);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3140);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.authorizePresentmentForSignature";
  *(_QWORD *)(v1 + 8) = 41;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVAuthorizePresentmentForSignature.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD330, (uint64_t)qword_1EFBC3140, a1);
}

uint64_t sub_1CFA3F17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3158);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3158);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.generatePrearmTrustKeyForWatchAndCopyPublicKey";
  *(_QWORD *)(v1 + 8) = 55;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGeneratePrearmTrustKeyForWatchAndCopyPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD338, (uint64_t)qword_1EFBC3158, a1);
}

uint64_t sub_1CFA3F260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3170);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3170);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.updatePrearmTrustKeyForWatch";
  *(_QWORD *)(v1 + 8) = 37;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVUpdatePrearmTrustKeyForWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD340, (uint64_t)qword_1EFBC3170, a1);
}

uint64_t sub_1CFA3F344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3188);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3188);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.establshPrearmTrust";
  *(_QWORD *)(v1 + 8) = 28;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVEstablishPrearmTrust.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD348, (uint64_t)qword_1EFBC3188, a1);
}

uint64_t sub_1CFA3F428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC31A0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC31A0);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.generateNonceOnWatch";
  *(_QWORD *)(v1 + 8) = 29;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGenerateNonceOnWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD350, (uint64_t)qword_1EFBC31A0, a1);
}

uint64_t sub_1CFA3F50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC31B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC31B8);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.generatePhoneToken";
  *(_QWORD *)(v1 + 8) = 27;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGeneratePhoneToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD358, (uint64_t)qword_1EFBC31B8, a1);
}

uint64_t sub_1CFA3F5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC31D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC31D0);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.prearmCredential";
  *(_QWORD *)(v1 + 8) = 25;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrearmCredential.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD360, (uint64_t)qword_1EFBC31D0, a1);
}

uint64_t sub_1CFA3F6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC31E8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC31E8);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.revokeCredentialAuthorizationToken";
  *(_QWORD *)(v1 + 8) = 43;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVRevokeCredentialAuthorizationToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD368, (uint64_t)qword_1EFBC31E8, a1);
}

uint64_t sub_1CFA3F7B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3200);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3200);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.persistModifiedACLBlob";
  *(_QWORD *)(v1 + 8) = 31;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPersistModifiedACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD370, (uint64_t)qword_1EFBC3200, a1);
}

uint64_t sub_1CFA3F89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3218);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3218);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.prepareUnboundACLForWatch";
  *(_QWORD *)(v1 + 8) = 34;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareUnboundACLForWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD378, (uint64_t)qword_1EFBC3218, a1);
}

uint64_t sub_1CFA3F980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3230);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3230);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.prepareACL";
  *(_QWORD *)(v1 + 8) = 19;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD380, (uint64_t)qword_1EFBC3230, a1);
}

uint64_t sub_1CFA3FA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3248);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3248);
  if (qword_1EFBBD2F8 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC3098);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "appleIDV.credentialAuthenticationTokenStatus";
  *(_QWORD *)(v1 + 8) = 44;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVCredentialAuthenticationTokenStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD388, (uint64_t)qword_1EFBC3248, a1);
}

uint64_t sub_1CFA3FB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3260);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3260);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "se.pairSecureElementIfNecessary";
  *(_QWORD *)(v1 + 8) = 31;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sePairSecureElementIfNecessary.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD390, (uint64_t)qword_1EFBC3260, a1);
}

uint64_t sub_1CFA3FC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3278);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3278);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.createKey";
  *(_QWORD *)(v1 + 8) = 16;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyCreateKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD398, (uint64_t)qword_1EFBC3278, a1);
}

uint64_t sub_1CFA3FD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3290);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3290);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.signDigest";
  *(_QWORD *)(v1 + 8) = 17;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeySignDigest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3A0, (uint64_t)qword_1EFBC3290, a1);
}

uint64_t sub_1CFA3FDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC32A8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC32A8);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.getPublicKey";
  *(_QWORD *)(v1 + 8) = 19;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3A8, (uint64_t)qword_1EFBC32A8, a1);
}

uint64_t sub_1CFA3FED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC32C0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC32C0);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.getCASDCertificate";
  *(_QWORD *)(v1 + 8) = 25;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetCASDCertificate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3B0, (uint64_t)qword_1EFBC32C0, a1);
}

uint64_t sub_1CFA3FFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC32D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC32D8);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.getACLConstraints";
  *(_QWORD *)(v1 + 8) = 24;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetACLConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3B8, (uint64_t)qword_1EFBC32D8, a1);
}

uint64_t sub_1CFA400A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC32F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC32F0);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.getAttestation";
  *(_QWORD *)(v1 + 8) = 21;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3C0, (uint64_t)qword_1EFBC32F0, a1);
}

uint64_t sub_1CFA40184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3308);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3308);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.deleteKey";
  *(_QWORD *)(v1 + 8) = 16;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyDeleteKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3C8, (uint64_t)qword_1EFBC3308, a1);
}

uint64_t sub_1CFA40268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3320);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3320);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.changeACL";
  *(_QWORD *)(v1 + 8) = 16;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyChangeACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3D0, (uint64_t)qword_1EFBC3320, a1);
}

uint64_t sub_1CFA4034C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3338);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3338);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.createSEBAASCertificate";
  *(_QWORD *)(v1 + 8) = 30;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyCreateSEBAASCertificate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3D8, (uint64_t)qword_1EFBC3338, a1);
}

uint64_t sub_1CFA40430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3350);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3350);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.designateKey";
  *(_QWORD *)(v1 + 8) = 19;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyDesignateKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3E0, (uint64_t)qword_1EFBC3350, a1);
}

uint64_t sub_1CFA40514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3368);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3368);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.clearKeyDesignation";
  *(_QWORD *)(v1 + 8) = 26;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyClearKeyDesignation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3E8, (uint64_t)qword_1EFBC3368, a1);
}

uint64_t sub_1CFA405F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3380);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3380);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "seskey.getDesignatedKeys";
  *(_QWORD *)(v1 + 8) = 24;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetDesignatedKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3F0, (uint64_t)qword_1EFBC3380, a1);
}

uint64_t sub_1CFA406DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3398);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3398);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "storage.generatePresentmentKeys";
  *(_QWORD *)(v1 + 8) = 31;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.storageGeneratePresentmentKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD3F8, (uint64_t)qword_1EFBC3398, a1);
}

uint64_t sub_1CFA407C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC33B0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC33B0);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "storage.generateSESPresentmentKey";
  *(_QWORD *)(v1 + 8) = 33;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.storageGenerateSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD400, (uint64_t)qword_1EFBC33B0, a1);
}

uint64_t sub_1CFA408A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC33C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC33C8);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.generateSESProgenitorKeyAttestation";
  *(_QWORD *)(v1 + 8) = 39;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESProgenitorKeyAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD408, (uint64_t)qword_1EFBC33C8, a1);
}

uint64_t sub_1CFA40988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC33E0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC33E0);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.generateSESPresentmentKeyAttestation";
  *(_QWORD *)(v1 + 8) = 40;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESPresentmentKeyAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD410, (uint64_t)qword_1EFBC33E0, a1);
}

uint64_t sub_1CFA40A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC33F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC33F8);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.generateSESProgenitorKey";
  *(_QWORD *)(v1 + 8) = 28;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESProgenitorKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD418, (uint64_t)qword_1EFBC33F8, a1);
}

uint64_t sub_1CFA40B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3410);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3410);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.generateSESPresentmentKey";
  *(_QWORD *)(v1 + 8) = 29;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD420, (uint64_t)qword_1EFBC3410, a1);
}

uint64_t sub_1CFA40C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3428);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3428);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.fetchSESProgenitorKey";
  *(_QWORD *)(v1 + 8) = 25;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmFetchSESProgenitorKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD428, (uint64_t)qword_1EFBC3428, a1);
}

uint64_t sub_1CFA40D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EFBC3440);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFBC3440);
  if (qword_1EFBBD300 != -1)
    swift_once();
  v2 = sub_1CFB012CC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFBC30B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(_QWORD *)v1 = "ckm.fetchSESPresentmentKey";
  *(_QWORD *)(v1 + 8) = 26;
  *(_BYTE *)(v1 + 16) = 2;
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmFetchSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF94F2F8(&qword_1EFBBD430, (uint64_t)qword_1EFBC3440, a1);
}

ValueMetadata *type metadata accessor for SharedSignposts()
{
  return &type metadata for SharedSignposts;
}

uint64_t sub_1CFA40E0C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CertUsageMapper();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903BD0);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 16) = result;
  off_1ED903068 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static CertUsageMapper.sharedInstance.getter()
{
  if (qword_1ED903078 != -1)
    swift_once();
  return swift_retain();
}

void CertUsageMapper.registerMapping(forType:usage:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;
  char v7;

  v4 = *(os_unfair_lock_s **)(v2 + 16);
  v5 = (uint64_t *)&v4[4];
  v6 = v4 + 6;
  v7 = *a2;
  os_unfair_lock_lock(v4 + 6);
  sub_1CFA40F08(v5, a1, v7);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_1CFA40F08(uint64_t *a1, uint64_t a2, char a3)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_1CF958D68(a3, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  return swift_bridgeObjectRelease();
}

void CertUsageMapper.mapping(forType:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = (os_unfair_lock_s *)(v5 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v7 = *(_QWORD *)(v5 + 16);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1CFA9270C(a1), (v9 & 1) != 0))
    v10 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v8);
  else
    v10 = 21;
  *a2 = v10;
  os_unfair_lock_unlock(v6);
}

unint64_t sub_1CFA40FE8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  char v5;
  char v6;

  v4 = *(_QWORD *)result;
  if (*(_QWORD *)(*(_QWORD *)result + 16) && (result = sub_1CFA9270C(a2), (v5 & 1) != 0))
    v6 = *(_BYTE *)(*(_QWORD *)(v4 + 56) + result);
  else
    v6 = 21;
  *a3 = v6;
  return result;
}

uint64_t CertUsageMapper.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CertUsageMapper.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CertUsageMapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for CertUsageMapper()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_1CFA410AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;

  v0 = type metadata accessor for DIPAccountManager();
  v1 = swift_allocObject();
  result = DIPAccountManager.init()();
  qword_1ED903418 = v0;
  unk_1ED903420 = &protocol witness table for DIPAccountManager;
  qword_1ED903400 = v1;
  return result;
}

uint64_t DIPAccountManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DIPAccountManager.init()();
  return v0;
}

uint64_t static DIPAccountManager.sharedInstance.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED903670 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1CF92B1B4((uint64_t)&qword_1ED903400, a1);
}

uint64_t static DIPAccountManager.sharedInstance.setter(uint64_t *a1)
{
  if (qword_1ED903670 != -1)
    swift_once();
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1ED903400, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t (*static DIPAccountManager.sharedInstance.modify())()
{
  if (qword_1ED903670 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *DIPAccountManager.init()()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  id v3;
  id v4;
  id v5;

  v0[2] = 0xD000000000000015;
  v0[3] = 0x80000001CFB2E180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903BD8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  v2 = (os_unfair_lock_s *)(v1 + 24);
  *(_QWORD *)(v1 + 16) = 0;
  v0[5] = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (!v3)
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8F2B8]), sel_init);
  v0[4] = v3;
  v4 = objc_msgSend(v3, sel_aa_primaryAppleAccount);
  os_unfair_lock_lock(v2);

  *(_QWORD *)(v1 + 16) = v4;
  v5 = v4;
  os_unfair_lock_unlock(v2);

  return v0;
}

Swift::Void __swiftcall DIPAccountManager.reloadPrimaryAccount()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_aa_primaryAppleAccount);
  v2 = *(_QWORD *)(v0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 24));

  *(_QWORD *)(v2 + 16) = v1;
  v3 = v1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 24));

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.verifyAccountStatus(requireHSA2:)(Swift::Bool requireHSA2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  void *v35;
  id v36;
  void *v37;
  unsigned __int8 v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  unint64_t v50;
  uint64_t v51;
  __int16 v53[12];

  v3 = sub_1CFB012CC();
  v4 = *(_QWORD *)(v3 - 8);
  v12 = MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)&v53[-4] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v12, v15, v16, v17, v18, v19, v20, v21);
  v24 = (char *)&v53[-4] - v23;
  MEMORY[0x1E0C80A78](v22, v25, v26, v27, v28, v29, v30, v31);
  v33 = (char *)&v53[-4] - v32;
  v34 = (unint64_t)DIPAccountManager.primaryAppleAccount()();
  if (!v34)
  {
    v53[0] = 4;
    v43 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, v53, 0, v43, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v44, 0xD000000000000021, 0x80000001CFB2E230, 67);
    swift_willThrow();
    return;
  }
  v35 = (void *)v34;
  if (!requireHSA2)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v33, v45, v3);
    v40 = sub_1CFB012B4();
    v46 = sub_1CFB01FC8();
    if (!os_log_type_enabled(v40, v46))
      goto LABEL_17;
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_1CF917000, v40, v46, "HSA2 check is not required", v42, 2u);
    goto LABEL_16;
  }
  v36 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1)
  {
    v37 = (void *)sub_1CFB01A04();
    v38 = objc_msgSend(v36, sel_BOOLForKey_, v37);

    if ((v38 & 1) != 0)
    {
      if (qword_1ED9054E8 != -1)
        swift_once();
      v39 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v24, v39, v3);
      v40 = sub_1CFB012B4();
      v41 = sub_1CFB01FC8();
      if (!os_log_type_enabled(v40, v41))
      {
        v33 = v24;
        goto LABEL_17;
      }
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1CF917000, v40, v41, "Not requiring HSA2 because of user defaults settings", v42, 2u);
      v33 = v24;
LABEL_16:
      MEMORY[0x1D17DA6E4](v42, -1, -1);
LABEL_17:

      (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v3);
      return;
    }
  }
  else
  {

  }
  v47 = sub_1CFA439FC(v35);
  if (!v1)
  {
    if ((v47 & 1) != 0)
    {
      if (qword_1ED9054E8 != -1)
        swift_once();
      v48 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v48, v3);
      v40 = sub_1CFB012B4();
      v49 = sub_1CFB01FC8();
      if (!os_log_type_enabled(v40, v49))
      {
        v33 = v14;
        goto LABEL_17;
      }
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1CF917000, v40, v49, "User has HSA2 enabled", v42, 2u);
      v33 = v14;
      goto LABEL_16;
    }
    v53[0] = 19;
    v50 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001CFB2E260, v53, 0, v50, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v51, 0xD000000000000021, 0x80000001CFB2E230, 84);
    swift_willThrow();
  }

}

ACAccount_optional __swiftcall DIPAccountManager.primaryAppleAccount()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  Swift::Bool v24;
  objc_class *v25;
  uint64_t v26;
  ACAccount_optional result;

  v1 = v0;
  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v14 = *(void **)(v13 + 16);
  v15 = v14;
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));

  if (!v14)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v16, v2);
    v17 = sub_1CFB012B4();
    v18 = sub_1CFB01FC8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1CF917000, v17, v18, "Primary account is nil. Will attempt to reload", v19, 2u);
      MEMORY[0x1D17DA6E4](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    v20 = objc_msgSend(*(id *)(v1 + 32), sel_aa_primaryAppleAccount);
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));

    *(_QWORD *)(v13 + 16) = v20;
    v21 = v20;
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));

  }
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v22 = *(void **)(v13 + 16);
  v23 = v22;
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
  v25 = (objc_class *)v22;
  result.value.super.isa = v25;
  result.is_nil = v24;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.isHSA2Enabled(account:)(ACAccount account)
{
  return sub_1CFA439FC(account.super.isa) & 1;
}

Swift::Void __swiftcall DIPAccountManager.resetPrimaryAccount()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  v14 = sub_1CFB012B4();
  v15 = sub_1CFB01FC8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1CF917000, v14, v15, "resetting the primary account", v16, 2u);
    MEMORY[0x1D17DA6E4](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  v17 = *(_QWORD *)(v1 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));

  *(_QWORD *)(v17 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v17 + 24));
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryAppleAccountDSID()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String result;
  __int16 v14;
  __int16 v15;

  v0 = (void *)DIPAccountManager.primaryAppleAccount()();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_aa_personID);
    if (v2)
    {
      v3 = v2;
      v4 = sub_1CFB01A28();
      v6 = v5;

      v7 = v4;
      v8 = v6;
    }
    else
    {
      v14 = 4;
      v11 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000017, 0x80000001CFB2E2A0, &v14, 0, v11, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v12, 0xD000000000000019, 0x80000001CFB2E280, 116);
      swift_willThrow();

    }
  }
  else
  {
    v15 = 4;
    v9 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, &v15, 0, v9, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v10, 0xD000000000000019, 0x80000001CFB2E280, 113);
    v7 = swift_willThrow();
  }
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryAppleAccountIdentifier()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  Swift::String result;
  __int16 v11;

  v0 = (void *)DIPAccountManager.primaryAppleAccount()();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_identifier);
    if (v2)
    {
      v4 = v2;
      v5 = sub_1CFB01A28();
      v7 = v6;

      v2 = (id)v5;
      v3 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v11 = 4;
    v8 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, &v11, 0, v8, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v9, 0xD00000000000001FLL, 0x80000001CFB2E2C0, 127);
    v2 = (id)swift_willThrow();
  }
  result._object = v3;
  result._countAndFlagsBits = (uint64_t)v2;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryiCloudAccountAltDSID()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::String result;
  __int16 v15;
  __int16 v16;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_aida_accountForPrimaryiCloudAccount);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_aida_alternateDSID);
    if (v3)
    {
      v4 = v3;
      v5 = sub_1CFB01A28();
      v7 = v6;

      v8 = v5;
      v9 = v7;
    }
    else
    {
      v15 = 4;
      v12 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001CFB2E300, &v15, 0, v12, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v13, 0xD00000000000001DLL, 0x80000001CFB2E2E0, 137);
      swift_willThrow();

    }
  }
  else
  {
    v16 = 4;
    v10 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, &v16, 0, v10, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v11, 0xD00000000000001DLL, 0x80000001CFB2E2E0, 134);
    v8 = swift_willThrow();
  }
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t DIPAccountManager.renewGrandslamToken(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA421F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1CFA422A0;
  return sub_1CFB02994();
}

uint64_t sub_1CFA422A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4230C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA42340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10, v11, v12, v13, v14, v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  DIPAccountManager.renewGrandslamToken(_:completionHandler:)(a3, a4, (void (*)(void *))sub_1CFA44084, v18);
  return swift_release();
}

uint64_t sub_1CFA42438(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
    return sub_1CFB01D88();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
    return sub_1CFB01D94();
  }
}

void DIPAccountManager.renewGrandslamToken(_:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  _QWORD *v4;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, void *);
  void *v26;
  void (*v27)(uint64_t, void *);
  uint64_t v28;

  v8 = (void *)v4[4];
  if (a2)
  {
    v9 = (void *)sub_1CFB01A04();
    v10 = objc_msgSend(v8, sel_aida_accountForAltDSID_, v9);

  }
  else
  {
    v10 = objc_msgSend(v8, sel_aida_accountForPrimaryiCloudAccount);
  }
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3460);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1CFB05840;
    v13 = v4[2];
    v14 = v4[3];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    swift_retain();
    v15 = v10;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1CFB01C8C();
    swift_bridgeObjectRelease();
    v27 = sub_1CFA43DE8;
    v28 = v11;
    aBlock = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_1CF99A91C;
    v26 = &block_descriptor_8;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_aida_renewCredentialsForAccount_services_force_completion_, v15, v16, 1, v17);
    swift_release();
LABEL_9:

    _Block_release(v17);
    return;
  }
  if (a2)
  {
    swift_retain();
    v18 = (void *)sub_1CFB01A04();
    v19 = objc_msgSend(v8, sel_aa_appleAccountWithAltDSID_, v18);

    if (v19)
    {
LABEL_8:
      v15 = v19;
      v16 = (void *)sub_1CFB01A04();
      v27 = sub_1CFA43DE8;
      v28 = v11;
      aBlock = MEMORY[0x1E0C809B0];
      v24 = 1107296256;
      v25 = sub_1CF99A91C;
      v26 = &block_descriptor_8;
      v17 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v8, sel_renewCredentialsForAccount_force_reason_completion_, v15, 0, v16, v17);
      swift_release();

      goto LABEL_9;
    }
  }
  else
  {
    swift_retain();
    v19 = objc_msgSend(v8, sel_aa_primaryAppleAccount);
    if (v19)
      goto LABEL_8;
  }
  LOWORD(aBlock) = 4;
  v20 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  v21 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, (__int16 *)&aBlock, 0, v20, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v22, 0xD000000000000029, 0x80000001CFB2E350, 200);
  a3(v21);
  swift_release();

}

void sub_1CFA42858(uint64_t a1, id a2, void (*a3)(void))
{
  id v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  __int16 v18;
  __int16 v19;

  if (a2)
  {
    v16 = 96;
    v5 = a2;
    v6 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v7 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a2, 0xD00000000000001BLL, 0x80000001CFB2E500, &v16, 0, v6, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v8, 0xD000000000000029, 0x80000001CFB2E350, 165);
    ((void (*)(void *))a3)(v7);

    return;
  }
  switch(a1)
  {
    case 2:
      v18 = 96;
      v9 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v10 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000019, 0x80000001CFB2E4B0, &v18, 0, v9, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v11, 0xD000000000000029, 0x80000001CFB2E350, 177);
      break;
    case 1:
      v17 = 96;
      v12 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v10 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000020, 0x80000001CFB2E4D0, &v17, 0, v12, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v13, 0xD000000000000029, 0x80000001CFB2E350, 174);
      break;
    case 0:
      a3();
      return;
    default:
      v19 = 96;
      v14 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v10 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000021, 0x80000001CFB2E480, &v19, 0, v14, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v15, 0xD000000000000029, 0x80000001CFB2E350, 180);
      break;
  }
  ((void (*)(void *))a3)(v10);

}

Swift::String __swiftcall DIPAccountManager.appleAuthHeader(_:)(Swift::String_optional a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  __int16 v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  Swift::String result;
  uint64_t v69;
  __int16 v70;
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;

  v2 = v1;
  object = a1.value._object;
  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v69 - v23;
  if (object)
  {
    v25 = *(void **)(v2 + 32);
    v26 = (void *)sub_1CFB01A04();
    v27 = objc_msgSend(v25, sel_aida_accountForAltDSID_, v26);

    if (qword_1ED9054E8 != -1)
      swift_once();
    v28 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v28, v4);
    v29 = sub_1CFB012B4();
    v30 = sub_1CFB01FEC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1CF917000, v29, v30, "using altDSID for authorization", v31, 2u);
      MEMORY[0x1D17DA6E4](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  }
  else
  {
    v27 = objc_msgSend(*(id *)(v2 + 32), sel_aida_accountForPrimaryiCloudAccount);
  }
  if (v27)
  {
    v32 = v27;
    v33 = objc_msgSend(v32, sel_aida_alternateDSID);
    if (v33)
    {
      v34 = v33;
      v35 = sub_1CFB01A28();
      v37 = v36;

      v38 = (void *)sub_1CFB01A04();
      v39 = objc_msgSend(v32, sel_aida_tokenForService_, v38);

      if (v39)
      {
        v40 = sub_1CFB01A28();
        v42 = v41;

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903060);
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1CFB059A0;
        v44 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v43 + 56) = MEMORY[0x1E0DEA968];
        v45 = sub_1CFA43E08();
        *(_QWORD *)(v43 + 32) = v35;
        *(_QWORD *)(v43 + 40) = v37;
        *(_QWORD *)(v43 + 96) = v44;
        *(_QWORD *)(v43 + 104) = v45;
        *(_QWORD *)(v43 + 64) = v45;
        *(_QWORD *)(v43 + 72) = v40;
        *(_QWORD *)(v43 + 80) = v42;
        v46 = sub_1CFB01A4C();
        v48 = v47;

        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      v71 = 4;
      v54 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v50 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001DLL, 0x80000001CFB2E3D0, &v71, 0, v54, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v55, 0xD000000000000013, 0x80000001CFB2E380, 227);
    }
    else
    {
      v71 = 4;
      v52 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v50 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001CFB2E300, &v71, 0, v52, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v53, 0xD000000000000013, 0x80000001CFB2E380, 224);
    }
    swift_willThrow();

  }
  else
  {
    v71 = 4;
    v49 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v50 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001CFB2E1A0, &v71, 0, v49, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v51, 0xD000000000000013, 0x80000001CFB2E380, 221);
    swift_willThrow();
  }
  v70 = 102;
  v56 = v50;
  v57 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v50, 0xD000000000000024, 0x80000001CFB2E3A0, &v70, 0, v57, 0xD00000000000005ALL, 0x80000001CFB2E1D0, (uint64_t)&v71, 0xD000000000000013, 0x80000001CFB2E380, 234);
  v58 = v71;
  v59 = v72;
  v60 = v73;
  v61 = v74;
  sub_1CF923828();
  v62 = (void *)swift_allocError();
  *(_WORD *)v63 = v58;
  *(_QWORD *)(v63 + 8) = v59;
  *(_QWORD *)(v63 + 16) = v60;
  *(_QWORD *)(v63 + 24) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v64 = v61;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v65 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v65, v4);
  v48 = 0xE000000000000000;
  DIPLogError(_:message:log:)(v62, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v62);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v46 = 0;
LABEL_19:
  v66 = v46;
  v67 = (void *)v48;
  result._object = v67;
  result._countAndFlagsBits = v66;
  return result;
}

ACAccount_optional __swiftcall DIPAccountManager.getAccount(with:)(Swift::String with)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  Swift::Bool v40;
  objc_class *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  id v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  ACAccount_optional result;

  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v45 - v23;
  v25 = *(void **)(v1 + 32);
  v49 = countAndFlagsBits;
  v26 = (void *)sub_1CFB01A04();
  v27 = objc_msgSend(v25, sel_accountTypeWithAccountTypeIdentifier_, v26);

  v28 = objc_msgSend(v25, sel_accountsWithAccountType_, v27);
  if (v28)
  {
    v29 = v28;
    v30 = sub_1CFB01CA4();

  }
  else
  {
    v30 = 0;
  }
  if (qword_1ED9054E8 != -1)
    swift_once();
  v31 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v50(v24, v31, v4);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v32 = sub_1CFB012B4();
  v33 = v5;
  v34 = sub_1CFB01FC8();
  v35 = os_log_type_enabled(v32, v34);
  v51 = v27;
  if (v35)
  {
    v46 = v31;
    v47 = v33;
    v48 = v15;
    v36 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    *(_QWORD *)&v53 = v37;
    *(_DWORD *)v36 = 134349314;
    if (v30)
    {
      v38 = *(_QWORD *)(v30 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0;
    }
    v52 = v38;
    sub_1CFB021C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain();
    v52 = sub_1CF9C974C(v49, (unint64_t)object, (uint64_t *)&v53);
    sub_1CFB021C0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CF917000, v32, v34, "AccountStore returned %{public}ld accounts of type %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v37, -1, -1);
    MEMORY[0x1D17DA6E4](v36, -1, -1);

    v39 = *(void (**)(char *, uint64_t))(v47 + 8);
    v39(v24, v4);
    v15 = v48;
    v31 = v46;
    if (!v30)
      goto LABEL_18;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v39 = *(void (**)(char *, uint64_t))(v33 + 8);
    v39(v24, v4);
    if (!v30)
    {
LABEL_18:
      v53 = 0u;
      v54 = 0u;
LABEL_19:
      sub_1CF929418((uint64_t)&v53);
      goto LABEL_20;
    }
  }
  if (*(_QWORD *)(v30 + 16))
  {
    sub_1CF94BBF0(v30 + 32, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v54 + 1))
    goto LABEL_19;
  sub_1CFA43E4C();
  if ((swift_dynamicCast() & 1) != 0)
  {

    v41 = (objc_class *)v52;
    goto LABEL_23;
  }
LABEL_20:
  v50(v15, v31, v4);
  v42 = sub_1CFB012B4();
  v43 = sub_1CFB01FBC();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_1CF917000, v42, v43, "Couldn't get accounts", v44, 2u);
    MEMORY[0x1D17DA6E4](v44, -1, -1);
  }

  v39(v15, v4);
  v41 = 0;
LABEL_23:
  result.value.super.isa = v41;
  result.is_nil = v40;
  return result;
}

id static DIPAccountManager.isPrimaryAppleAccount(account:)(void *a1)
{
  id result;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  result = objc_msgSend(a1, sel_accountType);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v3 = result;
  v4 = objc_msgSend(result, sel_identifier);

  if (!v4)
  {
    sub_1CFB01A28();
    goto LABEL_11;
  }
  v5 = sub_1CFB01A28();
  v7 = v6;

  v8 = sub_1CFB01A28();
  if (!v7)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(a1, sel_aa_isAccountClass_, *MEMORY[0x1E0CFAAE8]);
  }
  v11 = sub_1CFB028B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v11 & 1) != 0)
    return objc_msgSend(a1, sel_aa_isAccountClass_, *MEMORY[0x1E0CFAAE8]);
  return result;
}

id static DIPAccountManager.isChildAccount(account:)(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(v2, sel_userUnderAgeForAccount_, a1);

  return v3;
}

uint64_t DIPAccountManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t DIPAccountManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

void sub_1CFA437A4()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  id *v3;
  os_unfair_lock_s *v4;
  id v5;

  v1 = *v0;
  v5 = objc_msgSend(*(id *)(*v0 + 32), sel_aa_primaryAppleAccount);
  v2 = *(os_unfair_lock_s **)(v1 + 40);
  v3 = (id *)&v2[4];
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1CFA43FE4(v3);
  os_unfair_lock_unlock(v4);

}

void sub_1CFA4381C()
{
  DIPAccountManager.resetPrimaryAccount()();
}

void sub_1CFA4383C(Swift::Bool a1)
{
  DIPAccountManager.verifyAccountStatus(requireHSA2:)(a1);
}

unint64_t sub_1CFA4385C()
{
  return (unint64_t)DIPAccountManager.primaryAppleAccount()();
}

uint64_t sub_1CFA4387C()
{
  return DIPAccountManager.primaryAppleAccountIdentifier()()._countAndFlagsBits;
}

uint64_t sub_1CFA4389C()
{
  return DIPAccountManager.primaryAppleAccountDSID()()._countAndFlagsBits;
}

uint64_t sub_1CFA438BC()
{
  return DIPAccountManager.primaryiCloudAccountAltDSID()()._countAndFlagsBits;
}

uint64_t sub_1CFA438DC(uint64_t a1, uint64_t a2)
{
  return DIPAccountManager.appleAuthHeader(_:)(*(Swift::String_optional *)&a1)._countAndFlagsBits;
}

uint64_t sub_1CFA438FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_1CFA4391C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1CFA422A0;
  return sub_1CFB02994();
}

uint64_t sub_1CFA439C4(void *a1)
{
  return sub_1CFA439FC(a1) & 1;
}

unint64_t sub_1CFA439DC(uint64_t a1, uint64_t a2)
{
  return (unint64_t)DIPAccountManager.getAccount(with:)(*(Swift::String *)&a1);
}

uint64_t sub_1CFA439FC(id a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  __int16 v44;
  __int16 v45;

  v2 = type metadata accessor for DIPSignpost.Config(0);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DIPSignpost(0);
  v20 = MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16, v17, v18, v19);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23, v24, v25, v26, v27, v28, v29);
  v31 = (char *)&v43 - v30;
  if (qword_1ED903278 != -1)
    swift_once();
  v32 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED902F40);
  sub_1CF94C548(v32, (uint64_t)v11);
  DIPSignpost.init(_:)((uint64_t)v11, (uint64_t)v31);
  v33 = objc_msgSend(a1, sel_aida_alternateDSID);
  if (!v33)
  {
    v45 = 93;
    v38 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000016, 0x80000001CFB2E520, &v45, 0, v38, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v39, 0xD000000000000017, 0x80000001CFB2E540, 250);
    swift_willThrow();
LABEL_10:
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    sub_1CF960F94((uint64_t)v31);
    return a1 & 1;
  }
  v34 = v33;
  a1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (qword_1ED903250 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED902EF8);
  sub_1CF94C548(v35, (uint64_t)v11);
  DIPSignpost.init(_:)((uint64_t)v11, (uint64_t)v22);
  v36 = objc_msgSend(a1, sel_authKitAccountWithAltDSID_, v34);

  if (!v36)
  {
    v44 = 93;
    v40 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001DLL, 0x80000001CFB2E560, &v44, 0, v40, 0xD00000000000005ALL, 0x80000001CFB2E1D0, v41, 0xD000000000000017, 0x80000001CFB2E540, 256);
    swift_willThrow();

    sub_1CF960F94((uint64_t)v22);
    goto LABEL_10;
  }
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  v37 = objc_msgSend(a1, sel_securityLevelForAccount_, v36);

  LOBYTE(a1) = v37 == (id)4;
  sub_1CF960F94((uint64_t)v22);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1CF960F94((uint64_t)v31);
  return a1 & 1;
}

uint64_t sub_1CFA43DB8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA42340(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CFA43DC4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CFA43DE8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1CFA42858(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1CFA43E08()
{
  unint64_t result;

  result = qword_1ED903018;
  if (!qword_1ED903018)
  {
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED903018);
  }
  return result;
}

unint64_t sub_1CFA43E4C()
{
  unint64_t result;

  result = qword_1ED903998;
  if (!qword_1ED903998)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED903998);
  }
  return result;
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.reloadPrimaryAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.resetPrimaryAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.verifyAccountStatus(requireHSA2:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryiCloudAccountAltDSID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.renewGrandslamToken(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 72) + *(_QWORD *)(a4 + 72));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CF92F754;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.isHSA2Enabled(account:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))() & 1;
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.getAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t type metadata accessor for DIPAccountManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for DIPAccountManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DIPAccountManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_1CFA43FE4(id *a1)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);

  *a1 = v4;
  return v4;
}

uint64_t sub_1CFA44020()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CFA44084(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
  return sub_1CFA42438(a1);
}

uint64_t SEPairingManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SEPairingManager.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t SEPairingManager.pairSecureElementIfNecessary()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFBC3480 + dword_1EFBC3480);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CFA44140;
  return v3();
}

uint64_t sub_1CFA44140(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_1CFA4419C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2, v5, v6, v7, v8, v9, v10, v11);
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedHardwareManager);
  if (v12)
  {
    v13 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    aBlock[4] = sub_1CFA451D0;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA44C4C;
    aBlock[3] = &block_descriptor_9;
    v16 = _Block_copy(aBlock);
    swift_release();
    v17 = objc_msgSend(v13, sel_startSecureElementManagerSessionWithPriority_, v16);
    _Block_release(v16);
    swift_unknownObjectRelease();

  }
  else
  {
    __break(1u);
  }
}

void sub_1CFA4430C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  unsigned int v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint8_t *v67;
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  void (*v82)(char *, uint64_t);
  unsigned int v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  unint64_t v93;
  void *v94;
  uint64_t v95;
  id v96;
  void *v97;
  id v98;
  unint64_t v99;
  void *v100;
  uint64_t v101;
  _QWORD v102[2];
  _QWORD *v103;
  int v104;
  uint8_t *v105;
  unsigned int v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  _QWORD v112[3];

  v112[2] = *MEMORY[0x1E0C80C00];
  v6 = sub_1CFB012CC();
  v7 = *(_QWORD *)(v6 - 8);
  v15 = MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v17 = (char *)v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v15, v18, v19, v20, v21, v22, v23, v24);
  v27 = (char *)v102 - v26;
  v35 = MEMORY[0x1E0C80A78](v25, v28, v29, v30, v31, v32, v33, v34);
  v37 = (char *)v102 - v36;
  v45 = MEMORY[0x1E0C80A78](v35, v38, v39, v40, v41, v42, v43, v44);
  v47 = (char *)v102 - v46;
  MEMORY[0x1E0C80A78](v45, v48, v49, v50, v51, v52, v53, v54);
  v56 = (char *)v102 - v55;
  if (a2)
  {
    v57 = a2;
    if (a1)
      objc_msgSend(a1, sel_endSession);
    v111 = a2;
    goto LABEL_11;
  }
  if (!a1)
  {
    LOWORD(v111) = 0;
    v69 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v70 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000039, 0x80000001CFB2E6B0, (__int16 *)&v111, 0, v69, 0xD000000000000059, 0x80000001CFB2E610, v71, 0xD00000000000001ELL, 0x80000001CFB2E5B0, 45);
    v111 = (void *)v70;
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
    sub_1CFB01D88();
    return;
  }
  v111 = 0;
  v108 = a1;
  v58 = objc_msgSend(v108, sel_validateSEPairings_, &v111);
  v109 = v111;
  if (v111)
  {
    v106 = v58;
    v107 = a3;
    v59 = qword_1ED9054E8;
    v60 = v109;
    if (v59 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v56, v61, v6);
    v62 = v60;
    v63 = sub_1CFB012B4();
    v64 = sub_1CFB01FC8();
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc();
      v104 = v65;
      v67 = (uint8_t *)v66;
      v103 = (_QWORD *)swift_slowAlloc();
      v105 = v67;
      *(_DWORD *)v67 = 138412290;
      v111 = v62;
      v102[0] = v112;
      v102[1] = v67 + 4;
      v62 = v62;
      sub_1CFB021C0();
      v68 = v103;
      *v103 = v109;

      _os_log_impl(&dword_1CF917000, v63, (os_log_type_t)v104, "SEPairingManager received failingSEID %@ while validating SE pairings", v105, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904380);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v68, -1, -1);
      MEMORY[0x1D17DA6E4](v105, -1, -1);
    }
    else
    {

      v63 = v62;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v56, v6);
    v58 = v106;
  }
  if (v58 == 27)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v77 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v78(v37, v77, v6);
    v79 = sub_1CFB012B4();
    v80 = sub_1CFB01FC8();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v81 = 0;
      _os_log_impl(&dword_1CF917000, v79, v80, "SEPairingManager secure element needs pairing.", v81, 2u);
      MEMORY[0x1D17DA6E4](v81, -1, -1);
    }

    v82 = *(void (**)(char *, uint64_t))(v7 + 8);
    v82(v37, v6);
    v110 = 0;
    v72 = v108;
    v83 = objc_msgSend(v108, sel_deleteAllApplets_error_, 1, &v110);
    v84 = v110;
    if (!v83)
    {
      v96 = v110;
      v97 = (void *)sub_1CFB00D20();

      swift_willThrow();
      LOWORD(v110) = 0;
      v98 = v97;
      v99 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v100 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v97, 0, 0xE000000000000000, (__int16 *)&v110, 0, v99, 0xD000000000000059, 0x80000001CFB2E610, v101, 0xD00000000000001ELL, 0x80000001CFB2E5B0, 75);
      v110 = v100;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
      sub_1CFB01D88();

      goto LABEL_37;
    }
    v78(v27, v77, v6);
    v85 = v84;
    v86 = sub_1CFB012B4();
    v87 = sub_1CFB01FC8();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_1CF917000, v86, v87, "SEPairingManager paired successfully.", v88, 2u);
      MEMORY[0x1D17DA6E4](v88, -1, -1);
    }

    v82(v27, v6);
    LOBYTE(v110) = 1;
  }
  else
  {
    if (v58)
    {
      v72 = v108;
      if (qword_1ED9054E8 != -1)
        swift_once();
      v89 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v17, v89, v6);
      v90 = sub_1CFB012B4();
      v91 = sub_1CFB01FC8();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v92 = 0;
        _os_log_impl(&dword_1CF917000, v90, v91, "SEPairingManager failed to check pairing status", v92, 2u);
        MEMORY[0x1D17DA6E4](v92, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
      LOWORD(v110) = 0;
      v93 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v94 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0, 0xE000000000000000, (__int16 *)&v110, 0, v93, 0xD000000000000059, 0x80000001CFB2E610, v95, 0xD00000000000001ELL, 0x80000001CFB2E5B0, 79);
      v110 = v94;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
      sub_1CFB01D88();
      goto LABEL_37;
    }
    v72 = v108;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v73 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v47, v73, v6);
    v74 = sub_1CFB012B4();
    v75 = sub_1CFB01FC8();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      _os_log_impl(&dword_1CF917000, v74, v75, "SEPairingManager secure element already paired. No further action needed.", v76, 2u);
      MEMORY[0x1D17DA6E4](v76, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v47, v6);
    LOBYTE(v110) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
  sub_1CFB01D94();
LABEL_37:

  objc_msgSend(v72, sel_endSession);
}

void sub_1CFA44C4C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t SEPairingManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SEPairingManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CFA44CD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EFBC3480 + dword_1EFBC3480);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CFA45238;
  return v3();
}

uint64_t sub_1CFA44D30()
{
  _QWORD *v0;

  v0[2] = type metadata accessor for DIPSignpost.Config(0);
  v0[3] = swift_task_alloc();
  type metadata accessor for DIPSignpost(0);
  v0[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA44DA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_1EFBBD390 != -1)
    swift_once();
  v2 = v0[3];
  v1 = v0[4];
  v3 = __swift_project_value_buffer(v0[2], (uint64_t)qword_1EFBC3260);
  sub_1CF94C548(v3, v2);
  DIPSignpost.init(_:)(v2, v1);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1CFA44E88;
  return sub_1CFB02994();
}

uint64_t sub_1CFA44E88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA44EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 56);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1CF960F94(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1CFA44F54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  __int16 v7[5];

  v1 = *(void **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v7[0] = 164;
  v3 = v1;
  v4 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v1, 0xD000000000000038, 0x80000001CFB2E5D0, v7, 0, v4, 0xD000000000000059, 0x80000001CFB2E610, v5, 0xD00000000000001ELL, 0x80000001CFB2E5B0, 84);
  swift_willThrow();

  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1CF960F94(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t dispatch thunk of SEPairingManaging.pairSecureElementIfNecessary()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CFA450E8;
  return v7(a1, a2);
}

uint64_t sub_1CFA450E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t type metadata accessor for SEPairingManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for SEPairingManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SEPairingManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1CFA4516C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1CFA451D0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150) - 8) + 80);
  sub_1CFA4430C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1CFA4523C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA45258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1CFA45300;
  return sub_1CFB02994();
}

uint64_t sub_1CFA45300()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA45374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA45390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE6B8);
  *v3 = v0;
  v3[1] = sub_1CFA4543C;
  return sub_1CFB02994();
}

uint64_t sub_1CFA4543C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA454B0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA454E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CFA4551C(a1, a2, a3, (uint64_t)&unk_1E8CEB8E8, (void (*)(uint64_t, uint64_t))sub_1CF99D844, (uint64_t)&unk_1EFBC3AD8);
}

uint64_t sub_1CFA45500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CFA4551C(a1, a2, a3, (uint64_t)&unk_1E8CEB7A8, (void (*)(uint64_t, uint64_t))sub_1CF99D844, (uint64_t)&unk_1EFBC3A98);
}

uint64_t sub_1CFA4551C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;

  v11 = sub_1CFB012CC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13, v14, v15, v16, v17, v18, v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED905098);
  MEMORY[0x1E0C80A78](v22, v23, v24, v25, v26, v27, v28, v29);
  v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v32 = sub_1CFB01DD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = a3;
    v33[5] = a1;
    v33[6] = a2;
    a5(a1, a2);
    swift_retain();
    sub_1CF959C4C((uint64_t)v31, a6, (uint64_t)v33);
    return swift_release();
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v21, v35, v11);
    v36 = sub_1CFB012B4();
    v37 = sub_1CFB01FC8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1CF917000, v36, v37, "SendableXPCConnection onCancel is nil", v38, 2u);
      MEMORY[0x1D17DA6E4](v38, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }
}

uint64_t sub_1CFA45734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA457A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3CF8;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA45990()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA45A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA45A78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3CD8;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA45C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA45CD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3C90;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA45EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA45F30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3C58;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA46118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4618C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3C28;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA46374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA463E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3BF0;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA465D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA46644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3BB8;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA4682C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA468A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3B80;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA46A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA46AFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3B28;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA46CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA46D58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3AE8;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA46F40;
  return sub_1CFB02994();
}

uint64_t sub_1CFA46F40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA46FB4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA46FEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  swift_release();
  v3(v4, v2, v5);
  v6 = v1;
  v7 = v1;
  v8 = sub_1CFB012B4();
  v9 = sub_1CFB01FD4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 152);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v14;
    sub_1CFB021C0();
    *v12 = v14;

    _os_log_impl(&dword_1CF917000, v8, v9, "SendableXPCConnection error occurred when cancelling the task: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904380);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v12, -1, -1);
    MEMORY[0x1D17DA6E4](v11, -1, -1);

  }
  else
  {
    v15 = *(void **)(v0 + 152);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 120))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA471BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_1CFB012CC();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA47230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  if (qword_1ED9054E8 != -1)
    swift_once();
  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[10];
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  v0[13] = v4;
  swift_beginAccess();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v5(v1, v4, v2);
  v6 = sub_1CFB012B4();
  v7 = sub_1CFB01FBC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1CF917000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D17DA6E4](v8, -1, -1);
  }
  v9 = v0[12];
  v10 = v0[9];
  v11 = v0[10];
  v13 = v0[7];
  v12 = v0[8];
  v14 = v0[6];

  v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[15] = v15;
  v15(v9, v10);
  v16 = swift_allocObject();
  v0[16] = v16;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v12;
  swift_retain();
  v17 = (_QWORD *)swift_task_alloc();
  v0[17] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EFBC3AA8;
  v17[4] = v16;
  v18 = (_QWORD *)swift_task_alloc();
  v0[18] = v18;
  *v18 = v0;
  v18[1] = sub_1CFA45990;
  return sub_1CFB02994();
}

uint64_t sub_1CFA47418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA47450(a1, a2, a3, a4, &qword_1EFBC3AF0, (uint64_t)&unk_1E8CEB938, (uint64_t)&unk_1EFBC3B00);
}

uint64_t sub_1CFA47434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA47450(a1, a2, a3, a4, &qword_1ED904150, (uint64_t)&unk_1E8CEB870, (uint64_t)&unk_1EFBC3AC8);
}

uint64_t sub_1CFA47450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;

  v37 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14, v15, v16, v17, v18, v19, v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED905098);
  MEMORY[0x1E0C80A78](v21, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1CFB01DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v32 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = 0;
  *((_QWORD *)v33 + 3) = 0;
  *((_QWORD *)v33 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v33[v32], (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v34 = &v33[(v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v34 = a3;
  *((_QWORD *)v34 + 1) = a4;
  swift_retain();
  swift_retain();
  sub_1CF959C4C((uint64_t)v30, v37, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_1CFA475C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v8 = sub_1CFB012CC();
  v7[37] = v8;
  v7[38] = *(_QWORD *)(v8 - 8);
  v7[39] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
  v7[40] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(_QWORD *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA47658()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;

  v2 = v0[42];
  v1 = v0[43];
  v3 = v0[40];
  v4 = v0[41];
  v5 = v0[33];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[34], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5946C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_655;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[35];
    v0[29] = v0[27];
    v29 = (uint64_t (*)(void))((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[44] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA47AAC;
    return v29();
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[38];
    v14 = v0[39];
    v16 = v0[37];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[37];
    if (v20)
    {
      v30 = v0[37];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[33] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA47AAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA47B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3D00);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA47BA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5AD24;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_891;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA48004()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA48068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3C98);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA480FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5A860;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_841;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3C60);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA485F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5A634;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_814;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA48A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v8 = sub_1CFB012CC();
  v7[37] = v8;
  v7[38] = *(_QWORD *)(v8 - 8);
  v7[39] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
  v7[40] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(_QWORD *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA48AE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[42];
  v1 = v0[43];
  v3 = v0[40];
  v4 = v0[41];
  v5 = v0[33];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[34], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA59550;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_788;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[35];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[44] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48F44;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 46, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[38];
    v14 = v0[39];
    v16 = v0[37];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[37];
    if (v20)
    {
      v30 = v0[37];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[33] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA48F44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA48FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3BF8);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4903C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5A1E8;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_757;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4949C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[39] = a6;
  v7[40] = a7;
  v7[37] = a4;
  v7[38] = a5;
  v8 = sub_1CFB012CC();
  v7[41] = v8;
  v7[42] = *(_QWORD *)(v8 - 8);
  v7[43] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3BC0);
  v7[44] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[45] = v10;
  v7[46] = *(_QWORD *)(v10 + 64);
  v7[47] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA49530()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;

  v2 = v0[46];
  v1 = v0[47];
  v3 = v0[44];
  v4 = v0[45];
  v5 = v0[37];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[38], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA59FBC;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_731;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[39];
    v0[31] = v0[34];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[48] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA4998C;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 29, v0 + 31);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v14 = v0[42];
    v15 = v0[43];
    v16 = v0[41];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[42];
    v21 = v0[43];
    v23 = v0[41];
    if (v20)
    {
      v28 = v0[42];
      v24 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v30 = v27;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v25 = sub_1CFB01A7C();
      v0[32] = sub_1CF9C974C(v25, v26, &v30);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[33] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v30);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v27, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v23);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[36] = (*(uint64_t (**)(_QWORD))(v0[37] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4998C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA499F0()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 232);
  sub_1CFB01D94();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA49A58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 392);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 280) = v1;
  sub_1CFB01D88();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA49AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B88);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA49B6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA59D48;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_700;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA49FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B48);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4A060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA59B00;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_670;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA48004;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001CLL, 0x80000001CFB2E970, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4A4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v8 = sub_1CFB012CC();
  v7[37] = v8;
  v7[38] = *(_QWORD *)(v8 - 8);
  v7[39] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068);
  v7[40] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(_QWORD *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4A554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;

  v2 = v0[42];
  v1 = v0[43];
  v3 = v0[40];
  v4 = v0[41];
  v5 = v0[33];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[34], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA5946C;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_590;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9049F0);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[35];
    v0[29] = v0[27];
    v29 = (uint64_t (*)(void))((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[44] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA4A9A8;
    return v29();
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[38];
    v14 = v0[39];
    v16 = v0[37];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[37];
    if (v20)
    {
      v30 = v0[37];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001BLL, 0x80000001CFB2E930, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[33] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4A9A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4AA0C()
{
  uint64_t v0;

  sub_1CFB01D94();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4AA68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 256) = v1;
  sub_1CFB01D88();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4AAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  v8 = sub_1CFB012CC();
  v7[39] = v8;
  v7[40] = *(_QWORD *)(v8 - 8);
  v7[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3AF0);
  v7[42] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(_QWORD *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4AB7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[44];
  v1 = v0[45];
  v3 = v0[42];
  v4 = v0[43];
  v5 = v0[35];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[36], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA597AC;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_626;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9049F0);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[37];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[46] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA4AFDC;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[40];
    v14 = v0[41];
    v16 = v0[39];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[40];
    v21 = v0[41];
    v23 = v0[39];
    if (v20)
    {
      v30 = v0[39];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001BLL, 0x80000001CFB2E930, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[35] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4AFDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4B040()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 256);
  sub_1CFB01D94();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4B0A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 376);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  *(_QWORD *)(v0 + 264) = v1;
  sub_1CFB01D88();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4B128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v8 = sub_1CFB012CC();
  v7[37] = v8;
  v7[38] = *(_QWORD *)(v8 - 8);
  v7[39] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150);
  v7[40] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(_QWORD *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4B1BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  int *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v0[42];
  v1 = v0[43];
  v3 = v0[40];
  v4 = v0[41];
  v5 = v0[33];
  v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v1, v0[34], v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v1, v3);
  v0[2] = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v8 + ((v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1CFA59550;
  v0[7] = v8;
  v0[3] = 1107296256;
  v0[4] = sub_1CFAA7B94;
  v0[5] = &block_descriptor_603;
  v9 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  v10 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v9);
  _Block_release(v9);
  sub_1CFB02298();
  swift_unknownObjectRelease();
  sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9049F0);
  if (swift_dynamicCast())
  {
    v11 = (int *)v0[35];
    v0[29] = v0[27];
    v29 = (int *)((char *)v11 + *v11);
    v12 = (_QWORD *)swift_task_alloc();
    v0[44] = v12;
    *v12 = v0;
    v12[1] = sub_1CFA4B61C;
    return ((uint64_t (*)(_QWORD *, _QWORD *))v29)(v0 + 46, v0 + 29);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = v0[38];
    v14 = v0[39];
    v16 = v0[37];
    v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    sub_1CF94BBF0((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    v18 = sub_1CFB012B4();
    v19 = sub_1CFB01FD4();
    v20 = os_log_type_enabled(v18, v19);
    v22 = v0[38];
    v21 = v0[39];
    v23 = v0[37];
    if (v20)
    {
      v30 = v0[37];
      v24 = swift_slowAlloc();
      v28 = v22;
      v25 = swift_slowAlloc();
      v31 = v25;
      *(_DWORD *)v24 = 136315394;
      sub_1CF94BBF0((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      v26 = sub_1CFB01A7C();
      v0[30] = sub_1CF9C974C(v26, v27, &v31);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v24 + 12) = 2080;
      v0[31] = sub_1CF9C974C(0xD00000000000001BLL, 0x80000001CFB2E930, &v31);
      sub_1CFB021C0();
      _os_log_impl(&dword_1CF917000, v18, v19, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v25, -1, -1);
      MEMORY[0x1D17DA6E4](v24, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v30);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    v0[28] = (*(uint64_t (**)(_QWORD))(v0[33] + 24))(0);
    sub_1CFB01D88();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

uint64_t sub_1CFA4B61C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA4B680()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 369) = *(_BYTE *)(v0 + 368);
  sub_1CFB01D94();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4B6E8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a3;
  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v18, v7);
  v19 = a1;
  v20 = a1;
  v21 = sub_1CFB012B4();
  v22 = sub_1CFB01FD4();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v31 = a2;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v34 = v25;
    v30 = a4;
    *(_DWORD *)v24 = 136315138;
    v29[1] = v24 + 4;
    swift_getErrorValue();
    v26 = sub_1CFB02A24();
    v33 = sub_1CF9C974C(v26, v27, &v34);
    a4 = v30;
    sub_1CFB021C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CF917000, v21, v22, "XPC connection error: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v25, -1, -1);
    MEMORY[0x1D17DA6E4](v24, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  v34 = (*(uint64_t (**)(void *))(v32 + 24))(a1);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_1CFB01D88();
}

id IdentityManagementUIClient.__allocating_init(exportedObject:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1CFA54B9C(a1);
  swift_unknownObjectRelease();
  return v4;
}

id IdentityManagementUIClient.init(exportedObject:)(uint64_t a1)
{
  id v1;

  v1 = sub_1CFA54B9C(a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1CFA4B9CC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v4;

  v4 = 508;
  v0 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  v1 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000013, 0x80000001CFB248C0, &v4, 0, v0, 0xD00000000000005ELL, 0x80000001CFB2EB10, v2, 0xD000000000000015, 0x80000001CFB2EBA0, 39);
  return v1;
}

uint64_t sub_1CFA4BA98(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;

  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  v14 = a1;
  v15 = a1;
  v16 = sub_1CFB012B4();
  v17 = sub_1CFB01FC8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136315138;
    v23[0] = v18 + 4;
    swift_getErrorValue();
    v20 = sub_1CFB02A24();
    v23[1] = sub_1CF9C974C(v20, v21, &v24);
    sub_1CFB021C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CF917000, v16, v17, "error: identity management ui client init %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v19, -1, -1);
    MEMORY[0x1D17DA6E4](v18, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

id IdentityManagementUIClient.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void (*v28)(char *, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  objc_class *v32;
  uint64_t v34;
  objc_super v35;

  v1 = v0;
  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  v11 = MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v34 - v21;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v24(v22, v23, v2);
  v25 = sub_1CFB012B4();
  v26 = sub_1CFB01FC8();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1CF917000, v25, v26, "IdentityManagementUIClient deinit", v27, 2u);
    MEMORY[0x1D17DA6E4](v27, -1, -1);
  }

  v28 = *(void (**)(char *, uint64_t))(v3 + 8);
  v28(v22, v2);
  v24(v13, v23, v2);
  v29 = sub_1CFB012B4();
  v30 = sub_1CFB01FC8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1CF917000, v29, v30, "IdentityManagementUIClient invalidating server connection", v31, 2u);
    MEMORY[0x1D17DA6E4](v31, -1, -1);
  }

  v28(v13, v2);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection], sel_invalidate);
  v32 = (objc_class *)type metadata accessor for IdentityManagementUIClient();
  v35.receiver = v1;
  v35.super_class = v32;
  return objc_msgSendSuper2(&v35, sel_dealloc);
}

void sub_1CFA4BF9C(uint64_t a1, int a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  _BYTE v57[12];
  int v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v5 = v4;
  v58 = a2;
  v59 = a1;
  v8 = sub_1CFB012CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1CFB00F9C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21, v22, v23, v24, v25, v26, v27);
  v29 = &v57[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = *(void **)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v31 = sub_1CFB00F60();
    v33 = v32;
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v29, v19);
    v34 = swift_allocObject();
    v35 = swift_weakInit();
    MEMORY[0x1E0C80A78](v35, v36, v37, v38, v39, v40, v41, v42);
    *(_QWORD *)&v57[-48] = v34;
    *(_QWORD *)&v57[-40] = v31;
    *(_QWORD *)&v57[-32] = v33;
    *(_QWORD *)&v57[-24] = a3;
    *(_QWORD *)&v57[-16] = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v44 = (_QWORD *)swift_allocObject();
    v44[2] = v43;
    v44[3] = v31;
    v44[4] = v33;
    v44[5] = a3;
    v44[6] = a4;
    aBlock[4] = sub_1CFA55200;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4C48C;
    aBlock[3] = &block_descriptor_10;
    v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_triggerAssetsUploadWithProofingOptions_canUploadOnExpensiveNetwork_completion_, v59, v58 & 1, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v46 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v18, v46, v8);
    v47 = sub_1CFB012B4();
    v48 = sub_1CFB01FC8();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_1CF917000, v47, v48, "Cannot invoke triggerAssetsUpload because no proxy is set", v49, 2u);
      MEMORY[0x1D17DA6E4](v49, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v18, v8);
    v50 = *(_WORD *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v51 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v52 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v53 = *(void **)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v54 = (void *)swift_allocError();
    *(_WORD *)v55 = v50;
    *(_QWORD *)(v55 + 8) = v51;
    *(_QWORD *)(v55 + 16) = v52;
    *(_QWORD *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = v53;
    a3(v54);

  }
}

uint64_t sub_1CFA4C350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1D17DA7A4](v7);
  if (v8)
  {
    v9 = (void *)v8;
    swift_retain();

    swift_allocObject();
    v10 = swift_weakInit();
    MEMORY[0x1E0C80A78](v10, v11, v12, v13, v14, v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B60);
    sub_1CFB02040();
    swift_release();
    if (v19)
      sub_1CF99BC44(v19);
    swift_release();
  }
  return a5(a1);
}

void sub_1CFA4C48C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1CFA4C554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4C570()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[5];
  v3 = (void *)v0[3];
  v2 = v0[4];
  v4 = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v5 = (_QWORD *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  v6 = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = v4;
  v7[3] = &unk_1EFBC34D0;
  v7[4] = v5;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v4;
  v9 = (_QWORD *)swift_task_alloc();
  v0[10] = v9;
  type metadata accessor for IdentityProofingDisplayInfo();
  *v9 = v0;
  v9[1] = sub_1CFA4C674;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4C674()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA4C710()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4C758(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a1;
  v5[17] = a3;
  v5[20] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4C77C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[19];
  v1 = (void *)v0[20];
  v4 = v0[17];
  v3 = v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA4C830;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1CFA4C8E0;
  v6[3] = &block_descriptor_893;
  v6[4] = v5;
  objc_msgSend(v1, sel_prepareForProofingDisplay_proofingOptions_idType_completionHandler_, v4, v3, v2, v6);
  return swift_continuation_await();
}

uint64_t sub_1CFA4C830()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4C890()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4C8A4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4CA28(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  id v10;
  id v11;
  _QWORD *v12;

  v5[2] = a1;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  v10 = a1;
  v11 = a5;
  v12 = (_QWORD *)swift_task_alloc();
  v5[5] = v12;
  *v12 = v5;
  v12[1] = sub_1CFA4CACC;
  v12[5] = a3;
  v12[6] = v11;
  v12[3] = v10;
  v12[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4CACC(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  void *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v6 = *(void **)(*v2 + 16);
  v5 = *(void **)(*v2 + 24);
  v7 = *v2;
  swift_task_dealloc();

  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 32);
  if (v3)
  {
    v9 = (void *)sub_1CFB00D14();

    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1CFA4CB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CFA4CBAC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = (void *)v0[2];
  v2 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v3 = swift_allocObject();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = v5;
  v5[2] = v2;
  v5[3] = &unk_1EFBC34F8;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = v7;
  *v7 = v0;
  v7[1] = sub_1CFA4CC94;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4CC94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA4CD1C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4CD64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 120) = a3;
  *(_QWORD *)(v3 + 128) = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA4CD80()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[15];
  v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_1CFA4CE18;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1CFA4CEB4;
  v4[3] = &block_descriptor_866;
  v4[4] = v3;
  objc_msgSend(v1, sel_prepareForProofingIdentity_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1CFA4CE18()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4CE78()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4CEB4(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1CFA4D058(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_1CFA4D0E8;
  v8[2] = v6;
  v8[3] = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA4D0E8()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)(*v1 + 16);
  v2 = *(void **)(*v1 + 24);
  v4 = *v1;
  swift_task_dealloc();

  v5 = *(_QWORD *)(v4 + 32);
  if (v0)
  {
    v6 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 32), 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1CFA4D18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4D1A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[4];
  v3 = v0[2];
  v2 = v0[3];
  v4 = *(_QWORD *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v5 = (_QWORD *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EFBC3520;
  v6[4] = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  *v8 = v0;
  v8[1] = sub_1CFA4D2A4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4D2A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA4D32C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4D374(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[15] = a3;
  v5[16] = a4;
  v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return swift_task_switch();
}

uint64_t sub_1CFA4D394()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[17];
  v1 = (void *)v0[18];
  v3 = sub_1CFB01A04();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1CFA4D440;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4CEB4;
  v5[3] = &block_descriptor_849;
  v5[4] = v4;
  objc_msgSend(v1, sel_provisionIdentityWithState_proofingOptions_completionHandler_, v3, v2, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA4D440()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4D4A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4D4D4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4D648(int a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v7 = sub_1CFB01A28();
  v9 = v8;
  v4[4] = v8;
  v10 = a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[5] = v11;
  *v11 = v4;
  v11[1] = sub_1CFA5AD34;
  v11[4] = a2;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v9;
  return swift_task_switch();
}

void sub_1CFA4D6F4(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  void (*v47)(_QWORD, void *);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v3 = v2;
  v6 = sub_1CFB012CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CFB00F9C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22, v23, v24, v25);
  v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v29 = sub_1CFB00F60();
    v59 = v3;
    v30 = a1;
    v31 = v29;
    v32 = a2;
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    v35 = swift_allocObject();
    v36 = swift_weakInit();
    MEMORY[0x1E0C80A78](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v59 - 6) = v35;
    *(&v59 - 5) = v31;
    *(&v59 - 4) = v34;
    *(&v59 - 3) = (uint64_t)v30;
    *(&v59 - 2) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v31;
    v45[4] = v34;
    v45[5] = v30;
    v45[6] = v32;
    aBlock[4] = sub_1CFA55564;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_37_0;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchImageQualitySettingsWithCompletion_, v46);
    _Block_release(v46);
    swift_unknownObjectRelease();
  }
  else
  {
    v47 = (void (*)(_QWORD, void *))a1;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v48, v6);
    v49 = sub_1CFB012B4();
    v50 = sub_1CFB01FC8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1CF917000, v49, v50, "Cannot invoke fetchImageQualitySettings because no proxy is set", v51, 2u);
      MEMORY[0x1D17DA6E4](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    v52 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v55 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v56 = (void *)swift_allocError();
    *(_WORD *)v57 = v52;
    *(_QWORD *)(v57 + 8) = v53;
    *(_QWORD *)(v57 + 16) = v54;
    *(_QWORD *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v55;
    v47(0, v56);

  }
}

void sub_1CFA4DAC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  void *v32;
  void (*v33)(_QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  void (*v49)(_QWORD, void *);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD aBlock[7];

  v7 = v6;
  v64 = a2;
  v65 = a4;
  v62 = a3;
  v63 = a1;
  v10 = sub_1CFB012CC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15, v16, v17, v18);
  v20 = &v61[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = sub_1CFB00F9C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23, v24, v25, v26, v27, v28, v29);
  v31 = &v61[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = *(void **)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v32)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v33 = a5;
    v34 = sub_1CFB00F60();
    v36 = v35;
    (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v31, v21);
    v37 = swift_allocObject();
    v38 = swift_weakInit();
    MEMORY[0x1E0C80A78](v38, v39, v40, v41, v42, v43, v44, v45);
    *(_QWORD *)&v61[-48] = v37;
    *(_QWORD *)&v61[-40] = v34;
    *(_QWORD *)&v61[-32] = v36;
    *(_QWORD *)&v61[-24] = v33;
    *(_QWORD *)&v61[-16] = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v47 = (_QWORD *)swift_allocObject();
    v47[2] = v46;
    v47[3] = v34;
    v47[4] = v36;
    v47[5] = v33;
    v47[6] = a6;
    aBlock[4] = sub_1CFA555B0;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_45_0;
    v48 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_proofIdentity_::totalUploadAssetsFileSizeInBytes_completion_, v63, v64, v62 & 1, v65, v48);
    _Block_release(v48);
    swift_unknownObjectRelease();
  }
  else
  {
    v49 = (void (*)(_QWORD, void *))a5;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v50 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v20, v50, v10);
    v51 = sub_1CFB012B4();
    v52 = sub_1CFB01FC8();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1CF917000, v51, v52, "Cannot invoke proofIdentity because no proxy is set", v53, 2u);
      MEMORY[0x1D17DA6E4](v53, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v20, v10);
    v54 = *(_WORD *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v55 = *(_QWORD *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v56 = *(_QWORD *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v57 = *(void **)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v58 = (void *)swift_allocError();
    *(_WORD *)v59 = v54;
    *(_QWORD *)(v59 + 8) = v55;
    *(_QWORD *)(v59 + 16) = v56;
    *(_QWORD *)(v59 + 24) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v57;
    v49(0, v58);

  }
}

void sub_1CFA4DF20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  void (*v49)(_QWORD, void *);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  _QWORD v61[4];
  uint64_t v62;
  _QWORD aBlock[7];

  v6 = v5;
  v61[3] = a2;
  v62 = a3;
  v61[2] = a1;
  v9 = sub_1CFB012CC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14, v15, v16, v17);
  v19 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1CFB00F9C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)v61 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(void **)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v31)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v32 = sub_1CFB00F60();
    v61[1] = v6;
    v33 = a4;
    v35 = v34;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
    v36 = swift_allocObject();
    v37 = swift_weakInit();
    MEMORY[0x1E0C80A78](v37, v38, v39, v40, v41, v42, v43, v44);
    v61[-6] = v36;
    v61[-5] = v32;
    v61[-4] = v35;
    v61[-3] = v33;
    v61[-2] = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v45 = (void *)sub_1CFB01A04();
    v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v47 = (_QWORD *)swift_allocObject();
    v47[2] = v46;
    v47[3] = v32;
    v47[4] = v35;
    v47[5] = v33;
    v47[6] = a5;
    aBlock[4] = sub_1CFA55618;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_54_0;
    v48 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_proofIdentityUsing_proofingOptions_completion_, v45, v62, v48);
    _Block_release(v48);
    swift_unknownObjectRelease();

  }
  else
  {
    v49 = (void (*)(_QWORD, void *))a4;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v50 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v19, v50, v9);
    v51 = sub_1CFB012B4();
    v52 = sub_1CFB01FC8();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1CF917000, v51, v52, "Cannot invoke proofIdentity because no proxy is set", v53, 2u);
      MEMORY[0x1D17DA6E4](v53, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    v54 = *(_WORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v55 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v56 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v57 = *(void **)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v58 = (void *)swift_allocError();
    *(_WORD *)v59 = v54;
    *(_QWORD *)(v59 + 8) = v55;
    *(_QWORD *)(v59 + 16) = v56;
    *(_QWORD *)(v59 + 24) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v57;
    v49(0, v58);

  }
}

uint64_t sub_1CFA4E380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA4E398()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3538;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  type metadata accessor for IdentityProofingStatus();
  *v4 = v0;
  v4[1] = sub_1CFA4E468;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4E468()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA4E4EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA4E508()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA4E59C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA4C8E0;
  v3[3] = &block_descriptor_843;
  v3[4] = v2;
  objc_msgSend(v1, sel_proofingFlowAvailabilityWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA4E59C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4E718(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA5AD40;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA4E790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA4E7B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[6];
  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[3];
  v5 = *(_QWORD *)(v0[7] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v6 = (_QWORD *)swift_allocObject();
  v0[8] = v6;
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v5;
  v7[3] = &unk_1EFBC3560;
  v7[4] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v9 = (_QWORD *)swift_task_alloc();
  v0[11] = v9;
  type metadata accessor for IdentityProofingConfiguration();
  *v9 = v0;
  v9[1] = sub_1CFA4E8CC;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4E8CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA4E968()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4E9B0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[18] = a4;
  v6[19] = a5;
  v6[16] = a1;
  v6[17] = a3;
  v7 = *a2;
  v6[20] = a6;
  v6[21] = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA4E9D4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[21];
  v2 = sub_1CFB01A04();
  v0[22] = v2;
  v3 = sub_1CFB01A04();
  v0[23] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA4EAA8;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4C8E0;
  v5[3] = &block_descriptor_816;
  v5[4] = v4;
  objc_msgSend(v1, sel_proofingStatusFor_country_completionHandler_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA4EAA8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4EB08()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 176);
  v1 = *(void **)(v0 + 184);
  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4EB48()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4ECC8(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_1CFB01A28();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_1CFB01A28();
  v11 = v10;
  v4[5] = v10;
  v12 = a4;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_1CFA4ED8C;
  v13[6] = v11;
  v13[7] = v12;
  v13[4] = v8;
  v13[5] = v9;
  v13[3] = v6;
  return swift_task_switch();
}

uint64_t sub_1CFA4ED8C(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_1CFB00D14();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](*(_QWORD *)(v6 + 24), a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1CFA4EE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CFA4EE7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = v0[2];
  v2 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v3 = swift_allocObject();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v2;
  v4[3] = &unk_1EFBC3588;
  v4[4] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_1CFA4EF68;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4EF68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(unsigned __int8 *)(v2 + 72));
}

uint64_t sub_1CFA4F000()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1CFA4F05C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;

  v3[15] = a1;
  v3[16] = a3;
  v3[17] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4F07C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_1CFA4F11C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1CFA4F180;
  v4[3] = &block_descriptor_790;
  v4[4] = v3;
  objc_msgSend(v1, sel_isWatchPairedWithIdType_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1CFA4F11C()
{
  return swift_task_switch();
}

uint64_t sub_1CFA4F168()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 120) = *(_BYTE *)(v0 + 144);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4F180(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1CFA4F2C0(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_1CFA4F348;
  v7[2] = a1;
  v7[3] = v6;
  return swift_task_switch();
}

uint64_t sub_1CFA4F348(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1CFA4F3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA4F3D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[3];
  v2 = (void *)v0[2];
  v3 = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v4 = swift_allocObject();
  v0[5] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  v6[2] = v3;
  v6[3] = &unk_1EFBC35B0;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[7] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v8 = (_QWORD *)swift_task_alloc();
  v0[8] = v8;
  *v8 = v0;
  v8[1] = sub_1CFA4F4C4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4F4C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA4F54C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4F594(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = a4;
  v4[17] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4F5B4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v3 = v0[15];
  v0[2] = v0;
  v0[3] = sub_1CFA4F654;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4CEB4;
  v5[3] = &block_descriptor_763;
  v5[4] = v4;
  objc_msgSend(v1, sel_proofingCancelledWithConfiguration_proofingOptions_completionHandler_, v3, v2, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA4F654()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4F6B4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA4F824(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  _QWORD *v10;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a4;
  v10 = (_QWORD *)swift_task_alloc();
  v4[5] = v10;
  *v10 = v4;
  v10[1] = sub_1CFA4D0E8;
  v10[3] = a2;
  v10[4] = v9;
  v10[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA4F8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA4F8D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[4];
  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v5 = (_QWORD *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = v1;
  sub_1CF9239E0(v2, v3);
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EFBC35D0;
  v6[4] = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  *v8 = v0;
  v8[1] = sub_1CFA4F9D4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4F9D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA4FA5C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[15] = a3;
  v5[16] = a4;
  v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return swift_task_switch();
}

uint64_t sub_1CFA4FA7C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[17];
  v1 = (void *)v0[18];
  v3 = sub_1CFB00E58();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1CFA4FB28;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4CEB4;
  v5[3] = &block_descriptor_761;
  v5[4] = v4;
  objc_msgSend(v1, sel_setGlobalBoundACLWithData_type_completionHandler_, v3, v2, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA4FB28()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA4FCBC(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a4;
  v10 = sub_1CFB00E7C();
  v12 = v11;

  v4[4] = v10;
  v4[5] = v12;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_1CFA4FD70;
  v13[4] = a2;
  v13[5] = v9;
  v13[2] = v10;
  v13[3] = v12;
  return swift_task_switch();
}

uint64_t sub_1CFA4FD70()
{
  void *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *(_QWORD *)(*v1 + 32);
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  sub_1CF923A24(v3, v2);
  v6 = *(_QWORD *)(v5 + 24);
  if (v0)
  {
    v7 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1CFA4FE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA4FE48()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[6];
  v3 = v0[4];
  v2 = v0[5];
  v4 = v0[3];
  v5 = *(_QWORD *)(v0[7] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v6 = (_QWORD *)swift_allocObject();
  v0[8] = v6;
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v2;
  v6[5] = v1;
  sub_1CF9239E0(v4, v3);
  sub_1CF9239E0(v2, v1);
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v5;
  v7[3] = &unk_1EFBC35F0;
  v7[4] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[10] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v9 = (_QWORD *)swift_task_alloc();
  v0[11] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC44F0);
  *v9 = v0;
  v9[1] = sub_1CFA4FF70;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA4FF70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA5000C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[18] = a4;
  v6[19] = a5;
  v6[16] = a1;
  v6[17] = a3;
  v7 = *a2;
  v6[20] = a6;
  v6[21] = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA50030()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[21];
  v2 = sub_1CFB00E58();
  v0[22] = v2;
  v3 = sub_1CFB00E58();
  v0[23] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA50104;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA50164;
  v5[3] = &block_descriptor_759;
  v5[4] = v4;
  objc_msgSend(v1, sel_setModifiedGlobalBoundACLWithData_externalizedLAContext_completionHandler_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA50104()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA50164(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1CFB00F9C();
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1CFB01CA4();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1CFA50334(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  v10 = a4;
  v11 = sub_1CFB00E7C();
  v13 = v12;

  v4[4] = v11;
  v4[5] = v13;
  v14 = sub_1CFB00E7C();
  v16 = v15;

  v4[6] = v14;
  v4[7] = v16;
  v17 = (_QWORD *)swift_task_alloc();
  v4[8] = v17;
  *v17 = v4;
  v17[1] = sub_1CFA5040C;
  v17[6] = v16;
  v17[7] = v10;
  v17[4] = v13;
  v17[5] = v14;
  v17[3] = v11;
  return swift_task_switch();
}

uint64_t sub_1CFA5040C()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *(void **)(*v1 + 16);
  v4 = *v1;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v4 + 32);
  v5 = *(_QWORD *)(v4 + 40);
  sub_1CF923A24(*(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56));
  sub_1CF923A24(v6, v5);
  if (v0)
  {
    v7 = sub_1CFB00D14();

    v8 = 0;
    v9 = (void *)v7;
  }
  else
  {
    sub_1CFB00F9C();
    v8 = sub_1CFB01C8C();
    swift_bridgeObjectRelease();
    v7 = 0;
    v9 = (void *)v8;
  }
  v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 24);
  v10[2](v10, v8, v7);

  _Block_release(v10);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1CFA504F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA50510()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3610;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE6B8);
  *v4 = v0;
  v4[1] = sub_1CFA505E4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA505E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA50658(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA50674()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA50708;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA50754;
  v3[3] = &block_descriptor_733;
  v3[4] = v2;
  objc_msgSend(v1, sel_retrieveBioBindingUnboundACLWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA50708()
{
  return swift_task_switch();
}

uint64_t sub_1CFA50754(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v2 = (uint64_t)a2;
  v3 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    v4 = a2;
    v2 = sub_1CFB00E7C();
    v6 = v5;

  }
  else
  {
    v6 = 0xF000000000000000;
  }
  v8[0] = v2;
  v8[1] = v6;
  sub_1CFA59D54((uint64_t)v8, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_1CFA508E4(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA5AD54;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA5095C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA50974()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3630;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE6B8);
  *v4 = v0;
  v4[1] = sub_1CFA505E4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA50A48(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA50A64()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA50708;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA50754;
  v3[3] = &block_descriptor_707;
  v3[4] = v2;
  objc_msgSend(v1, sel_retrievePasscodeBindingUnboundACLWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA50C14(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA5AD54;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA50C8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA50CA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3648;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE6B8);
  *v4 = v0;
  v4[1] = sub_1CFA50D78;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA50D78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA50DEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CFA50DF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();

  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t sub_1CFA50E44(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA50E60()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA50EF4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA50754;
  v3[3] = &block_descriptor_706;
  v3[4] = v2;
  objc_msgSend(v1, sel_retrieveBoundACLWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA50EF4()
{
  return swift_task_switch();
}

uint64_t sub_1CFA50F40()
{
  uint64_t v0;

  *(_OWORD *)*(_QWORD *)(v0 + 136) = *(_OWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA51074(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA510EC;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA510EC(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD);

  v5 = *v2;
  v6 = *(void **)(*v2 + 16);
  v7 = *v2;
  swift_task_dealloc();

  if (a2 >> 60 == 15)
  {
    v8 = 0;
  }
  else
  {
    v8 = (void *)sub_1CFB00E58();
    sub_1CF931AB0(a1, a2);
  }
  v9 = *(void (***)(_QWORD, _QWORD))(v5 + 24);
  ((void (**)(_QWORD, void *))v9)[2](v9, v8);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1CFA51198()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA511B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[3] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3660;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_1CFA51274;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA51274()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA512E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA51324(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA51340()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1CFA513CC;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA4CEB4;
  v3[3] = &block_descriptor_704;
  v3[4] = v2;
  objc_msgSend(v1, sel_deleteBoundACLWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA513CC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA5142C()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA51584(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA515FC;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA515FC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1CFA5169C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA516B4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3678;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  type metadata accessor for IdentityBindingDetails();
  *v4 = v0;
  v4[1] = sub_1CFA4E468;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA51784(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA517A0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA4E59C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA4C8E0;
  v3[3] = &block_descriptor_702;
  v3[4] = v2;
  objc_msgSend(v1, sel_fetchBioBindingDetailsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA51950(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA5AD40;
  v5[3] = v4;
  return swift_task_switch();
}

void sub_1CFA519C8(void (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  void (*v47)(_QWORD, _QWORD, void *);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v3 = v2;
  v6 = sub_1CFB012CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CFB00F9C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22, v23, v24, v25);
  v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v29 = sub_1CFB00F60();
    v59 = v3;
    v30 = a1;
    v31 = v29;
    v32 = a2;
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    v35 = swift_allocObject();
    v36 = swift_weakInit();
    MEMORY[0x1E0C80A78](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v59 - 6) = v35;
    *(&v59 - 5) = v31;
    *(&v59 - 4) = v34;
    *(&v59 - 3) = (uint64_t)v30;
    *(&v59 - 2) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v31;
    v45[4] = v34;
    v45[5] = v30;
    v45[6] = v32;
    aBlock[4] = sub_1CFA55E2C;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA51ED8;
    aBlock[3] = &block_descriptor_121;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchTermsAndConditionsWithCompletion_, v46);
    _Block_release(v46);
    swift_unknownObjectRelease();
  }
  else
  {
    v47 = (void (*)(_QWORD, _QWORD, void *))a1;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v48, v6);
    v49 = sub_1CFB012B4();
    v50 = sub_1CFB01FC8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1CF917000, v49, v50, "Cannot invoke fetchTermsAndConditions because no proxy is set", v51, 2u);
      MEMORY[0x1D17DA6E4](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    v52 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v55 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v56 = (void *)swift_allocError();
    *(_WORD *)v57 = v52;
    *(_QWORD *)(v57 + 8) = v53;
    *(_QWORD *)(v57 + 16) = v54;
    *(_QWORD *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v55;
    v47(0, 0, v56);

  }
}

uint64_t sub_1CFA51D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v11 = a4 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1D17DA7A4](v11);
  if (v12)
  {
    v13 = (void *)v12;
    swift_retain();

    swift_allocObject();
    v14 = swift_weakInit();
    MEMORY[0x1E0C80A78](v14, v15, v16, v17, v18, v19, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B60);
    sub_1CFB02040();
    swift_release();
    if (v23)
      sub_1CF99BC44(v23);
    swift_release();
  }
  return a7(a1, a2, a3);
}

uint64_t sub_1CFA51ED8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_1CFB01A28();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1CFA51F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)sub_1CFB01A04();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_1CFB00D14();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

uint64_t sub_1CFA51FDC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 72) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_1CFA51FF8()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = *(_BYTE *)(v0 + 72);
  v2 = *(void **)(v0 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v1;
  v5 = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  v6[2] = v3;
  v6[3] = &unk_1EFBC36A0;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v8;
  *v8 = v0;
  v8[1] = sub_1CFA520E8;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA520E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CFA52170(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 144) = a4;
  v5 = *a2;
  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 128) = v5;
  return swift_task_switch();
}

uint64_t sub_1CFA52190()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(unsigned __int8 *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 128);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CFA4CE18;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4CEB4;
  v5[3] = &block_descriptor_674;
  v5[4] = v4;
  objc_msgSend(v2, sel_uploadLivenessVideoWithLivenessVideoURL_shouldScheduleUploads_completionHandler_, v3, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA52368(void *a1, char a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  uint64_t v10;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a4;
  v10 = swift_task_alloc();
  v4[5] = v10;
  *(_QWORD *)v10 = v4;
  *(_QWORD *)(v10 + 8) = sub_1CFA5AD30;
  *(_BYTE *)(v10 + 72) = a2;
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v9;
  return swift_task_switch();
}

uint64_t sub_1CFA52400()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA52418()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC36B8;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  type metadata accessor for IdentityLivenessConfig();
  *v4 = v0;
  v4[1] = sub_1CFA524E8;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA524E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA5256C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA525A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA525C4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA52658;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA4C8E0;
  v3[3] = &block_descriptor_672;
  v3[4] = v2;
  objc_msgSend(v1, sel_getLivenessConfigWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA52658()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA526B8(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CFA52860(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA528D8;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA528D8(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_1CFB00D14();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](v7, a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1CFA52994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA529B0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[4];
  v2 = (void *)v0[3];
  v3 = *(_QWORD *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v4 = swift_allocObject();
  v0[6] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v3;
  v6[3] = &unk_1EFBC36E0;
  v6[4] = v4;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  type metadata accessor for IdentityProofingDisplayInfo();
  *v8 = v0;
  v8[1] = sub_1CFA52AB0;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA52AB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA52B4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[16] = a1;
  v4[17] = a3;
  v5 = *a2;
  v4[18] = a4;
  v4[19] = v5;
  return swift_task_switch();
}

uint64_t sub_1CFA52B6C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[18];
  v1 = (void *)v0[19];
  v3 = v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA52C14;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4C8E0;
  v5[3] = &block_descriptor_635;
  v5[4] = v4;
  objc_msgSend(v1, sel_fetchExtendedReviewDisplayInfo_proofingOptions_completionHandler_, v3, v2, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA52C14()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFA52C74()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA52DE4(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  _QWORD *v10;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a4;
  v10 = (_QWORD *)swift_task_alloc();
  v4[5] = v10;
  *v10 = v4;
  v10[1] = sub_1CFA5ADCC;
  v10[4] = a2;
  v10[5] = v9;
  v10[3] = v8;
  return swift_task_switch();
}

void sub_1CFA52E7C(void (*a1)(_QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  void (*v47)(_QWORD, void *);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v3 = v2;
  v6 = sub_1CFB012CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CFB00F9C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19, v20, v21, v22, v23, v24, v25);
  v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v29 = sub_1CFB00F60();
    v59 = v3;
    v30 = a1;
    v31 = v29;
    v32 = a2;
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    v35 = swift_allocObject();
    v36 = swift_weakInit();
    MEMORY[0x1E0C80A78](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v59 - 6) = v35;
    *(&v59 - 5) = v31;
    *(&v59 - 4) = v34;
    *(&v59 - 3) = (uint64_t)v30;
    *(&v59 - 2) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v31;
    v45[4] = v34;
    v45[5] = v30;
    v45[6] = v32;
    aBlock[4] = sub_1CFA5604C;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_150_0;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchBiomeFedStatsUIWithCompletion_, v46);
    _Block_release(v46);
    swift_unknownObjectRelease();
  }
  else
  {
    v47 = (void (*)(_QWORD, void *))a1;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v48, v6);
    v49 = sub_1CFB012B4();
    v50 = sub_1CFB01FC8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1CF917000, v49, v50, "Cannot invoke fetchBiomeFedStatsUI because no proxy is set", v51, 2u);
      MEMORY[0x1D17DA6E4](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    v52 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v53 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v54 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v55 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v56 = (void *)swift_allocError();
    *(_WORD *)v57 = v52;
    *(_QWORD *)(v57 + 8) = v53;
    *(_QWORD *)(v57 + 16) = v54;
    *(_QWORD *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v55;
    v47(0, v56);

  }
}

uint64_t sub_1CFA53238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t *a8, uint64_t a9, void (*a10)())
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v14 = a3 + 16;
  swift_beginAccess();
  v15 = MEMORY[0x1D17DA7A4](v14);
  if (v15)
  {
    v16 = (void *)v15;
    swift_retain();

    swift_allocObject();
    v17 = swift_weakInit();
    MEMORY[0x1E0C80A78](v17, v18, v19, v20, v21, v22, v23, v24);
    __swift_instantiateConcreteTypeFromMangledName(a8);
    sub_1CFB02040();
    swift_release();
    if (v26)
      a10();
    swift_release();
  }
  return a6(a1, a2);
}

void sub_1CFA53394(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);

}

void sub_1CFA533F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1CFB00D14();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_1CFA53450(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  *(_BYTE *)(v5 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA53470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 88);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 48) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v7;
  v7[2] = v5;
  v7[3] = &unk_1EFBC3700;
  v7[4] = v6;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *v9 = v0;
  v9[1] = sub_1CFA4D2A4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA53574(uint64_t a1, uint64_t *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 120) = a4;
  *(_QWORD *)(v6 + 128) = a5;
  *(_BYTE *)(v6 + 168) = a3;
  v7 = *a2;
  *(_QWORD *)(v6 + 136) = a6;
  *(_QWORD *)(v6 + 144) = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA53598()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(void **)(v0 + 144);
  v3 = *(unsigned __int8 *)(v0 + 168);
  v4 = sub_1CFB01A04();
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CFA4D440;
  v5 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_1CFA4CEB4;
  v6[3] = &block_descriptor_632;
  v6[4] = v5;
  objc_msgSend(v1, sel_saveIdentityProofingBiomeDataSharingUserConsent_state_proofingOptions_completionHandler_, v3, v4, v2, v6);
  return swift_continuation_await();
}

uint64_t sub_1CFA53798(char a1, int a2, uint64_t a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v9 = sub_1CFB01A28();
  v11 = v10;
  v5[4] = v10;
  v12 = a5;
  v13 = swift_task_alloc();
  v5[5] = v13;
  *(_QWORD *)v13 = v5;
  *(_QWORD *)(v13 + 8) = sub_1CFA5384C;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = v12;
  *(_QWORD *)(v13 + 16) = v9;
  *(_QWORD *)(v13 + 24) = v11;
  *(_BYTE *)(v13 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA5384C()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1CFA538F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA53910()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = v0[4];
  v3 = v0[2];
  v2 = v0[3];
  v4 = *(_QWORD *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v5 = (_QWORD *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EFBC3720;
  v6[4] = v5;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  *v8 = v0;
  v8[1] = sub_1CFA4F9D4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA53A0C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[15] = a3;
  v5[16] = a4;
  v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return swift_task_switch();
}

uint64_t sub_1CFA53A2C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[17];
  v1 = (void *)v0[18];
  v3 = sub_1CFB01A04();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1CFA4FB28;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1CFA4CEB4;
  v5[3] = &block_descriptor_630;
  v5[4] = v4;
  objc_msgSend(v1, sel_clearDataAfterTerminalProofingStateWithState_proofingOptions_completionHandler_, v3, v2, v5);
  return swift_continuation_await();
}

uint64_t sub_1CFA53C0C(int a1, uint64_t a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v7 = sub_1CFB01A28();
  v9 = v8;
  v4[4] = v8;
  v10 = a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[5] = v11;
  *v11 = v4;
  v11[1] = sub_1CFA5AD34;
  v11[4] = a2;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v9;
  return swift_task_switch();
}

id sub_1CFA53CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  v14 = sub_1CFB012B4();
  v15 = sub_1CFB01FC8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1CF917000, v14, v15, "IdentityManagementUIClient invalidating server connection", v16, 2u);
    MEMORY[0x1D17DA6E4](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection), sel_invalidate);
}

uint64_t sub_1CFA53E54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA53E6C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC3738;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC44F0);
  *v4 = v0;
  v4[1] = sub_1CFA4E468;
  return sub_1CFB028BC();
}

uint64_t sub_1CFA53F40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFA53F5C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA4E59C;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFA50164;
  v3[3] = &block_descriptor_628;
  v3[4] = v2;
  objc_msgSend(v1, sel_globalAuthACLTemplateUUIDsWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFA5410C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFA54184;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFA54184()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  if (v0)
  {
    v6 = sub_1CFB00D14();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    sub_1CFB00F9C();
    v7 = sub_1CFB01C8C();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

id IdentityManagementUIClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IdentityManagementUIClient.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CFA542C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904CB0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = &qword_1ED9050E0;
  else
    v2 = (uint64_t *)&unk_1EFBC3D20;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_1CFA54314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA54330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for IdentityProofingDisplayInfo();
  *v3 = v0;
  v3[1] = sub_1CFA543E4;
  return sub_1CFB02994();
}

uint64_t sub_1CFA543E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD **)(v2 + 24);
  swift_task_dealloc();
  *v4 = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA54468(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v3 + 16) = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_1CFA5AE34;
  return v6(v3 + 16);
}

uint64_t sub_1CFA544D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA544EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for IdentityProofingStatus();
  *v3 = v0;
  v3[1] = sub_1CFA543E4;
  return sub_1CFB02994();
}

uint64_t sub_1CFA545A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA545BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for IdentityProofingConfiguration();
  *v3 = v0;
  v3[1] = sub_1CFA543E4;
  return sub_1CFB02994();
}

uint64_t sub_1CFA54670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA5468C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1CFA5473C;
  return sub_1CFB02994();
}

uint64_t sub_1CFA5473C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_BYTE **)(v2 + 16);
  swift_task_dealloc();
  *v4 = *(_BYTE *)(v2 + 72);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA547C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA547DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC44F0);
  *v3 = v0;
  v3[1] = sub_1CFA543E4;
  return sub_1CFB02994();
}

uint64_t sub_1CFA54894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA548B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for IdentityBindingDetails();
  *v3 = v0;
  v3[1] = sub_1CFA54964;
  return sub_1CFB02994();
}

uint64_t sub_1CFA54964()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD **)(v2 + 24);
  swift_task_dealloc();
  *v4 = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA549E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA54A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFA54A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  type metadata accessor for IdentityLivenessConfig();
  *v3 = v0;
  v3[1] = sub_1CFA543E4;
  return sub_1CFB02994();
}

uint64_t sub_1CFA54AEC(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v3 + 16) = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_1CFA54B54;
  return v6(v3 + 16);
}

uint64_t sub_1CFA54B54()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_1CFA54B9C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  id v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t inited;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  int v41;
  uint64_t v42;
  objc_class *v43;
  uint64_t v45;
  objc_super v46;
  uint64_t v47;
  __int128 aBlock;
  __int128 v49;
  uint64_t (*v50)(void *);
  uint64_t v51;

  v2 = v1;
  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy] = 0;
  v15 = (uint64_t)&v2[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError];
  LOWORD(aBlock) = 511;
  v16 = v2;
  v17 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001BLL, 0x80000001CFB2EAF0, (__int16 *)&aBlock, 0, v17, 0xD00000000000005ELL, 0x80000001CFB2EB10, v15, 0xD00000000000001ALL, 0x80000001CFB1AFE0, 29);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v18, v4);
  v19 = sub_1CFB012B4();
  v20 = sub_1CFB01FC8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1CF917000, v19, v20, "IdentityManagementUIClient init", v21, 2u);
    MEMORY[0x1D17DA6E4](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_interfaceWithProtocol_, &unk_1EFBF0198);
  v24 = objc_msgSend(v22, sel_interfaceWithProtocol_, &unk_1EFBF3870);
  if (a1)
  {
    *((_QWORD *)&v49 + 1) = swift_getObjectType();
    *(_QWORD *)&aBlock = a1;
  }
  else
  {
    aBlock = 0u;
    v49 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3D18);
  swift_allocObject();
  swift_unknownObjectRetain();
  v25 = sub_1CFAA9594(0xD00000000000002BLL, 0x80000001CFB2EB70, (uint64_t)v23, 0, 0, 0, 0, (uint64_t)v24, (uint64_t)&aBlock, (uint64_t)sub_1CFA4B9CC, 0);

  *(_QWORD *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection] = v25;
  v26 = (void *)v25[2];
  v27 = OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection;
  *(_QWORD *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection] = v26;
  LOWORD(aBlock) = 508;
  type metadata accessor for IdentityManagmentDisconnectHandler();
  swift_allocObject();
  swift_retain();
  v28 = v26;
  *(_QWORD *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_disconnectHandler] = sub_1CF9244F8(0xD00000000000001ALL, 0x80000001CFB1AFE0, (unsigned __int16 *)&aBlock);
  v29 = objc_msgSend(v28, sel_remoteObjectInterface);
  if (v29)
  {
    v30 = v29;
    sub_1CFA542C8();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB059A0;
    *(_QWORD *)(inited + 32) = sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
    *(_QWORD *)(inited + 40) = sub_1CF9775E8(0, (unint64_t *)&unk_1EFBC44E0);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
    swift_setDeallocating();

  }
  v32 = objc_msgSend(*(id *)&v16[v27], sel_remoteObjectInterface);
  if (v32)
  {
    v33 = v32;
    sub_1CFA542C8();
    v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1CFB059A0;
    *(_QWORD *)(v34 + 32) = sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
    *(_QWORD *)(v34 + 40) = sub_1CF9775E8(0, (unint64_t *)&unk_1EFBC44E0);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v34);
    swift_setDeallocating();

  }
  v35 = *(void **)&v16[v27];
  swift_retain();
  v36 = v35;
  sub_1CF9248C8(v36);
  swift_release();

  v37 = *(void **)&v16[v27];
  v50 = sub_1CFA4BA98;
  v51 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v49 = sub_1CFAA7B94;
  *((_QWORD *)&v49 + 1) = &block_descriptor_899;
  v38 = _Block_copy(&aBlock);
  v39 = v37;
  v40 = objc_msgSend(v39, sel_remoteObjectProxyWithErrorHandler_, v38);
  _Block_release(v38);

  sub_1CFB02298();
  swift_release();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B40);
  v41 = swift_dynamicCast();
  v42 = v47;
  if (!v41)
    v42 = 0;
  *(_QWORD *)&v2[v45] = v42;

  swift_unknownObjectRelease();
  v43 = (objc_class *)type metadata accessor for IdentityManagementUIClient();
  v46.receiver = v16;
  v46.super_class = v43;
  return objc_msgSendSuper2(&v46, sel_init);
}

uint64_t type metadata accessor for IdentityManagementUIClient()
{
  return objc_opt_self();
}

uint64_t sub_1CFA55188()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CFA551AC()
{
  return sub_1CFA591E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF925684);
}

uint64_t sub_1CFA551C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CFA551EC()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1CFA5521C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CFA55240(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = *(_OWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1CF933384;
  *(_OWORD *)(v7 + 136) = v10;
  *(_QWORD *)(v7 + 128) = a1;
  v8 = *a2;
  *(_QWORD *)(v7 + 152) = v6;
  *(_QWORD *)(v7 + 160) = v8;
  return swift_task_switch();
}

uint64_t sub_1CFA552C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC34D8 + dword_1EFBC34D8))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55348()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEC1B8, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3CE8);
}

uint64_t sub_1CFA5537C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CFA553A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1CF933384;
  v7 = *a2;
  v6[15] = v5;
  v6[16] = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA55408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1CF933384;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA55480()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEC150, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3CC8);
}

uint64_t sub_1CFA554B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CF933384;
  *(_OWORD *)(v6 + 120) = v9;
  v7 = *a2;
  *(_QWORD *)(v6 + 136) = v5;
  *(_QWORD *)(v6 + 144) = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA55534()
{
  return sub_1CFA591E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF9252A4);
}

uint64_t sub_1CFA55550()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA55564(uint64_t a1, uint64_t a2)
{
  return sub_1CFA555CC(a1, a2, &qword_1EFBC3CB8, (uint64_t)sub_1CFA5A888, (void (*)())sub_1CFA5AD78);
}

uint64_t sub_1CFA55580()
{
  return sub_1CFA591E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF9250B4);
}

uint64_t sub_1CFA5559C()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA555B0(uint64_t a1, uint64_t a2)
{
  return sub_1CFA555CC(a1, a2, &qword_1EFBC3CB0, (uint64_t)sub_1CFA5AEB4, (void (*)())sub_1CFA5AD78);
}

uint64_t sub_1CFA555CC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)())
{
  uint64_t v5;

  return sub_1CFA53238(a1, a2, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(uint64_t (**)(uint64_t, uint64_t))(v5 + 40), *(_QWORD *)(v5 + 48), a3, a4, a5);
}

uint64_t sub_1CFA55604()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA55618(uint64_t a1, uint64_t a2)
{
  return sub_1CFA555CC(a1, a2, &qword_1EFBC3CB0, (uint64_t)sub_1CFA5A86C, (void (*)())sub_1CFA5AD78);
}

uint64_t sub_1CFA55634(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC3540 + dword_1EFBC3540))(a1, v4, v5, v6);
}

uint64_t sub_1CFA556B4()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEC058, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3C80);
}

uint64_t sub_1CFA556E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CFA55714(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = *(_OWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v8 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *(_QWORD *)v8 = v3;
  *(_QWORD *)(v8 + 8) = sub_1CF933384;
  *(_QWORD *)(v8 + 152) = v7;
  *(_QWORD *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 136) = v10;
  *(_QWORD *)(v8 + 128) = a1;
  *(_QWORD *)(v8 + 168) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA557A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC3568 + dword_1EFBC3568))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55828()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBF78, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3C48);
}

uint64_t sub_1CFA5585C()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA5586C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  v7[15] = a1;
  v7[16] = v6;
  v7[17] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA558E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC3590 + dword_1EFBC3590))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55964()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBE98, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3C18);
}

uint64_t sub_1CFA55998(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  v7[15] = v6;
  v7[16] = v5;
  v7[17] = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA55A0C()
{
  uint64_t v0;

  sub_1CF923A24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1CFA55A30(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CF933384;
  *(_OWORD *)(v6 + 120) = v9;
  v7 = *a2;
  *(_QWORD *)(v6 + 136) = v5;
  *(_QWORD *)(v6 + 144) = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA55AB0()
{
  uint64_t v0;

  sub_1CF923A24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_1CF923A24(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1CFA55ADC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = *(_OWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v8 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *(_QWORD *)v8 = v3;
  *(_QWORD *)(v8 + 8) = sub_1CF933384;
  *(_QWORD *)(v8 + 152) = v7;
  *(_QWORD *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 136) = v10;
  *(_QWORD *)(v8 + 128) = a1;
  *(_QWORD *)(v8 + 168) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CFA55B70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC35F8 + dword_1EFBC35F8))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55BF0()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBD88, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3BE0);
}

uint64_t sub_1CFA55C24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1CF933384;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA55C9C()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBCA8, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3BA8);
}

uint64_t sub_1CFA55CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1CF92F754;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA55D48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC3680 + dword_1EFBC3680))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55DC8()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBB80, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3B70);
}

uint64_t sub_1CFA55DFC()
{
  return sub_1CFA591E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF924F88);
}

uint64_t sub_1CFA55E18()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA55E30()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CFA55E54(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_BYTE *)(v2 + 24);
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1CF933384;
  *(_BYTE *)(v7 + 144) = v6;
  v8 = *a2;
  *(_QWORD *)(v7 + 120) = v5;
  *(_QWORD *)(v7 + 128) = v8;
  return swift_task_switch();
}

uint64_t sub_1CFA55ECC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC36C0 + dword_1EFBC36C0))(a1, v4, v5, v6);
}

uint64_t sub_1CFA55F4C()
{
  uint64_t *v0;

  return sub_1CFA4551C(v0[2], v0[3], v0[4], (uint64_t)&unk_1E8CEBA10, (void (*)(uint64_t, uint64_t))sub_1CFA5AD74, (uint64_t)&unk_1EFBC3B18);
}

uint64_t sub_1CFA55F80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CFA55FA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1CF933384;
  v8[16] = a1;
  v8[17] = v7;
  v9 = *a2;
  v8[18] = v6;
  v8[19] = v9;
  return swift_task_switch();
}

uint64_t sub_1CFA5601C()
{
  return sub_1CFA591E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF925494);
}

uint64_t sub_1CFA56038()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA5604C(uint64_t a1, uint64_t a2)
{
  return sub_1CFA555CC(a1, a2, &qword_1EFBC3B08, (uint64_t)sub_1CFA597B8, (void (*)())sub_1CFA5AD78);
}

uint64_t sub_1CFA56068()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CFA5608C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v5 = *(_BYTE *)(v2 + 16);
  v10 = *(_OWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 40);
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1CF933384;
  *(_OWORD *)(v7 + 120) = v10;
  *(_BYTE *)(v7 + 168) = v5;
  v8 = *a2;
  *(_QWORD *)(v7 + 136) = v6;
  *(_QWORD *)(v7 + 144) = v8;
  return swift_task_switch();
}

uint64_t sub_1CFA56114()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CFA56138(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *(_OWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CF933384;
  *(_OWORD *)(v6 + 120) = v9;
  v7 = *a2;
  *(_QWORD *)(v6 + 136) = v5;
  *(_QWORD *)(v6 + 144) = v7;
  return swift_task_switch();
}

uint64_t method lookup function for IdentityManagementUIClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityManagementUIClient.__allocating_init(exportedObject:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.triggerAssetsUpload(proofingOptions:canUploadOnExpensiveNetwork:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.prepareForProofingDisplay(_:proofingOptions:idType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0xA0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CFA5AEEC;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.prepareForProofingIdentity(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CF933384;
  return v7(a1);
}

uint64_t dispatch thunk of IdentityManagementUIClient.provisionIdentity(state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0xB0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CF933384;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchImageQualitySettings(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofIdentity(_:_:_:totalUploadAssetsFileSizeInBytes:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofIdentity(using:proofingOptions:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingFlowAvailability()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEEC;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingStatus(for:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xD8);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CFA450E8;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.isWatchPaired(idType:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xE0);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CFA5653C;
  return v7(a1);
}

uint64_t sub_1CFA5653C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingCancelled(configuration:proofingOptions:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xE8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.setGlobalBoundACL(data:type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0xF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CF933384;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.setModifiedGlobalBoundACL(data:externalizedLAContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xF8);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CFA5AEEC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrieveBioBindingUnboundACL()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEF0;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrievePasscodeBindingUnboundACL()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEF0;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrieveBoundACL()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA56868;
  return v5();
}

uint64_t sub_1CFA56868(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.deleteBoundACL()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CF933384;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchBioBindingDetails()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEEC;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchTermsAndConditions(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.uploadLivenessVideo(livenessVideoURL:shouldScheduleUploads:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x130);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.getLivenessConfig()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEEC;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchExtendedReviewDisplayInfo(_:proofingOptions:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x140);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CFA5AEEC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchBiomeFedStatsUI(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.saveIdentityProofingBiomeDataSharingUserConsent(_:state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x150);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CF933384;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.clearDataAfterTerminalProofingState(state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x158);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CF933384;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.globalAuthACLTemplateUUIDs()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA5AEEC;
  return v5();
}

uint64_t sub_1CFA56CDC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3810 + dword_1EFBC3810))(v2, v3);
}

uint64_t sub_1CFA56D44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EFBC4A38 + dword_1EFBC4A38))(v2, v3, v4);
}

uint64_t sub_1CFA56DC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EFBC4A40 + dword_1EFBC4A40))(a1, v4, v5, v6);
}

uint64_t sub_1CFA56E48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_1EFBC3830 + dword_1EFBC3830))(v2, v3, v5, v4);
}

uint64_t sub_1CFA56EC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1CFA56EFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(void **)(v0 + 40);
  v5 = *(void **)(v0 + 48);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(char, int, uint64_t, void *, void *))((char *)&dword_1EFBC3850 + dword_1EFBC3850))(v2, v3, v4, v6, v5);
}

uint64_t sub_1CFA56F84(uint64_t a1, int a2, uint64_t a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  _QWORD aBlock[7];

  v62 = a2;
  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CFB00F9C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23, v24, v25, v26);
  v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a4;
  v30 = *(void **)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    v60 = a3;
    v61 = a1;
    v31 = v29;
    _Block_copy(a4);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v32 = sub_1CFB00F60();
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
    v35 = swift_allocObject();
    v36 = swift_weakInit();
    MEMORY[0x1E0C80A78](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v60 - 6) = v35;
    *(&v60 - 5) = v32;
    *(&v60 - 4) = v34;
    *(&v60 - 3) = (uint64_t)sub_1CFA591D8;
    *(&v60 - 2) = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v32;
    v45[4] = v34;
    v45[5] = sub_1CFA591D8;
    v45[6] = v31;
    aBlock[4] = sub_1CFA55200;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4C48C;
    aBlock[3] = &block_descriptor_571;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_triggerAssetsUploadWithProofingOptions_canUploadOnExpensiveNetwork_completion_, v61, v62 & 1, v46);
    _Block_release(v46);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a4);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v48, v7);
    v49 = sub_1CFB012B4();
    v50 = sub_1CFB01FC8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_1CF917000, v49, v50, "Cannot invoke triggerAssetsUpload because no proxy is set", v51, 2u);
      MEMORY[0x1D17DA6E4](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    v52 = *(_WORD *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v53 = *(_QWORD *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v54 = *(_QWORD *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v55 = *(void **)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1CF923828();
    v56 = (void *)swift_allocError();
    *(_WORD *)v57 = v52;
    *(_QWORD *)(v57 + 8) = v53;
    *(_QWORD *)(v57 + 16) = v54;
    *(_QWORD *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v55;
    v59 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, void *))a4)[2](a4, v59);

    return swift_release();
  }
}

uint64_t sub_1CFA57398(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  _QWORD aBlock[7];

  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CFB00F9C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20, v21, v22, v23);
  v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v28 = sub_1CFB00F60();
    v58 = a1;
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    v31 = swift_allocObject();
    v32 = swift_weakInit();
    MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1CFA58F90;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1CFA58F90;
    v41[6] = v26;
    aBlock[4] = sub_1CFA55564;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_513;
    v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchImageQualitySettingsWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    v44 = a1;
    _Block_copy(a2);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    v46 = sub_1CFB012B4();
    v47 = sub_1CFB01FC8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1CF917000, v46, v47, "Cannot invoke fetchImageQualitySettings because no proxy is set", v48, 2u);
      MEMORY[0x1D17DA6E4](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v51 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v52 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v53 = *(void **)(v49 + 24);
    sub_1CF923828();
    v54 = (void *)swift_allocError();
    *(_WORD *)v55 = v50;
    *(_QWORD *)(v55 + 8) = v51;
    *(_QWORD *)(v55 + 16) = v52;
    *(_QWORD *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = v53;
    v57 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1CFA57798(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (**a6)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint8_t *v53;
  _QWORD *v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  _BYTE v63[12];
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD aBlock[7];

  v66 = a2;
  v67 = a4;
  v64 = a3;
  v65 = a1;
  v8 = sub_1CFB012CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_1CFB00F9C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21, v22, v23, v24, v25, v26, v27);
  v29 = &v63[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = a6;
  v31 = *(void **)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v31)
  {
    _Block_copy(a6);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v32 = sub_1CFB00F60();
    v34 = v33;
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v29, v19);
    v35 = swift_allocObject();
    v36 = swift_weakInit();
    MEMORY[0x1E0C80A78](v36, v37, v38, v39, v40, v41, v42, v43);
    *(_QWORD *)&v63[-48] = v35;
    *(_QWORD *)&v63[-40] = v32;
    *(_QWORD *)&v63[-32] = v34;
    *(_QWORD *)&v63[-24] = sub_1CFA5AD3C;
    *(_QWORD *)&v63[-16] = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v32;
    v45[4] = v34;
    v45[5] = sub_1CFA5AD3C;
    v45[6] = v30;
    aBlock[4] = sub_1CFA555B0;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_500;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_proofIdentity_::totalUploadAssetsFileSizeInBytes_completion_, v65, v66, v64 & 1, v67, v46);
    _Block_release(v46);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a6);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v18, v48, v8);
    v49 = sub_1CFB012B4();
    v50 = sub_1CFB01FC8();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = a5;
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1CF917000, v49, v50, "Cannot invoke proofIdentity because no proxy is set", v52, 2u);
      v53 = v52;
      a5 = v51;
      MEMORY[0x1D17DA6E4](v53, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v18, v8);
    v54 = (_QWORD *)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v55 = *(_WORD *)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v56 = v54[1];
    v57 = v54[2];
    v58 = (void *)v54[3];
    sub_1CF923828();
    v59 = (void *)swift_allocError();
    *(_WORD *)v60 = v55;
    *(_QWORD *)(v60 + 8) = v56;
    *(_QWORD *)(v60 + 16) = v57;
    *(_QWORD *)(v60 + 24) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v61 = v58;
    v62 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, _QWORD, void *))a6)[2](a6, 0, v62);

    return swift_release();
  }
}

void sub_1CFA57BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD aBlock[7];

  v61 = a2;
  v62 = a3;
  v60 = a1;
  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CFB00F9C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23, v24, v25, v26);
  v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a5;
  v30 = *(void **)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    _Block_copy(a5);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v31 = sub_1CFB00F60();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
    v34 = swift_allocObject();
    v35 = swift_weakInit();
    MEMORY[0x1E0C80A78](v35, v36, v37, v38, v39, v40, v41, v42);
    *(&v60 - 6) = v34;
    *(&v60 - 5) = v31;
    *(&v60 - 4) = v33;
    *(&v60 - 3) = (uint64_t)sub_1CFA5AD3C;
    *(&v60 - 2) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v43 = (void *)sub_1CFB01A04();
    v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v44;
    v45[3] = v31;
    v45[4] = v33;
    v45[5] = sub_1CFA5AD3C;
    v45[6] = v29;
    aBlock[4] = sub_1CFA55618;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_486;
    v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_proofIdentityUsing_proofingOptions_completion_, v43, v62, v46, v60, v61);
    _Block_release(v46);
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    _Block_copy(a5);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v47 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v47, v7);
    v48 = sub_1CFB012B4();
    v49 = sub_1CFB01FC8();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_1CF917000, v48, v49, "Cannot invoke proofIdentity because no proxy is set", v50, 2u);
      MEMORY[0x1D17DA6E4](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    v51 = a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    v52 = *(_WORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v53 = *(_QWORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v54 = *(_QWORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v55 = *(void **)(v51 + 24);
    sub_1CF923828();
    v56 = (void *)swift_allocError();
    *(_WORD *)v57 = v52;
    *(_QWORD *)(v57 + 8) = v53;
    *(_QWORD *)(v57 + 16) = v54;
    *(_QWORD *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v55;
    v59 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v59);

    swift_release();
  }
}

uint64_t sub_1CFA57FD0(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  _QWORD aBlock[7];

  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CFB00F9C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20, v21, v22, v23);
  v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v28 = sub_1CFB00F60();
    v58 = a1;
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    v31 = swift_allocObject();
    v32 = swift_weakInit();
    MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1CFA58984;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1CFA58984;
    v41[6] = v26;
    aBlock[4] = sub_1CFA55E2C;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA51ED8;
    aBlock[3] = &block_descriptor_308;
    v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchTermsAndConditionsWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    v44 = a1;
    _Block_copy(a2);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    v46 = sub_1CFB012B4();
    v47 = sub_1CFB01FC8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1CF917000, v46, v47, "Cannot invoke fetchTermsAndConditions because no proxy is set", v48, 2u);
      MEMORY[0x1D17DA6E4](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v51 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v52 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v53 = *(void **)(v49 + 24);
    sub_1CF923828();
    v54 = (void *)swift_allocError();
    *(_WORD *)v55 = v50;
    *(_QWORD *)(v55 + 8) = v51;
    *(_QWORD *)(v55 + 16) = v52;
    *(_QWORD *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = v53;
    v57 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1CFA583D0(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  _QWORD aBlock[7];

  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CFB00F9C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20, v21, v22, v23);
  v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v28 = sub_1CFB00F60();
    v58 = a1;
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    v31 = swift_allocObject();
    v32 = swift_weakInit();
    MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1CFA5AD3C;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1CFA5AD3C;
    v41[6] = v26;
    aBlock[4] = sub_1CFA5604C;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4DAB0;
    aBlock[3] = &block_descriptor_250;
    v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchBiomeFedStatsUIWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    v44 = a1;
    _Block_copy(a2);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    v46 = sub_1CFB012B4();
    v47 = sub_1CFB01FC8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1CF917000, v46, v47, "Cannot invoke fetchBiomeFedStatsUI because no proxy is set", v48, 2u);
      MEMORY[0x1D17DA6E4](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    v51 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    v52 = *(_QWORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    v53 = *(void **)(v49 + 24);
    sub_1CF923828();
    v54 = (void *)swift_allocError();
    *(_WORD *)v55 = v50;
    *(_QWORD *)(v55 + 8) = v51;
    *(_QWORD *)(v55 + 16) = v52;
    *(_QWORD *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56 = v53;
    v57 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1CFA587D0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1CFA587F4()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA5880C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EFBC3870 + dword_1EFBC3870))(v2, v3, v5, v4);
}

uint64_t sub_1CFA58890()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3890 + dword_1EFBC3890))(v2, v3);
}

uint64_t sub_1CFA58900()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, char, void *, void *))((char *)&dword_1EFBC38B0 + dword_1EFBC38B0))(v2, v3, v5, v4);
}

void sub_1CFA58984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CFA51F64(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1CFA5898C()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA589A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CFA51D88(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
}

uint64_t sub_1CFA589B4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC38D0 + dword_1EFBC38D0))(v2, v3);
}

uint64_t sub_1CFA58A24()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC38F0 + dword_1EFBC38F0))(v2, v3);
}

uint64_t sub_1CFA58A94()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3910 + dword_1EFBC3910))(v2, v3);
}

uint64_t sub_1CFA58B04()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3930 + dword_1EFBC3930))(v2, v3);
}

uint64_t sub_1CFA58B74()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3950 + dword_1EFBC3950))(v2, v3);
}

uint64_t sub_1CFA58BE4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, void *, void *, void *))((char *)&dword_1EFBC3970 + dword_1EFBC3970))(v2, v3, v5, v4);
}

uint64_t sub_1CFA58C68()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EFBC3990 + dword_1EFBC3990))(v2, v3, v5, v4);
}

uint64_t sub_1CFA58CEC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EFBC39B0 + dword_1EFBC39B0))(v2, v3, v5, v4);
}

uint64_t sub_1CFA58D6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_1CFA58D98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1EFBC39D0 + dword_1EFBC39D0))(v2, v3, v4);
}

uint64_t objectdestroy_385Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1CFA58E4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_1EFBC39F0 + dword_1EFBC39F0))(v2, v3, v5, v4);
}

uint64_t objectdestroy_196Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1CFA58EFC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC3A10 + dword_1EFBC3A10))(v2, v3);
}

uint64_t sub_1CFA58F68()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA58F7C()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1CFA58F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CFA533F8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1CFA58FA8()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_209Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1CFA58FF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1CF933384;
  return ((uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_1EFBC3A30 + dword_1EFBC3A30))(v2, v3, v5, v4);
}

uint64_t sub_1CFA59074()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1CFA590A8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1EFBC3A50 + dword_1EFBC3A50))(v2, v3, v4);
}

uint64_t sub_1CFA5911C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1CFA59150()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_1EFBC3A70 + dword_1EFBC3A70))(v2, v3, v4, v5, v6);
}

void sub_1CFA591D8(uint64_t a1)
{
  uint64_t v1;

  sub_1CFAA7BE4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CFA591E0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1CFA59204()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1CFA59218(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA4C350(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1CFA59228()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA5923C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA471BC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA592BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFA592E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3AA0 + dword_1EFBC3AA0))(a1, a2, v6);
}

uint64_t sub_1CFA59360(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC0068, (uint64_t)&unk_1E8CEB7F8, (uint64_t)&unk_1EFBC3AB8);
}

uint64_t sub_1CFA59394()
{
  return objectdestroy_582Tm(&qword_1EFBC0068);
}

uint64_t sub_1CFA593A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA4A4C0(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA59460()
{
  return objectdestroy_586Tm(&qword_1EFBC0068);
}

uint64_t sub_1CFA5946C(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC0068);
}

uint64_t sub_1CFA59478()
{
  return objectdestroy_582Tm(&qword_1ED904150);
}

uint64_t sub_1CFA59484(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA4B128(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA59544()
{
  return objectdestroy_586Tm(&qword_1ED904150);
}

uint64_t sub_1CFA59550(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1ED904150);
}

uint64_t sub_1CFA5955C(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1CFA4B6E8(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1CFA595C0()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA595D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF92F754;
  return sub_1CFA46CE4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA59654(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3AE0 + dword_1EFBC3AE0))(a1, a2, v6);
}

uint64_t sub_1CFA596D4()
{
  return objectdestroy_582Tm(&qword_1EFBC3AF0);
}

uint64_t sub_1CFA596E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3AF0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA4AAE8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA597A0()
{
  return objectdestroy_586Tm(&qword_1EFBC3AF0);
}

uint64_t sub_1CFA597AC(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3AF0);
}

uint64_t sub_1CFA597B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF9255C0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CFA597D4()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA597E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA46A88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA59868(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3B20 + dword_1EFBC3B20))(a1, a2, v6);
}

uint64_t sub_1CFA598E8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC0068, (uint64_t)&unk_1E8CEBA60, (uint64_t)&unk_1EFBC3B38);
}

uint64_t sub_1CFA5991C()
{
  return objectdestroy_582Tm(&qword_1EFBC0068);
}

uint64_t sub_1CFA59928(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC0068) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA475C4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA599E8()
{
  return objectdestroy_586Tm(&qword_1EFBC0068);
}

uint64_t sub_1CFA599F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3B48, (uint64_t)&unk_1E8CEBAD8, (uint64_t)&unk_1EFBC3B58);
}

uint64_t sub_1CFA59A28()
{
  return objectdestroy_582Tm(&qword_1EFBC3B48);
}

uint64_t sub_1CFA59A34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B48) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA49FCC(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA59AF4()
{
  return objectdestroy_586Tm(&qword_1EFBC3B48);
}

uint64_t sub_1CFA59B00(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3B48);
}

uint64_t sub_1CFA59B0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF9257B0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CFA59B28()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA59B3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA4682C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA59BBC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3B78 + dword_1EFBC3B78))(a1, a2, v6);
}

uint64_t sub_1CFA59C3C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3B88, (uint64_t)&unk_1E8CEBBD0, (uint64_t)&unk_1EFBC3B98);
}

uint64_t sub_1CFA59C70()
{
  return objectdestroy_582Tm(&qword_1EFBC3B88);
}

uint64_t sub_1CFA59C7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA49AD8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA59D3C()
{
  return objectdestroy_586Tm(&qword_1EFBC3B88);
}

uint64_t sub_1CFA59D48(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3B88);
}

uint64_t sub_1CFA59D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFA59D9C()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA59DB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA465D0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA59E30(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3BB0 + dword_1EFBC3BB0))(a1, a2, v6);
}

uint64_t sub_1CFA59EB0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3BC0, (uint64_t)&unk_1E8CEBCF8, (uint64_t)&unk_1EFBC3BD0);
}

uint64_t sub_1CFA59EE4()
{
  return objectdestroy_582Tm(&qword_1EFBC3BC0);
}

uint64_t sub_1CFA59EF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3BC0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA4949C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA59FB0()
{
  return objectdestroy_586Tm(&qword_1EFBC3BC0);
}

uint64_t sub_1CFA59FBC(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3BC0);
}

uint64_t sub_1CFA59FC8()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA59FDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA46374(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5A05C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3BE8 + dword_1EFBC3BE8))(a1, a2, v6);
}

uint64_t sub_1CFA5A0DC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3BF8, (uint64_t)&unk_1E8CEBDD8, (uint64_t)&unk_1EFBC3C08);
}

uint64_t sub_1CFA5A110()
{
  return objectdestroy_582Tm(&qword_1EFBC3BF8);
}

uint64_t sub_1CFA5A11C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3BF8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA48FA8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA5A1DC()
{
  return objectdestroy_586Tm(&qword_1EFBC3BF8);
}

uint64_t sub_1CFA5A1E8(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3BF8);
}

uint64_t sub_1CFA5A1F4()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA5A208(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA46118(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5A288(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3C20 + dword_1EFBC3C20))(a1, a2, v6);
}

uint64_t sub_1CFA5A308(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1ED904150, (uint64_t)&unk_1E8CEBEE8, (uint64_t)&unk_1EFBC3C38);
}

uint64_t sub_1CFA5A33C()
{
  return objectdestroy_582Tm(&qword_1ED904150);
}

uint64_t sub_1CFA5A348(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED904150) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA48A50(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA5A408()
{
  return objectdestroy_586Tm(&qword_1ED904150);
}

uint64_t sub_1CFA5A414()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA5A428(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA45EBC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5A4A8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3C50 + dword_1EFBC3C50))(a1, a2, v6);
}

uint64_t sub_1CFA5A528(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3C60, (uint64_t)&unk_1E8CEBFC8, (uint64_t)&unk_1EFBC3C70);
}

uint64_t sub_1CFA5A55C()
{
  return objectdestroy_582Tm(&qword_1EFBC3C60);
}

uint64_t sub_1CFA5A568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3C60) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA4855C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA5A628()
{
  return objectdestroy_586Tm(&qword_1EFBC3C60);
}

uint64_t sub_1CFA5A634(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3C60);
}

uint64_t sub_1CFA5A640()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA5A654(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA45C60(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5A6D4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3C88 + dword_1EFBC3C88))(a1, a2, v6);
}

uint64_t sub_1CFA5A754(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3C98, (uint64_t)&unk_1E8CEC0A8, (uint64_t)&unk_1EFBC3CA8);
}

uint64_t sub_1CFA5A788()
{
  return objectdestroy_582Tm(&qword_1EFBC3C98);
}

uint64_t sub_1CFA5A794(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3C98) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA48068(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA5A854()
{
  return objectdestroy_586Tm(&qword_1EFBC3C98);
}

uint64_t sub_1CFA5A860(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3C98);
}

uint64_t sub_1CFA5A86C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF9251E0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CFA5A888@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF9253D0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CFA5A8A4()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CFA5A8B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA45A04(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5A938(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3CD0 + dword_1EFBC3CD0))(a1, a2, v6);
}

uint64_t sub_1CFA5A9B8()
{
  return objectdestroy_5Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_5Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFA5AA10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CF933384;
  return sub_1CFA45734(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CFA5AA90(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1EFBC3CF0 + dword_1EFBC3CF0))(a1, a2, v6);
}

uint64_t sub_1CFA5AB10(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47450(a1, v1[2], v1[3], v1[4], &qword_1EFBC3D00, (uint64_t)&unk_1E8CEC208, (uint64_t)&unk_1EFBC3D10);
}

uint64_t sub_1CFA5AB44()
{
  return objectdestroy_582Tm(&qword_1EFBC3D00);
}

uint64_t objectdestroy_582Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFA5ABE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3D00) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CF933384;
  return sub_1CFA47B10(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1CFA5ACA8()
{
  return objectdestroy_586Tm(&qword_1EFBC3D00);
}

uint64_t objectdestroy_586Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFA5AD24(void *a1)
{
  return sub_1CFA5955C(a1, &qword_1EFBC3D00);
}

uint64_t sub_1CFA5AEB4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1CFA5A86C(a1);
}

uint64_t sub_1CFA5AEC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1CFA59B0C(a1);
}

uint64_t UTCTimestamp(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v31;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2FD0);
  MEMORY[0x1E0C80A78](v0, v1, v2, v3, v4, v5, v6, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CFB00FFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15, v16, v17, v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v22 = (void *)sub_1CFB01A04();
  objc_msgSend(v21, sel_setDateFormat_, v22);

  sub_1CFB00FA8();
  v23 = (void *)sub_1CFB00FB4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
  objc_msgSend(v21, sel_setLocale_, v23);

  sub_1CFB01080();
  v24 = sub_1CFB01098();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v24) != 1)
  {
    v26 = (void *)sub_1CFB0108C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  }
  objc_msgSend(v21, sel_setTimeZone_, v26);

  v27 = (void *)sub_1CFB00EF4();
  v28 = objc_msgSend(v21, sel_stringFromDate_, v27);

  v29 = sub_1CFB01A28();
  return v29;
}

uint64_t sub_1CFA5B10C()
{
  return sub_1CFB00B7C();
}

uint64_t sub_1CFA5B12C()
{
  return sub_1CFB01128();
}

uint64_t sub_1CFA5B14C()
{
  return sub_1CFB00B40();
}

uint64_t sub_1CFA5B16C()
{
  return sub_1CFB010C8();
}

uint64_t dispatch thunk of ObjectEncoder.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ObjectDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1CFA5B1BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = a1;
  v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v3 = sub_1CFB025A4();
  else
    v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1CF960FD0(0, v3 & ~(v3 >> 63), 0);
    result = sub_1CFA77B04(v2);
    v35 = result;
    v36 = v5;
    v37 = v6 & 1;
    if (v3 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      v30 = v2;
      do
      {
        while (1)
        {
          v18 = v35;
          v17 = v36;
          v19 = v37;
          sub_1CFA77C4C(&v34, v35, v36, v37, v2);
          v21 = v20;
          v22 = v34;
          v32 = 0;
          v33 = 0xE000000000000000;
          CBOR.readableString.getter();
          if (v1)
          {

            sub_1CFA5E798(v18, v17, v19);
            return swift_release();
          }
          sub_1CFB01B30();
          swift_bridgeObjectRelease();
          sub_1CFB01B30();
          CBOR.readableString.getter();
          sub_1CFB01B30();

          swift_bridgeObjectRelease();
          v23 = v32;
          v24 = v33;
          v25 = v38;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_1CF960FD0(0, *(_QWORD *)(v25 + 16) + 1, 1);
            v25 = v38;
          }
          v27 = *(_QWORD *)(v25 + 16);
          v26 = *(_QWORD *)(v25 + 24);
          if (v27 >= v26 >> 1)
          {
            result = sub_1CF960FD0(v26 > 1, v27 + 1, 1);
            v25 = v38;
          }
          *(_QWORD *)(v25 + 16) = v27 + 1;
          v28 = v25 + 16 * v27;
          *(_QWORD *)(v28 + 32) = v23;
          *(_QWORD *)(v28 + 40) = v24;
          if (v31)
            break;
          v7 = v35;
          v8 = v36;
          v9 = v37;
          sub_1CFA5E388(v35, v36, v37, v30);
          v11 = v10;
          v13 = v12;
          v15 = v14;
          v16 = v8;
          v2 = v30;
          sub_1CFA5E798(v7, v16, v9);
          v35 = v11;
          v36 = v13;
          v37 = v15 & 1;
          if (!--v3)
            goto LABEL_20;
        }
        if ((v37 & 1) == 0)
          goto LABEL_23;
        v2 = v30;
        if (sub_1CFB02580())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(qword_1EFBC3D70);
        v29 = (void (*)(uint64_t *, _QWORD))sub_1CFB01974();
        sub_1CFB025D4();
        v29(&v32, 0);
        --v3;
      }
      while (v3);
LABEL_20:
      sub_1CFA5E798(v35, v36, v37);
      return v38;
    }
  }
  return result;
}

uint64_t COSE_Sign1.AlgorithmIdentifier.rawValue.getter()
{
  char *v0;

  return qword_1CFB1B198[*v0];
}

uint64_t COSEKey.publicKeyIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[7];
  __int128 v38;
  _BYTE v39[56];
  _BYTE v40[8];
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CFB0192C();
  v37[5] = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15, v16, v17, v18);
  v19 = sub_1CFB01920();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21, v22, v23, v24, v25, v26, v27);
  v38 = xmmword_1CFB05A10;
  sub_1CFB00E40();
  sub_1CFB0117C();
  sub_1CF931BA0((uint64_t)v39, (uint64_t)v40, &qword_1EFBC3D30);
  if (v42 >> 60 != 15)
  {
    v37[4] = v20;
    v32 = v41;
    v33 = v43;
    v34 = v44;
    sub_1CF923A24(v45, v46);
    v37[3] = v32;
    sub_1CFB00E94();
    v37[2] = v33;
    v37[1] = v34;
    sub_1CFB00E94();
    v35 = *((_QWORD *)&v38 + 1);
    sub_1CF9239E0(v38, *((unint64_t *)&v38 + 1));
    sub_1CF920A48(&qword_1EFBC0D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A30], MEMORY[0x1E0CA9A28]);
    sub_1CFB01470();
    __asm { BR              X9 }
  }
  if (qword_1ED9054E8 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v28, v0);
  v29 = sub_1CFB012B4();
  v30 = sub_1CFB01FC8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1CF917000, v29, v30, "Can't fetch EC2 parameters from COSEKey", v31, 2u);
    MEMORY[0x1D17DA6E4](v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  sub_1CF923A24(v38, *((unint64_t *)&v38 + 1));
  return 0;
}

BOOL COSEKey.isEC2.getter()
{
  unint64_t v0;
  _BYTE v2[56];
  _BYTE v3[16];
  unint64_t v4;

  sub_1CFB0117C();
  sub_1CF931BA0((uint64_t)v2, (uint64_t)v3, &qword_1EFBC3D30);
  v0 = v4 >> 60;
  if (v4 >> 60 != 15)
    sub_1CFA5E524((uint64_t)v2);
  return v0 < 0xF;
}

BOOL COSEKey.isOKP.getter()
{
  unint64_t v0;
  _BYTE v2[40];
  _BYTE v3[16];
  unint64_t v4;

  sub_1CFB01188();
  sub_1CF931BA0((uint64_t)v2, (uint64_t)v3, &qword_1EFBC3D40);
  v0 = v4 >> 60;
  if (v4 >> 60 != 15)
    sub_1CFA5E5B8((uint64_t)v2);
  return v0 < 0xF;
}

uint64_t COSEKey.publicKeyData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _BYTE v49[24];
  _BYTE v50[56];
  _QWORD v51[7];
  _BYTE v52[40];
  __int128 v53[3];
  _BYTE v54[8];
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE v61[16];
  unint64_t v62;

  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  v9 = MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x1E0C80A78](v9, v12, v13, v14, v15, v16, v17, v18);
  v21 = &v49[-v20];
  MEMORY[0x1E0C80A78](v19, v22, v23, v24, v25, v26, v27, v28);
  v30 = &v49[-v29];
  sub_1CFB0117C();
  sub_1CF931BA0((uint64_t)v50, (uint64_t)v61, &qword_1EFBC3D30);
  if (v62 >> 60 == 15)
  {
    sub_1CFB01188();
    sub_1CF931BA0((uint64_t)v52, (uint64_t)v54, &qword_1EFBC3D40);
    if (v56 >> 60 == 15)
    {
      if (qword_1ED9054E8 != -1)
        swift_once();
      v31 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v11, v31, v0);
      v32 = sub_1CFB012B4();
      v33 = sub_1CFB01FC8();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1CF917000, v32, v33, "Key is neither EC2 or OKP", v34, 2u);
        MEMORY[0x1D17DA6E4](v34, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v11, v0);
    }
    else
    {
      sub_1CFA5E5B8((uint64_t)v52);
      sub_1CFB01188();
      sub_1CF931BA0((uint64_t)v53, (uint64_t)v51, &qword_1EFBC3D40);
      if (v51[2] >> 60 != 15)
      {
        v44 = v51[1];
        sub_1CF923A24(v51[3], v51[4]);
        return v44;
      }
      if (qword_1ED9054E8 != -1)
        swift_once();
      v40 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v21, v40, v0);
      v41 = sub_1CFB012B4();
      v42 = sub_1CFB01FC8();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_1CF917000, v41, v42, "Can't fetch OKP parameters from COSEKey", v43, 2u);
        MEMORY[0x1D17DA6E4](v43, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v21, v0);
    }
  }
  else
  {
    sub_1CFA5E524((uint64_t)v50);
    sub_1CFB0117C();
    sub_1CF931BA0((uint64_t)v51, (uint64_t)v54, &qword_1EFBC3D30);
    v35 = v56;
    if (v56 >> 60 != 15)
    {
      v45 = v55;
      v46 = v57;
      v47 = v58;
      sub_1CF923A24(v59, v60);
      v53[0] = xmmword_1CFB05A10;
      sub_1CFB00E94();
      sub_1CFB00E94();
      sub_1CF923A24(v46, v47);
      sub_1CF923A24(v45, v35);
      return *(_QWORD *)&v53[0];
    }
    if (qword_1ED9054E8 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v30, v36, v0);
    v37 = sub_1CFB012B4();
    v38 = sub_1CFB01FC8();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1CF917000, v37, v38, "Can't fetch EC2 parameters from COSEKey", v39, 2u);
      MEMORY[0x1D17DA6E4](v39, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v30, v0);
  }
  return 0;
}

uint64_t COSEKey.init(ec2CurveIdentifier:publicKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3D48);
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12, v13, v14, v15);
  v16 = sub_1CFB012CC();
  v24 = MEMORY[0x1E0C80A78](v16, v17, v18, v19, v20, v21, v22, v23);
  v32 = MEMORY[0x1E0C80A78](v24, v25, v26, v27, v28, v29, v30, v31);
  MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
  if (a1 == 3)
    __asm { BR              X10 }
  if (a1 == 2)
    __asm { BR              X10 }
  if (a1 == 1)
    __asm { BR              X9 }
  sub_1CF923A24(a2, a3);
  v40 = sub_1CFB01194();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a4, 1, 1, v40);
}

uint64_t sub_1CFA5CC00(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  int64_t v7;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = a5 >> 1;
  v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!result || v6 < 0 || (v7 = a5 >> 1, v6 >= result))
  {
    v7 = a4 + result;
    if (__OFADD__(a4, result))
      goto LABEL_18;
  }
  if (v7 < a4)
    goto LABEL_14;
  if (v5 < a4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
      return a2;
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_1CFA5CC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1CFA5CDC4);
}

uint64_t COSE_Sign1.AlgorithmIdentifier.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 1;
  switch(result)
  {
    case -36:
      *a2 = 3;
      break;
    case -35:
      *a2 = 2;
      break;
    case -8:
      goto LABEL_6;
    case -7:
      v2 = 0;
LABEL_6:
      *a2 = v2;
      break;
    default:
      *a2 = 4;
      break;
  }
  return result;
}

BOOL sub_1CFA5CE50(char *a1, char *a2)
{
  return qword_1CFB1B198[*a1] == qword_1CFB1B198[*a2];
}

uint64_t sub_1CFA5CE74()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA5CEC0()
{
  return sub_1CFB02A9C();
}

uint64_t sub_1CFA5CEF4()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA5CF3C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return COSE_Sign1.AlgorithmIdentifier.init(rawValue:)(*a1, a2);
}

void sub_1CFA5CF44(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1CFB1B198[*v1];
}

uint64_t COSE_Sign1.init(algorithmIdentifier:keyIdentifier:payload:signature:includeCBORTag:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB010B0();
  v12 = sub_1CFB010BC();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1CF931B1C((uint64_t)v11, &qword_1EFBBE540);
    v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v11, v12);
    v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v14, 1, v12);
}

void COSE_Sign1.init(fromHexData:)(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v22[20];

  v22[19] = *MEMORY[0x1E0C80C00];
  v4 = sub_1CFB010BC();
  v22[1] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v22[4] = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CFB00BAC();
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = (char *)&loc_1CFA5D16C + dword_1CFA5D71C[a1 >> 62];
  v22[2] = a2;
  v22[3] = v4;
  __asm { BR              X10 }
}

void sub_1CFA5D180()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v5 - 128) = v0;
  *(_WORD *)(v5 - 120) = v1;
  *(_BYTE *)(v5 - 118) = BYTE2(v1);
  *(_BYTE *)(v5 - 117) = BYTE3(v1);
  *(_BYTE *)(v5 - 116) = BYTE4(v1);
  *(_BYTE *)(v5 - 115) = BYTE5(v1);
  v6 = sub_1CFB01AC4();
  v8 = v7;
  sub_1CF923A24(v0, v1);
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 120) = v8;
  sub_1CFB00BA0();
  sub_1CF9B9CD8();
  sub_1CFB02208();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v10 = HexToBytes(v9);

  if (!v10)
  {
    *(_WORD *)(v5 - 128) = 128;
    v22 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v21 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000018, 0x80000001CFB2ECC0, (__int16 *)(v5 - 128), 0, v22, 0xD000000000000057, 0x80000001CFB2ECE0, v23, 0xD000000000000012, 0x80000001CFB2ED40, 178);
    swift_willThrow();
    goto LABEL_5;
  }
  v11 = sub_1CFB00E7C();
  v13 = v12;

  sub_1CF98285C(v11, v13);
  v15 = v14;
  v17 = v16;
  sub_1CFB010F8();
  swift_allocObject();
  sub_1CFB010EC();
  sub_1CF920A48(&qword_1EFBBF6E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D03798], MEMORY[0x1E0D037B0]);
  v18 = *(_QWORD *)(v5 - 216);
  v19 = *(_QWORD *)(v5 - 208);
  v20 = *(void **)(v5 - 200);
  sub_1CFB010C8();
  if (v20)
  {
    sub_1CF923A24(v15, v17);
    swift_release();
    v21 = v20;
LABEL_5:
    *(_WORD *)(v5 - 128) = 128;
    v24 = v21;
    v25 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v21, 0, 0xE000000000000000, (__int16 *)(v5 - 128), 0, v25, 0xD000000000000057, 0x80000001CFB2ECE0, v26, 0xD000000000000012, 0x80000001CFB2ED40, 182);
    swift_willThrow();
    sub_1CF923A24(v0, v1);

    return;
  }
  sub_1CF923A24(v15, v17);
  swift_release();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 232) + 32))(*(_QWORD *)(v5 - 224), v19, v18);
  sub_1CF923A24(v0, v1);
}

uint64_t COSE_Sign1.init(from:)(uint64_t a1, unint64_t a2)
{
  sub_1CFB010F8();
  swift_allocObject();
  sub_1CFB010EC();
  sub_1CFB010BC();
  sub_1CF920A48(&qword_1EFBBF6E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D03798], MEMORY[0x1E0D037B0]);
  sub_1CFB010C8();
  sub_1CF923A24(a1, a2);
  return swift_release();
}

id sub_1CFA5D7E8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 24);
  qword_1EFBC3D28 = (uint64_t)result;
  return result;
}

uint64_t CBOR.readableString.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  id v6;
  id v7;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  void *v42;
  id v43;
  id v44;
  char v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49[2];
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v2 = v1;
  v3 = v0;
  v4 = objc_msgSend(v0, sel_type);
  v5 = 0x65736C6166;
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 0xDuLL:
      v53 = 34;
      v54 = 0xE100000000000000;
      v6 = objc_msgSend(v3, sel_numeric);
      v7 = objc_msgSend(v6, sel_description);
      sub_1CFB01A28();

      sub_1CFB01B30();
      goto LABEL_3;
    case 2uLL:
      v9 = objc_msgSend(v3, sel_data);
      if (!v9)
      {
        LOWORD(v53) = 128;
        v5 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        swift_allocError();
        v40 = 0xD000000000000019;
        v50 = 220;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        v41 = "Error while decoding data";
        goto LABEL_38;
      }
      v10 = v9;
      v11 = sub_1CFB00E7C();
      v13 = v12;

      v14 = objc_msgSend(v3, sel_tag);
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, sel_numeric);

      }
      else
      {
        v16 = 0;
      }
      if (qword_1EFBBD438 == -1)
      {
        if (!v16)
          goto LABEL_52;
      }
      else
      {
        swift_once();
        if (!v16)
          goto LABEL_52;
      }
      v42 = (void *)qword_1EFBC3D28;
      sub_1CF9775E8(0, (unint64_t *)&qword_1ED904AE0);
      v43 = v42;
      v44 = v16;
      v45 = sub_1CFB02154();

      if ((v45 & 1) != 0)
      {
        v46 = (void *)objc_opt_self();
        v47 = (void *)sub_1CFB00E58();
        v48 = objc_msgSend(v46, sel_decodeFromData_, v47);

        if (v48)
        {
          v5 = CBOR.readableString.getter();

          sub_1CF923A24(v11, v13);
          return v5;
        }
      }
LABEL_52:
      v53 = 34;
      v54 = 0xE100000000000000;
      sub_1CFB00E64();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      sub_1CFB01B30();
      sub_1CF923A24(v11, v13);
      return v53;
    case 3uLL:
      v17 = objc_msgSend(v3, sel_string);
      if (!v17)
      {
        LOWORD(v53) = 128;
        v5 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        swift_allocError();
        v40 = 0xD00000000000001BLL;
        v50 = 226;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        v41 = "Error while decoding string";
        goto LABEL_38;
      }
      v18 = v17;
      sub_1CFB01A28();

      v53 = 34;
      v54 = 0xE100000000000000;
      sub_1CFB01B30();
LABEL_3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4uLL:
      v19 = objc_msgSend(v3, sel_array);
      if (!v19)
      {
        LOWORD(v53) = 128;
        v5 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        swift_allocError();
        v40 = 0xD00000000000001ALL;
        v50 = 233;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        v41 = "Error while decoding array";
        goto LABEL_38;
      }
      v20 = v19;
      sub_1CF9775E8(0, (unint64_t *)&qword_1EFBBDFC0);
      v21 = sub_1CFB01CA4();

      if (v21 >> 62)
        goto LABEL_48;
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v22)
        goto LABEL_49;
      break;
    case 5uLL:
      v34 = objc_msgSend(v3, sel_dictionary);
      if (!v34)
      {
        LOWORD(v53) = 128;
        v5 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        swift_allocError();
        v40 = 0xD00000000000001FLL;
        v50 = 243;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        v41 = "Error while decoding dictionary";
LABEL_38:
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v40, (unint64_t)(v41 - 32) | 0x8000000000000000, (__int16 *)&v53, 0, v5, 0xD000000000000057, 0x80000001CFB2ECE0, v39, v49[0], v49[1], v50);
        swift_willThrow();
        return v5;
      }
      v5 = (unint64_t)v34;
      sub_1CF9775E8(0, (unint64_t *)&qword_1EFBBDFC0);
      sub_1CFA5E62C();
      v35 = sub_1CFB0195C();

      v36 = sub_1CFA5B1BC(v35);
      swift_bridgeObjectRelease();
      if (v1)
        return v5;
      v53 = 123;
      v54 = 0xE100000000000000;
      v55 = v36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
      sub_1CF96201C();
      sub_1CFB019BC();
      swift_bridgeObjectRelease();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 9uLL:
      return v5;
    case 0xAuLL:
      return 1702195828;
    case 0xBuLL:
    case 0xFuLL:
      return 1819047278;
    case 0xCuLL:
      return 0x6E696665646E7522;
    case 0xEuLL:
      v53 = 0x676154524F424322;
      v54 = 0xE900000000000028;
      v37 = objc_msgSend(v3, sel_numeric);
      v38 = objc_msgSend(v37, sel_description);
      sub_1CFB01A28();

      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      return 0x6E776F6E6B6E7522;
  }
  do
  {
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1CF960FD0(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
      JUMPOUT(0x1CFA5E16CLL);
    }
    v23 = 0;
    v24 = v53;
    v51 = v21 & 0xC000000000000001;
    while (v22 != v23)
    {
      if (v51)
        v25 = (id)MEMORY[0x1D17D9124](v23, v21);
      else
        v25 = *(id *)(v21 + 8 * v23 + 32);
      v5 = (unint64_t)v25;
      v26 = CBOR.readableString.getter();
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();

        return v5;
      }
      v28 = v26;
      v29 = v27;
      v52 = 0;
      v30 = v21;

      v53 = v24;
      v32 = *(_QWORD *)(v24 + 16);
      v31 = *(_QWORD *)(v24 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1CF960FD0(v31 > 1, v32 + 1, 1);
        v24 = v53;
      }
      ++v23;
      *(_QWORD *)(v24 + 16) = v32 + 1;
      v33 = v24 + 16 * v32;
      *(_QWORD *)(v33 + 32) = v28;
      *(_QWORD *)(v33 + 40) = v29;
      v21 = v30;
      v2 = v52;
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    v22 = sub_1CFB02604();
    swift_bridgeObjectRelease();
  }
  while (v22);
LABEL_49:
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEE9D8];
LABEL_50:
  v53 = 91;
  v54 = 0xE100000000000000;
  v55 = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF96201C();
  sub_1CFB019BC();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_1CFB01B30();
  return v53;
}

uint64_t sub_1CFA5E1B0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1CFB00BD0();
  v9 = result;
  if (result)
  {
    result = sub_1CFB00BE8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1CFB00BDC();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_1CFA5E308(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

uint64_t sub_1CFA5E25C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1CF9239E0(a1, a2);
  sub_1CFADF160(a1, a2);
  sub_1CF923A24(a1, a2);
  v4 = sub_1CFB01AC4();
  swift_release();
  return v4;
}

uint64_t sub_1CFA5E2D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1CFB01AC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_1CFA5E308(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1CFA5E354@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1CFB01AC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1CFA5E388(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v6;
  char v7;
  void *v8;

  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        sub_1CFB02328();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_1CFB0258C() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1CFB02598();
  sub_1CFA5E7A4(a1, a2, 1);
  sub_1CF9775E8(0, (unint64_t *)&qword_1EFBBDFC0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_1CFA92994((uint64_t)v8);
  v7 = v6;

  if ((v7 & 1) != 0)
  {
    sub_1CFB02574();
    sub_1CFB025B0();
    sub_1CFA5E798(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1CFA5E524(uint64_t a1)
{
  sub_1CFA5E558(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t sub_1CFA5E558(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;

  if (a3 >> 60 != 15)
  {
    sub_1CF923A24(a2, a3);
    sub_1CF923A24(a4, a5);
    return sub_1CF923A24(a6, a7);
  }
  return result;
}

uint64_t sub_1CFA5E5B8(uint64_t a1)
{
  sub_1CFA5E5E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t sub_1CFA5E5E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a3 >> 60 != 15)
  {
    sub_1CF923A24(a2, a3);
    return sub_1CF923A24(a4, a5);
  }
  return result;
}

unint64_t sub_1CFA5E62C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC3D60;
  if (!qword_1EFBC3D60)
  {
    v1 = sub_1CF9775E8(255, (unint64_t *)&qword_1EFBBDFC0);
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC3D60);
  }
  return result;
}

unint64_t sub_1CFA5E688()
{
  unint64_t result;

  result = qword_1EFBC3D68;
  if (!qword_1EFBC3D68)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for COSE_Sign1.AlgorithmIdentifier, &type metadata for COSE_Sign1.AlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFBC3D68);
  }
  return result;
}

uint64_t _s19AlgorithmIdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFA5E718 + 4 * byte_1CFB1B0C3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFA5E74C + 4 * byte_1CFB1B0BE[v4]))();
}

uint64_t sub_1CFA5E74C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA5E754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA5E75CLL);
  return result;
}

uint64_t sub_1CFA5E768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA5E770);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFA5E774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA5E77C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for COSE_Sign1.AlgorithmIdentifier()
{
  return &type metadata for COSE_Sign1.AlgorithmIdentifier;
}

uint64_t sub_1CFA5E798(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CFA5E7A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1CFA5E7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  sub_1CFB01DA0();
  v4 = sub_1CFB02190();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1CFA5E848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  sub_1CFB01DA0();
  v4 = sub_1CFB02190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1CFA5E8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  v4 = sub_1CFB02190();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1CFA5E958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  v4 = sub_1CFB02190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1CFA5E9D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = a1;

}

uint64_t AsyncPromise.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AsyncPromise.init()();
  return v0;
}

uint64_t *AsyncPromise.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_defaultActor_initialize();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(v1 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  v4 = sub_1CFB01DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 104), 1, 1, v3);
  *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112)) = 0;
  return v0;
}

uint64_t sub_1CFA5EACC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2[4] = v3;
  v4 = sub_1CFB02190();
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA5EB58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;

  v1 = v0[7];
  v2 = v0[8];
  v3 = v0[4];
  sub_1CFA5E8E8(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) != 1)
  {
    v10 = v0[9];
    v11 = v0[4];
    v12 = v0[2];
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[8] + 32);
    v13(v10, v0[7], v11);
    v13(v12, v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  v4 = v0[3];
  (*(void (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[5]);
  v7 = *(void **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  if (v7)
  {
    v8 = v7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  v15 = type metadata accessor for AsyncPromise(255, v0[4], v5, v6);
  MEMORY[0x1D17DA600](&protocol conformance descriptor for AsyncPromise<A>, v15);
  v16 = (_QWORD *)swift_task_alloc();
  v0[10] = v16;
  *v16 = v0;
  v16[1] = sub_1CFA5ECDC;
  return sub_1CFB02994();
}

uint64_t sub_1CFA5ECDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CFA5ED60()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA5EDA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  v2 = sub_1CFB01DA0();
  v3 = sub_1CFB02190();
  v4 = *(_QWORD *)(v3 - 8);
  v12 = MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v30 - v22;
  sub_1CFA5E7B0((uint64_t)&v30 - v22);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v14, a1, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v2);
    return sub_1CFA5E848((uint64_t)v14);
  }
  else
  {
    v31 = 105;
    v27 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v28 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002BLL, 0x80000001CFB2EE10, &v31, 0, v27, 0xD000000000000055, 0x80000001CFB2EE40, v29, 0x65756C6176, 0xE500000000000000, 48);
    v30 = v28;
    return sub_1CFB01D88();
  }
}

uint64_t sub_1CFA5EFA4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v2 = v1;
  v95 = a1;
  v3 = *v1;
  v4 = sub_1CFB012CC();
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  v12 = MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v3 + 80);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v12, v17, v18, v19, v20, v21, v22, v23);
  v89 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  v25 = sub_1CFB01DA0();
  v93 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25, v25, v26, v27, v28, v29, v30, v31);
  v88 = (char *)&v87 - v32;
  v94 = v33;
  v34 = sub_1CFB02190();
  v90 = *(_QWORD *)(v34 - 8);
  v91 = v34;
  v42 = MEMORY[0x1E0C80A78](v34, v35, v36, v37, v38, v39, v40, v41);
  v92 = (char *)&v87 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42, v44, v45, v46, v47, v48, v49, v50);
  v52 = (char *)&v87 - v51;
  v53 = sub_1CFB02190();
  v54 = *(_QWORD *)(v53 - 8);
  v62 = MEMORY[0x1E0C80A78](v53, v55, v56, v57, v58, v59, v60, v61);
  v64 = (char *)&v87 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v62, v65, v66, v67, v68, v69, v70, v71);
  v73 = (char *)&v87 - v72;
  sub_1CFA5E8E8((uint64_t)&v87 - v72);
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v73, 1, v15);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v73, v53);
  if ((_DWORD)v3 == 1 && !*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 112)))
  {
    v81 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v82 = v95;
    v81(v64, v95, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v64, 0, 1, v15);
    sub_1CFA5E958((uint64_t)v64);
    sub_1CFA5E7B0((uint64_t)v52);
    v84 = v93;
    v83 = v94;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v52, 1, v94))
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v91);
    }
    else
    {
      v85 = v88;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v88, v52, v83);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v91);
      v81(v89, v82, v15);
      sub_1CFB01D94();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v83);
    }
    v86 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v92, 1, 1, v83);
    return sub_1CFA5E848(v86);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v74 = v97;
    v75 = __swift_project_value_buffer(v97, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v76 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v14, v75, v74);
    v77 = sub_1CFB012B4();
    v78 = sub_1CFB01FD4();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v79 = 0;
      _os_log_impl(&dword_1CF917000, v77, v78, "AsyncPromise attempting to fulfill result but a result is already set", v79, 2u);
      MEMORY[0x1D17DA6E4](v79, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v14, v74);
  }
}

uint64_t sub_1CFA5F398(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  id v60;
  id v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  id v75;

  v2 = v1;
  v73 = a1;
  v3 = *v1;
  v4 = sub_1CFB012CC();
  v74 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v3 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  v15 = sub_1CFB01DA0();
  v72 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19, v20, v21, v22);
  v68 = (char *)&v68 - v23;
  v24 = sub_1CFB02190();
  v69 = *(_QWORD *)(v24 - 8);
  v70 = v24;
  v32 = MEMORY[0x1E0C80A78](v24, v25, v26, v27, v28, v29, v30, v31);
  v71 = (char *)&v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32, v34, v35, v36, v37, v38, v39, v40);
  v42 = (char *)&v68 - v41;
  v43 = sub_1CFB02190();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43, v45, v46, v47, v48, v49, v50, v51);
  v53 = (char *)&v68 - v52;
  sub_1CFA5E8E8((uint64_t)&v68 - v52);
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v53, 1, v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v53, v43);
  if ((_DWORD)v3 == 1 && !*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 112)))
  {
    v60 = v73;
    v61 = v73;
    v62 = *(_QWORD *)(*v2 + 112);
    v63 = *(void **)((char *)v2 + v62);
    *(_QWORD *)((char *)v2 + v62) = v60;

    sub_1CFA5E7B0((uint64_t)v42);
    v64 = v72;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v42, 1, v15))
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
    }
    else
    {
      v65 = v68;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v68, v42, v15);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
      v75 = v60;
      v66 = v60;
      sub_1CFB01D88();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v15);
    }
    v67 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v71, 1, 1, v15);
    return sub_1CFA5E848(v67);
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v54 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v55 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v13, v54, v4);
    v56 = sub_1CFB012B4();
    v57 = sub_1CFB01FD4();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1CF917000, v56, v57, "AsyncPromise attempting to set a fail result but a result is already set", v58, 2u);
      MEMORY[0x1D17DA6E4](v58, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v13, v4);
  }
}

uint64_t AsyncPromise.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  sub_1CFB01DA0();
  v2 = sub_1CFB02190();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v4 = sub_1CFB02190();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncPromise.__deallocating_deinit()
{
  AsyncPromise.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t AsyncPromise.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CFA5F7F8()
{
  return AsyncPromise.unownedExecutor.getter();
}

uint64_t type metadata accessor for AsyncPromise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncPromise);
}

uint64_t sub_1CFA5F81C(uint64_t a1)
{
  return sub_1CFA5EDA0(a1);
}

uint64_t sub_1CFA5F824()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED904E60);
  sub_1CFB01DA0();
  result = sub_1CFB02190();
  if (v1 <= 0x3F)
  {
    result = sub_1CFB02190();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AsyncPromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncPromise.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of AsyncPromise.value.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 200) + *(_QWORD *)(*(_QWORD *)v1 + 200));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CF92F754;
  return v6(a1);
}

uint64_t dispatch thunk of AsyncPromise.fulfill(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AsyncPromise.fail(error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1CFA5F984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_1CFA922E4(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

void __swiftcall PDF417ParsedData.init(docType:aamvaVersion:map:)(CoreIDVShared::PDF417ParsedData *__return_ptr retstr, Swift::String docType, Swift::String aamvaVersion, Swift::OpaquePointer map)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t *v197;
  uint64_t v198;
  char v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char v204;
  uint64_t *v205;
  uint64_t v206;
  char v207;
  uint64_t *v208;
  uint64_t v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  uint64_t *v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  __int128 v288;
  uint64_t v289;
  void *__dst;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  _QWORD v391[2];
  __int128 v392;
  uint64_t v393;
  uint64_t v394;
  __int128 v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  __int128 v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  _QWORD v492[2];
  __int128 v493;
  uint64_t v494;
  uint64_t v495;
  __int128 v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  __int128 v537;
  __int128 v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  __int128 v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  __int128 v596;
  uint64_t v597;
  uint64_t v598;
  __int128 v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  __int128 v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  __int128 v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  _OWORD __src[54];
  _QWORD v699[2];
  __int128 v700;
  uint64_t v701;
  uint64_t v702;
  __int128 v703;
  uint64_t v704;
  uint64_t v705;
  __int128 v706;
  __int128 v707;
  __int128 v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  __int128 v739;
  __int128 v740;
  __int128 v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  __int128 v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  __int128 v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  __int128 v774;
  __int128 v775;
  __int128 v776;
  __int128 v777;
  __int128 v778;
  __int128 v779;
  __int128 v780;
  __int128 v781;
  __int128 v782;
  __int128 v783;
  __int128 v784;
  _QWORD v785[2];
  __int128 v786;
  uint64_t v787;
  uint64_t v788;
  __int128 v789;
  uint64_t v790;
  uint64_t v791;
  __int128 v792;
  __int128 v793;
  __int128 v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  __int128 v825;
  __int128 v826;
  __int128 v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  __int128 v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  __int128 v853;
  uint64_t v854;
  uint64_t v855;
  __int128 v856;
  uint64_t v857;
  uint64_t v858;
  __int128 v859;
  __int128 v860;
  __int128 v861;
  __int128 v862;
  __int128 v863;
  __int128 v864;
  __int128 v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  uint64_t v870;
  uint64_t v871;
  __int128 v872;
  uint64_t v873;
  uint64_t v874;
  __int128 v875;
  uint64_t v876;
  uint64_t v877;
  __int128 v878;
  __int128 v879;
  __int128 v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  __int128 v911;
  __int128 v912;
  __int128 v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  __int128 v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  __int128 v939;
  __int128 v940;
  __int128 v941;
  uint64_t v942;
  uint64_t v943;
  __int128 v944;
  __int128 v945;
  __int128 v946;
  __int128 v947;
  __int128 v948;
  __int128 v949;
  __int128 v950;
  __int128 v951;
  __int128 v952;
  __int128 v953;
  __int128 v954;
  _QWORD v955[10];
  __int128 v956;
  __int128 v957;
  __int128 v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  __int128 v989;
  __int128 v990;
  __int128 v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  __int128 v1006;
  __int128 v1007;
  __int128 v1008;
  __int128 v1009;
  __int128 v1010;
  __int128 v1011;
  __int128 v1012;
  __int128 v1013;
  __int128 v1014;
  __int128 v1015;
  __int128 v1016;
  __int128 v1017;
  __int128 v1018;
  __int128 v1019;
  __int128 v1020;
  __int128 v1021;
  __int128 v1022;
  __int128 v1023;
  __int128 v1024;
  __int128 v1025;
  __int128 v1026;
  _QWORD v1027[10];
  __int128 v1028;
  __int128 v1029;
  __int128 v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  __int128 v1061;
  __int128 v1062;
  __int128 v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  __int128 v1076;
  __int128 v1077;
  __int128 v1078;
  __int128 v1079;
  __int128 v1080;
  __int128 v1081;
  __int128 v1082;
  __int128 v1083;
  __int128 v1084;
  __int128 v1085;
  __int128 v1086;
  __int128 v1087;
  __int128 v1088;
  __int128 v1089;
  __int128 v1090;
  __int128 v1091;
  __int128 v1092;
  __int128 v1093;
  __int128 v1094;
  __int128 v1095;
  __int128 v1096;
  __int128 v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  __int128 v1108;
  __int128 v1109;
  __int128 v1110;
  uint64_t v1111;
  uint64_t v1112;
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  __int128 v1141;
  __int128 v1142;
  __int128 v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  uint64_t v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  __int128 v1154;
  __int128 v1155;
  __int128 v1156;
  __int128 v1157;
  __int128 v1158;
  __int128 v1159;
  __int128 v1160;
  __int128 v1161;
  __int128 v1162;
  __int128 v1163;
  __int128 v1164;
  __int128 v1165;
  __int128 v1166;
  __int128 v1167;
  __int128 v1168;
  __int128 v1169;
  __int128 v1170;
  __int128 v1171;
  __int128 v1172;
  __int128 v1173;
  __int128 v1174;
  __int128 v1175;
  __int128 v1176;
  _QWORD v1177[10];
  __int128 v1178;
  __int128 v1179;
  __int128 v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  __int128 v1211;
  __int128 v1212;
  __int128 v1213;
  uint64_t v1214;
  uint64_t v1215;
  __int128 v1216;
  __int128 v1217;
  __int128 v1218;
  __int128 v1219;
  __int128 v1220;
  __int128 v1221;
  __int128 v1222;
  __int128 v1223;
  __int128 v1224;
  __int128 v1225;
  __int128 v1226;
  __int128 v1227;
  __int128 v1228;
  __int128 v1229;
  __int128 v1230;
  __int128 v1231;
  __int128 v1232;
  __int128 v1233;
  __int128 v1234;
  __int128 v1235;
  __int128 v1236;
  __int128 v1237;
  __int128 v1238;
  __int128 v1239;
  __int128 v1240;
  __int128 v1241;
  __int128 v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  __int128 v1253;
  __int128 v1254;
  __int128 v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  uint64_t v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  uint64_t v1272;
  uint64_t v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  __int128 v1286;
  __int128 v1287;
  __int128 v1288;
  __int128 v1289;
  __int128 v1290;
  __int128 v1291;
  __int128 v1292;
  __int128 v1293;
  __int128 v1294;
  __int128 v1295;
  __int128 v1296;
  __int128 v1297;
  __int128 v1298;
  __int128 v1299;
  __int128 v1300;
  __int128 v1301;
  __int128 v1302;
  __int128 v1303;
  __int128 v1304;
  __int128 v1305;
  __int128 v1306;
  __int128 v1307;
  __int128 v1308;
  __int128 v1309;
  __int128 v1310;
  __int128 v1311;
  __int128 v1312;
  __int128 v1313;
  __int128 v1314;
  __int128 v1315;
  __int128 v1316;
  _QWORD v1317[10];
  __int128 v1318;
  __int128 v1319;
  __int128 v1320;
  uint64_t v1321;
  uint64_t v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  uint64_t v1332;
  uint64_t v1333;
  uint64_t v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  uint64_t v1339;
  uint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  __int128 v1344;
  __int128 v1345;
  __int128 v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  __int128 v1368;
  __int128 v1369;
  __int128 v1370;
  uint64_t v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  uint64_t v1377;
  _QWORD v1378[10];
  __int128 v1379;
  __int128 v1380;
  __int128 v1381;
  uint64_t v1382;
  uint64_t v1383;
  uint64_t v1384;
  _QWORD v1385[10];
  uint64_t v1386;

  v4 = ((uint64_t (*)(uint64_t, void *, uint64_t, void *, void *))MEMORY[0x1E0C80A78])(docType._countAndFlagsBits, docType._object, aamvaVersion._countAndFlagsBits, aamvaVersion._object, map._rawValue);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = v4;
  __dst = v12;
  v390 = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v14 = sub_1CFA922E4(4277060, 0xE300000000000000), (v15 & 1) != 0))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = 0;
    v18 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1385[0] = v11;
  v1385[1] = v10;
  v1385[3] = 0;
  v1385[2] = 0;
  v1385[4] = v8;
  v1385[5] = v390;
  v1385[7] = 0;
  v1385[6] = 0;
  v389 = v17;
  v1385[8] = v17;
  v1385[9] = v18;
  bzero(&v1386, 0x310uLL);
  v19 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v1385);
  v383 = v10;
  if (v19)
  {
    sub_1CFA922E4(4407620, 0xE300000000000000);
    if ((v20 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1CF9B9CD8();
  v21 = sub_1CFB021FC();
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v1385);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1378[0] = v11;
  v1378[1] = v10;
  v1378[3] = 0;
  v1378[2] = 0;
  v1378[4] = v8;
  v1378[5] = v390;
  v1378[7] = 0;
  v1378[6] = 0;
  v1378[8] = v389;
  v1378[9] = v18;
  v1379 = 0u;
  v1380 = 0u;
  v1381 = 0u;
  v387 = v21;
  v1382 = v21;
  v386 = v23;
  v1383 = v23;
  bzero(&v1384, 0x2D0uLL);
  v24 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v1378);
  if (v24)
  {
    sub_1CFA922E4(4473156, 0xE300000000000000);
    if ((v25 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v26 = sub_1CFB01A88();
  v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1358 = v26;
  v1359 = v28;
  v384 = sub_1CFB021FC();
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v1378);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v385 = v11;
  if (*(_QWORD *)(v6 + 16))
  {
    v31 = sub_1CFA922E4(4407876, 0xE300000000000000);
    v32 = v389;
    if ((v33 & 1) != 0)
    {
      v34 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v31);
      v35 = *v34;
      v36 = v34[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      v35 = 0;
      v36 = 0;
    }
  }
  else
  {
    v35 = 0;
    v36 = 0;
    v32 = v389;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1358 = v11;
  v1359 = v383;
  v1361 = 0;
  v1360 = 0;
  v1362 = v8;
  v1363 = v390;
  v1365 = 0;
  v1364 = 0;
  v1366 = v32;
  v1367 = v18;
  v1368 = 0u;
  v1369 = 0u;
  v1370 = 0u;
  v1371 = v387;
  v1372 = v386;
  v1373 = v384;
  v1374 = v30;
  v380 = v35;
  v1375 = v35;
  v1376 = v36;
  bzero(&v1377, 0x2B0uLL);
  v37 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)&v1358);
  v388 = v30;
  if (v37)
  {
    sub_1CFA922E4(5849412, 0xE300000000000000);
    if ((v38 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v39 = sub_1CFB01A88();
  v41 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1334 = v39;
  v1335 = v41;
  v329 = sub_1CFB021FC();
  v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)&v1358);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v379 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v44 = sub_1CFA922E4(5587268, 0xE300000000000000);
    v45 = v389;
    v46 = v388;
    if ((v47 & 1) != 0)
    {
      v48 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v44);
      v49 = swift_bridgeObjectRetain();
    }
    else
    {
      v48 = 0;
      v49 = 0;
    }
  }
  else
  {
    v48 = 0;
    v49 = 0;
    v45 = v389;
    v46 = v388;
  }
  v50 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1334 = v385;
  v1335 = v383;
  v1337 = 0;
  v1336 = 0;
  v1338 = v379;
  v1339 = v390;
  v1341 = 0;
  v1340 = 0;
  v1342 = v45;
  v1343 = v18;
  v1344 = 0u;
  v1345 = 0u;
  v1346 = 0u;
  v1347 = v387;
  v1348 = v386;
  v1349 = v384;
  v1350 = v46;
  v1351 = v380;
  v1352 = v36;
  v1353 = v329;
  v1354 = v43;
  v369 = v48;
  v1355 = v48;
  v381 = v50;
  v1356 = v50;
  bzero(&v1357, 0x290uLL);
  v51 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)&v1334);
  v382 = v43;
  if (v51)
  {
    sub_1CFA922E4(4669764, 0xE300000000000000);
    if ((v52 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = sub_1CFB021FC();
  v55 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)&v1334);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1317[0] = v385;
  v1317[1] = v383;
  v1317[3] = 0;
  v1317[2] = 0;
  v1317[4] = v379;
  v1317[5] = v390;
  v1317[7] = 0;
  v1317[6] = 0;
  v1317[8] = v389;
  v1317[9] = v18;
  v1318 = 0u;
  v1319 = 0u;
  v1320 = 0u;
  v1321 = v387;
  v1322 = v386;
  v1323 = v384;
  v1324 = v388;
  v1325 = v380;
  v1326 = v36;
  v1327 = v329;
  v1328 = v382;
  v1329 = v369;
  v1330 = v50;
  v360 = v53;
  v1331 = v53;
  v378 = v55;
  v1332 = v55;
  bzero(&v1333, 0x280uLL);
  v56 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v1317);
  if (v56)
  {
    sub_1CFA922E4(4800836, 0xE300000000000000);
    if ((v57 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v58 = sub_1CFB01A88();
  v60 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1243 = v58;
  v1244 = v60;
  v368 = sub_1CFB021FC();
  v62 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v1317);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v63 = sub_1CFA922E4(4866372, 0xE300000000000000), (v64 & 1) != 0))
  {
    v65 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v63);
    v66 = v65[1];
    v367 = *v65;
    swift_bridgeObjectRetain();
  }
  else
  {
    v367 = 0;
    v66 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v67 = sub_1CFA922E4(4931908, 0xE300000000000000), (v68 & 1) != 0))
  {
    v366 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v67);
    v69 = swift_bridgeObjectRetain();
  }
  else
  {
    v366 = 0;
    v69 = 0;
  }
  v376 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v377 = v66;
  if (*(_QWORD *)(v6 + 16) && (v70 = sub_1CFA922E4(5325124, 0xE300000000000000), (v71 & 1) != 0))
  {
    v365 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v70);
    v72 = swift_bridgeObjectRetain();
  }
  else
  {
    v365 = 0;
    v72 = 0;
  }
  v375 = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v73 = sub_1CFA922E4(4604740, 0xE300000000000000), (v74 & 1) != 0))
  {
    v364 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v73);
    v75 = swift_bridgeObjectRetain();
  }
  else
  {
    v364 = 0;
    v75 = 0;
  }
  v374 = v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v76 = sub_1CFA922E4(4670276, 0xE300000000000000), (v77 & 1) != 0))
  {
    v363 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v76);
    v78 = swift_bridgeObjectRetain();
  }
  else
  {
    v363 = 0;
    v78 = 0;
  }
  v373 = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v79 = sub_1CFA922E4(4539460, 0xE300000000000000), (v80 & 1) != 0))
  {
    v362 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v79);
    v81 = swift_bridgeObjectRetain();
  }
  else
  {
    v362 = 0;
    v81 = 0;
  }
  v372 = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v82 = sub_1CFA922E4(4604996, 0xE300000000000000), (v83 & 1) != 0))
  {
    v361 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v82);
    v84 = swift_bridgeObjectRetain();
  }
  else
  {
    v361 = 0;
    v84 = 0;
  }
  v371 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v85 = sub_1CFA922E4(4670532, 0xE300000000000000), (v86 & 1) != 0))
  {
    v87 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v85);
    v88 = *v87;
    v89 = v87[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v88 = 0;
    v89 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1243 = v385;
  v1244 = v383;
  v1246 = 0;
  v1245 = 0;
  v1247 = v379;
  v1248 = v390;
  v1250 = 0;
  v1249 = 0;
  v1251 = v389;
  v1252 = v18;
  v1253 = 0u;
  v1254 = 0u;
  v1255 = 0u;
  v1256 = v387;
  v1257 = v386;
  v1258 = v384;
  v1259 = v388;
  v1260 = v380;
  v1261 = v36;
  v1262 = v329;
  v1263 = v382;
  v1264 = v369;
  v1265 = v50;
  v1266 = v360;
  v1267 = v378;
  v1268 = v368;
  v1269 = v62;
  v1270 = v367;
  v1271 = v66;
  v1272 = v366;
  v1273 = v376;
  v1274 = v365;
  v1275 = v375;
  v1276 = v364;
  v1277 = v374;
  v1278 = v363;
  v1279 = v373;
  v1280 = v362;
  v1281 = v372;
  v1282 = v361;
  v1283 = v371;
  v355 = v88;
  v1284 = v88;
  v1285 = v89;
  v1316 = 0u;
  v1315 = 0u;
  v1314 = 0u;
  v1313 = 0u;
  v1312 = 0u;
  v1311 = 0u;
  v1310 = 0u;
  v1309 = 0u;
  v1308 = 0u;
  v1307 = 0u;
  v1306 = 0u;
  v1305 = 0u;
  v1304 = 0u;
  v1303 = 0u;
  v1302 = 0u;
  v1301 = 0u;
  v1300 = 0u;
  v1299 = 0u;
  v1298 = 0u;
  v1297 = 0u;
  v1296 = 0u;
  v1295 = 0u;
  v1294 = 0u;
  v1293 = 0u;
  v1292 = 0u;
  v1291 = 0u;
  v1290 = 0u;
  v1289 = 0u;
  v1288 = 0u;
  v1287 = 0u;
  v1286 = 0u;
  v90 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)&v1243);
  if (v90)
  {
    sub_1CFA922E4(4735300, 0xE300000000000000);
    if ((v91 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v92 = sub_1CFB021FC();
  v94 = v93;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)&v1243);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1177[0] = v385;
  v1177[1] = v383;
  v1177[3] = 0;
  v1177[2] = 0;
  v1177[4] = v379;
  v1177[5] = v390;
  v1177[7] = 0;
  v1177[6] = 0;
  v1177[8] = v389;
  v1177[9] = v18;
  v1178 = 0u;
  v1179 = 0u;
  v1180 = 0u;
  v1181 = v387;
  v1182 = v386;
  v1183 = v384;
  v1184 = v388;
  v1185 = v380;
  v1186 = v36;
  v1187 = v329;
  v1188 = v382;
  v1189 = v369;
  v1190 = v50;
  v1191 = v360;
  v1192 = v378;
  v1193 = v368;
  v1194 = v62;
  v1195 = v367;
  v1196 = v377;
  v1197 = v366;
  v1198 = v376;
  v1199 = v365;
  v1200 = v375;
  v1201 = v364;
  v1202 = v374;
  v1203 = v363;
  v1204 = v373;
  v1205 = v362;
  v1206 = v372;
  v1207 = v361;
  v1208 = v371;
  v1209 = v88;
  v1210 = v89;
  v1213 = 0u;
  v1212 = 0u;
  v1211 = 0u;
  v351 = v92;
  v1214 = v92;
  v359 = v94;
  v1215 = v94;
  v1242 = 0u;
  v1241 = 0u;
  v1240 = 0u;
  v1239 = 0u;
  v1238 = 0u;
  v1237 = 0u;
  v1236 = 0u;
  v1235 = 0u;
  v1234 = 0u;
  v1233 = 0u;
  v1232 = 0u;
  v1231 = 0u;
  v1230 = 0u;
  v1229 = 0u;
  v1228 = 0u;
  v1227 = 0u;
  v1226 = 0u;
  v1225 = 0u;
  v1224 = 0u;
  v1223 = 0u;
  v1222 = 0u;
  v1221 = 0u;
  v1220 = 0u;
  v1219 = 0u;
  v1218 = 0u;
  v1217 = 0u;
  v1216 = 0u;
  v95 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v1177);
  if (v95)
  {
    sub_1CFA922E4(5914948, 0xE300000000000000);
    if ((v96 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v97 = sub_1CFB01A88();
  v99 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1098 = v97;
  v1099 = v99;
  v350 = sub_1CFB021FC();
  v358 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v1177);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    v101 = sub_1CFA922E4(4801348, 0xE300000000000000);
    v102 = v389;
    if ((v103 & 1) != 0)
    {
      v349 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v101);
      v104 = swift_bridgeObjectRetain();
    }
    else
    {
      v349 = 0;
      v104 = 0;
    }
  }
  else
  {
    v349 = 0;
    v104 = 0;
    v102 = v389;
  }
  v357 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v105 = sub_1CFA922E4(4866884, 0xE300000000000000), (v106 & 1) != 0))
  {
    v348 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v105);
    v107 = swift_bridgeObjectRetain();
  }
  else
  {
    v348 = 0;
    v107 = 0;
  }
  v356 = v107;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v353 = v18;
  if (*(_QWORD *)(v6 + 16) && (v108 = sub_1CFA922E4(4932420, 0xE300000000000000), (v109 & 1) != 0))
  {
    v110 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v108);
    v112 = *v110;
    v111 = v110[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v112 = 0;
    v111 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1098 = v385;
  v1099 = v383;
  v1101 = 0;
  v1100 = 0;
  v1102 = v379;
  v1103 = v390;
  v1105 = 0;
  v1104 = 0;
  v1106 = v102;
  v1107 = v353;
  v1108 = 0u;
  v1109 = 0u;
  v1110 = 0u;
  v1111 = v387;
  v1112 = v386;
  v1113 = v384;
  v1114 = v388;
  v1115 = v380;
  v1116 = v36;
  v1117 = v329;
  v1118 = v382;
  v1119 = v369;
  v1120 = v50;
  v1121 = v360;
  v1122 = v378;
  v1123 = v368;
  v1124 = v62;
  v1125 = v367;
  v1126 = v377;
  v1127 = v366;
  v1128 = v376;
  v1129 = v365;
  v1130 = v375;
  v1131 = v364;
  v1132 = v374;
  v1133 = v363;
  v1134 = v373;
  v1135 = v362;
  v1136 = v372;
  v1137 = v361;
  v1138 = v371;
  v1139 = v355;
  v1140 = v89;
  v1143 = 0u;
  v1142 = 0u;
  v1141 = 0u;
  v1144 = v351;
  v1145 = v359;
  v1146 = v350;
  v1147 = v358;
  v1148 = v349;
  v1149 = v357;
  v1150 = v348;
  v1151 = v356;
  v345 = v112;
  v1152 = v112;
  v354 = v111;
  v1153 = v111;
  v1154 = 0u;
  v1155 = 0u;
  v1156 = 0u;
  v1157 = 0u;
  v1158 = 0u;
  v1159 = 0u;
  v1160 = 0u;
  v1161 = 0u;
  v1162 = 0u;
  v1163 = 0u;
  v1164 = 0u;
  v1165 = 0u;
  v1166 = 0u;
  v1167 = 0u;
  v1168 = 0u;
  v1169 = 0u;
  v1170 = 0u;
  v1171 = 0u;
  v1172 = 0u;
  v1173 = 0u;
  v1174 = 0u;
  v1175 = 0u;
  v1176 = 0u;
  v113 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)&v1098);
  if (v113)
  {
    sub_1CFA922E4(5128772, 0xE300000000000000);
    if ((v114 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v115 = sub_1CFB021FC();
  v117 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)&v1098);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1027[0] = v385;
  v1027[1] = v383;
  v1027[3] = 0;
  v1027[2] = 0;
  v1027[4] = v379;
  v1027[5] = v390;
  v1027[7] = 0;
  v1027[6] = 0;
  v1027[8] = v389;
  v1027[9] = v353;
  v1028 = 0u;
  v1029 = 0u;
  v1030 = 0u;
  v1031 = v387;
  v1032 = v386;
  v1033 = v384;
  v1034 = v388;
  v1035 = v380;
  v1036 = v36;
  v1037 = v329;
  v1038 = v382;
  v1039 = v369;
  v1040 = v50;
  v1041 = v360;
  v1042 = v378;
  v1043 = v368;
  v1044 = v62;
  v1045 = v367;
  v1046 = v377;
  v1047 = v366;
  v1048 = v376;
  v1049 = v365;
  v1050 = v375;
  v1051 = v364;
  v1052 = v374;
  v1053 = v363;
  v1054 = v373;
  v1055 = v362;
  v1056 = v372;
  v1057 = v361;
  v1058 = v371;
  v1059 = v355;
  v1060 = v89;
  v1063 = 0u;
  v1062 = 0u;
  v1061 = 0u;
  v1064 = v351;
  v1065 = v359;
  v1066 = v350;
  v1067 = v358;
  v1068 = v349;
  v1069 = v357;
  v1070 = v348;
  v1071 = v356;
  v1072 = v345;
  v1073 = v111;
  v1074 = v115;
  v347 = v117;
  v1075 = v117;
  v1097 = 0u;
  v1096 = 0u;
  v1095 = 0u;
  v1094 = 0u;
  v1093 = 0u;
  v1092 = 0u;
  v1091 = 0u;
  v1090 = 0u;
  v1089 = 0u;
  v1088 = 0u;
  v1087 = 0u;
  v1086 = 0u;
  v1085 = 0u;
  v1084 = 0u;
  v1083 = 0u;
  v1082 = 0u;
  v1081 = 0u;
  v1080 = 0u;
  v1079 = 0u;
  v1078 = 0u;
  v1077 = 0u;
  v1076 = 0u;
  v118 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v1027);
  v352 = v62;
  if (v118)
  {
    sub_1CFA922E4(4670020, 0xE300000000000000);
    if ((v119 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v120 = sub_1CFB021FC();
  v122 = v121;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v1027);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v955[0] = v385;
  v955[1] = v383;
  v955[3] = 0;
  v955[2] = 0;
  v955[4] = v379;
  v955[5] = v390;
  v955[7] = 0;
  v955[6] = 0;
  v955[8] = v389;
  v955[9] = v353;
  v956 = 0u;
  v957 = 0u;
  v958 = 0u;
  v959 = v387;
  v960 = v386;
  v961 = v384;
  v962 = v388;
  v963 = v380;
  v964 = v36;
  v965 = v329;
  v966 = v382;
  v967 = v369;
  v968 = v50;
  v969 = v360;
  v970 = v378;
  v971 = v368;
  v972 = v62;
  v973 = v367;
  v974 = v377;
  v975 = v366;
  v976 = v376;
  v977 = v365;
  v978 = v375;
  v979 = v364;
  v980 = v374;
  v981 = v363;
  v982 = v373;
  v983 = v362;
  v984 = v372;
  v985 = v361;
  v986 = v371;
  v987 = v355;
  v988 = v89;
  v991 = 0u;
  v990 = 0u;
  v989 = 0u;
  v992 = v351;
  v993 = v359;
  v994 = v350;
  v995 = v358;
  v996 = v349;
  v997 = v357;
  v998 = v348;
  v999 = v356;
  v1000 = v345;
  v1001 = v111;
  v1002 = v115;
  v1003 = v347;
  v336 = v120;
  v1004 = v120;
  v342 = v122;
  v1005 = v122;
  v1026 = 0u;
  v1025 = 0u;
  v1024 = 0u;
  v1023 = 0u;
  v1022 = 0u;
  v1021 = 0u;
  v1020 = 0u;
  v1019 = 0u;
  v1018 = 0u;
  v1017 = 0u;
  v1016 = 0u;
  v1015 = 0u;
  v1014 = 0u;
  v1013 = 0u;
  v1012 = 0u;
  v1011 = 0u;
  v1010 = 0u;
  v1009 = 0u;
  v1008 = 0u;
  v1007 = 0u;
  v1006 = 0u;
  v123 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v955);
  v343 = v89;
  if (v123)
  {
    sub_1CFA922E4(5456452, 0xE300000000000000);
    if ((v124 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v125 = sub_1CFB01A88();
  v127 = v126;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v870 = v125;
  v871 = v127;
  v335 = sub_1CFB021FC();
  v341 = v128;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v955);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v344 = v36;
  if (*(_QWORD *)(v6 + 16) && (v129 = sub_1CFA922E4(4539204, 0xE300000000000000), (v130 & 1) != 0))
  {
    v131 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v129);
    v132 = v131[1];
    v334 = *v131;
    swift_bridgeObjectRetain();
  }
  else
  {
    v334 = 0;
    v132 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v133 = sub_1CFA922E4(4997956, 0xE300000000000000), (v134 & 1) != 0))
  {
    v333 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v133);
    v135 = swift_bridgeObjectRetain();
  }
  else
  {
    v333 = 0;
    v135 = 0;
  }
  v339 = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v136 = sub_1CFA922E4(5063492, 0xE300000000000000), (v137 & 1) != 0))
  {
    v138 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v136);
    v139 = v138[1];
    v332 = *v138;
    swift_bridgeObjectRetain();
  }
  else
  {
    v332 = 0;
    v139 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v346 = v139;
  if (*(_QWORD *)(v6 + 16))
  {
    v140 = sub_1CFA922E4(5129028, 0xE300000000000000);
    if ((v141 & 1) != 0)
    {
      v331 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v140);
      v142 = swift_bridgeObjectRetain();
    }
    else
    {
      v331 = 0;
      v142 = 0;
    }
  }
  else
  {
    v331 = 0;
    v142 = 0;
  }
  v338 = v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v337 = v115;
  v340 = v132;
  if (*(_QWORD *)(v6 + 16))
  {
    v143 = sub_1CFA922E4(5391172, 0xE300000000000000);
    if ((v144 & 1) != 0)
    {
      v145 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v143);
      v147 = *v145;
      v146 = v145[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      v147 = 0;
      v146 = 0;
    }
  }
  else
  {
    v147 = 0;
    v146 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v870 = v385;
  v871 = v383;
  v872 = 0u;
  v873 = v379;
  v874 = v390;
  v875 = 0u;
  v876 = v389;
  v877 = v353;
  v878 = 0u;
  v879 = 0u;
  v880 = 0u;
  v881 = v387;
  v882 = v386;
  v883 = v384;
  v884 = v388;
  v885 = v380;
  v886 = v36;
  v887 = v329;
  v888 = v382;
  v889 = v369;
  v890 = v50;
  v891 = v360;
  v892 = v378;
  v893 = v368;
  v894 = v62;
  v895 = v367;
  v896 = v377;
  v897 = v366;
  v898 = v376;
  v899 = v365;
  v900 = v375;
  v901 = v364;
  v902 = v374;
  v903 = v363;
  v904 = v373;
  v905 = v362;
  v906 = v372;
  v907 = v361;
  v908 = v371;
  v909 = v355;
  v910 = v89;
  v913 = 0u;
  v912 = 0u;
  v911 = 0u;
  v914 = v351;
  v915 = v359;
  v916 = v350;
  v917 = v358;
  v918 = v349;
  v919 = v357;
  v920 = v348;
  v921 = v356;
  v922 = v345;
  v923 = v354;
  v924 = v337;
  v925 = v347;
  v926 = v336;
  v927 = v342;
  v928 = v335;
  v929 = v341;
  v930 = 0u;
  v931 = v334;
  v932 = v340;
  v933 = v333;
  v934 = v339;
  v935 = v332;
  v936 = v139;
  v937 = v331;
  v938 = v338;
  v939 = 0u;
  v940 = 0u;
  v941 = 0u;
  v942 = v147;
  v943 = v146;
  v944 = 0u;
  v945 = 0u;
  v946 = 0u;
  v947 = 0u;
  v948 = 0u;
  v949 = 0u;
  v950 = 0u;
  v951 = 0u;
  v952 = 0u;
  v953 = 0u;
  v954 = 0u;
  v148 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)&v870);
  if (v148)
  {
    sub_1CFA922E4(5260100, 0xE300000000000000);
    if ((v149 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150 = sub_1CFB021FC();
  v152 = v151;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)&v870);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v785[0] = v385;
  v785[1] = v383;
  v786 = 0u;
  v787 = v379;
  v788 = v390;
  v789 = 0u;
  v790 = v389;
  v791 = v353;
  v792 = 0u;
  v793 = 0u;
  v794 = 0u;
  v795 = v387;
  v796 = v386;
  v797 = v384;
  v798 = v388;
  v799 = v380;
  v800 = v36;
  v801 = v329;
  v802 = v382;
  v803 = v369;
  v804 = v50;
  v805 = v360;
  v806 = v378;
  v807 = v368;
  v808 = v352;
  v809 = v367;
  v810 = v377;
  v811 = v366;
  v812 = v376;
  v813 = v365;
  v814 = v375;
  v815 = v364;
  v816 = v374;
  v817 = v363;
  v818 = v373;
  v819 = v362;
  v820 = v372;
  v821 = v361;
  v822 = v371;
  v823 = v355;
  v824 = v89;
  v827 = 0u;
  v826 = 0u;
  v825 = 0u;
  v828 = v351;
  v829 = v359;
  v830 = v350;
  v831 = v358;
  v832 = v349;
  v833 = v357;
  v834 = v348;
  v835 = v356;
  v836 = v345;
  v837 = v354;
  v838 = v337;
  v839 = v347;
  v840 = v336;
  v841 = v342;
  v842 = v335;
  v843 = v341;
  v844 = 0u;
  v845 = v334;
  v846 = v340;
  v847 = v333;
  v848 = v339;
  v849 = v332;
  v850 = v346;
  v851 = v331;
  v852 = v338;
  v853 = 0u;
  v327 = v150;
  v854 = v150;
  v330 = v152;
  v855 = v152;
  v856 = 0u;
  v857 = v147;
  v858 = v146;
  v869 = 0u;
  v868 = 0u;
  v867 = 0u;
  v866 = 0u;
  v865 = 0u;
  v864 = 0u;
  v863 = 0u;
  v862 = 0u;
  v861 = 0u;
  v860 = 0u;
  v859 = 0u;
  v153 = *(_QWORD *)(v6 + 16);
  sub_1CFA6ECCC((uint64_t)v785);
  if (v153)
  {
    sub_1CFA922E4(5325636, 0xE300000000000000);
    if ((v154 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  sub_1CFB01A88();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v155 = sub_1CFB021FC();
  v157 = v156;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v785);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v772 = v147;
  v699[0] = v385;
  v699[1] = v383;
  v700 = 0u;
  v701 = v379;
  v702 = v390;
  v703 = 0u;
  v704 = v389;
  v705 = v353;
  v706 = 0u;
  v707 = 0u;
  v708 = 0u;
  v709 = v387;
  v710 = v386;
  v711 = v384;
  v712 = v388;
  v713 = v380;
  v714 = v36;
  v715 = v329;
  v716 = v382;
  v717 = v369;
  v718 = v50;
  v719 = v360;
  v720 = v378;
  v721 = v368;
  v722 = v352;
  v723 = v367;
  v724 = v377;
  v725 = v366;
  v726 = v376;
  v727 = v365;
  v728 = v375;
  v729 = v364;
  v730 = v374;
  v731 = v363;
  v732 = v373;
  v733 = v362;
  v734 = v372;
  v735 = v361;
  v736 = v371;
  v737 = v355;
  v738 = v89;
  v741 = 0u;
  v740 = 0u;
  v739 = 0u;
  v742 = v351;
  v743 = v359;
  v744 = v350;
  v745 = v358;
  v746 = v349;
  v747 = v357;
  v748 = v348;
  v749 = v356;
  v750 = v345;
  v751 = v354;
  v752 = v337;
  v753 = v347;
  v754 = v336;
  v755 = v342;
  v756 = v335;
  v757 = v341;
  v758 = 0u;
  v759 = v334;
  v760 = v340;
  v761 = v333;
  v762 = v339;
  v763 = v332;
  v764 = v346;
  v765 = v331;
  v766 = v338;
  v767 = 0u;
  v768 = v327;
  v769 = v330;
  v312 = v155;
  v770 = v155;
  v328 = v157;
  v771 = v157;
  v773 = v146;
  v784 = 0u;
  v783 = 0u;
  v782 = 0u;
  v781 = 0u;
  v780 = 0u;
  v779 = 0u;
  v778 = 0u;
  v777 = 0u;
  v776 = 0u;
  v775 = 0u;
  v774 = 0u;
  sub_1CFA6ECCC((uint64_t)v699);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1CFA922E4(5391172, 0xE300000000000000);
    if ((v158 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v159 = sub_1CFB01A88();
  v161 = v160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&__src[0] = v159;
  *((_QWORD *)&__src[0] + 1) = v161;
  v311 = sub_1CFB021FC();
  v163 = v162;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)v699);
  v326 = v163;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    v164 = sub_1CFA922E4(4277316, 0xE300000000000000);
    v165 = v388;
    if ((v166 & 1) != 0)
    {
      v167 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v164);
      v168 = v167[1];
      v310 = *v167;
      swift_bridgeObjectRetain();
    }
    else
    {
      v310 = 0;
      v168 = 0;
    }
    v169 = v379;
    v170 = v352;
  }
  else
  {
    v310 = 0;
    v168 = 0;
    v169 = v379;
    v165 = v388;
    v170 = v352;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v171 = sub_1CFA922E4(4473924, 0xE300000000000000), (v172 & 1) != 0))
  {
    v173 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v171);
    v174 = v173[1];
    v309 = *v173;
    swift_bridgeObjectRetain();
  }
  else
  {
    v309 = 0;
    v174 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v175 = sub_1CFA922E4(5718340, 0xE300000000000000), (v176 & 1) != 0))
  {
    v308 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v175);
    v177 = swift_bridgeObjectRetain();
  }
  else
  {
    v308 = 0;
    v177 = 0;
  }
  v323 = v177;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v325 = v168;
  if (*(_QWORD *)(v6 + 16) && (v178 = sub_1CFA922E4(5783876, 0xE300000000000000), (v179 & 1) != 0))
  {
    v307 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v178);
    v180 = swift_bridgeObjectRetain();
  }
  else
  {
    v307 = 0;
    v180 = 0;
  }
  v322 = v180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16) && (v181 = sub_1CFA922E4(4932676, 0xE300000000000000), (v182 & 1) != 0))
  {
    v306 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v181);
    v183 = swift_bridgeObjectRetain();
  }
  else
  {
    v306 = 0;
    v183 = 0;
  }
  v321 = v183;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v324 = v174;
  if (!*(_QWORD *)(v6 + 16))
  {
    v187 = 0;
    v305 = 0;
    v188 = v390;
LABEL_151:
    v302 = 0;
    v192 = 0;
    v316 = v187;
    goto LABEL_152;
  }
  v184 = sub_1CFA922E4(4998212, 0xE300000000000000);
  if ((v185 & 1) != 0)
  {
    v186 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v184);
    v187 = v186[1];
    v305 = *v186;
    swift_bridgeObjectRetain();
  }
  else
  {
    v305 = 0;
    v187 = 0;
  }
  v188 = v390;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_151;
  swift_bridgeObjectRetain();
  v189 = sub_1CFA922E4(4342852, 0xE300000000000000);
  v316 = v187;
  if ((v190 & 1) != 0)
  {
    v191 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v189);
    v302 = *v191;
    v192 = v191[1];
LABEL_152:
    swift_bridgeObjectRetain();
    v193 = v192;
    goto LABEL_153;
  }
  v302 = 0;
  v193 = 0;
LABEL_153:
  v194 = *(_QWORD *)(v6 + 16);
  v320 = v193;
  swift_bridgeObjectRetain();
  if (!v194)
  {
    v304 = 0;
    goto LABEL_161;
  }
  v195 = sub_1CFA922E4(4408388, 0xE300000000000000);
  if ((v196 & 1) == 0)
  {
    v304 = 0;
    v194 = 0;
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_159;
LABEL_161:
    v301 = 0;
    v201 = 0;
    v315 = v194;
    swift_bridgeObjectRetain();
    goto LABEL_164;
  }
  v197 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v195);
  v194 = v197[1];
  v304 = *v197;
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_161;
LABEL_159:
  swift_bridgeObjectRetain();
  v198 = sub_1CFA922E4(4736068, 0xE300000000000000);
  v315 = v194;
  if ((v199 & 1) != 0)
  {
    v200 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v198);
    v301 = *v200;
    v201 = v200[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v301 = 0;
    v201 = 0;
  }
LABEL_164:
  v319 = v201;
  v202 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (!v202)
  {
    v303 = 0;
    goto LABEL_172;
  }
  v203 = sub_1CFA922E4(4801604, 0xE300000000000000);
  if ((v204 & 1) == 0)
  {
    v303 = 0;
    v202 = 0;
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_170;
LABEL_172:
    v300 = 0;
    v209 = 0;
    swift_bridgeObjectRetain();
    goto LABEL_174;
  }
  v205 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v203);
  v202 = v205[1];
  v303 = *v205;
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_172;
LABEL_170:
  swift_bridgeObjectRetain();
  v206 = sub_1CFA922E4(4867140, 0xE300000000000000);
  if ((v207 & 1) != 0)
  {
    v208 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v206);
    v300 = *v208;
    v209 = v208[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v300 = 0;
    v209 = 0;
  }
LABEL_174:
  v317 = v209;
  v318 = v202;
  if (v169 == 12592 && v188 == 0xE200000000000000)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_178;
  }
  v210 = sub_1CFB028B0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v210 & 1) != 0)
  {
LABEL_178:
    if (*(_QWORD *)(v6 + 16))
    {
      v211 = sub_1CFA922E4(5456196, 0xE300000000000000);
      v212 = v389;
      if ((v213 & 1) != 0)
      {
        v214 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v211);
        v215 = swift_bridgeObjectRetain();
        if (*(_QWORD *)(v6 + 16))
          goto LABEL_181;
      }
      else
      {
        v214 = 0;
        v215 = 0;
        if (*(_QWORD *)(v6 + 16))
        {
LABEL_181:
          v298 = v215;
          swift_bridgeObjectRetain();
          v216 = sub_1CFA922E4(5521732, 0xE300000000000000);
          v217 = v170;
          v218 = v214;
          if ((v219 & 1) != 0)
          {
            v220 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v216);
            v313 = *v220;
            v296 = v220[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            v313 = 0;
            v296 = 0;
          }
          goto LABEL_192;
        }
      }
      v217 = v170;
      v218 = v214;
    }
    else
    {
      v217 = v170;
      v215 = 0;
      v218 = 0;
      v212 = v389;
    }
    v313 = 0;
    v296 = 0;
    v298 = v215;
    swift_bridgeObjectRetain();
LABEL_192:
    *(_QWORD *)&__src[0] = v385;
    *((_QWORD *)&__src[0] + 1) = v383;
    __src[1] = 0u;
    *(_QWORD *)&__src[2] = v169;
    *((_QWORD *)&__src[2] + 1) = v390;
    __src[3] = 0u;
    *(_QWORD *)&__src[4] = v212;
    *((_QWORD *)&__src[4] + 1) = v353;
    *(_QWORD *)&__src[5] = v218;
    *((_QWORD *)&__src[5] + 1) = v298;
    *(_QWORD *)&__src[6] = v313;
    *((_QWORD *)&__src[6] + 1) = v296;
    __src[7] = 0u;
    *(_QWORD *)&__src[8] = v387;
    *((_QWORD *)&__src[8] + 1) = v386;
    *(_QWORD *)&__src[9] = v384;
    *((_QWORD *)&__src[9] + 1) = v165;
    *(_QWORD *)&__src[10] = v380;
    *((_QWORD *)&__src[10] + 1) = v344;
    *(_QWORD *)&__src[11] = v329;
    *((_QWORD *)&__src[11] + 1) = v382;
    *(_QWORD *)&__src[12] = v369;
    *((_QWORD *)&__src[12] + 1) = v381;
    *(_QWORD *)&__src[13] = v360;
    *((_QWORD *)&__src[13] + 1) = v378;
    *(_QWORD *)&__src[14] = v368;
    *((_QWORD *)&__src[14] + 1) = v217;
    *(_QWORD *)&__src[15] = v367;
    *((_QWORD *)&__src[15] + 1) = v377;
    *(_QWORD *)&__src[16] = v366;
    *((_QWORD *)&__src[16] + 1) = v376;
    *(_QWORD *)&__src[17] = v365;
    *((_QWORD *)&__src[17] + 1) = v375;
    *(_QWORD *)&__src[18] = v364;
    *((_QWORD *)&__src[18] + 1) = v374;
    *(_QWORD *)&__src[19] = v363;
    *((_QWORD *)&__src[19] + 1) = v373;
    *(_QWORD *)&__src[20] = v362;
    *((_QWORD *)&__src[20] + 1) = v372;
    *(_QWORD *)&__src[21] = v361;
    *((_QWORD *)&__src[21] + 1) = v371;
    *(_QWORD *)&__src[22] = v355;
    *((_QWORD *)&__src[22] + 1) = v343;
    memset(&__src[23], 0, 48);
    *(_QWORD *)&__src[26] = v351;
    *((_QWORD *)&__src[26] + 1) = v359;
    *(_QWORD *)&__src[27] = v350;
    *((_QWORD *)&__src[27] + 1) = v358;
    *(_QWORD *)&__src[28] = v349;
    *((_QWORD *)&__src[28] + 1) = v357;
    *(_QWORD *)&__src[29] = v348;
    *((_QWORD *)&__src[29] + 1) = v356;
    *(_QWORD *)&__src[30] = v345;
    *((_QWORD *)&__src[30] + 1) = v354;
    *(_QWORD *)&__src[31] = v337;
    *((_QWORD *)&__src[31] + 1) = v347;
    *(_QWORD *)&__src[32] = v336;
    *((_QWORD *)&__src[32] + 1) = v342;
    *(_QWORD *)&__src[33] = v335;
    *((_QWORD *)&__src[33] + 1) = v341;
    __src[34] = 0u;
    *(_QWORD *)&__src[35] = v334;
    *((_QWORD *)&__src[35] + 1) = v340;
    *(_QWORD *)&__src[36] = v333;
    *((_QWORD *)&__src[36] + 1) = v339;
    *(_QWORD *)&__src[37] = v332;
    *((_QWORD *)&__src[37] + 1) = v346;
    *(_QWORD *)&__src[38] = v331;
    *((_QWORD *)&__src[38] + 1) = v338;
    __src[39] = 0u;
    *(_QWORD *)&__src[40] = v327;
    *((_QWORD *)&__src[40] + 1) = v330;
    *(_QWORD *)&__src[41] = v312;
    *((_QWORD *)&__src[41] + 1) = v328;
    *(_QWORD *)&__src[42] = v311;
    *((_QWORD *)&__src[42] + 1) = v326;
    *(_QWORD *)&__src[43] = v310;
    *((_QWORD *)&__src[43] + 1) = v168;
    *(_QWORD *)&__src[44] = v309;
    *((_QWORD *)&__src[44] + 1) = v324;
    *(_QWORD *)&__src[45] = v308;
    *((_QWORD *)&__src[45] + 1) = v323;
    *(_QWORD *)&__src[46] = v307;
    *((_QWORD *)&__src[46] + 1) = v322;
    *(_QWORD *)&__src[47] = v306;
    *((_QWORD *)&__src[47] + 1) = v321;
    *(_QWORD *)&__src[48] = v305;
    *((_QWORD *)&__src[48] + 1) = v316;
    *(_QWORD *)&__src[49] = v302;
    *((_QWORD *)&__src[49] + 1) = v320;
    *(_QWORD *)&__src[50] = v304;
    *((_QWORD *)&__src[50] + 1) = v315;
    *(_QWORD *)&__src[51] = v301;
    *((_QWORD *)&__src[51] + 1) = v319;
    *(_QWORD *)&__src[52] = v303;
    *((_QWORD *)&__src[52] + 1) = v318;
    *(_QWORD *)&__src[53] = v300;
    *((_QWORD *)&__src[53] + 1) = v209;
    v226 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain();
    sub_1CFA6ECCC((uint64_t)__src);
    if (v226)
    {
      sub_1CFA922E4(4342084, 0xE300000000000000);
      if ((v227 & 1) != 0)
        swift_bridgeObjectRetain();
    }
    v228 = sub_1CFB01A88();
    v230 = v229;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v594 = v228;
    v595 = v230;
    v294 = sub_1CFB021FC();
    v232 = v231;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CFA6EFF0((uint64_t)__src);
    v297 = v232;
    swift_bridgeObjectRetain();
    v295 = sub_1CFA5F984(4538692, 0xE300000000000000, v6);
    v391[0] = v385;
    v391[1] = v383;
    v392 = 0u;
    v393 = v379;
    v394 = v390;
    v395 = 0u;
    v396 = v389;
    v397 = v353;
    v292 = v218;
    v398 = v218;
    v399 = v298;
    v400 = v313;
    v401 = v296;
    v402 = v294;
    v403 = v232;
    v404 = v387;
    v405 = v386;
    v406 = v384;
    v407 = v388;
    v408 = v380;
    v409 = v344;
    v410 = v329;
    v411 = v382;
    v412 = v369;
    v413 = v381;
    v414 = v360;
    v415 = v378;
    v416 = v368;
    v417 = v352;
    v418 = v367;
    v419 = v377;
    v420 = v366;
    v421 = v376;
    v422 = v365;
    v423 = v375;
    v424 = v364;
    v425 = v374;
    v426 = v363;
    v427 = v373;
    v428 = v362;
    v429 = v372;
    v430 = v361;
    v431 = v371;
    v432 = v355;
    v433 = v343;
    v436 = 0u;
    v435 = 0u;
    v434 = 0u;
    v437 = v351;
    v438 = v359;
    v439 = v350;
    v440 = v358;
    v441 = v349;
    v442 = v357;
    v443 = v348;
    v444 = v356;
    v445 = v345;
    v446 = v354;
    v447 = v337;
    v448 = v347;
    v449 = v336;
    v450 = v342;
    v451 = v335;
    v452 = v341;
    v453 = v295;
    v234 = v233;
    v454 = v233;
    v455 = v334;
    v456 = v340;
    v457 = v333;
    v458 = v339;
    v459 = v332;
    v460 = v346;
    v461 = v331;
    v462 = v338;
    v463 = 0u;
    v464 = v327;
    v465 = v330;
    v466 = v312;
    v467 = v328;
    v468 = v311;
    v469 = v326;
    v470 = v310;
    v471 = v168;
    v472 = v309;
    v473 = v324;
    v474 = v308;
    v475 = v323;
    v476 = v307;
    v477 = v322;
    v478 = v306;
    v479 = v321;
    v480 = v305;
    v481 = v316;
    v482 = v302;
    v483 = v320;
    v484 = v304;
    v485 = v315;
    v486 = v301;
    v487 = v319;
    v488 = v303;
    v489 = v318;
    v490 = v300;
    v491 = v317;
    v370 = v233;
    swift_bridgeObjectRetain();
    sub_1CFA6ECCC((uint64_t)v391);
    v235 = sub_1CFA5F984(4276804, 0xE300000000000000, v6);
    *(_QWORD *)&v291 = sub_1CFA65C90(v235, v236);
    v238 = v237;
    swift_bridgeObjectRelease();
    sub_1CFA6EFF0((uint64_t)v391);
    v492[0] = v385;
    v492[1] = v383;
    v493 = 0u;
    v494 = v379;
    v495 = v390;
    v496 = 0u;
    v497 = v389;
    v498 = v353;
    v499 = v292;
    v500 = v298;
    v501 = v313;
    v502 = v296;
    v503 = v294;
    v504 = v232;
    v505 = v387;
    v506 = v386;
    v507 = v384;
    v508 = v388;
    v509 = v380;
    v510 = v344;
    v511 = v329;
    v512 = v382;
    v513 = v369;
    v514 = v381;
    v515 = v360;
    v516 = v378;
    v517 = v368;
    v518 = v352;
    v519 = v367;
    v520 = v377;
    v521 = v366;
    v522 = v376;
    v523 = v365;
    v524 = v375;
    v525 = v364;
    v526 = v374;
    v527 = v363;
    v528 = v373;
    v529 = v362;
    v530 = v372;
    v531 = v361;
    v532 = v371;
    v533 = v355;
    v534 = v343;
    v535 = v291;
    v536 = v238;
    v538 = 0u;
    v537 = 0u;
    v539 = v351;
    v540 = v359;
    v541 = v350;
    v542 = v358;
    v543 = v349;
    v544 = v357;
    v545 = v348;
    v546 = v356;
    v547 = v345;
    v548 = v354;
    v549 = v337;
    v550 = v347;
    v551 = v336;
    v552 = v342;
    v553 = v335;
    v554 = v341;
    v555 = v295;
    v556 = v234;
    v557 = v334;
    v558 = v340;
    v559 = v333;
    v560 = v339;
    v561 = v332;
    v562 = v346;
    v563 = v331;
    v564 = v338;
    v565 = 0u;
    v566 = v327;
    v567 = v330;
    v568 = v312;
    v569 = v328;
    v570 = v311;
    v571 = v326;
    v572 = v310;
    v573 = v168;
    v574 = v309;
    v575 = v324;
    v576 = v308;
    v577 = v323;
    v578 = v307;
    v579 = v322;
    v580 = v306;
    v581 = v321;
    v582 = v305;
    v583 = v316;
    v584 = v302;
    v585 = v320;
    v586 = v304;
    v587 = v315;
    v588 = v301;
    v589 = v319;
    v590 = v303;
    v591 = v318;
    v592 = v300;
    v593 = v317;
    swift_bridgeObjectRetain();
    sub_1CFA6ECCC((uint64_t)v492);
    v239 = sub_1CFA5F984(4473412, 0xE300000000000000, v6);
    v287 = sub_1CFA65C90(v239, v240);
    v242 = v241;
    swift_bridgeObjectRelease();
    sub_1CFA6EFF0((uint64_t)v492);
    v594 = v385;
    v595 = v383;
    v596 = 0u;
    v597 = v379;
    v598 = v390;
    v599 = 0u;
    v600 = v389;
    v601 = v353;
    v602 = v292;
    v603 = v298;
    v604 = v313;
    v605 = v296;
    v606 = v294;
    v607 = v232;
    v608 = v387;
    v609 = v386;
    v610 = v384;
    v611 = v388;
    v612 = v380;
    v613 = v344;
    v614 = v329;
    v615 = v382;
    v616 = v369;
    v617 = v381;
    v618 = v360;
    v619 = v378;
    v620 = v368;
    v621 = v352;
    v622 = v367;
    v623 = v377;
    v624 = v366;
    v625 = v376;
    v626 = v365;
    v627 = v375;
    v628 = v364;
    v629 = v374;
    v630 = v363;
    v631 = v373;
    v243 = v296;
    v632 = v362;
    v633 = v372;
    v634 = v361;
    v635 = v371;
    v636 = v355;
    v637 = v343;
    v638 = v291;
    v639 = v238;
    v640 = v287;
    v289 = v242;
    v641 = v242;
    v642 = 0u;
    v244 = v350;
    v643 = v351;
    v644 = v359;
    v645 = v350;
    v646 = v358;
    v647 = v349;
    v648 = v357;
    v649 = v348;
    v650 = v356;
    v651 = v345;
    v652 = v354;
    v653 = v337;
    v654 = v347;
    v655 = v336;
    v656 = v342;
    v657 = v335;
    v658 = v341;
    v659 = v295;
    v660 = v370;
    v661 = v334;
    v662 = v340;
    v663 = v333;
    v664 = v339;
    v665 = v332;
    v666 = v346;
    v667 = v331;
    v668 = v338;
    v669 = 0u;
    v670 = v327;
    v671 = v330;
    v672 = v312;
    v673 = v328;
    v674 = v311;
    v675 = v326;
    v676 = v310;
    v677 = v325;
    v678 = v309;
    v679 = v324;
    v680 = v308;
    v681 = v323;
    v682 = v307;
    v683 = v322;
    v684 = v306;
    v685 = v321;
    v686 = v305;
    v687 = v316;
    v688 = v302;
    v689 = v320;
    v690 = v304;
    v691 = v315;
    v692 = v301;
    v693 = v319;
    v694 = v303;
    v695 = v318;
    v696 = v300;
    v697 = v317;
    sub_1CFA6ECCC((uint64_t)&v594);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *((_QWORD *)&v291 + 1) = v238;
    v245 = v298;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v246 = sub_1CFA5F984(4342340, 0xE300000000000000, v6);
    v248 = v247;
    v249 = v313;
    swift_bridgeObjectRelease();
    v250 = v246;
    v251 = v379;
    *(_QWORD *)&v288 = sub_1CFA65C90(v250, v248);
    *((_QWORD *)&v288 + 1) = v252;
    v253 = v292;
    swift_bridgeObjectRelease();
    sub_1CFA6EFF0((uint64_t)&v594);
    v254 = v345;
    v255 = v348;
    v256 = v287;
    v257 = v349;
    v258 = v351;
    v259 = v385;
    v260 = v355;
    v261 = v361;
    v262 = v362;
    v263 = v363;
    v264 = v364;
    v265 = v365;
    v266 = v366;
    v267 = v367;
    v268 = v368;
    v269 = v360;
    v270 = v369;
    v271 = v380;
    v272 = v384;
    v273 = v387;
    goto LABEL_206;
  }
  if (*(_QWORD *)(v6 + 16))
  {
    v221 = sub_1CFA922E4(4342596, 0xE300000000000000);
    v222 = v389;
    if ((v223 & 1) != 0)
    {
      v224 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v221);
      v225 = swift_bridgeObjectRetain();
      if (!*(_QWORD *)(v6 + 16))
        goto LABEL_200;
LABEL_198:
      v299 = v225;
      swift_bridgeObjectRetain();
      v274 = sub_1CFA922E4(4473668, 0xE300000000000000);
      if ((v275 & 1) != 0)
      {
        v276 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v274);
        v277 = *v276;
        v243 = v276[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        v277 = 0;
        v243 = 0;
      }
      goto LABEL_202;
    }
    v224 = 0;
    v225 = 0;
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_198;
  }
  else
  {
    v225 = 0;
    v224 = 0;
    v222 = v389;
  }
LABEL_200:
  v277 = 0;
  v243 = 0;
  v299 = v225;
  swift_bridgeObjectRetain();
LABEL_202:
  *(_QWORD *)&__src[0] = v385;
  *((_QWORD *)&__src[0] + 1) = v383;
  __src[1] = 0u;
  *(_QWORD *)&__src[2] = v169;
  *((_QWORD *)&__src[2] + 1) = v188;
  __src[3] = 0u;
  *(_QWORD *)&__src[4] = v222;
  *((_QWORD *)&__src[4] + 1) = v353;
  *(_QWORD *)&__src[5] = v224;
  *((_QWORD *)&__src[5] + 1) = v299;
  *(_QWORD *)&__src[6] = v277;
  *((_QWORD *)&__src[6] + 1) = v243;
  __src[7] = 0u;
  *(_QWORD *)&__src[8] = v387;
  *((_QWORD *)&__src[8] + 1) = v386;
  *(_QWORD *)&__src[9] = v384;
  *((_QWORD *)&__src[9] + 1) = v165;
  *(_QWORD *)&__src[10] = v380;
  *((_QWORD *)&__src[10] + 1) = v344;
  *(_QWORD *)&__src[11] = v329;
  *((_QWORD *)&__src[11] + 1) = v382;
  *(_QWORD *)&__src[12] = v369;
  *((_QWORD *)&__src[12] + 1) = v381;
  *(_QWORD *)&__src[13] = v360;
  *((_QWORD *)&__src[13] + 1) = v378;
  *(_QWORD *)&__src[14] = v368;
  *((_QWORD *)&__src[14] + 1) = v352;
  *(_QWORD *)&__src[15] = v367;
  *((_QWORD *)&__src[15] + 1) = v377;
  *(_QWORD *)&__src[16] = v366;
  *((_QWORD *)&__src[16] + 1) = v376;
  *(_QWORD *)&__src[17] = v365;
  *((_QWORD *)&__src[17] + 1) = v375;
  *(_QWORD *)&__src[18] = v364;
  *((_QWORD *)&__src[18] + 1) = v374;
  *(_QWORD *)&__src[19] = v363;
  *((_QWORD *)&__src[19] + 1) = v373;
  *(_QWORD *)&__src[20] = v362;
  *((_QWORD *)&__src[20] + 1) = v372;
  *(_QWORD *)&__src[21] = v361;
  *((_QWORD *)&__src[21] + 1) = v371;
  *(_QWORD *)&__src[22] = v355;
  *((_QWORD *)&__src[22] + 1) = v343;
  memset(&__src[23], 0, 48);
  *(_QWORD *)&__src[26] = v351;
  *((_QWORD *)&__src[26] + 1) = v359;
  *(_QWORD *)&__src[27] = v350;
  *((_QWORD *)&__src[27] + 1) = v358;
  *(_QWORD *)&__src[28] = v349;
  *((_QWORD *)&__src[28] + 1) = v357;
  *(_QWORD *)&__src[29] = v348;
  *((_QWORD *)&__src[29] + 1) = v356;
  *(_QWORD *)&__src[30] = v345;
  *((_QWORD *)&__src[30] + 1) = v354;
  *(_QWORD *)&__src[31] = v337;
  *((_QWORD *)&__src[31] + 1) = v347;
  *(_QWORD *)&__src[32] = v336;
  *((_QWORD *)&__src[32] + 1) = v342;
  *(_QWORD *)&__src[33] = v335;
  *((_QWORD *)&__src[33] + 1) = v341;
  __src[34] = 0u;
  *(_QWORD *)&__src[35] = v334;
  *((_QWORD *)&__src[35] + 1) = v340;
  *(_QWORD *)&__src[36] = v333;
  *((_QWORD *)&__src[36] + 1) = v339;
  *(_QWORD *)&__src[37] = v332;
  *((_QWORD *)&__src[37] + 1) = v346;
  *(_QWORD *)&__src[38] = v331;
  *((_QWORD *)&__src[38] + 1) = v338;
  __src[39] = 0u;
  *(_QWORD *)&__src[40] = v327;
  *((_QWORD *)&__src[40] + 1) = v330;
  *(_QWORD *)&__src[41] = v312;
  *((_QWORD *)&__src[41] + 1) = v328;
  *(_QWORD *)&__src[42] = v311;
  *((_QWORD *)&__src[42] + 1) = v326;
  *(_QWORD *)&__src[43] = v310;
  *((_QWORD *)&__src[43] + 1) = v325;
  *(_QWORD *)&__src[44] = v309;
  *((_QWORD *)&__src[44] + 1) = v324;
  *(_QWORD *)&__src[45] = v308;
  *((_QWORD *)&__src[45] + 1) = v323;
  *(_QWORD *)&__src[46] = v307;
  *((_QWORD *)&__src[46] + 1) = v322;
  *(_QWORD *)&__src[47] = v306;
  *((_QWORD *)&__src[47] + 1) = v321;
  *(_QWORD *)&__src[48] = v305;
  *((_QWORD *)&__src[48] + 1) = v316;
  *(_QWORD *)&__src[49] = v302;
  *((_QWORD *)&__src[49] + 1) = v320;
  *(_QWORD *)&__src[50] = v304;
  *((_QWORD *)&__src[50] + 1) = v315;
  *(_QWORD *)&__src[51] = v301;
  *((_QWORD *)&__src[51] + 1) = v319;
  *(_QWORD *)&__src[52] = v303;
  *((_QWORD *)&__src[52] + 1) = v318;
  *(_QWORD *)&__src[53] = v300;
  *((_QWORD *)&__src[53] + 1) = v209;
  sub_1CFA6ECCC((uint64_t)__src);
  swift_bridgeObjectRelease();
  v293 = v224;
  v314 = v277;
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1CFA922E4(5456708, 0xE300000000000000);
    if ((v278 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  v279 = sub_1CFB01A88();
  v281 = v280;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v594 = v279;
  v595 = v281;
  v294 = sub_1CFB021FC();
  v297 = v282;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)__src);
  v295 = sub_1CFA5F984(5587780, 0xE300000000000000, v6);
  v370 = v283;
  *(_QWORD *)&v291 = sub_1CFA5F984(4276804, 0xE300000000000000, v6);
  *((_QWORD *)&v291 + 1) = v284;
  v256 = sub_1CFA5F984(4473412, 0xE300000000000000, v6);
  v289 = v285;
  *(_QWORD *)&v288 = sub_1CFA5F984(4342340, 0xE300000000000000, v6);
  *((_QWORD *)&v288 + 1) = v286;
  swift_bridgeObjectRelease();
  v251 = v379;
  v259 = v385;
  v273 = v387;
  v272 = v384;
  v271 = v380;
  v270 = v369;
  v269 = v360;
  v268 = v368;
  v267 = v367;
  v266 = v366;
  v265 = v365;
  v264 = v364;
  v263 = v363;
  v262 = v362;
  v261 = v361;
  v260 = v355;
  v244 = v350;
  v258 = v351;
  v255 = v348;
  v257 = v349;
  v254 = v345;
  v245 = v299;
  v253 = v293;
  v249 = v314;
LABEL_206:
  *(_QWORD *)&__src[0] = v259;
  *(_QWORD *)&__src[2] = v251;
  *(_QWORD *)&__src[4] = v389;
  *(_QWORD *)&__src[5] = v253;
  *(_QWORD *)&__src[6] = v249;
  *(_QWORD *)&__src[7] = v294;
  *(_QWORD *)&__src[8] = v273;
  *(_QWORD *)&__src[9] = v272;
  *(_QWORD *)&__src[10] = v271;
  *(_QWORD *)&__src[11] = v329;
  *(_QWORD *)&__src[12] = v270;
  *(_QWORD *)&__src[13] = v269;
  *(_QWORD *)&__src[14] = v268;
  *(_QWORD *)&__src[15] = v267;
  *(_QWORD *)&__src[16] = v266;
  *(_QWORD *)&__src[17] = v265;
  *(_QWORD *)&__src[18] = v264;
  *(_QWORD *)&__src[19] = v263;
  *(_QWORD *)&__src[20] = v262;
  *(_QWORD *)&__src[21] = v261;
  *((_QWORD *)&__src[21] + 1) = v371;
  *((_QWORD *)&__src[0] + 1) = v383;
  __src[1] = 0u;
  *((_QWORD *)&__src[2] + 1) = v390;
  __src[3] = 0u;
  *((_QWORD *)&__src[4] + 1) = v353;
  *((_QWORD *)&__src[5] + 1) = v245;
  *((_QWORD *)&__src[6] + 1) = v243;
  *((_QWORD *)&__src[7] + 1) = v297;
  *((_QWORD *)&__src[8] + 1) = v386;
  *((_QWORD *)&__src[9] + 1) = v388;
  *((_QWORD *)&__src[10] + 1) = v344;
  *((_QWORD *)&__src[11] + 1) = v382;
  *((_QWORD *)&__src[12] + 1) = v381;
  *((_QWORD *)&__src[13] + 1) = v378;
  *((_QWORD *)&__src[14] + 1) = v352;
  *((_QWORD *)&__src[15] + 1) = v377;
  *((_QWORD *)&__src[16] + 1) = v376;
  *((_QWORD *)&__src[17] + 1) = v375;
  *((_QWORD *)&__src[18] + 1) = v374;
  *((_QWORD *)&__src[19] + 1) = v373;
  *((_QWORD *)&__src[20] + 1) = v372;
  *(_QWORD *)&__src[22] = v260;
  *((_QWORD *)&__src[22] + 1) = v343;
  __src[23] = v291;
  *(_QWORD *)&__src[24] = v256;
  *((_QWORD *)&__src[24] + 1) = v289;
  __src[25] = v288;
  *(_QWORD *)&__src[26] = v258;
  *((_QWORD *)&__src[26] + 1) = v359;
  *(_QWORD *)&__src[27] = v244;
  *((_QWORD *)&__src[27] + 1) = v358;
  *(_QWORD *)&__src[28] = v257;
  *((_QWORD *)&__src[28] + 1) = v357;
  *(_QWORD *)&__src[29] = v255;
  *((_QWORD *)&__src[29] + 1) = v356;
  *(_QWORD *)&__src[30] = v254;
  *((_QWORD *)&__src[30] + 1) = v354;
  *(_QWORD *)&__src[31] = v337;
  *((_QWORD *)&__src[31] + 1) = v347;
  *(_QWORD *)&__src[32] = v336;
  *((_QWORD *)&__src[32] + 1) = v342;
  *(_QWORD *)&__src[33] = v335;
  *((_QWORD *)&__src[33] + 1) = v341;
  *(_QWORD *)&__src[34] = v295;
  *((_QWORD *)&__src[34] + 1) = v370;
  *(_QWORD *)&__src[35] = v334;
  *((_QWORD *)&__src[35] + 1) = v340;
  *(_QWORD *)&__src[36] = v333;
  *((_QWORD *)&__src[36] + 1) = v339;
  *(_QWORD *)&__src[37] = v332;
  *((_QWORD *)&__src[37] + 1) = v346;
  *(_QWORD *)&__src[38] = v331;
  *((_QWORD *)&__src[38] + 1) = v338;
  __src[39] = 0u;
  *(_QWORD *)&__src[40] = v327;
  *((_QWORD *)&__src[40] + 1) = v330;
  *(_QWORD *)&__src[41] = v312;
  *((_QWORD *)&__src[41] + 1) = v328;
  *(_QWORD *)&__src[42] = v311;
  *((_QWORD *)&__src[42] + 1) = v326;
  *(_QWORD *)&__src[43] = v310;
  *((_QWORD *)&__src[43] + 1) = v325;
  *(_QWORD *)&__src[44] = v309;
  *((_QWORD *)&__src[44] + 1) = v324;
  *(_QWORD *)&__src[45] = v308;
  *((_QWORD *)&__src[45] + 1) = v323;
  *(_QWORD *)&__src[46] = v307;
  *((_QWORD *)&__src[46] + 1) = v322;
  *(_QWORD *)&__src[47] = v306;
  *((_QWORD *)&__src[47] + 1) = v321;
  *(_QWORD *)&__src[48] = v305;
  *((_QWORD *)&__src[48] + 1) = v316;
  *(_QWORD *)&__src[49] = v302;
  *((_QWORD *)&__src[49] + 1) = v320;
  *(_QWORD *)&__src[50] = v304;
  *((_QWORD *)&__src[50] + 1) = v315;
  *(_QWORD *)&__src[51] = v301;
  *((_QWORD *)&__src[51] + 1) = v319;
  *(_QWORD *)&__src[52] = v303;
  *((_QWORD *)&__src[52] + 1) = v318;
  *(_QWORD *)&__src[53] = v300;
  *((_QWORD *)&__src[53] + 1) = v317;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CFA6ECCC((uint64_t)__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA6EFF0((uint64_t)__src);
  memcpy(__dst, __src, 0x360uLL);
}

uint64_t PDF417ParsedData.docType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.docType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PDF417ParsedData.docType.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.issuer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.issuer.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.aamvaVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.aamvaVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.aamvaVersion.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionVersion.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.vehicleClass.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.vehicleClass.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.vehicleClass.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.restrictionCodes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.restrictionCodes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.restrictionCodes.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.endorsementCodes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.endorsementCodes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.endorsementCodes.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.middleName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.middleName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.middleName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.gender.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.gender.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.gender.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.eyeColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.eyeColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.eyeColor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.height.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.height.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.height.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.street1.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.street1.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.street1.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.city.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.city.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.city.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 240) = a1;
  *(_QWORD *)(v2 + 248) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.state.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.postalCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.postalCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 256) = a1;
  *(_QWORD *)(v2 + 264) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.idNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.idNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 272) = a1;
  *(_QWORD *)(v2 + 280) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.idNumber.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.documentDiscriminator.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.documentDiscriminator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 288) = a1;
  *(_QWORD *)(v2 + 296) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.documentDiscriminator.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.country.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.country.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 304) = a1;
  *(_QWORD *)(v2 + 312) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.country.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastNameTruncation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 320) = a1;
  *(_QWORD *)(v2 + 328) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstNameTruncation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 336);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 336) = a1;
  *(_QWORD *)(v2 + 344) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.middleNameTruncation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 352);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.middleNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 352) = a1;
  *(_QWORD *)(v2 + 360) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.middleNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.expirationDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.expirationDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 368) = a1;
  *(_QWORD *)(v2 + 376) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.expirationDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.issueDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 384);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.issueDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 384) = a1;
  *(_QWORD *)(v2 + 392) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.issueDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.dob.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 400);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.dob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 400) = a1;
  *(_QWORD *)(v2 + 408) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.dob.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.street2.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 416);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.street2.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 416) = a1;
  *(_QWORD *)(v2 + 424) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.street2.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.hairColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 432);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.hairColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 432) = a1;
  *(_QWORD *)(v2 + 440) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.hairColor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.placeOfBirth.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 448);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.placeOfBirth.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 448) = a1;
  *(_QWORD *)(v2 + 456) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.placeOfBirth.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.auditInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.auditInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 464) = a1;
  *(_QWORD *)(v2 + 472) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.auditInfo.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.inventoryControlNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 480);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.inventoryControlNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 480) = a1;
  *(_QWORD *)(v2 + 488) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.inventoryControlNumber.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastNameAlias.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 496);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 504) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstNameAlias.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 512);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 512) = a1;
  *(_QWORD *)(v2 + 520) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.suffixNameAlias.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 528);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.suffixNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 528) = a1;
  *(_QWORD *)(v2 + 536) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.suffixNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.suffix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 544);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.suffix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 544) = a1;
  *(_QWORD *)(v2 + 552) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.suffix.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightRange.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 560);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightRange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 560) = a1;
  *(_QWORD *)(v2 + 568) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightRange.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.ethnicity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 576);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.ethnicity.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 576) = a1;
  *(_QWORD *)(v2 + 584) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.ethnicity.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardVehicleClassification.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 592);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardVehicleClassification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 592) = a1;
  *(_QWORD *)(v2 + 600) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardVehicleClassification.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardEndorsementCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 608);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardEndorsementCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 608) = a1;
  *(_QWORD *)(v2 + 616) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardEndorsementCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardRestrictionCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 624);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardRestrictionCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 624) = a1;
  *(_QWORD *)(v2 + 632) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardRestrictionCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionVehicleClassification.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 640);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionVehicleClassification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 640) = a1;
  *(_QWORD *)(v2 + 648) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionVehicleClassification.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionEndorsementCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 656);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionEndorsementCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 656) = a1;
  *(_QWORD *)(v2 + 664) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionEndorsementCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionRestrictionCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 672);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionRestrictionCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 672) = a1;
  *(_QWORD *)(v2 + 680) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionRestrictionCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.complianceType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 688);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.complianceType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 688) = a1;
  *(_QWORD *)(v2 + 696) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.complianceType.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.limitedDurationDocument.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 704);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.limitedDurationDocument.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 704) = a1;
  *(_QWORD *)(v2 + 712) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.limitedDurationDocument.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightPounds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 720);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightPounds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 720) = a1;
  *(_QWORD *)(v2 + 728) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightPounds.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightKilograms.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 736);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightKilograms.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 736) = a1;
  *(_QWORD *)(v2 + 744) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightKilograms.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.organDonor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 752);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.organDonor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 752) = a1;
  *(_QWORD *)(v2 + 760) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.organDonor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.veteran.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 768);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.veteran.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 768) = a1;
  *(_QWORD *)(v2 + 776) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.veteran.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.cardRevisionDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 784);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.cardRevisionDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 784) = a1;
  *(_QWORD *)(v2 + 792) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.cardRevisionDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.hazmatEndorsementExpirationDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 800);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.hazmatEndorsementExpirationDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 800) = a1;
  *(_QWORD *)(v2 + 808) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.hazmatEndorsementExpirationDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under18Until.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 816);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under18Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 816) = a1;
  *(_QWORD *)(v2 + 824) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under18Until.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under19Until.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 832);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under19Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 832) = a1;
  *(_QWORD *)(v2 + 840) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under19Until.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under21Until.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 848);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under21Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 848) = a1;
  *(_QWORD *)(v2 + 856) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under21Until.modify())()
{
  return nullsub_1;
}

uint64_t sub_1CFA65C90(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = sub_1CFB012CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return a1;
  swift_bridgeObjectRetain();
  if (sub_1CFB01AF4() != 8)
  {
    if (qword_1ED9054E8 == -1)
    {
LABEL_8:
      v59 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v14, v59, v4);
      v60 = sub_1CFB012B4();
      v61 = sub_1CFB01FD4();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v62 = 0;
        _os_log_impl(&dword_1CF917000, v60, v61, "Unable to convert date, did not contain the correct number of characters", v62, 2u);
        MEMORY[0x1D17DA6E4](v62, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v5 + 8))(v14, v4);
      return a1;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  v67 = a1;
  v68 = a2;
  v14 = (char *)sub_1CF9B9CD8();
  swift_bridgeObjectRetain();
  v5 = sub_1CFB01AE8();
  v67 = a1;
  v68 = a2;
  swift_bridgeObjectRetain();
  v15 = sub_1CFB01AE8();
  v67 = a1;
  v68 = a2;
  swift_bridgeObjectRetain();
  v16 = sub_1CFB01AE8();
  v67 = a1;
  v68 = a2;
  swift_bridgeObjectRetain();
  v17 = sub_1CFB01AE8();
  v4 = v16 >> 14;
  v18 = v15 >> 14;
  if (v16 >> 14 < v15 >> 14)
  {
    __break(1u);
    goto LABEL_13;
  }
  v19 = v17;
  v63 = v15;
  v64 = v5;
  v20 = sub_1CFB01BC0();
  if (v4 > v19 >> 14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v24 = v20;
  v25 = v21;
  v26 = v22;
  v27 = v23;
  v67 = sub_1CFB01BC0();
  v68 = v28;
  v69 = v29;
  v70 = v30;
  swift_bridgeObjectRetain();
  v31 = MEMORY[0x1D17D8818](v24, v25, v26, v27);
  v33 = v32;
  swift_bridgeObjectRelease();
  v65 = v31;
  v66 = v33;
  sub_1CF9D0000();
  sub_1CFB01B18();
  v34 = MEMORY[0x1D17D8EFC](v65, v66);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v64;
  if (v18 >= v64 >> 14)
  {
    v42 = sub_1CFB01BC0();
    v44 = v43;
    v46 = v45;
    v48 = v47;
    swift_bridgeObjectRelease();
    v67 = v42;
    v68 = v44;
    v69 = v46;
    v70 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = MEMORY[0x1D17D8818](v34, v36, v38, v40);
    v51 = v50;
    swift_bridgeObjectRelease();
    v65 = v49;
    v66 = v51;
    sub_1CFB01B18();
    v52 = MEMORY[0x1D17D8EFC](v65, v66);
    v54 = v53;
    v56 = v55;
    v58 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    a1 = MEMORY[0x1D17D8818](v52, v54, v56, v58);
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

unint64_t *PDF417ParsedData.getBindings()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[16];
  v4 = v0[17];
  v5 = v0[18];
  v6 = v0[19];
  v66 = v0[26];
  v65 = v0[27];
  v67 = v0[29];
  v68 = v0[28];
  v69 = v0[31];
  v70 = v0[30];
  v71 = v0[33];
  v72 = v0[32];
  v7 = v0[40];
  v73 = v0[39];
  v74 = v0[38];
  v8 = v0[41];
  v54 = v0[42];
  v55 = v0[44];
  v75 = v0[45];
  v76 = v0[43];
  v64 = v0[52];
  v63 = v0[53];
  v56 = v0[63];
  v57 = v0[62];
  v58 = v0[65];
  v59 = v0[64];
  v60 = v0[67];
  v61 = v0[66];
  v62 = v0[68];
  v9 = v0[69];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904B10);
  inited = swift_initStackObject();
  v11 = inited;
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x80000001CFB27B50;
  if (v2)
    v12 = v1;
  else
    v12 = 0;
  if (v2)
    v13 = v2;
  else
    v13 = 0xE000000000000000;
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v13;
  *(_QWORD *)(inited + 64) = 0xD000000000000012;
  *(_QWORD *)(inited + 72) = 0x80000001CFB27B30;
  if (v4)
    v14 = v3;
  else
    v14 = 0;
  if (v4)
    v15 = v4;
  else
    v15 = 0xE000000000000000;
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 88) = v15;
  *(_QWORD *)(inited + 104) = 0x80000001CFB2EEA0;
  if (v6)
    v16 = v5;
  else
    v16 = 0;
  if (v6)
    v17 = v6;
  else
    v17 = 0xE000000000000000;
  *(_QWORD *)(inited + 112) = v16;
  *(_QWORD *)(inited + 120) = v17;
  *(_QWORD *)(inited + 128) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 136) = 0x80000001CFB2EEC0;
  if (v8)
    v18 = v7;
  else
    v18 = 0;
  if (v8)
    v19 = v8;
  else
    v19 = 0xE000000000000000;
  *(_QWORD *)(inited + 144) = v18;
  *(_QWORD *)(inited + 152) = v19;
  *(_QWORD *)(inited + 160) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 168) = 0x80000001CFB2EEE0;
  v20 = v76;
  v21 = v54;
  if (!v76)
  {
    v21 = 0;
    v20 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 176) = v21;
  *(_QWORD *)(inited + 184) = v20;
  *(_QWORD *)(inited + 192) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 200) = 0x80000001CFB2EF00;
  v22 = v75;
  v23 = v55;
  if (!v75)
  {
    v23 = 0;
    v22 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 208) = v23;
  *(_QWORD *)(inited + 216) = v22;
  *(_QWORD *)(inited + 224) = 0xD000000000000016;
  *(_QWORD *)(inited + 232) = 0x80000001CFB2EF20;
  v24 = v57;
  if (v56)
  {
    v25 = v56;
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 240) = v24;
  *(_QWORD *)(inited + 248) = v25;
  *(_QWORD *)(inited + 256) = 0xD000000000000017;
  *(_QWORD *)(inited + 264) = 0x80000001CFB2EF40;
  v26 = v59;
  if (v58)
  {
    v27 = v58;
  }
  else
  {
    v26 = 0;
    v27 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 272) = v26;
  *(_QWORD *)(inited + 280) = v27;
  *(_QWORD *)(inited + 288) = 0xD000000000000018;
  *(_QWORD *)(inited + 296) = 0x80000001CFB2EF60;
  v28 = v61;
  if (v60)
  {
    v29 = v60;
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 304) = v28;
  *(_QWORD *)(inited + 312) = v29;
  *(_QWORD *)(inited + 328) = 0xEF7869666675732ELL;
  v30 = v62;
  if (v9)
  {
    v31 = v9;
  }
  else
  {
    v30 = 0;
    v31 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 336) = v30;
  *(_QWORD *)(inited + 344) = v31;
  *(_QWORD *)(inited + 360) = 0x80000001CFB27B70;
  v32 = v66;
  if (v65)
  {
    v33 = v65;
  }
  else
  {
    v32 = 0;
    v33 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 368) = v32;
  *(_QWORD *)(inited + 376) = v33;
  *(_QWORD *)(inited + 392) = 0x80000001CFB27B90;
  v34 = v64;
  if (v63)
  {
    v35 = v63;
  }
  else
  {
    v34 = 0;
    v35 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 400) = v34;
  *(_QWORD *)(inited + 408) = v35;
  *(_QWORD *)(inited + 424) = 0xED0000797469632ELL;
  v36 = v68;
  if (v67)
  {
    v37 = v67;
  }
  else
  {
    v36 = 0;
    v37 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 432) = v36;
  *(_QWORD *)(inited + 440) = v37;
  *(_QWORD *)(inited + 320) = 0x746E656D75636F64;
  *(_QWORD *)(inited + 416) = 0x746E656D75636F64;
  strcpy((char *)(inited + 448), "document.state");
  *(_BYTE *)(inited + 463) = -18;
  v38 = v70;
  if (v69)
  {
    v39 = v69;
  }
  else
  {
    v38 = 0;
    v39 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 464) = v38;
  *(_QWORD *)(inited + 472) = v39;
  *(_QWORD *)(inited + 96) = 0xD000000000000013;
  *(_QWORD *)(inited + 480) = 0xD000000000000013;
  *(_QWORD *)(inited + 488) = 0x80000001CFB27BB0;
  v40 = v72;
  if (v71)
  {
    v41 = v71;
  }
  else
  {
    v40 = 0;
    v41 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 496) = v40;
  *(_QWORD *)(inited + 504) = v41;
  *(_QWORD *)(inited + 352) = 0xD000000000000010;
  *(_QWORD *)(inited + 384) = 0xD000000000000010;
  *(_QWORD *)(inited + 512) = 0xD000000000000010;
  *(_QWORD *)(inited + 520) = 0x80000001CFB27BD0;
  v42 = v74;
  if (!v73)
    v42 = 0;
  *(_QWORD *)(inited + 528) = v42;
  if (v73)
    v43 = v73;
  else
    v43 = 0xE000000000000000;
  *(_QWORD *)(inited + 536) = v43;
  *(_OWORD *)(inited + 16) = xmmword_1CFB1B240;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = sub_1CF9229AC(v11);
  v52 = sub_1CFA6F314(v44, v45, v46, v47, v48, v49, v50, v51);
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_1CFA66518(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA6654C + 4 * word_1CFB1B250[a1]))(0x65707954636F64, 0xE700000000000000);
}

uint64_t sub_1CFA6654C()
{
  return 0x726575737369;
}

uint64_t sub_1CFA66560()
{
  return 0x72655661766D6161;
}

unint64_t sub_1CFA66580()
{
  return 0xD000000000000013;
}

uint64_t sub_1CFA66A60()
{
  return 0x5538317265646E75;
}

uint64_t sub_1CFA66AA8()
{
  unsigned __int8 *v0;

  return sub_1CFA66518(*v0);
}

uint64_t sub_1CFA66AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFA70ECC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CFA66AD4(_BYTE *a1@<X8>)
{
  *a1 = 54;
}

uint64_t sub_1CFA66AE0()
{
  sub_1CFA6F464();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA66B08()
{
  sub_1CFA6F464();
  return sub_1CFB02B80();
}

uint64_t PDF417ParsedData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[105];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3E08);
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v28 = (char *)v1[1];
  v29 = v13;
  v14 = v1[2];
  v26[103] = v1[3];
  v26[104] = v14;
  v15 = v1[4];
  v26[101] = v1[5];
  v26[102] = v15;
  v16 = v1[6];
  v26[99] = v1[7];
  v26[100] = v16;
  v26[98] = v1[8];
  v17 = v1[9];
  v18 = v1[10];
  v26[95] = v1[11];
  v26[96] = v17;
  v26[93] = v1[12];
  v26[94] = v18;
  v19 = v1[13];
  v26[91] = v1[14];
  v26[92] = v19;
  v20 = v1[15];
  v26[88] = v1[16];
  v26[89] = v1[17];
  v26[90] = v20;
  v26[87] = v1[18];
  v26[86] = v1[19];
  v26[85] = v1[20];
  v26[84] = v1[21];
  v26[83] = v1[22];
  v26[82] = v1[23];
  v26[81] = v1[24];
  v26[80] = v1[25];
  v26[79] = v1[26];
  v26[78] = v1[27];
  v26[77] = v1[28];
  v26[76] = v1[29];
  v26[75] = v1[30];
  v26[74] = v1[31];
  v26[73] = v1[32];
  v26[72] = v1[33];
  v26[3] = v1[34];
  v26[2] = v1[35];
  v26[5] = v1[36];
  v26[4] = v1[37];
  v26[7] = v1[38];
  v26[6] = v1[39];
  v26[9] = v1[40];
  v26[8] = v1[41];
  v26[11] = v1[42];
  v26[10] = v1[43];
  v26[13] = v1[44];
  v26[12] = v1[45];
  v26[15] = v1[46];
  v26[14] = v1[47];
  v26[17] = v1[48];
  v26[16] = v1[49];
  v26[19] = v1[50];
  v26[18] = v1[51];
  v26[21] = v1[52];
  v26[20] = v1[53];
  v26[23] = v1[54];
  v26[22] = v1[55];
  v26[25] = v1[56];
  v26[24] = v1[57];
  v26[26] = v1[58];
  v26[27] = v1[59];
  v26[28] = v1[60];
  v26[29] = v1[61];
  v26[30] = v1[62];
  v26[31] = v1[63];
  v26[32] = v1[64];
  v26[33] = v1[65];
  v26[34] = v1[66];
  v26[35] = v1[67];
  v26[36] = v1[68];
  v26[37] = v1[69];
  v26[38] = v1[70];
  v26[39] = v1[71];
  v26[40] = v1[72];
  v26[41] = v1[73];
  v26[42] = v1[74];
  v26[43] = v1[75];
  v26[44] = v1[76];
  v26[45] = v1[77];
  v26[46] = v1[78];
  v26[47] = v1[79];
  v26[48] = v1[80];
  v26[49] = v1[81];
  v26[50] = v1[82];
  v26[51] = v1[83];
  v26[52] = v1[84];
  v26[53] = v1[85];
  v26[54] = v1[86];
  v26[55] = v1[87];
  v26[56] = v1[88];
  v26[57] = v1[89];
  v26[58] = v1[90];
  v26[59] = v1[91];
  v26[60] = v1[92];
  v26[61] = v1[93];
  v26[62] = v1[94];
  v26[63] = v1[95];
  v26[64] = v1[96];
  v26[65] = v1[97];
  v26[66] = v1[98];
  v26[67] = v1[99];
  v26[68] = v1[100];
  v26[69] = v1[101];
  v26[70] = v1[102];
  v26[71] = v1[103];
  v26[97] = v1[104];
  v21 = v1[105];
  v22 = v1[107];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA6F464();
  sub_1CFB02B5C();
  v31 = 0;
  v28 = v12;
  v29 = v3;
  v23 = v30;
  sub_1CFB02790();
  v30 = v23;
  if (v23)
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v26[1] = v21;
  v26[0] = v22;
  v25 = v27;
  v31 = 1;
  sub_1CFB02754();
  v31 = 2;
  sub_1CFB02754();
  v31 = 3;
  sub_1CFB02754();
  v31 = 4;
  sub_1CFB02754();
  v31 = 5;
  sub_1CFB02754();
  v31 = 6;
  sub_1CFB02754();
  v31 = 7;
  sub_1CFB02754();
  v31 = 8;
  sub_1CFB02754();
  v30 = 0;
  v31 = 9;
  sub_1CFB02754();
  v30 = 0;
  v31 = 10;
  sub_1CFB02754();
  v30 = 0;
  v31 = 11;
  sub_1CFB02754();
  v30 = 0;
  v31 = 12;
  sub_1CFB02754();
  v30 = 0;
  v31 = 13;
  sub_1CFB02754();
  v30 = 0;
  v31 = 14;
  sub_1CFB02754();
  v30 = 0;
  v31 = 15;
  sub_1CFB02754();
  v30 = 0;
  v31 = 16;
  sub_1CFB02754();
  v30 = 0;
  v31 = 17;
  sub_1CFB02754();
  v30 = 0;
  v31 = 18;
  sub_1CFB02754();
  v30 = 0;
  v31 = 19;
  sub_1CFB02754();
  v30 = 0;
  v31 = 20;
  sub_1CFB02754();
  v30 = 0;
  v31 = 21;
  sub_1CFB02754();
  v30 = 0;
  v31 = 22;
  sub_1CFB02754();
  v30 = 0;
  v31 = 23;
  sub_1CFB02754();
  v30 = 0;
  v31 = 24;
  sub_1CFB02754();
  v30 = 0;
  v31 = 25;
  sub_1CFB02754();
  v30 = 0;
  v31 = 26;
  sub_1CFB02754();
  v30 = 0;
  v31 = 27;
  sub_1CFB02754();
  v30 = 0;
  v31 = 28;
  sub_1CFB02754();
  v30 = 0;
  v31 = 29;
  sub_1CFB02754();
  v30 = 0;
  v31 = 30;
  sub_1CFB02754();
  v30 = 0;
  v31 = 31;
  sub_1CFB02754();
  v30 = 0;
  v31 = 32;
  sub_1CFB02754();
  v30 = 0;
  v31 = 33;
  sub_1CFB02754();
  v30 = 0;
  v31 = 34;
  sub_1CFB02754();
  v30 = 0;
  v31 = 35;
  sub_1CFB02754();
  v30 = 0;
  v31 = 36;
  sub_1CFB02754();
  v30 = 0;
  v31 = 37;
  sub_1CFB02754();
  v30 = 0;
  v31 = 38;
  sub_1CFB02754();
  v30 = 0;
  v31 = 39;
  sub_1CFB02754();
  v30 = 0;
  v31 = 40;
  sub_1CFB02754();
  v30 = 0;
  v31 = 41;
  sub_1CFB02754();
  v30 = 0;
  v31 = 42;
  sub_1CFB02754();
  v30 = 0;
  v31 = 43;
  sub_1CFB02754();
  v30 = 0;
  v31 = 44;
  sub_1CFB02754();
  v30 = 0;
  v31 = 45;
  sub_1CFB02754();
  v30 = 0;
  v31 = 46;
  sub_1CFB02754();
  v30 = 0;
  v31 = 47;
  sub_1CFB02754();
  v30 = 0;
  v31 = 48;
  sub_1CFB02754();
  v30 = 0;
  v31 = 49;
  sub_1CFB02754();
  v30 = 0;
  v31 = 50;
  sub_1CFB02754();
  v30 = 0;
  v31 = 51;
  sub_1CFB02754();
  v30 = 0;
  v31 = 52;
  sub_1CFB02754();
  v30 = 0;
  v31 = 53;
  sub_1CFB02754();
  v30 = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v29);
}

uint64_t PDF417ParsedData.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD v254[108];
  _QWORD v255[109];
  char v256;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3E18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v245 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1CFA6F464();
  sub_1CFB02B2C();
  v253 = v2;
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    v250 = 0;
    v251 = 0;
    v252 = 0;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v255[0]) = 0;
  v18 = sub_1CFB026E8();
  v20 = v19;
  LOBYTE(v255[0]) = 1;
  swift_bridgeObjectRetain();
  v21 = sub_1CFB026AC();
  v23 = v22;
  v201 = v21;
  v202 = v18;
  LOBYTE(v255[0]) = 2;
  swift_bridgeObjectRetain();
  v24 = sub_1CFB026AC();
  v207 = v23;
  v26 = v25;
  v200 = v24;
  LOBYTE(v255[0]) = 3;
  swift_bridgeObjectRetain();
  v27 = sub_1CFB026AC();
  v206 = v26;
  v29 = v28;
  v199 = v27;
  LOBYTE(v255[0]) = 4;
  swift_bridgeObjectRetain();
  v30 = sub_1CFB026AC();
  v205 = v29;
  v32 = v31;
  v198 = v30;
  LOBYTE(v255[0]) = 5;
  swift_bridgeObjectRetain();
  v33 = sub_1CFB026AC();
  v35 = v34;
  v197 = v33;
  LOBYTE(v255[0]) = 6;
  swift_bridgeObjectRetain();
  v195 = sub_1CFB026AC();
  v196 = v35;
  LOBYTE(v255[0]) = 7;
  v37 = v36;
  swift_bridgeObjectRetain();
  v38 = sub_1CFB026AC();
  v253 = 0;
  v193 = v38;
  v194 = v37;
  LOBYTE(v255[0]) = 8;
  v40 = v39;
  swift_bridgeObjectRetain();
  v41 = v253;
  v192 = sub_1CFB026AC();
  v253 = v41;
  v204 = v40;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    v250 = 0;
    v251 = 0;
    v252 = 0;
    v203 = 0;
LABEL_97:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v191 = v20;
  LOBYTE(v255[0]) = 9;
  v203 = v42;
  swift_bridgeObjectRetain();
  v43 = v253;
  v44 = sub_1CFB026AC();
  v252 = v45;
  v253 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    v250 = 0;
    v251 = 0;
    v252 = 0;
    goto LABEL_97;
  }
  v46 = v44;
  LOBYTE(v255[0]) = 10;
  swift_bridgeObjectRetain();
  v47 = v253;
  v190 = sub_1CFB026AC();
  v251 = v48;
  v253 = v47;
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    v250 = 0;
    v251 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 11;
  swift_bridgeObjectRetain();
  v49 = v253;
  v189 = sub_1CFB026AC();
  v250 = v50;
  v253 = v49;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    v250 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 12;
  swift_bridgeObjectRetain();
  v51 = v253;
  v188 = sub_1CFB026AC();
  v249 = v52;
  v253 = v51;
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    v249 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 13;
  swift_bridgeObjectRetain();
  v53 = v253;
  v187 = sub_1CFB026AC();
  v248 = v54;
  v253 = v53;
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    v248 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 14;
  swift_bridgeObjectRetain();
  v55 = v253;
  v186 = sub_1CFB026AC();
  v247 = v56;
  v253 = v55;
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    v247 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 15;
  swift_bridgeObjectRetain();
  v57 = v253;
  v185 = sub_1CFB026AC();
  v246 = v58;
  v253 = v57;
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    v246 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 16;
  swift_bridgeObjectRetain();
  v59 = v253;
  v184 = sub_1CFB026AC();
  v244 = v60;
  v253 = v59;
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    v244 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 17;
  swift_bridgeObjectRetain();
  v61 = v253;
  v183 = sub_1CFB026AC();
  v243 = v62;
  v253 = v61;
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    v243 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 18;
  swift_bridgeObjectRetain();
  v63 = v253;
  v182 = sub_1CFB026AC();
  v242 = v64;
  v253 = v63;
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    v242 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 19;
  swift_bridgeObjectRetain();
  v65 = v253;
  v181 = sub_1CFB026AC();
  v241 = v66;
  v253 = v65;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    v241 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 20;
  swift_bridgeObjectRetain();
  v67 = v253;
  v180 = sub_1CFB026AC();
  v240 = v68;
  v253 = v67;
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    v240 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 21;
  swift_bridgeObjectRetain();
  v69 = v253;
  v179 = sub_1CFB026AC();
  v239 = v70;
  v253 = v69;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    v239 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 22;
  swift_bridgeObjectRetain();
  v71 = v253;
  v178 = sub_1CFB026AC();
  v238 = v72;
  v253 = v71;
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    v238 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 23;
  swift_bridgeObjectRetain();
  v73 = v253;
  v177 = sub_1CFB026AC();
  v237 = v74;
  v253 = v73;
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    v237 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 24;
  swift_bridgeObjectRetain();
  v75 = v253;
  v176 = sub_1CFB026AC();
  v236 = v76;
  v253 = v75;
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    v236 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 25;
  swift_bridgeObjectRetain();
  v77 = v253;
  v175 = sub_1CFB026AC();
  v235 = v78;
  v253 = v77;
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    v235 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 26;
  swift_bridgeObjectRetain();
  v79 = v253;
  v174 = sub_1CFB026AC();
  v234 = v80;
  v253 = v79;
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    v234 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 27;
  swift_bridgeObjectRetain();
  v81 = v253;
  v173 = sub_1CFB026AC();
  v233 = v82;
  v253 = v81;
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    v233 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 28;
  swift_bridgeObjectRetain();
  v83 = v253;
  v172 = sub_1CFB026AC();
  v232 = v84;
  v253 = v83;
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    v232 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 29;
  swift_bridgeObjectRetain();
  v85 = v253;
  v171 = sub_1CFB026AC();
  v231 = v86;
  v253 = v85;
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    v231 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 30;
  swift_bridgeObjectRetain();
  v87 = v253;
  v170 = sub_1CFB026AC();
  v230 = v88;
  v253 = v87;
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    v230 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 31;
  swift_bridgeObjectRetain();
  v89 = v253;
  v169 = sub_1CFB026AC();
  v229 = v90;
  v253 = v89;
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    v229 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 32;
  swift_bridgeObjectRetain();
  v91 = v253;
  v168 = sub_1CFB026AC();
  v228 = v92;
  v253 = v91;
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    v228 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 33;
  swift_bridgeObjectRetain();
  v93 = v253;
  v167 = sub_1CFB026AC();
  v227 = v94;
  v253 = v93;
  if (v93)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    v227 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 34;
  swift_bridgeObjectRetain();
  v95 = v253;
  v166 = sub_1CFB026AC();
  v226 = v96;
  v253 = v95;
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    v226 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 35;
  swift_bridgeObjectRetain();
  v97 = v253;
  v165 = sub_1CFB026AC();
  v225 = v98;
  v253 = v97;
  if (v97)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    v225 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 36;
  swift_bridgeObjectRetain();
  v99 = v253;
  v164 = sub_1CFB026AC();
  v224 = v100;
  v253 = v99;
  if (v99)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    v224 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 37;
  swift_bridgeObjectRetain();
  v101 = v253;
  v163 = sub_1CFB026AC();
  v223 = v102;
  v253 = v101;
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    v223 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 38;
  swift_bridgeObjectRetain();
  v103 = v253;
  v162 = sub_1CFB026AC();
  v222 = v104;
  v253 = v103;
  if (v103)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    v222 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 39;
  swift_bridgeObjectRetain();
  v105 = v253;
  v161 = sub_1CFB026AC();
  v221 = v106;
  v253 = v105;
  if (v105)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    v221 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 40;
  swift_bridgeObjectRetain();
  v107 = v253;
  v160 = sub_1CFB026AC();
  v220 = v108;
  v253 = v107;
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    v220 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 41;
  swift_bridgeObjectRetain();
  v109 = v253;
  v159 = sub_1CFB026AC();
  v219 = v110;
  v253 = v109;
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    v219 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 42;
  swift_bridgeObjectRetain();
  v111 = v253;
  v158 = sub_1CFB026AC();
  v218 = v112;
  v253 = v111;
  if (v111)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    v218 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 43;
  swift_bridgeObjectRetain();
  v113 = v253;
  v157 = sub_1CFB026AC();
  v217 = v114;
  v253 = v113;
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    v217 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 44;
  swift_bridgeObjectRetain();
  v115 = v253;
  v156 = sub_1CFB026AC();
  v216 = v116;
  v253 = v115;
  if (v115)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    v216 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 45;
  swift_bridgeObjectRetain();
  v117 = v253;
  v155 = sub_1CFB026AC();
  v215 = v118;
  v253 = v117;
  if (v117)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v215 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 46;
  swift_bridgeObjectRetain();
  v119 = v253;
  v154 = sub_1CFB026AC();
  v214 = v120;
  v253 = v119;
  if (v119)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 47;
  swift_bridgeObjectRetain();
  v121 = v253;
  v153 = sub_1CFB026AC();
  v213 = v122;
  v253 = v121;
  if (v121)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    v213 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 48;
  swift_bridgeObjectRetain();
  v123 = v253;
  v152 = sub_1CFB026AC();
  v212 = v124;
  v253 = v123;
  if (v123)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    v212 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 49;
  swift_bridgeObjectRetain();
  v125 = v253;
  v151 = sub_1CFB026AC();
  v211 = v126;
  v253 = v125;
  if (v125)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    v211 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 50;
  swift_bridgeObjectRetain();
  v127 = v253;
  v150 = sub_1CFB026AC();
  v210 = v128;
  v253 = v127;
  if (v127)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    v210 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 51;
  swift_bridgeObjectRetain();
  v129 = v253;
  v149 = sub_1CFB026AC();
  v209 = v130;
  v253 = v129;
  if (v129)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    v209 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 52;
  swift_bridgeObjectRetain();
  v131 = v253;
  v148 = sub_1CFB026AC();
  v208 = v132;
  v253 = v131;
  if (v131)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v208 = 0;
    goto LABEL_97;
  }
  v256 = 53;
  swift_bridgeObjectRetain();
  v133 = v253;
  v147 = sub_1CFB026AC();
  v253 = v133;
  if (v133)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_97;
  }
  v135 = v134;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v144 = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v254[0] = v202;
  v254[1] = v191;
  v254[2] = v201;
  v254[3] = v207;
  v254[4] = v200;
  v254[5] = v206;
  v254[6] = v199;
  v254[7] = v205;
  v254[8] = v198;
  v254[9] = v32;
  v145 = v32;
  v146 = v46;
  v254[10] = v197;
  v254[11] = v196;
  v254[12] = v195;
  v254[13] = v194;
  v254[14] = v193;
  v254[15] = v204;
  v254[16] = v192;
  v254[17] = v203;
  v254[18] = v46;
  v254[19] = v252;
  v254[20] = v190;
  v254[21] = v251;
  v254[22] = v189;
  v254[23] = v250;
  v254[24] = v188;
  v254[25] = v249;
  v254[26] = v187;
  v254[27] = v248;
  v254[28] = v186;
  v254[29] = v247;
  v254[30] = v185;
  v254[31] = v246;
  v254[32] = v184;
  v254[33] = v244;
  v254[34] = v183;
  v254[35] = v243;
  v254[36] = v182;
  v254[37] = v242;
  v254[38] = v181;
  v254[39] = v241;
  v254[40] = v180;
  v254[41] = v240;
  v254[42] = v179;
  v254[43] = v239;
  v254[44] = v178;
  v254[45] = v238;
  v254[46] = v177;
  v254[47] = v237;
  v254[48] = v176;
  v254[49] = v236;
  v254[50] = v175;
  v254[51] = v235;
  v254[52] = v174;
  v254[53] = v234;
  v254[54] = v173;
  v254[55] = v233;
  v254[56] = v172;
  v254[57] = v232;
  v254[58] = v171;
  v254[59] = v231;
  v254[60] = v170;
  v254[61] = v230;
  v254[62] = v169;
  v254[63] = v229;
  v254[64] = v168;
  v254[65] = v228;
  v254[66] = v167;
  v254[67] = v227;
  v254[68] = v166;
  v254[69] = v226;
  v254[70] = v165;
  v254[71] = v225;
  v254[72] = v164;
  v254[73] = v224;
  v254[74] = v163;
  v254[75] = v223;
  v254[76] = v162;
  v254[77] = v222;
  v254[78] = v161;
  v254[79] = v221;
  v254[80] = v160;
  v254[81] = v220;
  v254[82] = v159;
  v254[83] = v219;
  v254[84] = v158;
  v254[85] = v218;
  v254[86] = v157;
  v254[87] = v217;
  v254[88] = v156;
  v254[89] = v216;
  v254[90] = v155;
  v254[91] = v215;
  v254[92] = v154;
  v254[93] = v214;
  v254[94] = v153;
  v254[95] = v213;
  v254[96] = v152;
  v254[97] = v212;
  v254[98] = v151;
  v254[99] = v211;
  v254[100] = v150;
  v254[101] = v210;
  v254[102] = v149;
  v254[103] = v209;
  v254[104] = v148;
  v254[105] = v208;
  v254[106] = v147;
  v254[107] = v135;
  sub_1CFA6ECCC((uint64_t)v254);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v136 = v246;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v137 = v212;
  swift_bridgeObjectRelease();
  v138 = v211;
  swift_bridgeObjectRelease();
  v139 = v210;
  swift_bridgeObjectRelease();
  v140 = v209;
  swift_bridgeObjectRelease();
  v141 = v208;
  swift_bridgeObjectRelease();
  v142 = v144;
  swift_bridgeObjectRelease();
  memcpy(a2, v254, 0x360uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
  v255[0] = v202;
  v255[1] = v191;
  v255[2] = v201;
  v255[3] = v207;
  v255[4] = v200;
  v255[5] = v206;
  v255[6] = v199;
  v255[7] = v205;
  v255[8] = v198;
  v255[9] = v145;
  v255[10] = v197;
  v255[11] = v196;
  v255[12] = v195;
  v255[13] = v194;
  v255[14] = v193;
  v255[15] = v204;
  v255[16] = v192;
  v255[17] = v203;
  v255[18] = v146;
  v255[19] = v252;
  v255[20] = v190;
  v255[21] = v251;
  v255[22] = v189;
  v255[23] = v250;
  v255[24] = v188;
  v255[25] = v249;
  v255[26] = v187;
  v255[27] = v248;
  v255[28] = v186;
  v255[29] = v247;
  v255[30] = v185;
  v255[31] = v136;
  v255[32] = v184;
  v255[33] = v244;
  v255[34] = v183;
  v255[35] = v243;
  v255[36] = v182;
  v255[37] = v242;
  v255[38] = v181;
  v255[39] = v241;
  v255[40] = v180;
  v255[41] = v240;
  v255[42] = v179;
  v255[43] = v239;
  v255[44] = v178;
  v255[45] = v238;
  v255[46] = v177;
  v255[47] = v237;
  v255[48] = v176;
  v255[49] = v236;
  v255[50] = v175;
  v255[51] = v235;
  v255[52] = v174;
  v255[53] = v234;
  v255[54] = v173;
  v255[55] = v233;
  v255[56] = v172;
  v255[57] = v232;
  v255[58] = v171;
  v255[59] = v231;
  v255[60] = v170;
  v255[61] = v230;
  v255[62] = v169;
  v255[63] = v229;
  v255[64] = v168;
  v255[65] = v228;
  v255[66] = v167;
  v255[67] = v227;
  v255[68] = v166;
  v255[69] = v226;
  v255[70] = v165;
  v255[71] = v225;
  v255[72] = v164;
  v255[73] = v224;
  v255[74] = v163;
  v255[75] = v223;
  v255[76] = v162;
  v255[77] = v222;
  v255[78] = v161;
  v255[79] = v221;
  v255[80] = v160;
  v255[81] = v220;
  v255[82] = v159;
  v255[83] = v219;
  v255[84] = v158;
  v255[85] = v218;
  v255[86] = v157;
  v255[87] = v217;
  v255[88] = v156;
  v255[89] = v216;
  v255[90] = v155;
  v255[91] = v215;
  v255[92] = v154;
  v255[93] = v214;
  v255[94] = v153;
  v255[95] = v213;
  v255[96] = v152;
  v255[97] = v137;
  v255[98] = v151;
  v255[99] = v138;
  v255[100] = v150;
  v255[101] = v139;
  v255[102] = v149;
  v255[103] = v140;
  v255[104] = v148;
  v255[105] = v141;
  v255[106] = v147;
  v255[107] = v142;
  return sub_1CFA6EFF0((uint64_t)v255);
}

uint64_t sub_1CFA6DA90@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return PDF417ParsedData.init(from:)(a1, a2);
}

uint64_t sub_1CFA6DAA4(_QWORD *a1)
{
  return PDF417ParsedData.encode(to:)(a1);
}

uint64_t PDF417ParsedData.debugDescription.getter()
{
  sub_1CFB02388();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1CFA6ECCC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFA6EFF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t *sub_1CFA6F314(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t *v9;
  char v10;
  unint64_t v11;
  size_t v12;
  unint64_t *v13;
  void *v14;
  _QWORD v16[2];

  v9 = (unint64_t *)isStackAllocationSafe;
  v16[1] = *MEMORY[0x1E0C80C00];
  v10 = *(_BYTE *)(isStackAllocationSafe + 32);
  v11 = (unint64_t)((1 << v10) + 63) >> 6;
  v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2, a3, a4, a5, a6, a7, a8);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    v13 = sub_1CFA70AB4((_QWORD *)((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0)), v11, (uint64_t)v9);
    if (v8)
      swift_willThrow();
    else
      return v13;
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    v9 = sub_1CFA70AB4((unint64_t *)v14, v11, (uint64_t)v9);
    MEMORY[0x1D17DA6E4](v14, -1, -1);
  }
  return v9;
}

unint64_t sub_1CFA6F464()
{
  unint64_t result;

  result = qword_1EFBC3E10;
  if (!qword_1EFBC3E10)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B4F4, &type metadata for PDF417ParsedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3E10);
  }
  return result;
}

uint64_t destroy for PDF417ParsedData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PDF417ParsedData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = a2[3];
  a1[2] = a2[2];
  v4 = a2[5];
  a1[4] = a2[4];
  v5 = a2[7];
  a1[6] = a2[6];
  v6 = a2[9];
  a1[8] = a2[8];
  v7 = a2[11];
  a1[10] = a2[10];
  v8 = a2[13];
  a1[12] = a2[12];
  v9 = a2[15];
  a1[14] = a2[14];
  v10 = a2[17];
  a1[16] = a2[16];
  v11 = a2[19];
  a1[18] = a2[18];
  v12 = a2[21];
  a1[20] = a2[20];
  v37 = a2[23];
  v38 = v12;
  a1[22] = a2[22];
  v13 = a2[25];
  a1[24] = a2[24];
  v35 = a2[27];
  v36 = v13;
  a1[26] = a2[26];
  v14 = a2[29];
  a1[28] = a2[28];
  v33 = a2[31];
  v34 = v14;
  a1[30] = a2[30];
  v15 = a2[33];
  a1[32] = a2[32];
  v25 = a2[35];
  a1[34] = a2[34];
  v16 = a2[37];
  a1[36] = a2[36];
  v26 = a2[39];
  a1[38] = a2[38];
  v17 = a2[41];
  a1[40] = a2[40];
  v27 = a2[43];
  a1[42] = a2[42];
  v18 = a2[45];
  a1[44] = a2[44];
  v28 = a2[47];
  a1[46] = a2[46];
  v19 = a2[49];
  a1[48] = a2[48];
  v20 = a2[51];
  a1[50] = a2[50];
  v21 = a2[53];
  a1[52] = a2[52];
  v29 = a2[55];
  a1[54] = a2[54];
  v30 = a2[57];
  a1[56] = a2[56];
  v31 = a2[59];
  a1[58] = a2[58];
  v22 = a2[61];
  a1[60] = a2[60];
  v32 = a2[63];
  a1[62] = a2[62];
  a1[64] = a2[64];
  a1[66] = a2[66];
  a1[68] = a2[68];
  a1[70] = a2[70];
  a1[72] = a2[72];
  a1[74] = a2[74];
  a1[76] = a2[76];
  a1[78] = a2[78];
  a1[80] = a2[80];
  a1[82] = a2[82];
  a1[84] = a2[84];
  a1[86] = a2[86];
  a1[88] = a2[88];
  a1[90] = a2[90];
  a1[92] = a2[92];
  a1[94] = a2[94];
  a1[96] = a2[96];
  a1[98] = a2[98];
  a1[100] = a2[100];
  a1[102] = a2[102];
  a1[104] = a2[104];
  a1[106] = a2[106];
  v23 = a2[1];
  *a1 = *a2;
  a1[1] = v23;
  a1[3] = v3;
  a1[5] = v4;
  a1[7] = v5;
  a1[9] = v6;
  a1[11] = v7;
  a1[13] = v8;
  a1[15] = v9;
  a1[17] = v10;
  a1[19] = v11;
  a1[21] = v38;
  a1[23] = v37;
  a1[25] = v36;
  a1[27] = v35;
  a1[29] = v34;
  a1[31] = v33;
  a1[33] = v15;
  a1[35] = v25;
  a1[37] = v16;
  a1[39] = v26;
  a1[41] = v17;
  a1[43] = v27;
  a1[45] = v18;
  a1[47] = v28;
  a1[49] = v19;
  a1[51] = v20;
  a1[53] = v21;
  a1[55] = v29;
  a1[57] = v30;
  a1[59] = v31;
  a1[61] = v22;
  a1[63] = v32;
  a1[65] = a2[65];
  a1[67] = a2[67];
  a1[69] = a2[69];
  a1[71] = a2[71];
  a1[73] = a2[73];
  a1[75] = a2[75];
  a1[77] = a2[77];
  a1[79] = a2[79];
  a1[81] = a2[81];
  a1[83] = a2[83];
  a1[85] = a2[85];
  a1[87] = a2[87];
  a1[89] = a2[89];
  a1[91] = a2[91];
  a1[93] = a2[93];
  a1[95] = a2[95];
  a1[97] = a2[97];
  a1[99] = a2[99];
  a1[101] = a2[101];
  a1[103] = a2[103];
  a1[105] = a2[105];
  a1[107] = a2[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PDF417ParsedData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  a1[37] = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  a1[39] = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  a1[41] = a2[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  a1[43] = a2[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  a1[45] = a2[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[46] = a2[46];
  a1[47] = a2[47];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[48] = a2[48];
  a1[49] = a2[49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[50] = a2[50];
  a1[51] = a2[51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[52] = a2[52];
  a1[53] = a2[53];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[54] = a2[54];
  a1[55] = a2[55];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[56] = a2[56];
  a1[57] = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[58] = a2[58];
  a1[59] = a2[59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[60] = a2[60];
  a1[61] = a2[61];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[62] = a2[62];
  a1[63] = a2[63];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[64] = a2[64];
  a1[65] = a2[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[66] = a2[66];
  a1[67] = a2[67];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[68] = a2[68];
  a1[69] = a2[69];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[70] = a2[70];
  a1[71] = a2[71];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[72] = a2[72];
  a1[73] = a2[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[74] = a2[74];
  a1[75] = a2[75];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[76] = a2[76];
  a1[77] = a2[77];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy864_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x360uLL);
}

_QWORD *assignWithTake for PDF417ParsedData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  v21 = a2[35];
  a1[34] = a2[34];
  a1[35] = v21;
  swift_bridgeObjectRelease();
  v22 = a2[37];
  a1[36] = a2[36];
  a1[37] = v22;
  swift_bridgeObjectRelease();
  v23 = a2[39];
  a1[38] = a2[38];
  a1[39] = v23;
  swift_bridgeObjectRelease();
  v24 = a2[41];
  a1[40] = a2[40];
  a1[41] = v24;
  swift_bridgeObjectRelease();
  v25 = a2[43];
  a1[42] = a2[42];
  a1[43] = v25;
  swift_bridgeObjectRelease();
  v26 = a2[45];
  a1[44] = a2[44];
  a1[45] = v26;
  swift_bridgeObjectRelease();
  v27 = a2[47];
  a1[46] = a2[46];
  a1[47] = v27;
  swift_bridgeObjectRelease();
  v28 = a2[49];
  a1[48] = a2[48];
  a1[49] = v28;
  swift_bridgeObjectRelease();
  v29 = a2[51];
  a1[50] = a2[50];
  a1[51] = v29;
  swift_bridgeObjectRelease();
  v30 = a2[53];
  a1[52] = a2[52];
  a1[53] = v30;
  swift_bridgeObjectRelease();
  v31 = a2[55];
  a1[54] = a2[54];
  a1[55] = v31;
  swift_bridgeObjectRelease();
  v32 = a2[57];
  a1[56] = a2[56];
  a1[57] = v32;
  swift_bridgeObjectRelease();
  v33 = a2[59];
  a1[58] = a2[58];
  a1[59] = v33;
  swift_bridgeObjectRelease();
  v34 = a2[61];
  a1[60] = a2[60];
  a1[61] = v34;
  swift_bridgeObjectRelease();
  v35 = a2[63];
  a1[62] = a2[62];
  a1[63] = v35;
  swift_bridgeObjectRelease();
  a1[64] = a2[64];
  a1[65] = a2[65];
  swift_bridgeObjectRelease();
  a1[66] = a2[66];
  a1[67] = a2[67];
  swift_bridgeObjectRelease();
  a1[68] = a2[68];
  a1[69] = a2[69];
  swift_bridgeObjectRelease();
  a1[70] = a2[70];
  a1[71] = a2[71];
  swift_bridgeObjectRelease();
  a1[72] = a2[72];
  a1[73] = a2[73];
  swift_bridgeObjectRelease();
  a1[74] = a2[74];
  a1[75] = a2[75];
  swift_bridgeObjectRelease();
  a1[76] = a2[76];
  a1[77] = a2[77];
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDF417ParsedData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 864))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDF417ParsedData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 856) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 864) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 864) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417ParsedData()
{
  return &type metadata for PDF417ParsedData;
}

uint64_t getEnumTagSinglePayload for PDF417ParsedData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCB)
    goto LABEL_17;
  if (a2 + 53 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 53) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 53;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 53;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 53;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x36;
  v8 = v6 - 54;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PDF417ParsedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 53 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 53) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCA)
    return ((uint64_t (*)(void))((char *)&loc_1CFA7095C + 4 * byte_1CFB1B2C1[v4]))();
  *a1 = a2 + 53;
  return ((uint64_t (*)(void))((char *)sub_1CFA70990 + 4 * byte_1CFB1B2BC[v4]))();
}

uint64_t sub_1CFA70990(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA70998(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA709A0);
  return result;
}

uint64_t sub_1CFA709AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA709B4);
  *(_BYTE *)result = a2 + 53;
  return result;
}

uint64_t sub_1CFA709B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA709C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PDF417ParsedData.CodingKeys()
{
  return &type metadata for PDF417ParsedData.CodingKeys;
}

unint64_t sub_1CFA709E0()
{
  unint64_t result;

  result = qword_1EFBC3E20;
  if (!qword_1EFBC3E20)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B4CC, &type metadata for PDF417ParsedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3E20);
  }
  return result;
}

unint64_t sub_1CFA70A28()
{
  unint64_t result;

  result = qword_1EFBC3E28;
  if (!qword_1EFBC3E28)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B43C, &type metadata for PDF417ParsedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3E28);
  }
  return result;
}

unint64_t sub_1CFA70A70()
{
  unint64_t result;

  result = qword_1EFBC3E30;
  if (!qword_1EFBC3E30)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B464, &type metadata for PDF417ParsedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3E30);
  }
  return result;
}

unint64_t *sub_1CFA70AB4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v12 = v11 | (v5 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v12);
    v15 = *v13;
    v14 = v13[1];
    v16 = v15 & 0xFFFFFFFFFFFFLL;
    if ((v14 & 0x2000000000000000) != 0)
      v17 = HIBYTE(v14) & 0xF;
    else
      v17 = v16;
    if (v17)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
      }
    }
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v10)
    return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v18);
  ++v5;
  if (v19)
    goto LABEL_23;
  v5 = v18 + 1;
  if (v18 + 1 >= v10)
    return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v5);
  if (v19)
    goto LABEL_23;
  v5 = v18 + 2;
  if (v18 + 2 >= v10)
    return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v5);
  if (v19)
  {
LABEL_23:
    v9 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v5 << 6);
    goto LABEL_5;
  }
  v20 = v18 + 3;
  if (v20 >= v10)
    return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v5 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1CFA70C10(result, a2, v4, a3);
    v19 = *(_QWORD *)(v6 + 8 * v5);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1CFA70C10(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904AF0);
  result = sub_1CFB02628();
  v9 = result;
  v39 = a1;
  v40 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v11;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v40)
        return v9;
      v16 = v39[v15];
      v17 = v11 + 1;
      if (!v16)
      {
        v17 = v11 + 2;
        if (v11 + 2 >= v40)
          return v9;
        v16 = v39[v17];
        if (!v16)
        {
          v17 = v11 + 3;
          if (v11 + 3 >= v40)
            return v9;
          v16 = v39[v17];
          if (!v16)
          {
            v18 = v11 + 4;
            if (v11 + 4 >= v40)
              return v9;
            v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                v17 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v17 >= v40)
                  return v9;
                v16 = v39[v17];
                ++v18;
                if (v16)
                  goto LABEL_24;
              }
            }
            v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v41 = v17;
      v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    v19 = 16 * v14;
    v20 = v4;
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v19);
    v25 = *v24;
    v26 = v24[1];
    sub_1CFB02A90();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CFB01ADC();
    result = sub_1CFB02ACC();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = 16 * v30;
    v36 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v35);
    *v36 = v23;
    v36[1] = v22;
    v37 = (_QWORD *)(*(_QWORD *)(v9 + 56) + v35);
    *v37 = v25;
    v37[1] = v26;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v20;
    v11 = v41;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CFA70ECC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65707954636F64 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72655661766D6161 && a2 == 0xEC0000006E6F6973 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001CFB2F460 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x43656C6369686576 && a2 == 0xEC0000007373616CLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CFB2F480 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CFB2F4A0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614E656C6464696DLL && a2 == 0xEA0000000000656DLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F6C6F43657965 && a2 == 0xE800000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x31746565727473 && a2 == 0xE700000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7265626D754E6469 && a2 == 0xE800000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CFB2F4C0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001CFB2F4E0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001CFB2F500 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001CFB2F520 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 6451044 && a2 == 0xE300000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x32746565727473 && a2 == 0xE700000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6F6C6F4372696168 && a2 == 0xE900000000000072 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x42664F6563616C70 && a2 == 0xEC00000068747269 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x666E497469647561 && a2 == 0xE90000000000006FLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001CFB2F540 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xED00007361696C41 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xEE007361696C4165 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x614E786966667573 && a2 == 0xEF7361696C41656DLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x786966667573 && a2 == 0xE600000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x6152746867696577 && a2 == 0xEB0000000065676ELL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x746963696E687465 && a2 == 0xE900000000000079 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001CFB2F560 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CFB2F580 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CFB2F5A0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001CFB2F5C0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001CFB2F5F0 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001CFB2F610 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0x6E61696C706D6F63 && a2 == 0xEE00657079546563 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CFB2F630 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0x6F50746867696577 && a2 == 0xEC00000073646E75 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0x694B746867696577 && a2 == 0xEF736D6172676F6CLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0x6E6F446E6167726FLL && a2 == 0xEA0000000000726FLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x6E617265746576 && a2 == 0xE700000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CFB2F650 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001CFB2F670 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0x5538317265646E75 && a2 == 0xEC0000006C69746ELL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x5539317265646E75 && a2 == 0xEC0000006C69746ELL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0x5531327265646E75 && a2 == 0xEC0000006C69746ELL)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 53;
    else
      return 54;
  }
}

void sub_1CFA72450(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1CFA724A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1CF960FD0(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1CFB00BD0();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1CFB00BE8();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1CFB00BD0();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1CFB00BE8();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903060);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1CFB05840;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1CFB01A4C();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1CF960FD0(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1CFA727C0);
  }
  return v2;
}

Swift::String __swiftcall Data.base16EncodedString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  sub_1CFA72450(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF931BE4((unint64_t *)&qword_1ED903030, (uint64_t *)&unk_1ED903020, MEMORY[0x1E0DEAF20]);
  v2 = sub_1CFB019BC();
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = v2;
  v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t Digest.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = Digest.bytes.getter();
  v1 = sub_1CF9838DC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CFA728C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  id v7;
  id v8;
  id v9;
  _BYTE v10[32];

  result = sub_1CFA77BC4(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v7 = sub_1CFA77E5C(v10, result, v5, 0, a1);
    v9 = v7;
    *(_QWORD *)a2 = v7;
    sub_1CF94BBF0((uint64_t)v10, a2 + 8);
    v8 = v7;
    return sub_1CF931B1C((uint64_t)&v9, &qword_1EFBC3E88);
  }
  return result;
}

uint64_t OS_dispatch_semaphore.wait(interval:)(double a1)
{
  return sub_1CFA72CA8((uint64_t (*)(char *))MEMORY[0x1E0DEFA60], a1);
}

void Data.init(base16Encoded:)()
{
  void *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v1 = HexToBytes(v0);

  if (v1)
  {
    v2 = sub_1CFB00E7C();
    v4 = v3;

    sub_1CF98285C(v2, v4);
  }
}

float CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width;
  CGRect v10;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  return Width * CGRectGetHeight(v10);
}

void NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E20]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904CB0);
      objc_msgSend(v2, sel_addObject_, sub_1CFB029C4());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  v5 = v2;
  sub_1CFB01EF0();

  sub_1CFB025EC();
  __break(1u);
}

uint64_t Data.clone()(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, unint64_t))((char *)&loc_1CFA72C4C
                                                                            + dword_1CFA72C8C[a2 >> 62]))(0, 0, a1, a2);
}

uint64_t sub_1CFA72C60()
{
  return sub_1CFB00EA0();
}

uint64_t sub_1CFA72C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 >> 32 < (int)a3)
  {
    __break(1u);
    JUMPOUT(0x1CFA72C8CLL);
  }
  return sub_1CFB00EA0();
}

uint64_t OS_dispatch_group.wait(interval:)(double a1)
{
  return sub_1CFA72CA8(MEMORY[0x1E0DEF7D8], a1);
}

uint64_t sub_1CFA72CA8(uint64_t (*a1)(char *), double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  double v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CFB013BC();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v24 = (char *)&v40 - v23;
  v25 = sub_1CFB01344();
  v26 = *(_QWORD *)(v25 - 8);
  result = MEMORY[0x1E0C80A78](v25, v27, v28, v29, v30, v31, v32, v33);
  v36 = (uint64_t *)((char *)&v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = a2 * 1000.0;
  if ((~COERCE__INT64(a2 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v37 < 9.22337204e18)
  {
    *v36 = (uint64_t)v37;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v26 + 104))(v36, *MEMORY[0x1E0DEF490], v25);
    sub_1CFB013B0();
    MEMORY[0x1D17D8128](v15, v36);
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v15, v4);
    v39 = a1(v24) & 1;
    v38(v24, v4);
    (*(void (**)(_QWORD *, uint64_t))(v26 + 8))(v36, v25);
    return v39;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t OS_dispatch_group.wait()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFA72E60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1CFA72EF0;
  return sub_1CFB02808();
}

uint64_t sub_1CFA72EF0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA72F4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA72F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[6];

  v53 = a2;
  v49 = a1;
  v2 = sub_1CFB01398();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v52 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBC3E90);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14, v15, v16, v17, v18, v19, v20);
  v21 = sub_1CFB01374();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v23, v24, v25, v26, v27, v28, v29);
  v31 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1CFB01368();
  v50 = *(_QWORD *)(v32 - 8);
  v51 = v32;
  MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
  v41 = (char *)&v48 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB0135C();
  sub_1CF9775E8(0, (unint64_t *)&qword_1ED9054D0);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v31, *MEMORY[0x1E0DEF540], v21);
  v42 = (void *)sub_1CFB02064();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v49, v11);
  v43 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v44 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v44 + v43, (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_1CFA77FC0;
  aBlock[5] = v44;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CFA1D3E8;
  aBlock[3] = &block_descriptor_11;
  v45 = _Block_copy(aBlock);
  v46 = v52;
  sub_1CFB01380();
  sub_1CFB02004();
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v55);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
  return swift_release();
}

uint64_t Data.init(base64urlEncoded:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1CF9B9CD8();
  sub_1CFB02214();
  swift_bridgeObjectRelease();
  sub_1CFB02214();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v0 = sub_1CFB01AF4();
  swift_bridgeObjectRelease();
  v1 = v0 & 3;
  if (v0 <= 0)
    v1 = -(-v0 & 3);
  if (v1 >= 1)
  {
    MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v1);
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
  }
  v2 = sub_1CFB00E28();
  v4 = v3;
  sub_1CF92F5C8(v2, v3);
  swift_bridgeObjectRelease();
  if (v4 >> 60 != 15)
    sub_1CF931AB0(v2, v4);
  return v2;
}

Swift::String __swiftcall Data.base64urlEncodedString()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  sub_1CFB00E64();
  sub_1CF9B9CD8();
  sub_1CFB02214();
  swift_bridgeObjectRelease();
  sub_1CFB02214();
  swift_bridgeObjectRelease();
  v0 = sub_1CFB02214();
  v2 = v1;
  swift_bridgeObjectRelease();
  v3 = v0;
  v4 = v2;
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t Dictionary<>.optString(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v41)(char *, char *, uint64_t);
  _QWORD v42[3];
  uint64_t v43;

  v8 = sub_1CFB02190();
  v9 = *(_QWORD *)(v8 - 8);
  v17 = MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v19 = (char *)v42 - v18;
  v20 = *(_QWORD *)(a4 - 8);
  v28 = MEMORY[0x1E0C80A78](v17, v21, v22, v23, v24, v25, v26, v27);
  v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v31, v32, v33, v34, v35, v36, v37);
  v39 = (char *)v42 - v38;
  v42[1] = a1;
  v42[2] = a2;
  swift_bridgeObjectRetain();
  sub_1CFB0234C();
  MEMORY[0x1D17D86E0](&v43, a3, MEMORY[0x1E0DEC198], a4, MEMORY[0x1E0DEC1A0]);
  sub_1CF959A20((uint64_t)&v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  else
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v41(v39, v19, a4);
    v41(v30, v39, a4);
    if (swift_dynamicCast())
      return v43;
    else
      return 0;
  }
}

uint64_t Dictionary<>.optInt(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v41)(char *, char *, uint64_t);
  _QWORD v42[3];
  _QWORD v43[5];

  v8 = sub_1CFB02190();
  v9 = *(_QWORD *)(v8 - 8);
  v17 = MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v19 = (char *)v42 - v18;
  v20 = *(_QWORD *)(a4 - 8);
  v28 = MEMORY[0x1E0C80A78](v17, v21, v22, v23, v24, v25, v26, v27);
  v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v31, v32, v33, v34, v35, v36, v37);
  v39 = (char *)v42 - v38;
  v42[1] = a1;
  v42[2] = a2;
  swift_bridgeObjectRetain();
  sub_1CFB0234C();
  MEMORY[0x1D17D86E0](v43, a3, MEMORY[0x1E0DEC198], a4, MEMORY[0x1E0DEC1A0]);
  sub_1CF959A20((uint64_t)v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  else
  {
    v41 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v41(v39, v19, a4);
    v41(v30, v39, a4);
    if (swift_dynamicCast())
      return v43[0];
    else
      return 0;
  }
}

uint64_t Dictionary<>.optDataHex(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[5];
  uint64_t v46;
  unint64_t v47;

  v8 = sub_1CFB02190();
  v9 = *(_QWORD *)(v8 - 8);
  v17 = MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v19 = (char *)v45 - v18;
  v20 = *(_QWORD *)(a4 - 8);
  v28 = MEMORY[0x1E0C80A78](v17, v21, v22, v23, v24, v25, v26, v27);
  v30 = (char *)v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v31, v32, v33, v34, v35, v36, v37);
  v39 = (char *)v45 - v38;
  v45[3] = a1;
  v45[4] = a2;
  swift_bridgeObjectRetain();
  sub_1CFB0234C();
  MEMORY[0x1D17D86E0](&v46, a3, MEMORY[0x1E0DEC198], a4, MEMORY[0x1E0DEC1A0]);
  sub_1CF959A20((uint64_t)&v46);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v39, v19, a4);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v30, v39, a4);
  if ((swift_dynamicCast() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v39, a4);
    return 0;
  }
  v40 = v46;
  v41 = v47;
  sub_1CFA72450(v46, v47);
  v46 = v42;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF931BE4((unint64_t *)&qword_1ED903030, (uint64_t *)&unk_1ED903020, MEMORY[0x1E0DEAF20]);
  v43 = sub_1CFB019BC();
  swift_bridgeObjectRelease();
  sub_1CF923A24(v40, v41);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v39, a4);
  return v43;
}

uint64_t Dictionary<>.optDict(forKey:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA73A7C(a1, a2, a3, a4, &qword_1EFBC3E40);
}

uint64_t Dictionary<>.optArray(forKey:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA73A7C(a1, a2, a3, a4, &qword_1EFBC3E48);
}

uint64_t sub_1CFA73A7C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v42)(char *, char *, uint64_t);
  uint64_t *v43[3];
  _QWORD v44[5];

  v43[0] = a5;
  v9 = sub_1CFB02190();
  v10 = *(_QWORD *)(v9 - 8);
  v18 = MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14, v15, v16, v17);
  v20 = (char *)v43 - v19;
  v21 = *(_QWORD *)(a4 - 8);
  v29 = MEMORY[0x1E0C80A78](v18, v22, v23, v24, v25, v26, v27, v28);
  v31 = (char *)v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29, v32, v33, v34, v35, v36, v37, v38);
  v40 = (char *)v43 - v39;
  v43[1] = a1;
  v43[2] = a2;
  swift_bridgeObjectRetain();
  sub_1CFB0234C();
  MEMORY[0x1D17D86E0](v44, a3, MEMORY[0x1E0DEC198], a4, MEMORY[0x1E0DEC1A0]);
  sub_1CF959A20((uint64_t)v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    return 0;
  }
  else
  {
    v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v42(v40, v20, a4);
    v42(v31, v40, a4);
    __swift_instantiateConcreteTypeFromMangledName(v43[0]);
    if (swift_dynamicCast())
      return v44[0];
    else
      return 0;
  }
}

Swift::Bool __swiftcall NSXPCConnection.isEntitled(_:)(Swift::String a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  unint64_t v7;
  unint64_t v8;
  _OWORD v9[2];
  _OWORD v10[2];

  v2 = (void *)sub_1CFB01A04();
  v3 = objc_msgSend(v1, sel_valueForEntitlement_, v2);

  if (v3)
  {
    sub_1CFB02298();
    swift_unknownObjectRelease();
    sub_1CF923FD8(v9, v10);
    sub_1CF94BBF0((uint64_t)v10, (uint64_t)v9);
    if (swift_dynamicCast())
    {
      LOBYTE(v3) = v7;
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      return (char)v3;
    }
    sub_1CF94BBF0((uint64_t)v10, (uint64_t)v9);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v4 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0)
        v4 = v7 & 0xFFFFFFFFFFFFLL;
      LOBYTE(v3) = v4 != 0;
      goto LABEL_8;
    }
    sub_1CF94BBF0((uint64_t)v10, (uint64_t)v9);
    sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
    if (swift_dynamicCast()
      || (sub_1CF94BBF0((uint64_t)v10, (uint64_t)v9),
          sub_1CF9775E8(0, (unint64_t *)&unk_1EFBC0EA0),
          swift_dynamicCast()))
    {
      v5 = objc_msgSend((id)v7, sel_count);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      LOBYTE(v3) = (uint64_t)v5 > 0;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      LOBYTE(v3) = 0;
    }
  }
  return (char)v3;
}

uint64_t static NSXPCConnection.hasArrayEntitlement(name:values:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  result = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_currentConnection);
  if (result)
  {
    v5 = (void *)result;
    v6 = (void *)sub_1CFB01A04();
    v7 = objc_msgSend(v5, sel_valueForEntitlement_, v6);

    if (v7)
    {
      sub_1CFB02298();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_1CF931BA0((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_1ED904DA0);
    if (v15)
    {
      sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = *(_QWORD *)(a3 + 16);
        if (!v8)
        {

          return 1;
        }
        swift_bridgeObjectRetain();
        for (i = a3 + 40; ; i += 16)
        {
          swift_bridgeObjectRetain();
          v10 = (void *)sub_1CFB01A04();
          swift_bridgeObjectRelease();
          v11 = objc_msgSend(v12, sel_containsObject_, v10);

          if ((v11 & 1) == 0)
            break;
          if (!--v8)
          {

            swift_bridgeObjectRelease();
            return 1;
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    else
    {

      sub_1CF931B1C((uint64_t)v14, (uint64_t *)&unk_1ED904DA0);
    }
    return 0;
  }
  return result;
}

Swift::Bool __swiftcall NSXPCConnection.hasArrayEntitlement(name:values:)(Swift::String name, Swift::OpaquePointer values)
{
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  char *i;
  void *v8;
  unsigned __int8 v9;
  void *v11;
  _OWORD v12[2];
  _BYTE v13[24];
  uint64_t v14;

  v4 = (void *)sub_1CFB01A04();
  v5 = objc_msgSend(v2, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1CFB02298();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_1CF931BA0((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_1ED904DA0);
  if (v14)
  {
    sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = *((_QWORD *)values._rawValue + 2);
      if (!v6)
      {

        return 1;
      }
      swift_bridgeObjectRetain();
      for (i = (char *)values._rawValue + 40; ; i += 16)
      {
        swift_bridgeObjectRetain();
        v8 = (void *)sub_1CFB01A04();
        swift_bridgeObjectRelease();
        v9 = objc_msgSend(v11, sel_containsObject_, v8);

        if ((v9 & 1) == 0)
          break;
        if (!--v6)
        {

          swift_bridgeObjectRelease();
          return 1;
        }
      }

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1CF931B1C((uint64_t)v13, (uint64_t *)&unk_1ED904DA0);
  }
  return 0;
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getArrayEntitlement(name:)(Swift::String name)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  Swift::Bool v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  uint64_t v35;
  Swift::OpaquePointer_optional result;

  v2 = sub_1CFB00D38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (void *)sub_1CFB01A04();
  v14 = objc_msgSend(v1, sel_valueForEntitlement_, v13);

  if (v14)
  {
    sub_1CFB02298();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1CF931BA0((uint64_t)v33, (uint64_t)&v34, (uint64_t *)&unk_1ED904DA0);
  if (!v35)
  {
    sub_1CF931B1C((uint64_t)&v34, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_17;
  }
  sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v17 = 0;
    goto LABEL_20;
  }
  v16 = v31;
  sub_1CFB0210C();
  sub_1CFB00D2C();
  if (v35)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1CF923FD8(&v34, v33);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = v31;
        v18 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_1CF955C18(0, v17[2] + 1, 1, v17);
        v20 = v17[2];
        v21 = v17[3];
        v22 = v20 + 1;
        if (v20 >= v21 >> 1)
        {
          v30 = v18;
          v24 = v20 + 1;
          v25 = v17;
          v26 = v20;
          v27 = sub_1CF955C18((_QWORD *)(v21 > 1), v20 + 1, 1, v25);
          v20 = v26;
          v22 = v24;
          v18 = v30;
          v17 = v27;
        }
        v17[2] = v22;
        v23 = &v17[2 * v20];
        v23[4] = v19;
        v23[5] = v18;
      }
      sub_1CFB00D2C();
    }
    while (v35);
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

LABEL_20:
  v28 = v17;
  result.value._rawValue = v28;
  result.is_nil = v15;
  return result;
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getDictionaryOfStringArraysEntitlement(name:)(Swift::String name)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Bool v47;
  void *v48;
  unint64_t v49;
  __int128 v50;
  void *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  char *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void *v81;
  char isUniquelyReferenced_nonNull_native;
  void *v83;
  uint64_t v84;
  __int128 v85;
  _QWORD *v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  __int128 v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[10];
  __int128 v103;
  uint64_t v104;
  _OWORD v105[4];
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  Swift::OpaquePointer_optional result;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  v4 = sub_1CFB012CC();
  v96 = *(_QWORD *)(v4 - 8);
  v12 = MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v12, v15, v16, v17, v18, v19, v20, v21);
  v24 = (char *)&v84 - v23;
  MEMORY[0x1E0C80A78](v22, v25, v26, v27, v28, v29, v30, v31);
  v33 = (char *)&v84 - v32;
  v34 = sub_1CFB00D38();
  v89 = *(_QWORD *)(v34 - 8);
  v90 = v34;
  MEMORY[0x1E0C80A78](v34, v35, v36, v37, v38, v39, v40, v41);
  v91 = (char *)&v84 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = countAndFlagsBits;
  v43 = (void *)sub_1CFB01A04();
  v44 = objc_msgSend(v1, sel_valueForEntitlement_, v43);

  if (v44)
  {
    sub_1CFB02298();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v105, 0, 32);
  }
  sub_1CF931BA0((uint64_t)v105, (uint64_t)&v106, (uint64_t *)&unk_1ED904DA0);
  v45 = v96;
  if (!v107)
  {
    sub_1CF931B1C((uint64_t)&v106, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_42;
  }
  sub_1CF9775E8(0, (unint64_t *)&unk_1EFBC0EA0);
  v46 = MEMORY[0x1E0DEE9B8];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_42:
    v83 = 0;
    goto LABEL_44;
  }
  v48 = (void *)v103;
  v49 = sub_1CF922F8C(MEMORY[0x1E0DEE9D8]);
  v87 = v48;
  v88 = (void *)v49;
  sub_1CFB01F98();
  v99 = swift_retain();
  sub_1CFB01FA4();
  sub_1CF931BA0((uint64_t)v105, (uint64_t)&v106, &qword_1EFBC3E50);
  if (v107)
  {
    v97 = v46 + 8;
    v98 = &v108;
    *(_QWORD *)&v50 = 136315138;
    v93 = v50;
    v94 = v24;
    v92 = v33;
    do
    {
      sub_1CF923FD8(&v106, v105);
      sub_1CF923FD8(v98, &v103);
      sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
      if (swift_dynamicCast())
      {
        v51 = (void *)v102[0];
        sub_1CF94BBF0((uint64_t)v105, (uint64_t)&v103);
        if (!swift_dynamicCast())
        {
          if (qword_1ED9054E8 != -1)
            swift_once();
          v52 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v24, v52, v4);
          swift_bridgeObjectRetain_n();
          v53 = sub_1CFB012B4();
          v54 = sub_1CFB01FD4();
          if (os_log_type_enabled(v53, v54))
          {
            v55 = swift_slowAlloc();
            v56 = swift_slowAlloc();
            *(_QWORD *)&v103 = v56;
            *(_DWORD *)v55 = v93;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v55 + 4) = sub_1CF9C974C(v95, (unint64_t)object, (uint64_t *)&v103);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1CF917000, v53, v54, "Dictionary entitlement %s has an invalid value", (uint8_t *)v55, 0xCu);
            swift_arrayDestroy();
            v57 = v56;
            v24 = v94;
            MEMORY[0x1D17DA6E4](v57, -1, -1);
            v58 = v55;
            v45 = v96;
            MEMORY[0x1D17DA6E4](v58, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v4);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
          v33 = v92;
          goto LABEL_10;
        }
        v85 = *(_OWORD *)v102;
        sub_1CFB0210C();
        sub_1CFB00D2C();
        if (v104)
        {
          v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            while (1)
            {
              sub_1CF923FD8(&v103, v102);
              if (swift_dynamicCast())
                break;
              v66 = v14;
              if (qword_1ED9054E8 != -1)
                swift_once();
              v67 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
              swift_beginAccess();
              (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v33, v67, v4);
              swift_bridgeObjectRetain_n();
              v68 = sub_1CFB012B4();
              v69 = v33;
              v70 = sub_1CFB01FD4();
              if (os_log_type_enabled(v68, v70))
              {
                v71 = swift_slowAlloc();
                v72 = swift_slowAlloc();
                v102[0] = v72;
                *(_DWORD *)v71 = v93;
                swift_bridgeObjectRetain();
                *(_QWORD *)(v71 + 4) = sub_1CF9C974C(v95, (unint64_t)object, v102);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1CF917000, v68, v70, "Dictionary entitlement %s has an invalid value", (uint8_t *)v71, 0xCu);
                swift_arrayDestroy();
                v73 = v72;
                v24 = v94;
                MEMORY[0x1D17DA6E4](v73, -1, -1);
                v74 = v71;
                v45 = v96;
                MEMORY[0x1D17DA6E4](v74, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              (*(void (**)(char *, uint64_t))(v45 + 8))(v69, v4);
              v33 = v69;
              sub_1CFB00D2C();
              v14 = v66;
              if (!v104)
                goto LABEL_40;
            }
            v75 = v100;
            v76 = v101;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v86 = sub_1CF955C18(0, v86[2] + 1, 1, v86);
            v78 = v86[2];
            v77 = v86[3];
            if (v78 >= v77 >> 1)
              v86 = sub_1CF955C18((_QWORD *)(v77 > 1), v78 + 1, 1, v86);
            v79 = v86;
            v86[2] = v78 + 1;
            v80 = &v79[2 * v78];
            v80[4] = v75;
            v80[5] = v76;
            sub_1CFB00D2C();
            v24 = v94;
            v33 = v92;
            v45 = v96;
          }
          while (v104);
        }
        else
        {
          v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
LABEL_40:
        (*(void (**)(char *, uint64_t))(v89 + 8))(v91, v90);
        v81 = v88;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v103 = v81;
        sub_1CF958E70((uint64_t)v86, v85, *((uint64_t *)&v85 + 1), isUniquelyReferenced_nonNull_native);
        v88 = (void *)v103;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED9054E8 != -1)
          swift_once();
        v59 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED907590);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v14, v59, v4);
        swift_bridgeObjectRetain_n();
        v60 = sub_1CFB012B4();
        v61 = sub_1CFB01FD4();
        if (os_log_type_enabled(v60, v61))
        {
          v62 = swift_slowAlloc();
          v63 = swift_slowAlloc();
          *(_QWORD *)&v103 = v63;
          *(_DWORD *)v62 = v93;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v62 + 4) = sub_1CF9C974C(v95, (unint64_t)object, (uint64_t *)&v103);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1CF917000, v60, v61, "Dictionary entitlement %s has an invalid value", (uint8_t *)v62, 0xCu);
          swift_arrayDestroy();
          v64 = v63;
          v24 = v94;
          MEMORY[0x1D17DA6E4](v64, -1, -1);
          v65 = v62;
          v45 = v96;
          MEMORY[0x1D17DA6E4](v65, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v4);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
LABEL_10:
      sub_1CFB01FA4();
      sub_1CF931BA0((uint64_t)v105, (uint64_t)&v106, &qword_1EFBC3E50);
    }
    while (v107);
  }

  swift_release_n();
  v83 = v88;
LABEL_44:
  result.value._rawValue = v83;
  result.is_nil = v47;
  return result;
}

uint64_t sub_1CFA74CC0()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_debugDescription);
  v2 = sub_1CFB01A28();

  return v2;
}

id KeyedDecodingContainer.decodeBase64URLEncodedData(forKey:)()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v13;

  sub_1CFB026E8();
  if (!v1)
  {
    v2 = sub_1CF9B9CD8();
    v3 = MEMORY[0x1E0DEA968];
    sub_1CFB02214();
    swift_bridgeObjectRelease();
    v13 = v3;
    sub_1CFB02214();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v4 = sub_1CFB01AF4();
    swift_bridgeObjectRelease();
    v5 = v4 & 3;
    if (v4 <= 0)
      v5 = -(-v4 & 3);
    if (v5 >= 1)
    {
      MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v5);
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
    }
    v0 = (id)sub_1CFB00E28();
    v7 = v6;
    sub_1CF92F5C8((uint64_t)v0, v6);
    swift_bridgeObjectRelease();
    if (v7 >> 60 == 15)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
      *(_QWORD *)(inited + 32) = sub_1CFB01A28();
      *(_QWORD *)(inited + 40) = v9;
      *(_QWORD *)(inited + 72) = v3;
      *(_QWORD *)(inited + 48) = 0xD000000000000029;
      *(_QWORD *)(inited + 56) = 0x80000001CFB2F710;
      sub_1CF9226B8(inited);
      v0 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v10 = (void *)sub_1CFB01A04();
      v11 = (void *)sub_1CFB01944();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v10, -1, v11, v13, v2, v2, v2);

      swift_willThrow();
    }
    else
    {
      sub_1CF931AB0((uint64_t)v0, v7);
    }
  }
  return v0;
}

id UnkeyedDecodingContainer.decodeBase64URLEncodedData()()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t inited;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v13;

  sub_1CFB0282C();
  if (!v1)
  {
    v2 = sub_1CF9B9CD8();
    v3 = MEMORY[0x1E0DEA968];
    sub_1CFB02214();
    swift_bridgeObjectRelease();
    v13 = v3;
    sub_1CFB02214();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v4 = sub_1CFB01AF4();
    swift_bridgeObjectRelease();
    v5 = v4 & 3;
    if (v4 <= 0)
      v5 = -(-v4 & 3);
    if (v5 >= 1)
    {
      MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v5);
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
    }
    v0 = (id)sub_1CFB00E28();
    v7 = v6;
    sub_1CF92F5C8((uint64_t)v0, v6);
    swift_bridgeObjectRelease();
    if (v7 >> 60 == 15)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
      *(_QWORD *)(inited + 32) = sub_1CFB01A28();
      *(_QWORD *)(inited + 40) = v9;
      *(_QWORD *)(inited + 72) = v3;
      *(_QWORD *)(inited + 48) = 0xD000000000000029;
      *(_QWORD *)(inited + 56) = 0x80000001CFB2F710;
      sub_1CF9226B8(inited);
      v0 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v10 = (void *)sub_1CFB01A04();
      v11 = (void *)sub_1CFB01944();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v10, -1, v11, v13, v2, v2, v2);

      swift_willThrow();
    }
    else
    {
      sub_1CF931AB0((uint64_t)v0, v7);
    }
  }
  return v0;
}

uint64_t Digest.bytes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CFB0186C();
  v2 = sub_1CF982DC0(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Digest.hexStr.getter()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = Digest.bytes.getter();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1CF960FD0(0, v1, 0);
    v2 = 0;
    v3 = MEMORY[0x1E0DEDEC8];
    do
    {
      v4 = *(_BYTE *)(v0 + v2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903060);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1CFB05840;
      *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v5 + 64) = v3;
      *(_BYTE *)(v5 + 32) = v4;
      v6 = sub_1CFB01A4C();
      v8 = v7;
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      if (v10 >= v9 >> 1)
        sub_1CF960FD0(v9 > 1, v10 + 1, 1);
      ++v2;
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF931BE4((unint64_t *)&qword_1ED903030, (uint64_t *)&unk_1ED903020, MEMORY[0x1E0DEAF20]);
  v12 = sub_1CFB019BC();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t Digest.base64Str.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = Digest.bytes.getter();
  v1 = sub_1CF9838DC(v0);
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = sub_1CFB00E64();
  sub_1CF923A24(v1, v3);
  return v4;
}

BOOL Date.isAtLeast(days:after:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;

  v0 = sub_1CFB00F54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB00EE8();
  sub_1CFA77EE4();
  v11 = sub_1CFB019D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  return (v11 & 1) == 0;
}

BOOL Date.isAtLeast(seconds:after:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;

  v0 = sub_1CFB00F54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB00EE8();
  sub_1CFA77EE4();
  v11 = sub_1CFB019D4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  return (v11 & 1) == 0;
}

uint64_t Date.isAfterAndWithin(seconds:of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;

  v2 = v1;
  v4 = sub_1CFB00F54();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v25 = (char *)&v40 - v24;
  MEMORY[0x1E0C80A78](v23, v26, v27, v28, v29, v30, v31, v32);
  v34 = (char *)&v40 - v33;
  sub_1CFA77EE4();
  v35 = sub_1CFB019D4();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v36(v34, v2, v4);
  v36(v25, a1, v4);
  if ((v35 & 1) != 0)
  {
    v37 = 0;
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  else
  {
    sub_1CFB00EE8();
    v37 = sub_1CFB019D4() ^ 1;
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v15, v4);
  }
  v38(v25, v4);
  v38(v34, v4);
  return v37 & 1;
}

uint64_t Date.isBeforeAndWithin(seconds:of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;

  v2 = v1;
  v4 = sub_1CFB00F54();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v13, v16, v17, v18, v19, v20, v21, v22);
  v25 = (char *)&v40 - v24;
  MEMORY[0x1E0C80A78](v23, v26, v27, v28, v29, v30, v31, v32);
  v34 = (char *)&v40 - v33;
  sub_1CFA77EE4();
  v35 = sub_1CFB019D4();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v36(v34, v2, v4);
  v36(v25, a1, v4);
  if ((v35 & 1) != 0)
  {
    v37 = 0;
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  else
  {
    sub_1CFB00EE8();
    v37 = sub_1CFB019D4() ^ 1;
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v15, v4);
  }
  v38(v25, v4);
  v38(v34, v4);
  return v37 & 1;
}

BOOL Date.isWithin(seconds:of:)(double a1)
{
  double v2;
  double v3;
  double v4;

  sub_1CFB00ED0();
  v3 = v2;
  sub_1CFB00ED0();
  return vabdd_f64(v3, v4) < a1;
}

uint64_t Date.addingRandomOffset(in:)(double a1)
{
  uint64_t result;

  if (a1 < 0.0)
  {
    __break(1u);
  }
  else if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0)
  {
    sub_1CFA77A7C(0x20000000000001uLL);
    return sub_1CFB00EE8();
  }
  __break(1u);
  return result;
}

uint64_t Date.utcDayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, _QWORD, uint64_t);
  uint64_t v43;
  uint64_t v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2FD0);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CFB01008();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1CFB01068();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v25, v26, v27, v28, v29, v30, v31);
  v33 = (char *)&v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v22, *MEMORY[0x1E0CB0EF8], v12);
  sub_1CFB01014();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
  sub_1CFB01074();
  v34 = sub_1CFB01098();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v11, 1, v34);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1CFB01050();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBF610);
    v36 = sub_1CFB0105C();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(_QWORD *)(v37 + 72);
    v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1CFB0DDA0;
    v41 = v40 + v39;
    v42 = *(void (**)(unint64_t, _QWORD, uint64_t))(v37 + 104);
    v42(v41, *MEMORY[0x1E0CB11A0], v36);
    v42(v41 + v38, *MEMORY[0x1E0CB1158], v36);
    v42(v41 + 2 * v38, *MEMORY[0x1E0CB1160], v36);
    v42(v41 + 3 * v38, *MEMORY[0x1E0CB1130], v36);
    sub_1CF97FF94(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1CFB0102C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v33, v23);
    v43 = sub_1CFB00C3C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a1, 0, 1, v43);
  }
  return result;
}

uint64_t Int.formattedByteSize.getter(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB34E8]), sel_init);
  v3 = objc_msgSend(v2, sel_stringFromByteCount_, a1);

  v4 = sub_1CFB01A28();
  return v4;
}

uint64_t Array<A>.intArray.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CFB02604();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v11 = MEMORY[0x1E0DEE9D8];
  result = sub_1CF9610CC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v11;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1D17D9124](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_integerValue);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_1CF9610CC(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.numberArray.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1CFB024A8();
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v5);
      sub_1CFB02484();
      sub_1CFB024B4();
      sub_1CFB024C0();
      sub_1CFB02490();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t UUID.data.getter()
{
  char v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v9 = sub_1CFB00F84();
  v10 = v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  return sub_1CF9827A4((uint64_t)&v9, (uint64_t)&v18);
}

Swift::String_optional __swiftcall URL.fileSize()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  Swift::String_optional result;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;

  v0 = sub_1CFB012CC();
  MEMORY[0x1E0C80A78](v0, v1, v2, v3, v4, v5, v6, v7);
  v8 = sub_1CFB00C78();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
  v20 = (void *)*MEMORY[0x1E0C99998];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99998];
  v21 = v20;
  sub_1CF980244(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1CFB00D68();
  swift_bridgeObjectRelease();
  v22 = sub_1CFB00C54();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  sub_1CFA728C4(v22, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  if (!v33)
  {
    sub_1CF931B1C((uint64_t)&v33, &qword_1EFBC3E68);
    goto LABEL_4;
  }

  sub_1CF923FD8(&v34, &v35);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_4:
    v26 = 0;
    v28 = 0xE000000000000000;
    goto LABEL_5;
  }
  v23 = v33;
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB34E8]), sel_init);
  v25 = objc_msgSend(v24, sel_stringFromByteCount_, v23);
  v26 = sub_1CFB01A28();
  v28 = v27;

LABEL_5:
  v29 = v26;
  v30 = (void *)v28;
  result.value._object = v30;
  result.value._countAndFlagsBits = v29;
  return result;
}

id URL.count.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t inited;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  __int128 v26;
  __int128 v27;

  v0 = sub_1CFB012CC();
  MEMORY[0x1E0C80A78](v0, v1, v2, v3, v4, v5, v6, v7);
  v8 = sub_1CFB00C78();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3E60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
  v20 = (void *)*MEMORY[0x1E0C99998];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C99998];
  v21 = v20;
  sub_1CF980244(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1CFB00D68();
  swift_bridgeObjectRelease();
  v22 = sub_1CFB00C54();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  sub_1CFA728C4(v22, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (v25)
  {

    sub_1CF923FD8(&v26, &v27);
    if (swift_dynamicCast())
      return v25;
  }
  else
  {
    sub_1CF931B1C((uint64_t)&v25, &qword_1EFBC3E68);
  }
  return 0;
}

id URL.isFileOnDisk.getter()
{
  id v0;
  void *v1;
  id v2;

  sub_1CFB00DD4();
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

void Data.formattedSize.getter(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB34E8]), sel_init);
  objc_msgSend(v3, sel_setAllowedUnits_, 0xFFFFLL);
  objc_msgSend(v3, sel_setCountStyle_, 0);
  __asm { BR              X10 }
}

uint64_t sub_1CFA7686C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v16 = objc_msgSend(v14, sel_stringFromByteCount_, BYTE6(v15));
  v17 = sub_1CFB01A28();

  return v17;
}

uint64_t optionalMax<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  _QWORD v57[2];
  uint64_t v58;
  char *v59;

  v57[1] = a4;
  v58 = a2;
  v59 = a5;
  v7 = sub_1CFB02190();
  v8 = *(_QWORD *)(v7 - 8);
  v16 = MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v16, v19, v20, v21, v22, v23, v24, v25);
  v28 = (char *)v57 - v27;
  v29 = *(_QWORD *)(a3 - 8);
  v37 = MEMORY[0x1E0C80A78](v26, v30, v31, v32, v33, v34, v35, v36);
  v39 = (char *)v57 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37, v40, v41, v42, v43, v44, v45, v46);
  v48 = (char *)v57 - v47;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v49(v28, a1, v7);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v50(v28, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v7);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v59, v58, v7);
  }
  else
  {
    v52 = v28;
    v53 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v53(v48, v52, a3);
    v49(v18, v58, v7);
    if (v50(v18, 1, a3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
      v54 = v59;
      v53(v59, v48, a3);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v54, 0, 1, a3);
    }
    else
    {
      v53(v39, v18, a3);
      v55 = v59;
      sub_1CFB029D0();
      v56 = *(void (**)(char *, uint64_t))(v29 + 8);
      v56(v39, a3);
      v56(v48, a3);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v55, 0, 1, a3);
    }
  }
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_1CFB02190();
  v6[13] = swift_task_alloc();
  v6[14] = *(_QWORD *)(a3 - 8);
  v6[15] = swift_task_alloc();
  v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(_QWORD *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CFA76C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_1CFB01938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1CFB01BCC();
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_1CFB021A8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v11;
    *v11 = v0;
    v11[1] = sub_1CFA76DCC;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_1CFA76DCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1CFA76E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v9;
  _QWORD *v10;
  int *v11;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  sub_1CFB01D40();
  sub_1CFB01D28();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  swift_getAssociatedConformanceWitness();
  sub_1CFB021A8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    v7 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  else
  {
    v9 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
    v11 = (int *)((char *)v9 + *v9);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v10;
    *v10 = v0;
    v10[1] = sub_1CFA76DCC;
    return ((uint64_t (*)(_QWORD, _QWORD))v11)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_1CFA76FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Array.chunked(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[8];
  uint64_t v21;
  uint64_t v22;

  if (a1 < 1)
  {
    sub_1CFB01D40();
    sub_1CFB027FC();
    swift_allocObject();
    v17 = sub_1CFB01CC8();
    *v18 = a2;
    sub_1CFB01D40();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20[7] = 0;
    v21 = MEMORY[0x1D17D8A7C](a2, a3);
    v22 = a1;
    MEMORY[0x1E0C80A78](v21, v6, v7, v8, v9, v10, v11, v12);
    v20[2] = a3;
    v20[3] = a2;
    v20[4] = a1;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3E78);
    v14 = sub_1CFB01D40();
    v15 = sub_1CF931BE4(&qword_1EFBC3E80, &qword_1EFBC3E78, MEMORY[0x1E0DEE898]);
    return sub_1CFA7726C((void (*)(char *, char *))sub_1CFA77F2C, (uint64_t)v20, v13, v14, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
  }
  return v17;
}

uint64_t *sub_1CFA771A8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;

  v5 = *result;
  v6 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t *)MEMORY[0x1D17D8A7C](a2, a4);
    if ((uint64_t)result >= v6)
      v8 = (_QWORD *)v6;
    else
      v8 = result;
    if ((uint64_t)v8 >= v5)
    {
      sub_1CFB01D58();
      v9 = sub_1CFB022B0();
      MEMORY[0x1D17DA600](MEMORY[0x1E0DEBF78], v9);
      result = (uint64_t *)sub_1CFB01D4C();
      *a5 = result;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1CFA7726C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t result;
  char *v90;
  char *v91;
  char *v92;
  _QWORD v93[2];
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v96 = a8;
  v97 = a5;
  v9 = v8;
  v109 = a4;
  v110 = a1;
  v111 = a2;
  v95 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v108 = (char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15, v16, v17, v18);
  v107 = (char *)v93 - v19;
  v101 = v20;
  v22 = v21;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v25, v26, v27, v28, v29, v30, v31);
  v94 = (char *)v93 - v32;
  v33 = sub_1CFB02190();
  v98 = *(_QWORD *)(v33 - 8);
  v99 = v33;
  v41 = MEMORY[0x1E0C80A78](v33, v34, v35, v36, v37, v38, v39, v40);
  v105 = (char *)v93 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v41, v43, v44, v45, v46, v47, v48, v49);
  v52 = (char *)v93 - v51;
  v60 = MEMORY[0x1E0C80A78](v50, v53, v54, v55, v56, v57, v58, v59);
  v93[1] = (char *)v93 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = MEMORY[0x1E0C80A78](v60, v62, v63, v64, v65, v66, v67, v68);
  v104 = *((_QWORD *)v22 - 1);
  MEMORY[0x1E0C80A78](v69, v70, v71, v72, v73, v74, v75, v76);
  v103 = (char *)v93 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = swift_getAssociatedTypeWitness();
  v100 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112, v78, v79, v80, v81, v82, v83, v84);
  v102 = (char *)v93 - v85;
  v86 = v22;
  v87 = sub_1CFB01BD8();
  v113 = sub_1CFB01938();
  v109 = sub_1CFB024E4();
  sub_1CFB0249C();
  (*(void (**)(char *, _QWORD, _QWORD *))(v104 + 16))(v103, v106, v22);
  v88 = v102;
  v106 = v86;
  result = sub_1CFB01BCC();
  if (v87 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v87)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1CFB021A8();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v52, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v110(v52, v108);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v100 + 8))(v88, v112);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v95 + 32))(v96, v108, v97);
        return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v52, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v52, AssociatedTypeWitness);
      sub_1CFB024CC();
      if (!--v87)
      {
        v90 = v105;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v90 = v105;
LABEL_9:
  sub_1CFB021A8();
  v108 = *(char **)(v24 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(v90, 1, AssociatedTypeWitness) == 1)
  {
    v91 = v105;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v100 + 8))(v88, v112);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v91, v99);
    return v113;
  }
  else
  {
    v106 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v92 = v94;
    v91 = v105;
    while (1)
    {
      v106(v92, v91, AssociatedTypeWitness);
      v110(v92, v107);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v92, AssociatedTypeWitness);
      sub_1CFB024CC();
      sub_1CFB021A8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(v91, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v92, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v88, v112);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v95 + 32))(v96, v107, v97);
  }
}

Swift::Bool __swiftcall NSError.userInfoBool(for:)(Swift::String a1)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  char v10;
  __int128 v11;
  __int128 v12;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = objc_msgSend(v1, sel_userInfo);
  v5 = sub_1CFB0195C();

  if (!*(_QWORD *)(v5 + 16))
  {
    v11 = 0u;
    v12 = 0u;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CFA922E4(countAndFlagsBits, (uint64_t)object);
  if ((v7 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1CF94BBF0(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_9:
    sub_1CF931B1C((uint64_t)&v11, (uint64_t *)&unk_1ED904DA0);
    LOBYTE(v8) = 0;
    return v8;
  }
  v8 = swift_dynamicCast();
  if (v8)
    LOBYTE(v8) = v10;
  return v8;
}

Swift::Bool __swiftcall Error.userInfoBool(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  _BYTE v19[16];
  __int128 v20;
  __int128 v21;

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = *(_QWORD *)(v1 - 8);
  ((void (*)(uint64_t, void *))MEMORY[0x1E0C80A78])(a1._countAndFlagsBits, a1._object);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t))(v5 + 16))(v7, v8);
  v9 = sub_1CFB02880();
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v2);
  }
  else
  {
    v10 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v11, v7, v2);
  }
  v12 = (void *)sub_1CFB00D14();

  v13 = objc_msgSend(v12, sel_userInfo);
  v14 = sub_1CFB0195C();

  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CFA922E4(countAndFlagsBits, (uint64_t)object);
    if ((v16 & 1) != 0)
    {
      sub_1CF94BBF0(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v20);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v21 + 1))
  {
    v17 = swift_dynamicCast();
    if (v17)
      LOBYTE(v17) = v19[15];
  }
  else
  {
    sub_1CF931B1C((uint64_t)&v20, (uint64_t *)&unk_1ED904DA0);
    LOBYTE(v17) = 0;
  }
  return v17;
}

unint64_t sub_1CFA77A7C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1D17DA6FC](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1D17DA6FC](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CFA77B04(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
    return sub_1CFB02568();
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v1 = 1 << v5;
  if (v6 < 7)
    return v1;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v3 = 64;
  while (v8)
  {
    v10 = *v9++;
    v2 = v10;
    --v8;
    v3 += 64;
    if (v10)
      return __clz(__rbit64(v2)) + v3;
  }
  return v1;
}

uint64_t sub_1CFA77BC4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_1CFA77C4C(_QWORD *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6;
  char v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;

  v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1CFB025BC();
      sub_1CF9775E8(0, (unint64_t *)&qword_1EFBBDFC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if ((a4 & 1) != 0)
  {
LABEL_10:
    if (sub_1CFB0258C() == *(_DWORD *)(a5 + 36))
    {
      sub_1CFB02598();
      sub_1CF9775E8(0, (unint64_t *)&qword_1EFBBDFC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      v6 = sub_1CFA92994((uint64_t)v13);
      v9 = v8;

      if ((v9 & 1) != 0)
        goto LABEL_12;
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  v10 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * v6);
  v11 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  v12 = v11;
}

id sub_1CFA77E5C(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  id v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    sub_1CF94BBF0(*(_QWORD *)(a5 + 56) + 32 * a2, (uint64_t)result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CFA77EDC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA72F54(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1CFA77EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC3E58;
  if (!qword_1EFBC3E58)
  {
    v1 = sub_1CFB00F54();
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC3E58);
  }
  return result;
}

uint64_t *sub_1CFA77F2C@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;

  return sub_1CFA771A8(a1, v2[3], v2[4], v2[2], a2);
}

uint64_t dispatch thunk of NSXPCConnectionProtocol.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NSXPCConnectionProtocol.isEntitled(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1CFA77F5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBC3E90);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CFA77FC0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBC3E90);
  return sub_1CFB01D94();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t dispatch thunk of static DateProvider.now.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1CFA78024()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)MEMORY[0x1D17D9F1C]();
  sub_1CFA781D0(&v1);
  objc_autoreleasePoolPop(v0);
  qword_1ED902F60 = v1;
}

uint64_t static DIPFeatures.sharedInstance.getter()
{
  if (qword_1ED903180 != -1)
    swift_once();
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t static DIPFeatures.sharedInstance.setter(uint64_t a1)
{
  if (qword_1ED903180 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED902F60 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*static DIPFeatures.sharedInstance.modify())()
{
  if (qword_1ED903180 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for DIPFeatures()
{
  return &type metadata for DIPFeatures;
}

void sub_1CFA781D0(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void (*v68)(char *, uint64_t);
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t *v72;
  id v73;
  uint64_t v74;
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  id v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  NSObject *v89;
  os_log_type_t v90;
  BOOL v91;
  uint8_t *v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  id v101;
  uint64_t *v102;
  id v103;
  void *v104;

  v102 = a1;
  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  v11 = MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v11, v14, v15, v16, v17, v18, v19, v20);
  v23 = (char *)&v97 - v22;
  v31 = MEMORY[0x1E0C80A78](v21, v24, v25, v26, v27, v28, v29, v30);
  v33 = (char *)&v97 - v32;
  v41 = MEMORY[0x1E0C80A78](v31, v34, v35, v36, v37, v38, v39, v40);
  v43 = (char *)&v97 - v42;
  v51 = MEMORY[0x1E0C80A78](v41, v44, v45, v46, v47, v48, v49, v50);
  v53 = (char *)&v97 - v52;
  MEMORY[0x1E0C80A78](v51, v54, v55, v56, v57, v58, v59, v60);
  v62 = (char *)&v97 - v61;
  if (qword_1ED904378 != -1)
    swift_once();
  if (!qword_1ED904368)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v81 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v62, v81, v2);
    v82 = sub_1CFB012B4();
    v83 = sub_1CFB01FEC();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v84 = 0;
      _os_log_impl(&dword_1CF917000, v82, v83, "no settings bundle created", v84, 2u);
      MEMORY[0x1D17DA6E4](v84, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v62, v2);
    goto LABEL_27;
  }
  v63 = (id)qword_1ED904368;
  if ((objc_msgSend(v63, sel_load) & 1) == 0)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v85 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v85, v2);
    v86 = sub_1CFB012B4();
    v87 = sub_1CFB01FEC();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_1CF917000, v86, v87, "failed loading Features", v88, 2u);
      MEMORY[0x1D17DA6E4](v88, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
LABEL_27:
    v74 = 0;
    v72 = v102;
    goto LABEL_35;
  }
  v98 = v23;
  v100 = v1;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v101 = v63;
  v64 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v99 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v99(v53, v64, v2);
  v65 = sub_1CFB012B4();
  v66 = sub_1CFB01FEC();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v67 = 0;
    _os_log_impl(&dword_1CF917000, v65, v66, "successfully loaded Settings Bundle from Preferences", v67, 2u);
    MEMORY[0x1D17DA6E4](v67, -1, -1);
  }

  v68 = *(void (**)(char *, uint64_t))(v3 + 8);
  v68(v53, v2);
  v69 = (void *)sub_1CFB01A04();
  v70 = objc_msgSend(v101, sel_classNamed_, v69);

  if (!v70)
  {
    v99(v43, v64, v2);
    v89 = sub_1CFB012B4();
    v90 = sub_1CFB01FBC();
    v91 = os_log_type_enabled(v89, v90);
    v72 = v102;
    if (v91)
    {
      v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v92 = 0;
      _os_log_impl(&dword_1CF917000, v89, v90, "could not find class for Features", v92, 2u);
      MEMORY[0x1D17DA6E4](v92, -1, -1);
    }

    v93 = v43;
    goto LABEL_34;
  }
  swift_getObjCClassMetadata();
  sub_1CFA101C4();
  v71 = swift_dynamicCastMetatype();
  v72 = v102;
  if (!v71)
  {
    v99(v33, v64, v2);
    v94 = sub_1CFB012B4();
    v95 = sub_1CFB01FEC();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v96 = 0;
      _os_log_impl(&dword_1CF917000, v94, v95, "Unable to instantiate class for Features", v96, 2u);
      MEMORY[0x1D17DA6E4](v96, -1, -1);
    }

    v93 = v33;
LABEL_34:
    v68(v93, v2);
    v74 = 0;
    goto LABEL_35;
  }
  v73 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v104 = &unk_1EFBF38D0;
  v74 = swift_dynamicCastObjCProtocolConditional();
  if (v74)
  {
    v75 = v98;
    v99(v98, v64, v2);
    v76 = sub_1CFB012B4();
    v77 = sub_1CFB01FEC();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v99 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      *(_DWORD *)v78 = 138543362;
      if (qword_1ED904DB0 != -1)
        swift_once();
      v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, byte_1ED907588);
      v103 = v79;
      sub_1CFB021C0();
      v80 = v99;
      *(_QWORD *)v99 = v79;
      _os_log_impl(&dword_1CF917000, v76, v77, "Features i = %{public}@", v78, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904380);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v80, -1, -1);
      MEMORY[0x1D17DA6E4](v78, -1, -1);
      v75 = v98;
    }

    v68(v75, v2);
  }
  else
  {

  }
LABEL_35:
  *v72 = v74;
}

uint64_t *ISO18013DeviceAuthentication.sessionTranscript.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = v1[5];
  v13 = v1[4];
  v2 = v13;
  v14 = v3;
  v5 = v1[7];
  v15 = v1[6];
  v4 = v15;
  v16 = v5;
  v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  v8 = v1[3];
  v11 = v1[2];
  v7 = v11;
  v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_1CFA78E84((uint64_t *)v10, (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA394CC);
}

uint64_t ISO18013DeviceAuthentication.docType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013DeviceAuthentication.deviceNamespaceBytes.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = v1[19];
  v3 = v1[20];
  v4 = v1[21];
  *a1 = v1[18];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  sub_1CF9239E0(v2, v3);
  return swift_bridgeObjectRetain();
}

__n128 ISO18013DeviceAuthentication.init(sessionTranscript:docType:deviceNamespaceBytes:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  __n128 result;

  v5 = a1[5];
  *(_OWORD *)(a5 + 64) = a1[4];
  *(_OWORD *)(a5 + 80) = v5;
  v6 = a1[7];
  *(_OWORD *)(a5 + 96) = a1[6];
  *(_OWORD *)(a5 + 112) = v6;
  v7 = a1[1];
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v7;
  v8 = a1[3];
  *(_OWORD *)(a5 + 32) = a1[2];
  *(_OWORD *)(a5 + 48) = v8;
  v9 = a4[1].n128_u64[0];
  v10 = a4[1].n128_u64[1];
  *(_QWORD *)(a5 + 128) = a2;
  *(_QWORD *)(a5 + 136) = a3;
  result = *a4;
  *(__n128 *)(a5 + 144) = *a4;
  *(_QWORD *)(a5 + 160) = v9;
  *(_QWORD *)(a5 + 168) = v10;
  return result;
}

uint64_t *ISO18013DeviceAuthentication.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[8];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[24];
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  sub_1CFB0282C();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  sub_1CFA78E40();
  sub_1CFB02838();
  v40 = v48;
  v41 = v49;
  v42 = v50;
  v43 = v51;
  v36 = v44;
  v37 = v45;
  v38 = v46;
  v39 = v47;
  v54 = v44;
  v55 = v45;
  v56 = v46;
  v57 = v47;
  v60 = v50;
  v61 = v51;
  v58 = v48;
  v59 = v49;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  sub_1CFA78E84((uint64_t *)&v36, (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA394CC);
  v5 = sub_1CFB0282C();
  v7 = v6;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2880);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v52, v53);
  sub_1CFA793EC(&qword_1EFBC2888, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
  swift_bridgeObjectRetain();
  sub_1CFB02838();
  v9 = *((_QWORD *)&v34 + 1);
  v62 = v34;
  v10 = v35;
  sub_1CF9239E0(*((uint64_t *)&v34 + 1), v35);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v21 = v40;
  v22 = v41;
  v23 = v42;
  v24 = v43;
  v17 = v36;
  v18 = v37;
  v19 = v38;
  v20 = v39;
  *(_QWORD *)&v25 = v8;
  *((_QWORD *)&v25 + 1) = v7;
  v26 = v34;
  v27 = v35;
  sub_1CFA79014((uint64_t *)&v17);
  sub_1CF923A24(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CFA78E84((uint64_t *)&v36, (void (*)(void))sub_1CF923A24, (void (*)(uint64_t, uint64_t))sub_1CF931AB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3B310, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA78FC0);
  v11 = v26;
  a2[8] = v25;
  a2[9] = v11;
  a2[10] = v27;
  v12 = v22;
  a2[4] = v21;
  a2[5] = v12;
  v13 = v24;
  a2[6] = v23;
  a2[7] = v13;
  v14 = v18;
  *a2 = v17;
  a2[1] = v14;
  v15 = v20;
  a2[2] = v19;
  a2[3] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28[4] = v58;
  v28[5] = v59;
  v28[6] = v60;
  v28[7] = v61;
  v28[0] = v54;
  v28[1] = v55;
  v28[2] = v56;
  v28[3] = v57;
  v29 = v8;
  v30 = v7;
  v31 = v62;
  v32 = v9;
  v33 = v10;
  return sub_1CFA790F8((uint64_t *)v28);
}

unint64_t sub_1CFA78E40()
{
  unint64_t result;

  result = qword_1EFBC3F00;
  if (!qword_1EFBC3F00)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013SessionTranscript, &type metadata for ISO18013SessionTranscript);
    atomic_store(result, (unint64_t *)&qword_1EFBC3F00);
  }
  return result;
}

uint64_t *sub_1CFA78E84(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[11];
  v11 = a1[12];
  v12 = a1[13];
  v13 = a1[14];
  v14 = a1[15];
  sub_1CFA78F30(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3, a4);
  a5(v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_1CFA78F30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), void (*a10)(uint64_t, uint64_t), uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;

  if (a2 >> 60 != 15)
  {
    a9();
    a10(a3, a4);
    return a11(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1CFA78FC0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a4)
  {
    sub_1CF923A24(result, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1CF923A24(a7, a8);
  }
  return result;
}

uint64_t *sub_1CFA79014(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v11 = a1[20];
  v12 = a1[19];
  sub_1CFA78F30(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C);
  sub_1CFA394CC(v2, v3, v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v12, v11);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1CFA790F8(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  v9 = a1[15];
  v11 = a1[20];
  v12 = a1[19];
  sub_1CFA78F30(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1CF923A24, (void (*)(uint64_t, uint64_t))sub_1CF931AB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3B310);
  sub_1CFA78FC0(v2, v3, v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  sub_1CF923A24(v12, v11);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t ISO18013DeviceAuthentication.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v1 + 160);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFB0285C();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFA793A8();
    sub_1CFB02868();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1CFB0285C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC2880);
    sub_1CFA793EC(&qword_1EFBC28A0, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
    sub_1CFB02868();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

unint64_t sub_1CFA793A8()
{
  unint64_t result;

  result = qword_1EFBC3F08[0];
  if (!qword_1EFBC3F08[0])
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013SessionTranscript, &type metadata for ISO18013SessionTranscript);
    atomic_store(result, qword_1EFBC3F08);
  }
  return result;
}

uint64_t sub_1CFA793EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC2880);
    result = MEMORY[0x1D17DA600](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1CFA79430@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ISO18013DeviceAuthentication.init(from:)(a1, a2);
}

uint64_t sub_1CFA79444(_QWORD *a1)
{
  return ISO18013DeviceAuthentication.encode(to:)(a1);
}

uint64_t destroy for ISO18013DeviceAuthentication(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_1CF923A24(*a1, v2);
    v3 = a1[3];
    if (v3 >> 60 != 15)
      sub_1CF923A24(a1[2], v3);
    v4 = a1[5];
    if (v4 >> 60 != 15)
    {
      sub_1CF923A24(a1[4], v4);
      v5 = a1[7];
      if (v5 >> 60 != 15)
        sub_1CF923A24(a1[6], v5);
    }
  }
  if (a1[11])
  {
    sub_1CF923A24(a1[8], a1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CF923A24(a1[14], a1[15]);
  }
  swift_bridgeObjectRelease();
  sub_1CF923A24(a1[19], a1[20]);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO18013DeviceAuthentication(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
  else
  {
    v8 = *a2;
    sub_1CF9239E0(*a2, a2[1]);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v4;
    v9 = a2 + 2;
    v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      v11 = *v9;
      sub_1CF9239E0(*v9, a2[3]);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v10;
    }
    v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      v14 = a2[4];
      sub_1CF9239E0(v14, a2[5]);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = a2 + 6;
      v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
      else
      {
        v22 = *v15;
        sub_1CF9239E0(*v15, a2[7]);
        *(_QWORD *)(a1 + 48) = v22;
        *(_QWORD *)(a1 + 56) = v16;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
LABEL_14:
      v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      goto LABEL_15;
    }
    v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
LABEL_12:
  v17 = a2[8];
  v18 = a2[9];
  sub_1CF9239E0(v17, v18);
  *(_QWORD *)(a1 + 64) = v17;
  *(_QWORD *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = v7;
  v19 = a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v19;
  v20 = a2[14];
  v21 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v20, v21);
  *(_QWORD *)(a1 + 112) = v20;
  *(_QWORD *)(a1 + 120) = v21;
LABEL_15:
  v25 = a2[17];
  *(_QWORD *)(a1 + 128) = a2[16];
  *(_QWORD *)(a1 + 136) = v25;
  v26 = a2[19];
  *(_QWORD *)(a1 + 144) = a2[18];
  v27 = a2[20];
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v26, v27);
  *(_QWORD *)(a1 + 152) = v26;
  *(_QWORD *)(a1 + 160) = v27;
  *(_QWORD *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO18013DeviceAuthentication(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      v5 = *a2;
      v6 = a2[1];
      v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    v11 = *(_QWORD *)a2;
    sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v4;
    v12 = (uint64_t *)(a2 + 1);
    v13 = *((_QWORD *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      v20 = *v12;
      sub_1CF9239E0(*v12, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v13;
    }
    v21 = *((_QWORD *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    v29 = *((_QWORD *)a2 + 4);
    sub_1CF9239E0(v29, v21);
    *(_QWORD *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v21;
    v30 = a2 + 3;
    v31 = *((_QWORD *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    v33 = *(_QWORD *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
    v8 = a2[3];
    v10 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)a2;
  sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1CF923A24(v15, v16);
  v17 = (uint64_t *)(a2 + 1);
  v18 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  v23 = *v17;
  sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v18;
  sub_1CF923A24(v24, v25);
LABEL_18:
  v26 = (_OWORD *)(a1 + 32);
  v27 = a2 + 2;
  v21 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      v28 = a2[3];
      *v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    v32 = a2[3];
    *v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  v34 = *((_QWORD *)a2 + 4);
  sub_1CF9239E0(v34, *((_QWORD *)a2 + 5));
  v35 = *(_QWORD *)(a1 + 32);
  v36 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v34;
  *(_QWORD *)(a1 + 40) = v21;
  sub_1CF923A24(v35, v36);
  v37 = (uint64_t *)(a2 + 3);
  v31 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      v33 = *v37;
LABEL_26:
      sub_1CF9239E0(v33, v31);
      *(_QWORD *)(a1 + 48) = v33;
      *(_QWORD *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  v38 = *v37;
  sub_1CF9239E0(*v37, *((_QWORD *)a2 + 7));
  v39 = *(_QWORD *)(a1 + 48);
  v40 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v38;
  *(_QWORD *)(a1 + 56) = v31;
  sub_1CF923A24(v39, v40);
LABEL_34:
  v41 = (_OWORD *)(a1 + 64);
  v42 = a2 + 4;
  v43 = *((_QWORD *)a2 + 11);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v43)
    {
      v44 = *((_QWORD *)a2 + 8);
      v45 = *((_QWORD *)a2 + 9);
      sub_1CF9239E0(v44, v45);
      v46 = *(_QWORD *)(a1 + 64);
      v47 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v44;
      *(_QWORD *)(a1 + 72) = v45;
      sub_1CF923A24(v46, v47);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v48 = *((_QWORD *)a2 + 14);
      v49 = *((_QWORD *)a2 + 15);
      sub_1CF9239E0(v48, v49);
      v50 = *(_QWORD *)(a1 + 112);
      v51 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v48;
      *(_QWORD *)(a1 + 120) = v49;
      sub_1CF923A24(v50, v51);
    }
    else
    {
      sub_1CFA3BAD0(a1 + 64);
      v56 = a2[7];
      v58 = *v42;
      v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    v52 = *((_QWORD *)a2 + 8);
    v53 = *((_QWORD *)a2 + 9);
    sub_1CF9239E0(v52, v53);
    *(_QWORD *)(a1 + 64) = v52;
    *(_QWORD *)(a1 + 72) = v53;
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    v54 = *((_QWORD *)a2 + 14);
    v55 = *((_QWORD *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF9239E0(v54, v55);
    *(_QWORD *)(a1 + 112) = v54;
    *(_QWORD *)(a1 + 120) = v55;
  }
  else
  {
    v59 = *v42;
    v60 = a2[5];
    v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
  v62 = *((_QWORD *)a2 + 19);
  v63 = *((_QWORD *)a2 + 20);
  sub_1CF9239E0(v62, v63);
  v64 = *(_QWORD *)(a1 + 152);
  v65 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = v62;
  *(_QWORD *)(a1 + 160) = v63;
  sub_1CF923A24(v64, v65);
  *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ISO18013DeviceAuthentication(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1CF923A24(v8, v4);
  v9 = (_OWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  if (v10 >> 60 == 15)
    goto LABEL_8;
  v11 = *(_QWORD *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 24) = v11;
  sub_1CF923A24(v12, v10);
LABEL_10:
  v13 = *(_QWORD *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v14;
  sub_1CF923A24(v16, v13);
  v17 = (_OWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  if (v18 >> 60 == 15)
    goto LABEL_17;
  v19 = *(_QWORD *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  v20 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 56) = v19;
  sub_1CF923A24(v20, v18);
LABEL_19:
  if (!*(_QWORD *)(a1 + 88))
  {
LABEL_23:
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    goto LABEL_24;
  }
  v21 = *(_QWORD *)(a2 + 88);
  if (!v21)
  {
    sub_1CFA3BAD0(a1 + 64);
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1CF923A24(v22, v23);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1CF923A24(v25, v26);
LABEL_24:
  v29 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 160);
  v31 = *(_QWORD *)(a1 + 152);
  v32 = *(_QWORD *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v30;
  sub_1CF923A24(v31, v32);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013DeviceAuthentication(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013DeviceAuthentication(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 136) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013DeviceAuthentication()
{
  return &type metadata for ISO18013DeviceAuthentication;
}

uint64_t static KeystoreKeychainProtocol.queryKeychainCertificate(label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  const void *v12;
  CFTypeID v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v20[0] = 0;
  v9 = sub_1CFB01A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a4 + 32))(a1, a2, v9, v10, v20, a3, a4);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (!v20[0])
  {
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    v18 = 0xD0000000000000ECLL;
    v19 = 0x80000001CFB2F7C0;
    sub_1CFB01B30();
    v14 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001CFB2F7C0, (__int16 *)&v18, 0, v14, 0xD000000000000061, 0x80000001CFB2F7F0, v15, 0xD000000000000020, 0x80000001CFB2F860, 35);
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  v12 = (const void *)swift_unknownObjectRetain();
  v13 = CFGetTypeID(v12);
  if (v13 != SecCertificateGetTypeID())
  {
    v18 = 236;
    v19 = 0xE000000000000000;
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CFB01B30();
    v16 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0, 0xE000000000000000, (__int16 *)&v18, 0, v16, 0xD000000000000061, 0x80000001CFB2F7F0, v17, 0xD000000000000020, 0x80000001CFB2F860, 40);
    swift_willThrow();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  type metadata accessor for SecCertificate(0);
  return swift_dynamicCastUnknownClassUnconditional();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.storeKeychainCertificate(_:label:failIfDuplicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.storeKeychainKey(_:label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.deleteKeychainItem(label:serialNumber:secClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.queryKeychainItem(label:secClass:item:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

_BYTE *MobileAssetInfo.init(assetType:filters:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1CFA7A1AC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CFA7A1B4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFA7A1E8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFA7A228(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFA7A260(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CFA7A2A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MobileAssetInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MobileAssetInfo);
}

uint64_t VICALDocument.version.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALDocument.vicalProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALDocument.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VICALDocument(0) + 24);
  v4 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for VICALDocument(uint64_t a1)
{
  return sub_1CF92F550(a1, qword_1EFBC4090);
}

uint64_t VICALDocument.vicalIssuerID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VICALDocument(0) + 28));
}

uint64_t VICALDocument.nextUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VICALDocument(0) + 32);
  return sub_1CF9C1B08(v3, a1);
}

uint64_t VICALDocument.certificateInfos.getter()
{
  type metadata accessor for VICALDocument(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CFA7A420()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA7A450 + 4 * byte_1CFB1B6C0[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_1CFA7A450()
{
  return 0x6F72506C61636976;
}

uint64_t sub_1CFA7A474()
{
  return 1702125924;
}

uint64_t sub_1CFA7A484()
{
  return 0x7373496C61636976;
}

uint64_t sub_1CFA7A4A8()
{
  return 0x616470557478656ELL;
}

unint64_t sub_1CFA7A4C4()
{
  return 0xD000000000000010;
}

uint64_t sub_1CFA7A4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFA7E440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFA7A504()
{
  sub_1CFA7A7B8();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7A52C()
{
  sub_1CFA7A7B8();
  return sub_1CFB02B80();
}

uint64_t VICALDocument.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[2];
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3F90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA7A7B8();
  sub_1CFB02B5C();
  v24 = 0;
  sub_1CFB02790();
  if (!v2)
  {
    v23 = 1;
    sub_1CFB02790();
    v16 = type metadata accessor for VICALDocument(0);
    v22 = 2;
    sub_1CFB00F54();
    sub_1CF920A48(&qword_1EFBC05C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1CFB027CC();
    v21 = 3;
    sub_1CFB02778();
    v20 = 4;
    sub_1CFB02784();
    v18[1] = *(_QWORD *)(v3 + *(int *)(v16 + 36));
    v19 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FA0);
    sub_1CFA7ACAC(&qword_1EFBC3FA8, &qword_1EFBC3FB0, (uint64_t)&protocol conformance descriptor for VICALCertificateInfo, MEMORY[0x1E0DEAF10]);
    sub_1CFB027CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1CFA7A7B8()
{
  unint64_t result;

  result = qword_1EFBC3F98;
  if (!qword_1EFBC3F98)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BC70, &type metadata for VICALDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3F98);
  }
  return result;
}

uint64_t type metadata accessor for VICALCertificateInfo(uint64_t a1)
{
  return sub_1CF92F550(a1, qword_1EFBC4130);
}

uint64_t VICALDocument.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  _QWORD v56[2];
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v58 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CFB00F54();
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16, v17, v18, v19);
  v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FB8);
  v22 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61, v23, v24, v25, v26, v27, v28, v29);
  v31 = (char *)v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (int *)type metadata accessor for VICALDocument(0);
  MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
  v41 = (_QWORD *)((char *)v56 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v42);
  sub_1CFA7A7B8();
  v43 = v63;
  sub_1CFB02B2C();
  if (v43)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  v44 = v21;
  v63 = v22;
  v46 = v59;
  v45 = v60;
  v70 = 0;
  v47 = (uint64_t)v41;
  *v41 = sub_1CFB026E8();
  v41[1] = v48;
  v69 = 1;
  v41[2] = sub_1CFB026E8();
  v41[3] = v49;
  v68 = 2;
  v50 = sub_1CF920A48(&qword_1EFBC05A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1CFB02724();
  v56[1] = v50;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))((char *)v41 + v32[6], v44, v45);
  v67 = 3;
  v51 = sub_1CFB026D0();
  v52 = (char *)v41 + v32[7];
  *(_QWORD *)v52 = v51;
  v52[8] = v53 & 1;
  v66 = 4;
  v54 = (uint64_t)v58;
  sub_1CFB026DC();
  sub_1CF9BEC60(v54, v47 + v32[8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FA0);
  v65 = 5;
  sub_1CFA7ACAC(&qword_1EFBC3FC0, &qword_1EFBC3FC8, (uint64_t)&protocol conformance descriptor for VICALCertificateInfo, MEMORY[0x1E0DEAF40]);
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v61);
  *(_QWORD *)(v47 + v32[9]) = v64;
  sub_1CF92F584(v47, v57, type metadata accessor for VICALDocument);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return sub_1CF931994(v47, type metadata accessor for VICALDocument);
}

uint64_t sub_1CFA7AC6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CFA7ACAC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC3FA0);
    v10 = sub_1CF920A48(a2, type metadata accessor for VICALCertificateInfo, a3);
    result = MEMORY[0x1D17DA600](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CFA7AD30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VICALDocument.init(from:)(a1, a2);
}

uint64_t sub_1CFA7AD44(_QWORD *a1)
{
  return VICALDocument.encode(to:)(a1);
}

uint64_t VICALCertificateInfo.certificate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1CF9239E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t VICALCertificateInfo.serialNumber.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = v1[3];
  v3 = v1[4];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  return sub_1CF9239E0(v2, v3);
}

uint64_t VICALCertificateInfo.subjectKeyIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t VICALCertificateInfo.docType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VICALCertificateInfo.certificateProfile.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VICALCertificateInfo.issuingAuthority.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.issuingCountry.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.stateOrProvinceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.issuer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_1CF92F5C8(v1, *(_QWORD *)(v0 + 128));
  return v1;
}

uint64_t VICALCertificateInfo.subject.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  sub_1CF92F5C8(v1, *(_QWORD *)(v0 + 144));
  return v1;
}

uint64_t VICALCertificateInfo.notBefore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 56);
  return sub_1CF9C1B08(v3, a1);
}

uint64_t VICALCertificateInfo.notAfter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 60);
  return sub_1CF9C1B08(v3, a1);
}

uint64_t VICALCertificateInfo.extensions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 64));
  *a1 = v3;
  return sub_1CFA7AF50(v3);
}

uint64_t sub_1CFA7AF50(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t VICALCertificateInfo.Extensions.certificateRevocationList.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1CFA7AF68()
{
  return 0xD000000000000019;
}

uint64_t sub_1CFA7AF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFA7E700(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CFA7AFAC()
{
  sub_1CFA7B11C();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7AFD4()
{
  sub_1CFA7B11C();
  return sub_1CFB02B80();
}

uint64_t VICALCertificateInfo.Extensions.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA7B11C();
  sub_1CFB02B5C();
  v16[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FE0);
  sub_1CFA7B2E4(&qword_1EFBC3FE8, (uint64_t (*)(void))sub_1CFA7B160, MEMORY[0x1E0DEAF10]);
  sub_1CFB02784();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1CFA7B11C()
{
  unint64_t result;

  result = qword_1EFBC3FD8;
  if (!qword_1EFBC3FD8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BC20, &type metadata for VICALCertificateInfo.Extensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC3FD8);
  }
  return result;
}

unint64_t sub_1CFA7B160()
{
  unint64_t result;

  result = qword_1EFBC3FF0;
  if (!qword_1EFBC3FF0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for BigUIntCBOR, &type metadata for BigUIntCBOR);
    atomic_store(result, (unint64_t *)&qword_1EFBC3FF0);
  }
  return result;
}

uint64_t VICALCertificateInfo.Extensions.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA7B11C();
  sub_1CFB02B2C();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3FE0);
    sub_1CFA7B2E4(&qword_1EFBC4000, (uint64_t (*)(void))sub_1CFA7B34C, MEMORY[0x1E0DEAF40]);
    sub_1CFB026DC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    *a2 = v17[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CFA7B2E4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC3FE0);
    v8 = a2();
    result = MEMORY[0x1D17DA600](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CFA7B34C()
{
  unint64_t result;

  result = qword_1EFBC4008;
  if (!qword_1EFBC4008)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for BigUIntCBOR, &type metadata for BigUIntCBOR);
    atomic_store(result, (unint64_t *)&qword_1EFBC4008);
  }
  return result;
}

uint64_t sub_1CFA7B390(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA7B3CC + 4 * byte_1CFB1B6C6[a1]))(0x6369666974726563, 0xEB00000000657461);
}

uint64_t sub_1CFA7B3CC()
{
  return 0x754E6C6169726573;
}

uint64_t sub_1CFA7B3EC()
{
  return 6908787;
}

uint64_t sub_1CFA7B3FC()
{
  return 0x65707954636F64;
}

unint64_t sub_1CFA7B414()
{
  return 0xD000000000000012;
}

uint64_t sub_1CFA7B48C()
{
  return 0x726575737369;
}

uint64_t sub_1CFA7B4A0()
{
  return 0x7463656A627573;
}

uint64_t sub_1CFA7B4B8()
{
  return 0x726F666542746F6ELL;
}

uint64_t sub_1CFA7B4D4()
{
  return 0x7265746641746F6ELL;
}

uint64_t sub_1CFA7B4EC()
{
  return 0x6F69736E65747865;
}

uint64_t sub_1CFA7B508(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA7B544 + 4 * byte_1CFB1B6D3[a1]))(0x6369666974726563, 0xEB00000000657461);
}

uint64_t sub_1CFA7B544()
{
  return 0x754E6C6169726573;
}

uint64_t sub_1CFA7B564()
{
  return 6908787;
}

uint64_t sub_1CFA7B574()
{
  return 0x65707954636F64;
}

unint64_t sub_1CFA7B58C()
{
  return 0xD000000000000012;
}

uint64_t sub_1CFA7B604()
{
  return 0x726575737369;
}

uint64_t sub_1CFA7B618()
{
  return 0x7463656A627573;
}

uint64_t sub_1CFA7B630()
{
  return 0x726F666542746F6ELL;
}

uint64_t sub_1CFA7B64C()
{
  return 0x7265746641746F6ELL;
}

uint64_t sub_1CFA7B664()
{
  return 0x6F69736E65747865;
}

uint64_t sub_1CFA7B680@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return VICALCertificateInfo.Extensions.init(from:)(a1, a2);
}

uint64_t sub_1CFA7B694(_QWORD *a1)
{
  return VICALCertificateInfo.Extensions.encode(to:)(a1);
}

uint64_t sub_1CFA7B6A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1CFA7B390(*a1);
  v5 = v4;
  if (v3 == sub_1CFA7B390(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1CFB028B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1CFA7B730()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1CFB02A90();
  sub_1CFA7B390(v1);
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7B790()
{
  unsigned __int8 *v0;

  sub_1CFA7B390(*v0);
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA7B7D0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1CFB02A90();
  sub_1CFA7B390(v1);
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7B82C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA7E784();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA7B858@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CFA7B390(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CFA7B880()
{
  unsigned __int8 *v0;

  return sub_1CFA7B508(*v0);
}

uint64_t sub_1CFA7B888@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA7E784();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA7B8AC()
{
  sub_1CFA7BD08();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7B8D4()
{
  sub_1CFA7BD08();
  return sub_1CFB02B80();
}

uint64_t VICALCertificateInfo.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4010);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA7BD08();
  sub_1CFB02B5C();
  v19 = *v3;
  v21 = 0;
  sub_1CF9319D0();
  sub_1CFB027CC();
  if (!v2)
  {
    v16 = *((_QWORD *)v3 + 4);
    v19 = v3[1];
    v20 = v16;
    v21 = 1;
    sub_1CFA7B160();
    sub_1CFB027CC();
    v19 = *(__int128 *)((char *)v3 + 40);
    v21 = 2;
    sub_1CFB027CC();
    *(_QWORD *)&v19 = *((_QWORD *)v3 + 7);
    v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
    sub_1CF9C18F8(&qword_1ED903950, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1CFB027CC();
    *(_QWORD *)&v19 = *((_QWORD *)v3 + 8);
    v21 = 4;
    sub_1CFB02784();
    LOBYTE(v19) = 5;
    sub_1CFB02754();
    LOBYTE(v19) = 6;
    sub_1CFB02754();
    LOBYTE(v19) = 7;
    sub_1CFB02754();
    v19 = *(__int128 *)((char *)v3 + 120);
    v21 = 8;
    sub_1CFB02784();
    v19 = *(__int128 *)((char *)v3 + 136);
    v21 = 9;
    sub_1CFB02784();
    v17 = type metadata accessor for VICALCertificateInfo(0);
    LOBYTE(v19) = 10;
    sub_1CFB00F54();
    sub_1CF920A48(&qword_1EFBC05C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1CFB02784();
    LOBYTE(v19) = 11;
    sub_1CFB02784();
    *(_QWORD *)&v19 = *(_QWORD *)((char *)v3 + *(int *)(v17 + 64));
    v21 = 12;
    sub_1CFA7BD4C();
    sub_1CFB02784();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1CFA7BD08()
{
  unint64_t result;

  result = qword_1EFBC4018;
  if (!qword_1EFBC4018)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BBD0, &type metadata for VICALCertificateInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4018);
  }
  return result;
}

unint64_t sub_1CFA7BD4C()
{
  unint64_t result;

  result = qword_1EFBC4020;
  if (!qword_1EFBC4020)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for VICALCertificateInfo.Extensions, &type metadata for VICALCertificateInfo.Extensions);
    atomic_store(result, (unint64_t *)&qword_1EFBC4020);
  }
  return result;
}

uint64_t VICALCertificateInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  char v59;

  v52 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  v12 = MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v49 - v22;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4028);
  MEMORY[0x1E0C80A78](v54, v24, v25, v26, v27, v28, v29, v30);
  v32 = (char *)&v49 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (int *)type metadata accessor for VICALCertificateInfo(0);
  MEMORY[0x1E0C80A78](v33, v34, v35, v36, v37, v38, v39, v40);
  v55 = a1;
  v56 = (_OWORD *)((char *)&v49 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFA7BD08();
  v53 = v32;
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v50 = v14;
  v51 = v23;
  v59 = 0;
  sub_1CF92399C();
  sub_1CFB02724();
  v42 = v56;
  *v56 = v57;
  v59 = 1;
  sub_1CFA7B34C();
  sub_1CFB02724();
  v43 = v58;
  v42[1] = v57;
  *((_QWORD *)v42 + 4) = v43;
  v59 = 2;
  sub_1CFB02724();
  *(_OWORD *)((char *)v42 + 40) = v57;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  v59 = 3;
  v49 = sub_1CF9C18F8(&qword_1ED903150, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1CFB02724();
  *((_QWORD *)v42 + 7) = v57;
  v59 = 4;
  sub_1CFB026DC();
  *((_QWORD *)v42 + 8) = v57;
  LOBYTE(v57) = 5;
  *((_QWORD *)v42 + 9) = sub_1CFB026AC();
  *((_QWORD *)v42 + 10) = v44;
  LOBYTE(v57) = 6;
  *((_QWORD *)v42 + 11) = sub_1CFB026AC();
  *((_QWORD *)v42 + 12) = v45;
  LOBYTE(v57) = 7;
  *((_QWORD *)v42 + 13) = sub_1CFB026AC();
  *((_QWORD *)v42 + 14) = v46;
  v59 = 8;
  sub_1CFB026DC();
  *(_OWORD *)((char *)v42 + 120) = v57;
  v59 = 9;
  sub_1CFB026DC();
  *(_OWORD *)((char *)v56 + 136) = v57;
  sub_1CFB00F54();
  LOBYTE(v57) = 10;
  sub_1CF920A48(&qword_1EFBC05A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1CFB026DC();
  sub_1CF9BEC60((uint64_t)v51, (uint64_t)v56 + v33[14]);
  LOBYTE(v57) = 11;
  sub_1CFB026DC();
  sub_1CF9BEC60((uint64_t)v50, (uint64_t)v56 + v33[15]);
  v59 = 12;
  sub_1CFA7C508();
  sub_1CFB026DC();
  MEMORY[8](v53, v54);
  v47 = (uint64_t)v56;
  *(_QWORD *)((char *)v56 + v33[16]) = v57;
  sub_1CF92F584(v47, v52, type metadata accessor for VICALCertificateInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  return sub_1CF931994(v47, type metadata accessor for VICALCertificateInfo);
}

unint64_t sub_1CFA7C508()
{
  unint64_t result;

  result = qword_1EFBC4030;
  if (!qword_1EFBC4030)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for VICALCertificateInfo.Extensions, &type metadata for VICALCertificateInfo.Extensions);
    atomic_store(result, (unint64_t *)&qword_1EFBC4030);
  }
  return result;
}

uint64_t sub_1CFA7C54C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VICALCertificateInfo.init(from:)(a1, a2);
}

uint64_t sub_1CFA7C560(_QWORD *a1)
{
  return VICALCertificateInfo.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for VICALDocument(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = *((_QWORD *)a2 + 3);
    a1[2] = *((_QWORD *)a2 + 2);
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = &a2[v9];
    v12 = sub_1CFB00F54();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v10, v11, v12);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)v4 + v15;
    v18 = &a2[v15];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = (char *)v4 + v16;
    v20 = &a2[v16];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v16], 1, v12))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v14(v19, v20, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
    }
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)&a2[a3[9]];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VICALDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1CFB00F54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + *(int *)(a2 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VICALDocument(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = *((_QWORD *)a2 + 3);
  a1[2] = *((_QWORD *)a2 + 2);
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = sub_1CFB00F54();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v9, v10, v11);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (char *)a1 + v14;
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = (char *)a1 + v15;
  v19 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v13(v18, v19, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for VICALDocument(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1CFB00F54();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v20 = v19(&a1[v16], 1, v9);
  v21 = v19(v18, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      v11(v17, v18, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for VICALDocument(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1CFB00F54();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (char *)a1 + v13;
  v16 = &a2[v13];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = (char *)a1 + v14;
  v18 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v14], 1, v10))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v12(v17, v18, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for VICALDocument(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = &a1[v8];
  v10 = (char *)a2 + v8;
  v11 = sub_1CFB00F54();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  v14 = a3[7];
  v15 = a3[8];
  v16 = &a1[v14];
  v17 = (char *)a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = &a1[v15];
  v19 = (char *)a2 + v15;
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v21 = v20(&a1[v15], 1, v11);
  v22 = v20(v19, 1, v11);
  if (!v21)
  {
    if (!v22)
    {
      v13(v18, v19, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
LABEL_7:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VICALDocument()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA7CCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CFB00F54();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VICALDocument()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA7CD80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1CFB00F54();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1CFA7CE20()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CFB00F54();
  if (v0 <= 0x3F)
  {
    sub_1CF9304CC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t initializeBufferWithCopyOfBuffer for VICALCertificateInfo(unint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1CF9239E0(*a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    v10 = a2[4];
    sub_1CF9239E0(v9, v10);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    v11 = a2[5];
    v12 = a2[6];
    sub_1CF9239E0(v11, v12);
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v12;
    v13 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v13;
    v14 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v14;
    v15 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v15;
    v16 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v16;
    v17 = a2 + 15;
    v18 = a2[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v17;
    }
    else
    {
      v20 = *v17;
      sub_1CF9239E0(*v17, v18);
      *(_QWORD *)(a1 + 120) = v20;
      *(_QWORD *)(a1 + 128) = v18;
    }
    v21 = a2 + 17;
    v22 = a2[18];
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 136) = *(_OWORD *)v21;
    }
    else
    {
      v23 = *v21;
      sub_1CF9239E0(*v21, a2[18]);
      *(_QWORD *)(a1 + 136) = v23;
      *(_QWORD *)(a1 + 144) = v22;
    }
    v24 = a3[14];
    v25 = (void *)(a1 + v24);
    v26 = (char *)a2 + v24;
    v27 = sub_1CFB00F54();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v31 = a3[15];
    v32 = (void *)(a1 + v31);
    v33 = (char *)a2 + v31;
    if (v29((char *)a2 + v31, 1, v27))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v32, v33, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    v35 = a3[16];
    v36 = *(uint64_t *)((char *)a2 + v35);
    if (v36 == 1)
    {
      *(_QWORD *)(a1 + v35) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + v35) = v36;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for VICALCertificateInfo(uint64_t *a1, int *a2)
{
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  uint64_t result;

  sub_1CF923A24(*a1, a1[1]);
  sub_1CF923A24(a1[3], a1[4]);
  sub_1CF923A24(a1[5], a1[6]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1[16];
  if (v4 >> 60 != 15)
    sub_1CF923A24(a1[15], v4);
  v5 = a1[18];
  if (v5 >> 60 != 15)
    sub_1CF923A24(a1[17], v5);
  v6 = (char *)a1 + a2[14];
  v7 = sub_1CFB00F54();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  v10 = (char *)a1 + a2[15];
  if (!v9(v10, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  result = *(uint64_t *)((char *)a1 + a2[16]);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for VICALCertificateInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *a2;
  v7 = a2[1];
  sub_1CF9239E0(*a2, v7);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  v9 = a2[4];
  sub_1CF9239E0(v8, v9);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  v10 = a2[5];
  v11 = a2[6];
  sub_1CF9239E0(v10, v11);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  v12 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v12;
  v13 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v13;
  v14 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v14;
  v15 = a2[14];
  *(_QWORD *)(a1 + 104) = a2[13];
  *(_QWORD *)(a1 + 112) = v15;
  v16 = a2 + 15;
  v17 = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v16;
  }
  else
  {
    v18 = *v16;
    sub_1CF9239E0(*v16, v17);
    *(_QWORD *)(a1 + 120) = v18;
    *(_QWORD *)(a1 + 128) = v17;
  }
  v19 = a2 + 17;
  v20 = a2[18];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_1CF9239E0(*v19, a2[18]);
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 144) = v20;
  }
  v22 = a3[14];
  v23 = (void *)(a1 + v22);
  v24 = (char *)a2 + v22;
  v25 = sub_1CFB00F54();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v29 = a3[15];
  v30 = (void *)(a1 + v29);
  v31 = (char *)a2 + v29;
  if (v27((char *)a2 + v29, 1, v25))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  v33 = a3[16];
  v34 = *(uint64_t *)((char *)a2 + v33);
  if (v34 != 1)
    v34 = swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + v33) = v34;
  return a1;
}

uint64_t *assignWithCopy for VICALCertificateInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *a2;
  v7 = a2[1];
  sub_1CF9239E0(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1CF923A24(v8, v9);
  a1[2] = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  sub_1CF9239E0(v10, v11);
  v12 = a1[3];
  v13 = a1[4];
  a1[3] = v10;
  a1[4] = v11;
  sub_1CF923A24(v12, v13);
  v14 = a2[5];
  v15 = a2[6];
  sub_1CF9239E0(v14, v15);
  v16 = a1[5];
  v17 = a1[6];
  a1[5] = v14;
  a1[6] = v15;
  sub_1CF923A24(v16, v17);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a2 + 15;
  v19 = a2[16];
  if ((unint64_t)a1[16] >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      v20 = *v18;
      sub_1CF9239E0(*v18, a2[16]);
      a1[15] = v20;
      a1[16] = v19;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v19 >> 60 == 15)
  {
    sub_1CF930DB8((uint64_t)(a1 + 15));
LABEL_6:
    *(_OWORD *)(a1 + 15) = *(_OWORD *)v18;
    goto LABEL_8;
  }
  v21 = *v18;
  sub_1CF9239E0(*v18, a2[16]);
  v22 = a1[15];
  v23 = a1[16];
  a1[15] = v21;
  a1[16] = v19;
  sub_1CF923A24(v22, v23);
LABEL_8:
  v24 = a2 + 17;
  v25 = a2[18];
  if ((unint64_t)a1[18] >> 60 == 15)
  {
    if (v25 >> 60 != 15)
    {
      v26 = *v24;
      sub_1CF9239E0(*v24, a2[18]);
      a1[17] = v26;
      a1[18] = v25;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v25 >> 60 == 15)
  {
    sub_1CF930DB8((uint64_t)(a1 + 17));
LABEL_13:
    *(_OWORD *)(a1 + 17) = *(_OWORD *)v24;
    goto LABEL_15;
  }
  v27 = *v24;
  sub_1CF9239E0(*v24, a2[18]);
  v28 = a1[17];
  v29 = a1[18];
  a1[17] = v27;
  a1[18] = v25;
  sub_1CF923A24(v28, v29);
LABEL_15:
  v30 = a3[14];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1CFB00F54();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_20:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_21:
  v39 = a3[15];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = v35((char *)a1 + v39, 1, v33);
  v43 = v35(v41, 1, v33);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v40, v41, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
LABEL_26:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v40, v41, v33);
LABEL_27:
  v45 = a3[16];
  v46 = (uint64_t *)((char *)a1 + v45);
  v47 = *(uint64_t *)((char *)a2 + v45);
  if (*(uint64_t *)((char *)a1 + v45) == 1)
  {
    if (v47 != 1)
    {
      *v46 = v47;
      swift_bridgeObjectRetain();
      return a1;
    }
    v48 = 1;
  }
  else
  {
    if (v47 != 1)
    {
      *v46 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CFA7D8CC((uint64_t)a1 + v45);
    v48 = *(uint64_t *)((char *)a2 + v45);
  }
  *v46 = v48;
  return a1;
}

uint64_t sub_1CFA7D8CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VICALCertificateInfo(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v8 = a3[14];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v11 = sub_1CFB00F54();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[15];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for VICALCertificateInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v6, v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v8;
  sub_1CF923A24(v9, v10);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1CF923A24(v11, v12);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  v16 = (_OWORD *)(a2 + 120);
  v17 = *(_QWORD *)(a1 + 128);
  if (v17 >> 60 == 15)
    goto LABEL_4;
  v18 = *(_QWORD *)(a2 + 128);
  if (v18 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 120);
LABEL_4:
    *(_OWORD *)(a1 + 120) = *v16;
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)v16;
  *(_QWORD *)(a1 + 128) = v18;
  sub_1CF923A24(v19, v17);
LABEL_6:
  v20 = (_OWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a1 + 144);
  if (v21 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 136) = *v20;
    goto LABEL_11;
  }
  v22 = *(_QWORD *)(a2 + 144);
  if (v22 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 136);
    goto LABEL_9;
  }
  v23 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)v20;
  *(_QWORD *)(a1 + 144) = v22;
  sub_1CF923A24(v23, v21);
LABEL_11:
  v24 = a3[14];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = sub_1CFB00F54();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_16:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_17:
  v33 = a3[15];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  v36 = v29((void *)(a1 + v33), 1, v27);
  v37 = v29(v35, 1, v27);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v34, v35, v27);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v27);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v34, v27);
LABEL_22:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v34, v35, v27);
LABEL_23:
  v39 = a3[16];
  v40 = (_QWORD *)(a1 + v39);
  v41 = *(_QWORD *)(a2 + v39);
  if (*(_QWORD *)(a1 + v39) != 1)
  {
    if (v41 != 1)
    {
      *v40 = v41;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CFA7D8CC(a1 + v39);
    v41 = *(_QWORD *)(a2 + v39);
  }
  *v40 = v41;
  return a1;
}

uint64_t getEnumTagSinglePayload for VICALCertificateInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA7DDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 56), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VICALCertificateInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA7DE40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 56) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 56), a2, a2, v7);
  }
  return result;
}

void sub_1CFA7DEB8()
{
  unint64_t v0;

  sub_1CF9304CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.Extensions()
{
  return &type metadata for VICALCertificateInfo.Extensions;
}

uint64_t storeEnumTagSinglePayload for VICALCertificateInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1CFA7DFD0 + 4 * byte_1CFB1B6E5[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1CFA7E004 + 4 * byte_1CFB1B6E0[v4]))();
}

uint64_t sub_1CFA7E004(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA7E00C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA7E014);
  return result;
}

uint64_t sub_1CFA7E020(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA7E028);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1CFA7E02C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA7E034(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.CodingKeys()
{
  return &type metadata for VICALCertificateInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VICALCertificateInfo.Extensions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CFA7E090 + 4 * byte_1CFB1B6EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CFA7E0B0 + 4 * byte_1CFB1B6EF[v4]))();
}

_BYTE *sub_1CFA7E090(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CFA7E0B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA7E0B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA7E0C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA7E0C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA7E0D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.Extensions.CodingKeys()
{
  return &type metadata for VICALCertificateInfo.Extensions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VICALDocument.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1CFA7E138 + 4 * byte_1CFB1B6F9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1CFA7E16C + 4 * byte_1CFB1B6F4[v4]))();
}

uint64_t sub_1CFA7E16C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA7E174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA7E17CLL);
  return result;
}

uint64_t sub_1CFA7E188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA7E190);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1CFA7E194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA7E19C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VICALDocument.CodingKeys()
{
  return &type metadata for VICALDocument.CodingKeys;
}

unint64_t sub_1CFA7E1BC()
{
  unint64_t result;

  result = qword_1EFBC4198;
  if (!qword_1EFBC4198)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BA00, &type metadata for VICALDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4198);
  }
  return result;
}

unint64_t sub_1CFA7E204()
{
  unint64_t result;

  result = qword_1EFBC41A0;
  if (!qword_1EFBC41A0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BAB8, &type metadata for VICALCertificateInfo.Extensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41A0);
  }
  return result;
}

unint64_t sub_1CFA7E24C()
{
  unint64_t result;

  result = qword_1EFBC41A8;
  if (!qword_1EFBC41A8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BBA8, &type metadata for VICALCertificateInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41A8);
  }
  return result;
}

unint64_t sub_1CFA7E294()
{
  unint64_t result;

  result = qword_1EFBC41B0;
  if (!qword_1EFBC41B0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BAE0, &type metadata for VICALCertificateInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41B0);
  }
  return result;
}

unint64_t sub_1CFA7E2DC()
{
  unint64_t result;

  result = qword_1EFBC41B8;
  if (!qword_1EFBC41B8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BB08, &type metadata for VICALCertificateInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41B8);
  }
  return result;
}

unint64_t sub_1CFA7E324()
{
  unint64_t result;

  result = qword_1EFBC41C0;
  if (!qword_1EFBC41C0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BA28, &type metadata for VICALCertificateInfo.Extensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41C0);
  }
  return result;
}

unint64_t sub_1CFA7E36C()
{
  unint64_t result;

  result = qword_1EFBC41C8;
  if (!qword_1EFBC41C8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BA50, &type metadata for VICALCertificateInfo.Extensions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41C8);
  }
  return result;
}

unint64_t sub_1CFA7E3B4()
{
  unint64_t result;

  result = qword_1EFBC41D0;
  if (!qword_1EFBC41D0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B970, &type metadata for VICALDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41D0);
  }
  return result;
}

unint64_t sub_1CFA7E3FC()
{
  unint64_t result;

  result = qword_1EFBC41D8;
  if (!qword_1EFBC41D8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1B998, &type metadata for VICALDocument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41D8);
  }
  return result;
}

uint64_t sub_1CFA7E440(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72506C61636976 && a2 == 0xED00007265646976 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7373496C61636976 && a2 == 0xED00004449726575 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616470557478656ELL && a2 == 0xEA00000000006574 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CFB2F8C0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1CFA7E700(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001CFB2F8E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1CFA7E784()
{
  unint64_t v0;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

uint64_t static ISO18013ReaderRequest.supportedVersion.getter()
{
  return 3157553;
}

uint64_t ISO18013ReaderRequest.version.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013ReaderRequest.docRequests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CFA7E810(char *a1, char *a2)
{
  return sub_1CFA2871C(*a1, *a2);
}

uint64_t sub_1CFA7E81C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7E8A4()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA7E908()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7E98C@<X0>(char *a1@<X8>)
{
  return sub_1CFA18D08(a1);
}

void sub_1CFA7E998(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E6F6973726576;
  if (*v1)
    v2 = 0x6575716552636F64;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEB00000000737473;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CFA7E9E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6575716552636F64;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_1CFA7EA24@<X0>(char *a1@<X8>)
{
  return sub_1CFA18DF0(a1);
}

uint64_t sub_1CFA7EA30()
{
  sub_1CFA7EECC();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7EA58()
{
  sub_1CFA7EECC();
  return sub_1CFB02B80();
}

uint64_t sub_1CFA7EA80@<X0>(char *a1@<X8>)
{
  return sub_1CFA18D08(a1);
}

uint64_t sub_1CFA7EA8C@<X0>(char *a1@<X8>)
{
  return sub_1CFA18DF0(a1);
}

uint64_t sub_1CFA7EA98()
{
  sub_1CFA7EE4C();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7EAC0()
{
  sub_1CFA7EE4C();
  return sub_1CFB02B80();
}

CoreIDVShared::ISO18013ReaderRequest __swiftcall ISO18013ReaderRequest.init(version:docRequests:)(Swift::String version, Swift::OpaquePointer docRequests)
{
  uint64_t v2;
  CoreIDVShared::ISO18013ReaderRequest result;

  *(Swift::String *)v2 = version;
  *(Swift::OpaquePointer *)(v2 + 16) = docRequests;
  result.version = version;
  result.docRequests = docRequests;
  return result;
}

uint64_t ISO18013ReaderRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v41 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41E8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v40 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  Decoder.codingKeyFormat.getter(v23, v24, &v46);
  v25 = v46;
  v26 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  if ((v25 & 1) == 0)
  {
    sub_1CFA7EECC();
    v29 = v40;
    v30 = v43;
    sub_1CFB02B2C();
    if (!v30)
    {
      LOBYTE(v44) = 0;
      v32 = sub_1CFB026E8();
      v34 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41F8);
      v45 = 1;
      sub_1CFA7F1BC(&qword_1EFBC4200, &qword_1EFBC4208, (uint64_t)&protocol conformance descriptor for ISO18013ReaderRequest.DocRequest, MEMORY[0x1E0DEAF40]);
      sub_1CFB02724();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v13);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  sub_1CFA7EE4C();
  v27 = v41;
  v28 = v43;
  sub_1CFB02B2C();
  if (v28)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  LOBYTE(v44) = 0;
  v32 = sub_1CFB026E8();
  v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41F8);
  v45 = 1;
  sub_1CFA7F1BC(&qword_1EFBC4200, &qword_1EFBC4208, (uint64_t)&protocol conformance descriptor for ISO18013ReaderRequest.DocRequest, MEMORY[0x1E0DEAF40]);
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v27, v3);
LABEL_7:
  v36 = v44;
  v37 = v39;
  v38 = (uint64_t)v42;
  *v39 = v32;
  v37[1] = v34;
  v37[2] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(v38);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CFA7EE4C()
{
  unint64_t result;

  result = qword_1EFBC41F0;
  if (!qword_1EFBC41F0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C5B8, &type metadata for ISO18013ReaderRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC41F0);
  }
  return result;
}

uint64_t type metadata accessor for ISO18013ReaderRequest.DocRequest()
{
  uint64_t result;

  result = qword_1EFBC4350;
  if (!qword_1EFBC4350)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CFA7EECC()
{
  unint64_t result;

  result = qword_1EFBC4210;
  if (!qword_1EFBC4210)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C568, &type metadata for ISO18013ReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4210);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4218);
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4220);
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v1;
  v34 = v1[1];
  v35 = v23;
  v31 = v1[2];
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  Encoder.codingKeyFormat.getter(v24, v25, &v39);
  v26 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v26 & 1) != 0)
  {
    sub_1CFA7EE4C();
    sub_1CFB02B5C();
    LOBYTE(v37) = 0;
    v27 = v36;
    sub_1CFB02790();
    if (!v27)
    {
      v37 = v31;
      v38 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41F8);
      sub_1CFA7F1BC(&qword_1EFBC4228, &qword_1EFBC4230, (uint64_t)&protocol conformance descriptor for ISO18013ReaderRequest.DocRequest, MEMORY[0x1E0DEAF10]);
      sub_1CFB027CC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v3);
  }
  else
  {
    sub_1CFA7EECC();
    sub_1CFB02B5C();
    LOBYTE(v37) = 0;
    v29 = v36;
    sub_1CFB02790();
    if (!v29)
    {
      v37 = v31;
      v38 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC41F8);
      sub_1CFA7F1BC(&qword_1EFBC4228, &qword_1EFBC4230, (uint64_t)&protocol conformance descriptor for ISO18013ReaderRequest.DocRequest, MEMORY[0x1E0DEAF10]);
      sub_1CFB027CC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v22, v13);
  }
}

uint64_t sub_1CFA7F1BC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC41F8);
    v10 = sub_1CF920A48(a2, (uint64_t (*)(uint64_t))type metadata accessor for ISO18013ReaderRequest.DocRequest, a3);
    result = MEMORY[0x1D17DA600](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CFA7F240@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013ReaderRequest.init(from:)(a1, a2);
}

uint64_t sub_1CFA7F254(_QWORD *a1)
{
  return ISO18013ReaderRequest.encode(to:)(a1);
}

uint64_t ISO18013ReaderRequest.DocRequest.itemsRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  sub_1CF9239E0(v2, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013ReaderRequest.DocRequest.readerAuth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ISO18013ReaderRequest.DocRequest() + 20);
  return sub_1CFA7F2F4(v3, a1);
}

uint64_t sub_1CFA7F2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFA7F33C(char *a1, char *a2)
{
  return sub_1CFA288FC(*a1, *a2);
}

uint64_t sub_1CFA7F348()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7F3D4()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA7F43C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA7F4C4@<X0>(char *a1@<X8>)
{
  return sub_1CFA18D08(a1);
}

void sub_1CFA7F4D0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x716552736D657469;
  if (*v1)
    v2 = 0x7541726564616572;
  v3 = 0xEC00000074736575;
  if (*v1)
    v3 = 0xEA00000000006874;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CFA7F51C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7541726564616572;
  else
    return 0x716552736D657469;
}

uint64_t sub_1CFA7F564@<X0>(char *a1@<X8>)
{
  return sub_1CFA18DF0(a1);
}

uint64_t sub_1CFA7F570()
{
  sub_1CFA7FB88();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7F598()
{
  sub_1CFA7FB88();
  return sub_1CFB02B80();
}

uint64_t sub_1CFA7F5C0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1CFA7F610@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1CFA7F664()
{
  sub_1CFA7FB44();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA7F68C()
{
  sub_1CFA7FB44();
  return sub_1CFB02B80();
}

uint64_t ISO18013ReaderRequest.DocRequest.init(itemsRequest:readerAuth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a3 + 48) = v5;
  v7 = type metadata accessor for ISO18013ReaderRequest.DocRequest();
  return sub_1CF931BA0(a2, a3 + *(int *)(v7 + 20), &qword_1EFBBE540);
}

uint64_t ISO18013ReaderRequest.DocRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (**v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  void (**v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  char v70;

  v59 = a2;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4238);
  v3 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61, v4, v5, v6, v7, v8, v9, v10);
  v62 = (void (**)(char *, uint64_t))((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16, v17, v18, v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4240);
  v23 = *(void (***)(char *, uint64_t))(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v24, v25, v26, v27, v28, v29, v30);
  v63 = (char *)&v57 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ISO18013ReaderRequest.DocRequest();
  MEMORY[0x1E0C80A78](v58, v32, v33, v34, v35, v36, v37, v38);
  v60 = (_OWORD *)((char *)&v57 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = a1[3];
  v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  Decoder.codingKeyFormat.getter(v40, v41, &v70);
  v42 = v70;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v42 & 1) == 0)
  {
    v62 = v23;
    sub_1CFA7FB88();
    v53 = v63;
    v52 = v64;
    sub_1CFB02B2C();
    if (!v52)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4250);
      v69 = 0;
      sub_1CFA7FF68(&qword_1EFBC4258, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
      sub_1CFB02724();
      v55 = v68;
      v56 = v66;
      v49 = (uint64_t)v60;
      *v60 = v65;
      *(_OWORD *)(v49 + 16) = v56;
      *(_OWORD *)(v49 + 32) = v67;
      *(_QWORD *)(v49 + 48) = v55;
      sub_1CFB010BC();
      LOBYTE(v65) = 1;
      sub_1CF920A48(&qword_1EFBBF6E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D03798], MEMORY[0x1E0D037B0]);
      sub_1CFB026DC();
      v62[1](v53, v22);
      sub_1CF931BA0((uint64_t)v21, v49 + *(int *)(v58 + 20), &qword_1EFBBE540);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v43 = v3;
  v44 = v61;
  sub_1CFA7FB44();
  v45 = (char *)v62;
  v46 = v64;
  sub_1CFB02B2C();
  if (v46)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4250);
  sub_1CFA7FF68(&qword_1EFBC4258, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
  v47 = v68;
  v48 = v66;
  v49 = (uint64_t)v60;
  *v60 = v65;
  *(_OWORD *)(v49 + 16) = v48;
  *(_OWORD *)(v49 + 32) = v67;
  *(_QWORD *)(v49 + 48) = v47;
  v50 = v49 + *(int *)(v58 + 20);
  v51 = sub_1CFB010BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
LABEL_7:
  sub_1CF92F584(v49, v59, (uint64_t (*)(_QWORD))type metadata accessor for ISO18013ReaderRequest.DocRequest);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1CF931994(v49, (uint64_t (*)(_QWORD))type metadata accessor for ISO18013ReaderRequest.DocRequest);
}

unint64_t sub_1CFA7FB44()
{
  unint64_t result;

  result = qword_1EFBC4248;
  if (!qword_1EFBC4248)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C518, &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4248);
  }
  return result;
}

unint64_t sub_1CFA7FB88()
{
  unint64_t result;

  result = qword_1EFBC4260;
  if (!qword_1EFBC4260)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C4C8, &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4260);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.DocRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  char *v48;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  char v75;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4268);
  v65 = *(_QWORD *)(v2 - 8);
  v66 = (char *)v2;
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
  MEMORY[0x1E0C80A78](v11, v12, v13, v14, v15, v16, v17, v18);
  v62 = (uint64_t)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1CFB010BC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4270);
  v31 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63, v32, v33, v34, v35, v36, v37, v38);
  v40 = (char *)&v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1[3];
  v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  Encoder.codingKeyFormat.getter(v41, v42, &v75);
  v43 = v75;
  v44 = a1[3];
  v67 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v44);
  if ((v43 & 1) != 0)
  {
    sub_1CFA7FB44();
    v45 = v64;
    sub_1CFB02B5C();
    v46 = *((_QWORD *)v68 + 6);
    v47 = v68[1];
    v70 = *v68;
    v71 = v47;
    v72 = v68[2];
    v73 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4250);
    sub_1CFA7FF68(&qword_1EFBC4278, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
    v48 = v66;
    sub_1CFB027CC();
    return (*(uint64_t (**)(char *, char *))(v65 + 8))(v45, v48);
  }
  v66 = v30;
  v50 = v31;
  sub_1CFA7FB88();
  sub_1CFB02B5C();
  v51 = v68;
  v52 = *((_QWORD *)v68 + 6);
  v53 = v68[1];
  v70 = *v68;
  v71 = v53;
  v72 = v68[2];
  v73 = v52;
  v74 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4250);
  sub_1CFA7FF68(&qword_1EFBC4278, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
  v54 = v63;
  v55 = v69;
  sub_1CFB027CC();
  v56 = v40;
  if (!v55)
  {
    v57 = type metadata accessor for ISO18013ReaderRequest.DocRequest();
    v58 = v62;
    sub_1CFA7F2F4((uint64_t)v51 + *(int *)(v57 + 20), v62);
    v59 = v21;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v58, 1, v20) == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v56, v54);
      return sub_1CFA7FFAC(v58);
    }
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
    v61 = v66;
    v60(v66, v58, v20);
    LOBYTE(v70) = 1;
    sub_1CF920A48(&qword_1EFBBF708, (uint64_t (*)(uint64_t))MEMORY[0x1E0D03798], MEMORY[0x1E0D037A8]);
    sub_1CFB027CC();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v56, v54);
}

uint64_t sub_1CFA7FF68(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4250);
    result = MEMORY[0x1D17DA600](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CFA7FFAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CFA7FFEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013ReaderRequest.DocRequest.init(from:)(a1, a2);
}

uint64_t sub_1CFA80000(_QWORD *a1)
{
  return ISO18013ReaderRequest.DocRequest.encode(to:)(a1);
}

uint64_t ISO18013ReaderRequest.ItemsRequest.docType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.namespaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013ReaderRequest.ItemsRequest.requestInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CFA80050(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CFA287CC(*a1, *a2);
}

uint64_t sub_1CFA8005C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA80108()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA80190()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA80238@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA8271C();
  *a1 = result;
  return result;
}

void sub_1CFA80264(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xEA00000000007365;
  v5 = 0x63617053656D616ELL;
  if (v2 != 1)
  {
    v5 = 0x4974736575716572;
    v4 = 0xEB000000006F666ELL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65707954636F64;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1CFA802D0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x63617053656D616ELL;
  if (*v0 != 1)
    v1 = 0x4974736575716572;
  if (*v0)
    return v1;
  else
    return 0x65707954636F64;
}

uint64_t sub_1CFA80338@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA8271C();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA8035C()
{
  sub_1CFA80890();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA80384()
{
  sub_1CFA80890();
  return sub_1CFB02B80();
}

uint64_t sub_1CFA803AC@<X0>(char *a1@<X8>)
{
  return sub_1CFA18D08(a1);
}

uint64_t sub_1CFA803B8@<X0>(char *a1@<X8>)
{
  return sub_1CFA18DF0(a1);
}

uint64_t sub_1CFA803C4()
{
  sub_1CFA807BC();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA803EC()
{
  sub_1CFA807BC();
  return sub_1CFB02B80();
}

uint64_t ISO18013ReaderRequest.ItemsRequest.init(docType:namespaces:requestInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4280);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4288);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v45 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  Decoder.codingKeyFormat.getter(v23, v24, &v50);
  v25 = v50;
  v26 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  if ((v25 & 1) == 0)
  {
    v31 = v14;
    sub_1CFA80890();
    v32 = v45;
    v33 = v47;
    sub_1CFB02B2C();
    if (!v33)
    {
      LOBYTE(v48) = 0;
      v34 = v13;
      v36 = sub_1CFB026E8();
      v38 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4298);
      v49 = 1;
      sub_1CFA80800();
      sub_1CFB02724();
      v41 = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC42C0);
      v49 = 2;
      sub_1CFA808D4();
      sub_1CFB026DC();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v34);
      v40 = v48;
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  v27 = v4;
  sub_1CFA807BC();
  v28 = v44;
  v29 = v47;
  sub_1CFB02B2C();
  if (v29)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  LOBYTE(v48) = 0;
  v30 = v3;
  v36 = sub_1CFB026E8();
  v38 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4298);
  v49 = 1;
  sub_1CFA80800();
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
  v40 = 0;
  v41 = v48;
LABEL_7:
  v42 = v43;
  *v43 = v36;
  v42[1] = v38;
  v42[2] = v41;
  v42[3] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CFA807BC()
{
  unint64_t result;

  result = qword_1EFBC4290;
  if (!qword_1EFBC4290)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C478, &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4290);
  }
  return result;
}

unint64_t sub_1CFA80800()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFBC42A0;
  if (!qword_1EFBC42A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4298);
    v2 = MEMORY[0x1E0DEA0D8];
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = sub_1CFA80CA8(&qword_1EFBC42A8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAFC0], MEMORY[0x1E0DEA0D8]);
    result = MEMORY[0x1D17DA600](v2, v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFBC42A0);
  }
  return result;
}

unint64_t sub_1CFA80890()
{
  unint64_t result;

  result = qword_1EFBC42B8;
  if (!qword_1EFBC42B8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C428, &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC42B8);
  }
  return result;
}

unint64_t sub_1CFA808D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFBC42C8;
  if (!qword_1EFBC42C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC42C0);
    v2 = sub_1CF920A48(&qword_1EFBC0520, (uint64_t (*)(uint64_t))type metadata accessor for AnyCodable, (uint64_t)&protocol conformance descriptor for AnyCodable);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFBC42C8);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC42D0);
  v3 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v4, v5, v6, v7, v8, v9, v10);
  v37 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC42D8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v1;
  v39 = v1[1];
  v40 = v23;
  v24 = v1[3];
  v35 = v1[2];
  v36 = v24;
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  Encoder.codingKeyFormat.getter(v25, v26, &v44);
  v27 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v27 & 1) != 0)
  {
    v28 = v3;
    sub_1CFA807BC();
    v29 = v37;
    sub_1CFB02B5C();
    LOBYTE(v42) = 0;
    v30 = v38;
    v31 = v41;
    sub_1CFB02790();
    if (!v31)
    {
      v42 = v35;
      v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4298);
      sub_1CFA80C18();
      sub_1CFB027CC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  }
  else
  {
    v33 = v36;
    sub_1CFA80890();
    sub_1CFB02B5C();
    LOBYTE(v42) = 0;
    v34 = v41;
    sub_1CFB02790();
    if (!v34)
    {
      v42 = v35;
      v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4298);
      sub_1CFA80C18();
      sub_1CFB027CC();
      if (v33)
      {
        v42 = v33;
        v43 = 2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC42C0);
        sub_1CFA80D0C();
        sub_1CFB027CC();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v12);
  }
}

unint64_t sub_1CFA80C18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFBC42E0;
  if (!qword_1EFBC42E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4298);
    v2 = MEMORY[0x1E0DEA0B8];
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = sub_1CFA80CA8(&qword_1EFBC42E8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAFA8], MEMORY[0x1E0DEA0B8]);
    result = MEMORY[0x1D17DA600](v2, v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFBC42E0);
  }
  return result;
}

uint64_t sub_1CFA80CA8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC42B0);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1D17DA600](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CFA80D0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EFBC42F0;
  if (!qword_1EFBC42F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC42C0);
    v2 = sub_1CF920A48(&qword_1EFBC0548, (uint64_t (*)(uint64_t))type metadata accessor for AnyCodable, (uint64_t)&protocol conformance descriptor for AnyCodable);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFBC42F0);
  }
  return result;
}

uint64_t sub_1CFA80D94(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            return 1;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CFA922E4(v15, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1CFA81388(v20, v17);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      return 0;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CFA80F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _BOOL8 v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  int64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  int64_t v81;

  v4 = type metadata accessor for AnyCodable();
  v5 = *(_QWORD *)(v4 - 8);
  v13 = MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v79 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v74 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC20D8);
  v32 = MEMORY[0x1E0C80A78](v24, v25, v26, v27, v28, v29, v30, v31);
  v34 = (int64_t *)((char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v32, v35, v36, v37, v38, v39, v40, v41);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v80 = (int64_t *)((char *)&v74 - v43);
  v81 = 0;
  v77 = a1;
  v78 = v23;
  v44 = *(_QWORD *)(a1 + 64);
  v75 = a1 + 64;
  v45 = 1 << *(_BYTE *)(a1 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v47 = v46 & v44;
  v76 = (unint64_t)(v45 + 63) >> 6;
  v74 = v76 - 1;
  v48 = &qword_1EFBC20E0;
  v49 = (uint64_t)v23;
  while (1)
  {
    if (v47)
    {
      v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v51 = v50 | (v81 << 6);
LABEL_8:
      v52 = *(_QWORD *)(v77 + 56);
      v53 = (_QWORD *)(*(_QWORD *)(v77 + 48) + 16 * v51);
      v54 = v53[1];
      *v34 = *v53;
      v34[1] = v54;
      v55 = v52 + *(_QWORD *)(v5 + 72) * v51;
      v56 = __swift_instantiateConcreteTypeFromMangledName(v48);
      sub_1CF92F584(v55, (uint64_t)v34 + *(int *)(v56 + 48), (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v34, 0, 1, v56);
      swift_bridgeObjectRetain();
      v57 = v80;
      goto LABEL_30;
    }
    v58 = v81 + 1;
    if (__OFADD__(v81, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v57 = v80;
    if (v58 < v76)
    {
      v59 = *(_QWORD *)(v75 + 8 * v58);
      if (v59)
        goto LABEL_12;
      v60 = v81 + 2;
      ++v81;
      if (v58 + 1 < v76)
      {
        v59 = *(_QWORD *)(v75 + 8 * v60);
        if (v59)
          goto LABEL_15;
        v81 = v58 + 1;
        if (v58 + 2 < v76)
        {
          v59 = *(_QWORD *)(v75 + 8 * (v58 + 2));
          if (v59)
          {
            v58 += 2;
            goto LABEL_12;
          }
          v81 = v58 + 2;
          if (v58 + 3 < v76)
          {
            v59 = *(_QWORD *)(v75 + 8 * (v58 + 3));
            if (v59)
            {
              v58 += 3;
              goto LABEL_12;
            }
            v60 = v58 + 4;
            v81 = v58 + 3;
            if (v58 + 4 < v76)
              break;
          }
        }
      }
    }
LABEL_29:
    v61 = __swift_instantiateConcreteTypeFromMangledName(v48);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v34, 1, 1, v61);
    v47 = 0;
LABEL_30:
    sub_1CF931BA0((uint64_t)v34, (uint64_t)v57, &qword_1EFBC20D8);
    v62 = __swift_instantiateConcreteTypeFromMangledName(v48);
    v63 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v57, 1, v62);
    v64 = v63 == 1;
    if (v63 == 1)
      return v64;
    v65 = v48;
    v66 = (uint64_t)v57 + *(int *)(v62 + 48);
    v67 = v57;
    v68 = *v57;
    v69 = v67[1];
    sub_1CFA05E5C(v66, v49);
    v70 = sub_1CFA922E4(v68, v69);
    LOBYTE(v68) = v71;
    swift_bridgeObjectRelease();
    if ((v68 & 1) == 0)
    {
      sub_1CF931994(v49, (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
      return 0;
    }
    v72 = v79;
    sub_1CF92F584(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v70, v79, (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
    v73 = static AnyCodable.== infix(_:_:)(v72, v49);
    sub_1CF931994(v72, (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
    result = sub_1CF931994(v49, (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
    v48 = v65;
    if ((v73 & 1) == 0)
      return v64;
  }
  v59 = *(_QWORD *)(v75 + 8 * v60);
  if (v59)
  {
LABEL_15:
    v58 = v60;
LABEL_12:
    v47 = (v59 - 1) & v59;
    v51 = __clz(__rbit64(v59)) + (v58 << 6);
    v81 = v58;
    goto LABEL_8;
  }
  while (1)
  {
    v58 = v60 + 1;
    if (__OFADD__(v60, 1))
      break;
    if (v58 >= v76)
    {
      v81 = v74;
      goto LABEL_29;
    }
    v59 = *(_QWORD *)(v75 + 8 * v58);
    ++v60;
    if (v59)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CFA81388(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    swift_bridgeObjectRetain();
    v19 = sub_1CFA922E4(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || v18 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v19))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1CFA81530@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013ReaderRequest.ItemsRequest.init(from:)(a1, a2);
}

uint64_t sub_1CFA81544(_QWORD *a1)
{
  return ISO18013ReaderRequest.ItemsRequest.encode(to:)(a1);
}

uint64_t _s13CoreIDVShared21ISO18013ReaderRequestV05ItemsE0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1CFB028B0(), result = 0, (v7 & 1) != 0))
  {
    if ((sub_1CFA80D94(v2, v5) & 1) != 0)
    {
      if (v3)
      {
        if (v4)
        {
          swift_bridgeObjectRetain();
          v9 = swift_bridgeObjectRetain();
          v10 = sub_1CFA80F70(v9, v4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 1;
        }
      }
      else if (!v4)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest()
{
  return &type metadata for ISO18013ReaderRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013ReaderRequest.DocRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    v8 = a2[2];
    sub_1CF9239E0(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    v9 = a2[4];
    v4[3] = a2[3];
    v4[4] = v9;
    v10 = a2[5];
    v11 = a2[6];
    v12 = *(int *)(a3 + 20);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v4[5] = v10;
    v4[6] = v11;
    v15 = sub_1CFB010BC();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1CF923A24(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1CFB010BC();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for ISO18013ReaderRequest.DocRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  v7 = a2[2];
  sub_1CF9239E0(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  v9 = a2[5];
  v10 = a2[6];
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  a1[5] = v9;
  a1[6] = v10;
  v14 = sub_1CFB010BC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithCopy for ISO18013ReaderRequest.DocRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  sub_1CF9239E0(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1CF923A24(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1CFB010BC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 20);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_1CFB010BC();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1CF923A24(v7, v8);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 20);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1CFB010BC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA81CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA81D38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBE540);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1CFA81DB0()
{
  unint64_t v0;

  sub_1CFA81E24();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CFA81E24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFBC2B08)
  {
    sub_1CFB010BC();
    v0 = sub_1CFB02190();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFBC2B08);
  }
}

_QWORD *initializeWithCopy for ISO18013ReaderRequest.ItemsRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ISO18013ReaderRequest.ItemsRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ISO18013ReaderRequest.ItemsRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest;
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderRequest.ItemsRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CFA81FF0 + 4 * byte_1CFB1BCC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CFA82024 + 4 * byte_1CFB1BCC0[v4]))();
}

uint64_t sub_1CFA82024(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA8202C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA82034);
  return result;
}

uint64_t sub_1CFA82040(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA82048);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CFA8204C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA82054(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.DocRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CFA820D4 + 4 * byte_1CFB1BCCA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CFA820F4 + 4 * byte_1CFB1BCCF[v4]))();
}

_BYTE *sub_1CFA820D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CFA820F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA820FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA82104(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFA8210C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFA82114(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.CodingKeys;
}

uint64_t _s13CoreIDVShared21ISO18013ReaderRequestV12ItemsRequestV14ACWGCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFA8218C + 4 * byte_1CFB1BCD9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFA821C0 + 4 * byte_1CFB1BCD4[v4]))();
}

uint64_t sub_1CFA821C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA821C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA821D0);
  return result;
}

uint64_t sub_1CFA821DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA821E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFA821E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA821F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ACWGCodingKeys;
}

unint64_t sub_1CFA82210()
{
  unint64_t result;

  result = qword_1EFBC4388;
  if (!qword_1EFBC4388)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BF50, &type metadata for ISO18013ReaderRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4388);
  }
  return result;
}

unint64_t sub_1CFA82258()
{
  unint64_t result;

  result = qword_1EFBC4390;
  if (!qword_1EFBC4390)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C040, &type metadata for ISO18013ReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4390);
  }
  return result;
}

unint64_t sub_1CFA822A0()
{
  unint64_t result;

  result = qword_1EFBC4398;
  if (!qword_1EFBC4398)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C130, &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4398);
  }
  return result;
}

unint64_t sub_1CFA822E8()
{
  unint64_t result;

  result = qword_1EFBC43A0;
  if (!qword_1EFBC43A0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C220, &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43A0);
  }
  return result;
}

unint64_t sub_1CFA82330()
{
  unint64_t result;

  result = qword_1EFBC43A8;
  if (!qword_1EFBC43A8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C310, &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43A8);
  }
  return result;
}

unint64_t sub_1CFA82378()
{
  unint64_t result;

  result = qword_1EFBC43B0;
  if (!qword_1EFBC43B0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C400, &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43B0);
  }
  return result;
}

unint64_t sub_1CFA823C0()
{
  unint64_t result;

  result = qword_1EFBC43B8;
  if (!qword_1EFBC43B8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C338, &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43B8);
  }
  return result;
}

unint64_t sub_1CFA82408()
{
  unint64_t result;

  result = qword_1EFBC43C0;
  if (!qword_1EFBC43C0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C360, &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43C0);
  }
  return result;
}

unint64_t sub_1CFA82450()
{
  unint64_t result;

  result = qword_1EFBC43C8;
  if (!qword_1EFBC43C8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C248, &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43C8);
  }
  return result;
}

unint64_t sub_1CFA82498()
{
  unint64_t result;

  result = qword_1EFBC43D0;
  if (!qword_1EFBC43D0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C270, &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43D0);
  }
  return result;
}

unint64_t sub_1CFA824E0()
{
  unint64_t result;

  result = qword_1EFBC43D8;
  if (!qword_1EFBC43D8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C158, &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43D8);
  }
  return result;
}

unint64_t sub_1CFA82528()
{
  unint64_t result;

  result = qword_1EFBC43E0;
  if (!qword_1EFBC43E0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C180, &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43E0);
  }
  return result;
}

unint64_t sub_1CFA82570()
{
  unint64_t result;

  result = qword_1EFBC43E8;
  if (!qword_1EFBC43E8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C068, &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43E8);
  }
  return result;
}

unint64_t sub_1CFA825B8()
{
  unint64_t result;

  result = qword_1EFBC43F0;
  if (!qword_1EFBC43F0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1C090, &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43F0);
  }
  return result;
}

unint64_t sub_1CFA82600()
{
  unint64_t result;

  result = qword_1EFBC43F8;
  if (!qword_1EFBC43F8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BF78, &type metadata for ISO18013ReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC43F8);
  }
  return result;
}

unint64_t sub_1CFA82648()
{
  unint64_t result;

  result = qword_1EFBC4400;
  if (!qword_1EFBC4400)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BFA0, &type metadata for ISO18013ReaderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4400);
  }
  return result;
}

unint64_t sub_1CFA82690()
{
  unint64_t result;

  result = qword_1EFBC4408;
  if (!qword_1EFBC4408)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BE88, &type metadata for ISO18013ReaderRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4408);
  }
  return result;
}

unint64_t sub_1CFA826D8()
{
  unint64_t result;

  result = qword_1EFBC4410;
  if (!qword_1EFBC4410)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1BEB0, &type metadata for ISO18013ReaderRequest.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4410);
  }
  return result;
}

uint64_t sub_1CFA8271C()
{
  unint64_t v0;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

CoreIDVShared::DigitalPresentmentAlertDisplayConfiguration __swiftcall DigitalPresentmentAlertDisplayConfiguration.init(isFaceIDDevice:)(CoreIDVShared::DigitalPresentmentAlertDisplayConfiguration isFaceIDDevice)
{
  CoreIDVShared::DigitalPresentmentAlertDisplayConfiguration *v1;

  v1->isFaceIDDevice = isFaceIDDevice.isFaceIDDevice;
  return isFaceIDDevice;
}

uint64_t DigitalPresentmentAlertDisplayConfiguration.options.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t inited;
  id v22;
  unint64_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _OWORD v48[2];
  __int128 v49;
  uint64_t v50;
  id v51[45];
  unint64_t v52;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  v9 = MEMORY[0x1E0C80A78](v1, v2, v3, v4, v5, v6, v7, v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12, v13, v14, v15, v16, v17, v18);
  v46 = (uint64_t)&v45 - v19;
  v20 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4418);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB0DDA0;
  v51[0] = *(id *)MEMORY[0x1E0C9B800];
  v22 = v51[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903958);
  sub_1CFA82B80();
  sub_1CFB0234C();
  v23 = 0xD00000000000002CLL;
  v24 = v20 == 0;
  if (!v20)
    v23 = 0xD00000000000002DLL;
  v25 = 0x80000001CFB2F9F0;
  if (!v20)
    v25 = 0x80000001CFB2F900;
  v26 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = v25;
  v27 = (void *)*MEMORY[0x1E0C9B810];
  v51[0] = *(id *)MEMORY[0x1E0C9B810];
  if (v24)
    v28 = 0xD00000000000002ELL;
  else
    v28 = 0xD00000000000002DLL;
  if (v24)
    v29 = 0x80000001CFB2F930;
  else
    v29 = 0x80000001CFB2F9C0;
  v30 = v27;
  sub_1CFB0234C();
  *(_QWORD *)(inited + 168) = v26;
  *(_QWORD *)(inited + 144) = v28;
  *(_QWORD *)(inited + 152) = v29;
  v51[0] = *(id *)MEMORY[0x1E0C9B830];
  v31 = v51[0];
  sub_1CFB0234C();
  *(_QWORD *)(inited + 240) = v26;
  *(_QWORD *)(inited + 216) = 0xD000000000000026;
  *(_QWORD *)(inited + 224) = 0x80000001CFB2F960;
  v51[0] = *(id *)MEMORY[0x1E0C9B838];
  v32 = v51[0];
  sub_1CFB0234C();
  *(_QWORD *)(inited + 312) = v26;
  *(_QWORD *)(inited + 288) = 0xD00000000000002DLL;
  *(_QWORD *)(inited + 296) = 0x80000001CFB2F990;
  v52 = sub_1CF9230AC(inited);
  *(_QWORD *)&v49 = *MEMORY[0x1E0C9B860];
  v33 = (id)v49;
  sub_1CFB0234C();
  if (qword_1EFBBD458 != -1)
    swift_once();
  v34 = objc_msgSend((id)qword_1EFBED260, sel_resourceURL);
  if (v34)
  {
    v35 = v34;
    sub_1CFB00DC8();

    v36 = sub_1CFB00DEC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 0, 1, v36);
  }
  else
  {
    v36 = sub_1CFB00DEC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v11, 1, 1, v36);
  }
  v37 = (uint64_t)v11;
  v38 = v46;
  sub_1CFA82C2C(v37, v46);
  sub_1CFB00DEC();
  v39 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v36) == 1)
  {
    sub_1CF931B1C(v38, &qword_1EFBC5440);
    sub_1CF956C80((uint64_t)v51, &v49);
    sub_1CF959A20((uint64_t)v51);
    sub_1CF931B1C((uint64_t)&v49, (uint64_t *)&unk_1ED904DA0);
  }
  else
  {
    v50 = v36;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 32))(boxed_opaque_existential_0, v38, v36);
    sub_1CF923FD8(&v49, v48);
    v41 = v52;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47 = v41;
    sub_1CF958FE0(v48, (uint64_t)v51, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1CF959A20((uint64_t)v51);
  }
  v43 = sub_1CFB01944();
  swift_bridgeObjectRelease();
  return v43;
}

unint64_t sub_1CFA82B80()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFBC4420;
  if (!qword_1EFBC4420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED903958);
    v2 = sub_1CFA82BE4();
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFBC4420);
  }
  return result;
}

unint64_t sub_1CFA82BE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBBDDE8;
  if (!qword_1EFBBDDE8)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1D17DA600](&unk_1CFB05310, v1);
    atomic_store(result, (unint64_t *)&qword_1EFBBDDE8);
  }
  return result;
}

uint64_t sub_1CFA82C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentAlertDisplayConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentAlertDisplayConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFA82D60 + 4 * byte_1CFB1C615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFA82D94 + 4 * byte_1CFB1C610[v4]))();
}

uint64_t sub_1CFA82D94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA82D9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA82DA4);
  return result;
}

uint64_t sub_1CFA82DB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA82DB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFA82DBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA82DC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentAlertDisplayConfiguration()
{
  return &type metadata for DigitalPresentmentAlertDisplayConfiguration;
}

unint64_t IdentityBoundACLType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

unint64_t sub_1CFA82DF8()
{
  unint64_t result;

  result = qword_1EFBC4428;
  if (!qword_1EFBC4428)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IdentityBoundACLType, &type metadata for IdentityBoundACLType);
    atomic_store(result, (unint64_t *)&qword_1EFBC4428);
  }
  return result;
}

uint64_t sub_1CFA82E3C()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA82E80()
{
  return sub_1CFB02A9C();
}

uint64_t sub_1CFA82EA8()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

ValueMetadata *type metadata accessor for IdentityBoundACLType()
{
  return &type metadata for IdentityBoundACLType;
}

uint64_t DIPFileUploadCryptor.Options.init(eraseInputFileData:copyDataForInternalDiagnostics:uuid:key:nonce:publicKey:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_BYTE *)a9 = result;
  *(_BYTE *)(a9 + 1) = a2;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_QWORD *)(a9 + 56) = a10;
  *(_QWORD *)(a9 + 64) = a11;
  return result;
}

uint64_t DIPFileUploadCryptor.Result.encryptedFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CFB00DEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DIPFileUploadCryptor.Result.internalDiagnosticsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DIPFileUploadCryptor.Result() + 20);
  return sub_1CF9801EC(v3, a1);
}

uint64_t type metadata accessor for DIPFileUploadCryptor.Result()
{
  uint64_t result;

  result = qword_1EFBC4488;
  if (!qword_1EFBC4488)
    return swift_getSingletonMetadata();
  return result;
}

void static DIPFileUploadCryptor.encryptFileHandle(_:withOptions:)(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  void (*v118)(char *, uint64_t, uint64_t);
  void (*v119)(_QWORD, _QWORD);
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  _BOOL4 v123;
  void *v124;
  uint8_t *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint8_t *v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  void (*v133)(_QWORD, _QWORD);
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void *v139;
  void *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  void (*v147)(char *, uint64_t, uint64_t);
  char *v148;
  id v149;
  void *v150;
  void *v151;
  id v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  void *v161;
  id v162;
  unint64_t v163;
  void *v164;
  unint64_t v165;
  uint64_t v166;
  void *v167;
  void *v168;
  uint64_t v169;
  id v170;
  void *v171;
  id v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  id v176;
  void *v177;
  char *v178;
  unsigned int v179;
  id v180;
  id v181;
  unsigned int v182;
  id v183;
  unsigned int v184;
  id v185;
  unsigned int v186;
  id v187;
  NSObject *v188;
  os_log_type_t v189;
  uint8_t *v190;
  id v191;
  uint64_t v192;
  char *v193;
  NSObject *v194;
  int v195;
  uint8_t *v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char *v202;
  unint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(char *, uint64_t, uint64_t);
  char *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  void (*v214)(char *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  void (*v219)(_QWORD, _QWORD);
  uint64_t v220;
  int v221;
  char *v222;
  char *v223;
  char *v224;
  unint64_t v225;
  uint64_t v226;
  int v227;
  char *v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(char *, uint64_t);
  uint64_t v236;
  uint64_t v237;
  void *v238;
  void *v239;
  id v240[2];
  uint64_t v241;
  unint64_t v242;
  uint64_t v243[7];

  v239 = a1;
  v220 = a3;
  v243[6] = *MEMORY[0x1E0C80C00];
  v233 = sub_1CFB012CC();
  v235 = *(void (**)(char *, uint64_t))(v233 - 8);
  v11 = MEMORY[0x1E0C80A78](v233, v4, v5, v6, v7, v8, v9, v10);
  v230 = (char *)&v208 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v11, v13, v14, v15, v16, v17, v18, v19);
  v223 = (char *)&v208 - v21;
  v29 = MEMORY[0x1E0C80A78](v20, v22, v23, v24, v25, v26, v27, v28);
  v222 = (char *)&v208 - v30;
  MEMORY[0x1E0C80A78](v29, v31, v32, v33, v34, v35, v36, v37);
  v228 = (char *)&v208 - v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  v47 = MEMORY[0x1E0C80A78](v39, v40, v41, v42, v43, v44, v45, v46);
  v231 = (uint64_t)&v208 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x1E0C80A78](v47, v49, v50, v51, v52, v53, v54, v55);
  v229 = (char *)&v208 - v57;
  MEMORY[0x1E0C80A78](v56, v58, v59, v60, v61, v62, v63, v64);
  v237 = (uint64_t)&v208 - v65;
  v234 = sub_1CFB00DEC();
  v236 = *(_QWORD *)(v234 - 8);
  v73 = MEMORY[0x1E0C80A78](v234, v66, v67, v68, v69, v70, v71, v72);
  v75 = (char *)&v208 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x1E0C80A78](v73, v76, v77, v78, v79, v80, v81, v82);
  v85 = (char *)&v208 - v84;
  v93 = MEMORY[0x1E0C80A78](v83, v86, v87, v88, v89, v90, v91, v92);
  v95 = (char *)&v208 - v94;
  MEMORY[0x1E0C80A78](v93, v96, v97, v98, v99, v100, v101, v102);
  v104 = (char *)&v208 - v103;
  v221 = *a2;
  v227 = a2[1];
  v106 = *((_QWORD *)a2 + 1);
  v105 = *((_QWORD *)a2 + 2);
  v226 = *((_QWORD *)a2 + 3);
  v225 = *((_QWORD *)a2 + 4);
  v107 = *((_QWORD *)a2 + 6);
  v232 = *((_QWORD *)a2 + 5);
  v108 = *((_QWORD *)a2 + 7);
  v109 = *((_QWORD *)a2 + 8);
  v110 = v238;
  sub_1CFA83DC0((char *)&v208 - v103);
  v238 = v110;
  if (!v110)
  {
    v219 = (void (*)(_QWORD, _QWORD))v95;
    v216 = v105;
    v217 = v106;
    v210 = v85;
    v218 = v75;
    v211 = v107;
    v212 = v109;
    v213 = v108;
    v111 = v236;
    v112 = v237;
    v113 = v234;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v236 + 56))(v237, 1, 1, v234);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v114 = v233;
    v115 = __swift_project_value_buffer(v233, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v116 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v235 + 2);
    v117 = v228;
    v215 = v115;
    v214 = v116;
    v116(v228, v115, v114);
    v118 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 16);
    v119 = v219;
    v224 = v104;
    v209 = v118;
    v118((char *)v219, (uint64_t)v104, v113);
    v120 = v114;
    v121 = sub_1CFB012B4();
    v122 = sub_1CFB01FC8();
    v123 = os_log_type_enabled(v121, v122);
    v124 = v238;
    if (v123)
    {
      v125 = (uint8_t *)swift_slowAlloc();
      v208 = swift_slowAlloc();
      v243[0] = v208;
      *(_DWORD *)v125 = 136315138;
      v126 = sub_1CFB00DD4();
      v240[1] = (id)sub_1CF9C974C(v126, v127, v243);
      v124 = v238;
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      v128 = v113;
      v219 = *(void (**)(_QWORD, _QWORD))(v236 + 8);
      v219(v119, v113);
      _os_log_impl(&dword_1CF917000, v121, v122, "Successfully created temporary file at %s. Encrypting data & copying from FileHandle", v125, 0xCu);
      v129 = v208;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v129, -1, -1);
      v130 = v125;
      v112 = v237;
      MEMORY[0x1D17DA6E4](v130, -1, -1);

      v131 = (void (*)(char *, uint64_t))*((_QWORD *)v235 + 1);
      v132 = v233;
      v131(v117, v233);
    }
    else
    {
      v133 = *(void (**)(_QWORD, _QWORD))(v111 + 8);
      v128 = v113;
      v219 = v133;
      v133(v119, v113);

      v131 = (void (*)(char *, uint64_t))*((_QWORD *)v235 + 1);
      v131(v117, v120);
      v132 = v120;
    }
    v134 = v230;
    v235 = v131;
    v135 = v218;
    v136 = v229;
    if (v227)
    {
      sub_1CFA84990(v217, v216, v229);
      v137 = v128;
      if (v124)
      {
        v138 = v135;
        v214(v134, v215, v132);
        DIPLogError(_:message:log:)(v124, 0xD000000000000061, 0x80000001CFB2FA40);

        v131(v134, v132);
        v124 = 0;
      }
      else
      {
        sub_1CFA853CC((uint64_t)v136, v112);
        v193 = v222;
        v214(v222, v215, v132);
        v194 = sub_1CFB012B4();
        v195 = sub_1CFB01FC8();
        if (os_log_type_enabled(v194, (os_log_type_t)v195))
        {
          LODWORD(v230) = v195;
          v196 = (uint8_t *)swift_slowAlloc();
          v197 = swift_slowAlloc();
          v243[0] = v197;
          *(_DWORD *)v196 = 136315138;
          swift_beginAccess();
          v198 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v236 + 48))(v112, 1, v137);
          v238 = 0;
          if (v198)
          {
            v199 = v137;
            v200 = 0;
            v201 = 0xE000000000000000;
          }
          else
          {
            v202 = v210;
            v209(v210, v112, v137);
            v200 = sub_1CFB00DD4();
            v201 = v203;
            v199 = v137;
            v219(v202, v137);
          }
          v204 = v222;
          v241 = sub_1CF9C974C(v200, v201, v243);
          sub_1CFB021C0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CF917000, v194, (os_log_type_t)v230, "Successfully created internal diagnostics URL at %s", v196, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17DA6E4](v197, -1, -1);
          MEMORY[0x1D17DA6E4](v196, -1, -1);

          v235(v204, v233);
          v124 = v238;
          v137 = v199;
          v138 = v218;
        }
        else
        {
          v138 = v135;

          v131(v193, v132);
        }
      }
    }
    else
    {
      v138 = v218;
      v137 = v128;
    }
    sub_1CFB00DD4();
    v139 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v140 = (void *)objc_opt_self();
    v141 = objc_msgSend(v140, sel_fileHandleForWritingAtPath_, v139);

    v142 = v237;
    swift_beginAccess();
    v143 = v142;
    v144 = v231;
    sub_1CF9801EC(v143, v231);
    v145 = v236;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v236 + 48))(v144, 1, v137) == 1)
    {
      sub_1CF94C338(v144);
      v146 = 0;
    }
    else
    {
      v147 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 32);
      v148 = v138;
      v147(v138, v144, v137);
      sub_1CFB00DD4();
      v149 = v141;
      v150 = v124;
      v151 = (void *)sub_1CFB01A04();
      swift_bridgeObjectRelease();
      v152 = objc_msgSend(v140, sel_fileHandleForWritingAtPath_, v151);

      v124 = v150;
      v141 = v149;
      v153 = v148;
      v146 = v152;
      v219(v153, v137);
    }
    v154 = v232;
    v155 = sub_1CFB01FB0();
    if (v124)
    {
      v219(v224, v234);

LABEL_37:
LABEL_38:
      v192 = v237;
LABEL_39:
      sub_1CF94C338(v192);
      return;
    }
    v157 = v156;
    v238 = 0;
    v241 = v155;
    v242 = v156;
    v158 = objc_allocWithZone((Class)DIPStreamingCryptor);
    v159 = v226;
    v160 = v225;
    sub_1CF9239E0(v226, v225);
    v161 = (void *)sub_1CFB00E58();
    v162 = objc_msgSend(v158, sel_initWithKey_, v161);
    sub_1CF923A24(v159, v160);

    v163 = v211;
    if (v211 >> 60 != 15)
    {
      sub_1CF9239E0(v154, v211);
      v164 = (void *)sub_1CFB00E58();
      objc_msgSend(v162, sel_addIVParameter_, v164);

      sub_1CF931AB0(v154, v163);
    }
    v165 = v212;
    v166 = v213;
    if (v212 >> 60 != 15)
    {
      sub_1CF9239E0(v213, v212);
      v167 = (void *)sub_1CFB00E58();
      objc_msgSend(v162, sel_addAuthParameter_, v167);

      sub_1CF931AB0(v166, v165);
    }
    v168 = v238;
    if (v157 >> 60 != 15)
    {
      while (1)
      {
        v169 = v241;
        sub_1CF92F5C8(v241, v157);
        v170 = v146;
        v171 = (void *)MEMORY[0x1D17D9F1C]();
        sub_1CFA8510C(v162, v169, v157, v239, v141, v146, &v241, 500000);
        if (v168)
          break;
        objc_autoreleasePoolPop(v171);
        sub_1CF931AB0(v169, v157);

        v157 = v242;
        if (v242 >> 60 == 15)
          goto LABEL_23;
      }
      objc_autoreleasePoolPop(v171);
      v219(v224, v234);

      sub_1CF931AB0(v169, v157);
      sub_1CF931AB0(v241, v242);

      goto LABEL_38;
    }
LABEL_23:
    v172 = objc_msgSend(v162, sel_finish);
    v173 = sub_1CFB00E7C();
    v175 = v174;

    if (v141)
    {
      v176 = v141;
      v177 = (void *)sub_1CFB00E58();
      objc_msgSend(v176, sel_writeData_, v177);

    }
    v178 = v223;
    if (v221)
    {
      v240[0] = 0;
      v179 = objc_msgSend(v239, sel_truncateAtOffset_error_, 0, v240);
      v180 = v240[0];
      if (!v179)
        goto LABEL_36;
      v181 = v240[0];
    }
    v240[0] = 0;
    v182 = objc_msgSend(v239, sel_closeAndReturnError_, v240);
    v180 = v240[0];
    if (v182)
    {
      if (!v141
        || (v240[0] = 0,
            v183 = v180,
            v184 = objc_msgSend(v141, sel_closeAndReturnError_, v240),
            v180 = v240[0],
            v184))
      {
        v185 = v180;
        if (!v146)
        {
LABEL_34:
          v214(v178, v215, v233);
          v188 = sub_1CFB012B4();
          v189 = sub_1CFB01FC8();
          if (os_log_type_enabled(v188, v189))
          {
            v190 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v190 = 0;
            _os_log_impl(&dword_1CF917000, v188, v189, "Finished encrypting data in original liveness FileHandle", v190, 2u);
            MEMORY[0x1D17DA6E4](v190, -1, -1);

            sub_1CF923A24(v173, v175);
          }
          else
          {

            sub_1CF923A24(v173, v175);
          }

          v235(v223, v233);
          v205 = v220;
          (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v220, v224, v234);
          v206 = type metadata accessor for DIPFileUploadCryptor.Result();
          v207 = v237;
          sub_1CF9801EC(v237, v205 + *(int *)(v206 + 20));
          sub_1CF931AB0(v241, v242);

          v192 = v207;
          goto LABEL_39;
        }
        v240[0] = 0;
        v186 = objc_msgSend(v146, sel_closeAndReturnError_, v240);
        v180 = v240[0];
        if (v186)
        {
          v187 = v240[0];
          goto LABEL_34;
        }
      }
    }
LABEL_36:
    v191 = v180;
    sub_1CFB00D20();

    swift_willThrow();
    sub_1CF923A24(v173, v175);

    v219(v224, v234);
    sub_1CF931AB0(v241, v242);
    goto LABEL_37;
  }
}

void sub_1CFA83DC0(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  void *v68;
  id v69;
  void *v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  _BOOL4 v77;
  char *v78;
  uint8_t *v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  id v88;
  void *v89;
  unsigned int v90;
  id v91;
  id v92;
  void *v93;
  unsigned int v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  id v99;
  void *v100;
  unsigned int v101;
  id v102;
  id v103;
  void *v104;
  unsigned __int8 v105;
  char *v106;
  char *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void *v119;
  uint64_t v120;
  id v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  id v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(void);
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint8_t *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  id v144[3];
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;

  v147 = *MEMORY[0x1E0C80C00];
  v139 = sub_1CFB012CC();
  v136 = *(_QWORD *)(v139 - 8);
  v9 = MEMORY[0x1E0C80A78](v139, v2, v3, v4, v5, v6, v7, v8);
  v132 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v9, v11, v12, v13, v14, v15, v16, v17);
  v135 = (char *)&v128 - v19;
  v27 = MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23, v24, v25, v26);
  v133 = (char *)&v128 - v28;
  MEMORY[0x1E0C80A78](v27, v29, v30, v31, v32, v33, v34, v35);
  v134 = (char *)&v128 - v36;
  v37 = sub_1CFB00DEC();
  v38 = *(_QWORD *)(v37 - 8);
  v46 = MEMORY[0x1E0C80A78](v37, v39, v40, v41, v42, v43, v44, v45);
  v131 = (char *)&v128 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x1E0C80A78](v46, v48, v49, v50, v51, v52, v53, v54);
  v57 = (char *)&v128 - v56;
  MEMORY[0x1E0C80A78](v55, v58, v59, v60, v61, v62, v63, v64);
  v66 = (char *)&v128 - v65;
  sub_1CFB00D80();
  sub_1CFB00DB0();
  v130 = v38;
  v67 = *(void (**)(char *, uint64_t))(v38 + 8);
  v67(v57, v37);
  sub_1CFB00DD4();
  sub_1CFB00D74();
  swift_bridgeObjectRelease();
  v137 = a1;
  sub_1CFB00DBC();
  v138 = (uint8_t *)v37;
  v67(v57, v37);
  v142 = 0;
  v68 = (void *)objc_opt_self();
  v69 = objc_msgSend(v68, sel_defaultManager);
  v140 = v66;
  sub_1CFB00DD4();
  v70 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v71 = objc_msgSend(v69, sel_fileExistsAtPath_isDirectory_, v70, &v142);

  if (!v71)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v81 = v139;
    v82 = __swift_project_value_buffer(v139, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v83 = v136;
    v84 = v133;
    v129 = *(void (**)(void))(v136 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v129)(v133, v82, v81);
    v85 = sub_1CFB012B4();
    v86 = sub_1CFB01FC8();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v87 = 0;
      _os_log_impl(&dword_1CF917000, v85, v86, "uploads path doesn't exist. Creating the directory...", v87, 2u);
      MEMORY[0x1D17DA6E4](v87, -1, -1);
    }

    v136 = *(_QWORD *)(v83 + 8);
    ((void (*)(char *, uint64_t))v136)(v84, v81);
    v88 = objc_msgSend(v68, sel_defaultManager);
    sub_1CFB00DD4();
    v89 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v144[0] = 0;
    v90 = objc_msgSend(v88, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v89, 1, 0, v144);

    if (v90)
    {
      v91 = v144[0];
      v78 = v137;
      v80 = v138;
      v72 = v139;
      goto LABEL_14;
    }
    v121 = v144[0];
    v119 = (void *)sub_1CFB00D20();

    swift_willThrow();
    v78 = v137;
    v80 = v138;
LABEL_30:
    v67(v78, (uint64_t)v80);
    v67(v140, (uint64_t)v80);
    LOWORD(v144[0]) = 0;
    v125 = v119;
    v126 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v119, 0, 0xE000000000000000, (__int16 *)v144, 0, v126, 0xD00000000000005DLL, 0x80000001CFB2FAB0, v127, 0xD00000000000002DLL, 0x80000001CFB2FB70, 152);
    swift_willThrow();

    return;
  }
  if ((v142 & 1) == 0)
  {
    v145 = 0;
    v146 = 0xE000000000000000;
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    v145 = 0xD000000000000014;
    v146 = 0x80000001CFB2FBD0;
    sub_1CFB00DD4();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFB01B30();
    v116 = v145;
    v117 = v146;
    LOWORD(v145) = 222;
    v118 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v119 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v116, v117, (__int16 *)&v145, 0, v118, 0xD00000000000005DLL, 0x80000001CFB2FAB0, v120, 0xD00000000000002DLL, 0x80000001CFB2FB70, 130);
    swift_willThrow();
    v78 = v137;
    v80 = v138;
    goto LABEL_30;
  }
  if (qword_1ED9054E8 != -1)
    swift_once();
  v72 = v139;
  v73 = __swift_project_value_buffer(v139, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v74 = v136;
  v129 = *(void (**)(void))(v136 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v129)(v134, v73, v72);
  v75 = sub_1CFB012B4();
  v76 = sub_1CFB01FC8();
  v77 = os_log_type_enabled(v75, v76);
  v78 = v137;
  if (v77)
  {
    v79 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v79 = 0;
    _os_log_impl(&dword_1CF917000, v75, v76, "uploads path exists", v79, 2u);
    MEMORY[0x1D17DA6E4](v79, -1, -1);
  }

  v136 = *(_QWORD *)(v74 + 8);
  ((void (*)(char *, uint64_t))v136)(v134, v72);
  v80 = v138;
LABEL_14:
  v92 = objc_msgSend(v68, sel_defaultManager);
  sub_1CFB00DD4();
  v93 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v94 = objc_msgSend(v92, sel_fileExistsAtPath_, v93);

  if (v94)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v95 = __swift_project_value_buffer(v72, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    ((void (*)(char *, uint64_t, uint64_t))v129)(v135, v95, v72);
    v96 = sub_1CFB012B4();
    v97 = sub_1CFB01FC8();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v98 = 0;
      _os_log_impl(&dword_1CF917000, v96, v97, "coreidvd temporary liveness video file exists. Deleting to copy new liveness video.", v98, 2u);
      MEMORY[0x1D17DA6E4](v98, -1, -1);
    }

    ((void (*)(char *, uint64_t))v136)(v135, v72);
    v99 = objc_msgSend(v68, sel_defaultManager);
    sub_1CFB00DD4();
    v100 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v144[0] = 0;
    v101 = objc_msgSend(v99, sel_removeItemAtPath_error_, v100, v144);

    if (!v101)
    {
      v124 = v144[0];
      v119 = (void *)sub_1CFB00D20();

      swift_willThrow();
      goto LABEL_30;
    }
    v102 = v144[0];
    v72 = v139;
  }
  v103 = objc_msgSend(v68, sel_defaultManager);
  sub_1CFB00DD4();
  v104 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v105 = objc_msgSend(v103, sel_createFileAtPath_contents_attributes_, v104, 0, 0);

  if ((v105 & 1) == 0)
  {
    LOWORD(v144[0]) = 550;
    v122 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v119 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002BLL, 0x80000001CFB2FBA0, (__int16 *)v144, 0, v122, 0xD00000000000005DLL, 0x80000001CFB2FAB0, v123, 0xD00000000000002DLL, 0x80000001CFB2FB70, 146);
    swift_willThrow();
    goto LABEL_30;
  }
  if (qword_1ED9054E8 != -1)
    swift_once();
  __swift_project_value_buffer(v72, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v106 = v132;
  v129();
  v107 = v131;
  (*(void (**)(char *, char *, uint8_t *))(v130 + 16))(v131, v78, v80);
  v108 = sub_1CFB012B4();
  v109 = sub_1CFB01FC8();
  if (os_log_type_enabled(v108, v109))
  {
    v110 = (uint8_t *)swift_slowAlloc();
    v111 = swift_slowAlloc();
    v143 = v111;
    *(_DWORD *)v110 = 136315138;
    v138 = v110 + 4;
    v112 = sub_1CFB00DD4();
    v141 = sub_1CF9C974C(v112, v113, &v143);
    sub_1CFB021C0();
    swift_bridgeObjectRelease();
    v67(v107, (uint64_t)v80);
    _os_log_impl(&dword_1CF917000, v108, v109, "Successfully created temporary file at %s. Will start encrypting data & copying from FileHandle", v110, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v111, -1, -1);
    MEMORY[0x1D17DA6E4](v110, -1, -1);

    v114 = v132;
    v115 = v139;
  }
  else
  {

    v67(v107, (uint64_t)v80);
    v114 = v106;
    v115 = v72;
  }
  ((void (*)(char *, uint64_t))v136)(v114, v115);
  v67(v140, (uint64_t)v80);
}

void sub_1CFA84990(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint8_t *v60;
  uint8_t *v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  id v68;
  void *v69;
  unsigned int v70;
  id v71;
  char *v72;
  id v73;
  char *v74;
  void *v75;
  unsigned int v76;
  id v77;
  void *v78;
  unsigned int v79;
  id v80;
  id v81;
  void *v82;
  unsigned __int8 v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  id v86;
  void *v87;
  void (*v88)(char *, uint64_t);
  unint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  id v104[5];

  v4 = v3;
  v99 = a1;
  v100 = a2;
  v103 = a3;
  v104[4] = *(id *)MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CFB00DEC();
  v16 = *(_QWORD *)(v15 - 8);
  v24 = MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20, v21, v22, v23);
  v101 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v24, v26, v27, v28, v29, v30, v31, v32);
  v35 = (char *)&v95 - v34;
  MEMORY[0x1E0C80A78](v33, v36, v37, v38, v39, v40, v41, v42);
  v44 = (char *)&v95 - v43;
  v45 = sub_1CFB012CC();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45, v47, v48, v49, v50, v51, v52, v53);
  v55 = (char *)&v95 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((os_variant_allows_internal_security_policies() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v103, 1, 1, v15);
    return;
  }
  v102 = v16;
  v98 = v35;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v56 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v55, v56, v45);
  v57 = sub_1CFB012B4();
  v58 = sub_1CFB01FC8();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    v97 = v15;
    v60 = v59;
    *(_WORD *)v59 = 0;
    _os_log_impl(&dword_1CF917000, v57, v58, "Internal build detected", v59, 2u);
    v61 = v60;
    v4 = v3;
    v15 = v97;
    MEMORY[0x1D17DA6E4](v61, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v46 + 8))(v55, v45);
  v62 = (void *)objc_opt_self();
  v63 = objc_msgSend(v62, sel_defaultManager);
  v64 = objc_msgSend(v63, sel_URLsForDirectory_inDomains_, 13, 1);

  v65 = sub_1CFB01CA4();
  v66 = v102;
  if (*(_QWORD *)(v65 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v14, v65 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80)), v15);
    v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
    v67(v14, 0, 1, v15);
  }
  else
  {
    v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v67(v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v14, 1, v15) == 1)
  {
    sub_1CF94C338((uint64_t)v14);
    v67(v103, 1, 1, v15);
    return;
  }
  v96 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
  v97 = v4;
  v96(v44, v14, v15);
  sub_1CFB00DBC();
  v68 = objc_msgSend(v62, sel_defaultManager);
  v69 = (void *)sub_1CFB00DA4();
  v104[0] = 0;
  v70 = objc_msgSend(v68, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v69, 1, 0, v104);

  if (v70)
  {
    v71 = v104[0];
    v72 = v101;
    sub_1CFB00DBC();
    v73 = objc_msgSend(v62, sel_defaultManager);
    v74 = v72;
    sub_1CFB00DD4();
    v75 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v76 = objc_msgSend(v73, sel_fileExistsAtPath_, v75);

    if (v76)
    {
      v77 = objc_msgSend(v62, sel_defaultManager);
      v78 = (void *)sub_1CFB00DA4();
      v104[0] = 0;
      v79 = objc_msgSend(v77, sel_removeItemAtURL_error_, v78, v104);

      if (!v79)
      {
        v91 = v104[0];
        v87 = (void *)sub_1CFB00D20();

        swift_willThrow();
        v88 = *(void (**)(char *, uint64_t))(v102 + 8);
        v88(v74, v15);
        v88(v98, v15);
        goto LABEL_21;
      }
      v80 = v104[0];
    }
    v81 = objc_msgSend(v62, sel_defaultManager);
    sub_1CFB00DD4();
    v82 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v83 = objc_msgSend(v81, sel_createFileAtPath_contents_attributes_, v82, 0, 0);

    if ((v83 & 1) != 0)
    {
      v84 = *(void (**)(char *, uint64_t))(v102 + 8);
      v84(v98, v15);
      v84(v44, v15);
      v85 = v103;
      v96(v103, v74, v15);
      v67(v85, 0, 1, v15);
      return;
    }
    LOWORD(v104[0]) = 554;
    v89 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v87 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001CFB2FB40, (__int16 *)v104, 0, v89, 0xD00000000000005DLL, 0x80000001CFB2FAB0, v90, 0xD000000000000027, 0x80000001CFB2FB10, 170);
    swift_willThrow();
    v88 = *(void (**)(char *, uint64_t))(v102 + 8);
    v88(v74, v15);
    v88(v98, v15);
  }
  else
  {
    v86 = v104[0];
    v87 = (void *)sub_1CFB00D20();

    swift_willThrow();
    v88 = *(void (**)(char *, uint64_t))(v102 + 8);
    v88(v98, v15);
  }
LABEL_21:
  v88(v44, v15);
  LOWORD(v104[0]) = 0;
  v92 = v87;
  v93 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v87, 0, 0xE000000000000000, (__int16 *)v104, 0, v93, 0xD00000000000005DLL, 0x80000001CFB2FAB0, v94, 0xD000000000000027, 0x80000001CFB2FB10, 175);
  swift_willThrow();

}

uint64_t sub_1CFA8510C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  unint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint8_t *v44;
  uint8_t *v45;
  id v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;

  v51 = a8;
  v47 = a7;
  v12 = sub_1CFB012CC();
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x1E0C80A78](v12, v13, v14, v15, v16, v17, v18, v19);
  v48 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)sub_1CFB00E58();
  v22 = objc_msgSend(a1, sel_encryptBuffer_, v21);

  v23 = sub_1CFB00E7C();
  v25 = v24;

  v46 = objc_msgSend(a4, sel_offsetInFile);
  if (a5)
  {
    v26 = (void *)sub_1CFB00E58();
    objc_msgSend(a5, sel_writeData_, v26);

  }
  v27 = v25;
  if (a6)
  {
    v28 = (void *)sub_1CFB00E58();
    objc_msgSend(a6, sel_writeData_, v28);

  }
  v29 = v52;
  v30 = sub_1CFB01FB0();
  if (v29)
    return sub_1CF923A24(v23, v25);
  v33 = v47;
  v34 = *v47;
  v35 = v47[1];
  *v47 = v30;
  v33[1] = v31;
  sub_1CF931AB0(v34, v35);
  v36 = v23;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v37 = v50;
  v38 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v40 = v48;
  v39 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v38, v37);
  v41 = sub_1CFB012B4();
  v42 = sub_1CFB01FC8();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v52 = v27;
    v44 = v43;
    *(_DWORD *)v43 = 134217984;
    v36 = v23;
    v53 = v46;
    sub_1CFB021C0();
    _os_log_impl(&dword_1CF917000, v41, v42, "Encrypted 0.5 MB from FileHandle starting at offset: %llu", v44, 0xCu);
    v45 = v44;
    v27 = v52;
    MEMORY[0x1D17DA6E4](v45, -1, -1);
  }
  sub_1CF923A24(v36, v27);

  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v37);
}

uint64_t sub_1CFA853CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DIPFileUploadCryptor()
{
  return &type metadata for DIPFileUploadCryptor;
}

uint64_t destroy for DIPFileUploadCryptor.Options(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  swift_bridgeObjectRelease();
  result = sub_1CF923A24(a1[3], a1[4]);
  v3 = a1[6];
  if (v3 >> 60 != 15)
    result = sub_1CF923A24(a1[5], v3);
  v4 = a1[8];
  if (v4 >> 60 != 15)
    return sub_1CF923A24(a1[7], v4);
  return result;
}

uint64_t initializeWithCopy for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v5, v6);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = (uint64_t *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
  }
  else
  {
    v9 = *v7;
    sub_1CF9239E0(*v7, *(_QWORD *)(a2 + 48));
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v8;
  }
  v10 = (uint64_t *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v10;
  }
  else
  {
    v12 = *v10;
    sub_1CF9239E0(*v10, v11);
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  sub_1CF9239E0(v4, v5);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  sub_1CF923A24(v6, v7);
  v8 = (uint64_t *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      v10 = *v8;
      sub_1CF9239E0(*v8, *(_QWORD *)(a2 + 48));
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 40);
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  v11 = *v8;
  sub_1CF9239E0(*v8, *(_QWORD *)(a2 + 48));
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v9;
  sub_1CF923A24(v12, v13);
LABEL_8:
  v14 = (uint64_t *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >> 60 != 15)
  {
    if (v15 >> 60 != 15)
    {
      v17 = *v14;
      sub_1CF9239E0(*v14, v15);
      v18 = *(_QWORD *)(a1 + 56);
      v19 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v17;
      *(_QWORD *)(a1 + 64) = v15;
      sub_1CF923A24(v18, v19);
      return a1;
    }
    sub_1CF930DB8(a1 + 56);
    goto LABEL_13;
  }
  if (v15 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v14;
    return a1;
  }
  v16 = *v14;
  sub_1CF9239E0(*v14, v15);
  *(_QWORD *)(a1 + 56) = v16;
  *(_QWORD *)(a1 + 64) = v15;
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1CF923A24(v5, v6);
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 48);
  if (v9 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *v7;
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 48) = v9;
  sub_1CF923A24(v10, v8);
LABEL_6:
  v11 = (_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  if (v12 >> 60 != 15)
  {
    v13 = *(_QWORD *)(a2 + 64);
    if (v13 >> 60 != 15)
    {
      v14 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v11;
      *(_QWORD *)(a1 + 64) = v13;
      sub_1CF923A24(v14, v12);
      return a1;
    }
    sub_1CF930DB8(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPFileUploadCryptor.Options(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPFileUploadCryptor.Options(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPFileUploadCryptor.Options()
{
  return &type metadata for DIPFileUploadCryptor.Options;
}

uint64_t *initializeBufferWithCopyOfBuffer for DIPFileUploadCryptor.Result(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CFB00DEC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DIPFileUploadCryptor.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1CFB00DEC();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1CFB00DEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1CFB00DEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1CFB00DEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1CFB00DEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPFileUploadCryptor.Result()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA85DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1CFB00DEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DIPFileUploadCryptor.Result()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA85E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1CFB00DEC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1CFA85EE8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CFB00DEC();
  if (v0 <= 0x3F)
  {
    sub_1CFA85F6C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1CFA85F6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFBC4498[0])
  {
    sub_1CFB00DEC();
    v0 = sub_1CFB02190();
    if (!v1)
      atomic_store(v0, qword_1EFBC4498);
  }
}

uint64_t static IdentityBindingDetails.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityBindingDetails.templateUUIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityBindingDetails.passDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

id IdentityBindingDetails.__allocating_init(templateUUIDs:passDescriptions:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id IdentityBindingDetails.init(templateUUIDs:passDescriptions:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

Swift::Void __swiftcall IdentityBindingDetails.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  sub_1CFB00F9C();
  v2 = (void *)sub_1CFB01C8C();
  v3 = (void *)sub_1CFB01A04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_1CFB01C8C();
  v5 = (id)sub_1CFB01A04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

}

id IdentityBindingDetails.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return IdentityBindingDetails.init(coder:)(a1);
}

id IdentityBindingDetails.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  objc_super v11;
  uint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBBFA60);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CFB059A0;
  v6 = sub_1CF9775E8(0, (unint64_t *)&qword_1ED904800);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = sub_1CF9775E8(0, (unint64_t *)&unk_1EFBC44E0);
  v7 = v2;
  sub_1CFB02124();
  swift_bridgeObjectRelease();
  if (!v14)
  {

    sub_1CF929418((uint64_t)v13);
LABEL_11:
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC44F0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_11;
  }
  *(_QWORD *)&v7[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = v12;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1CFB059A0;
  *(_QWORD *)(v8 + 32) = v6;
  *(_QWORD *)(v8 + 40) = sub_1CF9775E8(0, (unint64_t *)&qword_1ED903980);
  sub_1CFB02124();
  swift_bridgeObjectRelease();
  if (!v14)
  {

    sub_1CF929418((uint64_t)v13);
LABEL_10:

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_10;
  }
  *(_QWORD *)&v7[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = v12;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

id IdentityBindingDetails.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void IdentityBindingDetails.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id IdentityBindingDetails.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IdentityBindingDetails()
{
  return objc_opt_self();
}

uint64_t method lookup function for IdentityBindingDetails()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityBindingDetails.__allocating_init(templateUUIDs:passDescriptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of IdentityBindingDetails.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *ISO18013ReaderAuthentication.sessionTranscript.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = v1[5];
  v13 = v1[4];
  v2 = v13;
  v14 = v3;
  v5 = v1[7];
  v15 = v1[6];
  v4 = v15;
  v16 = v5;
  v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  v8 = v1[3];
  v11 = v1[2];
  v7 = v11;
  v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_1CFA78E84((uint64_t *)v10, (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA394CC);
}

uint64_t ISO18013ReaderAuthentication.itemsRequestBytes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 136));
  return v1;
}

uint64_t ISO18013ReaderAuthentication.dataValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1CFB0114C();
  swift_allocObject();
  sub_1CFB01140();
  sub_1CFA86810();
  v0 = sub_1CFB01128();
  v2 = v1;
  swift_release();
  swift_allocObject();
  sub_1CF9239E0(v0, v2);
  sub_1CFB01140();
  sub_1CF9239E0(v0, v2);
  sub_1CF9319D0();
  v3 = sub_1CFB0111C();
  v5 = v4;
  swift_release();
  sub_1CF923A24(v0, v2);
  sub_1CF923A24(v0, v2);
  sub_1CF9239E0(v3, v5);
  sub_1CF923A24(v3, v5);
  sub_1CF923A24(v0, v2);
  return v3;
}

unint64_t sub_1CFA86810()
{
  unint64_t result;

  result = qword_1EFBC4520;
  if (!qword_1EFBC4520)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013ReaderAuthentication, &type metadata for ISO18013ReaderAuthentication);
    atomic_store(result, (unint64_t *)&qword_1EFBC4520);
  }
  return result;
}

__n128 ISO18013ReaderAuthentication.init(sessionTranscript:itemsRequestBytes:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 80) = v4;
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a4 + 112) = v5;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v6;
  result = *(__n128 *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a4 + 32) = result;
  *(_OWORD *)(a4 + 48) = v8;
  *(_QWORD *)(a4 + 128) = a2;
  *(_QWORD *)(a4 + 136) = a3;
  return result;
}

uint64_t *ISO18013ReaderAuthentication.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[9];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[24];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B08();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1CFB0282C();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1CFA78E40();
  sub_1CFB02838();
  v26 = v34;
  v27 = v35;
  v28 = v36;
  v29 = v37;
  v22 = v30;
  v23 = v31;
  v24 = v32;
  v25 = v33;
  v40 = v30;
  v41 = v31;
  v42 = v32;
  v43 = v33;
  v46 = v36;
  v47 = v37;
  v44 = v34;
  v45 = v35;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1CFA78E84((uint64_t *)&v22, (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA394CC);
  sub_1CF92399C();
  sub_1CFB02838();
  v5 = v21;
  sub_1CF9239E0(v21, *((unint64_t *)&v21 + 1));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v15 = v26;
  v16 = v27;
  v17 = v28;
  v18 = v29;
  v11 = v22;
  v12 = v23;
  v13 = v24;
  v14 = v25;
  v19 = v21;
  sub_1CFA86BCC((uint64_t *)&v11, (void (*)(void))sub_1CF9239E0, (void (*)(uint64_t, uint64_t))sub_1CF92F5C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3946C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA394CC);
  sub_1CF923A24(v5, *((unint64_t *)&v5 + 1));
  sub_1CFA78E84((uint64_t *)&v22, (void (*)(void))sub_1CF923A24, (void (*)(uint64_t, uint64_t))sub_1CF931AB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3B310, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA78FC0);
  v6 = v18;
  a2[6] = v17;
  a2[7] = v6;
  a2[8] = v19;
  v7 = v14;
  a2[2] = v13;
  a2[3] = v7;
  v8 = v16;
  a2[4] = v15;
  a2[5] = v8;
  v9 = v12;
  *a2 = v11;
  a2[1] = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20[4] = v44;
  v20[5] = v45;
  v20[6] = v46;
  v20[7] = v47;
  v20[0] = v40;
  v20[1] = v41;
  v20[2] = v42;
  v20[3] = v43;
  v20[8] = v5;
  return sub_1CFA86BCC((uint64_t *)v20, (void (*)(void))sub_1CF923A24, (void (*)(uint64_t, uint64_t))sub_1CF931AB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA3B310, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CFA78FC0);
}

uint64_t *sub_1CFA86BCC(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v7 = a1[8];
  v8 = a1[9];
  v9 = a1[10];
  v10 = a1[11];
  v11 = a1[12];
  v12 = a1[13];
  v13 = a1[14];
  v14 = a1[15];
  v16 = a1[17];
  v17 = a1[16];
  sub_1CFA78F30(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3, a4);
  a5(v7, v8, v9, v10, v11, v12, v13, v14);
  ((void (*)(uint64_t, uint64_t))a2)(v17, v16);
  return a1;
}

uint64_t ISO18013ReaderAuthentication.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B44();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_1CFB0285C();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_1CFA793A8();
    sub_1CFB02868();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_1CFA3B34C();
    sub_1CFB02868();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t *sub_1CFA86DE8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return ISO18013ReaderAuthentication.init(from:)(a1, a2);
}

uint64_t sub_1CFA86DFC(_QWORD *a1)
{
  return ISO18013ReaderAuthentication.encode(to:)(a1);
}

uint64_t destroy for ISO18013ReaderAuthentication(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_1CF923A24(*a1, v2);
    v3 = a1[3];
    if (v3 >> 60 != 15)
      sub_1CF923A24(a1[2], v3);
    v4 = a1[5];
    if (v4 >> 60 != 15)
    {
      sub_1CF923A24(a1[4], v4);
      v5 = a1[7];
      if (v5 >> 60 != 15)
        sub_1CF923A24(a1[6], v5);
    }
  }
  if (a1[11])
  {
    sub_1CF923A24(a1[8], a1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CF923A24(a1[14], a1[15]);
  }
  return sub_1CF923A24(a1[16], a1[17]);
}

uint64_t initializeWithCopy for ISO18013ReaderAuthentication(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
  else
  {
    v8 = *a2;
    sub_1CF9239E0(*a2, a2[1]);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v4;
    v9 = a2 + 2;
    v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      v11 = *v9;
      sub_1CF9239E0(*v9, a2[3]);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v10;
    }
    v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      v14 = a2[4];
      sub_1CF9239E0(v14, a2[5]);
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = a2 + 6;
      v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
      else
      {
        v22 = *v15;
        sub_1CF9239E0(*v15, a2[7]);
        *(_QWORD *)(a1 + 48) = v22;
        *(_QWORD *)(a1 + 56) = v16;
        v7 = a2[11];
        if (v7)
          goto LABEL_12;
      }
LABEL_14:
      v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      goto LABEL_15;
    }
    v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    v7 = a2[11];
    if (!v7)
      goto LABEL_14;
  }
LABEL_12:
  v17 = a2[8];
  v18 = a2[9];
  sub_1CF9239E0(v17, v18);
  *(_QWORD *)(a1 + 64) = v17;
  *(_QWORD *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = v7;
  v19 = a2[13];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = v19;
  v20 = a2[14];
  v21 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF9239E0(v20, v21);
  *(_QWORD *)(a1 + 112) = v20;
  *(_QWORD *)(a1 + 120) = v21;
LABEL_15:
  v26 = a2[16];
  v25 = a2[17];
  sub_1CF9239E0(v26, v25);
  *(_QWORD *)(a1 + 128) = v26;
  *(_QWORD *)(a1 + 136) = v25;
  return a1;
}

uint64_t assignWithCopy for ISO18013ReaderAuthentication(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      v5 = *a2;
      v6 = a2[1];
      v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    v11 = *(_QWORD *)a2;
    sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v4;
    v12 = (uint64_t *)(a2 + 1);
    v13 = *((_QWORD *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      v20 = *v12;
      sub_1CF9239E0(*v12, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v13;
    }
    v21 = *((_QWORD *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    v29 = *((_QWORD *)a2 + 4);
    sub_1CF9239E0(v29, v21);
    *(_QWORD *)(a1 + 32) = v29;
    *(_QWORD *)(a1 + 40) = v21;
    v30 = a2 + 3;
    v31 = *((_QWORD *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    v33 = *(_QWORD *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
    v8 = a2[3];
    v10 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)a2;
  sub_1CF9239E0(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1CF923A24(v15, v16);
  v17 = (uint64_t *)(a2 + 1);
  v18 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  v23 = *v17;
  sub_1CF9239E0(*v17, *((_QWORD *)a2 + 3));
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v18;
  sub_1CF923A24(v24, v25);
LABEL_18:
  v26 = (_OWORD *)(a1 + 32);
  v27 = a2 + 2;
  v21 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      v28 = a2[3];
      *v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    v32 = a2[3];
    *v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  v34 = *((_QWORD *)a2 + 4);
  sub_1CF9239E0(v34, *((_QWORD *)a2 + 5));
  v35 = *(_QWORD *)(a1 + 32);
  v36 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v34;
  *(_QWORD *)(a1 + 40) = v21;
  sub_1CF923A24(v35, v36);
  v37 = (uint64_t *)(a2 + 3);
  v31 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      v33 = *v37;
LABEL_26:
      sub_1CF9239E0(v33, v31);
      *(_QWORD *)(a1 + 48) = v33;
      *(_QWORD *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  v38 = *v37;
  sub_1CF9239E0(*v37, *((_QWORD *)a2 + 7));
  v39 = *(_QWORD *)(a1 + 48);
  v40 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v38;
  *(_QWORD *)(a1 + 56) = v31;
  sub_1CF923A24(v39, v40);
LABEL_34:
  v41 = (_OWORD *)(a1 + 64);
  v42 = a2 + 4;
  v43 = *((_QWORD *)a2 + 11);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v43)
    {
      v44 = *((_QWORD *)a2 + 8);
      v45 = *((_QWORD *)a2 + 9);
      sub_1CF9239E0(v44, v45);
      v46 = *(_QWORD *)(a1 + 64);
      v47 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v44;
      *(_QWORD *)(a1 + 72) = v45;
      sub_1CF923A24(v46, v47);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v48 = *((_QWORD *)a2 + 14);
      v49 = *((_QWORD *)a2 + 15);
      sub_1CF9239E0(v48, v49);
      v50 = *(_QWORD *)(a1 + 112);
      v51 = *(_QWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 112) = v48;
      *(_QWORD *)(a1 + 120) = v49;
      sub_1CF923A24(v50, v51);
    }
    else
    {
      sub_1CFA3BAD0(a1 + 64);
      v56 = a2[7];
      v58 = *v42;
      v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    v52 = *((_QWORD *)a2 + 8);
    v53 = *((_QWORD *)a2 + 9);
    sub_1CF9239E0(v52, v53);
    *(_QWORD *)(a1 + 64) = v52;
    *(_QWORD *)(a1 + 72) = v53;
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    v54 = *((_QWORD *)a2 + 14);
    v55 = *((_QWORD *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF9239E0(v54, v55);
    *(_QWORD *)(a1 + 112) = v54;
    *(_QWORD *)(a1 + 120) = v55;
  }
  else
  {
    v59 = *v42;
    v60 = a2[5];
    v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  v63 = *((_QWORD *)a2 + 16);
  v62 = *((_QWORD *)a2 + 17);
  sub_1CF9239E0(v63, v62);
  v64 = *(_QWORD *)(a1 + 128);
  v65 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v63;
  *(_QWORD *)(a1 + 136) = v62;
  sub_1CF923A24(v64, v65);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for ISO18013ReaderAuthentication(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1CFA3BAA4((uint64_t *)a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1CF923A24(v8, v4);
  v9 = (_OWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  if (v10 >> 60 == 15)
    goto LABEL_8;
  v11 = *(_QWORD *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 24) = v11;
  sub_1CF923A24(v12, v10);
LABEL_10:
  v13 = *(_QWORD *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1CFA3BA78((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v14;
  sub_1CF923A24(v16, v13);
  v17 = (_OWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  if (v18 >> 60 == 15)
    goto LABEL_17;
  v19 = *(_QWORD *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1CF930DB8(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  v20 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 56) = v19;
  sub_1CF923A24(v20, v18);
LABEL_19:
  if (!*(_QWORD *)(a1 + 88))
  {
LABEL_23:
    v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    goto LABEL_24;
  }
  v21 = *(_QWORD *)(a2 + 88);
  if (!v21)
  {
    sub_1CFA3BAD0(a1 + 64);
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1CF923A24(v22, v23);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1CF923A24(v25, v26);
LABEL_24:
  v29 = *(_QWORD *)(a1 + 128);
  v30 = *(_QWORD *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  sub_1CF923A24(v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013ReaderAuthentication(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderAuthentication(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_QWORD *)(result + 88) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderAuthentication()
{
  return &type metadata for ISO18013ReaderAuthentication;
}

uint64_t CBOREncodedCBOR.init(value:tag:encoder:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t result;

  *a6 = 24;
  v11 = (char *)a6 + *(int *)(type metadata accessor for CBOREncodedCBOR(0, a3, a4, a5) + 48);
  v12 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, a1, a3);
  if ((a2 & 1) != 0)
    v13 = sub_1CFB0111C();
  else
    v13 = sub_1CFB01128();
  v15 = v13;
  v16 = v14;
  swift_release();
  if (v6)
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(a1, a3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v11, a3);
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, a3);
    a6[1] = v15;
    a6[2] = v16;
  }
  return result;
}

uint64_t type metadata accessor for CBOREncodedCBOR(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CBOREncodedCBOR);
}

uint64_t TaggedCBOR.init(data:tag:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t Base64URLEncodedString.dataValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1CF9239E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Base64URLEncodedString.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Base64URLEncodedString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t inited;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[4];
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B14();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    v5 = sub_1CFB028C8();
    v7 = v6;
    v26 = v5;
    v8 = sub_1CF9B9CD8();
    v9 = MEMORY[0x1E0DEA968];
    sub_1CFB02214();
    v23 = v8;
    v24 = v8;
    v21 = v9;
    v22 = v8;
    sub_1CFB02214();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = sub_1CFB01AF4();
    swift_bridgeObjectRelease();
    v11 = v10 & 3;
    if (v10 <= 0)
      v11 = -(-v10 & 3);
    if (v11 >= 1)
    {
      MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v11);
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
    }
    v12 = sub_1CFB00E28();
    v14 = v13;
    sub_1CF92F5C8(v12, v13);
    swift_bridgeObjectRelease();
    if (v14 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
      *(_QWORD *)(inited + 32) = sub_1CFB01A28();
      *(_QWORD *)(inited + 40) = v16;
      *(_QWORD *)(inited + 72) = v9;
      *(_QWORD *)(inited + 48) = 0xD000000000000029;
      *(_QWORD *)(inited + 56) = 0x80000001CFB2F710;
      sub_1CF9226B8(inited);
      v17 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
      v18 = (void *)sub_1CFB01A04();
      v19 = (void *)sub_1CFB01944();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -1, v19, v21, v22, v23, v24);

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      sub_1CF931AB0(v12, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      *a2 = v12;
      a2[1] = v14;
      a2[2] = v26;
      a2[3] = v7;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CFA87BF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return Base64URLEncodedString.init(from:)(a1, a2);
}

uint64_t Base64URLEncodedCBOR.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Base64URLEncodedCBOR.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Base64URLEncodedCBOR.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[4];
  _QWORD *v51;

  v44 = a9;
  v43 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v13;
  v16 = type metadata accessor for Base64URLEncodedCBOR(0, v14, v13, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21, v22, v23, v24);
  v26 = (char *)&v37 - v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v27 = (uint64_t)v51;
  sub_1CFB02B14();
  if (v27)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = v17;
  v41 = v12;
  v51 = a1;
  v42 = v26;
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  sub_1CFA87F54();
  sub_1CFB02910();
  v28 = v46;
  v29 = v47;
  v30 = v49;
  v31 = v42;
  *v42 = v48;
  v31[1] = v30;
  sub_1CFB010F8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1CFB010EC();
  v32 = v41;
  v33 = a2;
  v38 = v28;
  v39 = v29;
  sub_1CFB010C8();
  sub_1CF923A24(v38, v39);
  swift_release();
  swift_bridgeObjectRelease();
  v34 = v42;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))((char *)v42 + *(int *)(v16 + 44), v32, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v35 = v40;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v40 + 16))(v44, v34, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v35 + 8))(v34, v16);
}

uint64_t type metadata accessor for Base64URLEncodedCBOR(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Base64URLEncodedCBOR);
}

unint64_t sub_1CFA87F54()
{
  unint64_t result;

  result = qword_1EFBC4528;
  if (!qword_1EFBC4528)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for Base64URLEncodedString, &type metadata for Base64URLEncodedString);
    atomic_store(result, (unint64_t *)&qword_1EFBC4528);
  }
  return result;
}

void *sub_1CFA87F98(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  int v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(__int128 *, char *, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)(uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v85;
  uint64_t (*v86)(uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, char *, uint64_t);
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95[2];
  __int128 v96[3];

  v92 = a4;
  v93 = a2;
  v94 = a3;
  v5 = sub_1CFB02400();
  v6 = *(_QWORD *)(v5 - 8);
  v14 = MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17, v18, v19, v20, v21, v22, v23);
  v25 = (char *)&v86 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC46D8);
  MEMORY[0x1E0C80A78](v26, v27, v28, v29, v30, v31, v32, v33);
  v35 = (char *)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1CFB0240C();
  v37 = *(_QWORD *)(v36 - 8);
  v45 = MEMORY[0x1E0C80A78](v36, v38, v39, v40, v41, v42, v43, v44);
  v47 = (__int128 *)((char *)&v86 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v45, v48, v49, v50, v51, v52, v53, v54);
  v56 = (char *)&v86 - v55;
  *(_QWORD *)&v96[0] = a1;
  v57 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
  v58 = swift_dynamicCast();
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  if (v58)
  {
    v87 = v25;
    v60 = v94;
    v91 = v16;
    v61 = v6;
    v59(v35, 0, 1, v36);
    v62 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v62(v56, v35, v36);
    v63 = *(void (**)(__int128 *, char *, uint64_t))(v37 + 16);
    v63(v47, v56, v36);
    v64 = (*(uint64_t (**)(__int128 *, uint64_t))(v37 + 88))(v47, v36);
    v65 = *MEMORY[0x1E0DEC450];
    v89 = v61;
    v90 = (void (*)(uint64_t, char *, uint64_t))v63;
    v88 = v5;
    if (v64 == v65)
    {
      (*(void (**)(__int128 *, uint64_t))(v37 + 96))(v47, v36);
      v66 = *(_QWORD *)v47;
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBFBD0);
      v68 = v87;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v87, (char *)v47 + *(int *)(v67 + 48), v5);
      *(_QWORD *)(swift_allocObject() + 16) = v66;
      v69 = sub_1CFA8B6EC;
    }
    else if (v64 == *MEMORY[0x1E0DEC460])
    {
      (*(void (**)(__int128 *, uint64_t))(v37 + 96))(v47, v36);
      v71 = *(_QWORD *)v47;
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBFBD0);
      v68 = v87;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v87, (char *)v47 + *(int *)(v72 + 48), v5);
      *(_QWORD *)(swift_allocObject() + 16) = v71;
      v69 = sub_1CFA8B6BC;
    }
    else if (v64 == *MEMORY[0x1E0DEC448])
    {
      (*(void (**)(__int128 *, uint64_t))(v37 + 96))(v47, v36);
      v73 = (char *)v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC46E0) + 48);
      sub_1CFA31488(v47, (uint64_t)v96);
      v68 = v87;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v87, v73, v5);
      sub_1CFA31488(v96, (uint64_t)v95);
      v74 = swift_allocObject();
      sub_1CFA31488(v95, v74 + 16);
      v69 = sub_1CFA8B6A4;
    }
    else
    {
      if (v64 != *MEMORY[0x1E0DEC458])
      {
        a1 = (void *)swift_allocError();
        v62(v85, v56, v36);
        (*(void (**)(__int128 *, uint64_t))(v37 + 8))(v47, v36);
        return a1;
      }
      (*(void (**)(__int128 *, uint64_t))(v37 + 96))(v47, v36);
      v68 = v87;
      (*(void (**)(char *, __int128 *, uint64_t))(v61 + 32))(v87, v47, v5);
      v69 = sub_1CFA89ECC;
    }
    v86 = v69;
    v75 = v60;
    v76 = v68;
    v77 = v93;
    __swift_project_boxed_opaque_existential_1(v92, v92[3]);
    *(_QWORD *)&v95[0] = sub_1CFB02AFC();
    v78 = sub_1CFB023E8();
    sub_1CF97F198(v78);
    *(_QWORD *)&v96[0] = v77;
    *((_QWORD *)&v96[0] + 1) = v75;
    swift_bridgeObjectRetain();
    sub_1CFB01B30();
    sub_1CFB023F4();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    swift_allocError();
    v90(v79, v56, v36);
    v80 = (uint64_t)v91;
    sub_1CFB023DC();
    a1 = (void *)v86(v80);
    swift_release();
    v81 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v82 = v80;
    v83 = v88;
    v81(v82, v88);
    v81((uint64_t)v76, v83);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v56, v36);
  }
  else
  {
    v59(v35, 1, 1, v36);
    sub_1CF931B1C((uint64_t)v35, &qword_1EFBC46D8);
    v70 = a1;
  }
  return a1;
}

uint64_t Base64URLEncodedCBOR.encode(to:)(_QWORD *a1)
{
  void *v1;
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B50();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFB02928();
  if (v1)
  {
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CFB02BB0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFA88604(v1, 0, 0xE000000000000000, a1);
    swift_bridgeObjectRelease();
    swift_willThrow();

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void *sub_1CFA88604(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  int v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(uint64_t, char *, uint64_t);
  unsigned int v62;
  void (*v63)(_OWORD *, uint64_t);
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  id v74;
  char *v75;
  uint64_t v77;
  char *v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  unsigned int v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _OWORD v90[2];
  _OWORD v91[2];

  v84 = a4;
  v85 = a2;
  v86 = a3;
  v5 = sub_1CFB0243C();
  v6 = *(_QWORD *)(v5 - 8);
  v14 = MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17, v18, v19, v20, v21, v22, v23);
  v25 = (char *)&v77 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC46C8);
  MEMORY[0x1E0C80A78](v26, v27, v28, v29, v30, v31, v32, v33);
  v35 = (char *)&v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1CFB02448();
  v37 = *(_QWORD *)(v36 - 8);
  v45 = MEMORY[0x1E0C80A78](v36, v38, v39, v40, v41, v42, v43, v44);
  v47 = (_OWORD *)((char *)&v77 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v45, v48, v49, v50, v51, v52, v53, v54);
  v56 = (char *)&v77 - v55;
  *(_QWORD *)&v91[0] = a1;
  v57 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
  v58 = swift_dynamicCast();
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  if (v58)
  {
    v82 = v16;
    v83 = v6;
    v59(v35, 0, 1, v36);
    v60 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v60(v56, v35, v36);
    v61 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 16);
    v61((uint64_t)v47, v56, v36);
    v62 = (*(uint64_t (**)(_OWORD *, uint64_t))(v37 + 88))(v47, v36);
    if (v62 == *MEMORY[0x1E0DEC4B0])
    {
      v63 = *(void (**)(_OWORD *, uint64_t))(v37 + 96);
      v81 = v62;
      v63(v47, v36);
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC46D0);
      v64 = (char *)v47 + *(int *)(v80 + 48);
      sub_1CF923FD8(v47, v91);
      v65 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
      v79 = v61;
      v65(v25, v64, v5);
      sub_1CF923FD8(v91, v90);
      __swift_project_boxed_opaque_existential_1(v84, v84[3]);
      v89 = sub_1CFB02AFC();
      v78 = v25;
      v66 = sub_1CFB023E8();
      sub_1CF97F198(v66);
      v87 = v85;
      v88 = v86;
      swift_bridgeObjectRetain();
      sub_1CFB01B30();
      sub_1CFB023F4();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      swift_allocError();
      v79(v67, v56, v36);
      v68 = v82;
      sub_1CFB023DC();
      a1 = (void *)swift_allocError();
      v70 = v69;
      v71 = v69 + *(int *)(v80 + 48);
      sub_1CF94BBF0((uint64_t)v90, v69);
      v72 = v83;
      (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v71, v68, v5);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v70, v81, v36);
      v73 = *(void (**)(char *, uint64_t))(v72 + 8);
      v73(v68, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      v73(v78, v5);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v56, v36);
    }
    else
    {
      a1 = (void *)swift_allocError();
      v60(v75, v56, v36);
      (*(void (**)(_OWORD *, uint64_t))(v37 + 8))(v47, v36);
    }
  }
  else
  {
    v59(v35, 1, 1, v36);
    sub_1CF931B1C((uint64_t)v35, &qword_1EFBC46C8);
    v74 = a1;
  }
  return a1;
}

uint64_t sub_1CFA889F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  return Base64URLEncodedCBOR.init(from:)(a1, a2[2], a2[3], a2[4], a3, a4, a5, a6, a7);
}

uint64_t sub_1CFA88A14(_QWORD *a1)
{
  return Base64URLEncodedCBOR.encode(to:)(a1);
}

uint64_t CBOREncodedCBOR.dataValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t CBOREncodedCBOR.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t CBOREncodedCBOR.init(_:dataValue:decoder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v15 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a9 = 24;
  *((_QWORD *)a9 + 1) = v18;
  *((_QWORD *)a9 + 2) = v19;
  sub_1CF9239E0(v18, v19);
  sub_1CFB010C8();
  swift_release();
  sub_1CF923A24(a2, a3);
  if (v9)
    return sub_1CF923A24(a2, a3);
  v21 = type metadata accessor for CBOREncodedCBOR(0, a5, a6, v23);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(&a9[*(int *)(v21 + 48)], v17, a5);
}

uint64_t CBOREncodedCBOR.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD v47[4];
  char *v48;

  v43 = a9;
  v42 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v13;
  v16 = type metadata accessor for CBOREncodedCBOR(0, v14, v13, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21, v22, v23, v24);
  v26 = (char *)&v38 - v25;
  *(uint64_t *)((char *)&v38 - v25) = 24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v27 = v48;
  sub_1CFB02B14();
  if (v27)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v48 = v12;
  v40 = a2;
  v41 = v26;
  v38 = v16;
  v39 = v17;
  __swift_project_boxed_opaque_existential_1(v47, v47[3]);
  sub_1CF92399C();
  sub_1CFB02910();
  v28 = v45;
  v29 = v46;
  v30 = v41;
  *((_QWORD *)v41 + 1) = v45;
  *((_QWORD *)v30 + 2) = v29;
  sub_1CFB010F8();
  swift_allocObject();
  sub_1CF9239E0(v28, v29);
  sub_1CFB010EC();
  v31 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02A30();
  sub_1CFB010E0();
  v32 = v48;
  v33 = v40;
  sub_1CFB010C8();
  sub_1CF923A24(v28, v29);
  swift_release();
  v34 = v38;
  v35 = v41;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v41[*(int *)(v38 + 48)], v32, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v36 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v43, v35, v34);
  __swift_destroy_boxed_opaque_existential_1(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v35, v34);
}

uint64_t CBOREncodedCBOR.encode(to:)(_QWORD *a1)
{
  void *v1;
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B50();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFA3B34C();
  sub_1CFB02970();
  if (v1)
  {
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    sub_1CFB02BB0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFA88604(v1, 0xD00000000000002ELL, 0x80000001CFB2FD70, a1);
    swift_bridgeObjectRelease();
    swift_willThrow();

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1CFA89008@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  return CBOREncodedCBOR.init(from:)(a1, a2[2], a2[3], a2[4], a3, a4, a5, a6, a7);
}

uint64_t sub_1CFA89028(_QWORD *a1)
{
  return CBOREncodedCBOR.encode(to:)(a1);
}

uint64_t static CBOREncodedCBOR<>.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8;

  if (*a1 != *a2)
    return 0;
  sub_1CF9421E8(a1[1], a1[2]);
  if ((v8 & 1) == 0)
    return 0;
  type metadata accessor for CBOREncodedCBOR(0, a3, a4, a5);
  return sub_1CFB019F8() & 1;
}

uint64_t sub_1CFA890D8(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  return static CBOREncodedCBOR<>.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t BigUIntCBOR.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t BigUIntCBOR.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CFA72450(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF96201C();
  v1 = sub_1CFB019BC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t BigUIntCBOR.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 2;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

uint64_t BigUIntCBOR.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B14();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_1CF92399C();
  sub_1CFB02910();
  sub_1CF9239E0(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  *a2 = 2;
  a2[1] = v6;
  a2[2] = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1CF923A24(v6, v7);
}

uint64_t BigUIntCBOR.encode(to:)(_QWORD *a1)
{
  void *v1;
  _BYTE v4[24];
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B50();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1CFA3B34C();
  sub_1CFB02970();
  if (v1)
  {
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    sub_1CFA88604(v1, 0xD000000000000032, 0x80000001CFB2FDA0, a1);
    swift_willThrow();

  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t BigUIntCBOR.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1CFB02A9C();
  sub_1CF9239E0(v1, v2);
  sub_1CFB00E88();
  return sub_1CF923A24(v1, v2);
}

void static BigUIntCBOR.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    sub_1CF9421E8(a1[1], a1[2]);
}

uint64_t BigUIntCBOR.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1CFB02A90();
  sub_1CFB02A9C();
  sub_1CF9239E0(v1, v2);
  sub_1CFB00E88();
  sub_1CF923A24(v1, v2);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA894C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return BigUIntCBOR.init(from:)(a1, a2);
}

uint64_t sub_1CFA894D4(_QWORD *a1)
{
  return BigUIntCBOR.encode(to:)(a1);
}

uint64_t sub_1CFA894E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1CFB02A90();
  sub_1CFB02A9C();
  sub_1CF9239E0(v1, v2);
  sub_1CFB00E88();
  sub_1CF923A24(v1, v2);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA89560()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1CFB02A9C();
  sub_1CF9239E0(v1, v2);
  sub_1CFB00E88();
  return sub_1CF923A24(v1, v2);
}

uint64_t sub_1CFA895B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_1CFB02A90();
  sub_1CFB02A9C();
  sub_1CF9239E0(v1, v2);
  sub_1CFB00E88();
  sub_1CF923A24(v1, v2);
  return sub_1CFB02ACC();
}

void sub_1CFA8962C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    sub_1CF9421E8(a1[1], a1[2]);
}

uint64_t sub_1CFA89650()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CFA72450(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF96201C();
  v1 = sub_1CFB019BC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t TaggedCBOR.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1CF9239E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t TaggedCBOR.tag.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TaggedCBOR.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  _BYTE v19[24];
  uint64_t v20;
  uint64_t v21;

  v21 = sub_1CFB01164();
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21, v5, v6, v7, v8, v9, v10, v11);
  v18[0] = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B50();
  sub_1CF923A68();
  v18[1] = v13;
  v18[2] = v14;
  sub_1CF9239E0(v13, v14);
  sub_1CF9319D0();
  sub_1CFB02100();
  if (v2)
  {
    sub_1CFA88604(v2, 0xD00000000000001ALL, 0x80000001CFB2FDE0, a1);
    swift_willThrow();

  }
  else
  {
    v15 = v18[0];
    sub_1CFB01158();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    sub_1CF923AA4();
    v16 = v21;
    sub_1CFB02970();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_1CFA898C0(_QWORD *a1)
{
  return TaggedCBOR.encode(to:)(a1);
}

uint64_t ISO8601DateString.dateValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CFB00F54();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ISO8601DateString.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ISO8601DateString() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO8601DateString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t inited;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD v73[4];
  _QWORD *v74;

  v70 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1CFB00F54();
  v12 = *(_QWORD *)(v71 - 8);
  v20 = MEMORY[0x1E0C80A78](v71, v13, v14, v15, v16, v17, v18, v19);
  v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23, v24, v25, v26, v27, v28, v29);
  v31 = (char *)&v65 - v30;
  v32 = type metadata accessor for ISO8601DateString();
  MEMORY[0x1E0C80A78](v32, v33, v34, v35, v36, v37, v38, v39);
  v41 = (char *)&v65 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = (uint64_t)v74;
  sub_1CFB02B14();
  if (!v42)
  {
    v68 = v22;
    v69 = v12;
    v66 = v41;
    v74 = a1;
    v67 = v31;
    __swift_project_boxed_opaque_existential_1(v73, v73[3]);
    v43 = sub_1CFB028C8();
    v45 = v44;
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
    v47 = (void *)sub_1CFB01A04();
    v48 = objc_msgSend(v46, sel_dateFromString_, v47);

    if (v48)
    {
      v49 = v68;
      sub_1CFB00F30();

      v50 = v69;
      v51 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
      v52 = (uint64_t)v72;
      v53 = v49;
      v54 = v71;
      v51(v72, v53, v71);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, v54);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v54) != 1)
      {

        v55 = v43;
        v56 = v67;
        v51(v67, (char *)v52, v54);
        v57 = (uint64_t)v66;
        v58 = (uint64_t *)&v66[*(int *)(v32 + 20)];
        *v58 = v55;
        v58[1] = v45;
        v51((char *)v57, v56, v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
        sub_1CFA89F98(v57, v70);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      }
    }
    else
    {
      v52 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v72, 1, 1, v71);
    }
    swift_bridgeObjectRelease();
    sub_1CF931B1C(v52, &qword_1ED904838);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
    *(_QWORD *)(inited + 32) = sub_1CFB01A28();
    *(_QWORD *)(inited + 40) = v61;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD00000000000002FLL;
    *(_QWORD *)(inited + 56) = 0x80000001CFB2FE20;
    sub_1CF9226B8(inited);
    v62 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v63 = (void *)sub_1CFB01A04();
    v64 = (void *)sub_1CFB01944();
    swift_bridgeObjectRelease();
    objc_msgSend(v62, sel_initWithDomain_code_userInfo_, v63, -1, v64);

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    a1 = v74;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CFA89D44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO8601DateString.init(from:)(a1, a2);
}

uint64_t sub_1CFA89D58(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1CFB0240C();
  v7 = swift_allocError();
  v9 = v8;
  v10 = (char *)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBBFBD0) + 48);
  *v9 = a2;
  v11 = sub_1CFB02400();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a1, v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v9, *a3, v6);
  return v7;
}

uint64_t sub_1CFA89E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1CFB0240C();
  v5 = swift_allocError();
  v7 = v6;
  v8 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC46E0) + 48);
  sub_1CF92B1B4(a2, v7);
  v9 = sub_1CFB02400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v7, *MEMORY[0x1E0DEC448], v4);
  return v5;
}

uint64_t sub_1CFA89ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1CFB0240C();
  v3 = swift_allocError();
  v5 = v4;
  v6 = sub_1CFB02400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a1, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v5, *MEMORY[0x1E0DEC458], v2);
  return v3;
}

uint64_t type metadata accessor for ISO8601DateString()
{
  uint64_t result;

  result = qword_1EFBC4690;
  if (!qword_1EFBC4690)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CFA89F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ISO8601DateString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CFA89FE0()
{
  unint64_t result;

  result = qword_1EFBC4530[0];
  if (!qword_1EFBC4530[0])
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for BigUIntCBOR, &type metadata for BigUIntCBOR);
    atomic_store(result, qword_1EFBC4530);
  }
  return result;
}

uint64_t destroy for Base64URLEncodedString(uint64_t a1)
{
  sub_1CF923A24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for Base64URLEncodedString(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for Base64URLEncodedString(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CF923A24(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for Base64URLEncodedString(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IQComplexSignal(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IQComplexSignal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Base64URLEncodedString()
{
  return &type metadata for Base64URLEncodedString;
}

uint64_t sub_1CFA8A1E4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CFA8A25C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1CFA8A31C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1CFA8A360(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_1CFA8A3D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1CFA8A448(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1CFA8A498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1CFA8A500(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CFA8A5D4 + 4 * byte_1CFB1C810[(v9 - 1)]))();
}

void sub_1CFA8A644(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1CFA8A83C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CFA8A8C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v10 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v11 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v12 = *v11;
    v13 = v11[1];
    sub_1CF9239E0(*v11, v13);
    *v10 = v12;
    v10[1] = v13;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  }
  return v3;
}

uint64_t sub_1CFA8A9A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1CF923A24(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v3 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1CFA8A9F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  v8 = v6[1];
  sub_1CF9239E0(*v6, v8);
  *v5 = v7;
  v5[1] = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))(((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1CFA8AA74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v6;
  v8 = v6[1];
  sub_1CF9239E0(*v6, v8);
  v9 = *v5;
  v10 = v5[1];
  *v5 = v7;
  v5[1] = v8;
  sub_1CF923A24(v9, v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))(((unint64_t)v5 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

_QWORD *sub_1CFA8AB00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1CFA8AB64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v5;
  _OWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = *v5;
  v8 = v5[1];
  *(_OWORD *)v5 = *v6;
  sub_1CF923A24(v7, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1CFA8ABDC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xC)
    v6 = 12;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 24) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      v15 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
      if (v5 > 0xC)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v15 + v7 + 16) & ~v7);
      v16 = *(_QWORD *)(v15 + 8) >> 60;
      if (((4 * (_DWORD)v16) & 0xC) != 0)
        return 16 - ((4 * (_DWORD)v16) & 0xC | (v16 >> 2));
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CFA8ACB0 + 4 * byte_1CFB1C81E[(v9 - 1)]))();
}

void sub_1CFA8AD3C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xCu)
    v6 = 12;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

_QWORD *sub_1CFA8AF54(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  sub_1CF9239E0(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for BigUIntCBOR(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_1CF9239E0(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1CF923A24(v5, v6);
  return a1;
}

uint64_t assignWithTake for BigUIntCBOR(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_1CF923A24(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BigUIntCBOR(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BigUIntCBOR(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BigUIntCBOR()
{
  return &type metadata for BigUIntCBOR;
}

uint64_t destroy for TaggedCBOR(uint64_t a1)
{
  return sub_1CF923A24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s13CoreIDVShared10TaggedCBORVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for TaggedCBOR(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF9239E0(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CF923A24(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for TaggedCBOR(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1CF923A24(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaggedCBOR(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TaggedCBOR(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaggedCBOR()
{
  return &type metadata for TaggedCBOR;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO8601DateString(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CFB00F54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ISO8601DateString(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CFB00F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO8601DateString()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA8B508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CFB00F54();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO8601DateString()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA8B594(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CFB00F54();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CFA8B610()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CFB00F54();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CFA8B680()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CFA8B6A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA89E10(a1, v1 + 16);
}

uint64_t sub_1CFA8B6AC()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA8B6BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA89D58(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0DEC460]);
}

uint64_t sub_1CFA8B6DC()
{
  return swift_deallocObject();
}

uint64_t sub_1CFA8B6EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFA89D58(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0DEC450]);
}

void static DIPCertUsage.japanNationalIDCardIssuerAuth.getter(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

void sub_1CFA8B718()
{
  __asm { BR              X11 }
}

uint64_t sub_1CFA8B758()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039E8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CFB05840;
  *(_QWORD *)(v0 + 32) = SecPolicyCreateRevocation(0x10uLL);
  sub_1CFB01CBC();
  return 1250052;
}

CoreIDVShared::DIPCertUsage_optional __swiftcall DIPCertUsage.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreIDVShared::DIPCertUsage_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1CFB02988();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v5 = 1;
      goto LABEL_5;
    case 2:
      v5 = 2;
LABEL_5:
      v6 = v5;
      break;
    case 3:
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    default:
      v6 = 21;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t DIPCertUsage.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA8BB2C + 4 * byte_1CFB1CB8E[*v0]))(0x6449746E65696C63, 0xEE00797469746E65);
}

unint64_t sub_1CFA8BB2C()
{
  return 0xD000000000000013;
}

unint64_t sub_1CFA8BCC4()
{
  return 0xD000000000000012;
}

unint64_t sub_1CFA8BCEC()
{
  return 0xD000000000000012;
}

uint64_t sub_1CFA8BD14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CFA2A76C(*a1, *a2);
}

uint64_t sub_1CFA8BD20()
{
  sub_1CFB02A90();
  DIPCertUsage.rawValue.getter();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA8BD84()
{
  DIPCertUsage.rawValue.getter();
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA8BDD4()
{
  sub_1CFB02A90();
  DIPCertUsage.rawValue.getter();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::DIPCertUsage_optional sub_1CFA8BE34(Swift::String *a1)
{
  return DIPCertUsage.init(rawValue:)(*a1);
}

uint64_t sub_1CFA8BE40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DIPCertUsage.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1CFA8BE64(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CFA8BE9C + 4 * byte_1CFB1CBA3[a1]))(0xD000000000000019, 0x80000001CFB304C0);
}

unint64_t DIPOIDVerifier.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1CF9231EC(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  a1[1] = 0;
  return result;
}

Swift::Void __swiftcall DIPOIDVerifier.setIntermediates(fromBase64DER:)(Swift::OpaquePointer fromBase64DER)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  const __CFData *v32;
  __SecCertificate *v33;
  CFDataRef v34;
  CFDataRef v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __SecCertificate *v40;
  uint64_t *v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  _QWORD v76[2];
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  CFAllocatorRef v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95[2];

  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  v11 = MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v13 = (char *)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14, v15, v16, v17, v18, v19, v20);
  v81 = (char *)v76 - v21;
  v22 = *((_QWORD *)fromBase64DER._rawValue + 2);
  if (!v22)
    return;
  v88 = (CFAllocatorRef)*MEMORY[0x1E0C9AE00];
  swift_bridgeObjectRetain();
  v90 = sub_1CF9B9CD8();
  v76[1] = fromBase64DER._rawValue;
  v23 = (uint64_t *)((char *)fromBase64DER._rawValue + 40);
  v79 = (unint64_t)"to/CryptoHelpers.swift";
  v87 = 0x80000001CFB2FEE0;
  v86 = 0x80000001CFB2FE50;
  v78 = (unint64_t)"64 decoding failed";
  v85 = 0x80000001CFB2FE80;
  *(_QWORD *)&v24 = 136446210;
  v83 = v24;
  v82 = MEMORY[0x1E0DEE9B8] + 8;
  v77 = 0x80000001CFB2FF10;
  v89 = v13;
  v80 = v3;
  while (1)
  {
    v25 = *v23;
    v95[0] = *(v23 - 1);
    v95[1] = v25;
    v93 = 10;
    v94 = 0xE100000000000000;
    v91 = 0;
    v92 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1CFB02214();
    v26 = sub_1CFB00E28();
    v28 = v27;
    swift_bridgeObjectRelease();
    if (v28 >> 60 == 15)
    {
      LOWORD(v95[0]) = 119;
      v29 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v30 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, v86, (__int16 *)v95, 0, v29, 0xD000000000000056, v85, v31, 0xD000000000000021, v87, 200);
      swift_willThrow();
LABEL_15:
      swift_bridgeObjectRelease();
      if (qword_1ED9054E8 != -1)
        swift_once();
      v54 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v54, v2);
      v55 = v30;
      v56 = v30;
      v57 = sub_1CFB012B4();
      v58 = sub_1CFB01FD4();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = swift_slowAlloc();
        v60 = swift_slowAlloc();
        v95[0] = v60;
        *(_DWORD *)v59 = v83;
        swift_getErrorValue();
        v61 = sub_1CFB02A24();
        *(_QWORD *)(v59 + 4) = sub_1CF9C974C(v61, v62, v95);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1CF917000, v57, v58, "Error decoding intermediate certificate; skipping: %{public}s",
          (uint8_t *)v59,
          0xCu);
        swift_arrayDestroy();
        v63 = v60;
        v13 = v89;
        MEMORY[0x1D17DA6E4](v63, -1, -1);
        MEMORY[0x1D17DA6E4](v59, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
      goto LABEL_5;
    }
    v32 = (const __CFData *)sub_1CFB00E58();
    v33 = SecCertificateCreateWithData(v88, v32);

    if (!v33)
    {
      LOWORD(v95[0]) = 152;
      v52 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      v30 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, v77, (__int16 *)v95, 0, v52, 0xD000000000000056, v78 | 0x8000000000000000, v53, 0xD000000000000021, v79 | 0x8000000000000000, 203);
      swift_willThrow();
      sub_1CF931AB0(v26, v28);
      goto LABEL_15;
    }
    sub_1CF931AB0(v26, v28);
    swift_bridgeObjectRelease();
    v34 = SecCertificateCopyNormalizedSubjectSequence(v33);
    if (!v34)
    {
      if (qword_1ED9054E8 != -1)
        swift_once();
      v64 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v81, v64, v2);
      v65 = sub_1CFB012B4();
      v66 = sub_1CFB01FD4();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v67 = 0;
        _os_log_impl(&dword_1CF917000, v65, v66, "No normalized subject sequence was returned from intermediate cert; skipping",
          v67,
          2u);
        MEMORY[0x1D17DA6E4](v67, -1, -1);
        v68 = v33;
      }
      else
      {
        v68 = v65;
        v65 = v33;
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v81, v2);
      goto LABEL_5;
    }
    v35 = v34;
    v36 = v2;
    v37 = sub_1CFB00E7C();
    v39 = v38;

    sub_1CF9239E0(v37, v39);
    sub_1CF9239E0(v37, v39);
    v40 = v33;
    v41 = v84;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v95[0] = *v41;
    v43 = v95[0];
    *v41 = 0x8000000000000000;
    v45 = sub_1CFA929E0(v37, v39);
    v46 = *(_QWORD *)(v43 + 16);
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
      break;
    v49 = v44;
    if (*(_QWORD *)(v43 + 24) >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CFA0E2FC();
    }
    else
    {
      sub_1CFA0C3B8(v48, isUniquelyReferenced_nonNull_native);
      v50 = sub_1CFA929E0(v37, v39);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_36;
      v45 = v50;
    }
    v2 = v36;
    v69 = (_QWORD *)v95[0];
    v3 = v80;
    if ((v49 & 1) != 0)
    {
      v70 = *(_QWORD *)(v95[0] + 56);
      v71 = 8 * v45;

      *(_QWORD *)(v70 + v71) = v40;
    }
    else
    {
      *(_QWORD *)(v95[0] + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v72 = (uint64_t *)(v69[6] + 16 * v45);
      *v72 = v37;
      v72[1] = v39;
      *(_QWORD *)(v69[7] + 8 * v45) = v40;
      v73 = v69[2];
      v74 = __OFADD__(v73, 1);
      v75 = v73 + 1;
      if (v74)
        goto LABEL_35;
      v69[2] = v75;
      sub_1CF9239E0(v37, v39);
    }
    *v84 = (uint64_t)v69;
    swift_bridgeObjectRelease();
    sub_1CF923A24(v37, v39);
    sub_1CF923A24(v37, v39);
    sub_1CF923A24(v37, v39);

    v13 = v89;
LABEL_5:
    v23 += 2;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1CFB029E8();
  __break(1u);
}

Swift::Void __swiftcall DIPOIDVerifier.setTrustedRoots(_:)(Swift::OpaquePointer a1)
{
  Swift::OpaquePointer *v1;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[1]._rawValue = a1._rawValue;
}

uint64_t DIPOIDVerifier.verifyChain(_:forUsage:)(uint64_t a1, _BYTE *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = type metadata accessor for DIPSignpost.Config(0);
  *(_QWORD *)(v3 + 32) = swift_task_alloc();
  type metadata accessor for DIPSignpost(0);
  v5 = swift_task_alloc();
  *(_BYTE *)(v3 + 96) = *a2;
  v6 = *v2;
  v7 = v2[1];
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  return swift_task_switch();
}

uint64_t sub_1CFA8C880()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[9];

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = v1;
  v13[0] = v2;
  v4 = sub_1CFA8CC88(v3, v13);
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = 0;
  v5 = v4;
  if (qword_1ED903210 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_1ED902DF0);
  sub_1CF94C548(v8, v7);
  DIPSignpost.init(_:)(v7, v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v9;
  *v9 = v0;
  v9[1] = sub_1CFA8CA48;
  v9[2] = v5;
  return swift_task_switch();
}

uint64_t sub_1CFA8CA48(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_BYTE *)(v3 + 97) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA8CAA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  __SecTrust *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  char v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  char v18;
  _QWORD v19[2];
  unsigned __int8 v20[9];

  v1 = *(void **)(v0 + 88);
  v3 = *(__SecTrust **)(v0 + 64);
  v2 = *(void **)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_BYTE *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(_BYTE *)(v0 + 97) & 1;
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  v19[0] = v5;
  v19[1] = v4;
  v20[0] = v6;
  sub_1CFA8DAD0(v1, v8, v7, v3, v20);
  v9 = *(_BYTE *)(v0 + 97);
  v10 = *(void **)(v0 + 88);
  if (v2)
  {
    v11 = v2;
    v12 = *(void **)(v0 + 64);
    v13 = v9 & 1;
    sub_1CF960F94(*(_QWORD *)(v0 + 40));

    sub_1CF975B70(v10, v13);
    LOWORD(v19[0]) = 0;
    v14 = v11;
    v15 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v11, 0, 0xE000000000000000, (__int16 *)v19, 0, v15, 0xD000000000000057, 0x80000001CFB2FF40, v16, 0xD000000000000018, 0x80000001CFB2FFA0, 314);
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = v9 & 1;
    sub_1CF960F94(*(_QWORD *)(v0 + 40));
    sub_1CF975B70(v10, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_1CFA8CC88(unint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t inited;
  char v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  _QWORD v54[7];
  SecTrustRef v55[19];

  v55[17] = *(SecTrustRef *)MEMORY[0x1E0C80C00];
  v5 = sub_1CFB012CC();
  v54[6] = *(_QWORD *)(v5 - 8);
  v13 = MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9, v10, v11, v12);
  v54[1] = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v30 = MEMORY[0x1E0C80A78](v22, v23, v24, v25, v26, v27, v28, v29);
  v38 = MEMORY[0x1E0C80A78](v30, v31, v32, v33, v34, v35, v36, v37);
  MEMORY[0x1E0C80A78](v38, v39, v40, v41, v42, v43, v44, v45);
  LOBYTE(a2) = *a2;
  v54[5] = *(_QWORD *)(v2 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
  *(_BYTE *)(inited + 32) = 17;
  *(_QWORD *)(inited + 64) = &type metadata for DIPCertUsage;
  v47 = (char)a2;
  *(_BYTE *)(inited + 40) = (_BYTE)a2;
  v48 = sub_1CF9220B4(inited);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v49 = sub_1CFB02604();
    swift_bridgeObjectRelease();
    if (v49 >= 1)
    {
LABEL_3:
      v54[4] = a1;
      v54[3] = v48;
      LOBYTE(v55[0]) = v47;
      sub_1CFA8B718();
      v51 = v50;
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
  }
  else
  {
    v49 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v49 >= 1)
      goto LABEL_3;
  }
  LOWORD(v55[0]) = 256;
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000030, 0x80000001CFB301A0, (__int16 *)v55, 0, v48, 0xD000000000000057, 0x80000001CFB2FF40, v52, 0xD000000000000017, 0x80000001CFB301E0, 358);
  swift_willThrow();
  return v49;
}

uint64_t sub_1CFA8D948(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA8D960()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1CFA8DA08;
  return sub_1CFB02994();
}

uint64_t sub_1CFA8DA08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFA8DA74()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, BOOL))(v0 + 8))(*(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 40) != 0);
}

uint64_t sub_1CFA8DA8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, BOOL))(v0 + 8))(v1, *(_QWORD *)(v0 + 40) != 0);
}

void sub_1CFA8DAD0(void *a1, char a2, unint64_t a3, __SecTrust *a4, unsigned __int8 *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  void (*v49)(char *, uint64_t);
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __SecCertificate *v55;
  CFDataRef v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t inited;
  id v67;
  unint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id *v74;
  __SecCertificate *v75;
  CFDataRef v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  void (*v90)(char *, NSObject *, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  os_log_t v98;
  void (*v99)(char *, NSObject *, uint64_t);
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint8_t *v103;
  void (*v104)(_QWORD, _QWORD);
  uint64_t v105;
  void (*v106)(char *, NSObject *, uint64_t);
  os_log_t v107;
  id v108;
  int v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  SecTrustResultType result[2];
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;

  v117 = *MEMORY[0x1E0C80C00];
  v10 = sub_1CFB012CC();
  v11 = *(_QWORD *)(v10 - 8);
  v19 = MEMORY[0x1E0C80A78](v10, v12, v13, v14, v15, v16, v17, v18);
  v27 = MEMORY[0x1E0C80A78](v19, v20, v21, v22, v23, v24, v25, v26);
  v30 = (char *)&v103 - v29;
  LODWORD(a5) = *a5;
  if ((a2 & 1) != 0)
  {
    v111 = v27;
    v112 = a3;
    v110 = v28;
    v115 = (uint64_t)a1;
    v37 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_willThrowTypedImpl();
    v38 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    if (qword_1ED904DB0 != -1)
      swift_once();
    if ((byte_1ED907588 & 1) != 0)
    {
      v39 = sub_1CFB01A04();
      v109 = (int)a5;
      a5 = (unsigned __int8 *)v39;
      v40 = objc_msgSend(v38, sel_BOOLForKey_, v39);

      LOBYTE(a5) = v109;
      if ((v40 & 1) != 0)
      {
        v108 = a1;
        v105 = v5;
        if (qword_1ED9054E8 != -1)
          swift_once();
        v41 = v111;
        v42 = __swift_project_value_buffer(v111, (uint64_t)qword_1ED907590);
        swift_beginAccess();
        v106 = *(void (**)(char *, NSObject *, uint64_t))(v11 + 16);
        v107 = v42;
        v106(v30, v42, v41);
        v43 = sub_1CFB012B4();
        v44 = sub_1CFB01FC8();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v104 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
          *(_QWORD *)result = v104;
          *(_DWORD *)v45 = 136446210;
          v103 = v45 + 4;
          LOBYTE(v113) = (_BYTE)a5;
          v46 = DIPCertUsage.rawValue.getter();
          v113 = sub_1CF9C974C(v46, v47, (uint64_t *)result);
          sub_1CFB021C0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CF917000, v43, v44, "Treating certificate validation for %{public}s as non-fatal because certificate pinning is disabled in user defaults", v45, 0xCu);
          v48 = v104;
          swift_arrayDestroy();
          MEMORY[0x1D17DA6E4](v48, -1, -1);
          MEMORY[0x1D17DA6E4](v45, -1, -1);
        }

        v49 = *(void (**)(char *, uint64_t))(v11 + 8);
        v49(v30, v41);
        v50 = v110;
        v51 = v112;
        if (v112 >> 62)
        {
          swift_bridgeObjectRetain();
          v52 = sub_1CFB02604();
          swift_bridgeObjectRelease();
        }
        else
        {
          v52 = *(_QWORD *)((v112 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v104 = (void (*)(_QWORD, _QWORD))v49;
        if (v52)
        {
          *(_QWORD *)result = MEMORY[0x1E0DEE9D8];
          sub_1CF960FD0(0, v52 & ~(v52 >> 63), 0);
          if (v52 < 0)
            __break(1u);
          v53 = *(_QWORD *)result;
          if ((v51 & 0xC000000000000001) != 0)
          {
            v54 = 0;
            do
            {
              v55 = (__SecCertificate *)MEMORY[0x1D17D9124](v54, v51);
              v56 = SecCertificateCopyData(v55);
              v57 = sub_1CFB00E7C();
              v59 = v58;

              v60 = sub_1CFB00E64();
              v62 = v61;
              sub_1CF923A24(v57, v59);
              swift_unknownObjectRelease();
              *(_QWORD *)result = v53;
              v64 = *(_QWORD *)(v53 + 16);
              v63 = *(_QWORD *)(v53 + 24);
              if (v64 >= v63 >> 1)
              {
                sub_1CF960FD0(v63 > 1, v64 + 1, 1);
                v53 = *(_QWORD *)result;
              }
              ++v54;
              *(_QWORD *)(v53 + 16) = v64 + 1;
              v65 = v53 + 16 * v64;
              *(_QWORD *)(v65 + 32) = v60;
              *(_QWORD *)(v65 + 40) = v62;
              v51 = v112;
            }
            while (v52 != v54);
          }
          else
          {
            v74 = (id *)(v51 + 32);
            do
            {
              v75 = (__SecCertificate *)*v74;
              v76 = SecCertificateCopyData(v75);
              v77 = sub_1CFB00E7C();
              v79 = v78;

              v80 = sub_1CFB00E64();
              v82 = v81;
              sub_1CF923A24(v77, v79);

              *(_QWORD *)result = v53;
              v84 = *(_QWORD *)(v53 + 16);
              v83 = *(_QWORD *)(v53 + 24);
              if (v84 >= v83 >> 1)
              {
                sub_1CF960FD0(v83 > 1, v84 + 1, 1);
                v53 = *(_QWORD *)result;
              }
              *(_QWORD *)(v53 + 16) = v84 + 1;
              v85 = v53 + 16 * v84;
              *(_QWORD *)(v85 + 32) = v80;
              *(_QWORD *)(v85 + 40) = v82;
              ++v74;
              --v52;
            }
            while (v52);
          }
          v50 = v110;
          v41 = v111;
        }
        v106(v50, v107, v41);
        v86 = v108;
        sub_1CF975B88(v108, 1);
        sub_1CF975B88(v86, 1);
        swift_bridgeObjectRetain();
        v87 = sub_1CFB012B4();
        v88 = sub_1CFB01FD4();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = swift_slowAlloc();
          v90 = (void (*)(char *, NSObject *, uint64_t))swift_slowAlloc();
          v106 = v90;
          v112 = swift_slowAlloc();
          *(_QWORD *)result = v112;
          *(_DWORD *)v89 = 136446722;
          v107 = v87;
          LOBYTE(v113) = v109;
          v91 = DIPCertUsage.rawValue.getter();
          v113 = sub_1CF9C974C(v91, v92, (uint64_t *)result);
          sub_1CFB021C0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v89 + 12) = 2112;
          sub_1CF975B88(v86, 1);
          v93 = _swift_stdlib_bridgeErrorToNSError();
          v113 = v93;
          sub_1CFB021C0();
          *(_QWORD *)v90 = v93;
          sub_1CF975B70(v86, 1);
          sub_1CF975B70(v86, 1);
          *(_WORD *)(v89 + 22) = 2080;
          v94 = swift_bridgeObjectRetain();
          v95 = MEMORY[0x1D17D8A10](v94, MEMORY[0x1E0DEA968]);
          v97 = v96;
          swift_bridgeObjectRelease();
          v113 = sub_1CF9C974C(v95, v97, (uint64_t *)result);
          sub_1CFB021C0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v98 = v107;
          _os_log_impl(&dword_1CF917000, v107, v88, "Certificate verification for usage %{public}s failed due to error: %@\nCertificate Chain:\n%s", (uint8_t *)v89, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904380);
          v99 = v106;
          swift_arrayDestroy();
          MEMORY[0x1D17DA6E4](v99, -1, -1);
          v100 = v112;
          swift_arrayDestroy();
          MEMORY[0x1D17DA6E4](v100, -1, -1);
          MEMORY[0x1D17DA6E4](v89, -1, -1);

          sub_1CF975B70(v86, 1);
          v101 = v110;
          v102 = v111;
        }
        else
        {
          sub_1CF975B70(v86, 1);
          sub_1CF975B70(v86, 1);
          sub_1CF975B70(v86, 1);

          swift_bridgeObjectRelease_n();
          v101 = v50;
          v102 = v41;
        }
        v104(v101, v102);
        return;
      }
    }
    else
    {

    }
    LOWORD(v115) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
    *(_BYTE *)(inited + 32) = 17;
    *(_QWORD *)(inited + 64) = &type metadata for DIPCertUsage;
    *(_BYTE *)(inited + 40) = (_BYTE)a5;
    v67 = a1;
    v68 = sub_1CF9220B4(inited);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a1, 0xD00000000000001ALL, 0x80000001CFB30090, (__int16 *)&v115, 0, v68, 0xD000000000000057, 0x80000001CFB2FF40, v69, 0xD000000000000031, 0x80000001CFB300B0, 437);
    swift_willThrow();
    sub_1CF975B70(a1, 1);
    return;
  }
  result[0] = kSecTrustResultInvalid;
  if (SecTrustGetTrustResult(a4, result)
    || (result[0] != kSecTrustResultUnspecified ? (v70 = result[0] == kSecTrustResultProceed) : (v70 = 1), !v70))
  {
    v115 = 0;
    v116 = 0xE000000000000000;
    sub_1CFB02388();
    sub_1CFB01B30();
    LODWORD(v113) = result[0];
    sub_1CFB027F0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    v32 = v115;
    v33 = v116;
    LOWORD(v115) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1CFB05840;
    *(_BYTE *)(v34 + 32) = 17;
    *(_QWORD *)(v34 + 64) = &type metadata for DIPCertUsage;
    *(_BYTE *)(v34 + 40) = (_BYTE)a5;
    v35 = sub_1CF9220B4(v34);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v32, v33, (__int16 *)&v115, 0, v35, 0xD000000000000057, 0x80000001CFB2FF40, v36, 0xD000000000000031, 0x80000001CFB300B0, 445);
LABEL_4:
    swift_willThrow();
    return;
  }
  if ((a1 & 1) == 0)
  {
    LOWORD(v115) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    v71 = swift_initStackObject();
    *(_OWORD *)(v71 + 16) = xmmword_1CFB05840;
    *(_BYTE *)(v71 + 32) = 17;
    *(_QWORD *)(v71 + 64) = &type metadata for DIPCertUsage;
    *(_BYTE *)(v71 + 40) = (_BYTE)a5;
    v72 = sub_1CF9220B4(v71);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000035, 0x80000001CFB30140, (__int16 *)&v115, 0, v72, 0xD000000000000057, 0x80000001CFB2FF40, v73, 0xD000000000000031, 0x80000001CFB300B0, 449);
    goto LABEL_4;
  }
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyChain(_:forUsage:)(Swift::OpaquePointer _, CoreIDVShared::DIPCertUsage forUsage)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  int v25;
  CFErrorRef v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  __SecTrust *v30;
  __SecTrust *v31;
  uint64_t v32;
  _BOOL4 v33;
  CFErrorRef v34;
  uint64_t v35;
  __CFError *v36;
  uint64_t v37;
  CFErrorRef *v38;
  CFErrorRef v39;
  __CFError *v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE v45[4];
  int v46;
  __CFError *v47;
  uint64_t v48;
  void *rawValue;
  unsigned __int8 v50;
  CFErrorRef error;
  uint64_t v52;
  uint64_t v53;

  v3 = (unsigned __int8 *)forUsage;
  v53 = *MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for DIPSignpost.Config(0);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9, v10, v11, v12);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for DIPSignpost(0);
  MEMORY[0x1E0C80A78](v15, v16, v17, v18, v19, v20, v21, v22);
  v24 = &v45[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = *v3;
  v26 = *(CFErrorRef *)v2;
  v27 = *(_QWORD *)(v2 + 8);
  error = *(CFErrorRef *)v2;
  v52 = v27;
  v50 = v25;
  v28 = rawValue;
  v29 = sub_1CFA8CC88((unint64_t)_._rawValue, &v50);
  v30 = (__SecTrust *)v29;
  if (v28)
  {
    v31 = (__SecTrust *)v29;
    LOWORD(error) = 0;
    v41 = v28;
    v42 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v28, 0, 0xE000000000000000, (__int16 *)&error, 0, v42, 0xD000000000000057, 0x80000001CFB2FF40, v43, 0xD000000000000018, 0x80000001CFB2FFA0, 349);
    swift_willThrow();

  }
  else
  {
    v47 = v26;
    v48 = v27;
    rawValue = _._rawValue;
    if (qword_1ED903210 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED902DF0);
    sub_1CF94C548(v32, (uint64_t)v14);
    DIPSignpost.init(_:)((uint64_t)v14, (uint64_t)v24);
    error = 0;
    v31 = v30;
    v33 = SecTrustEvaluateWithError(v30, &error);
    v34 = error;
    v46 = v25;
    v36 = v47;
    v35 = v48;
    if (error)
    {
      type metadata accessor for CFError(0);
      sub_1CFA8FF0C();
      v37 = swift_allocError();
      *v38 = v34;
      v39 = error;
    }
    else
    {
      v39 = 0;
      v37 = v33;
    }
    v40 = v34;

    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    error = v36;
    v52 = v35;
    v50 = v46;
    sub_1CFA8DAD0((void *)v37, v34 != 0, (unint64_t)rawValue, v31, &v50);
    sub_1CF960F94((uint64_t)v24);
    sub_1CF975B70((id)v37, v34 != 0);
  }
  return v31;
}

uint64_t DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)(uint64_t a1, _BYTE *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 81) = *a2;
  v4 = *v2;
  v5 = v2[1];
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = v5;
  return swift_task_switch();
}

uint64_t sub_1CFA8E900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;

  v1 = decodeCertificateChain(fromBase64DER:)(*(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 81);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 80) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_1CFA8E9A4;
  return DIPOIDVerifier.verifyChain(_:forUsage:)(v2, (_BYTE *)(v0 + 80));
}

uint64_t sub_1CFA8E9A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1CFA8EA34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)(Swift::OpaquePointer fromBase64DER, CoreIDVShared::DIPCertUsage forUsage)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __SecTrust *v5;
  uint64_t v6;
  char v8;

  v4 = *(_BYTE *)forUsage;
  v5 = *(__SecTrust **)(v2 + 8);
  v6 = decodeCertificateChain(fromBase64DER:)((uint64_t)fromBase64DER._rawValue);
  if (!v3)
  {
    v8 = v4;
    v5 = DIPOIDVerifier.verifyChain(_:forUsage:)((Swift::OpaquePointer)v6, (CoreIDVShared::DIPCertUsage)&v8);
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t DIPOIDVerifier.verifyLeaf(_:forUsage:)(uint64_t a1, _BYTE *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 200) = a1;
  v5 = sub_1CFB012CC();
  *(_QWORD *)(v3 + 208) = v5;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  *(_BYTE *)(v3 + 322) = *a2;
  v7 = *v2;
  v8 = v2[1];
  *(_QWORD *)(v3 + 224) = v6;
  *(_QWORD *)(v3 + 232) = v7;
  *(_QWORD *)(v3 + 240) = v8;
  return swift_task_switch();
}

uint64_t sub_1CFA8EB30()
{
  uint64_t v0;
  CFDataRef v1;
  CFDataRef v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t);
  char v22;
  uint64_t inited;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];

  v1 = SecCertificateCopyNormalizedIssuerSequence(*(SecCertificateRef *)(v0 + 200));
  if (!v1)
  {
    v22 = *(_BYTE *)(v0 + 322);
    LOWORD(v48[0]) = 121;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
    *(_BYTE *)(inited + 32) = 17;
    *(_QWORD *)(inited + 64) = &type metadata for DIPCertUsage;
    *(_BYTE *)(inited + 40) = v22;
    v24 = sub_1CF9220B4(inited);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001CFB2FFC0, (__int16 *)v48, 0, v24, 0xD000000000000057, 0x80000001CFB2FF40, v25, 0xD000000000000017, 0x80000001CFB30000, 473);
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = *(_QWORD *)(v0 + 232);
  v4 = sub_1CFB00E7C();
  v6 = v5;

  *(_QWORD *)(v0 + 248) = v4;
  *(_QWORD *)(v0 + 256) = v6;
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_7;
  sub_1CF9239E0(v4, v6);
  v7 = sub_1CFA929E0(v4, v6);
  if ((v8 & 1) == 0)
  {
    sub_1CF923A24(v4, v6);
LABEL_7:
    if (qword_1ED9054E8 != -1)
      swift_once();
    v28 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 224);
    v29 = *(_QWORD *)(v0 + 208);
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v30, v29);
    v31 = sub_1CFB012B4();
    v32 = sub_1CFB01FC8();
    if (os_log_type_enabled(v31, v32))
    {
      v45 = *(_QWORD *)(v0 + 216);
      v46 = *(_QWORD *)(v0 + 208);
      v47 = *(_QWORD *)(v0 + 224);
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v48[0] = v34;
      *(_DWORD *)v33 = 136446210;
      v35 = DIPCertUsage.rawValue.getter();
      *(_QWORD *)(v0 + 192) = sub_1CF9C974C(v35, v36, v48);
      sub_1CFB021C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v31, v32, "Could not find matching intermediate cert for usage = %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v34, -1, -1);
      MEMORY[0x1D17DA6E4](v33, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
    }
    else
    {
      v38 = *(_QWORD *)(v0 + 216);
      v37 = *(_QWORD *)(v0 + 224);
      v39 = *(_QWORD *)(v0 + 208);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    }
    v9 = (_BYTE *)(v0 + 320);
    v40 = *(_QWORD *)(v0 + 240);
    v41 = *(_BYTE *)(v0 + 322);
    v42 = *(void **)(v0 + 200);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 168) = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1CFB10370;
    *(_QWORD *)(v43 + 32) = v42;
    v48[0] = v43;
    sub_1CFB01CBC();
    v17 = v48[0];
    *(_QWORD *)(v0 + 296) = v48[0];
    *(_BYTE *)(v0 + 320) = v41;
    v44 = v42;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v20;
    v21 = sub_1CFA8F090;
    goto LABEL_13;
  }
  v9 = (_BYTE *)(v0 + 321);
  v11 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 240);
  v12 = *(_BYTE *)(v0 + 322);
  v13 = *(void **)(v0 + 200);
  v14 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v7);
  *(_QWORD *)(v0 + 264) = v14;
  v15 = v14;
  sub_1CF923A24(v4, v6);
  *(_QWORD *)(v0 + 176) = v11;
  *(_QWORD *)(v0 + 184) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1CFB0F670;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v15;
  v48[0] = v16;
  sub_1CFB01CBC();
  v17 = v48[0];
  *(_QWORD *)(v0 + 272) = v48[0];
  *(_BYTE *)(v0 + 321) = v12;
  v18 = v15;
  v19 = v13;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v20;
  v21 = sub_1CFA8EFC4;
LABEL_13:
  *v20 = v0;
  v20[1] = v21;
  return DIPOIDVerifier.verifyChain(_:forUsage:)(v17, v9);
}

uint64_t sub_1CFA8EFC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[14] = v2;
  v3[15] = a1;
  v3[16] = v1;
  v3[36] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1CFA8F040()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_1CF923A24(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1CFA8F090(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[17] = v2;
  v3[18] = a1;
  v3[19] = v1;
  v3[39] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1CFA8F10C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_1CF923A24(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1CFA8F154()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  sub_1CF923A24(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA8F198()
{
  uint64_t v0;

  sub_1CF923A24(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = a2;
  *(_BYTE *)(v4 + 145) = *a3;
  v5 = v3[1];
  *(_QWORD *)(v4 + 96) = *v3;
  *(_QWORD *)(v4 + 104) = v5;
  return swift_task_switch();
}

uint64_t sub_1CFA8F1FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  const __CFAllocator *v6;
  const __CFData *v7;
  SecCertificateRef v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  unint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17[5];

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 32) = 10;
  *(_QWORD *)(v0 + 40) = 0xE100000000000000;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  sub_1CF9B9CD8();
  sub_1CFB02214();
  v1 = sub_1CFB00E28();
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3 >> 60 == 15)
  {
    v16 = 119;
    v4 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, 0x80000001CFB2FE50, &v16, 0, v4, 0xD000000000000056, 0x80000001CFB2FE80, v5, 0xD000000000000021, 0x80000001CFB2FEE0, 200);
    swift_willThrow();
  }
  else
  {
    v6 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
    v7 = (const __CFData *)sub_1CFB00E58();
    v8 = SecCertificateCreateWithData(v6, v7);
    *(_QWORD *)(v0 + 112) = v8;

    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 96);
      v9 = *(_QWORD *)(v0 + 104);
      v11 = *(_BYTE *)(v0 + 145);
      sub_1CF931AB0(v1, v3);
      *(_QWORD *)(v0 + 64) = v10;
      *(_QWORD *)(v0 + 72) = v9;
      *(_BYTE *)(v0 + 144) = v11;
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v12;
      *v12 = v0;
      v12[1] = sub_1CFA8F4D8;
      return DIPOIDVerifier.verifyLeaf(_:forUsage:)((uint64_t)v8, (_BYTE *)(v0 + 144));
    }
    v17[0] = 152;
    v14 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001CFB2FF10, v17, 0, v14, 0xD000000000000056, 0x80000001CFB2FE80, v15, 0xD000000000000021, 0x80000001CFB2FEE0, 203);
    swift_willThrow();
    sub_1CF931AB0(v1, v3);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFA8F4D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_1CFA8F54C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
}

uint64_t sub_1CFA8F584()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)(Swift::String fromBase64DER, CoreIDVShared::DIPCertUsage forUsage)
{
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  const __CFAllocator *v23;
  const __CFData *v24;
  __SecCertificate *v25;
  CFDataRef v26;
  CFDataRef v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  Swift::OpaquePointer v38;
  id v39;
  SecTrustRef v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  Swift::OpaquePointer v55;
  __SecCertificate *v56;
  uint8_t *v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v4 = (char *)forUsage;
  object = fromBase64DER._object;
  countAndFlagsBits = fromBase64DER._countAndFlagsBits;
  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v4;
  v70 = *v2;
  v64 = v2[1];
  v65 = countAndFlagsBits;
  v66 = (unint64_t)object;
  v68 = 10;
  v69 = 0xE100000000000000;
  v67[0] = 0;
  v67[1] = 0xE000000000000000;
  sub_1CF9B9CD8();
  sub_1CFB02214();
  v19 = sub_1CFB00E28();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21 >> 60 == 15)
  {
    LOWORD(v65) = 119;
    v21 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, 0x80000001CFB2FE50, (__int16 *)&v65, 0, v21, 0xD000000000000056, 0x80000001CFB2FE80, v22, 0xD000000000000021, 0x80000001CFB2FEE0, 200);
    swift_willThrow();
    return (SecTrustRef)v21;
  }
  v63 = v3;
  v23 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v24 = (const __CFData *)sub_1CFB00E58();
  v25 = SecCertificateCreateWithData(v23, v24);

  if (!v25)
  {
    LOWORD(v65) = 152;
    v42 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001CFB2FF10, (__int16 *)&v65, 0, v42, 0xD000000000000056, 0x80000001CFB2FE80, v43, 0xD000000000000021, 0x80000001CFB2FEE0, 203);
    swift_willThrow();
    sub_1CF931AB0(v19, v21);
    return (SecTrustRef)v21;
  }
  sub_1CF931AB0(v19, v21);
  v26 = SecCertificateCopyNormalizedIssuerSequence(v25);
  if (!v26)
  {
    LOWORD(v65) = 121;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
    *(_BYTE *)(inited + 32) = 17;
    *(_QWORD *)(inited + 64) = &type metadata for DIPCertUsage;
    *(_BYTE *)(inited + 40) = v18;
    v21 = sub_1CF9220B4(inited);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001CFB2FFC0, (__int16 *)&v65, 0, v21, 0xD000000000000057, 0x80000001CFB2FF40, v45, 0xD000000000000023, 0x80000001CFB30020, 499);
    swift_willThrow();
LABEL_11:

    return (SecTrustRef)v21;
  }
  v27 = v26;
  v28 = sub_1CFB00E7C();
  v30 = v29;

  v31 = v70;
  if (*(_QWORD *)(v70 + 16))
  {
    v32 = v18;
    sub_1CF9239E0(v28, v30);
    v33 = sub_1CFA929E0(v28, v30);
    if ((v34 & 1) != 0)
    {
      v35 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v33);
      sub_1CF923A24(v28, v30);
      v65 = v31;
      v66 = v64;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1CFB0F670;
      *(_QWORD *)(v36 + 32) = v25;
      *(_QWORD *)(v36 + 40) = v35;
      v68 = v36;
      sub_1CFB01CBC();
      v37 = v30;
      v38._rawValue = (void *)v68;
      LOBYTE(v68) = v32;
      v39 = v35;
      v25 = v25;
      v21 = (unint64_t)&v65;
      v40 = DIPOIDVerifier.verifyChain(_:forUsage:)(v38, (CoreIDVShared::DIPCertUsage)&v68);
      if (!v41)
      {
        v21 = (unint64_t)v40;
        swift_bridgeObjectRelease();
        sub_1CF923A24(v28, v37);

        return (SecTrustRef)v21;
      }
      swift_bridgeObjectRelease();
      sub_1CF923A24(v28, v37);

      goto LABEL_11;
    }
    sub_1CF923A24(v28, v30);
  }
  v61 = v28;
  v62 = v30;
  if (qword_1ED9054E8 != -1)
    swift_once();
  v46 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v46, v7);
  v47 = sub_1CFB012B4();
  v48 = sub_1CFB01FC8();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v60 = swift_slowAlloc();
    v68 = v60;
    v59 = v49;
    *(_DWORD *)v49 = 136446210;
    v58 = v49 + 4;
    LOBYTE(v67[0]) = v18;
    v50 = DIPCertUsage.rawValue.getter();
    v67[0] = sub_1CF9C974C(v50, v51, &v68);
    sub_1CFB021C0();
    swift_bridgeObjectRelease();
    v52 = v59;
    _os_log_impl(&dword_1CF917000, v47, v48, "Could not find matching intermediate cert for usage = %{public}s", v59, 0xCu);
    v53 = v60;
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v53, -1, -1);
    MEMORY[0x1D17DA6E4](v52, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  v68 = v70;
  v69 = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1CFB10370;
  *(_QWORD *)(v54 + 32) = v25;
  v67[0] = v54;
  sub_1CFB01CBC();
  v55._rawValue = (void *)v67[0];
  LOBYTE(v67[0]) = v18;
  v56 = v25;
  v21 = (unint64_t)DIPOIDVerifier.verifyChain(_:forUsage:)(v55, (CoreIDVShared::DIPCertUsage)v67);
  swift_bridgeObjectRelease();
  sub_1CF923A24(v61, v62);

  return (SecTrustRef)v21;
}

uint64_t sub_1CFA8FCC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t sub_1CFA8FD00(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CFA90804;
  return DIPOIDVerifier.verifyChain(_:forUsage:)(a1, a2);
}

uint64_t sub_1CFA8FD5C(uint64_t a1, _BYTE *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CFA90804;
  *(_BYTE *)(v6 + 81) = *a2;
  v7 = *v2;
  v8 = v2[1];
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 48) = v8;
  return swift_task_switch();
}

uint64_t sub_1CFA8FDD8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CFA90804;
  return DIPOIDVerifier.verifyLeaf(_:forUsage:)(a1, a2);
}

uint64_t sub_1CFA8FE34(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *(_QWORD *)v8 = v4;
  *(_QWORD *)(v8 + 8) = sub_1CFA8FEB4;
  *(_QWORD *)(v8 + 80) = a1;
  *(_QWORD *)(v8 + 88) = a2;
  *(_BYTE *)(v8 + 145) = *a3;
  v9 = v3[1];
  *(_QWORD *)(v8 + 96) = *v3;
  *(_QWORD *)(v8 + 104) = v9;
  return swift_task_switch();
}

uint64_t sub_1CFA8FEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

unint64_t sub_1CFA8FF0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED904C98;
  if (!qword_1ED904C98)
  {
    type metadata accessor for CFError(255);
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0CB1C60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED904C98);
  }
  return result;
}

uint64_t _s13CoreIDVShared14DIPOIDVerifierV27getSpecificCertificateErrorys0G0_psAE_pFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t result;
  __int16 v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  __int16 v39;
  id v40;
  _QWORD v41[3];

  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  Error.dipErrorCode.getter(v41[2], v13, v14, v15, v16, v17, v18, &v39);
  if (v39 != 256)
    goto LABEL_23;
  v41[0] = a1;
  v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
  if (!swift_dynamicCast())
    goto LABEL_23;
  v20 = v40;
  v21 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v20)
    goto LABEL_23;
  swift_getErrorValue();
  v22 = sub_1CFB027F0();
  v24 = v23;
  if (v22 == sub_1CFB01A28() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v26 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
LABEL_22:

LABEL_23:
      v34 = a1;
      return (uint64_t)a1;
    }
  }
  if (qword_1ED9054E8 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v27, v2);
  v28 = v20;
  v29 = sub_1CFB012B4();
  v30 = sub_1CFB01FD4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v31 = 134217984;
    v38[1] = v31 + 4;
    swift_getErrorValue();
    v41[0] = sub_1CFB02A30();
    sub_1CFB021C0();

    _os_log_impl(&dword_1CF917000, v29, v30, "Untrusted certificate underlying security error: %ld", v31, 0xCu);
    MEMORY[0x1D17DA6E4](v31, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  swift_getErrorValue();
  result = sub_1CFB02A30();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    if ((int)result > -67819)
    {
      if ((_DWORD)result == -25318)
      {
        v33 = 260;
        goto LABEL_27;
      }
      if ((_DWORD)result == -67818)
      {
        v33 = 258;
        goto LABEL_27;
      }
    }
    else
    {
      if ((_DWORD)result == -67820)
      {
        v33 = 257;
        goto LABEL_27;
      }
      if ((_DWORD)result == -67819)
      {
        v33 = 259;
LABEL_27:
        LOWORD(v41[0]) = v33;
        v35 = v20;
        v36 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        a1 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v20, 0xD000000000000011, 0x80000001CFB30050, (__int16 *)v41, 0, v36, 0xD000000000000057, 0x80000001CFB2FF40, v37, 0xD00000000000001FLL, 0x80000001CFB30070, 557);

        return (uint64_t)a1;
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CFA903BC()
{
  unint64_t result;

  result = qword_1EFBC4710;
  if (!qword_1EFBC4710)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for DIPCertUsage, &type metadata for DIPCertUsage);
    atomic_store(result, (unint64_t *)&qword_1EFBC4710);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DIPCertUsage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPCertUsage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1CFA904DC + 4 * byte_1CFB1CBC0[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1CFA90510 + 4 * byte_1CFB1CBBB[v4]))();
}

uint64_t sub_1CFA90510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA90518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA90520);
  return result;
}

uint64_t sub_1CFA9052C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA90534);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1CFA90538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA90540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPCertUsage()
{
  return &type metadata for DIPCertUsage;
}

uint64_t dispatch thunk of OIDVerifying.setIntermediates(fromBase64DER:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OIDVerifying.setTrustedRoots(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of OIDVerifying.verifyChain(_:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CFA5AEEC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyChain(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CFA5AEEC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyLeaf(_:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CFA5AEEC;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyLeaf(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 48) + *(_QWORD *)(a5 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CFA450E8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of static OIDVerifying.getSpecificCertificateError(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

_QWORD *assignWithCopy for DIPOIDVerifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DIPOIDVerifier()
{
  return &type metadata for DIPOIDVerifier;
}

uint64_t sub_1CFA907FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFADA40C(a1, *(void **)(v1 + 16));
}

uint64_t Logotype.readerMetadata.getter@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC5440);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CFB00DEC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4758);
  MEMORY[0x1E0C80A78](v24, v25, v26, v27, v28, v29, v30, v31);
  v33 = (char *)&v61 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v1[1];
  if (v34 < 2)
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4760);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
  }
  v37 = v1[2];
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v61 = v23;
    v62 = v14;
    v63 = v13;
    v64 = v12;
    v68 = a1;
    v39 = *v1;
    swift_bridgeObjectRetain_n();
    v65 = v39;
    v67 = v34;
    sub_1CF9D8914(v39, v34);
    v40 = sub_1CFB00FFC();
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v70 = v40;
    v66 = v37;
    v41 = (uint64_t *)(v37 + 96);
    while (1)
    {
      v43 = *(v41 - 3);
      v42 = *(v41 - 2);
      v44 = *v41;
      v73 = *(v41 - 1);
      v74 = v44;
      v71 = 0x2F2F3A7370747468;
      v72 = 0xE800000000000000;
      v69(v33, 1, 1, v70);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CF9239E0(v43, v42);
      sub_1CF9B9CD8();
      swift_bridgeObjectRetain();
      sub_1CFB02220();
      v46 = v45;
      sub_1CF931B1C((uint64_t)v33, &qword_1EFBC4758);
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
        break;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CF923A24(v43, v42);
      swift_bridgeObjectRelease();
      v41 += 9;
      if (!--v38)
      {
        swift_bridgeObjectRelease_n();
        sub_1CF9D8968(v65, v67);
        a1 = v68;
        goto LABEL_8;
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1CF923A24(v43, v42);
    v50 = (uint64_t)v64;
    sub_1CFB00DE0();
    swift_bridgeObjectRelease();
    v51 = v62;
    v52 = v63;
    v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v50, 1, v63);
    v55 = v67;
    v54 = v68;
    v56 = v65;
    if (v53 != 1)
    {
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      v58 = v61;
      v57(v61, v50, v52);
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4760);
      v60 = (uint64_t *)&v54[*(int *)(v59 + 48)];
      v57(v54, (uint64_t)v58, v52);
      swift_bridgeObjectRetain();
      sub_1CF9D8968(v56, v55);
      *v60 = v56;
      v60[1] = v55;
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v54, 0, 1, v59);
    }
    sub_1CF9D8968(v65, v67);
    sub_1CF931B1C(v50, &qword_1EFBC5440);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4760);
    v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v49 = v54;
  }
  else
  {
LABEL_8:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4760);
    v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
    v49 = a1;
  }
  return v48((uint64_t)v49, 1, 1, v47);
}

uint64_t sub_1CFA90C00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CF923FD8((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1CF957D14(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_1CFB02550();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1CF931B1C(a1, (uint64_t *)&unk_1ED904DA0);
    sub_1CF956854(a2, v9);
    v7 = sub_1CFB02550();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1CF931B1C((uint64_t)v9, (uint64_t *)&unk_1ED904DA0);
  }
}

uint64_t sub_1CFA90CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CF923FD8((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CF957EC8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CF931B1C(a1, (uint64_t *)&unk_1ED904DA0);
    sub_1CF956950(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1CF931B1C((uint64_t)v9, (uint64_t *)&unk_1ED904DA0);
  }
}

uint64_t sub_1CFA90DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904840);
  MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
  MEMORY[0x1E0C80A78](v18, v19, v18, v20, v21, v22, v23, v24);
  v26 = (char *)&v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v27 + 48))(a1, 1) == 1)
  {
    sub_1CF931B1C(a1, (uint64_t *)&unk_1ED904840);
    sub_1CF956B48(a2, a3, (uint64_t)v17);
    swift_bridgeObjectRelease();
    return sub_1CF931B1C((uint64_t)v17, (uint64_t *)&unk_1ED904840);
  }
  else
  {
    sub_1CF9BEC60(a1, (uint64_t)v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v4;
    *v4 = 0x8000000000000000;
    sub_1CF958C30((uint64_t)v26, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v31;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t CBOREncoder.codingKeyFormat.setter(char *a1)
{
  return sub_1CFA9200C(a1, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D03818]);
}

uint64_t Decoder.codingKeyFormat.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CFA90F40(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE238], a3);
}

uint64_t Encoder.codingKeyFormat.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CFA90F40(a1, a2, MEMORY[0x1E0DEE268], a3);
}

uint64_t sub_1CFA90F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  _BYTE v25[16];
  __int128 v26;
  __int128 v27;

  v8 = sub_1CFB02550();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a3(a1, a2);
  if (qword_1EFBBD450 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFBC4780);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v18, v20, v8);
  if (*(_QWORD *)(v19 + 16) && (v21 = sub_1CFA923EC((uint64_t)v18), (v22 & 1) != 0))
  {
    sub_1CF94BBF0(*(_QWORD *)(v19 + 56) + 32 * v21, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v18, v8);
  if (!*((_QWORD *)&v27 + 1))
  {
    result = sub_1CF931B1C((uint64_t)&v26, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
LABEL_11:
    v24 = 0;
    goto LABEL_12;
  }
  v24 = v25[15];
LABEL_12:
  *a4 = v24;
  return result;
}

uint64_t Decoder.presentmentType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CFA910CC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEE238], a3);
}

uint64_t Encoder.presentmentType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CFA910CC(a1, a2, MEMORY[0x1E0DEE268], a3);
}

uint64_t sub_1CFA910CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  __int128 v24;
  __int128 v25;

  v8 = sub_1CFB02550();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a3(a1, a2);
  if (qword_1EFBBD448 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFBC4768);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v20, v8);
  if (*(_QWORD *)(v19 + 16) && (v21 = sub_1CFA923EC((uint64_t)v18), (v22 & 1) != 0))
  {
    sub_1CF94BBF0(*(_QWORD *)(v19 + 56) + 32 * v21, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  if (!*((_QWORD *)&v25 + 1))
  {
    result = sub_1CF931B1C((uint64_t)&v24, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_11:
    *a4 = 2;
  return result;
}

uint64_t sub_1CFA9123C(uint64_t a1)
{
  return sub_1CFA91290(a1, qword_1EFBC4768);
}

uint64_t static CodingUserInfoKey.iso18013PresentmentType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CFA91380(&qword_1EFBBD448, (uint64_t)qword_1EFBC4768, a1);
}

uint64_t sub_1CFA91274(uint64_t a1)
{
  return sub_1CFA91290(a1, qword_1EFBC4780);
}

uint64_t sub_1CFA91290(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC47B0);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CFB02550();
  __swift_allocate_value_buffer(v13, a2);
  v14 = __swift_project_value_buffer(v13, (uint64_t)a2);
  sub_1CFB02544();
  v15 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v12, v13);
  __break(1u);
  return result;
}

uint64_t static CodingUserInfoKey.iso18013CodingKeyFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CFA91380(&qword_1EFBBD450, (uint64_t)qword_1EFBC4780, a1);
}

uint64_t sub_1CFA91380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1CFB02550();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

CoreIDVShared::ISO18013PresentmentType_optional __swiftcall ISO18013PresentmentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreIDVShared::ISO18013PresentmentType_optional)sub_1CF970AC8(v1);
}

uint64_t ISO18013PresentmentType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C617469676964;
  else
    return 0x6C61636973796870;
}

uint64_t sub_1CFA91430(char *a1, char *a2)
{
  return sub_1CFA27F8C(*a1, *a2);
}

uint64_t sub_1CFA9143C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA914BC()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA91518()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::ISO18013PresentmentType_optional sub_1CFA91594(Swift::String *a1)
{
  return ISO18013PresentmentType.init(rawValue:)(*a1);
}

void sub_1CFA915A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C61636973796870;
  if (*v1)
    v2 = 0x6C617469676964;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

CoreIDVShared::ISO18013CodingKeyFormat_optional __swiftcall ISO18013CodingKeyFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreIDVShared::ISO18013CodingKeyFormat_optional)sub_1CF970AC8(v1);
}

uint64_t ISO18013CodingKeyFormat.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1196901185;
  else
    return 0x647261646E617473;
}

uint64_t sub_1CFA91620(char *a1, char *a2)
{
  return sub_1CFA281E4(*a1, *a2);
}

uint64_t sub_1CFA9162C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA916A4()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA916F8()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::ISO18013CodingKeyFormat_optional sub_1CFA9176C(Swift::String *a1)
{
  return ISO18013CodingKeyFormat.init(rawValue:)(*a1);
}

void sub_1CFA91778(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1196901185;
  if (!*v1)
    v2 = 0x647261646E617473;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t CBOREncoder.presentmentType.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CFA918E8(MEMORY[0x1E0D03820], a1);
}

uint64_t CBOREncoder.presentmentType.setter(unsigned __int8 *a1)
{
  return sub_1CFA91A4C(a1, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D03818]);
}

void (*CBOREncoder.presentmentType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = sub_1CFB02550();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[11] = malloc(v6);
  v3[12] = malloc(v6);
  CBOREncoder.presentmentType.getter((_BYTE *)v3 + 104);
  return sub_1CFA91848;
}

void sub_1CFA91848(uint64_t a1, char a2)
{
  sub_1CFA91BE8(a1, a2, (uint64_t (*)(_QWORD *))MEMORY[0x1E0D03818]);
}

uint64_t CBOREncoder.codingKeyFormat.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CFA91DA4(MEMORY[0x1E0D03820], a1);
}

void (*CBOREncoder.codingKeyFormat.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = sub_1CFB02550();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v3[11] = malloc(*(_QWORD *)(v5 + 64));
  CBOREncoder.codingKeyFormat.getter((_BYTE *)v3 + 96);
  return sub_1CFA918D0;
}

void sub_1CFA918D0(uint64_t a1, char a2)
{
  sub_1CFA92180(a1, a2, (uint64_t (*)(_QWORD *))MEMORY[0x1E0D03818]);
}

uint64_t CBORDecoder.presentmentType.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CFA918E8(MEMORY[0x1E0D037C8], a1);
}

uint64_t sub_1CFA918E8@<X0>(uint64_t (*a1)(uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t result;
  __int128 v21;
  __int128 v22;

  v4 = sub_1CFB02550();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFBBD448 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1EFBC4768);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v15, v4);
  v17 = a1(v16);
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1CFA923EC((uint64_t)v14), (v19 & 1) != 0))
  {
    sub_1CF94BBF0(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  if (!*((_QWORD *)&v22 + 1))
  {
    result = sub_1CF931B1C((uint64_t)&v21, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_11:
    *a2 = 2;
  return result;
}

uint64_t CBORDecoder.presentmentType.setter(unsigned __int8 *a1)
{
  return sub_1CFA91A4C(a1, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D037C0]);
}

uint64_t sub_1CFA91A4C(unsigned __int8 *a1, uint64_t (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, _QWORD);
  _BYTE v19[32];
  __int128 v20;
  __int128 v21;

  v4 = sub_1CFB02550();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *a1;
  if (qword_1EFBBD448 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1EFBC4768);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v14, v16, v4);
  if (v15 == 2)
  {
    v20 = 0u;
    v21 = 0u;
  }
  else
  {
    *((_QWORD *)&v21 + 1) = &type metadata for ISO18013PresentmentType;
    LOBYTE(v20) = v15 & 1;
  }
  v17 = (uint64_t (*)(_BYTE *, _QWORD))a2(v19);
  sub_1CFA90C00((uint64_t)&v20, (uint64_t)v14);
  return v17(v19, 0);
}

void (*CBORDecoder.presentmentType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = sub_1CFB02550();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[11] = malloc(v6);
  v3[12] = malloc(v6);
  CBORDecoder.presentmentType.getter((_BYTE *)v3 + 104);
  return sub_1CFA91BDC;
}

void sub_1CFA91BDC(uint64_t a1, char a2)
{
  sub_1CFA91BE8(a1, a2, (uint64_t (*)(_QWORD *))MEMORY[0x1E0D037C0]);
}

void sub_1CFA91BE8(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void (*v16)(_QWORD *, _QWORD);
  _QWORD *v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD **)a1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 104);
  if ((a2 & 1) != 0)
  {
    if (qword_1EFBBD448 != -1)
      swift_once();
    v7 = v4[10];
    v6 = v4[11];
    v8 = v4[9];
    v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFBC4768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    if (v5 == 2)
    {
      v18 = 0u;
      v19 = 0u;
    }
    else
    {
      *((_QWORD *)&v19 + 1) = &type metadata for ISO18013PresentmentType;
      LOBYTE(v18) = v5 & 1;
    }
    v15 = (void *)v4[11];
    v14 = (void *)v4[12];
    v16 = (void (*)(_QWORD *, _QWORD))a3(v4);
    sub_1CFA90C00((uint64_t)&v18, (uint64_t)v15);
    v17 = v4;
  }
  else
  {
    if (qword_1EFBBD448 != -1)
      swift_once();
    v10 = v4[12];
    v11 = v4[9];
    v12 = v4[10];
    v13 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFBC4768);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v13, v11);
    if (v5 == 2)
    {
      v18 = 0u;
      v19 = 0u;
    }
    else
    {
      *((_QWORD *)&v19 + 1) = &type metadata for ISO18013PresentmentType;
      LOBYTE(v18) = v5 & 1;
    }
    v15 = (void *)v4[11];
    v14 = (void *)v4[12];
    v16 = (void (*)(_QWORD *, _QWORD))a3(v4 + 4);
    sub_1CFA90C00((uint64_t)&v18, (uint64_t)v14);
    v17 = v4 + 4;
  }
  v16(v17, 0);
  free(v14);
  free(v15);
  free(v4);
}

uint64_t CBORDecoder.codingKeyFormat.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1CFA91DA4(MEMORY[0x1E0D037C8], a1);
}

uint64_t sub_1CFA91DA4@<X0>(uint64_t (*a1)(uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t result;
  char v21;
  _BYTE v22[16];
  __int128 v23;
  __int128 v24;

  v4 = sub_1CFB02550();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EFBBD450 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1EFBC4780);
  v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v14, v15, v4);
  v17 = a1(v16);
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_1CFA923EC((uint64_t)v14), (v19 & 1) != 0))
  {
    sub_1CF94BBF0(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v14, v4);
  if (!*((_QWORD *)&v24 + 1))
  {
    result = sub_1CF931B1C((uint64_t)&v23, (uint64_t *)&unk_1ED904DA0);
    goto LABEL_11;
  }
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
LABEL_11:
    v21 = 0;
    goto LABEL_12;
  }
  v21 = v22[15];
LABEL_12:
  *a2 = v21;
  return result;
}

uint64_t sub_1CFA91F00(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_BYTE *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, _QWORD);
  _BYTE v22[32];
  _BYTE v23[24];
  ValueMetadata *v24;

  v7 = sub_1CFB02550();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *a1;
  if (qword_1EFBBD450 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_1EFBC4780);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v17, v19, v7);
  v24 = &type metadata for ISO18013CodingKeyFormat;
  v23[0] = v18;
  v20 = (uint64_t (*)(_BYTE *, _QWORD))a5(v22);
  sub_1CFA90C00((uint64_t)v23, (uint64_t)v17);
  return v20(v22, 0);
}

uint64_t CBORDecoder.codingKeyFormat.setter(char *a1)
{
  return sub_1CFA9200C(a1, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D037C0]);
}

uint64_t sub_1CFA9200C(char *a1, uint64_t (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, _QWORD);
  _BYTE v19[32];
  _BYTE v20[24];
  ValueMetadata *v21;

  v4 = sub_1CFB02550();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = *a1;
  if (qword_1EFBBD450 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1EFBC4780);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v14, v16, v4);
  v21 = &type metadata for ISO18013CodingKeyFormat;
  v20[0] = v15;
  v17 = (uint64_t (*)(_BYTE *, _QWORD))a2(v19);
  sub_1CFA90C00((uint64_t)v20, (uint64_t)v14);
  return v17(v19, 0);
}

void (*CBORDecoder.codingKeyFormat.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = sub_1CFB02550();
  v3[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[10] = v5;
  v3[11] = malloc(*(_QWORD *)(v5 + 64));
  CBORDecoder.codingKeyFormat.getter((_BYTE *)v3 + 96);
  return sub_1CFA92174;
}

void sub_1CFA92174(uint64_t a1, char a2)
{
  sub_1CFA92180(a1, a2, (uint64_t (*)(_QWORD *))MEMORY[0x1E0D037C0]);
}

void sub_1CFA92180(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD *v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  ValueMetadata *v16;

  v4 = *(_QWORD **)a1;
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 96);
  if ((a2 & 1) != 0)
  {
    if (qword_1EFBBD450 != -1)
      swift_once();
    v7 = v4[10];
    v6 = (void *)v4[11];
    v8 = v4[9];
    v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFBC4780);
    (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    v16 = &type metadata for ISO18013CodingKeyFormat;
    v15[0] = v5;
    v10 = (void (*)(_QWORD *, _QWORD))a3(v4);
    sub_1CFA90C00((uint64_t)v15, (uint64_t)v6);
    v11 = v4;
  }
  else
  {
    if (qword_1EFBBD450 != -1)
      swift_once();
    v12 = v4[10];
    v6 = (void *)v4[11];
    v13 = v4[9];
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EFBC4780);
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 16))(v6, v14, v13);
    v16 = &type metadata for ISO18013CodingKeyFormat;
    v15[0] = v5;
    v10 = (void (*)(_QWORD *, _QWORD))a3(v4 + 4);
    sub_1CFA90C00((uint64_t)v15, (uint64_t)v6);
    v11 = v4 + 4;
  }
  v10(v11, 0);
  free(v6);
  free(v4);
}

uint64_t sub_1CFA922E4(uint64_t a1, uint64_t a2)
{
  return sub_1CFA929F4(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CFA92B60);
}

unint64_t sub_1CFA922F8(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB02A90();
  DIPError.PropertyKey.rawValue.getter();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  v2 = sub_1CFB02ACC();
  return sub_1CFA92C40(a1, v2);
}

uint64_t sub_1CFA92374(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB02A90();
  DIPError.PropertyKey.rawValue.getter();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  v2 = sub_1CFB02ACC();
  return sub_1CFA92D5C(a1, v2);
}

unint64_t sub_1CFA923EC(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB02550();
  v2 = sub_1CFB0198C();
  return sub_1CFA934DC(a1, v2);
}

unint64_t sub_1CFA92440()
{
  unint64_t result;

  result = qword_1EFBC4798;
  if (!qword_1EFBC4798)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013PresentmentType, &type metadata for ISO18013PresentmentType);
    atomic_store(result, (unint64_t *)&qword_1EFBC4798);
  }
  return result;
}

unint64_t sub_1CFA92488()
{
  unint64_t result;

  result = qword_1EFBC47A0;
  if (!qword_1EFBC47A0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for ISO18013CodingKeyFormat, &type metadata for ISO18013CodingKeyFormat);
    atomic_store(result, (unint64_t *)&qword_1EFBC47A0);
  }
  return result;
}

uint64_t sub_1CFA924CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = CBOREncoder.presentmentType.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1CFA92504(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return CBOREncoder.presentmentType.setter(&v2);
}

_QWORD *sub_1CFA92538@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_1Tm((_QWORD *(*)(uint64_t *__return_ptr))CBOREncoder.codingKeyFormat.getter, a1);
}

uint64_t sub_1CFA92544(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA91F00(a1, a2, a3, a4, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D03818]);
}

uint64_t sub_1CFA92560@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = CBORDecoder.presentmentType.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1CFA92598(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return CBORDecoder.presentmentType.setter(&v2);
}

_QWORD *sub_1CFA925CC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_1Tm((_QWORD *(*)(uint64_t *__return_ptr))CBORDecoder.codingKeyFormat.getter, a1);
}

_QWORD *keypath_get_1Tm@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1CFA92610(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CFA91F00(a1, a2, a3, a4, (uint64_t (*)(_BYTE *))MEMORY[0x1E0D037C0]);
}

ValueMetadata *type metadata accessor for ISO18013PresentmentType()
{
  return &type metadata for ISO18013PresentmentType;
}

uint64_t _s13CoreIDVShared23ISO18013PresentmentTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFA9268C + 4 * byte_1CFB1CD05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFA926C0 + 4 * asc_1CFB1CD00[v4]))();
}

uint64_t sub_1CFA926C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA926C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA926D0);
  return result;
}

uint64_t sub_1CFA926DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA926E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFA926E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA926F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013CodingKeyFormat()
{
  return &type metadata for ISO18013CodingKeyFormat;
}

unint64_t sub_1CFA9270C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB02A84();
  return sub_1CFA94010(a1, v2);
}

unint64_t sub_1CFA92744(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1CFB02A90();
  sub_1CFB02A9C();
  v2 = sub_1CFB02ACC();
  return sub_1CFA93604(a1, v2);
}

unint64_t sub_1CFA9279C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB02334();
  return sub_1CFA936A4(a1, v2);
}

uint64_t sub_1CFA927CC(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB02A90();
  sub_1CF9AA188(a1);
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  v2 = sub_1CFB02ACC();
  return sub_1CFA93768(a1, v2);
}

unint64_t sub_1CFA92840(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB01A28();
  sub_1CFB02A90();
  sub_1CFB01ADC();
  v2 = sub_1CFB02ACC();
  swift_bridgeObjectRelease();
  return sub_1CFA93CD4(a1, v2);
}

unint64_t sub_1CFA928C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CFB02A90();
  IQACode.hash(into:)();
  v4 = sub_1CFB02ACC();
  return sub_1CFA93E48(a1, a2, v4);
}

unint64_t sub_1CFA92924(uint64_t a1)
{
  uint64_t v2;

  sub_1CFB02A90();
  type metadata accessor for CFString(0);
  sub_1CFA94C08();
  sub_1CFB011D0();
  v2 = sub_1CFB02ACC();
  return sub_1CFA93EE8(a1, v2);
}

unint64_t sub_1CFA92994(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB02148();
  return sub_1CFA94A3C(a1, v2, (unint64_t *)&qword_1EFBBDFC0);
}

uint64_t sub_1CFA929E0(uint64_t a1, uint64_t a2)
{
  return sub_1CFA929F4(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0CB0240], sub_1CFA940AC);
}

uint64_t sub_1CFA929F4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_1CFB02A90();
  a3(v10, a1, a2);
  v7 = sub_1CFB02ACC();
  return a4(a1, a2, v7);
}

unint64_t sub_1CFA92A6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB02148();
  return sub_1CFA94A3C(a1, v2, (unint64_t *)&qword_1ED903980);
}

unint64_t sub_1CFA92AB8(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1CFB02A90();
  sub_1CFB02A9C();
  v2 = sub_1CFB02ACC();
  return sub_1CFA94B4C(v1, v2);
}

unint64_t sub_1CFA92B14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CFB02148();
  return sub_1CFA94A3C(a1, v2, (unint64_t *)&qword_1ED903040);
}

unint64_t sub_1CFA92B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CFB028B0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CFB028B0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CFA92C40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    while (1)
    {
      v7 = DIPError.PropertyKey.rawValue.getter();
      v9 = v8;
      if (v7 == DIPError.PropertyKey.rawValue.getter() && v9 == v10)
        break;
      v12 = sub_1CFB028B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v5 = (v5 + 1) & v6;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
          continue;
      }
      return v5;
    }
    swift_bridgeObjectRelease_n();
  }
  return v5;
}

uint64_t sub_1CFA92D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1CFA934DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  char v21;
  _QWORD v23[2];

  v3 = v2;
  v23[1] = a1;
  v5 = sub_1CFB02550();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(v3 + 32);
  v17 = a2 & ~v16;
  if (((*(_QWORD *)(v3 + 64 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v18 = ~v16;
    v19 = *(_QWORD *)(v6 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v20(v15, *(_QWORD *)(v3 + 48) + v19 * v17, v5);
      v21 = sub_1CFB019F8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
      if ((v21 & 1) != 0)
        break;
      v17 = (v17 + 1) & v18;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
  }
  return v17;
}

unint64_t sub_1CFA93604(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CFA936A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1CF9599E4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D17D90A0](v9, a1);
      sub_1CF959A20((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1CFA93768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1CFA93CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1CFB01A28();
    v8 = v7;
    if (v6 == sub_1CFB01A28() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1CFB01A28();
          v15 = v14;
          if (v13 == sub_1CFB01A28() && v15 == v16)
            break;
          v18 = sub_1CFB028B0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1CFA93E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9[2];

  v9[0] = a1;
  v9[1] = a2;
  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v8 = *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * v5);
      if ((_s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v8, v9) & 1) != 0)
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1CFA93EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1CFA94C08();
    v7 = v6;
    v8 = sub_1CFB011C4();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_1CFB011C4();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CFA94010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CFA940AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X8 }
  return a3 & ~v4;
}

unint64_t sub_1CFA94A3C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1CF9775E8(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1CFB02154();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1CFB02154();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CFA94B4C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CFA94C08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC47A8;
  if (!qword_1EFBC47A8)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1D17DA600](&unk_1CFB052E4, v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC47A8);
  }
  return result;
}

BOOL static AsyncCoreDataStore.StoreType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AsyncCoreDataStore.StoreType.hash(into:)()
{
  return sub_1CFB02A9C();
}

uint64_t AsyncCoreDataStore.StoreType.hashValue.getter()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t AsyncCoreDataStore.__allocating_init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v12 = swift_allocObject();
  v13 = *a5;
  v14 = OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore__container;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050B0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v12 + v14) = v15;
  v16 = (_QWORD *)(v12 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
  *v16 = a1;
  v16[1] = a2;
  v17 = v12 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_modelURL;
  v18 = sub_1CFB00DEC();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v17, a3, v18);
  v19(v12 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_databaseURL, a4, v18);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_urlFileProtection) = a6;
  *(_BYTE *)(v12 + 16) = v13;
  return v12;
}

uint64_t AsyncCoreDataStore.init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v6;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v12 = *a5;
  v13 = OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore__container;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050B0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v6 + v13) = v14;
  v15 = (_QWORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
  *v15 = a1;
  v15[1] = a2;
  v16 = v6 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_modelURL;
  v17 = sub_1CFB00DEC();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v16, a3, v17);
  v18(v6 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_databaseURL, a4, v17);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_urlFileProtection) = a6;
  *(_BYTE *)(v6 + 16) = v12;
  return v6;
}

void AsyncCoreDataStore.container.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore__container);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1CFA94F20(v2, v0, &v4);
  os_unfair_lock_unlock(v3);
}

void sub_1CFA94F20(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v5;
  id v6;
  _QWORD *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int16 v13;

  v5 = *a1;
  if (*a1)
  {
    *a3 = v5;
LABEL_3:
    v6 = v5;
    return;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    v8 = sub_1CFA95480();
    if (v3)
      goto LABEL_6;
LABEL_9:
    *a1 = v8;
    *a3 = v8;
    v12 = v8;
    v5 = 0;
    goto LABEL_3;
  }
  v8 = sub_1CFA95A14();
  if (!v3)
    goto LABEL_9;
LABEL_6:
  v13 = 0;
  v9 = v3;
  v10 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v3, 0, 0xE000000000000000, &v13, 0, v10, 0xD000000000000059, 0x80000001CFB30540, v11, 0x656E6961746E6F63, 0xE900000000000072, 57);
  swift_willThrow();

}

id sub_1CFA9505C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  __int16 v40[12];
  uint64_t v41;

  v1 = sub_1CFB012CC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3, v4, v5, v6, v7, v8, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v13 = (void *)sub_1CFB00DA4();
  v14 = objc_msgSend(v12, sel_initWithContentsOfURL_, v13);

  if (v14)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v15, v1);
    swift_retain_n();
    v16 = v2;
    v17 = sub_1CFB012B4();
    v18 = sub_1CFB01FC8();
    if (os_log_type_enabled(v17, v18))
    {
      v36 = v16;
      v19 = swift_slowAlloc();
      v37 = v0;
      v20 = (uint8_t *)v19;
      v35 = swift_slowAlloc();
      v41 = v35;
      v38 = v14;
      *(_DWORD *)v20 = 136446210;
      v34 = v20 + 4;
      v21 = sub_1CFB00D5C();
      v39 = sub_1CF9C974C(v21, v22, &v41);
      v14 = v38;
      sub_1CFB021C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v17, v18, "Successfully loaded Core Data model at path %{public}s", v20, 0xCu);
      v23 = v35;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v23, -1, -1);
      MEMORY[0x1D17DA6E4](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v1);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v1);
    }
  }
  else
  {
    v40[0] = 94;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903D98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CFB05840;
    *(_BYTE *)(inited + 32) = 19;
    v25 = sub_1CFB00D5C();
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 40) = v25;
    *(_QWORD *)(inited + 48) = v26;
    v27 = sub_1CF9220B4(inited);
    sub_1CF923828();
    v28 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000029, 0x80000001CFB30710, v40, 0, v27, 0xD000000000000059, 0x80000001CFB30540, v29, 0x65646F4D64616F6CLL, 0xEB0000000029286CLL, 73);
    swift_willThrow();
    v40[0] = 0;
    v30 = v28;
    v31 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v28, 0, 0xE000000000000000, v40, 0, v31, 0xD000000000000059, 0x80000001CFB30540, v32, 0x65646F4D64616F6CLL, 0xEB0000000029286CLL, 79);
    swift_willThrow();

  }
  return v14;
}

_QWORD *sub_1CFA95480()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  uint64_t aBlock[6];
  uint64_t v45;

  v2 = v1;
  v3 = v0;
  v4 = (_QWORD *)sub_1CFB012CC();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer((uint64_t)v4, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, _QWORD *))(v5 + 16))(v14, v15, v4);
  swift_retain();
  v16 = sub_1CFB012B4();
  v17 = sub_1CFB01FC8();
  if (os_log_type_enabled(v16, v17))
  {
    v43 = v1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    aBlock[0] = v19;
    v42 = v5;
    *(_DWORD *)v18 = 136446210;
    v41 = v18 + 4;
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
    v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName + 8);
    swift_bridgeObjectRetain();
    v45 = sub_1CF9C974C(v21, v20, aBlock);
    sub_1CFB021C0();
    swift_release();
    v2 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF917000, v16, v17, "Initializing on-disk Core Data database %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v19, -1, -1);
    MEMORY[0x1D17DA6E4](v18, -1, -1);

    (*(void (**)(char *, _QWORD *))(v42 + 8))(v14, v4);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, _QWORD *))(v5 + 8))(v14, v4);
  }
  v22 = sub_1CFA9505C();
  if (!v2)
  {
    v23 = v22;
    v24 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
    swift_bridgeObjectRetain();
    v25 = v23;
    v26 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v24, sel_initWithName_managedObjectModel_, v26, v25);

    v27 = objc_allocWithZone(MEMORY[0x1E0C97C08]);
    v28 = (void *)sub_1CFB00DA4();
    v29 = objc_msgSend(v27, sel_initWithURL_, v28);

    objc_msgSend(v29, sel_setType_, *MEMORY[0x1E0C979E8]);
    objc_msgSend(v29, sel_setShouldInferMappingModelAutomatically_, 1);
    objc_msgSend(v29, sel_setShouldMigrateStoreAutomatically_, 1);
    objc_msgSend(v29, sel_setTimeout_, 10.0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1CFB10370;
    *(_QWORD *)(v30 + 32) = v29;
    aBlock[0] = v30;
    sub_1CFB01CBC();
    sub_1CFA970DC();
    v31 = v29;
    v32 = (void *)sub_1CFB01C8C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setPersistentStoreDescriptions_, v32);

    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 0;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v3;
    *(_QWORD *)(v34 + 24) = v33;
    aBlock[4] = (uint64_t)sub_1CFA97140;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1CFA965A8;
    aBlock[3] = (uint64_t)&block_descriptor_12;
    v35 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_loadPersistentStoresWithCompletionHandler_, v35);
    _Block_release(v35);
    swift_beginAccess();
    v2 = *(void **)(v33 + 16);
    if (!v2)
    {

      swift_release();
      return v4;
    }
    v36 = v2;
    swift_willThrow();

    swift_release();
  }
  LOWORD(v45) = 0;
  v37 = v2;
  v38 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v2, 0, 0xE000000000000000, (__int16 *)&v45, 0, v38, 0xD000000000000059, 0x80000001CFB30540, v39, 0xD000000000000015, 0x80000001CFB30650, 144);
  swift_willThrow();

  return v4;
}

_QWORD *sub_1CFA95A14()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  uint64_t aBlock[6];
  uint64_t v43;

  v2 = v1;
  v3 = v0;
  v4 = (_QWORD *)sub_1CFB012CC();
  v5 = *(v4 - 1);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v15 = __swift_project_value_buffer((uint64_t)v4, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, _QWORD *))(v5 + 16))(v14, v15, v4);
  swift_retain();
  v16 = sub_1CFB012B4();
  v17 = sub_1CFB01FC8();
  if (os_log_type_enabled(v16, v17))
  {
    v41 = v1;
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    aBlock[0] = v19;
    v40 = v5;
    *(_DWORD *)v18 = 136446210;
    v39 = v18 + 4;
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
    v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName + 8);
    swift_bridgeObjectRetain();
    v43 = sub_1CF9C974C(v21, v20, aBlock);
    sub_1CFB021C0();
    swift_release();
    v2 = v41;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF917000, v16, v17, "Initializing in-memory Core Data database %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v19, -1, -1);
    MEMORY[0x1D17DA6E4](v18, -1, -1);

    (*(void (**)(char *, _QWORD *))(v40 + 8))(v14, v4);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, _QWORD *))(v5 + 8))(v14, v4);
  }
  v22 = sub_1CFA9505C();
  if (!v2)
  {
    v23 = v22;
    v24 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
    swift_bridgeObjectRetain();
    v25 = v23;
    v26 = (void *)sub_1CFB01A04();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v24, sel_initWithName_managedObjectModel_, v26, v25);

    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97C08]), sel_init);
    objc_msgSend(v27, sel_setType_, *MEMORY[0x1E0C97860]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9050E0);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1CFB10370;
    *(_QWORD *)(v28 + 32) = v27;
    aBlock[0] = v28;
    sub_1CFB01CBC();
    sub_1CFA970DC();
    v29 = v27;
    v30 = (void *)sub_1CFB01C8C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setPersistentStoreDescriptions_, v30);

    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = 0;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = v3;
    aBlock[4] = (uint64_t)sub_1CFA97164;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1CFA965A8;
    aBlock[3] = (uint64_t)&block_descriptor_11;
    v33 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_loadPersistentStoresWithCompletionHandler_, v33);
    _Block_release(v33);
    swift_beginAccess();
    v2 = *(void **)(v31 + 16);
    if (!v2)
    {

      swift_release();
      return v4;
    }
    v34 = v2;
    swift_willThrow();

    swift_release();
  }
  LOWORD(v43) = 0;
  v35 = v2;
  v36 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v2, 0, 0xE000000000000000, (__int16 *)&v43, 0, v36, 0xD000000000000059, 0x80000001CFB30540, v37, 0xD000000000000017, 0x80000001CFB30740, 178);
  swift_willThrow();

  return v4;
}

void sub_1CFA95F44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  id v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void **v69;
  id v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint8_t *v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86[4];

  v82 = a3;
  v83 = a4;
  v86[3] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1CFB012CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CFB00C78();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21, v22, v23, v24);
  v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1CFB00DEC();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v29, v30, v31, v32, v33, v34, v35);
  v38 = (char *)&v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    LOWORD(v86[0]) = 160;
    v39 = a2;
    v40 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v41 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a2, 0xD000000000000027, 0x80000001CFB306E0, (__int16 *)v86, 0, v40, 0xD000000000000059, 0x80000001CFB30540, v42, 0xD000000000000015, 0x80000001CFB30650, 115);
    swift_willThrow();
LABEL_9:
    v69 = (void **)(v83 + 16);
    LOWORD(v86[0]) = 0;
    v70 = v41;
    v71 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v72 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v41, 0, 0xE000000000000000, (__int16 *)v86, 0, v71, 0xD000000000000059, 0x80000001CFB30540, v73, 0xD000000000000015, 0x80000001CFB30650, 134);

    swift_beginAccess();
    v74 = *v69;
    *v69 = (void *)v72;

    return;
  }
  v79 = v6;
  v80 = v17;
  v81 = v16;
  v43 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v38, v82 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_databaseURL, v36);
  sub_1CFB00C6C();
  sub_1CFB00C60();
  sub_1CFB00D98();
  v77 = v28;
  v78 = v43;
  v44 = (void *)sub_1CFB00DA4();
  v45 = v82;
  sub_1CFB01A28();
  v46 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v47 = *MEMORY[0x1E0C99938];
  v86[0] = 0;
  v48 = objc_msgSend(v44, sel_setResourceValue_forKey_error_, v46, v47, v86);

  if (!v48)
  {
    v63 = v86[0];
    v64 = (void *)sub_1CFB00D20();

    swift_willThrow();
    v66 = v77;
    v65 = v78;
    LOWORD(v86[0]) = 160;
    v67 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v41 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000029, 0x80000001CFB306B0, (__int16 *)v86, 0, v67, 0xD000000000000059, 0x80000001CFB30540, v68, 0xD000000000000015, 0x80000001CFB30650, 128);
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v81);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v65);
    goto LABEL_9;
  }
  v49 = qword_1ED9054E8;
  v50 = v86[0];
  if (v49 != -1)
    swift_once();
  v51 = v5;
  v52 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  v53 = v79;
  v54 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v15, v52, v51);
  v55 = v45;
  swift_retain_n();
  v56 = sub_1CFB012B4();
  v57 = sub_1CFB01FC8();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v85 = v83;
    *(_DWORD *)v58 = 136446210;
    v75 = v58 + 4;
    v76 = v58;
    v60 = *(_QWORD *)(v55 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
    v59 = *(_QWORD *)(v55 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName + 8);
    swift_bridgeObjectRetain();
    v84 = sub_1CF9C974C(v60, v59, &v85);
    sub_1CFB021C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    v61 = v76;
    _os_log_impl(&dword_1CF917000, v56, v57, "Done initializing %{public}s database", v76, 0xCu);
    v62 = v83;
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v62, -1, -1);
    MEMORY[0x1D17DA6E4](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v51);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v51);
  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v81);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v78);
}

void sub_1CFA965A8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void sub_1CFA9661C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34[12];

  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v34[0] = 160;
    v18 = a2;
    v19 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    v20 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a2, 0xD000000000000031, 0x80000001CFB30760, v34, 0, v19, 0xD000000000000059, 0x80000001CFB30540, v21, 0xD000000000000017, 0x80000001CFB30740, 164);
    swift_beginAccess();
    v22 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v20;

  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v23 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v23, v7);
    swift_retain();
    v24 = sub_1CFB012B4();
    v25 = sub_1CFB01FC8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v33 = v31;
      *(_DWORD *)v26 = 136446210;
      v30[1] = v26 + 4;
      v28 = *(_QWORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName);
      v27 = *(_QWORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_persistentStoreName + 8);
      swift_bridgeObjectRetain();
      v32 = sub_1CF9C974C(v28, v27, &v33);
      sub_1CFB021C0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v24, v25, "Done initializing %{public}s database", v26, 0xCu);
      v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v29, -1, -1);
      MEMORY[0x1D17DA6E4](v26, -1, -1);

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AsyncCoreDataStore.destroyPersistentStore()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  void **v15;
  os_unfair_lock_s *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint8_t *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  unsigned __int8 v29;
  id v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint8_t *v35;
  void *v36;
  os_log_t v37;
  int v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43[4];

  v2 = v0;
  v43[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1CFB012CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore__container);
  v15 = (void **)&v14[4];
  v16 = v14 + 6;
  os_unfair_lock_lock(v14 + 6);
  sub_1CFA94F20(v15, v2, v43);
  if (v1)
  {
    os_unfair_lock_unlock(v16);
    v17 = v1;
  }
  else
  {
    os_unfair_lock_unlock(v16);
    v39 = v43[0];
    v40 = objc_msgSend(v43[0], sel_persistentStoreCoordinator);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v18, v3);
    swift_retain_n();
    v19 = sub_1CFB012B4();
    v20 = sub_1CFB01FBC();
    v38 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v37 = v19;
      v21 = (uint8_t *)swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v42 = v36;
      *(_DWORD *)v21 = 136446210;
      v34[1] = v21 + 4;
      v35 = v21;
      sub_1CFB00DEC();
      sub_1CFA96E8C();
      v22 = sub_1CFB027F0();
      v41 = sub_1CF9C974C(v22, v23, (uint64_t *)&v42);
      sub_1CFB021C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v24 = v37;
      v25 = v35;
      _os_log_impl(&dword_1CF917000, v37, (os_log_type_t)v38, "Deleting Core Data database at %{public}s", v35, 0xCu);
      v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x1D17DA6E4](v26, -1, -1);
      MEMORY[0x1D17DA6E4](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    v27 = (void *)sub_1CFB00DA4();
    v28 = *MEMORY[0x1E0C979E8];
    v42 = 0;
    v29 = objc_msgSend(v40, sel_destroyPersistentStoreAtURL_withType_options_error_, v27, v28, 0, &v42);

    if ((v29 & 1) != 0)
    {
      v30 = v42;

      return;
    }
    v31 = v42;
    v17 = (void *)sub_1CFB00D20();

    swift_willThrow();
  }
  LOWORD(v42) = 160;
  v32 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001FLL, 0x80000001CFB30520, (__int16 *)&v42, 0, v32, 0xD000000000000059, 0x80000001CFB30540, v33, 0xD000000000000018, 0x80000001CFB305A0, 196);
  swift_willThrow();

}

uint64_t AsyncCoreDataStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_modelURL;
  v2 = sub_1CFB00DEC();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_databaseURL, v2);
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t AsyncCoreDataStore.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_modelURL;
  v2 = sub_1CFB00DEC();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC13CoreIDVShared18AsyncCoreDataStore_databaseURL, v2);
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1CFA96E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED903428;
  if (!qword_1ED903428)
  {
    v1 = sub_1CFB00DEC();
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ED903428);
  }
  return result;
}

unint64_t sub_1CFA96ED8()
{
  unint64_t result;

  result = qword_1EFBC47B8;
  if (!qword_1EFBC47B8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for AsyncCoreDataStore.StoreType, &type metadata for AsyncCoreDataStore.StoreType);
    atomic_store(result, (unint64_t *)&qword_1EFBC47B8);
  }
  return result;
}

uint64_t sub_1CFA96F1C()
{
  return type metadata accessor for AsyncCoreDataStore();
}

uint64_t type metadata accessor for AsyncCoreDataStore()
{
  uint64_t result;

  result = qword_1ED905068;
  if (!qword_1ED905068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CFA96F60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CFB00DEC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AsyncCoreDataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsyncCoreDataStore.__allocating_init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for AsyncCoreDataStore.StoreType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFA9705C + 4 * byte_1CFB1CEF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFA97090 + 4 * byte_1CFB1CEF0[v4]))();
}

uint64_t sub_1CFA97090(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA97098(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA970A0);
  return result;
}

uint64_t sub_1CFA970AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA970B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFA970B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA970C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AsyncCoreDataStore.StoreType()
{
  return &type metadata for AsyncCoreDataStore.StoreType;
}

unint64_t sub_1CFA970DC()
{
  unint64_t result;

  result = qword_1ED904F38[0];
  if (!qword_1ED904F38[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1ED904F38);
  }
  return result;
}

uint64_t sub_1CFA97118()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CFA97140(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1CFA95F44(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

void sub_1CFA97164(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1CFA9661C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

CoreIDVShared::Milestone __swiftcall Milestone.init(tag:description:)(Swift::String tag, Swift::String description)
{
  Swift::String *v2;
  CoreIDVShared::Milestone result;

  *v2 = tag;
  v2[1] = description;
  result.description = description;
  result.tag = tag;
  return result;
}

Swift::Void __swiftcall Milestone.log()()
{
  Swift::String *v0;

  logMilestone(tag:description:)(*v0, v0[1]);
}

ValueMetadata *type metadata accessor for Milestone()
{
  return &type metadata for Milestone;
}

void sub_1CFA9719C(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA971EC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97278(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA972CC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97348(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA973A0()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97404(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA9745C()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA974E8(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97544()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA975D0()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA97654()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97700(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97750()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA97814()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97894(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA978EC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97968(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA979C0()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA97A50()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97AFC(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97B4C()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA97BEC()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97C6C(char a1)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97CBC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA97D34()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97DDC(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97E30()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA97F10(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA97F58()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA98014()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98094(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA980E8()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98174(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA981CC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98258(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA982AC()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98310(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98360()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA983DC(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98428()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA984B4()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98530(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA9857C()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA9861C(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98668()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA98700()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA9877C(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA987D0()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA9884C(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98898()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98910(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA9895C()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA98A20()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98A70(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98AC4()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFA98B54()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98BFC(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98C54()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFA98D0C(uint64_t a1, char a2)
{
  sub_1CFB02A90();
  __asm { BR              X10 }
}

uint64_t sub_1CFA98D5C()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t ISO18013IssuerSignedItem.init(digestID:random:elementIdentifier:elementValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;

  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  v8 = (uint64_t)a7 + *(int *)(type metadata accessor for ISO18013IssuerSignedItem() + 28);
  return sub_1CFA05E5C(a6, v8);
}

uint64_t type metadata accessor for ISO18013IssuerSignedItem()
{
  uint64_t result;

  result = qword_1EFBC4848;
  if (!qword_1EFBC4848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ISO18013IssuerSignedItem.digestID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ISO18013IssuerSignedItem.random.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t ISO18013IssuerSignedItem.elementIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013IssuerSignedItem.elementValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ISO18013IssuerSignedItem();
  return sub_1CF92F584(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for AnyCodable);
}

void sub_1CFA98F24(char *a1)
{
  sub_1CFA27E20(*a1);
}

void sub_1CFA98F30()
{
  char *v0;

  sub_1CFA97C6C(*v0);
}

void sub_1CFA98F38()
{
  __asm { BR              X10 }
}

uint64_t sub_1CFA98F74()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFA98FD8(uint64_t a1)
{
  char *v1;

  sub_1CFA9884C(a1, *v1);
}

uint64_t sub_1CFA98FE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA1CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA99014()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CFA99044 + 4 * byte_1CFB1D081[*v0]))();
}

void sub_1CFA99044(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F646E6172;
  a1[1] = 0xE600000000000000;
}

void sub_1CFA9905C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001CFB23A30;
}

void sub_1CFA9907C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "elementValue");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1CFA990A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA990D0 + 4 * byte_1CFB1D085[*v0]))(0x4449747365676964, 0xE800000000000000);
}

uint64_t sub_1CFA990D0()
{
  return 0x6D6F646E6172;
}

unint64_t sub_1CFA990E4()
{
  return 0xD000000000000011;
}

uint64_t sub_1CFA99100()
{
  return 0x56746E656D656C65;
}

uint64_t sub_1CFA99120@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA1CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA9914C()
{
  sub_1CFA99794();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA99174()
{
  sub_1CFA99794();
  return sub_1CFB02B80();
}

uint64_t sub_1CFA9919C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA1CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA991D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA1CFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA991FC()
{
  sub_1CFA99714();
  return sub_1CFB02B74();
}

uint64_t sub_1CFA99224()
{
  sub_1CFA99714();
  return sub_1CFB02B80();
}

uint64_t ISO18013IssuerSignedItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  __int128 v75;
  char v76;
  char v77;

  v66 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC47C0);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for AnyCodable();
  v19 = MEMORY[0x1E0C80A78](v67, v12, v13, v14, v15, v16, v17, v18);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22, v23, v24, v25, v26, v27, v28);
  v30 = (char *)&v65 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC47C8);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31, v33, v34, v35, v36, v37, v38, v39);
  v71 = (char *)&v65 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ISO18013IssuerSignedItem();
  MEMORY[0x1E0C80A78](v65, v41, v42, v43, v44, v45, v46, v47);
  v68 = (uint64_t *)((char *)&v65 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = a1[3];
  v50 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v49);
  Decoder.codingKeyFormat.getter(v49, v50, &v77);
  v51 = v77;
  v52 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v52);
  if ((v51 & 1) == 0)
  {
    sub_1CFA99794();
    v59 = v71;
    v60 = v74;
    sub_1CFB02B2C();
    if (!v60)
    {
      LOBYTE(v75) = 0;
      v61 = sub_1CFB02718();
      v58 = (uint64_t)v68;
      *v68 = v61;
      v76 = 1;
      sub_1CF92399C();
      sub_1CFB02724();
      *(_OWORD *)(v58 + 8) = v75;
      LOBYTE(v75) = 2;
      *(_QWORD *)(v58 + 24) = sub_1CFB026E8();
      *(_QWORD *)(v58 + 32) = v64;
      LOBYTE(v75) = 3;
      sub_1CFA99B24(&qword_1EFBC0520, (uint64_t)&protocol conformance descriptor for AnyCodable);
      sub_1CFB02724();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v59, v31);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  }
  v54 = v69;
  v53 = v70;
  sub_1CFA99714();
  v55 = v72;
  v56 = v74;
  sub_1CFB02B2C();
  if (v56)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  LOBYTE(v75) = 0;
  v57 = sub_1CFB02718();
  v58 = (uint64_t)v68;
  *v68 = v57;
  v76 = 1;
  sub_1CF92399C();
  sub_1CFB02724();
  *(_OWORD *)(v58 + 8) = v75;
  LOBYTE(v75) = 2;
  *(_QWORD *)(v58 + 24) = sub_1CFB026E8();
  *(_QWORD *)(v58 + 32) = v63;
  LOBYTE(v75) = 3;
  sub_1CFA99B24(&qword_1EFBC0520, (uint64_t)&protocol conformance descriptor for AnyCodable);
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
  v30 = v21;
LABEL_7:
  sub_1CFA05E5C((uint64_t)v30, v58 + *(int *)(v65 + 28));
  sub_1CF92F584(v58, v66, (uint64_t (*)(_QWORD))type metadata accessor for ISO18013IssuerSignedItem);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  return sub_1CFA99758(v58);
}

unint64_t sub_1CFA99714()
{
  unint64_t result;

  result = qword_1EFBC47D0;
  if (!qword_1EFBC47D0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D39C, &type metadata for ISO18013IssuerSignedItem.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC47D0);
  }
  return result;
}

uint64_t sub_1CFA99758(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ISO18013IssuerSignedItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CFA99794()
{
  unint64_t result;

  result = qword_1EFBC47D8;
  if (!qword_1EFBC47D8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D34C, &type metadata for ISO18013IssuerSignedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC47D8);
  }
  return result;
}

uint64_t ISO18013IssuerSignedItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  char v37;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC47E0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC47E8);
  v31 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  Encoder.codingKeyFormat.getter(v24, v25, &v37);
  v26 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v26 & 1) != 0)
  {
    sub_1CFA99714();
    sub_1CFB02B5C();
    LOBYTE(v35) = 0;
    v28 = v33;
    v27 = v34;
    sub_1CFB027C0();
    if (!v27)
    {
      v35 = *(_OWORD *)(v2 + 8);
      v36 = 1;
      sub_1CF9319D0();
      sub_1CFB027CC();
      LOBYTE(v35) = 2;
      sub_1CFB02790();
      type metadata accessor for ISO18013IssuerSignedItem();
      LOBYTE(v35) = 3;
      type metadata accessor for AnyCodable();
      sub_1CFA99B24(&qword_1EFBC0548, (uint64_t)&protocol conformance descriptor for AnyCodable);
      sub_1CFB027CC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v28);
  }
  else
  {
    sub_1CFA99794();
    sub_1CFB02B5C();
    LOBYTE(v35) = 0;
    v30 = v34;
    sub_1CFB027C0();
    if (!v30)
    {
      v35 = *(_OWORD *)(v2 + 8);
      v36 = 1;
      sub_1CF9319D0();
      sub_1CFB027CC();
      LOBYTE(v35) = 2;
      sub_1CFB02790();
      type metadata accessor for ISO18013IssuerSignedItem();
      LOBYTE(v35) = 3;
      type metadata accessor for AnyCodable();
      sub_1CFA99B24(&qword_1EFBC0548, (uint64_t)&protocol conformance descriptor for AnyCodable);
      sub_1CFB027CC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v23, v14);
  }
}

uint64_t sub_1CFA99B24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AnyCodable();
    result = MEMORY[0x1D17DA600](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CFA99B64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013IssuerSignedItem.init(from:)(a1, a2);
}

uint64_t sub_1CFA99B78(_QWORD *a1)
{
  return ISO18013IssuerSignedItem.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for ISO18013IssuerSignedItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    v8 = a2[2];
    sub_1CF9239E0(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    v9 = a2[4];
    v4[3] = a2[3];
    v4[4] = v9;
    v10 = *(int *)(a3 + 28);
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    *v11 = *((_BYTE *)a2 + v10);
    v11[16] = *((_BYTE *)a2 + v10 + 16);
    *((_QWORD *)v11 + 1) = *(_QWORD *)((char *)a2 + v10 + 8);
    v11[32] = *((_BYTE *)a2 + v10 + 32);
    *((_QWORD *)v11 + 3) = *(_QWORD *)((char *)a2 + v10 + 24);
    v11[40] = *((_BYTE *)a2 + v10 + 40);
    *((_DWORD *)v11 + 9) = *(_DWORD *)((char *)a2 + v10 + 36);
    *((_QWORD *)v11 + 6) = *(_QWORD *)((char *)a2 + v10 + 48);
    v11[56] = *((_BYTE *)a2 + v10 + 56);
    v13 = (int *)type metadata accessor for AnyCodable();
    v14 = v13[9];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v17 = sub_1CFB00F54();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v22 = v13[10];
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    *(_QWORD *)&v11[v13[12]] = *(_QWORD *)&v12[v13[12]];
    v26 = v13[13];
    v27 = &v11[v26];
    v28 = (uint64_t *)&v12[v26];
    v29 = *(_QWORD *)&v12[v26 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29 >> 60 == 15)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    else
    {
      v30 = *v28;
      sub_1CF9239E0(*v28, v29);
      *(_QWORD *)v27 = v30;
      *((_QWORD *)v27 + 1) = v29;
    }
  }
  return v4;
}

uint64_t destroy for ISO18013IssuerSignedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;
  unint64_t v11;

  sub_1CF923A24(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for AnyCodable();
  v6 = v4 + *(int *)(v5 + 36);
  v7 = sub_1CFB00F54();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v4 + *(int *)(v5 + 52));
  v11 = v10[1];
  if (v11 >> 60 != 15)
    return sub_1CF923A24(*v10, v11);
  return result;
}

_QWORD *initializeWithCopy for ISO18013IssuerSignedItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  v7 = a2[2];
  sub_1CF9239E0(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *v10 = *((_BYTE *)a2 + v9);
  v10[16] = *((_BYTE *)a2 + v9 + 16);
  *((_QWORD *)v10 + 1) = *(_QWORD *)((char *)a2 + v9 + 8);
  v10[32] = *((_BYTE *)a2 + v9 + 32);
  *((_QWORD *)v10 + 3) = *(_QWORD *)((char *)a2 + v9 + 24);
  v10[40] = *((_BYTE *)a2 + v9 + 40);
  *((_DWORD *)v10 + 9) = *(_DWORD *)((char *)a2 + v9 + 36);
  *((_QWORD *)v10 + 6) = *(_QWORD *)((char *)a2 + v9 + 48);
  v10[56] = *((_BYTE *)a2 + v9 + 56);
  v12 = (int *)type metadata accessor for AnyCodable();
  v13 = v12[9];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = sub_1CFB00F54();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = v12[10];
  v21 = &v10[v20];
  v22 = &v11[v20];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
  *(_QWORD *)&v10[v12[12]] = *(_QWORD *)&v11[v12[12]];
  v24 = v12[13];
  v25 = &v10[v24];
  v26 = (uint64_t *)&v11[v24];
  v27 = *(_QWORD *)&v11[v24 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 >> 60 == 15)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  else
  {
    v28 = *v26;
    sub_1CF9239E0(*v26, v27);
    *(_QWORD *)v25 = v28;
    *((_QWORD *)v25 + 1) = v27;
  }
  return a1;
}

_QWORD *assignWithCopy for ISO18013IssuerSignedItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  sub_1CF9239E0(v6, v7);
  v8 = a1[1];
  v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1CF923A24(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *v11 = *((_BYTE *)a2 + v10);
  v13 = *(_QWORD *)((char *)a2 + v10 + 8);
  v11[16] = v12[16];
  *((_QWORD *)v11 + 1) = v13;
  v14 = *((_QWORD *)v12 + 3);
  v11[32] = v12[32];
  *((_QWORD *)v11 + 3) = v14;
  LODWORD(v14) = *((_DWORD *)v12 + 9);
  v11[40] = v12[40];
  *((_DWORD *)v11 + 9) = v14;
  v15 = *((_QWORD *)v12 + 6);
  v11[56] = v12[56];
  *((_QWORD *)v11 + 6) = v15;
  v16 = (int *)type metadata accessor for AnyCodable();
  v17 = v16[9];
  v18 = &v11[v17];
  v19 = &v12[v17];
  v20 = sub_1CFB00F54();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = v16[10];
  v27 = &v11[v26];
  v28 = &v12[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[v16[11]] = *(_QWORD *)&v12[v16[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[v16[12]] = *(_QWORD *)&v12[v16[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v16[13];
  v30 = (uint64_t *)&v11[v29];
  v31 = (uint64_t *)&v12[v29];
  v32 = *(_QWORD *)&v12[v29 + 8];
  if (*(_QWORD *)&v11[v29 + 8] >> 60 != 15)
  {
    if (v32 >> 60 != 15)
    {
      v34 = *v31;
      sub_1CF9239E0(v34, v32);
      v35 = *v30;
      v36 = v30[1];
      *v30 = v34;
      v30[1] = v32;
      sub_1CF923A24(v35, v36);
      return a1;
    }
    sub_1CF930DB8((uint64_t)v30);
    goto LABEL_12;
  }
  if (v32 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    return a1;
  }
  v33 = *v31;
  sub_1CF9239E0(v33, v32);
  *v30 = v33;
  v30[1] = v32;
  return a1;
}

uint64_t initializeWithTake for ISO18013IssuerSignedItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_BYTE *)v5 = *(_BYTE *)(a2 + v4);
  *(_QWORD *)(v5 + 8) = *(_QWORD *)(a2 + v4 + 8);
  *(_BYTE *)(v5 + 16) = *(_BYTE *)(a2 + v4 + 16);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(a2 + v4 + 24);
  *(_BYTE *)(v5 + 32) = *(_BYTE *)(a2 + v4 + 32);
  LODWORD(v4) = *(_DWORD *)(a2 + v4 + 36);
  *(_BYTE *)(v5 + 40) = *(_BYTE *)(v6 + 40);
  *(_DWORD *)(v5 + 36) = v4;
  v7 = *(_QWORD *)(v6 + 48);
  *(_BYTE *)(v5 + 56) = *(_BYTE *)(v6 + 56);
  *(_QWORD *)(v5 + 48) = v7;
  v8 = (int *)type metadata accessor for AnyCodable();
  v9 = v8[9];
  v10 = (void *)(v5 + v9);
  v11 = (const void *)(v6 + v9);
  v12 = sub_1CFB00F54();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)(v5 + v8[10]) = *(_OWORD *)(v6 + v8[10]);
  *(_QWORD *)(v5 + v8[11]) = *(_QWORD *)(v6 + v8[11]);
  *(_QWORD *)(v5 + v8[12]) = *(_QWORD *)(v6 + v8[12]);
  *(_OWORD *)(v5 + v8[13]) = *(_OWORD *)(v6 + v8[13]);
  return a1;
}

uint64_t assignWithTake for ISO18013IssuerSignedItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1CF923A24(v7, v8);
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(a2 + v10 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(a2 + v10 + 24);
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(a2 + v10 + 32);
  *(_DWORD *)(v11 + 36) = *(_DWORD *)(a2 + v10 + 36);
  *(_BYTE *)(v11 + 40) = *(_BYTE *)(a2 + v10 + 40);
  *(_BYTE *)(v11 + 56) = *(_BYTE *)(a2 + v10 + 56);
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(a2 + v10 + 48);
  v13 = (int *)type metadata accessor for AnyCodable();
  v14 = v13[9];
  v15 = (void *)(v11 + v14);
  v16 = (void *)(v12 + v14);
  v17 = sub_1CFB00F54();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904838);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[10];
  v24 = (_QWORD *)(v11 + v23);
  v25 = (uint64_t *)(v12 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + v13[11]) = *(_QWORD *)(v12 + v13[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + v13[12]) = *(_QWORD *)(v12 + v13[12]);
  swift_bridgeObjectRelease();
  v28 = v13[13];
  v29 = (uint64_t *)(v11 + v28);
  v30 = (uint64_t *)(v12 + v28);
  v31 = *(_QWORD *)(v11 + v28 + 8);
  if (v31 >> 60 != 15)
  {
    v32 = v30[1];
    if (v32 >> 60 != 15)
    {
      v33 = *v29;
      *v29 = *v30;
      v29[1] = v32;
      sub_1CF923A24(v33, v31);
      return a1;
    }
    sub_1CF930DB8((uint64_t)v29);
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013IssuerSignedItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA9A688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AnyCodable();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013IssuerSignedItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFA9A710(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AnyCodable();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1CFA9A784()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AnyCodable();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013IssuerSignedItem.CodingKeys()
{
  return &type metadata for ISO18013IssuerSignedItem.CodingKeys;
}

uint64_t _s13CoreIDVShared24ISO18013IssuerSignedItemV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFA9A870 + 4 * byte_1CFB1D08E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFA9A8A4 + 4 * byte_1CFB1D089[v4]))();
}

uint64_t sub_1CFA9A8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA9A8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFA9A8B4);
  return result;
}

uint64_t sub_1CFA9A8C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFA9A8C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFA9A8CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFA9A8D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013IssuerSignedItem.ACWGCodingKeys()
{
  return &type metadata for ISO18013IssuerSignedItem.ACWGCodingKeys;
}

unint64_t sub_1CFA9A8F4()
{
  unint64_t result;

  result = qword_1EFBC4888;
  if (!qword_1EFBC4888)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D234, &type metadata for ISO18013IssuerSignedItem.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4888);
  }
  return result;
}

unint64_t sub_1CFA9A93C()
{
  unint64_t result;

  result = qword_1EFBC4890;
  if (!qword_1EFBC4890)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D324, &type metadata for ISO18013IssuerSignedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4890);
  }
  return result;
}

unint64_t sub_1CFA9A984()
{
  unint64_t result;

  result = qword_1EFBC4898;
  if (!qword_1EFBC4898)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D25C, &type metadata for ISO18013IssuerSignedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4898);
  }
  return result;
}

unint64_t sub_1CFA9A9CC()
{
  unint64_t result;

  result = qword_1EFBC48A0;
  if (!qword_1EFBC48A0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D284, &type metadata for ISO18013IssuerSignedItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC48A0);
  }
  return result;
}

unint64_t sub_1CFA9AA14()
{
  unint64_t result;

  result = qword_1EFBC48A8;
  if (!qword_1EFBC48A8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D16C, &type metadata for ISO18013IssuerSignedItem.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC48A8);
  }
  return result;
}

unint64_t sub_1CFA9AA5C()
{
  unint64_t result;

  result = qword_1EFBC48B0;
  if (!qword_1EFBC48B0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1D194, &type metadata for ISO18013IssuerSignedItem.ACWGCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC48B0);
  }
  return result;
}

uint64_t sub_1CFA9AAA0()
{
  unint64_t v0;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1CFA9AAEC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA9AB1C + 4 * byte_1CFB1D3F0[a1]))(0x726564616568, 0xE600000000000000);
}

uint64_t sub_1CFA9AB1C()
{
  return 0x65746365746F7270;
}

uint64_t sub_1CFA9AB38()
{
  return 0x64616F6C796170;
}

uint64_t sub_1CFA9AB50()
{
  return 0x727574616E676973;
}

uint64_t sub_1CFA9AB70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA9ABA0 + 4 * byte_1CFB1D3F4[a1]))(0x726564616568, 0xE600000000000000);
}

uint64_t sub_1CFA9ABA0()
{
  return 0x65746365746F7270;
}

uint64_t sub_1CFA9ABBC()
{
  return 0x64616F6C796170;
}

uint64_t sub_1CFA9ABD4()
{
  return 0x727574616E676973;
}

uint64_t sub_1CFA9ABF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DC10, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9AC48(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DC10, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9AC94()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DC10);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9ACE4()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DC10);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9AD34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CF93B5A8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CFA9AAA0, a3);
}

uint64_t sub_1CFA9AD40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CF93B5F0(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1CFA9AAEC, a2);
}

uint64_t sub_1CFA9AD4C()
{
  unsigned __int8 *v0;

  return sub_1CFA9AB70(*v0);
}

uint64_t sub_1CFA9AD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1CFA9AAE8(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_1CFA9AD8C(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DCB0, a1);
  return sub_1CFB02B74();
}

uint64_t sub_1CFA9ADC0(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DCB0, a1);
  return sub_1CFB02B80();
}

uint64_t JWSSignedJSON.JWSType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1CFA9B04C(a1);
}

uint64_t JWSSignedJSON.JWSType.rawValue.getter()
{
  return 0x4F534A2B45534F4ALL;
}

uint64_t sub_1CFA9AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9AE70(uint64_t a1)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9AEBC()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9AF0C()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9AF5C@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSType.init(rawValue:)(a1);
}

void sub_1CFA9AF68(_QWORD *a1@<X8>)
{
  *a1 = 0x4F534A2B45534F4ALL;
  a1[1] = 0xE90000000000004ELL;
}

uint64_t sub_1CFA9AF88()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_1CFB01C5C();
}

uint64_t sub_1CFA9AFEC()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_1CFB01C14();
}

uint64_t JWSSignedJSON.JWSContentType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_1CFA9B04C(a1);
}

uint64_t sub_1CFA9B04C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t JWSSignedJSON.JWSContentType.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1CFA9B0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9B10C(uint64_t a1)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9B158()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9B1A8()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9B1F8@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSContentType.init(rawValue:)(a1);
}

void sub_1CFA9B204(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x80000001CFB23A80;
}

uint64_t sub_1CFA9B224()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_1CFB01C5C();
}

uint64_t sub_1CFA9B288()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_1CFB01C14();
}

uint64_t JWSSignedJSON.JWSCritical.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t JWSSignedJSON.JWSCritical.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461657263;
  if (*v0 != 1)
    v1 = 1953259891;
  if (*v0)
    return v1;
  else
    return 0x65636E6F6ELL;
}

uint64_t sub_1CFA9B384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9B3D8(uint64_t a1)
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9B424()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9B474()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9B4C4@<X0>(char *a1@<X8>)
{
  return JWSSignedJSON.JWSCritical.init(rawValue:)(a1);
}

uint64_t sub_1CFA9B4D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JWSSignedJSON.JWSCritical.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1CFA9B4F4()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_1CFB01C5C();
}

uint64_t sub_1CFA9B558()
{
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_1CFB01C14();
}

uint64_t sub_1CFA9B5AC()
{
  unint64_t v0;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1CFA9B5F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA9B624 + 4 * byte_1CFB1D3F8[a1]))(6777953, 0xE300000000000000);
}

uint64_t sub_1CFA9B624()
{
  return 6580587;
}

uint64_t sub_1CFA9B630()
{
  return 7371124;
}

uint64_t sub_1CFA9B63C()
{
  return 7959651;
}

uint64_t sub_1CFA9B648()
{
  return 1953067619;
}

uint64_t sub_1CFA9B658()
{
  return 0x65636E6F6ELL;
}

uint64_t sub_1CFA9B66C()
{
  return 0x64657461657263;
}

uint64_t sub_1CFA9B684()
{
  return 1953259891;
}

uint64_t sub_1CFA9B694(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFA9B6C0 + 4 * byte_1CFB1D400[a1]))(6777953, 0xE300000000000000);
}

uint64_t sub_1CFA9B6C0()
{
  return 6580587;
}

uint64_t sub_1CFA9B6CC()
{
  return 7371124;
}

uint64_t sub_1CFA9B6D8()
{
  return 7959651;
}

uint64_t sub_1CFA9B6E4()
{
  return 1953067619;
}

uint64_t sub_1CFA9B6F4()
{
  return 0x65636E6F6ELL;
}

uint64_t sub_1CFA9B708()
{
  return 0x64657461657263;
}

uint64_t sub_1CFA9B720()
{
  return 1953259891;
}

uint64_t sub_1CFA9B730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DA30, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9B784(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DA30, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9B7D0()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DA30);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9B820()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DA30);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9B870@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CF93B5A8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CFA9B5AC, a3);
}

uint64_t sub_1CFA9B87C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CF93B5F0(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1CFA9B5F8, a2);
}

uint64_t sub_1CFA9B888()
{
  unsigned __int8 *v0;

  return sub_1CFA9B694(*v0);
}

uint64_t sub_1CFA9B898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_1CFA9B5F4(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_1CFA9B8C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFAA1660();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA9B8F8(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DD50, a1);
  return sub_1CFB02B74();
}

uint64_t sub_1CFA9B92C(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DD50, a1);
  return sub_1CFB02B80();
}

void sub_1CFA9B960()
{
  char v0;

  swift_bridgeObjectRetain();
  JWSSignedJSON.JWSCritical.init(rawValue:)(&v0);
  __asm { BR              X10 }
}

uint64_t sub_1CFA9B9CC()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v4 = a2[2];
  v5 = a2[4];
  v35 = a2[3];
  v36 = v4;
  v34 = v5;
  v6 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(255, v4, v35, v5);
  MEMORY[0x1D17DA600](&unk_1CFB1DD50, v6);
  v7 = sub_1CFB027D8();
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)v30 - v15;
  v17 = *v2;
  v18 = *((_QWORD *)v2 + 1);
  v32 = *((_QWORD *)v2 + 2);
  v33 = v18;
  v19 = *((_QWORD *)v2 + 3);
  v20 = *((_QWORD *)v2 + 4);
  v30[6] = *((_QWORD *)v2 + 5);
  v31 = v19;
  v21 = *((_QWORD *)v2 + 6);
  v30[4] = *((_QWORD *)v2 + 7);
  v30[5] = v20;
  v30[2] = *((_QWORD *)v2 + 8);
  v30[3] = v21;
  v30[1] = *((_QWORD *)v2 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B5C();
  LOBYTE(v39) = v17;
  v40 = 0;
  sub_1CFA9BD48();
  v22 = v38;
  sub_1CFB027CC();
  if (v22)
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v16, v7);
  v25 = v34;
  v24 = v35;
  v27 = v36;
  v26 = v37;
  LOBYTE(v39) = 1;
  sub_1CFB02754();
  LOBYTE(v39) = 2;
  v28 = type metadata accessor for JWSSignedJSON.JWSType(0, v27, v24, v25);
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, v28);
  sub_1CFB027CC();
  LOBYTE(v39) = 3;
  v29 = type metadata accessor for JWSSignedJSON.JWSContentType(0, v27, v24, v25);
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, v29);
  sub_1CFB027CC();
  v39 = v31;
  v40 = 4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF9C18F8(&qword_1ED903950, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1CFB02784();
  LOBYTE(v39) = 5;
  sub_1CFB02754();
  LOBYTE(v39) = 6;
  sub_1CFB02754();
  LOBYTE(v39) = 7;
  sub_1CFB02754();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v7);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys);
}

unint64_t sub_1CFA9BD48()
{
  unint64_t result;

  result = qword_1EFBC48B8;
  if (!qword_1EFBC48B8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSAlgorithm, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EFBC48B8);
  }
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSType);
}

uint64_t type metadata accessor for JWSSignedJSON.JWSContentType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSContentType);
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;

  v49 = a5;
  v50 = a4;
  v8 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17DA600](&unk_1CFB1DD50, v8);
  v51 = sub_1CFB0273C();
  v9 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v48 - v17;
  v19 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v52 = v18;
  v20 = v53;
  sub_1CFB02B2C();
  if (!v20)
  {
    v21 = a2;
    v22 = a3;
    v23 = v50;
    v24 = v9;
    v56 = 0;
    sub_1CFA9C240();
    sub_1CFB02724();
    v25 = v55;
    LOBYTE(v55) = 1;
    v26 = sub_1CFB026AC();
    v29 = v28;
    v48 = v26;
    LODWORD(v53) = v25;
    v30 = v21;
    v31 = type metadata accessor for JWSSignedJSON.JWSType(0, v21, v22, v23);
    LOBYTE(v55) = 2;
    swift_bridgeObjectRetain();
    MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, v31);
    sub_1CFB02724();
    v32 = type metadata accessor for JWSSignedJSON.JWSContentType(0, v30, v22, v23);
    LOBYTE(v55) = 3;
    MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, v32);
    sub_1CFB02724();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
    v56 = 4;
    sub_1CF9C18F8(&qword_1ED903150, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1CFB026DC();
    LOBYTE(v31) = v53;
    v33 = v55;
    LOBYTE(v55) = 5;
    swift_bridgeObjectRetain();
    v34 = sub_1CFB026AC();
    v36 = v35;
    LOBYTE(v55) = 6;
    swift_bridgeObjectRetain();
    v37 = sub_1CFB026AC();
    v39 = v38;
    v50 = v37;
    LOBYTE(v55) = 7;
    swift_bridgeObjectRetain();
    v40 = sub_1CFB026AC();
    v42 = v41;
    v43 = *(void (**)(char *, uint64_t))(v24 + 8);
    v44 = v40;
    v43(v52, v51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v45 = v48;
    v46 = v49;
    *v49 = v31;
    v46[1] = v45;
    v46[2] = v29;
    v46[3] = v33;
    v46[4] = v34;
    v47 = v50;
    v46[5] = v36;
    v46[6] = v47;
    v46[7] = v39;
    v46[8] = v44;
    v46[9] = v42;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CFA9C240()
{
  unint64_t result;

  result = qword_1ED903190;
  if (!qword_1ED903190)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSAlgorithm, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED903190);
  }
  return result;
}

uint64_t sub_1CFA9C284@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1CFA9C2A4(_QWORD *a1, _QWORD *a2)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(a1, a2);
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.modify())()
{
  return nullsub_1;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.uam.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.uam.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*JWSSignedJSON.DIPJWSUnprotectedHeader.uam.modify())()
{
  return nullsub_1;
}

uint64_t sub_1CFA9C368()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1CFA9C3B8(char a1)
{
  if ((a1 & 1) != 0)
    return 7168373;
  else
    return 6501752;
}

uint64_t sub_1CFA9C3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DB20, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFA9C42C(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DB20, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFA9C478()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DB20);
  return sub_1CFB01C50();
}

uint64_t sub_1CFA9C4C8()
{
  MEMORY[0x1D17DA600](&unk_1CFB1DB20);
  return sub_1CFB01C44();
}

uint64_t sub_1CFA9C518@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1CF93B5A8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CFA9C368, a3);
}

uint64_t sub_1CFA9C524@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CFA9C3B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CFA9C558()
{
  char *v0;

  return sub_1CFA9C3B8(*v0);
}

uint64_t sub_1CFA9C56C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA9C368();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA9C59C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFA125D8();
  *a1 = result;
  return result;
}

uint64_t sub_1CFA9C5CC(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DD00, a1);
  return sub_1CFB02B74();
}

uint64_t sub_1CFA9C600(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1DD00, a1);
  return sub_1CFB02B80();
}

void JWSSignedJSON.DIPJWSUnprotectedHeader.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v4 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1D17DA600](&unk_1CFB1DD00, v4);
  v5 = sub_1CFB027D8();
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)v20 - v13;
  v16 = *v2;
  v15 = v2[1];
  v20[1] = v2[2];
  v20[2] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B5C();
  v25 = v16;
  v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  sub_1CF9C18F8(&qword_1ED903950, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v17 = v22;
  sub_1CFB02784();
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v5);
  v19 = v21;
  v23 = 1;
  sub_1CFB02754();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v5);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys);
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  uint64_t v28;

  v25 = a5;
  v7 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17DA600](&unk_1CFB1DD00, v7);
  v8 = sub_1CFB0273C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v25 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B2C();
  if (!v5)
  {
    v19 = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
    v27 = 0;
    sub_1CF9C18F8(&qword_1ED903150, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1CFB026DC();
    v20 = v28;
    v26 = 1;
    swift_bridgeObjectRetain();
    v22 = sub_1CFB026AC();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v19 = v20;
    v19[1] = v22;
    v19[2] = v24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFA9C9EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1CFA9CA0C(_QWORD *a1, uint64_t *a2)
{
  return JWSSignedJSON.DIPJWSUnprotectedHeader.encode(to:)(a1, a2);
}

uint64_t JWSSignedJSON.unprotectedHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 JWSSignedJSON.unprotectedHeader.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v4;
  v1[3] = v4;
  v1[4].n128_u64[0] = v2;
  return result;
}

uint64_t (*JWSSignedJSON.unprotectedHeader.modify())()
{
  return nullsub_1;
}

uint64_t JWSSignedJSON.protectedHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 JWSSignedJSON.protectedHeader.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *a1;
  v7 = *(_OWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a1 + 8);
  v5 = *(__n128 *)(a1 + 56);
  v6 = *(_OWORD *)(a1 + 40);
  v3 = *((_QWORD *)a1 + 9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 72) = v2;
  *(_OWORD *)(v1 + 80) = v8;
  *(_OWORD *)(v1 + 96) = v7;
  result = v5;
  *(_OWORD *)(v1 + 112) = v6;
  *(__n128 *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = v3;
  return result;
}

uint64_t (*JWSSignedJSON.protectedHeader.modify())()
{
  return nullsub_1;
}

uint64_t JWSSignedJSON.payload.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 60));
}

uint64_t JWSSignedJSON.init(payload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = type metadata accessor for JWSSignedJSON(0, a2, a3, a4);
  *(_QWORD *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = 0;
  *(_QWORD *)(a5 + 48) = 0;
  *(_BYTE *)(a5 + 72) = 0;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  v9 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a5 + *(int *)(v8 + 60), a1, a2);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0xE000000000000000;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0xE000000000000000;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, a2);
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON);
}

__n128 JWSSignedJSON.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __n128 result;
  __int128 v15;

  v8 = type metadata accessor for JWSSignedJSON(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5 + *(int *)(v8 + 60), a1 + *(int *)(v8 + 60), a2);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v9;
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a5 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a5 + 40) = v10;
  v11 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a5 + 48) = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(a5 + 64) = v11;
  v12 = *(_QWORD *)(a1 + 144);
  *(_BYTE *)(a5 + 72) = *(_BYTE *)(a1 + 72);
  v13 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a5 + 96) = v13;
  result = *(__n128 *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  *(__n128 *)(a5 + 112) = result;
  *(_OWORD *)(a5 + 128) = v15;
  *(_QWORD *)(a5 + 144) = v12;
  return result;
}

uint64_t JWSSignedJSON.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (**v46)(_QWORD, _QWORD, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (**v146)(_QWORD, _QWORD, uint64_t);
  uint64_t v147;
  _QWORD v148[2];
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  _QWORD *v173;
  void (**v174)(_QWORD, _QWORD, uint64_t);
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;

  v160 = a5;
  v172 = sub_1CFB0240C();
  v170 = *(_QWORD *)(v172 - 8);
  v16 = MEMORY[0x1E0C80A78](v172, v9, v10, v11, v12, v13, v14, v15);
  v169 = (char *)v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21, v22, v23, v24);
  v171 = (char *)v148 - v26;
  v162 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v25, v27, v28, v29, v30, v31, v32, v33);
  v161 = (char *)v148 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for JWSSignedJSON.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17DA600](&unk_1CFB1DCB0, v35);
  v168 = sub_1CFB0273C();
  v36 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168, v37, v38, v39, v40, v41, v42, v43);
  v45 = (char *)v148 - v44;
  v165 = a3;
  v166 = a4;
  v163 = type metadata accessor for JWSSignedJSON(0, a2, a3, a4);
  v46 = *(void (***)(_QWORD, _QWORD, uint64_t))(v163 - 8);
  MEMORY[0x1E0C80A78](v163, v47, v48, v49, v50, v51, v52, v53);
  v190 = (char *)v148 - v54;
  v55 = a1[3];
  v173 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v55);
  v167 = v45;
  v56 = v174;
  sub_1CFB02B2C();
  v164 = a2;
  if (v56)
  {
    *(_QWORD *)&v175 = v56;
    v60 = v56;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    v61 = v171;
    v62 = v172;
    if (swift_dynamicCast())
    {

      v63 = v170;
      v64 = v169;
      (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v169, v61, v62);
      v65 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v66, v64, v62);
      LOWORD(v188) = 117;
      v67 = v62;
      v68 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v65, 0xD000000000000011, 0x80000001CFB30820, (__int16 *)&v188, 0, v68, 0xD000000000000057, 0x80000001CFB307C0, v69, 0x6F72662874696E69, 0xEB00000000293A6DLL, 126);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v67);
      v70 = (void *)v175;
    }
    else
    {

      LOWORD(v175) = 0;
      v71 = v56;
      v72 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v56, 0xD00000000000001BLL, 0x80000001CFB307A0, (__int16 *)&v175, 0, v72, 0xD000000000000057, 0x80000001CFB307C0, v73, 0x6F72662874696E69, 0xEB00000000293A6DLL, 129);
      swift_willThrow();
      v70 = v56;
    }

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v173);
  }
  v57 = v36;
  v174 = v46;
  v58 = v165;
  v59 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(0, a2, v165, v166);
  LOBYTE(v188) = 0;
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSUnprotectedHeader, v59);
  sub_1CFB02724();
  v75 = v176;
  v76 = v190;
  *((_OWORD *)v190 + 3) = v175;
  *((_QWORD *)v76 + 8) = v75;
  LOBYTE(v175) = 1;
  v77 = sub_1CFB026E8();
  v79 = v78;
  *(_QWORD *)v76 = v77;
  *((_QWORD *)v76 + 1) = v78;
  LOBYTE(v175) = 2;
  v80 = v77;
  swift_bridgeObjectRetain();
  v81 = sub_1CFB026E8();
  v159 = v80;
  *((_QWORD *)v76 + 2) = v81;
  *((_QWORD *)v76 + 3) = v82;
  LOBYTE(v175) = 3;
  v83 = v82;
  swift_bridgeObjectRetain();
  v84 = sub_1CFB026E8();
  v86 = v85;
  v154 = v81;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v167, v168);
  *((_QWORD *)v76 + 4) = v84;
  *((_QWORD *)v76 + 5) = v86;
  v188 = v159;
  v189 = v79;
  v172 = v79;
  v186 = 45;
  v187 = 0xE100000000000000;
  v184 = 43;
  v185 = 0xE100000000000000;
  v87 = sub_1CF9B9CD8();
  v188 = sub_1CFB02214();
  v189 = v88;
  v186 = 95;
  v187 = 0xE100000000000000;
  v184 = 47;
  v185 = 0xE100000000000000;
  v153 = v87;
  v89 = sub_1CFB02214();
  v91 = v90;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v175 = v89;
  *((_QWORD *)&v175 + 1) = v91;
  swift_bridgeObjectRetain();
  v92 = sub_1CFB01AF4();
  swift_bridgeObjectRelease();
  v93 = v92 & 3;
  if (v92 <= 0)
    v93 = -(-v92 & 3);
  if (v93 >= 1)
  {
    MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v93);
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
  }
  v94 = sub_1CFB00E28();
  v96 = v95;
  sub_1CF92F5C8(v94, v95);
  swift_bridgeObjectRelease();
  if (v96 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v175 = 0;
    *((_QWORD *)&v175 + 1) = 0xE000000000000000;
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    v98 = *((_QWORD *)&v175 + 1);
    v97 = v175;
    LOWORD(v175) = 117;
    v99 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v97, v98, (__int16 *)&v175, 0, v99, 0xD000000000000057, 0x80000001CFB307C0, v100, 0x6F72662874696E69, 0xEB00000000293A6DLL, 134);
    swift_willThrow();
    v103 = 0;
    v104 = 0;
  }
  else
  {
    v152 = v83;
    sub_1CF931AB0(v94, v96);
    swift_bridgeObjectRelease();
    v101 = sub_1CFB00B58();
    swift_allocObject();
    sub_1CFB00B4C();
    v102 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader(0, v164, v58, v166);
    MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSProtectedHeader, v102);
    sub_1CFB00B40();
    v168 = v102;
    v148[1] = v101;
    v150 = v94;
    v151 = v96;
    v149 = 0;
    swift_release();
    v107 = *((_QWORD *)&v175 + 1);
    v106 = v176;
    v109 = v177;
    v108 = v178;
    v110 = v179;
    v111 = v180;
    v112 = v181;
    v113 = v182;
    v114 = v183;
    LODWORD(v167) = v175;
    v76[72] = v175;
    v166 = v107;
    *((_QWORD *)v76 + 10) = v107;
    *((_QWORD *)v76 + 11) = v106;
    v172 = v106;
    *((_QWORD *)v76 + 12) = v109;
    *((_QWORD *)v76 + 13) = v108;
    v159 = v108;
    v170 = v110;
    *((_QWORD *)v76 + 14) = v110;
    *((_QWORD *)v76 + 15) = v111;
    v158 = v111;
    v171 = v112;
    *((_QWORD *)v76 + 16) = v112;
    *((_QWORD *)v76 + 17) = v113;
    v157 = v113;
    v169 = v114;
    *((_QWORD *)v76 + 18) = v114;
    if (v109 && (v115 = *(_QWORD *)(v109 + 16)) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v156 = v109;
      v116 = v109 + 40;
      v118 = v171;
      v117 = v172;
      v119 = v109;
      v120 = v170;
      v121 = v169;
      while (1)
      {
        v122 = *(_QWORD *)(v116 - 8);
        LOBYTE(v175) = (_BYTE)v167;
        *((_QWORD *)&v175 + 1) = v166;
        v176 = v117;
        v177 = v119;
        v178 = v159;
        v179 = v120;
        v180 = v158;
        v181 = v118;
        v182 = v157;
        v183 = v121;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155 = v122;
        sub_1CFA9B960();
        v124 = v123;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v124)
          break;
        v116 += 16;
        swift_bridgeObjectRelease();
        if (!--v115)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v76 = v190;
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_QWORD *)&v175 = 0;
      *((_QWORD *)&v175 + 1) = 0xE000000000000000;
      sub_1CFB02388();
      sub_1CFB01B30();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      v142 = *((_QWORD *)&v175 + 1);
      v141 = v175;
      LOWORD(v175) = 117;
      v143 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v141, v142, (__int16 *)&v175, 0, v143, 0xD000000000000057, 0x80000001CFB307C0, v144, 0x6F72662874696E69, 0xEB00000000293A6DLL, 142);
      swift_willThrow();
      sub_1CF931AB0(v150, v151);
      v104 = 0;
      v103 = 1;
      v76 = v190;
    }
    else
    {
LABEL_28:
      v188 = v154;
      v189 = v152;
      v186 = 45;
      v187 = 0xE100000000000000;
      v184 = 43;
      v185 = 0xE100000000000000;
      v188 = sub_1CFB02214();
      v189 = v125;
      v186 = 95;
      v187 = 0xE100000000000000;
      v184 = 47;
      v185 = 0xE100000000000000;
      v126 = sub_1CFB02214();
      v128 = v127;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v175 = v126;
      *((_QWORD *)&v175 + 1) = v128;
      swift_bridgeObjectRetain();
      v129 = sub_1CFB01AF4();
      swift_bridgeObjectRelease();
      v130 = v129 & 3;
      if (v129 <= 0)
        v130 = -(-v129 & 3);
      if (v130 >= 1)
      {
        MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v130);
        sub_1CFB01B30();
        swift_bridgeObjectRelease();
      }
      v131 = sub_1CFB00E28();
      v133 = v132;
      sub_1CF92F5C8(v131, v132);
      swift_bridgeObjectRelease();
      v134 = v161;
      if (v133 >> 60 != 15)
      {
        sub_1CF931AB0(v131, v133);
        swift_bridgeObjectRelease();
        swift_allocObject();
        sub_1CFB00B4C();
        v139 = v164;
        v140 = v149;
        sub_1CFB00B40();
        if (v140)
        {
          sub_1CF931AB0(v150, v151);
          sub_1CF931AB0(v131, v133);
          swift_release();
          v104 = 0;
          v103 = 1;
          v105 = (uint64_t)v173;
        }
        else
        {
          swift_release();
          (*(void (**)(char *, char *, uint64_t))(v162 + 32))(&v76[*(int *)(v163 + 60)], v134, v139);
          JWSSignedJSON.verify()();
          if (!v145)
          {
            sub_1CF931AB0(v131, v133);
            sub_1CF931AB0(v150, v151);
            v146 = v174;
            v147 = v163;
            ((void (**)(uint64_t, char *, uint64_t))v174)[2](v160, v76, v163);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v173);
            return ((uint64_t (*)(char *, uint64_t))v146[1])(v76, v147);
          }
          sub_1CF931AB0(v131, v133);
          sub_1CF931AB0(v150, v151);
          v103 = 1;
          v104 = 1;
          v105 = (uint64_t)v173;
        }
        goto LABEL_21;
      }
      *(_QWORD *)&v175 = 0;
      *((_QWORD *)&v175 + 1) = 0xE000000000000000;
      sub_1CFB02388();
      sub_1CFB01B30();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      v136 = *((_QWORD *)&v175 + 1);
      v135 = v175;
      LOWORD(v175) = 117;
      v137 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v135, v136, (__int16 *)&v175, 0, v137, 0xD000000000000057, 0x80000001CFB307C0, v138, 0x6F72662874696E69, 0xEB00000000293A6DLL, 149);
      swift_willThrow();
      sub_1CF931AB0(v150, v151);
      v104 = 0;
      v103 = 1;
    }
  }
  v105 = (uint64_t)v173;
LABEL_21:
  __swift_destroy_boxed_opaque_existential_1(v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v103)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v104 & 1) == 0)
      return result;
  }
  else if (!v104)
  {
    return result;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(&v76[*(int *)(v163 + 60)], v164);
}

uint64_t type metadata accessor for JWSSignedJSON.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.CodingKeys);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.verify()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  SecTrustRef v33;
  void *v34;
  __SecTrust *v35;
  SecKeyRef v36;
  SecKeyRef v37;
  unint64_t v38;
  SecKeyRef v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  __SecTrust *v62;
  unint64_t v63;
  uint64_t v64;
  __SecTrust *v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void *v77;
  id v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  void *v83;
  unsigned __int8 v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  __SecTrust *v108;

  v3 = v2;
  v4 = v1;
  v5 = v0;
  v6 = sub_1CFB01A70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v4 + 48);
  if (!v17 || !*(_QWORD *)(v17 + 16))
  {
    LOWORD(v106) = 104;
    v31 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001CFB30920, (__int16 *)&v106, 0, v31, 0xD000000000000057, 0x80000001CFB307C0, v32, 0x2928796669726576, 0xE800000000000000, 254);
    swift_willThrow();
    return;
  }
  v18 = sub_1CF9231EC(MEMORY[0x1E0DEE9D8]);
  sub_1CFAA1120(v5, v19, v20, v21, v22, v23, v24, v25, &v104);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    LOWORD(v106) = 0;
    v28 = v3;
    v29 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v3, 0xD000000000000022, 0x80000001CFB30950, (__int16 *)&v106, 0, v29, 0xD000000000000057, 0x80000001CFB307C0, v30, 0x2928796669726576, 0xE800000000000000, 262);
    swift_willThrow();

    return;
  }
  v26 = v104;
  v27 = decodeCertificateChain(fromBase64DER:)(v17);
  v106 = v18;
  v107 = 0;
  LOBYTE(v102) = v26;
  v33 = DIPOIDVerifier.verifyChain(_:forUsage:)((Swift::OpaquePointer)v27, (CoreIDVShared::DIPCertUsage)&v102);
  if (v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v34;
    goto LABEL_6;
  }
  v35 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = SecTrustCopyKey(v35);
  if (!v36)
  {
    LOWORD(v106) = 0;
    v57 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001CFB30980, (__int16 *)&v106, 0, v57, 0xD000000000000057, 0x80000001CFB307C0, v58, 0x2928796669726576, 0xE800000000000000, 267);
    swift_willThrow();

    return;
  }
  v37 = v36;
  v108 = v35;
  v38 = *(_QWORD *)(v4 + 8);
  v106 = *(_QWORD *)v4;
  v107 = v38;
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  v39 = v37;
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01A58();
  v40 = sub_1CFB01A34();
  v42 = v41;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  if (v42 >> 60 == 15)
  {
LABEL_18:
    LOWORD(v106) = 0;
    v55 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000044, 0x80000001CFB309C0, (__int16 *)&v106, 0, v55, 0xD000000000000057, 0x80000001CFB307C0, v56, 0x2928796669726576, 0xE800000000000000, 272);
    swift_willThrow();

LABEL_19:
    return;
  }
  v43 = *(_QWORD *)(v4 + 40);
  v104 = *(_QWORD *)(v4 + 32);
  v105 = v43;
  v102 = 45;
  v103 = 0xE100000000000000;
  v100 = 43;
  v101 = 0xE100000000000000;
  v44 = v40;
  v99 = v42;
  sub_1CF9239E0(v40, v42);
  sub_1CF9B9CD8();
  v104 = sub_1CFB02214();
  v105 = v45;
  v102 = 95;
  v103 = 0xE100000000000000;
  v100 = 47;
  v101 = 0xE100000000000000;
  v46 = sub_1CFB02214();
  v48 = v47;
  swift_bridgeObjectRelease();
  v106 = v46;
  v107 = v48;
  swift_bridgeObjectRetain();
  v49 = sub_1CFB01AF4();
  swift_bridgeObjectRelease();
  v50 = v49 & 3;
  if (v49 <= 0)
    v50 = -(-v49 & 3);
  if (v50 >= 1)
  {
    MEMORY[0x1D17D8908](61, 0xE100000000000000, 4 - v50);
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
  }
  v51 = sub_1CFB00E28();
  v53 = v52;
  sub_1CF92F5C8(v51, v52);
  swift_bridgeObjectRelease();
  if (v53 >> 60 == 15)
  {
    v54 = v99;
    sub_1CF931AB0(v44, v99);
    sub_1CF931AB0(v44, v54);
    v39 = v37;
    goto LABEL_18;
  }
  sub_1CF931AB0(v51, v53);
  if (!*(_BYTE *)(v4 + 72))
  {
    sub_1CF92F5C8(v51, v53);
    sub_1CF931AB0(v44, v99);
    v65 = v108;
LABEL_28:
    v66 = (void *)sub_1CFB00E58();
    sub_1CF931AB0(v51, v53);
    v67 = ECDSASHA256RawToDER(v66);

    if (!v67)
    {
      LOWORD(v106) = 0;
      v85 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003FLL, 0x80000001CFB30A60, (__int16 *)&v106, 0, v85, 0xD000000000000057, 0x80000001CFB307C0, v86, 0x2928796669726576, 0xE800000000000000, 288);
      swift_willThrow();
      sub_1CF923A24(v44, v99);
      sub_1CF931AB0(v51, v53);

      return;
    }
    v68 = sub_1CFB00E7C();
    v98 = v69;

    sub_1CF931AB0(v51, v53);
    v70 = v99;
    goto LABEL_33;
  }
  if (*(_BYTE *)(v4 + 72) == 1)
  {
    v59 = v99;
    if (!*(_QWORD *)(v4 + 64))
    {
LABEL_26:
      sub_1CF931AB0(v44, v59);
      v62 = v108;
      LOWORD(v106) = 0;
      v63 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000036, 0x80000001CFB30AE0, (__int16 *)&v106, 0, v63, 0xD000000000000057, 0x80000001CFB307C0, v64, 0x2928796669726576, 0xE800000000000000, 278);
      swift_willThrow();
      sub_1CF931AB0(v51, v53);
      sub_1CF931AB0(v44, v59);

      return;
    }
    sub_1CF9239E0(v51, v53);
    v60 = sub_1CFB00E28();
    if (v61 >> 60 == 15)
    {
      sub_1CF931AB0(v51, v53);
      goto LABEL_26;
    }
    v106 = v60;
    v107 = v61;
    v89 = (void *)sub_1CFB00E58();
    sub_1CF931AB0(v44, v59);
    v90 = DigestSha256(v89);

    if (!v90)
    {
      sub_1CF931AB0(v51, v53);
      LOWORD(v104) = 0;
      v96 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000041, 0x80000001CFB30A10, (__int16 *)&v104, 0, v96, 0xD000000000000057, 0x80000001CFB307C0, v97, 0x2928796669726576, 0xE800000000000000, 281);
      swift_willThrow();
      sub_1CF931AB0(v44, v59);
      sub_1CF931AB0(v51, v53);

      sub_1CF923A24(v106, v107);
      return;
    }
    v91 = sub_1CFB00E7C();
    v93 = v92;

    sub_1CFB00E94();
    sub_1CF931AB0(v44, v59);
    sub_1CF923A24(v91, v93);
    v44 = v106;
    v99 = v107;
    v65 = v108;
    goto LABEL_28;
  }
  sub_1CF9239E0(v51, v53);
  v71 = v99;
  v72 = (void *)sub_1CFB00E58();
  sub_1CF931AB0(v44, v71);
  v73 = DigestSha256(v72);

  if (!v73)
  {
    sub_1CF931AB0(v51, v53);
    LOWORD(v106) = 0;
    v87 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000041, 0x80000001CFB30A10, (__int16 *)&v106, 0, v87, 0xD000000000000057, 0x80000001CFB307C0, v88, 0x2928796669726576, 0xE800000000000000, 293);
    swift_willThrow();
    sub_1CF931AB0(v51, v53);
    sub_1CF931AB0(v44, v71);
LABEL_45:

    goto LABEL_19;
  }
  v74 = sub_1CFB00E7C();
  v76 = v75;

  sub_1CF931AB0(v44, v71);
  sub_1CF9239E0(v74, v76);
  v77 = (void *)sub_1CFB00E58();
  sub_1CF931AB0(v51, v53);
  v78 = ECDSASHA256RawToDER(v77);

  if (!v78)
  {
    LOWORD(v106) = 0;
    v94 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003FLL, 0x80000001CFB30A60, (__int16 *)&v106, 0, v94, 0xD000000000000057, 0x80000001CFB307C0, v95, 0x2928796669726576, 0xE800000000000000, 297);
    swift_willThrow();
    sub_1CF923A24(v74, v76);
    sub_1CF931AB0(v51, v53);
    sub_1CF923A24(v74, v76);
    goto LABEL_45;
  }
  v79 = v76;
  v68 = sub_1CFB00E7C();
  v98 = v80;

  sub_1CF931AB0(v51, v53);
  sub_1CF923A24(v74, v79);
  v44 = v74;
  v70 = v79;
  v65 = v108;
LABEL_33:
  v81 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1)
  {
    v82 = v68;
    v83 = (void *)sub_1CFB01A04();
    v84 = objc_msgSend(v81, sel_BOOLForKey_, v83);

    v68 = v82;
    if ((v84 & 1) != 0)
    {
      sub_1CF923A24(v82, v98);
      sub_1CF923A24(v44, v70);

      return;
    }
  }
  else
  {

  }
  sub_1CFAF0580(v68, v98, v44, v70, v37, (const __CFString *)*MEMORY[0x1E0CD6DF8]);
  sub_1CF923A24(v68, v98);

  sub_1CF923A24(v44, v70);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.setCertificateChain(_:)(Swift::OpaquePointer a1)
{
  Swift::OpaquePointer *v1;
  unint64_t v3;
  uint64_t v4;
  __int16 v5;

  if (*((_QWORD *)a1._rawValue + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v1[6]._rawValue = a1._rawValue;
  }
  else
  {
    v5 = 105;
    v3 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001CFB30B20, &v5, 0, v3, 0xD000000000000057, 0x80000001CFB307C0, v4, 0xD000000000000017, 0x80000001CFB30B50, 160);
    swift_willThrow();
  }
}

uint64_t JWSSignedJSON.setKid(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;

  v3 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if (!v2)
  {
    v8 = result;
    v9 = v7;
    v10 = (void *)sub_1CFB00E58();
    sub_1CF923A24(v8, v9);
    v11 = DigestSha256(v10);

    if (v11)
    {
      v23 = sub_1CFB00E7C();
      v13 = v12;

      sub_1CFB00E64();
      sub_1CF9B9CD8();
      sub_1CFB02214();
      swift_bridgeObjectRelease();
      v14 = sub_1CFB02214();
      v16 = v15;
      swift_bridgeObjectRelease();
      v22[0] = v14;
      v22[1] = v16;
      v17 = sub_1CFB02214();
      v19 = v18;
      swift_bridgeObjectRelease();
      sub_1CF923A24(v23, v13);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v3 + 80) = v17;
      *(_QWORD *)(v3 + 88) = v19;
    }
    else
    {
      LOWORD(v22[0]) = 0;
      v20 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000039, 0x80000001CFB30B70, (__int16 *)v22, 0, v20, 0xD000000000000057, 0x80000001CFB307C0, v21, 0x5F2864694B746573, 0xEA0000000000293ALL, 167);
      return swift_willThrow();
    }
  }
  return result;
}

Swift::Void __swiftcall JWSSignedJSON.setNonce(_:)(Swift::String a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  *(Swift::String *)(v1 + 104) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD **)(v1 + 96);
  if (!v2)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 96) = MEMORY[0x1E0DEE9D8];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CF955C18(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1CF955C18((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x65636E6F6ELL;
  v5[5] = 0xE500000000000000;
  *(_QWORD *)(v1 + 96) = v2;
}

Swift::Void __swiftcall JWSSignedJSON.setSalt(_:)(Swift::String a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  *(Swift::String *)(v1 + 136) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD **)(v1 + 96);
  if (!v2)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 96) = MEMORY[0x1E0DEE9D8];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CF955C18(0, v2[2] + 1, 1, v2);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1CF955C18((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 1953259891;
  v5[5] = 0xE400000000000000;
  *(_QWORD *)(v1 + 96) = v2;
}

uint64_t sub_1CFA9F3F8(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  NSObject *v103;
  int v104;
  _DWORD *v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  char *v109;
  _QWORD v110[2];
  int v111;
  NSObject *v112;
  uint64_t *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;

  v2 = v1;
  v137 = *MEMORY[0x1E0C80C00];
  v116 = sub_1CFB01A70();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116, v4, v5, v6, v7, v8, v9, v10);
  v114 = (char *)v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1CFB012CC();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119, v12, v13, v14, v15, v16, v17, v18);
  v117 = (char *)v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1CFB00B64();
  v20 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122, v21, v22, v23, v24, v25, v26, v27);
  v29 = (_QWORD *)((char *)v110 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_1CFB00F54();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v32, v33, v34, v35, v36, v37, v38);
  v40 = (char *)v110 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CFB00F48();
  v41 = UTCTimestamp(_:)();
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v40, v30);
  swift_bridgeObjectRelease();
  v2[15] = v41;
  v2[16] = v43;
  v44 = v2;
  v45 = (_QWORD *)v2[12];
  if (!v45)
  {
    v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v2[12] = MEMORY[0x1E0DEE9D8];
  }
  v46 = a1[2];
  v121 = a1[3];
  v47 = a1[4];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v120 = a1;
  v124 = v47;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v45 = sub_1CF955C18(0, v45[2] + 1, 1, v45);
  v50 = v45[2];
  v49 = v45[3];
  if (v50 >= v49 >> 1)
    v45 = sub_1CF955C18((_QWORD *)(v49 > 1), v50 + 1, 1, v45);
  v45[2] = v50 + 1;
  v51 = &v45[2 * v50];
  v51[4] = 0x64657461657263;
  v51[5] = 0xE700000000000000;
  v52 = v2;
  v2[12] = v45;
  sub_1CFB00B94();
  swift_allocObject();
  v53 = sub_1CFB00B88();
  *v29 = 0x7974696E69666E49;
  v29[1] = 0xE800000000000000;
  v29[2] = 0x74696E69666E492DLL;
  v29[3] = 0xE900000000000079;
  v29[4] = 5136718;
  v29[5] = 0xE300000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v29, *MEMORY[0x1E0CAE180], v122);
  sub_1CFB00B70();
  v54 = v2[10];
  v55 = v2[11];
  v56 = v44[18];
  LOBYTE(v130) = *((_BYTE *)v44 + 72);
  v131 = v54;
  v132 = v55;
  v57 = *((_OWORD *)v44 + 7);
  v133 = *((_OWORD *)v44 + 6);
  v134 = v57;
  v135 = *((_OWORD *)v44 + 8);
  v136 = v56;
  v122 = v46;
  v58 = v46;
  v59 = v53;
  v60 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader(0, v58, v121, v124);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSProtectedHeader, v60);
  v61 = v123;
  v62 = sub_1CFB00B7C();
  v64 = (uint64_t)v61;
  if (v61)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v130 = 0;
    v131 = 0xE000000000000000;
    sub_1CFB02388();
    sub_1CFB01B30();
    v125 = (uint64_t)v61;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    sub_1CFB0252C();
    v78 = v130;
    v79 = v131;
    LOWORD(v130) = 118;
    v80 = v61;
    v81 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v61, v78, v79, (__int16 *)&v130, 0, v81, 0xD000000000000057, 0x80000001CFB307C0, v82, 0x5365426F54746567, 0xEF292864656E6769, 209);
    swift_willThrow();

  }
  else
  {
    v65 = v62;
    v66 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v121 = v65;
    v130 = sub_1CFB00E64();
    v131 = v67;
    v125 = 43;
    v126 = 0xE100000000000000;
    v128 = 45;
    v129 = 0xE100000000000000;
    sub_1CF9B9CD8();
    v68 = sub_1CFB02214();
    v123 = (void *)v59;
    v70 = v69;
    swift_bridgeObjectRelease();
    v130 = v68;
    v131 = v70;
    v125 = 47;
    v126 = 0xE100000000000000;
    v128 = 95;
    v129 = 0xE100000000000000;
    v71 = sub_1CFB02214();
    v73 = v72;
    swift_bridgeObjectRelease();
    v130 = v71;
    v131 = v73;
    v125 = 61;
    v126 = 0xE100000000000000;
    v128 = 0;
    v129 = 0xE000000000000000;
    v74 = sub_1CFB02214();
    v76 = v75;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v52 = v74;
    v52[1] = v76;
    v77 = sub_1CFB00B7C();
    v85 = v84;
    v120 = (_QWORD *)v66;
    v122 = v77;
    v86 = sub_1CFB00E64();
    v124 = v85;
    v130 = v86;
    v131 = v87;
    v125 = 43;
    v126 = 0xE100000000000000;
    v128 = 45;
    v129 = 0xE100000000000000;
    v88 = sub_1CFB02214();
    v90 = v89;
    swift_bridgeObjectRelease();
    v130 = v88;
    v131 = v90;
    v125 = 47;
    v126 = 0xE100000000000000;
    v128 = 95;
    v129 = 0xE100000000000000;
    v91 = sub_1CFB02214();
    v93 = v92;
    swift_bridgeObjectRelease();
    v130 = v91;
    v131 = v93;
    v125 = 61;
    v126 = 0xE100000000000000;
    v128 = 0;
    v129 = 0xE000000000000000;
    v94 = sub_1CFB02214();
    v96 = v95;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52[2] = v94;
    v52[3] = v96;
    v113 = v52;
    if (qword_1ED9054E8 != -1)
      swift_once();
    v97 = v119;
    v98 = __swift_project_value_buffer(v119, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v99 = v118;
    v100 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v98, v97);
    v101 = v122;
    v102 = v124;
    sub_1CF9239E0(v122, v124);
    sub_1CF9239E0(v101, v102);
    v103 = sub_1CFB012B4();
    v104 = sub_1CFB01FC8();
    if (os_log_type_enabled(v103, (os_log_type_t)v104))
    {
      v112 = v103;
      v105 = (_DWORD *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v127 = v106;
      *v105 = 136315138;
      v111 = v104;
      v107 = (char *)&loc_1CFA9FD60 + dword_1CFAA02FC[v102 >> 62];
      v110[1] = v106;
      __asm { BR              X9 }
    }
    sub_1CF923A24(v101, v102);
    sub_1CF923A24(v101, v102);

    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v97);
    v108 = v113[1];
    v130 = *v113;
    v131 = v108;
    swift_bridgeObjectRetain();
    sub_1CFB01B30();
    swift_bridgeObjectRetain();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    v109 = v114;
    sub_1CFB01A58();
    v64 = sub_1CFB01A34();
    swift_bridgeObjectRelease();
    sub_1CF923A24(v121, (unint64_t)v120);
    swift_release();
    sub_1CF923A24(v101, v102);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v109, v116);
  }
  return v64;
}

uint64_t JWSSignedJSON.sign(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  return swift_task_switch();
}

uint64_t sub_1CFAA0328()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;

  v2 = (_QWORD *)v0[21];
  v1 = v0[22];
  v3 = (_QWORD *)v0[20];
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 80))(&v45, v4, v5);
  *(_BYTE *)(v1 + 72) = v45;
  v6 = sub_1CFA9F3F8(v2);
  v0[23] = v6;
  v0[24] = v7;
  v8 = v7;
  if (v7 >> 60 == 15)
    goto LABEL_5;
  v9 = v6;
  v10 = (void *)sub_1CFB00E58();
  v11 = DigestSha256(v10);

  if (!v11)
  {
    sub_1CF931AB0(v9, v8);
LABEL_5:
    *(_WORD *)((char *)&v45 + 1) = 0;
    v19 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003DLL, 0x80000001CFB30BB0, (__int16 *)((char *)&v45 + 1), 0, v19, 0xD000000000000057, 0x80000001CFB307C0, v20, 0x293A5F286E676973, 0xE800000000000000, 216);
    swift_willThrow();
    v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  v42 = (_QWORD *)v0[20];
  v12 = sub_1CFB00E7C();
  v14 = v13;

  v0[25] = v12;
  v0[26] = v14;
  v16 = v3[3];
  v15 = v3[4];
  __swift_project_boxed_opaque_existential_1(v42, v16);
  v43 = v12;
  v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v14, v16, v15);
  v0[27] = v17;
  v0[28] = v18;
  v40 = v0[22];
  v41 = (_QWORD *)v0[20];
  v38 = v17;
  v39 = v18;
  v0[2] = sub_1CFB00E64();
  v0[3] = v23;
  v0[4] = 43;
  v0[5] = 0xE100000000000000;
  v0[6] = 45;
  v0[7] = 0xE100000000000000;
  sub_1CF9B9CD8();
  v24 = sub_1CFB02214();
  v26 = v25;
  swift_bridgeObjectRelease();
  v0[8] = v24;
  v0[9] = v26;
  v0[10] = 47;
  v0[11] = 0xE100000000000000;
  v0[12] = 95;
  v0[13] = 0xE100000000000000;
  v27 = sub_1CFB02214();
  v29 = v28;
  swift_bridgeObjectRelease();
  v0[14] = v27;
  v0[15] = v29;
  v0[16] = 61;
  v0[17] = 0xE100000000000000;
  v0[18] = 0;
  v0[19] = 0xE000000000000000;
  v30 = sub_1CFB02214();
  v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v40 + 32) = v30;
  *(_QWORD *)(v40 + 40) = v32;
  v33 = v3[3];
  v34 = v3[4];
  __swift_project_boxed_opaque_existential_1(v41, v33);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 64))(v33, v34) & 1) == 0)
  {
    sub_1CF931AB0(v9, v8);
    sub_1CF923A24(v38, v39);
    sub_1CF923A24(v43, v14);
    v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  v36 = v3[3];
  v35 = v3[4];
  __swift_project_boxed_opaque_existential_1((_QWORD *)v0[20], v36);
  v44 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v35 + 72) + *(_QWORD *)(v35 + 72));
  v37 = (_QWORD *)swift_task_alloc();
  v0[29] = v37;
  *v37 = v0;
  v37[1] = sub_1CFAA083C;
  return v44(v36, v35);
}

uint64_t sub_1CFAA083C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CFAA08AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v1 = *(_QWORD *)(v0 + 248);
  if (v1 >> 60 == 15)
  {
    v2 = *(_QWORD *)(v0 + 216);
    v3 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 208);
    sub_1CF931AB0(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
    sub_1CF923A24(v2, v3);
    sub_1CF923A24(v5, v4);
    v6 = 0;
    v7 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    v6 = sub_1CFB00E64();
    v7 = v14;
    sub_1CF931AB0(v12, v13);
    sub_1CF923A24(v10, v9);
    sub_1CF923A24(v11, v17);
    sub_1CF931AB0(v8, v1);
  }
  v15 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 56) = v6;
  *(_QWORD *)(v15 + 64) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFAA09A8()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  __int16 v10[5];

  sub_1CF923A24(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  v1 = *(void **)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v10[0] = 0;
  v6 = v1;
  v7 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v1, 0xD00000000000002FLL, 0x80000001CFB30BF0, v10, 0, v7, 0xD000000000000057, 0x80000001CFB307C0, v8, 0x293A5F286E676973, 0xE800000000000000, 226);
  swift_willThrow();

  sub_1CF923A24(v3, v2);
  sub_1CF931AB0(v4, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void JWSSignedJSON.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, _QWORD *);
  unint64_t v57;
  uint64_t v58;
  _BOOL4 v59;
  void (*v60)(char *, _QWORD *);
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  char *v69;
  id v70;
  uint64_t v71;
  char *v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  void *v91;
  char *v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int16 v96;

  v90 = a1;
  v3 = v2;
  v86 = sub_1CFB02448();
  v83 = *(_QWORD *)(v86 - 8);
  v12 = MEMORY[0x1E0C80A78](v86, v5, v6, v7, v8, v9, v10, v11);
  v82 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v84 = (char *)&v82 - v21;
  v22 = a2[2];
  v23 = a2[4];
  v88 = a2[3];
  v89 = v22;
  v87 = v23;
  v24 = type metadata accessor for JWSSignedJSON.CodingKeys(255, v22, v88, v23);
  MEMORY[0x1D17DA600](&unk_1CFB1DCB0, v24);
  v93 = sub_1CFB027D8();
  v85 = *(_QWORD *)(v93 - 8);
  v32 = MEMORY[0x1E0C80A78](v93, v25, v26, v27, v28, v29, v30, v31);
  v92 = (char *)&v82 - v33;
  v34 = *(a2 - 1);
  v42 = MEMORY[0x1E0C80A78](v32, v35, v36, v37, v38, v39, v40, v41);
  v44 = (char *)&v82 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42, v45, v46, v47, v48, v49, v50, v51);
  v53 = (char *)&v82 - v52;
  v54 = *(_QWORD *)(v3 + 24);
  if ((v54 & 0x2000000000000000) != 0)
    v55 = HIBYTE(v54) & 0xF;
  else
    v55 = *(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFLL;
  v56 = *(void (**)(char *, uint64_t, _QWORD *))(v34 + 16);
  v56((char *)&v82 - v52, v3, a2);
  if (v55)
  {
    v57 = *((_QWORD *)v53 + 1);
    v58 = *(_QWORD *)v53 & 0xFFFFFFFFFFFFLL;
    if ((v57 & 0x2000000000000000) != 0)
      v58 = HIBYTE(v57) & 0xF;
    v59 = v58 == 0;
  }
  else
  {
    v59 = 1;
  }
  v60 = *(void (**)(char *, _QWORD *))(v34 + 8);
  v60(v53, a2);
  v56(v44, v3, a2);
  if (v59)
  {
    v60(v44, a2);
LABEL_19:
    LOWORD(v94) = 105;
    v77 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001CFB30C80, (__int16 *)&v94, 0, v77, 0xD000000000000057, 0x80000001CFB307C0, v78, 0x742865646F636E65, 0xEB00000000293A6FLL, 233);
    swift_willThrow();
    return;
  }
  v61 = *((_QWORD *)v44 + 5);
  if ((v61 & 0x2000000000000000) != 0)
    v62 = HIBYTE(v61) & 0xF;
  else
    v62 = *((_QWORD *)v44 + 4) & 0xFFFFFFFFFFFFLL;
  v60(v44, a2);
  if (!v62)
    goto LABEL_19;
  __swift_project_boxed_opaque_existential_1(v90, v90[3]);
  v63 = v92;
  sub_1CFB02B5C();
  v64 = *(_QWORD *)(v3 + 64);
  v94 = *(_OWORD *)(v3 + 48);
  v95 = v64;
  LOBYTE(v96) = 0;
  v65 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(0, v89, v88, v87);
  MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSUnprotectedHeader, v65);
  v66 = v93;
  v67 = v91;
  sub_1CFB027CC();
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v66);
    v68 = v86;
    v69 = v84;
    *(_QWORD *)&v94 = v67;
    v70 = v67;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    if (swift_dynamicCast())
    {

      v72 = v82;
      v71 = v83;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v69, v68);
      v73 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v74, v72, v68);
      v96 = 118;
      v75 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v73, 0xD000000000000012, 0x80000001CFB30C60, &v96, 0, v75, 0xD000000000000057, 0x80000001CFB307C0, v76, 0x742865646F636E65, 0xEB00000000293A6FLL, 243);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v68);

    }
    else
    {

      LOWORD(v94) = 0;
      v79 = v67;
      v80 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v67, 0xD000000000000037, 0x80000001CFB30C20, (__int16 *)&v94, 0, v80, 0xD000000000000057, 0x80000001CFB307C0, v81, 0x742865646F636E65, 0xEB00000000293A6FLL, 246);
      swift_willThrow();

    }
  }
  else
  {
    LOBYTE(v94) = 1;
    sub_1CFB02790();
    LOBYTE(v94) = 2;
    sub_1CFB02790();
    LOBYTE(v94) = 3;
    sub_1CFB02790();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v66);
  }
}

void sub_1CFAA1120(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  os_unfair_lock_s *v33;
  unint64_t v34;
  os_unfair_lock_s *v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  char *v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint8_t *v56;
  char *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char v66[24];
  uint64_t v67;

  v58 = a9;
  v11 = *(_QWORD *)(a1 + 16);
  v59 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v63 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1CFB012CC();
  v61 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = (char *)&v55 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED903078 != -1)
    swift_once();
  v33 = (os_unfair_lock_s *)*((_QWORD *)off_1ED903068 + 2);
  v34 = (unint64_t)&v33[4];
  v35 = v33 + 6;
  os_unfair_lock_lock(v33 + 6);
  sub_1CFA40FE8(v34, v11, v66);
  if (v9)
  {
    os_unfair_lock_unlock(v35);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v35);
    if (v66[0] == 21)
    {
      if (qword_1ED9054E8 != -1)
        swift_once();
      v36 = (_BYTE *)v23;
      v37 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED907590);
      swift_beginAccess();
      v38 = v32;
      (*(void (**)(char *, uint64_t, _BYTE *))(v61 + 16))(v32, v37, v36);
      v39 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v22, v62, a1);
      v40 = sub_1CFB012B4();
      v41 = sub_1CFB01FC8();
      v42 = os_log_type_enabled(v40, v41);
      v43 = v63;
      if (v42)
      {
        v58 = v36;
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v56 = v44;
        v57 = v38;
        *(_DWORD *)v44 = 136446210;
        v64 = v45;
        v46 = v45;
        v55 = v44 + 4;
        v47 = v59;
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v43, &v22[*(int *)(a1 + 60)], v11);
        swift_getDynamicType();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v63, v11);
        v48 = sub_1CFB02BB0();
        v67 = sub_1CF9C974C(v48, v49, &v64);
        sub_1CFB021C0();
        v43 = v63;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v22, a1);
        v50 = v56;
        _os_log_impl(&dword_1CF917000, v40, v41, "No cert type registered for JWSSignedJSON %{public}s", v56, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17DA6E4](v46, -1, -1);
        MEMORY[0x1D17DA6E4](v50, -1, -1);

        (*(void (**)(char *, _BYTE *))(v61 + 8))(v57, v58);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v22, a1);

        (*(void (**)(char *, _BYTE *))(v61 + 8))(v38, v36);
        v47 = v59;
      }
      v64 = 0;
      v65 = 0xE000000000000000;
      sub_1CFB02388();
      sub_1CFB01B30();
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v43, v62 + *(int *)(a1 + 60), v11);
      swift_getDynamicType();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v11);
      sub_1CFB02BB0();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      v51 = v64;
      v52 = v65;
      LOWORD(v64) = 105;
      v53 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v51, v52, (__int16 *)&v64, 0, v53, 0xD000000000000057, 0x80000001CFB307C0, v54, 0xD000000000000015, 0x80000001CFB30D30, 316);
      swift_willThrow();
    }
    else
    {
      *v58 = v66[0];
    }
  }
}

uint64_t sub_1CFAA1614@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return JWSSignedJSON.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1CFAA1634(_QWORD *a1, _QWORD *a2)
{
  JWSSignedJSON.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSUnprotectedHeader);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSProtectedHeader);
}

uint64_t sub_1CFAA1660()
{
  return 8;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSCritical(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSCritical);
}

void sub_1CFAA1674()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA1684()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA1694()
{
  JUMPOUT(0x1D17DA600);
}

uint64_t sub_1CFAA16A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CFAA1734(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 152) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    v11[1] = v12[1];
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v13[1] = v14[1];
    v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    v17 = ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8;
    v18 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
    *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
    *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
    v20 = v4;
    v21 = (v18 + v6 + 80) & ~v6;
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v23 = (v17 + v6 + 80) & ~v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v23, v21, v20);
  }
  return a1;
}

uint64_t sub_1CFAA1924(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1CFAA19D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v11 = ((unint64_t)v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v12 + 48);
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(v12 + 56);
  *(_QWORD *)(v11 + 64) = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(v12 + 72);
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v19 = (v15 + 80 + v11) & ~v15;
  v17 = (v15 + 80 + v12) & ~v15;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v19, v17, v13);
  return a1;
}

_QWORD *sub_1CFAA1B78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  v10[2] = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = ((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v14 + 24))((*(unsigned __int8 *)(v14 + 80) + 80 + v12) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80), (*(unsigned __int8 *)(v14 + 80) + 80 + v13) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  return a1;
}

_OWORD *sub_1CFAA1D50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = v10;
  v11 = (_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)((v9 + 31) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[4];
  v15 = v12[1];
  v14 = v12[2];
  v11[3] = v12[3];
  v11[4] = v13;
  v11[1] = v15;
  v11[2] = v14;
  *v11 = *v12;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))(((unint64_t)v11 + *(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), ((unint64_t)v12 + *(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_1CFAA1E04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_bridgeObjectRelease();
  v11[1] = v12[1];
  v11[2] = v12[2];
  swift_bridgeObjectRelease();
  v13 = ((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 31) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 64) = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v13 + 72) = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 40))((*(unsigned __int8 *)(v15 + 80) + 80 + v13) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (*(unsigned __int8 *)(v15 + 80) + 80 + v14) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

uint64_t sub_1CFAA1F7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 152) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * (((v7 - 104) & ~(_BYTE)v7) + *(_BYTE *)(v4 + 64));
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                          + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 31) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 80) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CFAA2050 + 4 * byte_1CFB1D40C[(v9 - 1)]))();
}

void sub_1CFAA20E0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * (((*(_BYTE *)(v5 + 80) - 104) & ~*(_BYTE *)(v5 + 80)) + *(_BYTE *)(v5 + 64))));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1CFAA22FC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CFAA233C + 4 * byte_1CFB1D41A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CFAA235C + 4 * byte_1CFB1D41F[v4]))();
}

_BYTE *sub_1CFAA233C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CFAA235C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFAA2364(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFAA236C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFAA2374(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFAA237C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1CFAA2388(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CFAA23D4 + 4 * byte_1CFB1D429[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CFAA2408 + 4 * byte_1CFB1D424[v4]))();
}

uint64_t sub_1CFAA2408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAA2418);
  return result;
}

uint64_t sub_1CFAA2424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAA242CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CFAA2430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2444()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CFAA244C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAA248C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFAA2510(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAA25DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAA2658(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1CFAA26B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_1CFAA2720()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1CFAA2748(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1CFAA2784(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1CFAA27E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAA282C(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1CFAA2888(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1CFAA28DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFAA2928 + 4 * byte_1CFB1D433[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFAA295C + 4 * byte_1CFB1D42E[v4]))();
}

uint64_t sub_1CFAA295C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAA296CLL);
  return result;
}

uint64_t sub_1CFAA2978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAA2980);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFAA2984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA298C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2998(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFAA29E4 + 4 * byte_1CFB1D43D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFAA2A18 + 4 * byte_1CFB1D438[v4]))();
}

uint64_t sub_1CFAA2A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAA2A28);
  return result;
}

uint64_t sub_1CFAA2A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAA2A3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFAA2A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2A54(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1CFAA2AA0 + 4 * byte_1CFB1D447[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1CFAA2AD4 + 4 * byte_1CFB1D442[v4]))();
}

uint64_t sub_1CFAA2AD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2ADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAA2AE4);
  return result;
}

uint64_t sub_1CFAA2AF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAA2AF8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1CFAA2AFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAA2B04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1CFAA2B10()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B20()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B30()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B40()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B50()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B60()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B70()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B80()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAA2B90()
{
  JUMPOUT(0x1D17DA600);
}

uint64_t sub_1CFAA2BA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3D58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static VICALMilestone.loadDocument.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3937346566616562;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000013;
  a1[3] = 0x80000001CFB30D50;
}

void static VICALMilestone.cdnReturnedDocument.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6337336634633661;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000020;
  a1[3] = 0x80000001CFB30D70;
}

void static VICALMilestone.cacheReturnedDocument.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6262623531663065;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000022;
  a1[3] = 0x80000001CFB30DA0;
}

void static VICALMilestone.documentSignerCertificateTrusted.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3232633134633263;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000029;
  a1[3] = 0x80000001CFB30DD0;
}

void static VICALMilestone.documentSignerCertificateUntrusted.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6233396138383764;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000030;
  a1[3] = 0x80000001CFB30E00;
}

void static VICALMilestone.documentSignerCertificateRevoked.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3962326133626130;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000032;
  a1[3] = 0x80000001CFB30E40;
}

void static VICALMilestone.documentSignerCertificateExpired.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6630346536643161;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002CLL;
  a1[3] = 0x80000001CFB30E80;
}

void static VICALMilestone.documentSignatureValid.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3865616337303564;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000021;
  a1[3] = 0x80000001CFB30EB0;
}

void static VICALMilestone.storeDocument.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3531346539373062;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000001FLL;
  a1[3] = 0x80000001CFB30EE0;
}

void static VICALMilestone.missingDocument.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3230623063303464;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000021;
  a1[3] = 0x80000001CFB30F00;
}

ValueMetadata *type metadata accessor for VICALMilestone()
{
  return &type metadata for VICALMilestone;
}

unint64_t sub_1CFAA2E24()
{
  unint64_t result;

  result = qword_1EFBC4948;
  if (!qword_1EFBC4948)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1DE60, &type metadata for ASN1NodeCollection.Iterator);
    atomic_store(result, (unint64_t *)&qword_1EFBC4948);
  }
  return result;
}

void sub_1CFAA2E68(uint64_t a1@<X8>)
{
  uint64_t *v1;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  _BYTE v49[40];

  v3 = v1[2];
  v4 = v1[3];
  if (v3 == v4 >> 1)
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0uLL;
    v10 = 0uLL;
    v11 = 0uLL;
    v12 = 0uLL;
LABEL_9:
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)(a1 + 80) = v12;
    return;
  }
  if (v3 >= (uint64_t)(v4 >> 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = *v1;
  v14 = v1[1];
  v15 = (__int128 *)(v14 + 96 * v3);
  v16 = v15[1];
  v44 = *v15;
  v45 = v16;
  v17 = v15[2];
  v18 = v15[3];
  v19 = v15[5];
  v48[0] = v15[4];
  v48[1] = v19;
  v46 = v17;
  v47 = v18;
  v20 = v3 + 1;
  v1[2] = v3 + 1;
  if ((BYTE8(v45) & 1) != 0)
  {
    sub_1CFAA6D5C(v13, v14, v20, v4, (uint64_t)&v44);
    v25 = v24;
    if (!__OFSUB__(v23 >> 1, v22))
    {
      v26 = v21;
      v27 = v22;
      v28 = v23;
      *v1 = sub_1CFAA3458((v23 >> 1) - v22, v13, v14, v20, v4);
      v1[1] = v29;
      v1[2] = v30;
      v1[3] = v31;
      v5 = v44;
      v6 = BYTE8(v44);
      sub_1CFAA667C(v25, v26, v27, v28, v45, &v40);
      v7 = v40;
      v8 = v41;
      *((_QWORD *)&v32 + 1) = *((_QWORD *)&v46 + 1);
      v37 = v42;
      v39 = v46;
      *(_QWORD *)&v32 = v43;
      v33 = v32;
      v35 = v47;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v10 = v33;
      v12 = v35;
      v9 = v37;
      v11 = v39;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  sub_1CF931BA0((uint64_t)v48, (uint64_t)v49, &qword_1EFBC4968);
  sub_1CF931BA0((uint64_t)v49, (uint64_t)&v40, &qword_1EFBC4968);
  v7 = v40;
  if (v40)
  {
    v8 = v41;
    v5 = v44;
    v6 = BYTE8(v44);
    v36 = v42;
    v38 = v46;
    v34 = v47;
    sub_1CFAA6D34((uint64_t)v49);
    swift_unknownObjectRetain();
    v12 = v34;
    v9 = v36;
    v11 = v38;
    v10 = xmmword_1CFB102D0;
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1CFAA3068()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;

  v1 = v0[2];
  v2 = v0[3] >> 1;
  if (v1 == v2)
  {
    v3 = 0;
  }
  else
  {
    if (v1 >= v2)
    {
      __break(1u);
      return result;
    }
    v3 = *(unsigned __int8 *)(v0[1] + v1);
    v0[2] = v1 + 1;
  }
  return v3 | ((v1 == v2) << 8);
}

uint64_t sub_1CFAA30B0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14[12];
  uint64_t v15[12];
  uint64_t v16[12];
  _BYTE v17[64];
  uint64_t v18;
  _OWORD v19[4];
  __int128 v20;
  __int128 v21;
  _OWORD v22[6];
  _OWORD v23[4];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[5];
  _BYTE v28[48];
  __int128 v29;
  char v30;

  v11 = *a1;
  v12 = a1[1];
  v13 = *((_QWORD *)a1 + 4);
  sub_1CFAA2E68((uint64_t)v14);
  sub_1CF931BA0((uint64_t)v14, (uint64_t)v23, &qword_1EFBBDE48);
  if (!(_QWORD)v24)
  {
    swift_unknownObjectRetain();
    result = swift_unknownObjectRelease();
LABEL_10:
    *(_OWORD *)a4 = xmmword_1CFB102D0;
    *(_QWORD *)(a4 + 16) = 0;
    return result;
  }
  v27[1] = v23[2];
  v27[2] = v23[3];
  v27[3] = v24;
  v27[4] = v25;
  v26 = v23[0];
  v27[0] = v23[1];
  if (*(_QWORD *)&v23[0] != a2 || BYTE8(v26) != a3)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    result = (uint64_t)sub_1CF9211FC(v14);
    goto LABEL_10;
  }
  *a1 = v11;
  a1[1] = v12;
  *((_QWORD *)a1 + 4) = v13;
  sub_1CF9210FC((uint64_t)v27, (uint64_t)v28);
  result = sub_1CF9210FC((uint64_t)v28, (uint64_t)&v29);
  if ((v30 & 1) == 0)
  {
    sub_1CFAA2E68((uint64_t)v15);
    sub_1CF931BA0((uint64_t)v15, (uint64_t)v19, &qword_1EFBBDE48);
    if ((_QWORD)v20)
    {
      v22[2] = v19[2];
      v22[3] = v19[3];
      v22[4] = v20;
      v22[5] = v21;
      v22[0] = v19[0];
      v22[1] = v19[1];
      sub_1CFAA2E68((uint64_t)v16);
      sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
      sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
      swift_unknownObjectRetain();
      sub_1CF9211FC(v16);
      sub_1CF931BA0((uint64_t)v16, (uint64_t)v17, &qword_1EFBBDE48);
      if (!v18)
      {
        sub_1CF9200F4(v22, a4);
        sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRelease);
        sub_1CF9211FC(v14);
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      sub_1CF9211FC(v15);
    }
    else
    {
      sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
      sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
      swift_unknownObjectRetain();
    }
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CF9A2A08();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    type metadata accessor for ASN1Error.Backing();
    v9 = swift_allocObject();
    *(_BYTE *)(v9 + 16) = 1;
    *(_QWORD *)(v9 + 24) = 0;
    *(_QWORD *)(v9 + 32) = 0xE000000000000000;
    *(_QWORD *)(v9 + 40) = 0xD000000000000018;
    *(_QWORD *)(v9 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v9 + 56) = 220;
    sub_1CF921074();
    swift_allocError();
    *v10 = v9;
    swift_willThrow();
    sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRelease);
    sub_1CF9211FC(v14);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CFAA3458(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  int64_t v7;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = a5 >> 1;
  v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (result)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      v7 = a5 >> 1;
      if (v6 < result)
      {
LABEL_8:
        if (v7 >= a4)
        {
          if (v5 >= a4)
            return a2;
          goto LABEL_15;
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
  }
  v7 = a4 + result;
  if (!__OFADD__(a4, result))
  {
    if (v5 >= v7)
      goto LABEL_8;
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1CFAA34C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1CFAA3624);
}

void sub_1CFAA3658(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (v5 > 8)
    {
      sub_1CFB02388();
      swift_bridgeObjectRelease();
      sub_1CFB027F0();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      sub_1CFB01B30();
      sub_1CFB01B30();
      type metadata accessor for ASN1Error.Backing();
      v6 = swift_allocObject();
      *(_BYTE *)(v6 + 16) = 1;
      *(_QWORD *)(v6 + 24) = 0xD000000000000010;
      *(_QWORD *)(v6 + 32) = 0x80000001CFB311B0;
      *(_QWORD *)(v6 + 40) = 0xD000000000000018;
      *(_QWORD *)(v6 + 48) = 0x80000001CFB27D80;
      *(_QWORD *)(v6 + 56) = 1171;
      sub_1CF921074();
      swift_allocError();
      *v7 = v6;
      swift_willThrow();
      swift_unknownObjectRelease();
      return;
    }
    if ((unint64_t)(v5 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_24;
    v10 = sub_1CFABA850(0, 8 * v5, 8);
    v11 = *(_QWORD *)(v10 + 16);
    if (!v11)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    v12 = 0;
    v13 = 0;
    if (a3 <= v4)
      v14 = v4;
    else
      v14 = a3;
    v15 = v14 - a3;
    while (v15 > v11 - 1)
    {
      v17 = *(_QWORD *)(v10 + 8 * v12 + 32);
      if (v17 - 65 < 0xFFFFFFFFFFFFFF7FLL)
      {
        v16 = 0;
      }
      else
      {
        v18 = *(unsigned __int8 *)(a2 + a3 + v12);
        if ((v17 & 0x8000000000000000) != 0)
        {
          v20 = v18 >> -(char)v17;
          if (v17 <= 0xFFFFFFFFFFFFFFC0)
            v16 = 0;
          else
            v16 = v20;
        }
        else
        {
          v19 = v18 << v17;
          if (v17 >= 0x40)
            v16 = 0;
          else
            v16 = v19;
        }
      }
      ++v12;
      v13 |= v16;
      if (v11 == v12)
        goto LABEL_21;
    }
    __break(1u);
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1CFAA38A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v0 = sub_1CFB02268();
  result = sub_1CFB0255C();
  v2 = v0 - result;
  if (__OFSUB__(v0, result))
  {
    __break(1u);
  }
  else
  {
    v3 = __OFADD__(v2, 7);
    v4 = v2 + 7;
    if (!v3)
      return v4 / 8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CFAA3910(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return sub_1CFAA392C(a1, a2, a3, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_1CFA21E70);
}

uint64_t sub_1CFAA392C(uint64_t a1, uint64_t a2, unsigned __int8 a3, void (*a4)(uint64_t *__return_ptr, _OWORD *))
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10[12];
  _OWORD v11[4];
  __int128 v12;
  __int128 v13;
  _OWORD v14[6];

  sub_1CFAA2E68((uint64_t)v10);
  sub_1CF931BA0((uint64_t)v10, (uint64_t)v11, &qword_1EFBBDE48);
  if ((_QWORD)v12)
  {
    v14[2] = v11[2];
    v14[3] = v11[3];
    v14[4] = v12;
    v14[5] = v13;
    v14[0] = v11[0];
    v14[1] = v11[1];
    v7 = sub_1CFAA3F1C((uint64_t)v14, a2, a3, a4);
    sub_1CF9211FC(v10);
  }
  else
  {
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CFB027F0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFB01B30();
    sub_1CFB0252C();
    sub_1CFB01B30();
    type metadata accessor for ASN1Error.Backing();
    v7 = swift_allocObject();
    *(_BYTE *)(v7 + 16) = 1;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0xE000000000000000;
    *(_QWORD *)(v7 + 40) = 0xD000000000000018;
    *(_QWORD *)(v7 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v7 + 56) = 420;
    sub_1CF921074();
    swift_allocError();
    *v8 = v7;
    swift_willThrow();
  }
  return v7;
}

uint64_t sub_1CFAA3B8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  sub_1CFB02A9C();
  sub_1CFB02A9C();
  sub_1CFB02A9C();
  sub_1CFB02AA8();
  v1 = v0[6];
  v2 = v0[7] >> 1;
  result = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = v0[5];
  result = sub_1CFB02A9C();
  v5 = __OFSUB__(v2, v1);
  v6 = v2 - v1;
  if (v6)
  {
    if ((v6 < 0) ^ v5 | (v6 == 0))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    v7 = v4 + v1;
    do
    {
      ++v7;
      sub_1CFB02AA8();
      --v6;
    }
    while (v6);
  }
  if (!v0[8])
    return sub_1CFB02AA8();
  v8 = v0[10];
  v9 = v0[11];
  v10 = v0[9];
  sub_1CFB02AA8();
  v11 = v9 >> 1;
  result = (v9 >> 1) - v8;
  if (__OFSUB__(v9 >> 1, v8))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  result = sub_1CFB02A9C();
  v12 = __OFSUB__(v11, v8);
  v13 = v11 - v8;
  if (!v13)
    return result;
  if ((v13 < 0) ^ v12 | (v13 == 0))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v14 = v10 + v8;
  do
  {
    ++v14;
    result = sub_1CFB02AA8();
    --v13;
  }
  while (v13);
  return result;
}

uint64_t sub_1CFAA3C80()
{
  sub_1CFB02A90();
  sub_1CFAA3B8C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA3CC0()
{
  sub_1CFB02A90();
  sub_1CFAA3B8C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA3CF8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1CFAA69F0((uint64_t)v9, (uint64_t)v10) & 1;
}

uint64_t sub_1CFAA3D50()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[32];
  _QWORD v3[4];

  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_1CFB02388();
  sub_1CFB01B30();
  sub_1CF9A2A08();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  v3[0] = *(_QWORD *)(v0 + 16);
  sub_1CFB027F0();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  sub_1CF931BA0(v0 + 64, (uint64_t)v2, &qword_1EFBC4968);
  result = sub_1CF931BA0((uint64_t)v2, (uint64_t)v3, &qword_1EFBC4968);
  if (v3[0] && __OFSUB__(v3[3] >> 1, v3[2]))
  {
    __break(1u);
  }
  else
  {
    sub_1CFB027F0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFB01B30();
    return 0;
  }
  return result;
}

uint64_t sub_1CFAA3EDC()
{
  return sub_1CFAA3D50();
}

uint64_t sub_1CFAA3F1C(uint64_t a1, uint64_t a2, unsigned __int8 a3, void (*a4)(uint64_t *__return_ptr, _OWORD *))
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[12];
  uint64_t v21[12];
  _BYTE v22[64];
  uint64_t v23;
  _OWORD v24[4];
  __int128 v25;
  __int128 v26;
  _OWORD v27[6];
  _BYTE v28[48];
  _OWORD v29[2];
  uint64_t v30;
  char v31;

  if (*(_QWORD *)a1 != a2 || *(unsigned __int8 *)(a1 + 8) != a3)
  {
    v9 = sub_1CF9A2A08();
    v11 = v10;
    type metadata accessor for ASN1Error.Backing();
    v12 = swift_allocObject();
    *(_BYTE *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = v9;
    *(_QWORD *)(v12 + 32) = v11;
    *(_QWORD *)(v12 + 40) = 0xD000000000000018;
    *(_QWORD *)(v12 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v12 + 56) = 439;
    sub_1CF921074();
    swift_allocError();
    *v13 = v12;
    return swift_willThrow();
  }
  sub_1CF9210FC(a1 + 16, (uint64_t)v28);
  sub_1CF9210FC((uint64_t)v28, (uint64_t)v29);
  if ((v31 & 1) != 0)
  {
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "Explicit tag ");
    HIWORD(v17[0]) = -4864;
    sub_1CF9A2A08();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFB01B30();
    sub_1CFB01B30();
    sub_1CFB01B30();
    v6 = v17[0];
    type metadata accessor for ASN1Error.Backing();
    v7 = swift_allocObject();
    *(_BYTE *)(v7 + 16) = 1;
    *(_OWORD *)(v7 + 24) = v6;
    *(_QWORD *)(v7 + 40) = 0xD000000000000018;
    *(_QWORD *)(v7 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v7 + 56) = 444;
    sub_1CF921074();
    swift_allocError();
    *v8 = v7;
    return swift_willThrow();
  }
  v17[0] = v29[0];
  v17[1] = v29[1];
  v18 = v30;
  sub_1CFAA2E68((uint64_t)v20);
  sub_1CF931BA0((uint64_t)v20, (uint64_t)v24, &qword_1EFBBDE48);
  if (!(_QWORD)v25)
  {
    sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
    sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
    goto LABEL_11;
  }
  v27[2] = v24[2];
  v27[3] = v24[3];
  v27[4] = v25;
  v27[5] = v26;
  v27[0] = v24[0];
  v27[1] = v24[1];
  sub_1CFAA2E68((uint64_t)v21);
  sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
  sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRetain);
  sub_1CF9211FC(v21);
  sub_1CF931BA0((uint64_t)v21, (uint64_t)v22, &qword_1EFBBDE48);
  if (v23)
  {
    sub_1CF9211FC(v20);
LABEL_11:
    sub_1CFB02388();
    sub_1CFB01B30();
    sub_1CF9A2A08();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    sub_1CFB01B30();
    sub_1CFB01B30();
    type metadata accessor for ASN1Error.Backing();
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = 1;
    *(_QWORD *)(v15 + 24) = 0;
    *(_QWORD *)(v15 + 32) = 0xE000000000000000;
    *(_QWORD *)(v15 + 40) = 0xD000000000000018;
    *(_QWORD *)(v15 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v15 + 56) = 449;
    sub_1CF921074();
    swift_allocError();
    *v16 = v15;
    swift_willThrow();
    sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRelease);
    return swift_unknownObjectRelease();
  }
  a4(&v19, v27);
  swift_unknownObjectRelease();
  sub_1CF9211FC(v20);
  result = sub_1CF9211C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j__swift_unknownObjectRelease);
  if (!v4)
    return v19;
  return result;
}

uint64_t sub_1CFAA438C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t v8[2];
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;

  v10 = a4;
  v8[0] = a1;
  v8[1] = a2;
  v9 = a3;
  swift_unknownObjectRetain();
  v11 = sub_1CF955F64(0, 16, 0, MEMORY[0x1E0DEE9D8]);
  sub_1CFAA44D8(v8, 1, &v11);
  result = v8[0];
  if (v5)
    goto LABEL_6;
  if (!__OFSUB__(v10 >> 1, v9))
  {
    if (v10 >> 1 == v9)
    {
      v4 = v11;
      swift_unknownObjectRelease();
      return (uint64_t)v4;
    }
    type metadata accessor for ASN1Error.Backing();
    v4 = (uint64_t *)swift_allocObject();
    *((_BYTE *)v4 + 16) = 1;
    v4[3] = 0xD000000000000021;
    v4[4] = 0x80000001CFB31020;
    v4[5] = 0xD000000000000018;
    v4[6] = 0x80000001CFB27D80;
    v4[7] = 475;
    sub_1CF921074();
    swift_allocError();
    *v7 = v4;
    swift_willThrow();
LABEL_6:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CFAA44D8(uint64_t *a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t result;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;

  if (a2 > 50)
  {
    type metadata accessor for ASN1Error.Backing();
    v4 = swift_allocObject();
    v5 = v4;
    *(_BYTE *)(v4 + 16) = 1;
    *(_QWORD *)(v4 + 24) = 0xD000000000000021;
    *(_QWORD *)(v4 + 32) = 0x80000001CFB310A0;
    *(_QWORD *)(v4 + 40) = 0xD000000000000018;
    *(_QWORD *)(v4 + 48) = 0x80000001CFB27D80;
    v6 = 486;
LABEL_9:
    *(_QWORD *)(v4 + 56) = v6;
    sub_1CF921074();
    swift_allocError();
    *v22 = v5;
    return swift_willThrow();
  }
  v9 = a1;
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = sub_1CFAA3068();
  if ((v14 & 0x100) != 0)
  {
    type metadata accessor for ASN1Error.Backing();
    v4 = swift_allocObject();
    v5 = v4;
    *(_BYTE *)(v4 + 16) = 3;
    *(_QWORD *)(v4 + 24) = 0;
    *(_QWORD *)(v4 + 32) = 0xE000000000000000;
    *(_QWORD *)(v4 + 40) = 0xD000000000000018;
    *(_QWORD *)(v4 + 48) = 0x80000001CFB27D80;
    v6 = 492;
    goto LABEL_9;
  }
  v15 = v14;
  if ((~v14 & 0x1F) != 0)
  {
    v61 = sub_1CF9A2CB4(v14);
    v62 = v24;
    swift_unknownObjectRetain();
  }
  else
  {
    v59 = v12;
    v16 = v11;
    v17 = sub_1CF9A2CAC(v14);
    swift_unknownObjectRetain();
    sub_1CFABA6B4();
    if (v3)
      return swift_unknownObjectRelease();
    v62 = v17;
    v19 = v18;
    if (v18 <= 0x1E)
    {
      sub_1CFB02388();
      swift_bridgeObjectRelease();
      v63 = 0xD00000000000002CLL;
      v64 = 0x80000001CFB31070;
      v67 = v19;
      sub_1CFB027F0();
      sub_1CFB01B30();
      swift_bridgeObjectRelease();
      type metadata accessor for ASN1Error.Backing();
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 16) = 1;
      *(_QWORD *)(v20 + 24) = 0xD00000000000002CLL;
      *(_QWORD *)(v20 + 32) = 0x80000001CFB31070;
      *(_QWORD *)(v20 + 40) = 0xD000000000000018;
      *(_QWORD *)(v20 + 48) = 0x80000001CFB27D80;
      *(_QWORD *)(v20 + 56) = 506;
      sub_1CF921074();
      swift_allocError();
      *v21 = v20;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    v61 = v18;
    v11 = v16;
    v12 = v59;
  }
  sub_1CFAA4BF0();
  if (v3)
    return swift_unknownObjectRelease();
  if ((v26 & 1) != 0)
  {
    type metadata accessor for ASN1Error.Backing();
    v39 = swift_allocObject();
    v40 = v39;
    *(_BYTE *)(v39 + 16) = 3;
    *(_QWORD *)(v39 + 24) = 0;
    *(_QWORD *)(v39 + 32) = 0xE000000000000000;
    *(_QWORD *)(v39 + 40) = 0xD000000000000018;
    *(_QWORD *)(v39 + 48) = 0x80000001CFB27D80;
    v41 = 514;
LABEL_27:
    *(_QWORD *)(v39 + 56) = v41;
    sub_1CF921074();
    swift_allocError();
    *v43 = v40;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  if (v25 < 0)
  {
    v42 = v25;
    sub_1CFB02388();
    swift_bridgeObjectRelease();
    v63 = 0xD000000000000019;
    v64 = 0x80000001CFB31050;
    v67 = v42;
    sub_1CFB027F0();
    sub_1CFB01B30();
    swift_bridgeObjectRelease();
    type metadata accessor for ASN1Error.Backing();
    v39 = swift_allocObject();
    v40 = v39;
    *(_BYTE *)(v39 + 16) = 1;
    *(_QWORD *)(v39 + 24) = 0xD000000000000019;
    *(_QWORD *)(v39 + 32) = 0x80000001CFB31050;
    *(_QWORD *)(v39 + 40) = 0xD000000000000018;
    *(_QWORD *)(v39 + 48) = 0x80000001CFB27D80;
    v41 = 519;
    goto LABEL_27;
  }
  v58 = *v9;
  v60 = v25;
  v53 = v9[2];
  v54 = v9[1];
  v55 = v9[3];
  v27 = sub_1CFA5CC00(v25, *v9, v54, v53, v55);
  v56 = v29;
  v57 = v28;
  v51 = v30;
  v52 = v27;
  v63 = v27;
  v64 = v30;
  v65 = v28;
  v66 = v29;
  *v9 = sub_1CFAA3458(v60, v58, v54, v53, v55);
  v9[1] = v31;
  v9[2] = v32;
  v9[3] = v33;
  v34 = v56 >> 1;
  if (__OFSUB__(v56 >> 1, v57))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if ((v56 >> 1) - v57 != v60)
  {
    type metadata accessor for ASN1Error.Backing();
    v44 = swift_allocObject();
    *(_BYTE *)(v44 + 16) = 3;
    *(_QWORD *)(v44 + 24) = 0;
    *(_QWORD *)(v44 + 32) = 0xE000000000000000;
    *(_QWORD *)(v44 + 40) = 0xD000000000000018;
    *(_QWORD *)(v44 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v44 + 56) = 526;
    sub_1CF921074();
    swift_allocError();
    *v45 = v44;
    swift_unknownObjectRetain();
    swift_willThrow();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  if (v34 < v12)
    goto LABEL_42;
  if ((uint64_t)(v13 >> 1) < v12)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v13 >> 1 < v34)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v55 = v56 & 0xFFFFFFFFFFFFFFFELL | v13 & 1;
  if ((v15 & 0x20) != 0)
  {
    v46 = *a3;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v46 = sub_1CF955F64(0, v46[2] + 1, 1, v46);
    v48 = v46[2];
    v47 = v46[3];
    v49 = v62;
    if (v48 >= v47 >> 1)
    {
      v46 = sub_1CF955F64((_QWORD *)(v47 > 1), v48 + 1, 1, v46);
      v49 = v62;
    }
    v46[2] = v48 + 1;
    v50 = &v46[12 * v48];
    v50[4] = v61;
    *((_BYTE *)v50 + 40) = v49;
    v50[6] = a2;
    *((_BYTE *)v50 + 56) = 1;
    v50[8] = v10;
    v50[9] = v11;
    v50[10] = v12;
    v50[11] = v55;
    *((_OWORD *)v50 + 6) = 0u;
    *((_OWORD *)v50 + 7) = 0u;
    *a3 = v46;
    if (!v60)
    {
      swift_unknownObjectRelease_n();
      return swift_unknownObjectRelease();
    }
    v9 = (uint64_t *)(a2 + 1);
    while (1)
    {
      sub_1CFAA44D8(&v63, a2 + 1, a3);
      if (__OFSUB__(v66 >> 1, v65))
        break;
      if ((uint64_t)((v66 >> 1) - v65) <= 0)
      {
        swift_unknownObjectRelease_n();
        return swift_unknownObjectRelease();
      }
    }
    __break(1u);
    goto LABEL_41;
  }
  v9 = *a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_45:
    v9 = sub_1CF955F64(0, v9[2] + 1, 1, v9);
  v36 = v9[2];
  v35 = v9[3];
  v37 = v62;
  if (v36 >= v35 >> 1)
  {
    v9 = sub_1CF955F64((_QWORD *)(v35 > 1), v36 + 1, 1, v9);
    v37 = v62;
  }
  v9[2] = v36 + 1;
  v38 = &v9[12 * v36];
  v38[4] = v61;
  *((_BYTE *)v38 + 40) = v37;
  v38[6] = a2;
  *((_BYTE *)v38 + 56) = 0;
  v38[8] = v10;
  v38[9] = v11;
  v38[10] = v12;
  v38[11] = v55;
  v38[12] = v52;
  v38[13] = v51;
  v38[14] = v57;
  v38[15] = v56;
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  *a3 = v9;
  return result;
}

void sub_1CFAA4BF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  BOOL v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v3 >> 1;
  if (v2 == v3 >> 1)
    return;
  if (v2 >= v4)
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = *v0;
  v6 = v0[1];
  v7 = *(unsigned __int8 *)(v6 + v2);
  v8 = v2 + 1;
  v0[2] = v2 + 1;
  if (v7 == 128)
  {
    type metadata accessor for ASN1Error.Backing();
    v9 = swift_allocObject();
    *(_BYTE *)(v9 + 16) = 4;
    *(_QWORD *)(v9 + 24) = 0xD000000000000035;
    *(_QWORD *)(v9 + 32) = 0x80000001CFB31170;
    *(_QWORD *)(v9 + 40) = 0xD000000000000018;
    *(_QWORD *)(v9 + 48) = 0x80000001CFB27D80;
    *(_QWORD *)(v9 + 56) = 1129;
    sub_1CF921074();
    swift_allocError();
    *v10 = v9;
    swift_willThrow();
    return;
  }
  if ((v7 & 0x80) != 0)
  {
    v11 = __OFSUB__(v4, v8);
    v12 = v4 - v8;
    if (!v11)
    {
      v13 = v7 & 0x7F;
      if (v12 < (uint64_t)v13)
        return;
      sub_1CFA5CC00(v7 & 0x7F, v5, v6, v2 + 1, v3);
      v15 = v14;
      v27 = v17;
      v28 = v16;
      *v0 = sub_1CFAA3458(v13, v5, v6, v8, v3);
      v0[1] = v18;
      v0[2] = v19;
      v0[3] = v20;
      swift_unknownObjectRetain();
      v21 = swift_unknownObjectRetain();
      sub_1CFAA3658(v21, v15, v28, v27);
      if (!v1)
      {
        if (v22 <= 0x7F)
        {
          sub_1CFB02388();
          sub_1CFB01B30();
          sub_1CFB027F0();
          sub_1CFB01B30();
          swift_bridgeObjectRelease();
          sub_1CFB01B30();
          type metadata accessor for ASN1Error.Backing();
          v23 = swift_allocObject();
          v24 = v23;
          *(_BYTE *)(v23 + 16) = 4;
          *(_QWORD *)(v23 + 24) = 0;
          *(_QWORD *)(v23 + 32) = 0xE000000000000000;
          *(_QWORD *)(v23 + 40) = 0xD000000000000018;
          *(_QWORD *)(v23 + 48) = 0x80000001CFB27D80;
          v25 = 1148;
        }
        else
        {
          if (v13 <= (71 - __clz(v22)) >> 3)
            goto LABEL_15;
          type metadata accessor for ASN1Error.Backing();
          v23 = swift_allocObject();
          v24 = v23;
          *(_BYTE *)(v23 + 16) = 4;
          *(_QWORD *)(v23 + 24) = 0xD000000000000031;
          *(_QWORD *)(v23 + 32) = 0x80000001CFB31130;
          *(_QWORD *)(v23 + 40) = 0xD000000000000018;
          *(_QWORD *)(v23 + 48) = 0x80000001CFB27D80;
          v25 = 1153;
        }
        *(_QWORD *)(v23 + 56) = v25;
        sub_1CF921074();
        swift_allocError();
        *v26 = v24;
        swift_willThrow();
      }
LABEL_15:
      swift_unknownObjectRelease();
      return;
    }
LABEL_18:
    __break(1u);
  }
}

uint64_t sub_1CFAA4F28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1CFB02A90();
  sub_1CFAA6BCC((uint64_t)v5, v1, v2, v3);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA4F80(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFAA6BCC(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CFAA4F8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1CFB02A90();
  sub_1CFAA6BCC((uint64_t)v5, v1, v2, v3);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA4FE0(uint64_t a1, uint64_t a2)
{
  return sub_1CF9D761C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1CFAA4FFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1CFB02A90();
  sub_1CFAA6BCC((uint64_t)v5, v1, v2, v3);
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA5068(uint64_t a1)
{
  uint64_t v1;

  sub_1CFAA6BCC(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  return sub_1CFB02A9C();
}

uint64_t sub_1CFAA509C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1CFB02A90();
  sub_1CFAA6BCC((uint64_t)v5, v1, v2, v3);
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA5104(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[4];
  v3 = a2[4];
  return sub_1CF9D761C(a1[1], a1[2], a1[3], a2[1], a2[2], a2[3]) & (v2 == v3);
}

uint64_t sub_1CFAA5144@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[96];

  sub_1CFAA2E68((uint64_t)v3);
  return sub_1CF931BA0((uint64_t)v3, a1, &qword_1EFBBDE48);
}

__n128 sub_1CFAA5184@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_1CFAA5198()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1CF9834F8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1CFAA51D0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[48];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v2 = v1;
  sub_1CFB02A9C();
  sub_1CFB02A9C();
  sub_1CF9210FC((uint64_t)(v2 + 2), (uint64_t)v17);
  sub_1CF9210FC((uint64_t)v17, (uint64_t)v18);
  v4 = v19;
  v5 = v20;
  v6 = v21;
  if ((v22 & 1) != 0)
  {
    sub_1CFB02A9C();
    v7 = v6 >> 1;
    result = v7 - v5;
    if (__OFSUB__(v7, v5))
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    result = sub_1CFB02A9C();
    v9 = __OFSUB__(v7, v5);
    v10 = v7 - v5;
    if (v10)
    {
      if ((v10 < 0) ^ v9 | (v10 == 0))
      {
LABEL_18:
        __break(1u);
        return result;
      }
      v11 = v4 + v5;
      do
      {
        ++v11;
        sub_1CFB02AA8();
        --v10;
      }
      while (v10);
    }
  }
  else
  {
    sub_1CFB02A9C();
    sub_1CFAA6BCC(a1, v4, v5, v6);
    sub_1CFB02A9C();
  }
  v12 = v2[10];
  v13 = v2[11] >> 1;
  result = v13 - v12;
  if (__OFSUB__(v13, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  v14 = v2[9];
  result = sub_1CFB02A9C();
  v15 = v13 - v12;
  if (v13 == v12)
    return result;
  if (v13 <= v12)
    goto LABEL_17;
  v16 = v14 + v12;
  do
  {
    ++v16;
    result = sub_1CFB02AA8();
    --v15;
  }
  while (v15);
  return result;
}

uint64_t sub_1CFAA52F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  char v13;

  v2 = v1;
  sub_1CF9210FC(v2, (uint64_t)v12);
  v4 = v12[1];
  v5 = v12[2];
  v6 = v12[3];
  if ((v13 & 1) == 0)
  {
    sub_1CFB02A9C();
    sub_1CFAA6BCC(a1, v4, v5, v6);
    return sub_1CFB02A9C();
  }
  sub_1CFB02A9C();
  v7 = v6 >> 1;
  result = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  result = sub_1CFB02A9C();
  v9 = __OFSUB__(v7, v5);
  v10 = v7 - v5;
  if (!v10)
    return result;
  if ((v10 < 0) ^ v9 | (v10 == 0))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v11 = v4 + v5;
  do
  {
    ++v11;
    result = sub_1CFB02AA8();
    --v10;
  }
  while (v10);
  return result;
}

uint64_t sub_1CFAA53B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[72];
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;

  sub_1CFB02A90();
  sub_1CF9210FC(v0, (uint64_t)v10);
  v1 = v11;
  v2 = v12;
  v3 = v13;
  if ((v14 & 1) == 0)
  {
    sub_1CFB02A9C();
    sub_1CFAA6BCC((uint64_t)v9, v1, v2, v3);
    sub_1CFB02A9C();
    return sub_1CFB02ACC();
  }
  sub_1CFB02A9C();
  v4 = v3 >> 1;
  result = v4 - v2;
  if (__OFSUB__(v4, v2))
  {
    __break(1u);
    goto LABEL_11;
  }
  result = sub_1CFB02A9C();
  v6 = __OFSUB__(v4, v2);
  v7 = v4 - v2;
  if (!v7)
    return sub_1CFB02ACC();
  if (!((v7 < 0) ^ v6 | (v7 == 0)))
  {
    v8 = v1 + v2;
    do
    {
      ++v8;
      sub_1CFB02AA8();
      --v7;
    }
    while (v7);
    return sub_1CFB02ACC();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA5490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CFAA6070(a1, a2, a3);
}

unint64_t sub_1CFAA54CC()
{
  unint64_t result;

  result = qword_1EFBC4950;
  if (!qword_1EFBC4950)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1DE90, &type metadata for ASN1NodeCollection);
    atomic_store(result, (unint64_t *)&qword_1EFBC4950);
  }
  return result;
}

unint64_t sub_1CFAA5514()
{
  unint64_t result;

  result = qword_1EFBC4958;
  if (!qword_1EFBC4958)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1DEF8, &type metadata for DER.ParseResult);
    atomic_store(result, (unint64_t *)&qword_1EFBC4958);
  }
  return result;
}

unint64_t sub_1CFAA555C()
{
  unint64_t result;

  result = qword_1EFBC4960;
  if (!qword_1EFBC4960)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1DF88, &type metadata for DER.ParserNode);
    atomic_store(result, (unint64_t *)&qword_1EFBC4960);
  }
  return result;
}

uint64_t sub_1CFAA55A0()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = v0[3];
  v8 = v0[2];
  v9 = v1;
  v2 = v0[5];
  v10 = v0[4];
  v11 = v2;
  v3 = v0[1];
  v6 = *v0;
  v7 = v3;
  sub_1CFB02A90();
  sub_1CFAA51D0((uint64_t)v5);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA55FC(uint64_t a1)
{
  return sub_1CFAA51D0(a1);
}

uint64_t sub_1CFAA563C()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v1 = v0[3];
  v8 = v0[2];
  v9 = v1;
  v2 = v0[5];
  v10 = v0[4];
  v11 = v2;
  v3 = v0[1];
  v6 = *v0;
  v7 = v3;
  sub_1CFB02A90();
  sub_1CFAA51D0((uint64_t)v5);
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAA5694(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[6];
  _OWORD v10[6];

  v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  v5 = a2[3];
  v10[2] = a2[2];
  v10[3] = v5;
  v6 = a2[5];
  v10[4] = a2[4];
  v10[5] = v6;
  v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_1CFAA6AA0((uint64_t)v9, (uint64_t)v10) & 1;
}

uint64_t sub_1CFAA56EC()
{
  uint64_t v0;
  uint64_t v2;

  sub_1CF9210FC(v0, (uint64_t)&v2);
  return sub_1CFAA53B0();
}

uint64_t sub_1CFAA5720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_1CF9210FC(v1, (uint64_t)&v4);
  return sub_1CFAA52F0(a1);
}

uint64_t sub_1CFAA575C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t result;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 40);
  sub_1CFB02A90();
  if ((v4 & 1) == 0)
  {
    sub_1CFB02A9C();
    sub_1CFAA6BCC((uint64_t)v10, v1, v2, v3);
    sub_1CFB02A9C();
    return sub_1CFB02ACC();
  }
  sub_1CFB02A9C();
  v5 = v3 >> 1;
  result = v5 - v2;
  if (__OFSUB__(v5, v2))
  {
    __break(1u);
    goto LABEL_11;
  }
  result = sub_1CFB02A9C();
  v7 = __OFSUB__(v5, v2);
  v8 = v5 - v2;
  if (!v8)
    return sub_1CFB02ACC();
  if (!((v8 < 0) ^ v7 | (v8 == 0)))
  {
    v9 = v1 + v2;
    do
    {
      ++v9;
      sub_1CFB02AA8();
      --v8;
    }
    while (v8);
    return sub_1CFB02ACC();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA5828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
      return sub_1CF9D7548(v4, v5, v6, v7, v8, v9);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    return 0;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a2 + 32);
  return sub_1CF9D761C(v4, v5, v6, v7, v8, v9) & (v11 == v12);
}

uint64_t sub_1CFAA5898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1CFAA66F0();
  return sub_1CF9210B8(a5);
}

uint64_t sub_1CFAA58C8(unint64_t a1, char a2, char a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1CF9A2B58(a1, a2, a3);
  v7 = *a4;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_29;
  while (1)
  {
    v10 = *(_QWORD *)(v7 + 16);
    v9 = *(_QWORD *)(v7 + 24);
    v11 = v10 + 1;
    if (v10 >= v9 >> 1)
    {
      result = (uint64_t)sub_1CF9559F8((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
      v7 = result;
    }
    *(_QWORD *)(v7 + 16) = v11;
    *(_BYTE *)(v7 + 32 + v10) = 0;
    *a4 = v7;
    v12 = *(_QWORD *)(v7 + 16);
    v13 = v12 - v11;
    if ((uint64_t)(v12 - v11) < 128)
    {
      if ((v13 & 0x8000000000000000) != 0)
        goto LABEL_34;
      if (v10 < v12)
      {
        *(_BYTE *)(v7 + 32 + v10) = v13;
        goto LABEL_27;
      }
    }
    else
    {
      if (v12 > v10)
      {
        v5 = 71 - __clz(v13);
        v4 = v5 >> 3;
        sub_1CFAA5EB0(v5 >> 3, v10 + 1, v12);
        v7 = *a4;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) != 0)
          goto LABEL_7;
        goto LABEL_32;
      }
      __break(1u);
    }
    __break(1u);
LABEL_32:
    result = (uint64_t)sub_1CFAA6034(v7);
    v7 = result;
LABEL_7:
    if (v10 >= *(_QWORD *)(v7 + 16))
      break;
    v14 = v7 + 32;
    *(_BYTE *)(v7 + 32 + v10) = (v5 >> 3) | 0x80;
    *a4 = v7;
    if (v10 + 1 < *(_QWORD *)(v7 + 16))
    {
      *(_BYTE *)(v14 + v10 + 1) = v13 >> (8 * ((v4 - 1) & 7));
      if (v4 == 1)
        goto LABEL_27;
      if (v10 + 2 < *(_QWORD *)(v7 + 16))
      {
        *(_BYTE *)(v14 + v10 + 2) = v13 >> (8 * ((v4 - 2) & 7));
        if (v4 == 2)
          goto LABEL_27;
        if (v10 + 3 < *(_QWORD *)(v7 + 16))
        {
          *(_BYTE *)(v14 + v10 + 3) = v13 >> (8 * ((v4 - 3) & 7));
          if (v4 == 3)
            goto LABEL_27;
          if (v10 + 4 < *(_QWORD *)(v7 + 16))
          {
            *(_BYTE *)(v14 + v10 + 4) = v13 >> (8 * ((v4 - 4) & 7));
            if (v4 == 4)
              goto LABEL_27;
            if (v10 + 5 < *(_QWORD *)(v7 + 16))
            {
              *(_BYTE *)(v14 + v10 + 5) = v13 >> (8 * ((v4 - 5) & 7));
              if (v4 == 5)
                goto LABEL_27;
              if (v10 + 6 < *(_QWORD *)(v7 + 16))
              {
                *(_BYTE *)(v14 + v10 + 6) = v13 >> (8 * ((v4 - 6) & 7));
                if (v4 == 6)
                  goto LABEL_27;
                if (v10 + 7 < *(_QWORD *)(v7 + 16))
                {
                  *(_BYTE *)(v14 + v10 + 7) = v13 >> (8 * ((v4 - 7) & 7));
                  if (v4 == 7)
                    goto LABEL_27;
                  if (v10 + 8 < *(_QWORD *)(v7 + 16))
                  {
                    *(_BYTE *)(v14 + v10 + 8) = v13 >> (v5 & 0x38);
LABEL_27:
                    *a4 = v7;
                    return result;
                  }
                }
              }
            }
          }
        }
      }
    }
    __break(1u);
LABEL_29:
    result = (uint64_t)sub_1CF9559F8(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
    v7 = result;
  }
  __break(1u);
LABEL_34:
  result = sub_1CFB025E0();
  __break(1u);
  return result;
}

uint64_t sub_1CFAA5B7C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(unsigned __int8 *)(a2 + 56);
  if ((v8 & 1) != 0)
  {
    j__swift_unknownObjectRetain(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v5, v6, v7, 1);
    sub_1CF97F4A0(v3, v4, v5, v6);
    return j__swift_unknownObjectRelease(v3, v4, v5, v6, v7, v8);
  }
  v34 = *(unsigned __int8 *)(a2 + 56);
  v35 = *(_QWORD *)(a2 + 48);
  v9 = v6 >> 1;
  if (v5 == v6 >> 1)
    return result;
  v40 = *(_QWORD *)(a2 + 24);
  j__swift_unknownObjectRetain(v3, v4, v5, v6, v7, 0);
  v10 = v4;
  v37 = v3;
  v38 = v6 & 0xFFFFFFFFFFFFFFFELL;
  result = swift_unknownObjectRetain();
  v36 = v4 + 112;
  v11 = v5;
  v32 = v6;
  v33 = v5;
  v12 = v6;
  v39 = v2;
  while (1)
  {
    if (v11 >= (uint64_t)(v12 >> 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v9 <= v11)
      goto LABEL_46;
    if (v12 >> 1 < v9)
      goto LABEL_47;
    v17 = v10 + 96 * v11;
    v18 = *(_QWORD *)v17;
    v19 = *(unsigned __int8 *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 24);
    v21 = v11 + 1;
    v22 = v12 & 1;
    v41 = *(_OWORD *)(v17 + 48);
    v42 = *(_OWORD *)(v17 + 32);
    if (*(_BYTE *)(v17 + 24))
      break;
    result = *(_QWORD *)(v17 + 64);
    if (!result)
      goto LABEL_57;
    v25 = v11 + 1;
    v10 = *(_QWORD *)(v17 + 72);
    v21 = *(_QWORD *)(v17 + 80);
    v13 = *(_QWORD *)(v17 + 88);
    v14 = swift_unknownObjectRetain();
    v23 = 0;
LABEL_6:
    v12 = v22 | v38;
    v43 = v18;
    v44 = v19;
    v45 = v14;
    v46 = v10;
    v47 = v21;
    v48 = v13;
    v49 = v23;
    v50 = v20 ^ 1;
    v51 = v42;
    v52 = v41;
    swift_unknownObjectRetain();
    v15 = v18;
    v16 = v53;
    result = sub_1CFAA5898(v15, v19, v20, v39, (uint64_t)&v43);
    v53 = v16;
    v11 = v25;
    v10 = v40;
    if (v25 == v9)
      goto LABEL_39;
  }
  v23 = *(_QWORD *)(v17 + 16);
  if (v21 == v9)
  {
    v24 = v9;
  }
  else
  {
    v26 = (_QWORD *)(v36 + 96 * v11);
    v24 = v11 + 1;
    do
    {
      if (v24 >= v9)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v23 >= *v26)
        goto LABEL_21;
      v27 = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_44;
      ++v24;
      v26 += 12;
    }
    while (v27 != v9);
    v24 = v9;
LABEL_21:
    if (v24 <= v11)
      goto LABEL_48;
    if (v24 < 0)
      goto LABEL_49;
  }
  v28 = v24 - v21;
  if (__OFSUB__(v24, v21))
    goto LABEL_50;
  if (v28 < 0)
    goto LABEL_51;
  v29 = v9 - v21;
  if (__OFSUB__(v9, v21))
    goto LABEL_52;
  if (!v28 || v29 < 0 || (v25 = v9, v29 >= v28))
  {
    v25 = v24;
    if (__OFADD__(v21, v28))
      goto LABEL_55;
    if (v9 < v24)
      goto LABEL_53;
  }
  if (v25 <= v11)
    goto LABEL_54;
  if (v21 == v24)
  {
LABEL_5:
    v13 = v22 | (2 * v24);
    v14 = swift_unknownObjectRetain();
    goto LABEL_6;
  }
  if (v21 < v24)
  {
    v30 = (uint64_t *)(v36 + 96 * v11);
    do
    {
      v31 = *v30;
      v30 += 12;
      if (v23 >= v31)
      {
        __break(1u);
        goto LABEL_43;
      }
      --v28;
    }
    while (v28);
    if (*(_QWORD *)(v10 + 96 * v21 + 16) == v23 + 1)
      goto LABEL_5;
    __break(1u);
LABEL_39:
    v3 = v37;
    v4 = v10;
    swift_unknownObjectRelease();
    v6 = v32;
    v5 = v33;
    v7 = v35;
    v8 = v34;
    return j__swift_unknownObjectRelease(v3, v4, v5, v6, v7, v8);
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA5EB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (result < 1)
    goto LABEL_28;
  v6 = a3;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = v8 - a3;
  if (__OFSUB__(v8, a3))
    goto LABEL_29;
  v3 = a2;
  v5 = result;
  if (v9 >= result)
    goto LABEL_13;
  v10 = result - v9;
  if (__OFSUB__(result, v9))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v10 < 0)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    result = (uint64_t)sub_1CF9559F8(0, v8 + 1, 1, (char *)v7);
    v7 = result;
LABEL_8:
    v11 = *(_QWORD *)(v7 + 16);
    do
    {
      v12 = *(_QWORD *)(v7 + 24);
      if (v11 >= v12 >> 1)
      {
        result = (uint64_t)sub_1CF9559F8((char *)(v12 > 1), v11 + 1, 1, (char *)v7);
        v7 = result;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      *(_BYTE *)(v7 + v11++ + 32) = 0;
      --v10;
    }
    while (v10);
    *v4 = v7;
    goto LABEL_13;
  }
  if (v10)
  {
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
      goto LABEL_8;
    goto LABEL_33;
  }
LABEL_13:
  if (v6 == v3)
    return result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_30;
  do
  {
    while (1)
    {
      if (v6 <= v3)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v13 = v6 - 1 + v5;
      if (__OFADD__(v6 - 1, v5))
        goto LABEL_24;
      v14 = v6 - 1;
      if (v6 < 1)
        goto LABEL_25;
      v15 = *(_QWORD *)(v7 + 16);
      if (v14 >= v15)
        goto LABEL_26;
      if (v13 < v15)
        break;
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      result = (uint64_t)sub_1CFAA6034(v7);
      v7 = result;
    }
    *(_BYTE *)(v7 + 32 + v13) = *(_BYTE *)(v7 + v6-- + 31);
  }
  while (v14 != v3);
  *v4 = v7;
  return result;
}

char *sub_1CFAA6034(uint64_t a1)
{
  return sub_1CF9559F8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1CFAA6048(_QWORD *a1)
{
  return sub_1CF955D24(0, a1[2], 0, a1);
}

char *sub_1CFAA605C(uint64_t a1)
{
  return sub_1CF955E58(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1CFAA6070(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  _QWORD *v15;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  int64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v35 = a3;
  v5 = v3[1];
  v31 = *v3;
  v6 = v3[2];
  v29 = *(_OWORD *)(v3 + 3);
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_43:
    *(_QWORD *)result = v31;
    *(_QWORD *)(result + 8) = v5;
    *(_QWORD *)(result + 16) = v6;
    *(_OWORD *)(result + 24) = v29;
    return v35;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = (unint64_t)v29 >> 1;
    if (v6 == (unint64_t)v29 >> 1)
    {
LABEL_5:
      v35 = 0;
      goto LABEL_43;
    }
    v27 = result;
    if (v6 >= (uint64_t)((unint64_t)v29 >> 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      v12 = (unint64_t)v29 >> 1;
      v35 = v4;
LABEL_42:
      swift_unknownObjectRetain();
      v6 = v12;
      result = v27;
      goto LABEL_43;
    }
    v8 = a2;
    v28 = v5 + 112;
    v4 = 1;
    while (v7 > v6)
    {
      v9 = (uint64_t *)(v5 + 96 * v6);
      v10 = *v9;
      v11 = *((_BYTE *)v9 + 8);
      v12 = v6 + 1;
      v33 = *((_OWORD *)v9 + 3);
      v34 = *((_OWORD *)v9 + 2);
      v32 = *((_BYTE *)v9 + 24);
      if (v32)
      {
        v13 = v9[2];
        v14 = (unint64_t)v29 >> 1;
        if (v12 != v7)
        {
          v15 = (_QWORD *)(v28 + 96 * v6);
          v14 = v6 + 1;
          do
          {
            if (v14 >= v7)
            {
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
            if (v13 >= *v15)
              goto LABEL_17;
            v16 = v14 + 1;
            if (__OFADD__(v14, 1))
              goto LABEL_46;
            ++v14;
            v15 += 12;
          }
          while (v16 != v7);
          v14 = (unint64_t)v29 >> 1;
LABEL_17:
          if (v14 <= v6)
            goto LABEL_48;
          if (v14 < 0)
            goto LABEL_49;
        }
        v17 = v14 - v12;
        if (__OFSUB__(v14, v12))
          goto LABEL_50;
        if (v17 < 0)
          goto LABEL_51;
        v18 = v7 - v12;
        if (__OFSUB__(v7, v12))
          goto LABEL_52;
        if (!v17 || v18 < 0 || (v19 = (unint64_t)v29 >> 1, v18 >= v17))
        {
          v19 = v14;
          if (__OFADD__(v12, v17))
            goto LABEL_55;
          if (v7 < v14)
            goto LABEL_53;
        }
        if (v19 <= v6)
          goto LABEL_54;
        if (v12 != v14)
        {
          if (v12 >= v14)
            goto LABEL_56;
          v20 = (uint64_t *)(v28 + 96 * v6);
          do
          {
            v21 = *v20;
            v20 += 12;
            if (v13 >= v21)
            {
              __break(1u);
              goto LABEL_45;
            }
            --v17;
          }
          while (v17);
          if (*(_QWORD *)(v5 + 96 * v12 + 16) != v13 + 1)
            goto LABEL_57;
        }
        v22 = v29 & 1 | (2 * v14);
        v23 = swift_unknownObjectRetain();
        v24 = v12;
        v12 = v19;
        v25 = v22;
        v26 = v5;
      }
      else
      {
        result = v9[8];
        if (!result)
          goto LABEL_59;
        v26 = v9[9];
        v30 = v9[10];
        v25 = v9[11];
        v23 = swift_unknownObjectRetain();
        v13 = 0;
        v24 = v30;
      }
      *(_QWORD *)v8 = v10;
      *(_BYTE *)(v8 + 8) = v11;
      *(_QWORD *)(v8 + 16) = v23;
      *(_QWORD *)(v8 + 24) = v26;
      *(_QWORD *)(v8 + 32) = v24;
      *(_QWORD *)(v8 + 40) = v25;
      *(_QWORD *)(v8 + 48) = v13;
      *(_BYTE *)(v8 + 56) = v32 ^ 1;
      *(_OWORD *)(v8 + 64) = v34;
      *(_OWORD *)(v8 + 80) = v33;
      if (v4 == v35)
        goto LABEL_42;
      if (v12 == v7)
        goto LABEL_41;
      ++v4;
      v8 += 96;
      result = swift_unknownObjectRetain();
      v6 = v12;
      if (v12 >= v7)
        goto LABEL_40;
    }
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA6334(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA6530(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x1CFAA6590);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1CFAA6548 + dword_1CFAA6594[a4 >> 62]))(v5);
}

uint64_t sub_1CFAA65A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_1CFAA65B4 + dword_1CFAA665C[a4 >> 62]))();
}

uint64_t sub_1CFAA65C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x1CFAA6654);
  }
  return ((uint64_t (*)(void))((char *)&loc_1CFAA6604 + dword_1CFAA666C[a3]))();
}

uint64_t sub_1CFAA667C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = a4 >> 1;
  if (a4 >> 1 == a3)
  {
LABEL_7:
    *a6 = result;
    a6[1] = a2;
    a6[2] = a3;
    a6[3] = a4;
    a6[4] = a5;
  }
  else
  {
    v7 = (_QWORD *)(a2 + 96 * a3 + 16);
    v8 = a3;
    do
    {
      if (v8 >= v6)
      {
        __break(1u);
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
      if (*v7 <= a5)
        goto LABEL_9;
      ++v8;
      v7 += 12;
    }
    while (v6 != v8);
    if (*(_QWORD *)(a2 + 96 * a3 + 16) == a5 + 1)
      goto LABEL_7;
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_1CFAA66F0(unint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  char *v16;

  sub_1CF9A2B58(a1, a2, a3);
  v9 = *(char **)a4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_32;
  while (1)
  {
    v11 = *((_QWORD *)v9 + 2);
    v10 = *((_QWORD *)v9 + 3);
    v12 = v11 + 1;
    if (v11 >= v10 >> 1)
      v9 = sub_1CF9559F8((char *)(v10 > 1), v11 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v9[v11 + 32] = 0;
    *(_QWORD *)a4 = v9;
    result = sub_1CFAA5B7C(a4, a5);
    if (v5)
      return result;
    v9 = *(char **)a4;
    v14 = *(_QWORD *)(*(_QWORD *)a4 + 16);
    v15 = v14 - v12;
    if ((uint64_t)(v14 - v12) <= 127)
    {
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_38;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      if (v14 > v11)
      {
        v6 = 71 - __clz(v15);
        a5 = v6 >> 3;
        sub_1CFAA5EB0(v6 >> 3, v11 + 1, v14);
        v9 = *(char **)a4;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) != 0)
          goto LABEL_8;
        goto LABEL_36;
      }
      __break(1u);
    }
    result = (uint64_t)sub_1CFAA6034((uint64_t)v9);
    v9 = (char *)result;
LABEL_27:
    if (v11 < *((_QWORD *)v9 + 2))
    {
      v9[v11 + 32] = v15;
      goto LABEL_29;
    }
    __break(1u);
LABEL_36:
    result = (uint64_t)sub_1CFAA6034((uint64_t)v9);
    v9 = (char *)result;
LABEL_8:
    if (v11 >= *((_QWORD *)v9 + 2))
      break;
    v16 = v9 + 32;
    v9[v11 + 32] = (v6 >> 3) | 0x80;
    *(_QWORD *)a4 = v9;
    if (v11 + 1 < *((_QWORD *)v9 + 2))
    {
      v16[v11 + 1] = v15 >> (8 * ((a5 - 1) & 7));
      if (a5 == 1)
        goto LABEL_29;
      if (v11 + 2 < *((_QWORD *)v9 + 2))
      {
        v16[v11 + 2] = v15 >> (8 * ((a5 - 2) & 7));
        if (a5 == 2)
          goto LABEL_29;
        if (v11 + 3 < *((_QWORD *)v9 + 2))
        {
          v16[v11 + 3] = v15 >> (8 * ((a5 - 3) & 7));
          if (a5 == 3)
            goto LABEL_29;
          if (v11 + 4 < *((_QWORD *)v9 + 2))
          {
            v16[v11 + 4] = v15 >> (8 * ((a5 - 4) & 7));
            if (a5 == 4)
              goto LABEL_29;
            if (v11 + 5 < *((_QWORD *)v9 + 2))
            {
              v16[v11 + 5] = v15 >> (8 * ((a5 - 5) & 7));
              if (a5 == 5)
                goto LABEL_29;
              if (v11 + 6 < *((_QWORD *)v9 + 2))
              {
                v16[v11 + 6] = v15 >> (8 * ((a5 - 6) & 7));
                if (a5 == 6)
                  goto LABEL_29;
                if (v11 + 7 < *((_QWORD *)v9 + 2))
                {
                  v16[v11 + 7] = v15 >> (8 * ((a5 - 7) & 7));
                  if (a5 == 7)
                    goto LABEL_29;
                  if (v11 + 8 < *((_QWORD *)v9 + 2))
                  {
                    v16[v11 + 8] = v15 >> (v6 & 0x38);
LABEL_29:
                    *(_QWORD *)a4 = v9;
                    return result;
                  }
                }
              }
            }
          }
        }
      }
    }
    __break(1u);
LABEL_32:
    v9 = sub_1CF9559F8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
  }
  __break(1u);
LABEL_38:
  sub_1CF9210B8(a5);
  result = sub_1CFB025E0();
  __break(1u);
  return result;
}

uint64_t sub_1CFAA69F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0
    && (sub_1CF9D7548(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56)) & 1) != 0)
  {
    v4 = *(_QWORD *)(a2 + 64);
    if (*(_QWORD *)(a1 + 64))
    {
      if (v4
        && (sub_1CF9D7548(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88)) & 1) != 0)
      {
        return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1CFAA6AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;
  _BYTE v12[48];
  _BYTE v13[48];
  _BYTE v14[8];
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v20[8];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    goto LABEL_8;
  sub_1CF9210FC(a1 + 16, (uint64_t)v13);
  sub_1CF9210FC(a2 + 16, (uint64_t)v12);
  sub_1CF9210FC((uint64_t)v13, (uint64_t)v14);
  v4 = v15;
  v5 = v16;
  v6 = v17;
  if ((v19 & 1) != 0)
  {
    sub_1CF9210FC((uint64_t)v12, (uint64_t)v20);
    if ((v25 & 1) != 0 && (sub_1CF9D7548(v4, v5, v6, v21, v22, v23) & 1) != 0)
    {
LABEL_12:
      v8 = sub_1CF9D7548(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88));
      return v8 & 1;
    }
    goto LABEL_8;
  }
  v7 = v18;
  sub_1CF9210FC((uint64_t)v12, (uint64_t)v20);
  if ((v25 & 1) != 0)
  {
LABEL_8:
    v8 = 0;
    return v8 & 1;
  }
  v10 = v24;
  v11 = sub_1CF9D761C(v4, v5, v6, v21, v22, v23);
  v8 = 0;
  if ((v11 & 1) != 0 && v7 == v10)
    goto LABEL_12;
  return v8 & 1;
}

uint64_t sub_1CFAA6BCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v4 = a4 >> 1;
  result = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_25:
    __break(1u);
    return result;
  }
  v6 = a3;
  result = sub_1CFB02A9C();
  if (v4 != v6)
  {
    v21 = v4;
    while (v6 < v4)
    {
      v7 = (_QWORD *)(a2 + 96 * v6);
      v8 = v7[5];
      v9 = v7[6];
      v10 = v7[10];
      v23 = v7[9];
      v24 = v7[11];
      v12 = v7[7];
      v11 = v7[8];
      sub_1CFB02A9C();
      sub_1CFB02A9C();
      sub_1CFB02A9C();
      sub_1CFB02AA8();
      v13 = v12 >> 1;
      result = (v12 >> 1) - v9;
      if (__OFSUB__(v12 >> 1, v9))
        goto LABEL_21;
      result = sub_1CFB02A9C();
      v14 = __OFSUB__(v13, v9);
      v15 = v13 - v9;
      if (v15)
      {
        if ((v15 < 0) ^ v14 | (v15 == 0))
          goto LABEL_23;
        v16 = v8 + v9;
        do
        {
          ++v16;
          sub_1CFB02AA8();
          --v15;
        }
        while (v15);
      }
      if (v11)
      {
        sub_1CFB02AA8();
        v17 = v24 >> 1;
        result = (v24 >> 1) - v10;
        if (__OFSUB__(v24 >> 1, v10))
          goto LABEL_22;
        result = sub_1CFB02A9C();
        v18 = __OFSUB__(v17, v10);
        v19 = v17 - v10;
        if (v19)
        {
          if ((v19 < 0) ^ v18 | (v19 == 0))
            goto LABEL_24;
          v20 = v23 + v10;
          do
          {
            ++v20;
            result = sub_1CFB02AA8();
            --v19;
          }
          while (v19);
        }
      }
      else
      {
        result = sub_1CFB02AA8();
      }
      ++v6;
      v4 = v21;
      if (v6 == v21)
        return result;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1CFAA6D34(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

void sub_1CFAA6D5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  int64_t v5;
  int64_t v6;
  _QWORD *v7;

  v5 = a4 >> 1;
  v6 = a3;
  if (a4 >> 1 != a3)
  {
    v7 = (_QWORD *)(a2 + 96 * a3 + 16);
    v6 = a3;
    while (1)
    {
      if (v6 >= v5)
      {
        __break(1u);
        goto LABEL_13;
      }
      if (*(_QWORD *)(a5 + 16) >= *v7)
        break;
      ++v6;
      v7 += 12;
      if (v5 == v6)
      {
        v6 = a4 >> 1;
        break;
      }
    }
    if (v6 >= a3)
      goto LABEL_8;
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  if (v5 < a3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v5 < v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v6 < 0)
LABEL_16:
    __break(1u);
}

uint64_t sub_1CFAA6DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  char v35;
  BOOL v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  _BYTE v49[32];
  _QWORD v50[5];
  int v51;

  result = sub_1CFAA438C(a1, a2, a3, a4);
  if (!v5)
  {
    v11 = v10;
    v12 = v10 >> 1;
    if (v9 == v10 >> 1)
    {
      __break(1u);
    }
    else if (v9 < (uint64_t)(v10 >> 1))
    {
      v13 = result;
      v14 = v8;
      v15 = (__int128 *)(v8 + 96 * v9);
      v16 = v15[1];
      v44 = *v15;
      v45 = v16;
      v17 = v15[2];
      v18 = v15[3];
      v19 = v15[5];
      v48[0] = v15[4];
      v48[1] = v19;
      v46 = v17;
      v47 = v18;
      v20 = v9 + 1;
      v51 = BYTE8(v45);
      if ((BYTE8(v45) & 1) != 0)
      {
        sub_1CFAA6D5C(result, v8, v9 + 1, v10, (uint64_t)&v44);
        v41 = v29;
        result = (v28 >> 1) - v27;
        if (__OFSUB__(v28 >> 1, v27))
        {
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
        v30 = v26;
        v31 = v27;
        v32 = v28;
        sub_1CFAA3458(result, v13, v14, v20, v11);
        v37 = v33;
        v20 = v34;
        sub_1CFAA667C(v41, v30, v31, v32, v45, v42);
        v21 = v42[0];
        v39 = v42[1];
        v22 = v42[2];
        v38 = v43;
        v40 = v46;
        v24 = *((_QWORD *)&v47 + 1);
        v25 = v47;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        result = swift_unknownObjectRelease();
        v12 = v37 >> 1;
      }
      else
      {
        sub_1CF931BA0((uint64_t)v48, (uint64_t)v49, &qword_1EFBC4968);
        result = sub_1CF931BA0((uint64_t)v49, (uint64_t)v50, &qword_1EFBC4968);
        v21 = v50[0];
        if (!v50[0])
        {
LABEL_18:
          __break(1u);
          return result;
        }
        v22 = v50[2];
        v39 = v50[1];
        *((_QWORD *)&v23 + 1) = *((_QWORD *)&v46 + 1);
        v40 = v46;
        v24 = *((_QWORD *)&v47 + 1);
        v25 = v47;
        *(_QWORD *)&v23 = v50[3];
        v38 = v23;
        sub_1CFAA6D34((uint64_t)v49);
        swift_unknownObjectRetain();
        result = swift_unknownObjectRelease();
      }
      if (!__OFSUB__(v12, v20))
      {
        if (v12 == v20)
        {
          v35 = BYTE8(v44);
          v36 = (v51 & 1) == 0;
          *(_QWORD *)a5 = v44;
          *(_BYTE *)(a5 + 8) = v35;
          *(_QWORD *)(a5 + 16) = v21;
          *(_QWORD *)(a5 + 24) = v39;
          *(_QWORD *)(a5 + 32) = v22;
          *(_OWORD *)(a5 + 40) = v38;
          *(_BYTE *)(a5 + 56) = v36;
          *(_OWORD *)(a5 + 64) = v40;
          *(_QWORD *)(a5 + 80) = v25;
          *(_QWORD *)(a5 + 88) = v24;
          return result;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_15;
  }
  return result;
}

ValueMetadata *type metadata accessor for DER()
{
  return &type metadata for DER;
}

uint64_t destroy for ASN1Node.Content(uint64_t a1)
{
  return j__swift_unknownObjectRelease(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t initializeWithCopy for ASN1Node.Content(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((unsigned __int8 *)a2 + 40);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t *assignWithCopy for ASN1Node.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((unsigned __int8 *)a2 + 40);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6, v7, v8);
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = a1[3];
  v13 = a1[4];
  v14 = *((unsigned __int8 *)a1 + 40);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  *((_BYTE *)a1 + 40) = v8;
  j__swift_unknownObjectRelease(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for ASN1Node.Content(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *a1;
  v7 = a1[1];
  v6 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = *((unsigned __int8 *)a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  a1[4] = v3;
  *((_BYTE *)a1 + 40) = v4;
  j__swift_unknownObjectRelease(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1Node.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1Node.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CFAA7218(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1CFAA7220(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASN1Node.Content()
{
  return &type metadata for ASN1Node.Content;
}

uint64_t destroy for DER.ParserNode()
{
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for DER.ParserNode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v3;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DER.ParserNode(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for DER.ParserNode(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_unknownObjectRelease();
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  swift_unknownObjectRelease();
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DER.ParserNode(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DER.ParserNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DER.ParserNode()
{
  return &type metadata for DER.ParserNode;
}

ValueMetadata *type metadata accessor for DER.ParseResult()
{
  return &type metadata for DER.ParseResult;
}

ValueMetadata *type metadata accessor for ASN1NodeCollection()
{
  return &type metadata for ASN1NodeCollection;
}

uint64_t destroy for ASN1Node(uint64_t a1)
{
  j__swift_unknownObjectRelease(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ASN1Node(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(unsigned __int8 *)(a2 + 56);
  j__swift_unknownObjectRetain(v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASN1Node(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(unsigned __int8 *)(a2 + 56);
  j__swift_unknownObjectRetain(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(unsigned __int8 *)(a1 + 56);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  j__swift_unknownObjectRelease(v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for ASN1Node(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(unsigned __int8 *)(a1 + 56);
  v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  j__swift_unknownObjectRelease(v6, v7, v8, v9, v10, v11);
  swift_unknownObjectRelease();
  v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1Node(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1Node(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1Node()
{
  return &type metadata for ASN1Node;
}

ValueMetadata *type metadata accessor for ASN1NodeCollection.Iterator()
{
  return &type metadata for ASN1NodeCollection.Iterator;
}

unint64_t sub_1CFAA77A4()
{
  unint64_t result;

  result = qword_1EFBC4970;
  if (!qword_1EFBC4970)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1E048, &type metadata for ASN1Node);
    atomic_store(result, (unint64_t *)&qword_1EFBC4970);
  }
  return result;
}

unint64_t sub_1CFAA77EC()
{
  unint64_t result;

  result = qword_1EFBC4978;
  if (!qword_1EFBC4978)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1E0B0, &type metadata for ASN1Node.Content);
    atomic_store(result, (unint64_t *)&qword_1EFBC4978);
  }
  return result;
}

uint64_t IdentityProofingAttributeConfigHelper.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t IdentityProofingAttributeConfigHelper.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CFAA784C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4980);
  MEMORY[0x1E0C80A78](v3, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4988);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15, v16, v17, v18, v19, v20, v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4990);
  v25 = *(_QWORD *)(v24 - 8);
  v33 = MEMORY[0x1E0C80A78](v24, v26, v27, v28, v29, v30, v31, v32);
  v35 = (char *)&v48 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33, v36, v37, v38, v39, v40, v41, v42);
  v44 = (char *)&v48 - v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4998);
  sub_1CFB011F4();
  sub_1CFB01200();
  v45 = *(void (**)(char *, uint64_t))(v25 + 8);
  v45(v35, v24);
  v50 = a1;
  v51 = v49;
  sub_1CF9CFF34();
  sub_1CFAA7AB0();
  sub_1CFB019A4();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v45(v44, v24);
    sub_1CFAA7AFC((uint64_t)v12);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v23, v12, v13);
    swift_getKeyPath();
    sub_1CFB0120C();
    swift_release();
    v46 = MEMORY[0x1D17D8818](v50, v51, v52, v53);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    v45(v44, v24);
  }
  return v46;
}

unint64_t sub_1CFAA7AB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC49A0;
  if (!qword_1EFBC49A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4990);
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DF1F60], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC49A0);
  }
  return result;
}

uint64_t sub_1CFAA7AFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t IdentityProofingAttributeConfigHelper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t IdentityProofingAttributeConfigHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IdentityProofingAttributeConfigHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for IdentityProofingAttributeConfigHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityProofingAttributeConfigHelper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of IdentityProofingAttributeConfigHelper.fetchAttributeID(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

void sub_1CFAA7B94(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1CFAA7BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1CFB00D14();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_1CFAA7C30()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v4;

  v4 = 508;
  v0 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  sub_1CF923828();
  v1 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000013, 0x80000001CFB248C0, &v4, 0, v0, 0xD000000000000067, 0x80000001CFB31240, v2, 0xD000000000000021, 0x80000001CFB1E170, 20);
  return v1;
}

id IdentityProofingDataSharingClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id IdentityProofingDataSharingClient.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  int v21;
  uint64_t v22;
  objc_super v24;
  uint64_t v25;
  __int128 aBlock;
  __int128 v27;
  uint64_t (*v28)(void *);
  uint64_t v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxy;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxy] = 0;
  v3 = OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_connection;
  v4 = (void *)objc_opt_self();
  v5 = v0;
  v6 = objc_msgSend(v4, sel_interfaceWithProtocol_, &unk_1EFBF0418);
  aBlock = 0u;
  v27 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC49B8);
  swift_allocObject();
  v7 = sub_1CFAA95D4(0xD000000000000035, 0x80000001CFB29700, (uint64_t)v6, 0, 0, 0, 0, 0, (uint64_t)&aBlock, (uint64_t)sub_1CFAA7C30, 0, (uint64_t)&block_descriptor_77, (uint64_t)&block_descriptor_74);

  *(_QWORD *)&v1[v3] = v7;
  v8 = (uint64_t)&v5[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError];
  LOWORD(aBlock) = 511;
  v9 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001BLL, 0x80000001CFB2EAF0, (__int16 *)&aBlock, 0, v9, 0xD000000000000067, 0x80000001CFB31240, v8, 0xD000000000000021, 0x80000001CFB1E170, 23);
  v10 = (void *)v7[2];
  v11 = OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_serverConnection;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_serverConnection] = v10;
  LOWORD(aBlock) = 508;
  type metadata accessor for IdentityProofingDataSharingDisconnectionHandler();
  swift_allocObject();
  v12 = v10;
  *(_QWORD *)&v5[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_disconnectHandler] = sub_1CF927A38(0xD000000000000021, 0x80000001CFB1E170, (unsigned __int16 *)&aBlock);
  v13 = v12;
  v14 = objc_msgSend(v4, sel_interfaceWithProtocol_, &unk_1EFBF0418);
  objc_msgSend(v13, sel_setRemoteObjectInterface_, v14);

  v15 = *(void **)&v5[v11];
  swift_retain();
  v16 = v15;
  sub_1CF927D98(v16);
  swift_release();

  v17 = *(void **)&v5[v11];
  v28 = sub_1CFAA8078;
  v29 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v27 = sub_1CFAA7B94;
  *((_QWORD *)&v27 + 1) = &block_descriptor_13;
  v18 = _Block_copy(&aBlock);
  v19 = v17;
  v20 = objc_msgSend(v19, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_1CFB02298();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9049F0);
  v21 = swift_dynamicCast();
  v22 = v25;
  if (!v21)
    v22 = 0;
  *(_QWORD *)&v1[v2] = v22;

  swift_unknownObjectRelease();
  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for IdentityProofingDataSharingClient();
  return objc_msgSendSuper2(&v24, sel_init);
}

uint64_t sub_1CFAA8078(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;

  v2 = sub_1CFB012CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4, v5, v6, v7, v8, v9, v10);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  v14 = a1;
  v15 = a1;
  v16 = sub_1CFB012B4();
  v17 = sub_1CFB01FC8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136315138;
    v23[0] = v18 + 4;
    swift_getErrorValue();
    v20 = sub_1CFB02A24();
    v23[1] = sub_1CF9C974C(v20, v21, &v24);
    sub_1CFB021C0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CF917000, v16, v17, "error: IdentityProofingDataSharingClient init %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17DA6E4](v19, -1, -1);
    MEMORY[0x1D17DA6E4](v18, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

uint64_t sub_1CFAA82C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFAA82E0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC49E0;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_1CFA524E8;
  return sub_1CFB028BC();
}

uint64_t sub_1CFAA83AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFAA83C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1CFA52658;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFAA845C;
  v3[3] = &block_descriptor_70;
  v3[4] = v2;
  objc_msgSend(v1, sel_fetchUserConsentWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFAA845C(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1CFAA85F8(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFAA8670;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFAA8670(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t))(v6 + 16))(v6);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_1CFAA8718(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  _QWORD aBlock[7];

  v4 = v3;
  v56 = a1;
  v7 = sub_1CFB012CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9, v10, v11, v12, v13, v14, v15);
  v17 = (char *)&aBlock[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CFB00F9C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20, v21, v22, v23, v24, v25, v26);
  v28 = (char *)&aBlock[-1] - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void **)&v4[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxy];
  if (v29)
  {
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v30 = sub_1CFB00F60();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
    v33 = swift_allocObject();
    v34 = swift_weakInit();
    MEMORY[0x1E0C80A78](v34, v35, v36, v37, v38, v39, v40, v41);
    *(&v56 - 6) = v33;
    *(&v56 - 5) = v30;
    *(&v56 - 4) = v32;
    *(&v56 - 3) = (uint64_t)a2;
    *(&v56 - 2) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = v4;
    v42[3] = v30;
    v42[4] = v32;
    v42[5] = a2;
    v42[6] = a3;
    aBlock[4] = sub_1CFAA998C;
    aBlock[5] = v42;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4C48C;
    aBlock[3] = &block_descriptor_9;
    v43 = _Block_copy(aBlock);
    v44 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v29, sel_didChangeUserConsent_completion_, v56, v43);
    _Block_release(v43);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v45, v7);
    v46 = sub_1CFB012B4();
    v47 = sub_1CFB01FC8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_1CF917000, v46, v47, "Cannot invoke didChangeUserConsent because no proxy is set", v48, 2u);
      MEMORY[0x1D17DA6E4](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    v49 = *(_WORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError];
    v50 = *(_QWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 8];
    v51 = *(_QWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 16];
    v52 = *(void **)&v4[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 24];
    sub_1CF923828();
    v53 = (void *)swift_allocError();
    *(_WORD *)v54 = v49;
    *(_QWORD *)(v54 + 8) = v50;
    *(_QWORD *)(v54 + 16) = v51;
    *(_QWORD *)(v54 + 24) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55 = v52;
    a2(v53);

  }
}

uint64_t sub_1CFAA8AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;

  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC3B60);
  sub_1CFB02040();
  swift_release();
  if (v8)
    sub_1CF99BC44(v8);
  return a5(a1);
}

uint64_t sub_1CFAA8BE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CFAA8BF8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_connection);
  v2 = (_QWORD *)swift_task_alloc();
  v0[3] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EFBC4A00;
  v2[4] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_1CFAA8CC4;
  return sub_1CFB028BC();
}

uint64_t sub_1CFAA8CC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(unsigned __int8 *)(v2 + 56));
}

uint64_t sub_1CFAA8D48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1CFAA8D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v3;
  return swift_task_switch();
}

uint64_t sub_1CFAA8DA4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[16];
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_1CFAA8E38;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1CFAA8E98;
  v3[3] = &block_descriptor_65;
  v3[4] = v2;
  objc_msgSend(v1, sel_checkUserConsentWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1CFAA8E38()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CFAA8E98(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904E60);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1CFAA9034(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1CFAA90AC;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_1CFAA90AC(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1CFB00D14();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

id IdentityProofingDataSharingClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IdentityProofingDataSharingClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CFAA9208(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1CF933384;
  return v6();
}

uint64_t sub_1CFAA925C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1CF933384;
  return v7();
}

uint64_t sub_1CFAA92B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CFB01DD0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CFB01DC4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CF931B1C(a1, &qword_1ED905098);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CFB01D7C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1CFAA93FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFAA9418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1CFA54964;
  return sub_1CFB02994();
}

uint64_t sub_1CFAA94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CFAA94E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1CFA5473C;
  return sub_1CFB02994();
}

_QWORD *sub_1CFAA9594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1CFAA95D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t)&block_descriptor_83, (uint64_t)&block_descriptor_80_0);
}

_QWORD *sub_1CFAA95D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v13;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a7;
  v45 = a6;
  v18 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v19 = (void *)sub_1CFB01A04();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithMachServiceName_options_, v19, 4096);

  v13[2] = v20;
  objc_msgSend(v20, sel_setExportedInterface_, a8);
  v46 = a9;
  sub_1CFAAA138(a9, (uint64_t)&aBlock);
  v21 = v50;
  if (v50)
  {
    v22 = __swift_project_boxed_opaque_existential_1(&aBlock, v50);
    v23 = *(_QWORD *)(v21 - 8);
    MEMORY[0x1E0C80A78](v22, v22, v24, v25, v26, v27, v28, v29);
    v31 = (char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v31);
    v32 = v20;
    v33 = sub_1CFB028A4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v31, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  else
  {
    v34 = v20;
    v33 = 0;
  }
  objc_msgSend(v20, sel_setExportedObject_, v33);

  swift_unknownObjectRelease();
  v35 = (void *)v13[2];
  objc_msgSend(v35, sel_setRemoteObjectInterface_, a3);
  objc_msgSend(v35, sel_activate);
  v36 = MEMORY[0x1E0C809B0];
  if (a4)
  {
    v51 = a4;
    v52 = a5;
    aBlock = MEMORY[0x1E0C809B0];
    v48 = 1107296256;
    v49 = sub_1CFA1D3E8;
    v50 = a12;
    v37 = _Block_copy(&aBlock);
    v38 = v35;
    sub_1CF99D844(a4);
    swift_release();
  }
  else
  {
    v39 = v35;
    v37 = 0;
  }
  objc_msgSend(v35, sel_setInvalidationHandler_, v37);
  _Block_release(v37);

  v40 = (void *)v13[2];
  if (v45)
  {
    v51 = v45;
    v52 = v44;
    aBlock = v36;
    v48 = 1107296256;
    v49 = sub_1CFA1D3E8;
    v50 = a13;
    v41 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v40, sel_setInterruptionHandler_, v41);
  _Block_release(v41);
  sub_1CF931B1C(v46, (uint64_t *)&unk_1ED904DA0);
  v13[3] = a10;
  v13[4] = a11;
  return v13;
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t type metadata accessor for IdentityProofingDataSharingClient()
{
  return objc_opt_self();
}

uint64_t sub_1CFAA98C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF92F754;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC49E8 + dword_1EFBC49E8))(a1, v4, v5, v6);
}

uint64_t sub_1CFAA9944()
{
  uint64_t *v0;

  return sub_1CFA454E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1CFAA9950()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CFAA9974@<X0>(BOOL *a1@<X8>)
{
  return sub_1CFAAA02C(a1);
}

uint64_t sub_1CFAA9990(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFBC4A08 + dword_1EFBC4A08))(a1, v4, v5, v6);
}

uint64_t sub_1CFAA9A10()
{
  uint64_t *v0;

  return sub_1CFA45500(v0[2], v0[3], v0[4]);
}

uint64_t method lookup function for IdentityProofingDataSharingClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IdentityProofingDataSharingClient.fetchUserConsent()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA450E8;
  return v5();
}

uint64_t dispatch thunk of IdentityProofingDataSharingClient.didChangeUserConsent(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of IdentityProofingDataSharingClient.checkUserConsent()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CFA450E8;
  return v5();
}

uint64_t sub_1CFAA9B18()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF92F754;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC4A28 + dword_1EFBC4A28))(v2, v3);
}

uint64_t sub_1CFAA9B84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFAA9BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CF933384;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFBC4A48 + dword_1EFBC4A48))(a1, v4);
}

uint64_t sub_1CFAA9C18(uint64_t a1, char *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  void *v43;
  id v44;
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _QWORD aBlock[7];

  v61 = a1;
  v5 = sub_1CFB012CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CFB00F9C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18, v19, v20, v21, v22, v23, v24);
  v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a3;
  v28 = *(void **)&a2[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxy];
  if (v28)
  {
    v60 = a2;
    _Block_copy(a3);
    swift_unknownObjectRetain();
    sub_1CFB00F90();
    v29 = sub_1CFB00F60();
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v16);
    v32 = swift_allocObject();
    v33 = swift_weakInit();
    MEMORY[0x1E0C80A78](v33, v34, v35, v36, v37, v38, v39, v40);
    *(&v59 - 6) = v32;
    *(&v59 - 5) = v29;
    *(&v59 - 4) = v31;
    *(&v59 - 3) = (uint64_t)sub_1CFA591D8;
    *(&v59 - 2) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED904B30);
    sub_1CFB02040();
    swift_release();
    v41 = (_QWORD *)swift_allocObject();
    v42 = v60;
    v41[2] = v60;
    v41[3] = v29;
    v41[4] = v31;
    v41[5] = sub_1CFA591D8;
    v41[6] = v27;
    aBlock[4] = sub_1CFAA998C;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CFA4C48C;
    aBlock[3] = &block_descriptor_47;
    v43 = _Block_copy(aBlock);
    v44 = v42;
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_didChangeUserConsent_completion_, v61, v43);
    _Block_release(v43);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    v46 = a2;
    _Block_copy(a3);
    if (qword_1ED9054E8 != -1)
      swift_once();
    v47 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v47, v5);
    v48 = sub_1CFB012B4();
    v49 = sub_1CFB01FC8();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_1CF917000, v48, v49, "Cannot invoke didChangeUserConsent because no proxy is set", v50, 2u);
      MEMORY[0x1D17DA6E4](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    v51 = *(_WORD *)&v46[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError];
    v52 = *(_QWORD *)&v46[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 8];
    v53 = *(_QWORD *)&v46[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 16];
    v54 = *(void **)&v46[OBJC_IVAR____TtC13CoreIDVShared33IdentityProofingDataSharingClient_remoteObjectProxyError + 24];
    sub_1CF923828();
    v55 = (void *)swift_allocError();
    *(_WORD *)v56 = v51;
    *(_QWORD *)(v56 + 8) = v52;
    *(_QWORD *)(v56 + 16) = v53;
    *(_QWORD *)(v56 + 24) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57 = v54;
    v58 = (void *)sub_1CFB00D14();
    ((void (**)(_QWORD, void *))a3)[2](a3, v58);

    return swift_release();
  }
}

uint64_t sub_1CFAAA008()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1CFAAA02C@<X0>(BOOL *a1@<X8>)
{
  uint64_t *v1;

  return sub_1CF928458(v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CFAAA084(uint64_t a1)
{
  uint64_t v1;

  return sub_1CFAA8AA0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1CFAAA098()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CF933384;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EFBC4A58 + dword_1EFBC4A58))(v2, v3);
}

uint64_t sub_1CFAAA104(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47434(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CFAAA110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF928584(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CFAAA12C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CFA47418(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CFAAA138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED904DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HashDigest.algorithm.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  swift_unknownObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 HashDigest.algorithm.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  result = v4;
  *(_OWORD *)v1 = v5;
  *(__n128 *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*HashDigest.algorithm.modify())()
{
  return nullsub_1;
}

uint64_t HashDigest.digest.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1CF9239E0(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t HashDigest.digest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1CF923A24(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*HashDigest.digest.modify())()
{
  return nullsub_1;
}

uint64_t HashDigest.equalsHash(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v12;
  char v13;

  v6 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v8 = AlgorithmIdentifier.hash(_:)(a1, a2);
  v10 = v9;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
    return 0;
  sub_1CF9421E8(v6, v7);
  v13 = v12;
  sub_1CF923A24(v8, v10);
  return v13 & 1;
}

uint64_t destroy for HashDigest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return sub_1CF923A24(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for HashDigest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1CF9239E0(v4, v5);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

_QWORD *assignWithCopy for HashDigest(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v5 = a2[5];
  v4 = a2[6];
  sub_1CF9239E0(v5, v4);
  v6 = a1[5];
  v7 = a1[6];
  a1[5] = v5;
  a1[6] = v4;
  sub_1CF923A24(v6, v7);
  return a1;
}

uint64_t assignWithTake for HashDigest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1CF923A24(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for HashDigest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HashDigest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HashDigest()
{
  return &type metadata for HashDigest;
}

void sub_1CFAAA5B8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v1 = (void *)sub_1CFB01A04();
  v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  qword_1ED904368 = (uint64_t)v2;
}

uint64_t static NSBundle.internalSettings.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1ED904378 != -1)
    swift_once();
  v0 = qword_1ED904368;
  v1 = (id)qword_1ED904368;
  return v0;
}

uint64_t sub_1CFAAA674()
{
  sub_1CFB02388();
  swift_bridgeObjectRelease();
  sub_1CFB01A7C();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  swift_bridgeObjectRetain();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  sub_1CFB027F0();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  return 0x6F727245314E5341;
}

uint64_t sub_1CFAAA7B4()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAAA7F8()
{
  return sub_1CFB02A9C();
}

uint64_t sub_1CFAAA824()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAAA864()
{
  return sub_1CFAAA674();
}

BOOL sub_1CFAAA86C(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(*(_QWORD *)a1 + 16) == *(unsigned __int8 *)(*(_QWORD *)a2 + 16);
}

uint64_t sub_1CFAAA888()
{
  return sub_1CFB01A7C();
}

uint64_t sub_1CFAAA8B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ASN1Error.Backing()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ASN1Error()
{
  return &type metadata for ASN1Error;
}

ValueMetadata *type metadata accessor for ASN1Error.ErrorCode()
{
  return &type metadata for ASN1Error.ErrorCode;
}

unint64_t sub_1CFAAA92C()
{
  unint64_t result;

  result = qword_1EFBC4B30;
  if (!qword_1EFBC4B30)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1E25C, &type metadata for ASN1Error.ErrorCode);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B30);
  }
  return result;
}

unint64_t sub_1CFAAA974()
{
  unint64_t result;

  result = qword_1EFBC4B38;
  if (!qword_1EFBC4B38)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1E2EC, &type metadata for ASN1Error);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B38);
  }
  return result;
}

unint64_t sub_1CFAAA9BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC4B40;
  if (!qword_1EFBC4B40)
  {
    v1 = type metadata accessor for ASN1Error.Backing();
    result = MEMORY[0x1D17DA600](&unk_1CFB1E3BC, v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B40);
  }
  return result;
}

uint64_t _s13CoreIDVShared9ASN1ErrorV9ErrorCodeV11BackingCodeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1CFAAAA4C + 4 * byte_1CFB1E20D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1CFAAAA80 + 4 * asc_1CFB1E208[v4]))();
}

uint64_t sub_1CFAAAA80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAAAA88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAAAA90);
  return result;
}

uint64_t sub_1CFAAAA9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAAAAA4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1CFAAAAA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAAAAB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ASN1Error.ErrorCode.BackingCode()
{
  return &type metadata for ASN1Error.ErrorCode.BackingCode;
}

unint64_t sub_1CFAAAAD0()
{
  unint64_t result;

  result = qword_1EFBC4B48;
  if (!qword_1EFBC4B48)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1E470, &type metadata for ASN1Error.ErrorCode.BackingCode);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B48);
  }
  return result;
}

void sub_1CFAAAB14(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CFAAAB5C()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAAC3C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAAC80()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAAD18(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CFAAAD60()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAAE00(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAAE44()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAAEB8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAAEFC()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAAF5C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAAFA0()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAB050(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAB090()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAB108(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAB14C()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAB194(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAB1D8()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAAB248(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAAB290()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

CoreIDVShared::EncryptionParamsAlgorithmIdentifier_optional __swiftcall EncryptionParamsAlgorithmIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDVShared::EncryptionParamsAlgorithmIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EncryptionParamsAlgorithmIdentifier.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x33765F4345;
  if (*v0 != 1)
    v1 = 0x48535F33765F4345;
  if (*v0)
    return v1;
  else
    return 0x765F4343455F5645;
}

uint64_t sub_1CFAAB418(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CFA27034(*a1, *a2);
}

uint64_t sub_1CFAAB424()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAAB4CC()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAAB550()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::EncryptionParamsAlgorithmIdentifier_optional sub_1CFAAB5F4(Swift::String *a1)
{
  return EncryptionParamsAlgorithmIdentifier.init(rawValue:)(*a1);
}

void sub_1CFAAB600(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEF312E4E53412D31;
  v4 = 0xE500000000000000;
  v5 = 0x33765F4345;
  if (v2 != 1)
  {
    v5 = 0x48535F33765F4345;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x765F4343455F5645;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1CFAAB668()
{
  sub_1CFAB3D20();
  return sub_1CFB01C5C();
}

uint64_t sub_1CFAAB6C4()
{
  sub_1CFAB3D20();
  return sub_1CFB01C14();
}

CoreIDVShared::EncryptedMessageEntity_optional __swiftcall EncryptedMessageEntity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDVShared::EncryptedMessageEntity_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t EncryptedMessageEntity.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFAAB79C + 4 * byte_1CFB1E4DE[*v0]))(0x6576726573766469, 0xE900000000000072);
}

uint64_t sub_1CFAAB79C()
{
  return 0x656369766564;
}

uint64_t sub_1CFAAB7B0()
{
  return 0x732D656369766564;
}

uint64_t sub_1CFAAB7CC()
{
  return 7302761;
}

uint64_t sub_1CFAAB7DC()
{
  return 28787;
}

uint64_t sub_1CFAAB7E8()
{
  return 0x616E65687461;
}

uint64_t sub_1CFAAB7FC()
{
  return 0x726F737365737361;
}

uint64_t sub_1CFAAB814()
{
  return 0x726575737369;
}

uint64_t sub_1CFAAB828()
{
  return 7566953;
}

void sub_1CFAAB838(char *a1)
{
  sub_1CFA28484(*a1);
}

uint64_t sub_1CFAAB844()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1CFB02A90();
  sub_1CFAAAF5C((uint64_t)v3, v1);
  return sub_1CFB02ACC();
}

void sub_1CFAAB888(uint64_t a1)
{
  char *v1;

  sub_1CFAAAF5C(a1, *v1);
}

uint64_t sub_1CFAAB890()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1CFB02A90();
  sub_1CFAAAF5C((uint64_t)v3, v1);
  return sub_1CFB02ACC();
}

CoreIDVShared::EncryptedMessageEntity_optional sub_1CFAAB8D0(Swift::String *a1)
{
  return EncryptedMessageEntity.init(rawValue:)(*a1);
}

uint64_t sub_1CFAAB8DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EncryptedMessageEntity.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1CFAAB900()
{
  sub_1CFAB3CDC();
  return sub_1CFB01C5C();
}

uint64_t sub_1CFAAB95C()
{
  sub_1CFAB3CDC();
  return sub_1CFB01C14();
}

id RecipientEncryptionCertificate.keyAgreement.getter()
{
  id *v0;

  return *v0;
}

void *RecipientEncryptionCertificate.signing.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void RecipientEncryptionCertificate.recipient.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t RecipientEncryptionCertificate.init(keyAgreement:signing:recipient:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  return result;
}

void EncryptedMessage.sender.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void EncryptedMessage.recipient.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t EncryptedMessage.message.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  v11 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EncryptedMessage.senderSigningKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 EncryptedMessage.init(sender:recipient:message:senderSigningKey:)@<Q0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __n128 result;

  v6 = *a2;
  v7 = *(_BYTE *)(a3 + 16);
  v8 = *(_OWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  v11 = *(_QWORD *)(a3 + 104);
  *(_BYTE *)a6 = *a1;
  *(_BYTE *)(a6 + 1) = v6;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)a3;
  *(_BYTE *)(a6 + 24) = v7;
  *(_OWORD *)(a6 + 32) = v8;
  *(_QWORD *)(a6 + 48) = v9;
  *(_QWORD *)(a6 + 56) = v10;
  v12 = *(_OWORD *)(a3 + 72);
  *(_OWORD *)(a6 + 64) = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(a6 + 80) = v12;
  result = *(__n128 *)(a3 + 88);
  *(__n128 *)(a6 + 96) = result;
  *(_QWORD *)(a6 + 112) = v11;
  *(_QWORD *)(a6 + 120) = a4;
  *(_QWORD *)(a6 + 128) = a5;
  return result;
}

uint64_t static EncryptedMessage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = *(_BYTE *)a1;
  v35 = *(_QWORD *)(a1 + 16);
  v36 = *(_QWORD *)(a1 + 8);
  v34 = *(_BYTE *)(a1 + 24);
  v32 = *(_QWORD *)(a1 + 40);
  v33 = *(_QWORD *)(a1 + 32);
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a1 + 48);
  v28 = *(_QWORD *)(a1 + 72);
  v29 = *(_QWORD *)(a1 + 64);
  v26 = *(_QWORD *)(a1 + 88);
  v27 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = *(_QWORD *)(a2 + 8);
  v23 = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 96);
  v20 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 104);
  v9 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)&v16 = *(_QWORD *)(a1 + 128);
  *((_QWORD *)&v16 + 1) = *(_QWORD *)(a2 + 128);
  sub_1CFA28484(*(_BYTE *)(a1 + 1));
  if ((v11 & 1) == 0)
    return 0;
  sub_1CFA28484(v2);
  if ((v12 & 1) == 0)
    return 0;
  v50[0] = v36;
  v50[1] = v35;
  v51 = v34;
  v52 = v33;
  v53 = v32;
  v54 = v31;
  v55 = v30;
  v56 = v29;
  v57 = v28;
  v58 = v27;
  v59 = v26;
  v60 = v9;
  v61 = v8;
  v62 = v10;
  v37[0] = v25;
  v37[1] = v24;
  v38 = v23;
  v39 = v3;
  v40 = v4;
  v41 = v5;
  v42 = v6;
  v43 = v7;
  v44 = v22;
  v45 = v21;
  v46 = v20;
  v47 = v19;
  v48 = v18;
  v49 = v17;
  if ((static EncryptedDataContainer.== infix(_:_:)((uint64_t)v50, (uint64_t)v37) & 1) == 0)
    return 0;
  result = v16 == 0;
  if ((_QWORD)v16 && *((_QWORD *)&v16 + 1))
  {
    if (__PAIR128__(v16, v14) == __PAIR128__(*((unint64_t *)&v16 + 1), v15))
      return 1;
    else
      return sub_1CFB028B0();
  }
  return result;
}

uint64_t static EncryptedDataContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unsigned __int8 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44[8];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_OWORD *)(a1 + 56);
  v10 = *(_OWORD *)(a1 + 72);
  v11 = *(_OWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_BYTE *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v19 = *(_OWORD *)(a2 + 56);
  v20 = *(_OWORD *)(a2 + 72);
  v21 = *(_OWORD *)(a2 + 88);
  v22 = *(_QWORD *)(a2 + 104);
  if (!v3)
  {
    if (!v13)
    {
LABEL_9:
      v44[0] = v4;
      v45 = v5;
      v46 = v6;
      v47 = v7;
      v48 = v8;
      v49 = v9;
      v50 = v10;
      v51 = v11;
      v52 = v12;
      v35[0] = v14;
      v36 = v15;
      v37 = v16;
      v38 = v18;
      v39 = v17;
      v40 = v19;
      v41 = v20;
      v42 = v21;
      v43 = v22;
      v25 = _s13CoreIDVShared16EncryptionParamsV2eeoiySbAC_ACtFZ_0(v44, (uint64_t)v35);
      return v25 & 1;
    }
LABEL_8:
    v25 = 0;
    return v25 & 1;
  }
  if (!v13)
    goto LABEL_8;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v13)
    goto LABEL_9;
  v33 = *(_OWORD *)(a1 + 72);
  v34 = *(_OWORD *)(a1 + 56);
  v32 = *(_OWORD *)(a1 + 88);
  v31 = *(_BYTE *)(a1 + 16);
  v30 = *(_QWORD *)(a1 + 24);
  v28 = *(_OWORD *)(a2 + 72);
  v29 = *(_OWORD *)(a2 + 56);
  v27 = *(_OWORD *)(a2 + 88);
  v23 = sub_1CFB028B0();
  v21 = v27;
  v20 = v28;
  v19 = v29;
  v5 = v30;
  v4 = v31;
  v11 = v32;
  v10 = v33;
  v9 = v34;
  v24 = v23;
  v25 = 0;
  if ((v24 & 1) != 0)
    goto LABEL_9;
  return v25 & 1;
}

BOOL sub_1CFAABE68(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1CFAABE78()
{
  return sub_1CFB02A9C();
}

uint64_t sub_1CFAABE9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65697069636572 && a2 == 0xE900000000000074 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CFB318D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1CFAAC054()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAAC098(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFAAC0C8 + 4 * byte_1CFB1E4E7[a1]))(0x7265646E6573, 0xE600000000000000);
}

uint64_t sub_1CFAAC0C8()
{
  return 0x6E65697069636572;
}

uint64_t sub_1CFAAC0E4()
{
  return 0x6567617373656DLL;
}

unint64_t sub_1CFAAC0FC()
{
  return 0xD000000000000010;
}

BOOL sub_1CFAAC118(char *a1, char *a2)
{
  return sub_1CFAABE68(*a1, *a2);
}

uint64_t sub_1CFAAC130()
{
  return sub_1CFAAC054();
}

uint64_t sub_1CFAAC140()
{
  return sub_1CFAABE78();
}

uint64_t sub_1CFAAC150()
{
  sub_1CFB02A90();
  sub_1CFAABE78();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAAC198()
{
  unsigned __int8 *v0;

  return sub_1CFAAC098(*v0);
}

uint64_t sub_1CFAAC1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAABE9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAAC1D8(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1F198, a1);
  return sub_1CFB02B74();
}

uint64_t sub_1CFAAC20C(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1F198, a1);
  return sub_1CFB02B80();
}

uint64_t EncryptedMessage.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char v62;

  v4 = a2[3];
  v5 = a2[4];
  v40 = a2[2];
  v39 = v4;
  v38 = v5;
  v6 = type metadata accessor for EncryptedMessage.CodingKeys(255, v40, v4, v5);
  MEMORY[0x1D17DA600](&unk_1CFB1F198, v6);
  v7 = sub_1CFB027D8();
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11, v12, v13, v14);
  v16 = (char *)v27 - v15;
  v17 = *v2;
  v61 = v2[1];
  v18 = *((_QWORD *)v2 + 1);
  v43 = *((_QWORD *)v2 + 2);
  v44 = v18;
  v42 = v2[24];
  v41 = *((_QWORD *)v2 + 4);
  v37 = *((_QWORD *)v2 + 5);
  v36 = *((_QWORD *)v2 + 6);
  v35 = *((_QWORD *)v2 + 7);
  v34 = *((_QWORD *)v2 + 8);
  v33 = *((_QWORD *)v2 + 9);
  v32 = *((_QWORD *)v2 + 10);
  v31 = *((_QWORD *)v2 + 11);
  v30 = *((_QWORD *)v2 + 12);
  v29 = *((_QWORD *)v2 + 13);
  v28 = *((_QWORD *)v2 + 14);
  v27[1] = *((_QWORD *)v2 + 15);
  v27[0] = *((_QWORD *)v2 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = v7;
  sub_1CFB02B5C();
  LOBYTE(v47) = v17;
  v62 = 0;
  sub_1CF941020();
  v20 = v46;
  sub_1CFB027CC();
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v16, v7);
  v21 = v41;
  v22 = v42;
  v24 = v43;
  v23 = v44;
  LOBYTE(v47) = v61;
  v62 = 1;
  sub_1CFB027CC();
  v47 = v23;
  v48 = v24;
  v49 = v22;
  v50 = v21;
  v51 = v37;
  v52 = v36;
  v53 = v35;
  v54 = v34;
  v55 = v33;
  v56 = v32;
  v57 = v31;
  v58 = v30;
  v59 = v29;
  v60 = v28;
  v62 = 2;
  v25 = type metadata accessor for EncryptedDataContainer(0, v40, v39, v38);
  MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedDataContainer<A>, v25);
  sub_1CFB027CC();
  LOBYTE(v47) = 3;
  sub_1CFB02754();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v16, v19);
}

uint64_t EncryptedMessage.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _BYTE v99[11];
  __int16 v100;
  uint64_t v101;

  v68 = a5;
  v69 = a4;
  v8 = type metadata accessor for EncryptedMessage.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17DA600](&unk_1CFB1F198, v8);
  v70 = sub_1CFB0273C();
  v9 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v10, v11, v12, v13, v14, v15, v16);
  v17 = *(_QWORD *)(a1 + 24);
  v71 = a1;
  v18 = (_QWORD *)a1;
  v20 = (char *)&v51 - v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  v21 = v101;
  sub_1CFB02B2C();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_1(v71);
  v22 = a3;
  LOBYTE(v72) = 0;
  sub_1CF94110C();
  sub_1CFB02724();
  v23 = v20;
  v24 = v81;
  LOBYTE(v72) = 1;
  v25 = v23;
  sub_1CFB02724();
  LODWORD(v101) = v81;
  v26 = type metadata accessor for EncryptedDataContainer(0, a2, v22, v69);
  LOBYTE(v72) = 2;
  MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedDataContainer<A>, v26);
  sub_1CFB02724();
  v62 = v24;
  v27 = v82;
  v56 = v83;
  v28 = v85;
  v29 = v87;
  v60 = v86;
  v61 = v84;
  v30 = v89;
  v58 = v81;
  v59 = v88;
  v31 = v91;
  v57 = v90;
  v32 = v93;
  v55 = v92;
  v98 = 3;
  v64 = v94;
  swift_bridgeObjectRetain();
  v67 = v27;
  swift_bridgeObjectRetain();
  v66 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65 = v30;
  swift_bridgeObjectRetain();
  v63 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1CFB026AC();
  v69 = 0;
  v34 = *(void (**)(char *, uint64_t))(v9 + 8);
  v35 = v33;
  v53 = v36;
  v54 = v33;
  v37 = v36;
  v34(v25, v70);
  LOBYTE(v72) = v62;
  BYTE1(v72) = v101;
  v38 = v67;
  *((_QWORD *)&v72 + 1) = v58;
  *(_QWORD *)&v73 = v67;
  BYTE8(v73) = v56;
  v52 = v29;
  v39 = v65;
  v40 = v66;
  *(_QWORD *)&v74 = v61;
  *((_QWORD *)&v74 + 1) = v66;
  *(_QWORD *)&v75 = v60;
  *((_QWORD *)&v75 + 1) = v29;
  *(_QWORD *)&v76 = v59;
  *((_QWORD *)&v76 + 1) = v65;
  v41 = v63;
  *(_QWORD *)&v77 = v57;
  *((_QWORD *)&v77 + 1) = v63;
  *(_QWORD *)&v78 = v55;
  *((_QWORD *)&v78 + 1) = v32;
  v42 = v64;
  *(_QWORD *)&v79 = v64;
  *((_QWORD *)&v79 + 1) = v35;
  v80 = v37;
  sub_1CFAB1ABC((uint64_t)&v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = v79;
  v46 = v68;
  *(_OWORD *)(v68 + 96) = v78;
  *(_OWORD *)(v46 + 112) = v45;
  *(_QWORD *)(v46 + 128) = v80;
  v47 = v75;
  *(_OWORD *)(v46 + 32) = v74;
  *(_OWORD *)(v46 + 48) = v47;
  v48 = v77;
  *(_OWORD *)(v46 + 64) = v76;
  *(_OWORD *)(v46 + 80) = v48;
  v49 = v73;
  *(_OWORD *)v46 = v72;
  *(_OWORD *)(v46 + 16) = v49;
  __swift_destroy_boxed_opaque_existential_1(v71);
  LOBYTE(v81) = v62;
  BYTE1(v81) = v101;
  *(_DWORD *)((char *)&v81 + 2) = *(_DWORD *)&v99[7];
  HIWORD(v81) = v100;
  v82 = v58;
  v83 = v38;
  LOBYTE(v84) = v56;
  *(_DWORD *)((char *)&v84 + 1) = *(_DWORD *)v99;
  HIDWORD(v84) = *(_DWORD *)&v99[3];
  v85 = v61;
  v86 = v40;
  v87 = v60;
  v88 = v44;
  v89 = v59;
  v90 = v39;
  v91 = v57;
  v92 = v43;
  v93 = v55;
  v94 = v32;
  v95 = v42;
  v96 = v54;
  v97 = v53;
  return sub_1CFAB1B4C((uint64_t)&v81);
}

uint64_t sub_1CFAACA9C(uint64_t a1, uint64_t a2)
{
  return static EncryptedMessage.== infix(_:_:)(a1, a2);
}

uint64_t sub_1CFAACAAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return EncryptedMessage.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1CFAACACC(_QWORD *a1, _QWORD *a2)
{
  return EncryptedMessage.encode(to:)(a1, a2);
}

uint64_t KeyAgreementParams.sender.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KeyAgreementParams.recipientFingerprint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CFAACB3C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x7265646E6573;
}

uint64_t sub_1CFAACB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAB3908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAACB9C()
{
  sub_1CFAB1C6C();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAACBC4()
{
  sub_1CFAB1C6C();
  return sub_1CFB02B80();
}

uint64_t KeyAgreementParams.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039D0);
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v1 + 16);
  v16[1] = *(_QWORD *)(v1 + 24);
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1C6C();
  sub_1CFB02B5C();
  v19 = 0;
  sub_1CFB02790();
  if (!v2)
  {
    v18 = 1;
    sub_1CFB02790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v4);
}

uint64_t KeyAgreementParams.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1C6C();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v16 = sub_1CFB026E8();
  v18 = v17;
  v26 = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1CFB026E8();
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23 = v19;
  v22(v15, v5);
  *a2 = v16;
  a2[1] = v18;
  a2[2] = v23;
  a2[3] = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAACEC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return KeyAgreementParams.init(from:)(a1, a2);
}

uint64_t sub_1CFAACED8(_QWORD *a1)
{
  return KeyAgreementParams.encode(to:)(a1);
}

uint64_t KDFParams.senderSigningKeyFingerprint.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KDFParams.recipientSigningKeyFingerprint.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KDFParams.conversationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t KDFParams.sharedIdentifierNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KDFParams.init(senderSigningKeyFingerprint:recipientSigningKeyFingerprint:conversationToken:sharedIdentifierNames:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_1CFAACF90(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CFAACFD0 + 4 * byte_1CFB1E4EB[a1]))(0xD00000000000001BLL, 0x80000001CFB31910);
}

uint64_t sub_1CFAACFD0()
{
  uint64_t v0;

  return v0 + 13;
}

uint64_t sub_1CFAAD014()
{
  unsigned __int8 *v0;

  return sub_1CFAACF90(*v0);
}

uint64_t sub_1CFAAD01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAB39EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAAD040()
{
  sub_1CFAB1CB0();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAAD068()
{
  sub_1CFAB1CB0();
  return sub_1CFB02B80();
}

uint64_t KDFParams.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[2];
  v23 = v1[3];
  v24 = v14;
  v15 = v1[4];
  v21 = v1[5];
  v22 = v15;
  v20 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1CB0();
  sub_1CFB02B5C();
  v30 = 0;
  v16 = v25;
  sub_1CFB02754();
  if (!v16)
  {
    v17 = v20;
    v29 = 1;
    sub_1CFB02754();
    v28 = 2;
    sub_1CFB02754();
    v26 = v17;
    v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
    sub_1CF9C18F8(&qword_1ED903950, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1CFB02784();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

uint64_t KDFParams.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1CB0();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v35 = 0;
  v16 = sub_1CFB026AC();
  v18 = v17;
  v29 = v16;
  v34 = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1CFB026AC();
  v30 = v20;
  v27 = v19;
  v33 = 2;
  swift_bridgeObjectRetain();
  v28 = 0;
  v26 = sub_1CFB026AC();
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED903020);
  v32 = 3;
  sub_1CF9C18F8(&qword_1ED903150, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1CFB026DC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v24 = v31;
  swift_bridgeObjectRetain();
  v25 = v30;
  *a2 = v29;
  a2[1] = v18;
  a2[2] = v27;
  a2[3] = v25;
  a2[4] = v26;
  a2[5] = v22;
  a2[6] = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAAD560@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return KDFParams.init(from:)(a1, a2);
}

uint64_t sub_1CFAAD574(_QWORD *a1)
{
  return KDFParams.encode(to:)(a1);
}

void EncryptionParams.algorithmIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t EncryptionParams.keyAgreement.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EncryptionParams.kdf.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(v1 + 80);
  v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  v4 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EncryptionParams.init(alg:sender:recipientFingerprint:kdfParams:)@<Q0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __int128 v7;
  uint64_t v8;
  __n128 result;

  v7 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 40) = *(_OWORD *)a6;
  v8 = *(_QWORD *)(a6 + 48);
  *(_BYTE *)a7 = *a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_OWORD *)(a7 + 56) = v7;
  result = *(__n128 *)(a6 + 32);
  *(__n128 *)(a7 + 72) = result;
  *(_QWORD *)(a7 + 88) = v8;
  return result;
}

unint64_t sub_1CFAAD654()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656572674179656BLL;
  if (*v0 != 1)
    v1 = 6710379;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_1CFAAD6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAB3B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAAD6D8()
{
  sub_1CFAB1CF4();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAAD700()
{
  sub_1CFAB1CF4();
  return sub_1CFB02B80();
}

uint64_t EncryptionParams.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6, v7, v8, v9, v10, v11, v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = *((_QWORD *)v1 + 1);
  v35 = *((_QWORD *)v1 + 2);
  v36 = v16;
  v17 = *((_QWORD *)v1 + 3);
  v33 = *((_QWORD *)v1 + 4);
  v34 = v17;
  v18 = *((_QWORD *)v1 + 5);
  v31 = *((_QWORD *)v1 + 6);
  v32 = v18;
  v19 = *((_QWORD *)v1 + 7);
  v29 = *((_QWORD *)v1 + 8);
  v30 = v19;
  v20 = *((_QWORD *)v1 + 9);
  v27 = *((_QWORD *)v1 + 10);
  v28 = v20;
  v26 = *((_QWORD *)v1 + 11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1CF4();
  sub_1CFB02B5C();
  LOBYTE(v37) = v15;
  v44 = 0;
  sub_1CFAB1D38();
  sub_1CFB027CC();
  if (!v2)
  {
    v22 = v29;
    v21 = v30;
    v24 = v31;
    v23 = v32;
    v37 = v36;
    v38 = v35;
    v39 = v34;
    v40 = v33;
    v44 = 1;
    sub_1CFAB1D7C();
    sub_1CFB027CC();
    v37 = v23;
    v38 = v24;
    v39 = v21;
    v40 = v22;
    v41 = v28;
    v42 = v27;
    v43 = v26;
    v44 = 2;
    sub_1CFAB1DC0();
    sub_1CFB027CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

uint64_t EncryptionParams.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1CF4();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  sub_1CFAB1E04();
  sub_1CFB02724();
  v16 = v27;
  v33 = 1;
  sub_1CFAB1E48();
  sub_1CFB02724();
  v32 = v16;
  v17 = v28;
  v18 = v29;
  v25 = *((_QWORD *)&v28 + 1);
  v26 = v27;
  v33 = 2;
  sub_1CFAB1E8C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v19 = v30;
  v20 = v31;
  v21 = v29;
  *(_OWORD *)(a2 + 48) = v28;
  *(_OWORD *)(a2 + 64) = v21;
  *(_BYTE *)a2 = v32;
  v22 = v27;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAADBA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EncryptionParams.init(from:)(a1, a2);
}

uint64_t sub_1CFAADBB4(_QWORD *a1)
{
  return EncryptionParams.encode(to:)(a1);
}

uint64_t EncryptedDataContainerParamsOnly.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v9 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EncryptedDataContainerParamsOnly.params.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *a1;
  v8 = *(_OWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 8);
  v6 = *(_OWORD *)(a1 + 56);
  v7 = *(_OWORD *)(a1 + 40);
  v5 = *(__n128 *)(a1 + 72);
  v3 = *((_QWORD *)a1 + 11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)v1 = v2;
  *(_OWORD *)(v1 + 8) = v9;
  *(_OWORD *)(v1 + 24) = v8;
  *(_OWORD *)(v1 + 40) = v7;
  *(_OWORD *)(v1 + 56) = v6;
  result = v5;
  *(__n128 *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 88) = v3;
  return result;
}

uint64_t (*EncryptedDataContainerParamsOnly.params.modify())()
{
  return nullsub_1;
}

uint64_t sub_1CFAADD30()
{
  return 0x736D61726170;
}

uint64_t sub_1CFAADD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736D61726170 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CFB028B0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CFAADDD0()
{
  sub_1CFAB1ED0();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAADDF8()
{
  sub_1CFAB1ED0();
  return sub_1CFB02B80();
}

uint64_t EncryptedDataContainerParamsOnly.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v24[8];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB1ED0();
  sub_1CFB02B2C();
  if (!v2)
  {
    sub_1CFAB1F14();
    sub_1CFB02724();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v5);
    v16 = v25;
    v17 = v26;
    v18 = v27;
    v19 = v31;
    v20 = v28;
    v21 = v29;
    v22 = v30;
    *(_BYTE *)a2 = v24[0];
    *(_OWORD *)(a2 + 8) = v16;
    *(_QWORD *)(a2 + 24) = v17;
    *(_QWORD *)(a2 + 32) = v18;
    *(_OWORD *)(a2 + 40) = v20;
    *(_OWORD *)(a2 + 56) = v21;
    *(_OWORD *)(a2 + 72) = v22;
    *(_QWORD *)(a2 + 88) = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CFAADF70()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1CFB02670();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1CFAADFC0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736D61726170;
  else
    return 1635017060;
}

uint64_t sub_1CFAADFEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EncryptedDataContainerParamsOnly.init(from:)(a1, a2);
}

uint64_t sub_1CFAAE000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17DA600](&unk_1CFB1EF68, a3);
  return sub_1CFB0297C();
}

uint64_t sub_1CFAAE054(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1EF68, a1);
  return sub_1CFB01C38();
}

uint64_t sub_1CFAAE0A0()
{
  MEMORY[0x1D17DA600](&unk_1CFB1EF68);
  return sub_1CFB01C50();
}

uint64_t sub_1CFAAE0F0()
{
  MEMORY[0x1D17DA600](&unk_1CFB1EF68);
  return sub_1CFB01C44();
}

uint64_t sub_1CFAAE140@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFAADF70();
  *a1 = result;
  return result;
}

uint64_t sub_1CFAAE178@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CFAADFC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CFAAE1AC()
{
  char *v0;

  return sub_1CFAADFC0(*v0);
}

uint64_t sub_1CFAAE1C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CFAADF70();
  *a1 = result;
  return result;
}

uint64_t sub_1CFAAE1F0(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1F008, a1);
  return sub_1CFB02B74();
}

uint64_t sub_1CFAAE224(uint64_t a1)
{
  MEMORY[0x1D17DA600](&unk_1CFB1F008, a1);
  return sub_1CFB02B80();
}

uint64_t EncryptedDataContainer.data.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EncryptedDataContainer.data.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EncryptedDataContainer.data.modify())()
{
  return nullsub_1;
}

uint64_t EncryptedDataContainer.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v9 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 EncryptedDataContainer.params.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *a1;
  v8 = *(_OWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a1 + 8);
  v6 = *(_OWORD *)(a1 + 56);
  v7 = *(_OWORD *)(a1 + 40);
  v5 = *(__n128 *)(a1 + 72);
  v3 = *((_QWORD *)a1 + 11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 16) = v2;
  *(_OWORD *)(v1 + 24) = v9;
  *(_OWORD *)(v1 + 40) = v8;
  *(_OWORD *)(v1 + 56) = v7;
  *(_OWORD *)(v1 + 72) = v6;
  result = v5;
  *(__n128 *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 104) = v3;
  return result;
}

uint64_t (*EncryptedDataContainer.params.modify())()
{
  return nullsub_1;
}

__n128 EncryptedDataContainer.init(type:data:params:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X8>)
{
  char v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  v4 = *a3;
  v5 = *(_OWORD *)(a3 + 8);
  v6 = *((_QWORD *)a3 + 3);
  v7 = *((_QWORD *)a3 + 4);
  v8 = *((_QWORD *)a3 + 11);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  *(_OWORD *)(a4 + 24) = v5;
  *(_QWORD *)(a4 + 40) = v6;
  *(_QWORD *)(a4 + 48) = v7;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a4 + 72) = *(_OWORD *)(a3 + 56);
  result = *(__n128 *)(a3 + 72);
  *(__n128 *)(a4 + 88) = result;
  *(_QWORD *)(a4 + 104) = v8;
  return result;
}

uint64_t EncryptedDataContainer.init(alg:encryptor:remoteCertificate:senderSigningKey:recipientSigningKey:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  char *v17;
  unsigned __int8 v18;
  SecCertificateRef v19;
  SecKeyRef v20;
  __SecKey *v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[5];
  __int128 v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;

  v39 = a7;
  v37 = a6;
  v40 = a5;
  v38 = a4;
  v14 = *(_QWORD *)(a10 - 8);
  v15 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v15;
  v20 = SecCertificateCopyKey(v19);
  if (v20)
  {
    v21 = v20;
    v35 = a3;
    v51 = v18;
    sub_1CF92B1B4(a2, (uint64_t)v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a8, a10);
    v22 = v36;
    EncryptedDataContainer.init(alg:encryptor:remotePublicKey:senderSigningKey:recipientSigningKey:data:)(&v51, v41, v21, v38, v40, v37, v39, (uint64_t)v17, (uint64_t *)&v42, a10);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a8, a10);
    result = __swift_destroy_boxed_opaque_existential_1(a2);
    if (!v22)
    {
      v24 = v43;
      v25 = v44;
      v26 = v45;
      v27 = v46;
      v28 = v50;
      v29 = v47;
      v30 = v48;
      v31 = v49;
      *(_OWORD *)a9 = v42;
      *(_BYTE *)(a9 + 16) = v24;
      *(_OWORD *)(a9 + 24) = v25;
      *(_QWORD *)(a9 + 40) = v26;
      *(_QWORD *)(a9 + 48) = v27;
      *(_OWORD *)(a9 + 56) = v29;
      *(_OWORD *)(a9 + 72) = v30;
      *(_OWORD *)(a9 + 88) = v31;
      *(_QWORD *)(a9 + 104) = v28;
    }
  }
  else
  {
    LOWORD(v42) = 0;
    v32 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003FLL, 0x80000001CFB313B0, (__int16 *)&v42, 0, v32, 0xD000000000000062, 0x80000001CFB313F0, v33, 0xD000000000000050, 0x80000001CFB31460, 140);
    swift_willThrow();
    sub_1CF923A24(v37, v39);
    sub_1CF923A24(v38, v40);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a8, a10);
    return __swift_destroy_boxed_opaque_existential_1(a2);
  }
  return result;
}

uint64_t EncryptedDataContainer.init(alg:encryptor:remotePublicKey:senderSigningKey:recipientSigningKey:data:)@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X1>, __SecKey *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CFDataRef v27;
  CFDataRef v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  NSObject *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  id v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t inited;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  _QWORD *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  int v133;
  __SecKey *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int16 v143[8];
  CFErrorRef error[2];

  v129 = a9;
  v18 = a10;
  error[1] = *(CFErrorRef *)MEMORY[0x1E0C80C00];
  v130 = sub_1CFB012CC();
  v132 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130, v19, v20, v21, v22, v23, v24, v25);
  v131 = (uint64_t)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = *a1;
  error[0] = 0;
  v27 = SecKeyCopyExternalRepresentation(a3, error);
  if (v27)
  {
    v28 = v27;
    v135 = a6;
    v136 = a7;
    v137 = a4;
    v138 = a5;
    v140 = a10;
    v134 = a3;
    v29 = sub_1CFB00E7C();
    v31 = v30;

    v32 = (void *)sub_1CFB00E58();
    v33 = DigestSha256(v32);

    if (!v33)
    {
      v143[0] = 0;
      v44 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000030, 0x80000001CFB31500, v143, 0, v44, 0xD000000000000062, 0x80000001CFB313F0, v45, 0xD00000000000004ELL, 0x80000001CFB31540, 156);
      swift_willThrow();
      sub_1CF923A24(v29, v31);
      sub_1CF923A24(v135, v136);
      sub_1CF923A24(v137, v138);

      goto LABEL_8;
    }
    v127 = a2;
    v34 = sub_1CFB00E7C();
    v128 = a8;
    v35 = v34;
    v37 = v36;

    v38 = sub_1CFB00E64();
    v40 = v39;
    a8 = v128;
    sub_1CF923A24(v35, v37);
    sub_1CFB00B94();
    swift_allocObject();
    sub_1CFB00B88();
    v41 = v139;
    v42 = sub_1CFB00B7C();
    if (v41)
    {
      sub_1CF923A24(v29, v31);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1CF923A24(v135, v136);
      sub_1CF923A24(v137, v138);

LABEL_5:
      a2 = v127;
LABEL_8:
      v18 = v140;
      goto LABEL_9;
    }
    v47 = v42;
    v48 = v43;
    v124 = v38;
    v139 = v40;
    swift_release();
    v49 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    if (qword_1ED904DB0 != -1)
      swift_once();
    v125 = v48;
    v126 = v47;
    if (byte_1ED907588 == 1)
    {
      v50 = (void *)sub_1CFB01A04();
      v51 = objc_msgSend(v49, sel_BOOLForKey_, v50);

      v47 = v126;
      v62 = v31;
      if ((v51 & 1) != 0)
      {
        if (qword_1ED9054E8 != -1)
          swift_once();
        v52 = v130;
        v53 = __swift_project_value_buffer(v130, (uint64_t)qword_1ED907590);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16))(v131, v53, v52);
        v54 = v125;
        sub_1CF9239E0(v47, v125);
        sub_1CF9239E0(v47, v54);
        v55 = sub_1CFB012B4();
        v56 = sub_1CFB01FC8();
        v123 = v55;
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc();
          v122 = swift_slowAlloc();
          v142 = v122;
          *(_DWORD *)v57 = 136315138;
          v121 = v57 + 4;
          v58 = sub_1CFB00E64();
          v141 = sub_1CF9C974C(v58, v59, &v142);
          v47 = v126;
          sub_1CFB021C0();
          swift_bridgeObjectRelease();
          sub_1CF923A24(v47, v54);
          sub_1CF923A24(v47, v54);
          v60 = v123;
          _os_log_impl(&dword_1CF917000, v123, v56, "EncryptedDataContainer contains %s", v57, 0xCu);
          v61 = v122;
          swift_arrayDestroy();
          MEMORY[0x1D17DA6E4](v61, -1, -1);
          MEMORY[0x1D17DA6E4](v57, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v130);
        }
        else
        {
          sub_1CF923A24(v47, v54);
          sub_1CF923A24(v47, v54);

          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v52);
        }
      }
    }
    else
    {

      v62 = v31;
    }
    if (v133)
    {
      v131 = v29;
      v132 = v62;
      v63 = v135;
      v64 = v136;
      v65 = (void *)sub_1CFB00E58();
      v66 = DigestSha256(v65);

      a2 = v127;
      v18 = v140;
      v68 = v137;
      v67 = v138;
      if (v66)
      {
        v69 = sub_1CFB00E7C();
        v71 = v70;

        v72 = (void *)sub_1CFB00E58();
        v73 = DigestSha256(v72);

        if (v73)
        {
          v118 = v69;
          v119 = v71;
          v123 = sub_1CFB00E7C();
          v130 = v74;

          v122 = v127[3];
          v120 = v127[4];
          v121 = __swift_project_boxed_opaque_existential_1(v127, v122);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039E0);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1CFB059A0;
          v76 = v125;
          *(_BYTE *)(inited + 32) = 0;
          *(_QWORD *)(inited + 40) = v68;
          *(_QWORD *)(inited + 48) = v67;
          *(_BYTE *)(inited + 56) = 1;
          *(_QWORD *)(inited + 64) = v63;
          *(_QWORD *)(inited + 72) = v64;
          v77 = sub_1CF9242C8(inited);
          swift_setDeallocating();
          sub_1CF9239E0(v68, v67);
          sub_1CF9239E0(v63, v64);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903DA0);
          swift_arrayDestroy();
          v84 = (*(uint64_t (**)(uint64_t, unint64_t, __SecKey *, unint64_t, uint64_t))(v120 + 16))(v126, v76, v134, v77, v122);
          v86 = v85;
          v121 = v87;
          v122 = v88;
          v89 = v123;
          v90 = v127;
          v91 = v130;
          swift_bridgeObjectRelease();
          sub_1CF923A24(v84, v86);
          v92 = v90[3];
          v93 = v90[4];
          __swift_project_boxed_opaque_existential_1(v90, v92);
          v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 40))(v92, v93);
          v96 = v95;
          v120 = sub_1CFB00E64();
          v115 = v97;
          sub_1CF923A24(v94, v96);
          v98 = (uint64_t)v89;
          v117 = sub_1CFB00E64();
          v114 = v99;
          v100 = v118;
          v101 = v119;
          v116 = sub_1CFB00E64();
          v113 = v102;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v103 = (uint64_t)v121;
          v104 = v122;
          v105 = sub_1CFB00E64();
          v107 = v106;
          sub_1CF923A24(v131, v132);
          sub_1CF923A24(v100, v101);
          sub_1CF923A24(v103, v104);
          sub_1CF923A24(v98, v91);
          sub_1CF923A24(v135, v136);
          sub_1CF923A24(v137, v138);

          sub_1CF923A24(v126, v125);
          (*(void (**)(uint64_t))(*(_QWORD *)(v140 - 8) + 8))(v128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v108 = v129;
          *v129 = v105;
          v108[1] = v107;
          *((_BYTE *)v108 + 16) = v133;
          v109 = v115;
          v108[3] = v120;
          v108[4] = v109;
          v110 = v139;
          v108[5] = v124;
          v108[6] = v110;
          v111 = v114;
          v108[7] = v117;
          v108[8] = v111;
          v112 = v113;
          v108[9] = v116;
          v108[10] = v112;
          v108[12] = 0;
          v108[13] = 0;
          v108[11] = 0;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        LOWORD(v142) = 0;
        v82 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
        sub_1CF923828();
        swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000030, 0x80000001CFB315D0, (__int16 *)&v142, 0, v82, 0xD000000000000062, 0x80000001CFB313F0, v83, 0xD00000000000004ELL, 0x80000001CFB31540, 173);
        swift_willThrow();
        sub_1CF923A24(v131, v132);
        sub_1CF923A24(v69, v71);
        sub_1CF923A24(v63, v64);
        sub_1CF923A24(v68, v67);

        sub_1CF923A24(v126, v125);
        a8 = v128;
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      LOWORD(v142) = 0;
      v80 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000033, 0x80000001CFB31590, (__int16 *)&v142, 0, v80, 0xD000000000000062, 0x80000001CFB313F0, v81, 0xD00000000000004ELL, 0x80000001CFB31540, 170);
      swift_willThrow();
      sub_1CF923A24(v131, v132);
      sub_1CF923A24(v63, v64);
      sub_1CF923A24(v68, v67);

      sub_1CF923A24(v126, v125);
    }
    else
    {
      swift_bridgeObjectRelease();
      LOWORD(v142) = 106;
      v78 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001CFB31610, (__int16 *)&v142, 0, v78, 0xD000000000000062, 0x80000001CFB313F0, v79, 0xD00000000000004ELL, 0x80000001CFB31540, 167);
      swift_willThrow();
      sub_1CF923A24(v29, v62);
      sub_1CF923A24(v135, v136);
      sub_1CF923A24(v137, v138);

      sub_1CF923A24(v47, v125);
      a2 = v127;
      v18 = v140;
    }
    a8 = v128;
    goto LABEL_9;
  }
  v143[0] = 242;
  errorFromCFError(_:_:_:)(error[0], 0xD000000000000033, 0x80000001CFB314C0, v143);
  swift_willThrow();
  sub_1CF923A24(a6, a7);
  sub_1CF923A24(a4, a5);

LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a8, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return swift_bridgeObjectRelease();
}

void EncryptedDataContainer.getUnencryptedData(alg:decryptor:senderSigningKey:recipientSigningKey:)(_BYTE *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t inited;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  _QWORD v141[2];
  unint64_t v142;

  v136 = a3;
  v137 = a4;
  v15 = sub_1CFB012CC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17, v18, v19, v20, v21, v22, v23);
  v138 = (uint64_t)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = a7;
  v25 = *(_QWORD *)(a7 + 16);
  v26 = sub_1CFB02190();
  v34 = MEMORY[0x1E0C80A78](v26, v27, v28, v29, v30, v31, v32, v33);
  v42 = MEMORY[0x1E0C80A78](v34, v35, v36, v37, v38, v39, v40, v41);
  if (!*a1)
  {
    LOWORD(v141[0]) = 106;
    v70 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000020, 0x80000001CFB31780, (__int16 *)v141, 0, v70, 0xD000000000000062, 0x80000001CFB313F0, v71, 0xD000000000000047, 0x80000001CFB31680, 184);
LABEL_11:
    swift_willThrow();
    return;
  }
  v129 = a5;
  v126 = a6;
  v118 = v46;
  v119 = v42;
  v121 = v45;
  v120 = (char *)&v111 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = v25;
  v122 = v44;
  v123 = a8;
  v131 = v16;
  v132 = v15;
  v133 = *v8;
  v127 = v8[1];
  v125 = v8[3];
  v47 = v8[5];
  v130 = v8[4];
  v134 = (_QWORD *)v8[6];
  v128 = v8[8];
  v48 = v8[10];
  v49 = v8[12];
  v50 = v8[13];
  v51 = a2[3];
  v52 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v51);
  v53 = v139;
  v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 40))(v51, v52);
  if (v53)
    return;
  v56 = v54;
  v57 = v55;
  v139 = v47;
  v117 = v50;
  v115 = v49;
  v116 = v48;
  v58 = (void *)sub_1CFB00E58();
  sub_1CF923A24(v56, v57);
  v59 = DigestSha256(v58);

  if (!v59)
  {
    LOWORD(v141[0]) = 0;
    v72 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000029, 0x80000001CFB31650, (__int16 *)v141, 0, v72, 0xD000000000000062, 0x80000001CFB313F0, v73, 0xD000000000000047, 0x80000001CFB31680, 187);
    goto LABEL_11;
  }
  v112 = 0;
  v60 = sub_1CFB00E7C();
  v62 = v61;

  if (sub_1CFB00E64() == v139 && v63 == v134)
  {
    swift_bridgeObjectRelease();
    v66 = v129;
    v67 = a2;
  }
  else
  {
    v65 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    v66 = v129;
    v67 = a2;
    if ((v65 & 1) == 0)
    {
      LOWORD(v141[0]) = 135;
      v68 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
      sub_1CF923828();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000004FLL, 0x80000001CFB316D0, (__int16 *)v141, 0, v68, 0xD000000000000062, 0x80000001CFB313F0, v69, 0xD000000000000047, 0x80000001CFB31680, 190);
      swift_willThrow();
      sub_1CF923A24(v60, v62);
      return;
    }
  }
  v74 = v127;
  v114 = v62;
  v113 = v60;
  if (!v127 || (v75 = sub_1CFB00E28(), v139 = v76, v76 >> 60 == 15))
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v77 = v132;
    v78 = __swift_project_value_buffer(v132, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    v79 = v138;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v138, v78, v77);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v80 = sub_1CFB012B4();
    v81 = sub_1CFB01FD4();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      v139 = swift_slowAlloc();
      v142 = v139;
      *(_DWORD *)v82 = 136446210;
      if (v74)
        v83 = v133;
      else
        v83 = 7104878;
      if (!v74)
        v74 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      v140 = sub_1CF9C974C(v83, v74, (uint64_t *)&v142);
      sub_1CFB021C0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF917000, v80, v81, "Failed to base64 decode the encrypted data: %{public}s", v82, 0xCu);
      v84 = v139;
      swift_arrayDestroy();
      v85 = v84;
      v86 = v113;
      MEMORY[0x1D17DA6E4](v85, -1, -1);
      MEMORY[0x1D17DA6E4](v82, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v138, v132);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v79, v132);
      v86 = v113;
    }
    LOWORD(v142) = 119;
    v87 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002BLL, 0x80000001CFB31720, (__int16 *)&v142, 0, v87, 0xD000000000000062, 0x80000001CFB313F0, v88, 0xD000000000000047, 0x80000001CFB31680, 194);
    swift_willThrow();
    v89 = v86;
    goto LABEL_30;
  }
  v90 = v75;
  v91 = v67[4];
  v138 = v67[3];
  v134 = __swift_project_boxed_opaque_existential_1(v67, v138);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB059A0;
  *(_BYTE *)(inited + 32) = 0;
  v94 = v136;
  v93 = v137;
  *(_QWORD *)(inited + 40) = v136;
  *(_QWORD *)(inited + 48) = v93;
  *(_BYTE *)(inited + 56) = 1;
  v95 = v126;
  *(_QWORD *)(inited + 64) = v66;
  *(_QWORD *)(inited + 72) = v95;
  v96 = sub_1CF9242C8(inited);
  swift_setDeallocating();
  sub_1CF9239E0(v94, v93);
  sub_1CF9239E0(v66, v95);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903DA0);
  swift_arrayDestroy();
  v97 = v112;
  v98 = (*(uint64_t (**)(_QWORD, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v91 + 32))(0, 0xF000000000000000, v90, v139, v125, v130, v96, v138, v91);
  v100 = v99;
  swift_bridgeObjectRelease();
  if (v97)
  {
    sub_1CF931AB0(v90, v139);
    v89 = v113;
LABEL_30:
    sub_1CF923A24(v89, v114);
    return;
  }
  v101 = v114;
  v102 = v113;
  if (v124 == MEMORY[0x1E0CB0338])
  {
    v141[0] = v98;
    v141[1] = v100;
    sub_1CF9239E0(v98, v100);
    v103 = v122;
    v104 = swift_dynamicCast();
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v121 + 56);
    if ((v104 & 1) != 0)
    {
      v106 = v90;
      v107 = MEMORY[0x1E0CB0338];
      v108 = v121;
      v105(v103, 0, 1, MEMORY[0x1E0CB0338]);
      sub_1CF931AB0(v106, v139);
      sub_1CF923A24(v102, v101);
      sub_1CF923A24(v98, v100);
      v109 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
      v110 = v120;
      v109(v120, v103, v107);
      v109(v123, (uint64_t)v110, v107);
      return;
    }
    v105(v103, 1, 1, MEMORY[0x1E0CB0338]);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v103, v119);
  }
  sub_1CFB00B58();
  swift_allocObject();
  sub_1CFB00B4C();
  sub_1CFB00B40();
  sub_1CF923A24(v98, v100);
  sub_1CF931AB0(v90, v139);
  sub_1CF923A24(v102, v101);
  swift_release();
}

uint64_t EncryptedDataContainer.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;

  v4 = type metadata accessor for EncryptedDataContainer.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x1D17DA600](&unk_1CFB1F008, v4);
  v5 = sub_1CFB027D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v22 - v14;
  v16 = *v2;
  v34 = v2[1];
  v35 = v16;
  v49 = *((unsigned __int8 *)v2 + 16);
  v17 = v2[3];
  v32 = v2[4];
  v33 = v17;
  v18 = v2[5];
  v30 = v2[6];
  v31 = v18;
  v19 = v2[7];
  v28 = v2[8];
  v29 = v19;
  v27 = v2[9];
  v26 = v2[10];
  v25 = v2[11];
  v24 = v2[12];
  v23 = v2[13];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B5C();
  v37 = 0;
  v20 = v36;
  sub_1CFB02754();
  if (!v20)
  {
    v37 = v49;
    v38 = v33;
    v39 = v32;
    v40 = v31;
    v41 = v30;
    v42 = v29;
    v43 = v28;
    v44 = v27;
    v45 = v26;
    v46 = v25;
    v47 = v24;
    v48 = v23;
    v50 = 1;
    sub_1CFAB1F64();
    sub_1CFB027CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

uint64_t EncryptedDataContainer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v34 = a5;
  v7 = type metadata accessor for EncryptedDataContainer.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17DA600](&unk_1CFB1F008, v7);
  v8 = sub_1CFB0273C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&v33 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFB02B2C();
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v19 = v34;
    v35 = 0;
    v20 = sub_1CFB026AC();
    v22 = v21;
    v45 = 1;
    sub_1CFAB1F14();
    swift_bridgeObjectRetain();
    sub_1CFB02724();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
    v24 = v35;
    v26 = v36;
    v25 = v37;
    v27 = v38;
    v28 = v39;
    v29 = v40;
    v31 = v43;
    v30 = v44;
    v32 = v42;
    *(_OWORD *)(v19 + 64) = v41;
    *(_OWORD *)(v19 + 80) = v32;
    *(_QWORD *)v19 = v20;
    *(_QWORD *)(v19 + 8) = v22;
    *(_BYTE *)(v19 + 16) = v24;
    *(_QWORD *)(v19 + 24) = v26;
    *(_QWORD *)(v19 + 32) = v25;
    *(_QWORD *)(v19 + 40) = v27;
    *(_QWORD *)(v19 + 48) = v28;
    *(_QWORD *)(v19 + 56) = v29;
    *(_QWORD *)(v19 + 96) = v31;
    *(_QWORD *)(v19 + 104) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAB0820@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return EncryptedDataContainer.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1CFAB0840(_QWORD *a1, uint64_t *a2)
{
  return EncryptedDataContainer.encode(to:)(a1, a2);
}

void *encryptData<A>(with:to:senderSigningKey:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  SecCertificateRef_optional v11;
  SecCertificateRef value;
  id v13;
  SecCertificateRef_optional v14;
  __SecKey *v15;
  __SecKey *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  SecKeyRef v38;
  uint64_t v39;
  SecCertificateRef v42;
  __int16 v43;

  v5 = *(void **)a2;
  v6 = *(void **)(a2 + 8);
  type metadata accessor for DIPECIESSessionV3SecKey();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CFB05A20;
  *(_QWORD *)(inited + 32) = 0;
  swift_beginAccess();
  v8 = *(_QWORD *)(inited + 16);
  v9 = *(_QWORD *)(inited + 24);
  *(_OWORD *)(inited + 16) = xmmword_1CFB05A20;
  sub_1CF931AB0(v8, v9);
  swift_beginAccess();
  v10 = *(void **)(inited + 32);
  *(_QWORD *)(inited + 32) = 0;

  v11.value = SecTrustRef.getLeafCertificate()().value;
  if (!v11.value)
  {
    v43 = 261;
    v21 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001CFB317B0, &v43, 0, v21, 0xD000000000000062, 0x80000001CFB313F0, v22, 0xD000000000000026, 0x80000001CFB317E0, 225);
    swift_willThrow();
    swift_release();
    return v5;
  }
  value = v11.value;
  if (!v6)
  {
LABEL_11:
    v43 = 261;
    v23 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000027, 0x80000001CFB31810, &v43, 0, v23, 0xD000000000000062, 0x80000001CFB313F0, v24, 0xD000000000000026, 0x80000001CFB317E0, 228);
    swift_willThrow();
    swift_release();

    return v5;
  }
  v13 = v6;
  v5 = v13;
  v14.value = SecTrustRef.getLeafCertificate()().value;
  if (!v14.value)
  {

    goto LABEL_11;
  }
  v42 = v14.value;
  v15 = SecCertificateCopyKey(v14.value);
  if (v15
    && (v16 = v15, v39 = copyPublicKeyDataFromSecKeyPublic(_:)(v15), v18 = v17, v16, v18 >> 60 != 15))
  {
    v38 = SecCertificateCopyKey(value);
    if (v38)
    {
      sub_1CFB00B94();
      swift_allocObject();
      v5 = (void *)sub_1CFB00B88();
      v26 = sub_1CFB00B7C();
      if (!v4)
      {
        v36 = v26;
        v37 = v27;
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9039E0);
        v30 = swift_initStackObject();
        *(_OWORD *)(v30 + 16) = xmmword_1CFB059A0;
        *(_BYTE *)(v30 + 32) = 0;
        *(_QWORD *)(v30 + 40) = a3;
        *(_QWORD *)(v30 + 48) = a4;
        *(_BYTE *)(v30 + 56) = 1;
        *(_QWORD *)(v30 + 64) = v39;
        *(_QWORD *)(v30 + 72) = v18;
        v35 = sub_1CF9242C8(v30);
        swift_setDeallocating();
        sub_1CF9239E0(a3, a4);
        sub_1CF92F5C8(v39, v18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED903DA0);
        swift_arrayDestroy();
        v31 = sub_1CFAE4384(v36, v37, (uint64_t)v38, v35);
        v33 = v32;
        v5 = v34;

        sub_1CF931AB0(v39, v18);
        swift_setDeallocating();
        sub_1CF931AB0(*(_QWORD *)(inited + 16), *(_QWORD *)(inited + 24));

        sub_1CF923A24(v36, v37);
        swift_bridgeObjectRelease();
        sub_1CF923A24(v31, v33);
        return v5;
      }

      swift_release();
      sub_1CF931AB0(v39, v18);
      swift_release();

      goto LABEL_8;
    }
    v43 = 0;
    v5 = v13;
    v28 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003FLL, 0x80000001CFB313B0, &v43, 0, v28, 0xD000000000000062, 0x80000001CFB313F0, v29, 0xD000000000000026, 0x80000001CFB317E0, 235);
    swift_willThrow();
    sub_1CF931AB0(v39, v18);
  }
  else
  {
    v43 = 242;
    v5 = v13;
    v19 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000032, 0x80000001CFB31840, &v43, 0, v19, 0xD000000000000062, 0x80000001CFB313F0, v20, 0xD000000000000026, 0x80000001CFB317E0, 231);
    swift_willThrow();
  }
  swift_release();

LABEL_8:
  return v5;
}

void createEncryptedDataContainer<A>(with:to:senderSigningKey:encryptor:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  SecCertificateRef_optional v17;
  SecCertificateRef value;
  id v19;
  SecCertificateRef_optional v20;
  SecCertificateRef v21;
  __SecKey *v22;
  __SecKey *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void **v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51[12];
  uint64_t v52;
  _UNKNOWN **v53;
  _BYTE v54[48];
  char v55;

  v49 = a8;
  v50 = a9;
  v9 = a6;
  v10 = a4;
  v11 = a3;
  v46 = *(_QWORD *)(a6 - 8);
  v47 = a1;
  MEMORY[0x1E0C80A78](a1, a2, a3, a4, a5, a6, a7, a8);
  v48 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v13 + 8);
  sub_1CFAB1FA8(v15, (uint64_t)v54);
  sub_1CFAB1FA8((uint64_t)v54, (uint64_t)v51);
  v16 = v52;
  sub_1CFAB1FF0((uint64_t)v51);
  if (v16)
  {
    v17.value = SecTrustRef.getLeafCertificate()().value;
    if (v17.value)
      goto LABEL_3;
LABEL_9:
    v51[0] = 261;
    v37 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001CFB317B0, v51, 0, v37, 0xD000000000000062, 0x80000001CFB313F0, v38, 0xD000000000000041, 0x80000001CFB31880, 251);
    swift_willThrow();
    goto LABEL_12;
  }
  v28 = type metadata accessor for DIPECIESSessionV3SecKey();
  v29 = swift_allocObject();
  v45 = v9;
  v44 = v10;
  v30 = v29;
  v43 = xmmword_1CFB05A20;
  v31 = v11;
  *(_OWORD *)(v29 + 16) = xmmword_1CFB05A20;
  v32 = (uint64_t *)(v29 + 16);
  *(_QWORD *)(v29 + 32) = 0;
  v33 = (void **)(v29 + 32);
  swift_beginAccess();
  v34 = *v32;
  v35 = *(_QWORD *)(v30 + 24);
  *(_OWORD *)v32 = v43;
  v11 = v31;
  sub_1CF931AB0(v34, v35);
  swift_beginAccess();
  v36 = *v33;
  *v33 = 0;

  v52 = v28;
  v53 = &protocol witness table for DIPECIESSessionV3SecKey;
  *(_QWORD *)v51 = v30;
  v10 = v44;
  v9 = v45;
  sub_1CFAB1FF0((uint64_t)v54);
  sub_1CFAB2030((uint64_t)v51, (uint64_t)v54);
  v17.value = SecTrustRef.getLeafCertificate()().value;
  if (!v17.value)
    goto LABEL_9;
LABEL_3:
  value = v17.value;
  if (!v14)
  {
LABEL_11:
    v51[0] = 261;
    v39 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000027, 0x80000001CFB31810, v51, 0, v39, 0xD000000000000062, 0x80000001CFB313F0, v40, 0xD000000000000041, 0x80000001CFB31880, 254);
    swift_willThrow();

    goto LABEL_12;
  }
  v19 = v14;
  v20.value = SecTrustRef.getLeafCertificate()().value;
  if (!v20.value)
  {

    goto LABEL_11;
  }
  v21 = v20.value;
  v45 = v11;
  v22 = SecCertificateCopyKey(v20.value);
  if (!v22
    || (v23 = v22,
        v44 = copyPublicKeyDataFromSecKeyPublic(_:)(v22),
        v25 = v24,
        v23,
        *(_QWORD *)&v43 = v25,
        v25 >> 60 == 15))
  {
    v51[0] = 242;
    v26 = sub_1CF921F90(MEMORY[0x1E0DEE9D8]);
    sub_1CF923828();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000032, 0x80000001CFB31840, v51, 0, v26, 0xD000000000000062, 0x80000001CFB313F0, v27, 0xD000000000000041, 0x80000001CFB31880, 257);
    swift_willThrow();

LABEL_12:
    sub_1CFAB1FF0((uint64_t)v54);
    return;
  }
  sub_1CFAB1FA8((uint64_t)v54, (uint64_t)v51);
  if (v52)
  {
    v41 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v48, v47, v9);
    v55 = 1;
    v42 = v45;
    sub_1CF9239E0(v45, v10);
    EncryptedDataContainer.init(alg:encryptor:remoteCertificate:senderSigningKey:recipientSigningKey:data:)((uint64_t)&v55, (uint64_t)v51, value, v42, v10, v44, v43, v41, v50, v9);
    sub_1CFAB1FF0((uint64_t)v54);

  }
  else
  {
    __break(1u);
  }
}

uint64_t createSignedEncryptedMessage<A>(with:to:signingKey:encryptor:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 1216) = v12;
  *(_QWORD *)(v8 + 1208) = v11;
  *(_QWORD *)(v8 + 1200) = a8;
  *(_QWORD *)(v8 + 1192) = a7;
  *(_QWORD *)(v8 + 1184) = a6;
  *(_QWORD *)(v8 + 1176) = a5;
  *(_QWORD *)(v8 + 1168) = a4;
  *(_QWORD *)(v8 + 1160) = a2;
  *(_QWORD *)(v8 + 1152) = a1;
  v9 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(v8 + 1224) = *(_QWORD *)a3;
  *(_QWORD *)(v8 + 1232) = v9;
  *(_BYTE *)(v8 + 1145) = *(_BYTE *)(a3 + 16);
  return swift_task_switch();
}

uint64_t sub_1CFAB1394()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;

  v1 = *(_QWORD **)(v0 + 1168);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  *(_QWORD *)(v0 + 1240) = v4;
  *(_QWORD *)(v0 + 1248) = v5;
  v6 = v4;
  v7 = *(_BYTE *)(v0 + 1145);
  v8 = *(_QWORD *)(v0 + 1232);
  v9 = *(_QWORD *)(v0 + 1216);
  v10 = *(_QWORD *)(v0 + 1208);
  v11 = *(_QWORD *)(v0 + 1200);
  v12 = *(_QWORD *)(v0 + 1176);
  v13 = *(_QWORD *)(v0 + 1160);
  *(_QWORD *)(v0 + 1128) = *(_QWORD *)(v0 + 1224);
  *(_QWORD *)(v0 + 1136) = v8;
  *(_BYTE *)(v0 + 1144) = v7;
  createEncryptedDataContainer<A>(with:to:senderSigningKey:encryptor:)(v13, v0 + 1128, v6, v5, v12, v11, v10, v9, v0 + 1016);
  v14 = *(_BYTE *)(v0 + 1145);
  v36 = *(_QWORD *)(v0 + 1216);
  v15 = *(_QWORD *)(v0 + 1208);
  v16 = *(_QWORD *)(v0 + 1200);
  v37 = *(_QWORD **)(v0 + 1168);
  v17 = *(_QWORD *)(v0 + 1016);
  v18 = *(_QWORD *)(v0 + 1024);
  v19 = *(_BYTE *)(v0 + 1032);
  v34 = *(_OWORD *)(v0 + 1056);
  v35 = *(_OWORD *)(v0 + 1040);
  v32 = *(_OWORD *)(v0 + 1088);
  v33 = *(_OWORD *)(v0 + 1072);
  v31 = *(_OWORD *)(v0 + 1104);
  v20 = *(_QWORD *)(v0 + 1120);
  v21 = sub_1CFB00E64();
  *(_BYTE *)(v0 + 880) = 1;
  *(_BYTE *)(v0 + 881) = v14;
  *(_QWORD *)(v0 + 888) = v17;
  *(_QWORD *)(v0 + 896) = v18;
  *(_BYTE *)(v0 + 904) = v19;
  *(_OWORD *)(v0 + 912) = v35;
  *(_OWORD *)(v0 + 928) = v34;
  *(_OWORD *)(v0 + 944) = v33;
  *(_OWORD *)(v0 + 960) = v32;
  *(_OWORD *)(v0 + 976) = v31;
  *(_QWORD *)(v0 + 992) = v20;
  *(_QWORD *)(v0 + 1000) = v21;
  *(_QWORD *)(v0 + 1008) = v22;
  v23 = type metadata accessor for EncryptedMessage(0, v16, v15, v36);
  v24 = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedMessage<A>, v23);
  v25 = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedMessage<A>, v23);
  JWSSignedJSON.init(payload:)(v0 + 880, v23, v24, v25, v0 + 16);
  v26 = type metadata accessor for JWSSignedJSON(0, v23, v24, v25);
  JWSSignedJSON.setKid(_:)(v37);
  v27 = *(_QWORD *)(v0 + 1192);
  if (v27)
  {
    v28 = *(_QWORD *)(v0 + 1184);
    JWSSignedJSON.setNonce(_:)(*(Swift::String *)(&v27 - 1));
  }
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1256) = v29;
  *v29 = v0;
  v29[1] = sub_1CFAB161C;
  return JWSSignedJSON.sign(_:)(*(_QWORD *)(v0 + 1168), v26);
}

uint64_t sub_1CFAB161C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    memcpy((void *)(v2 + 592), (const void *)(v2 + 16), 0x120uLL);
    sub_1CFAB2084(v2 + 592);
  }
  return swift_task_switch();
}

uint64_t sub_1CFAB169C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1152);
  sub_1CF923A24(*(_QWORD *)(v0 + 1240), *(_QWORD *)(v0 + 1248));
  memcpy(v1, (const void *)(v0 + 16), 0x120uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CFAB16EC()
{
  uint64_t v0;

  sub_1CF923A24(*(_QWORD *)(v0 + 1240), *(_QWORD *)(v0 + 1248));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s13CoreIDVShared9KDFParamsV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  char v17;
  char v18;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v8 = a1[5];
  v7 = a1[6];
  v9 = a2[1];
  v10 = a2[2];
  v12 = a2[3];
  v11 = a2[4];
  v14 = a2[5];
  v13 = a2[6];
  if (!v3)
  {
    if (v9)
      return 0;
    goto LABEL_8;
  }
  if (!v9)
    return 0;
  if (*a1 == *a2 && v3 == v9 || (v15 = sub_1CFB028B0(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v12)
        return 0;
      if (v4 != v10 || v6 != v12)
      {
        v17 = sub_1CFB028B0();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
    }
    else if (v12)
    {
      return 0;
    }
    if (v8)
    {
      if (v14)
      {
        if (v5 != v11 || v8 != v14)
        {
          v18 = sub_1CFB028B0();
          result = 0;
          if ((v18 & 1) == 0)
            return result;
        }
LABEL_24:
        result = (v7 | v13) == 0;
        if (v7)
        {
          if (v13)
            return sub_1CF9D7254((_QWORD *)v7, (_QWORD *)v13);
        }
        return result;
      }
    }
    else if (!v14)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t _s13CoreIDVShared16EncryptionParamsV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;
  _OWORD v34[3];
  uint64_t v35;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v31 = *((_QWORD *)a1 + 4);
  v29 = *(_OWORD *)(a1 + 56);
  v30 = *(_OWORD *)(a1 + 40);
  v28 = *(_OWORD *)(a1 + 72);
  v27 = *((_QWORD *)a1 + 11);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v10 = 0xE500000000000000;
  v11 = 0x33765F4345;
  v25 = *(_OWORD *)(a2 + 56);
  v26 = *(_OWORD *)(a2 + 40);
  if (v2 != 1)
  {
    v11 = 0x48535F33765F4345;
    v10 = 0xE800000000000000;
  }
  v24 = *(_OWORD *)(a2 + 72);
  if (*a1)
    v12 = v11;
  else
    v12 = 0x765F4343455F5645;
  if (v2)
    v13 = v10;
  else
    v13 = 0xEF312E4E53412D31;
  v23 = *(_QWORD *)(a2 + 88);
  v14 = 0xE500000000000000;
  v15 = 0x33765F4345;
  if (*(_BYTE *)a2 != 1)
  {
    v15 = 0x48535F33765F4345;
    v14 = 0xE800000000000000;
  }
  if (*(_BYTE *)a2)
    v16 = v15;
  else
    v16 = 0x765F4343455F5645;
  if (*(_BYTE *)a2)
    v17 = v14;
  else
    v17 = 0xEF312E4E53412D31;
  if (v12 == v16 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = 0;
    if ((v18 & 1) == 0)
      return v19 & 1;
  }
  if (v3 == v6 && v4 == v7 || (v20 = sub_1CFB028B0(), v19 = 0, (v20 & 1) != 0))
  {
    if (v5 == v9 && v31 == v8 || (v21 = sub_1CFB028B0(), v19 = 0, (v21 & 1) != 0))
    {
      v34[0] = v30;
      v34[1] = v29;
      v34[2] = v28;
      v35 = v27;
      v32[0] = v26;
      v32[1] = v25;
      v32[2] = v24;
      v33 = v23;
      v19 = _s13CoreIDVShared9KDFParamsV2eeoiySbAC_ACtFZ_0(v34, v32);
    }
  }
  return v19 & 1;
}

uint64_t type metadata accessor for EncryptedMessage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedMessage.CodingKeys);
}

uint64_t type metadata accessor for EncryptedDataContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedDataContainer);
}

uint64_t sub_1CFAB1ABC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFAB1B4C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CoreIDVShared18KeyAgreementParamsV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1CFB028B0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1CFB028B0();
  }
  return result;
}

unint64_t sub_1CFAB1C6C()
{
  unint64_t result;

  result = qword_1ED903728;
  if (!qword_1ED903728)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F148, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903728);
  }
  return result;
}

unint64_t sub_1CFAB1CB0()
{
  unint64_t result;

  result = qword_1ED903918;
  if (!qword_1ED903918)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F0F8, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903918);
  }
  return result;
}

unint64_t sub_1CFAB1CF4()
{
  unint64_t result;

  result = qword_1ED903648;
  if (!qword_1ED903648)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F0A8, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903648);
  }
  return result;
}

unint64_t sub_1CFAB1D38()
{
  unint64_t result;

  result = qword_1ED903908;
  if (!qword_1ED903908)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParamsAlgorithmIdentifier, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED903908);
  }
  return result;
}

unint64_t sub_1CFAB1D7C()
{
  unint64_t result;

  result = qword_1ED903740;
  if (!qword_1ED903740)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for KeyAgreementParams, &type metadata for KeyAgreementParams);
    atomic_store(result, (unint64_t *)&qword_1ED903740);
  }
  return result;
}

unint64_t sub_1CFAB1DC0()
{
  unint64_t result;

  result = qword_1ED903930;
  if (!qword_1ED903930)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for KDFParams, &type metadata for KDFParams);
    atomic_store(result, (unint64_t *)&qword_1ED903930);
  }
  return result;
}

unint64_t sub_1CFAB1E04()
{
  unint64_t result;

  result = qword_1EFBC4B68;
  if (!qword_1EFBC4B68)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParamsAlgorithmIdentifier, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B68);
  }
  return result;
}

unint64_t sub_1CFAB1E48()
{
  unint64_t result;

  result = qword_1EFBC4B70;
  if (!qword_1EFBC4B70)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for KeyAgreementParams, &type metadata for KeyAgreementParams);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B70);
  }
  return result;
}

unint64_t sub_1CFAB1E8C()
{
  unint64_t result;

  result = qword_1EFBC4B78;
  if (!qword_1EFBC4B78)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for KDFParams, &type metadata for KDFParams);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B78);
  }
  return result;
}

unint64_t sub_1CFAB1ED0()
{
  unint64_t result;

  result = qword_1EFBC4B88;
  if (!qword_1EFBC4B88)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F058, &type metadata for EncryptedDataContainerParamsOnly.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B88);
  }
  return result;
}

unint64_t sub_1CFAB1F14()
{
  unint64_t result;

  result = qword_1EFBC4B90;
  if (!qword_1EFBC4B90)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParams, &type metadata for EncryptionParams);
    atomic_store(result, (unint64_t *)&qword_1EFBC4B90);
  }
  return result;
}

uint64_t type metadata accessor for EncryptedDataContainer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedDataContainer.CodingKeys);
}

unint64_t sub_1CFAB1F64()
{
  unint64_t result;

  result = qword_1ED903660;
  if (!qword_1ED903660)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParams, &type metadata for EncryptionParams);
    atomic_store(result, (unint64_t *)&qword_1ED903660);
  }
  return result;
}

uint64_t sub_1CFAB1FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFAB1FF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CFAB2030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for EncryptedMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedMessage);
}

uint64_t sub_1CFAB2084(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1CFAB21AC()
{
  unint64_t result;

  result = qword_1EFBC4BA8;
  if (!qword_1EFBC4BA8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParamsAlgorithmIdentifier, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EFBC4BA8);
  }
  return result;
}

unint64_t sub_1CFAB21F4()
{
  unint64_t result;

  result = qword_1EFBC4BB0[0];
  if (!qword_1EFBC4BB0[0])
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedMessageEntity, &type metadata for EncryptedMessageEntity);
    atomic_store(result, qword_1EFBC4BB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParamsAlgorithmIdentifier()
{
  return &type metadata for EncryptionParamsAlgorithmIdentifier;
}

uint64_t getEnumTagSinglePayload for EncryptedMessageEntity(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EncryptedMessageEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB2328 + 4 * byte_1CFB1E4F4[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1CFAB235C + 4 * byte_1CFB1E4EF[v4]))();
}

uint64_t sub_1CFAB235C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB2364(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB236CLL);
  return result;
}

uint64_t sub_1CFAB2378(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB2380);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1CFAB2384(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB238C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EncryptedMessageEntity()
{
  return &type metadata for EncryptedMessageEntity;
}

uint64_t initializeBufferWithCopyOfBuffer for RecipientEncryptionCertificate(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for RecipientEncryptionCertificate(id *a1)
{

}

uint64_t assignWithCopy for RecipientEncryptionCertificate(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for RecipientEncryptionCertificate(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecipientEncryptionCertificate(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecipientEncryptionCertificate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecipientEncryptionCertificate()
{
  return &type metadata for RecipientEncryptionCertificate;
}

uint64_t sub_1CFAB2540()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAB2598(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFAB265C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1CFAB27CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAB2880(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CFAB28C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams()
{
  return &type metadata for KeyAgreementParams;
}

uint64_t destroy for KDFParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for KDFParams(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KDFParams(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KDFParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KDFParams(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for KDFParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for KDFParams()
{
  return &type metadata for KDFParams;
}

ValueMetadata *type metadata accessor for EncryptionParams()
{
  return &type metadata for EncryptionParams;
}

uint64_t _s13CoreIDVShared16EncryptionParamsVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CoreIDVShared16EncryptionParamsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CoreIDVShared16EncryptionParamsVwca_0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CoreIDVShared16EncryptionParamsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CoreIDVShared16EncryptionParamsVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CFAB2E6C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptedDataContainerParamsOnly()
{
  return &type metadata for EncryptedDataContainerParamsOnly;
}

uint64_t sub_1CFAB2ED4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAB2F24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CFAB2FD0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_1CFAB3100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAB319C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CFAB31E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EncryptedDataContainerParamsOnly.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CFAB3284 + 4 * byte_1CFB1E4F9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CFAB32A4 + 4 * byte_1CFB1E4FE[v4]))();
}

_BYTE *sub_1CFAB3284(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CFAB32A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFAB32AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFAB32B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CFAB32BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CFAB32C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EncryptedDataContainerParamsOnly.CodingKeys()
{
  return &type metadata for EncryptedDataContainerParamsOnly.CodingKeys;
}

uint64_t _s13CoreIDVShared35EncryptionParamsAlgorithmIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB332C + 4 * byte_1CFB1E508[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CFAB3360 + 4 * byte_1CFB1E503[v4]))();
}

uint64_t sub_1CFAB3360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB3368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB3370);
  return result;
}

uint64_t sub_1CFAB337C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB3384);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CFAB3388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB3390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParams.CodingKeys()
{
  return &type metadata for EncryptionParams.CodingKeys;
}

ValueMetadata *type metadata accessor for KDFParams.CodingKeys()
{
  return &type metadata for KDFParams.CodingKeys;
}

uint64_t _s13CoreIDVShared18KeyAgreementParamsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB340C + 4 * byte_1CFB1E512[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFAB3440 + 4 * byte_1CFB1E50D[v4]))();
}

uint64_t sub_1CFAB3440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB3448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB3450);
  return result;
}

uint64_t sub_1CFAB345C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB3464);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFAB3468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB3470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams.CodingKeys()
{
  return &type metadata for KeyAgreementParams.CodingKeys;
}

uint64_t _s13CoreIDVShared9KDFParamsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB34D8 + 4 * byte_1CFB1E51C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFAB350C + 4 * byte_1CFB1E517[v4]))();
}

uint64_t sub_1CFAB350C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB3514(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB351CLL);
  return result;
}

uint64_t sub_1CFAB3528(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB3530);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFAB3534(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB353C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1CFAB3548()
{
  JUMPOUT(0x1D17DA600);
}

unint64_t sub_1CFAB355C()
{
  unint64_t result;

  result = qword_1EFBC4C38;
  if (!qword_1EFBC4C38)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1ECC8, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C38);
  }
  return result;
}

unint64_t sub_1CFAB35A4()
{
  unint64_t result;

  result = qword_1EFBC4C40;
  if (!qword_1EFBC4C40)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1ED80, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C40);
  }
  return result;
}

unint64_t sub_1CFAB35EC()
{
  unint64_t result;

  result = qword_1EFBC4C48;
  if (!qword_1EFBC4C48)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EE38, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C48);
  }
  return result;
}

unint64_t sub_1CFAB3634()
{
  unint64_t result;

  result = qword_1EFBC4C50;
  if (!qword_1EFBC4C50)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EEF0, &type metadata for EncryptedDataContainerParamsOnly.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C50);
  }
  return result;
}

void sub_1CFAB3678()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAB3688()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAB3698()
{
  JUMPOUT(0x1D17DA600);
}

unint64_t sub_1CFAB36AC()
{
  unint64_t result;

  result = qword_1EFBC4C58;
  if (!qword_1EFBC4C58)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EE60, &type metadata for EncryptedDataContainerParamsOnly.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C58);
  }
  return result;
}

unint64_t sub_1CFAB36F4()
{
  unint64_t result;

  result = qword_1EFBC4C60;
  if (!qword_1EFBC4C60)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EE88, &type metadata for EncryptedDataContainerParamsOnly.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C60);
  }
  return result;
}

unint64_t sub_1CFAB373C()
{
  unint64_t result;

  result = qword_1ED903658;
  if (!qword_1ED903658)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EDA8, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903658);
  }
  return result;
}

unint64_t sub_1CFAB3784()
{
  unint64_t result;

  result = qword_1ED903650;
  if (!qword_1ED903650)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EDD0, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903650);
  }
  return result;
}

unint64_t sub_1CFAB37CC()
{
  unint64_t result;

  result = qword_1ED903928;
  if (!qword_1ED903928)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1ECF0, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903928);
  }
  return result;
}

unint64_t sub_1CFAB3814()
{
  unint64_t result;

  result = qword_1ED903920;
  if (!qword_1ED903920)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1ED18, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903920);
  }
  return result;
}

unint64_t sub_1CFAB385C()
{
  unint64_t result;

  result = qword_1ED903738;
  if (!qword_1ED903738)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EC38, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903738);
  }
  return result;
}

unint64_t sub_1CFAB38A4()
{
  unint64_t result;

  result = qword_1ED903730;
  if (!qword_1ED903730)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1EC60, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED903730);
  }
  return result;
}

void sub_1CFAB38E8()
{
  JUMPOUT(0x1D17DA600);
}

void sub_1CFAB38F8()
{
  JUMPOUT(0x1D17DA600);
}

uint64_t sub_1CFAB3908(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001CFB318F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CFAB39EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001CFB31910 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001CFB31930 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CFB31950 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CFB31970)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1CFAB3B84(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001CFB27830 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656572674179656BLL && a2 == 0xEC000000746E656DLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6710379 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1CFAB3CDC()
{
  unint64_t result;

  result = qword_1EFBC4C68;
  if (!qword_1EFBC4C68)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptedMessageEntity, &type metadata for EncryptedMessageEntity);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C68);
  }
  return result;
}

unint64_t sub_1CFAB3D20()
{
  unint64_t result;

  result = qword_1ED903910;
  if (!qword_1ED903910)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for EncryptionParamsAlgorithmIdentifier, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED903910);
  }
  return result;
}

void static MobileDocumentReaderMilestone.readerIdentifierCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3263316330383734;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000030;
  a1[3] = 0x80000001CFB31990;
}

void static MobileDocumentReaderMilestone.prepareCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3465343466356666;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000027;
  a1[3] = 0x80000001CFB319D0;
}

void static MobileDocumentReaderMilestone.merchantCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6430316161326630;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002ELL;
  a1[3] = 0x80000001CFB31A00;
}

void static MobileDocumentReaderMilestone.readDocumentCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3238363537383936;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002CLL;
  a1[3] = 0x80000001CFB31A30;
}

void static MobileDocumentReaderMilestone.canRequestDocumentCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3661626533643933;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002FLL;
  a1[3] = 0x80000001CFB31A60;
}

void static MobileDocumentReaderMilestone.cancelReadCalled.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6331386165316233;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002ALL;
  a1[3] = 0x80000001CFB31A90;
}

void static MobileDocumentReaderMilestone.readDocumentInProgress.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3133653862306436;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000044;
  a1[3] = 0x80000001CFB31AC0;
}

void static MobileDocumentReaderMilestone.noReadInProgressToCancel.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3763396539636537;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000004ALL;
  a1[3] = 0x80000001CFB31B10;
}

void static MobileDocumentReaderMilestone.readDocumentReaderReady.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6134613935316464;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000024;
  a1[3] = 0x80000001CFB31B60;
}

void static MobileDocumentReaderMilestone.readDocumentReaderConnecting.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3731383135623932;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000001FLL;
  a1[3] = 0x80000001CFB31B90;
}

void static MobileDocumentReaderMilestone.readDocumentReaderAwaitingApproval.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3164346634623938;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000026;
  a1[3] = 0x80000001CFB31BB0;
}

void static MobileDocumentReaderMilestone.readDocumentResponseReceived.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6430623035333834;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000003ELL;
  a1[3] = 0x80000001CFB31BE0;
}

void static MobileDocumentReaderMilestone.readDocumentReturningResponse.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3265353634636239;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000002BLL;
  a1[3] = 0x80000001CFB31C20;
}

void static MobileDocumentReaderMilestone.readRequestBuilt.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6330646664616339;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000032;
  a1[3] = 0x80000001CFB31C50;
}

void static MobileDocumentReaderMilestone.readRequestSigned.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3562316263326233;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000032;
  a1[3] = 0x80000001CFB31C90;
}

void static MobileDocumentReaderMilestone.readerAuthenticationCertificateFetched.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6632396531363235;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000029;
  a1[3] = 0x80000001CFB31CD0;
}

void static MobileDocumentReaderMilestone.readerAuthenticationCertificateStored.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3662383539363238;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000034;
  a1[3] = 0x80000001CFB31D00;
}

void static MobileDocumentReaderMilestone.readerAuthenticationCertificateDeleted.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3635353162613039;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000029;
  a1[3] = 0x80000001CFB31D40;
}

void static MobileDocumentReaderMilestone.readerAuthenticationKeyFetched.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3230313136363138;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000021;
  a1[3] = 0x80000001CFB31D70;
}

void static MobileDocumentReaderMilestone.readerAuthenticationKeyCreated.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3064376665376264;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000035;
  a1[3] = 0x80000001CFB31DA0;
}

void static MobileDocumentReaderMilestone.readerAuthenticationKeyDeleted.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6138653438636464;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000021;
  a1[3] = 0x80000001CFB31DE0;
}

void static MobileDocumentReaderMilestone.prepareCertificateFound.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3535623739396634;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000033;
  a1[3] = 0x80000001CFB31E10;
}

void static MobileDocumentReaderMilestone.prepareCertificateNotFound.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3939313732356531;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000003CLL;
  a1[3] = 0x80000001CFB31E50;
}

void static MobileDocumentReaderMilestone.prepareIdentityKeyFound.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3065613565366264;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000034;
  a1[3] = 0x80000001CFB31E90;
}

void static MobileDocumentReaderMilestone.prepareIdentityKeyNotFound.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x3733373965383831;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000003DLL;
  a1[3] = 0x80000001CFB31ED0;
}

void static MobileDocumentReaderMilestone.prepareCertificateFetched.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x6266636434646163;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000029;
  a1[3] = 0x80000001CFB31F10;
}

ValueMetadata *type metadata accessor for MobileDocumentReaderMilestone()
{
  return &type metadata for MobileDocumentReaderMilestone;
}

uint64_t IQComplexSignal.identifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1CF9243C8(v2, v3);
}

uint64_t IQComplexSignal.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t IQComplexSignal.signals.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 IQComplexSignal.init(identifier:priority:signals:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  return result;
}

uint64_t IQComplexSignal.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v1 = *(_QWORD *)(v0 + 24);
  sub_1CFB02388();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "identifier: ");
  IQACode.toString.getter();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  sub_1CFB027F0();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  sub_1CFAF2640(v1);
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t sub_1CFAB447C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x797469726F697270;
  if (*v0 != 1)
    v1 = 0x736C616E676973;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1CFAB44DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAB5D70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAB4500()
{
  sub_1CFAB46EC();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAB4528()
{
  sub_1CFAB46EC();
  return sub_1CFB02B80();
}

uint64_t IQComplexSignal.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4C70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v15 = v1[1];
  v16 = v1[2];
  v21 = v1[3];
  v22 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB46EC();
  sub_1CFB02B5C();
  v24 = v14;
  v25 = v15;
  v26 = 0;
  sub_1CFAB4730();
  v17 = v23;
  sub_1CFB027CC();
  if (!v17)
  {
    v18 = v21;
    LOBYTE(v24) = 1;
    sub_1CFB027B4();
    v24 = v18;
    v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4C88);
    sub_1CFAB4A4C(&qword_1EFBC4C90, (uint64_t (*)(void))sub_1CFAB4774, MEMORY[0x1E0DEAF10]);
    sub_1CFB027CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1CFAB46EC()
{
  unint64_t result;

  result = qword_1EFBC4C78;
  if (!qword_1EFBC4C78)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F5FC, &type metadata for IQComplexSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C78);
  }
  return result;
}

unint64_t sub_1CFAB4730()
{
  unint64_t result;

  result = qword_1EFBC4C80;
  if (!qword_1EFBC4C80)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQACode, &type metadata for IQACode);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C80);
  }
  return result;
}

unint64_t sub_1CFAB4774()
{
  unint64_t result;

  result = qword_1EFBC4C98;
  if (!qword_1EFBC4C98)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQSignal, &type metadata for IQSignal);
    atomic_store(result, (unint64_t *)&qword_1EFBC4C98);
  }
  return result;
}

uint64_t IQComplexSignal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4CA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB46EC();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  sub_1CFAB4A08();
  sub_1CFB02724();
  v16 = v22;
  v17 = v23;
  LOBYTE(v22) = 1;
  sub_1CF9243C8(v16, v23);
  v21 = sub_1CFB0270C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4C88);
  v24 = 2;
  sub_1CFAB4A4C(&qword_1EFBC4CB0, (uint64_t (*)(void))sub_1CFAB4AB4, MEMORY[0x1E0DEAF40]);
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v18 = v22;
  sub_1CF9243C8(v16, v17);
  swift_bridgeObjectRetain();
  sub_1CF97609C(v16, v17);
  *a2 = v16;
  a2[1] = v17;
  a2[2] = v21;
  a2[3] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1CF97609C(v16, v17);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CFAB4A08()
{
  unint64_t result;

  result = qword_1EFBC4CA8;
  if (!qword_1EFBC4CA8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQACode, &type metadata for IQACode);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CA8);
  }
  return result;
}

uint64_t sub_1CFAB4A4C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4C88);
    v8 = a2();
    result = MEMORY[0x1D17DA600](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CFAB4AB4()
{
  unint64_t result;

  result = qword_1EFBC4CB8;
  if (!qword_1EFBC4CB8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQSignal, &type metadata for IQSignal);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CB8);
  }
  return result;
}

uint64_t sub_1CFAB4AF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IQComplexSignal.init(from:)(a1, a2);
}

uint64_t sub_1CFAB4B0C(_QWORD *a1)
{
  return IQComplexSignal.encode(to:)(a1);
}

uint64_t IQSignal.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1CF9F2D6C(v2, v3, v4);
}

void IQSignal.comparator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

float IQSignal.threshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

uint64_t IQSignal.init(type:comparator:threshold:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, float a4@<S0>)
{
  char v4;
  char v5;

  v4 = *(_BYTE *)(result + 16);
  v5 = *a2;
  *(_OWORD *)a3 = *(_OWORD *)result;
  *(_BYTE *)(a3 + 16) = v4;
  *(_BYTE *)(a3 + 17) = v5;
  *(float *)(a3 + 20) = a4;
  return result;
}

void IQSignal.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 17);
  sub_1CFB01B30();
  IQCType.toString.getter();
  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  __asm { BR              X9 }
}

uint64_t sub_1CFAB4C08()
{
  uint64_t v1;

  sub_1CFB01B30();
  swift_bridgeObjectRelease();
  sub_1CFB01B30();
  sub_1CFB01ED8();
  sub_1CFB01B30();
  return v1;
}

uint64_t IQComparator.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFAB4D34 + 4 * byte_1CFB1F217[*v0]))(0x6C61757165, 0xE500000000000000);
}

uint64_t sub_1CFAB4D34()
{
  return 0x6C61757145746F6ELL;
}

uint64_t sub_1CFAB4D4C()
{
  return 1936942444;
}

uint64_t sub_1CFAB4D5C()
{
  return 0x72657461657267;
}

uint64_t sub_1CFAB4D74()
{
  return 0x617571457373656CLL;
}

uint64_t sub_1CFAB4D90()
{
  return 0x4572657461657267;
}

uint64_t sub_1CFAB4DB0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1CFAB4DC8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74617261706D6F63;
  if (*v0 != 1)
    v1 = 0x6C6F687365726874;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_1CFAB4E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CFAB5ED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CFAB4E48()
{
  sub_1CFAB5028();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAB4E70()
{
  sub_1CFAB5028();
  return sub_1CFB02B80();
}

uint64_t IQSignal.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4CC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5, v6, v7, v8, v9, v10, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v14 = v1[1];
  v16 = *((_BYTE *)v1 + 16);
  HIDWORD(v23) = *((unsigned __int8 *)v1 + 17);
  v17 = a1[3];
  v18 = a1;
  v20 = v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1CFAB5028();
  sub_1CFB02B5C();
  v26 = v15;
  v27 = v14;
  v28 = v16;
  v25 = 0;
  sub_1CF9F2F78();
  v21 = v24;
  sub_1CFB027CC();
  if (!v21)
  {
    LOBYTE(v26) = BYTE4(v23);
    v25 = 1;
    sub_1CFAB506C();
    sub_1CFB027CC();
    LOBYTE(v26) = 2;
    sub_1CFB027A8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v20);
}

unint64_t sub_1CFAB5028()
{
  unint64_t result;

  result = qword_1EFBC4CC8;
  if (!qword_1EFBC4CC8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F5AC, &type metadata for IQSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CC8);
  }
  return result;
}

unint64_t sub_1CFAB506C()
{
  unint64_t result;

  result = qword_1EFBC4CD0;
  if (!qword_1EFBC4CD0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQComparator, &type metadata for IQComparator);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CD0);
  }
  return result;
}

uint64_t IQSignal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  int v19;
  int v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4CD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7, v8, v9, v10, v11, v12, v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB5028();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  sub_1CF9F3064();
  sub_1CFB02724();
  v24 = a2;
  v17 = v26;
  v16 = v27;
  v18 = v28;
  v25 = 1;
  sub_1CF9F2D6C(v26, v27, v28);
  sub_1CFAB52CC();
  sub_1CFB02724();
  HIDWORD(v23) = v26;
  LOBYTE(v26) = 2;
  sub_1CFB02700();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  v22 = v24;
  *v24 = v17;
  v22[1] = v16;
  *((_BYTE *)v22 + 16) = v18;
  *((_BYTE *)v22 + 17) = BYTE4(v23);
  *((_DWORD *)v22 + 5) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1CF9F2D84(v17, v16, v18);
}

unint64_t sub_1CFAB52CC()
{
  unint64_t result;

  result = qword_1EFBC4CE0;
  if (!qword_1EFBC4CE0)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQComparator, &type metadata for IQComparator);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CE0);
  }
  return result;
}

uint64_t sub_1CFAB5310@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IQSignal.init(from:)(a1, a2);
}

uint64_t sub_1CFAB5324(_QWORD *a1)
{
  return IQSignal.encode(to:)(a1);
}

CoreIDVShared::IQComparator_optional __swiftcall IQComparator.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDVShared::IQComparator_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1CFAB5390(char *a1)
{
  sub_1CFA2A56C(*a1);
}

unint64_t sub_1CFAB53A0()
{
  unint64_t result;

  result = qword_1EFBC4CE8;
  if (!qword_1EFBC4CE8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQComparator, &type metadata for IQComparator);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CE8);
  }
  return result;
}

void sub_1CFAB53E4()
{
  char *v0;

  sub_1CFA97F10(0, *v0);
}

void sub_1CFAB53F0()
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAB5428()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAB54D0(uint64_t a1)
{
  char *v1;

  sub_1CFA97F10(a1, *v1);
}

CoreIDVShared::IQComparator_optional sub_1CFAB54D8(Swift::String *a1)
{
  return IQComparator.init(rawValue:)(*a1);
}

uint64_t sub_1CFAB54E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CFAB5510 + 4 * byte_1CFB1F225[*v0]))();
}

void sub_1CFAB5510(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61757145746F6ELL;
  a1[1] = 0xE800000000000000;
}

void sub_1CFAB552C(_QWORD *a1@<X8>)
{
  *a1 = 1936942444;
  a1[1] = 0xE400000000000000;
}

void sub_1CFAB5540(_QWORD *a1@<X8>)
{
  *a1 = 0x72657461657267;
  a1[1] = 0xE700000000000000;
}

void sub_1CFAB555C(_QWORD *a1@<X8>)
{
  *a1 = 0x617571457373656CLL;
  a1[1] = 0xE90000000000006CLL;
}

void sub_1CFAB557C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "greaterEqual");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1CFAB55A0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1CFAB55BC()
{
  sub_1CFAB602C();
  return sub_1CFB01C5C();
}

uint64_t sub_1CFAB5618()
{
  sub_1CFAB602C();
  return sub_1CFB01C14();
}

uint64_t destroy for IQComplexSignal(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0x30uLL)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IQComplexSignal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  if (v4 >= 0x30)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IQComplexSignal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] >= 0x30uLL)
  {
    if (v4 >= 0x30)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1CFAB579C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 0x30)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CFAB579C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

_QWORD *assignWithTake for IQComplexSignal(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  if (a1[1] >= 0x30uLL)
  {
    v4 = a2[1];
    if (v4 >= 0x30)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1CFAB579C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IQComplexSignal()
{
  return &type metadata for IQComplexSignal;
}

uint64_t sub_1CFAB5850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1CF9F2D6C(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithCopy for IQSignal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1CF9F2D6C(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1CF9F2D84(v7, v8, v9);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithTake for IQSignal(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1CF9F2D84(v5, v6, v7);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for IQSignal(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IQSignal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IQSignal()
{
  return &type metadata for IQSignal;
}

uint64_t storeEnumTagSinglePayload for IQComparator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB5A60 + 4 * byte_1CFB1F231[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1CFAB5A94 + 4 * byte_1CFB1F22C[v4]))();
}

uint64_t sub_1CFAB5A94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB5A9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB5AA4);
  return result;
}

uint64_t sub_1CFAB5AB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB5AB8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1CFAB5ABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB5AC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IQComparator()
{
  return &type metadata for IQComparator;
}

ValueMetadata *type metadata accessor for IQSignal.CodingKeys()
{
  return &type metadata for IQSignal.CodingKeys;
}

uint64_t _s13CoreIDVShared8IQSignalV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB5B40 + 4 * byte_1CFB1F23B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CFAB5B74 + 4 * byte_1CFB1F236[v4]))();
}

uint64_t sub_1CFAB5B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB5B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB5B84);
  return result;
}

uint64_t sub_1CFAB5B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB5B98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CFAB5B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB5BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IQComplexSignal.CodingKeys()
{
  return &type metadata for IQComplexSignal.CodingKeys;
}

unint64_t sub_1CFAB5BC4()
{
  unint64_t result;

  result = qword_1EFBC4CF0;
  if (!qword_1EFBC4CF0)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F4CC, &type metadata for IQComplexSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CF0);
  }
  return result;
}

unint64_t sub_1CFAB5C0C()
{
  unint64_t result;

  result = qword_1EFBC4CF8;
  if (!qword_1EFBC4CF8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F584, &type metadata for IQSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4CF8);
  }
  return result;
}

unint64_t sub_1CFAB5C54()
{
  unint64_t result;

  result = qword_1EFBC4D00;
  if (!qword_1EFBC4D00)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F4F4, &type metadata for IQSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D00);
  }
  return result;
}

unint64_t sub_1CFAB5C9C()
{
  unint64_t result;

  result = qword_1EFBC4D08;
  if (!qword_1EFBC4D08)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F51C, &type metadata for IQSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D08);
  }
  return result;
}

unint64_t sub_1CFAB5CE4()
{
  unint64_t result;

  result = qword_1EFBC4D10;
  if (!qword_1EFBC4D10)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F43C, &type metadata for IQComplexSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D10);
  }
  return result;
}

unint64_t sub_1CFAB5D2C()
{
  unint64_t result;

  result = qword_1EFBC4D18;
  if (!qword_1EFBC4D18)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F464, &type metadata for IQComplexSignal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D18);
  }
  return result;
}

uint64_t sub_1CFAB5D70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C616E676973 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CFAB5ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74617261706D6F63 && a2 == 0xEA0000000000726FLL || (sub_1CFB028B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CFB028B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1CFAB602C()
{
  unint64_t result;

  result = qword_1EFBC4D20;
  if (!qword_1EFBC4D20)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for IQComparator, &type metadata for IQComparator);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D20);
  }
  return result;
}

uint64_t ISO18013SessionEstablishment.readerKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CFAB607C(v1, a1);
}

uint64_t sub_1CFAB607C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ISO18013SessionEstablishment.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ISO18013SessionEstablishment() + 20);
  v2 = *(_QWORD *)v1;
  sub_1CF9239E0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t type metadata accessor for ISO18013SessionEstablishment()
{
  uint64_t result;

  result = qword_1EFBC4DB8;
  if (!qword_1EFBC4DB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CFAB6140(char *a1, char *a2)
{
  return sub_1CFA27704(*a1, *a2);
}

uint64_t sub_1CFAB614C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAB61C8()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAB6220()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAB6298@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1CFAB62F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (!*v1)
    v2 = 0x4B72656461655265;
  v3 = 0xEA00000000007965;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1CFAB6330()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 0x4B72656461655265;
}

uint64_t sub_1CFAB6368@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CFB02670();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1CFAB63C8()
{
  sub_1CFAB66CC();
  return sub_1CFB02B74();
}

uint64_t sub_1CFAB63F0()
{
  sub_1CFAB66CC();
  return sub_1CFB02B80();
}

uint64_t ISO18013SessionEstablishment.init(readerKey:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  _QWORD *v8;

  sub_1CF931BA0(a1, a4, &qword_1EFBC4D28);
  result = type metadata accessor for ISO18013SessionEstablishment();
  v8 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t ISO18013SessionEstablishment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;

  v39 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
  MEMORY[0x1E0C80A78](v4, v5, v6, v7, v8, v9, v10, v11);
  v41 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D30);
  v13 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ISO18013SessionEstablishment();
  MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB66CC();
  sub_1CFB02B2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = v13;
  v34 = (uint64_t)v32;
  v35 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  LOBYTE(v42) = 0;
  sub_1CFAB69CC(&qword_1EFBC4D48, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
  v36 = v40;
  sub_1CFB026DC();
  sub_1CF931BA0(v41, v34, &qword_1EFBC4D28);
  v43 = 1;
  sub_1CF92399C();
  sub_1CFB02724();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v36);
  *(_OWORD *)(v34 + *(int *)(v23 + 20)) = v42;
  sub_1CFAB6710(v34, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1CFAB6754(v34);
}

unint64_t sub_1CFAB66CC()
{
  unint64_t result;

  result = qword_1EFBC4D38;
  if (!qword_1EFBC4D38)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F7F4, &type metadata for ISO18013SessionEstablishment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4D38);
  }
  return result;
}

uint64_t sub_1CFAB6710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ISO18013SessionEstablishment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CFAB6754(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ISO18013SessionEstablishment();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ISO18013SessionEstablishment.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[3];
  uint64_t v37;
  __int128 v38;
  char v39;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14, v15, v16, v17, v18, v19, v20);
  v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D50);
  v37 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23, v24, v25, v26, v27, v28, v29, v30);
  v32 = (char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CFAB66CC();
  v33 = v36[1];
  sub_1CFB02B5C();
  sub_1CFAB607C(v33, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1CF931B1C((uint64_t)v11, &qword_1EFBC4D28);
LABEL_4:
    v38 = *(_OWORD *)(v33 + *(int *)(type metadata accessor for ISO18013SessionEstablishment() + 20));
    v39 = 1;
    sub_1CF9319D0();
    sub_1CFB027CC();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v32, v23);
  }
  sub_1CF931BA0((uint64_t)v11, (uint64_t)v22, &qword_1EFBC4D40);
  LOBYTE(v38) = 0;
  sub_1CFAB69CC(&qword_1EFBC4D58, (uint64_t)&protocol conformance descriptor for CBOREncodedCBOR<A>);
  v34 = v36[2];
  sub_1CFB027CC();
  sub_1CF931B1C((uint64_t)v22, &qword_1EFBC4D40);
  if (!v34)
    goto LABEL_4;
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v32, v23);
}

uint64_t sub_1CFAB69CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4D40);
    result = MEMORY[0x1D17DA600](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CFAB6A10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013SessionEstablishment.init(from:)(a1, a2);
}

uint64_t sub_1CFAB6A24(_QWORD *a1)
{
  return ISO18013SessionEstablishment.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013SessionEstablishment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      v12 = a2[2];
      sub_1CF9239E0(v11, v12);
      a1[1] = v11;
      a1[2] = v12;
      v13 = *(int *)(v7 + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1CFB01194();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = *v19;
    v21 = v19[1];
    sub_1CF9239E0(*v19, v21);
    *v18 = v20;
    v18[1] = v21;
  }
  return a1;
}

uint64_t destroy for ISO18013SessionEstablishment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    sub_1CF923A24(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
    v5 = a1 + *(int *)(v4 + 48);
    v6 = sub_1CFB01194();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return sub_1CF923A24(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

_QWORD *initializeWithCopy for ISO18013SessionEstablishment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    v10 = a2[2];
    sub_1CF9239E0(v9, v10);
    a1[1] = v9;
    a1[2] = v10;
    v11 = *(int *)(v6 + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1CFB01194();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = *v17;
  v19 = v17[1];
  sub_1CF9239E0(*v17, v19);
  *v16 = v18;
  v16[1] = v19;
  return a1;
}

_QWORD *assignWithCopy for ISO18013SessionEstablishment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v26 = a2[1];
      v27 = a2[2];
      sub_1CF9239E0(v26, v27);
      v28 = a1[1];
      v29 = a1[2];
      a1[1] = v26;
      a1[2] = v27;
      sub_1CF923A24(v28, v29);
      v30 = *(int *)(v6 + 48);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_1CFB01194();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
      goto LABEL_7;
    }
    sub_1CF931B1C((uint64_t)a1, &qword_1EFBC4D40);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  sub_1CF9239E0(v11, v12);
  a1[1] = v11;
  a1[2] = v12;
  v13 = *(int *)(v6 + 48);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1CFB01194();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = *v20;
  v22 = v20[1];
  sub_1CF9239E0(*v20, v22);
  v23 = *v19;
  v24 = v19[1];
  *v19 = v21;
  v19[1] = v22;
  sub_1CF923A24(v23, v24);
  return a1;
}

_QWORD *initializeWithTake for ISO18013SessionEstablishment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    v9 = *(int *)(v6 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1CFB01194();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ISO18013SessionEstablishment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a1 + 8);
      v22 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v20;
      sub_1CF923A24(v21, v22);
      v23 = *(int *)(v6 + 48);
      v24 = a1 + v23;
      v25 = a2 + v23;
      v26 = sub_1CFB01194();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_1CF931B1C(a1, &qword_1EFBC4D40);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v11 = *(int *)(v6 + 48);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1CFB01194();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a1 + v16 + 8);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  sub_1CF923A24(v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013SessionEstablishment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFAB7114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ISO18013SessionEstablishment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CFAB71B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBC4D28);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

void sub_1CFAB7240()
{
  unint64_t v0;

  sub_1CFAB72B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CFAB72B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFBC4DC8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4D40);
    v0 = sub_1CFB02190();
    if (!v1)
      atomic_store(v0, qword_1EFBC4DC8);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013SessionEstablishment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB7354 + 4 * byte_1CFB1F655[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CFAB7388 + 4 * byte_1CFB1F650[v4]))();
}

uint64_t sub_1CFAB7388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB7390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB7398);
  return result;
}

uint64_t sub_1CFAB73A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB73ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CFAB73B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB73B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionEstablishment.CodingKeys()
{
  return &type metadata for ISO18013SessionEstablishment.CodingKeys;
}

unint64_t sub_1CFAB73D8()
{
  unint64_t result;

  result = qword_1EFBC4DF8;
  if (!qword_1EFBC4DF8)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F7CC, &type metadata for ISO18013SessionEstablishment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4DF8);
  }
  return result;
}

unint64_t sub_1CFAB7420()
{
  unint64_t result;

  result = qword_1EFBC4E00;
  if (!qword_1EFBC4E00)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F704, &type metadata for ISO18013SessionEstablishment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E00);
  }
  return result;
}

unint64_t sub_1CFAB7468()
{
  unint64_t result;

  result = qword_1EFBC4E08;
  if (!qword_1EFBC4E08)
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1F72C, &type metadata for ISO18013SessionEstablishment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E08);
  }
  return result;
}

CoreIDVShared::JWSAlgorithm_optional __swiftcall JWSAlgorithm.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDVShared::JWSAlgorithm_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t JWSAlgorithm.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7469573635325345;
  if (*v0 != 1)
    v1 = 0x453635325345;
  if (*v0)
    return v1;
  else
    return 0x3635325345;
}

uint64_t sub_1CFAB7560(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CFA2A454(*a1, *a2);
}

uint64_t sub_1CFAB756C()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAB760C()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CFAB7688()
{
  sub_1CFB02A90();
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::JWSAlgorithm_optional sub_1CFAB7724(Swift::String *a1)
{
  return JWSAlgorithm.init(rawValue:)(*a1);
}

void sub_1CFAB7730(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEC0000004D415568;
  v5 = 0x7469573635325345;
  if (v2 != 1)
  {
    v5 = 0x453635325345;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x3635325345;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1CFAB7790()
{
  sub_1CFAB7F30();
  return sub_1CFB01C5C();
}

uint64_t sub_1CFAB77EC()
{
  sub_1CFAB7F30();
  return sub_1CFB01C14();
}

void *static HardwareAttestationType.allCases.getter()
{
  return &unk_1E8CDE0D8;
}

CoreIDVShared::HardwareAttestationType_optional __swiftcall HardwareAttestationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreIDVShared::HardwareAttestationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CFB02670();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t HardwareAttestationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CFAB78C4 + 4 * byte_1CFB1F850[*v0]))(5260627, 0xE300000000000000);
}

uint64_t sub_1CFAB78C4()
{
  return 17747;
}

uint64_t sub_1CFAB78D0()
{
  return 5653577;
}

uint64_t sub_1CFAB78DC()
{
  return 20559;
}

void sub_1CFAB78E8(char *a1)
{
  sub_1CFA28280(*a1);
}

void sub_1CFAB78F4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CFB02A90();
  __asm { BR              X9 }
}

uint64_t sub_1CFAB7938()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

void sub_1CFAB7984()
{
  __asm { BR              X10 }
}

uint64_t sub_1CFAB79B8()
{
  sub_1CFB01ADC();
  return swift_bridgeObjectRelease();
}

void sub_1CFAB79F0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CFB02A90();
  __asm { BR              X9 }
}

uint64_t sub_1CFAB7A30()
{
  sub_1CFB01ADC();
  swift_bridgeObjectRelease();
  return sub_1CFB02ACC();
}

CoreIDVShared::HardwareAttestationType_optional sub_1CFAB7A7C(Swift::String *a1)
{
  return HardwareAttestationType.init(rawValue:)(*a1);
}

uint64_t sub_1CFAB7A88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CFAB7AB0 + 4 * byte_1CFB1F860[*v0]))();
}

void sub_1CFAB7AB0(_QWORD *a1@<X8>)
{
  *a1 = 17747;
  a1[1] = 0xE200000000000000;
}

void sub_1CFAB7AC0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 5653577;
  a1[1] = v1;
}

void sub_1CFAB7AD0(_QWORD *a1@<X8>)
{
  *a1 = 20559;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_1CFAB7AE0()
{
  sub_1CFAB7EEC();
  return sub_1CFB01C5C();
}

uint64_t sub_1CFAB7B3C()
{
  sub_1CFAB7EEC();
  return sub_1CFB01C14();
}

void sub_1CFAB7B88(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E8CDE180;
}

BOOL static DIPKeyAlgorithm.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DIPKeyAlgorithm.hash(into:)()
{
  return sub_1CFB02A9C();
}

uint64_t DIPKeyAlgorithm.hashValue.getter()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

unint64_t sub_1CFAB7C1C()
{
  unint64_t result;

  result = qword_1EFBC4E10;
  if (!qword_1EFBC4E10)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSAlgorithm, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E10);
  }
  return result;
}

unint64_t sub_1CFAB7C64()
{
  unint64_t result;

  result = qword_1EFBC4E18;
  if (!qword_1EFBC4E18)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for HardwareAttestationType, &type metadata for HardwareAttestationType);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E18);
  }
  return result;
}

unint64_t sub_1CFAB7CAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBC4E20;
  if (!qword_1EFBC4E20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBC4E28);
    result = MEMORY[0x1D17DA600](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E20);
  }
  return result;
}

unint64_t sub_1CFAB7CFC()
{
  unint64_t result;

  result = qword_1EFBC4E30;
  if (!qword_1EFBC4E30)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for DIPKeyAlgorithm, &type metadata for DIPKeyAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E30);
  }
  return result;
}

ValueMetadata *type metadata accessor for JWSAlgorithm()
{
  return &type metadata for JWSAlgorithm;
}

uint64_t storeEnumTagSinglePayload for HardwareAttestationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB7DA0 + 4 * byte_1CFB1F869[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CFAB7DD4 + 4 * byte_1CFB1F864[v4]))();
}

uint64_t sub_1CFAB7DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB7DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB7DE4);
  return result;
}

uint64_t sub_1CFAB7DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB7DF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CFAB7DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB7E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HardwareAttestationType()
{
  return &type metadata for HardwareAttestationType;
}

uint64_t _s13CoreIDVShared12JWSAlgorithmOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CFAB7E6C + 4 * byte_1CFB1F873[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CFAB7EA0 + 4 * byte_1CFB1F86E[v4]))();
}

uint64_t sub_1CFAB7EA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB7EA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFAB7EB0);
  return result;
}

uint64_t sub_1CFAB7EBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFAB7EC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CFAB7EC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFAB7ED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPKeyAlgorithm()
{
  return &type metadata for DIPKeyAlgorithm;
}

unint64_t sub_1CFAB7EEC()
{
  unint64_t result;

  result = qword_1ED9041B8;
  if (!qword_1ED9041B8)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for HardwareAttestationType, &type metadata for HardwareAttestationType);
    atomic_store(result, (unint64_t *)&qword_1ED9041B8);
  }
  return result;
}

unint64_t sub_1CFAB7F30()
{
  unint64_t result;

  result = qword_1ED903188;
  if (!qword_1ED903188)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for JWSAlgorithm, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED903188);
  }
  return result;
}

Swift::Bool __swiftcall NSUserDefaults.internalBool(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  unsigned __int8 v3;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 != 1)
    return 0;
  v2 = (void *)sub_1CFB01A04();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

uint64_t sub_1CFAB800C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1CFB0246C();
      v7 = (uint64_t)sub_1CFAB9398(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1CFAB92B4(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

Swift::Bool __swiftcall isInternalBuild()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;

  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = os_variant_allows_internal_security_policies();
  if (v11)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v12, v0);
    v13 = sub_1CFB012B4();
    v14 = sub_1CFB01FC8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1CF917000, v13, v14, "Internal build detected", v15, 2u);
      MEMORY[0x1D17DA6E4](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  return v11;
}

uint64_t sub_1CFAB83C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = os_variant_allows_internal_security_policies();
  v12 = result;
  if ((_DWORD)result)
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v13, v0);
    v14 = sub_1CFB012B4();
    v15 = sub_1CFB01FC8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1CF917000, v14, v15, "Internal build detected", v16, 2u);
      MEMORY[0x1D17DA6E4](v16, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  byte_1ED907588 = v12;
  return result;
}

Swift::String_optional __swiftcall experimentalGroup()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  Swift::String_optional result;
  uint64_t v27;

  v0 = sub_1CFB012CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2, v3, v4, v5, v6, v7, v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 0;
  if (os_variant_allows_internal_security_policies())
  {
    if (qword_1ED9054E8 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v13, v0);
    v14 = sub_1CFB012B4();
    v15 = sub_1CFB01FC8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1CF917000, v14, v15, "Internal build detected", v16, 2u);
      MEMORY[0x1D17DA6E4](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    v17 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v18 = (void *)sub_1CFB01A04();
    v19 = objc_msgSend(v17, sel_initWithSuiteName_, v18);

    if (v19)
    {
      v20 = v19;
      v21 = (void *)sub_1CFB01A04();
      v22 = objc_msgSend(v20, sel_stringForKey_, v21);

      if (v22)
      {
        v11 = sub_1CFB01A28();
        v12 = v23;

        goto LABEL_11;
      }

    }
    v11 = 0;
    v12 = 0;
  }
LABEL_11:
  v24 = v11;
  v25 = v12;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

Swift::String_optional __swiftcall NSUserDefaults.internalString(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  Swift::String_optional result;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1
    && (v2 = (void *)sub_1CFB01A04(),
        v3 = objc_msgSend(v1, sel_stringForKey_, v2),
        v2,
        v3))
  {
    v4 = sub_1CFB01A28();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = v4;
  v8 = v6;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

Swift::Int_optional __swiftcall NSUserDefaults.internalInt(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];
  Swift::Int_optional result;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1)
  {
    v2 = (void *)sub_1CFB01A04();
    v3 = objc_msgSend(v1, sel_stringForKey_, v2);

    if (v3)
    {
      v4 = sub_1CFB01A28();
      v6 = v5;

      v8 = HIBYTE(v6) & 0xF;
      v9 = v4 & 0xFFFFFFFFFFFFLL;
      if ((v6 & 0x2000000000000000) != 0)
        v10 = HIBYTE(v6) & 0xF;
      else
        v10 = v4 & 0xFFFFFFFFFFFFLL;
      if (v10)
      {
        if ((v6 & 0x1000000000000000) != 0)
        {
          v12 = (uint64_t)sub_1CFAB92B4(v4, v6, 10);
          LOBYTE(v4) = v27;
LABEL_48:
          swift_bridgeObjectRelease();
          v23 = v4 & 1;
          if ((v4 & 1) != 0)
            v7 = 0;
          else
            v7 = v12;
          goto LABEL_59;
        }
        if ((v6 & 0x2000000000000000) == 0)
        {
          if ((v4 & 0x1000000000000000) != 0)
            v11 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v11 = (unsigned __int8 *)sub_1CFB0246C();
          v12 = (uint64_t)sub_1CFAB9398(v11, v9, 10);
          LOBYTE(v4) = v13 & 1;
          goto LABEL_48;
        }
        v28[0] = v4;
        v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
        if (v4 == 43)
        {
          if (!v8)
            goto LABEL_63;
          if (v8 == 1 || (BYTE1(v4) - 48) > 9u)
            goto LABEL_35;
          v12 = (BYTE1(v4) - 48);
          if (v8 != 2)
          {
            if ((BYTE2(v4) - 48) > 9u)
              goto LABEL_35;
            v12 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            v14 = v8 - 3;
            if (v14)
            {
              v15 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                v16 = *v15 - 48;
                if (v16 > 9)
                  goto LABEL_35;
                v17 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_35;
                v12 = v17 + v16;
                if (__OFADD__(v17, v16))
                  goto LABEL_35;
                LOBYTE(v4) = 0;
                ++v15;
                if (!--v14)
                  goto LABEL_48;
              }
            }
          }
        }
        else
        {
          if (v4 == 45)
          {
            if (v8)
            {
              if (v8 != 1 && (BYTE1(v4) - 48) <= 9u)
              {
                if (v8 == 2)
                {
                  LOBYTE(v4) = 0;
                  v12 = -(uint64_t)(BYTE1(v4) - 48);
                  goto LABEL_48;
                }
                if ((BYTE2(v4) - 48) <= 9u)
                {
                  v12 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
                  v22 = v8 - 3;
                  if (!v22)
                    goto LABEL_47;
                  v24 = (unsigned __int8 *)v28 + 3;
                  while (1)
                  {
                    v25 = *v24 - 48;
                    if (v25 > 9)
                      break;
                    v26 = 10 * v12;
                    if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                      break;
                    v12 = v26 - v25;
                    if (__OFSUB__(v26, v25))
                      break;
                    LOBYTE(v4) = 0;
                    ++v24;
                    if (!--v22)
                      goto LABEL_48;
                  }
                }
              }
LABEL_35:
              v12 = 0;
              LOBYTE(v4) = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          if (!v8 || (v4 - 48) > 9u)
            goto LABEL_35;
          v12 = (v4 - 48);
          if (v8 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u)
              goto LABEL_35;
            v12 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
            v18 = v8 - 2;
            if (v18)
            {
              v19 = (unsigned __int8 *)v28 + 2;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  goto LABEL_35;
                v21 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_35;
                v12 = v21 + v20;
                if (__OFADD__(v21, v20))
                  goto LABEL_35;
                LOBYTE(v4) = 0;
                ++v19;
                if (!--v18)
                  goto LABEL_48;
              }
            }
          }
        }
LABEL_47:
        LOBYTE(v4) = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
    }
  }
  v7 = 0;
  v23 = 1;
LABEL_59:
  LOBYTE(v9) = v23;
LABEL_64:
  result.is_nil = v9;
  result.value = v7;
  return result;
}

void __swiftcall NSUserDefaults.internalFloat(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[4];
  _QWORD v28[3];
  char v29;
  int v30;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1)
  {
    v3 = (void *)sub_1CFB01A04();
    v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      v5 = sub_1CFB01A28();
      v7 = v6;

      v30 = 0;
      v16 = MEMORY[0x1E0C80A78](v8, v9, v10, v11, v12, v13, v14, v15);
      v27[2] = &v30;
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v5 & 0x1000000000000000))
      {
        sub_1CFB0237C();
      }
      else
      {
        MEMORY[0x1E0C80A78](v16, v27, v17, v18, v19, v20, v21, v22);
        if ((v7 & 0x2000000000000000) != 0)
        {
          v28[0] = v5;
          v28[1] = v7 & 0xFFFFFFFFFFFFFFLL;
          v25 = (v5 > 0x20u || ((0x100003E01uLL >> v5) & 1) == 0)
             && (v24 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
             && *v24 == 0;
          v29 = v25;
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        if ((v5 & 0x1000000000000000) != 0)
        {
          ((void (*)(_QWORD *__return_ptr, uint64_t))sub_1CFAB9C70)(v28, (v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v26 = sub_1CFB0246C();
          ((void (*)(_QWORD *__return_ptr, uint64_t))sub_1CFAB9C70)(v28, v26);
        }
        v29 = v28[0];
      }
      swift_bridgeObjectRelease();
LABEL_19:
      v23 = v29 ^ 1;
      goto LABEL_20;
    }
  }
  v23 = 1;
LABEL_20:
  LOBYTE(v28[0]) = v23;
}

Swift::OpaquePointer_optional __swiftcall NSUserDefaults.internalStringArray(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 == 1
    && (v2 = (void *)sub_1CFB01A04(),
        v3 = objc_msgSend(v1, sel_stringArrayForKey_, v2),
        v2,
        v3))
  {
    v4 = sub_1CFB01CA4();

  }
  else
  {
    v4 = 0;
  }
  forKey._countAndFlagsBits = v4;
  return *(Swift::OpaquePointer_optional *)&forKey._countAndFlagsBits;
}

Swift::Double_optional __swiftcall NSUserDefaults.internalDouble(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Bool v22;
  _BYTE *v23;
  BOOL v24;
  double v25;
  uint64_t v26;
  _QWORD v27[5];
  _QWORD v28[3];
  char v29;
  _BOOL8 v30;
  Swift::Double_optional result;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 != 1
    || (v2 = (void *)sub_1CFB01A04(),
        v3 = objc_msgSend(v1, sel_stringForKey_, v2),
        v2,
        !v3))
  {
    v22 = 0;
    goto LABEL_24;
  }
  v4 = sub_1CFB01A28();
  v6 = v5;

  v30 = 0;
  v15 = MEMORY[0x1E0C80A78](v7, v8, v9, v10, v11, v12, v13, v14);
  v27[2] = &v30;
  if ((v6 & 0x1000000000000000) != 0 || !(v6 & 0x2000000000000000 | v4 & 0x1000000000000000))
  {
    sub_1CFB0237C();
  }
  else
  {
    MEMORY[0x1E0C80A78](v15, v27, v16, v17, v18, v19, v20, v21);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v28[0] = v4;
      v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      v24 = (v4 > 0x20u || ((0x100003E01uLL >> v4) & 1) == 0)
         && (v23 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
         && *v23 == 0;
      v29 = v24;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    if ((v4 & 0x1000000000000000) != 0)
    {
      ((void (*)(_QWORD *__return_ptr, uint64_t))sub_1CFAB9C8C)(v28, (v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v26 = sub_1CFB0246C();
      ((void (*)(_QWORD *__return_ptr, uint64_t))sub_1CFAB9C8C)(v28, v26);
    }
    v29 = v28[0];
  }
  swift_bridgeObjectRelease();
LABEL_19:
  if (v29)
    v22 = v30;
  else
    v22 = 0;
LABEL_24:
  result.value = v25;
  result.is_nil = v22;
  return result;
}

uint64_t static NSUserDefaults.globalInternalInt(forKey:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 != 1)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_persistentDomainForName_, *MEMORY[0x1E0CB2B58]);

  if (!v5 || (v6 = sub_1CFB0195C(), v5, !v6))
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_16;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    v11 = 0u;
    v12 = 0u;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CFA922E4(a1, a2);
  if ((v8 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_1CF94BBF0(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_16:
    sub_1CF929418((uint64_t)&v11);
    return 0;
  }
  if (swift_dynamicCast())
    return v10;
  else
    return 0;
}

uint64_t sub_1CFAB9228(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1CFB01B90();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D17D88C0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1CFAB92A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CFAB9398(a1, a2, a3);
}

unsigned __int8 *sub_1CFAB92B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1CFB01BB4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1CFAB9614();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1CFB0246C();
  }
LABEL_7:
  v11 = sub_1CFAB9398(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1CFAB9398(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1CFAB9614()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1CFB01BC0();
  v4 = sub_1CFAB9690(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CFAB9690(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1CFAB97D4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1CFACF4C8(v9, 0);
      v12 = sub_1CFAB98C0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D17D8830](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D17D8830);
LABEL_9:
      sub_1CFB0246C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D17D8830]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1CFAB97D4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1CFAB9228(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1CFAB9228(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1CFB01B6C();
  }
  __break(1u);
  return result;
}

unint64_t sub_1CFAB98C0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1CFAB9228(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1CFB01B78();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1CFB0246C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1CFAB9228(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1CFB01B54();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  unsigned __int8 v10;
  __int128 v11;
  __int128 v12;

  if (qword_1ED904DB0 != -1)
    swift_once();
  if (byte_1ED907588 != 1)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_persistentDomainForName_, *MEMORY[0x1E0CB2B58]);

  if (!v5 || (v6 = sub_1CFB0195C(), v5, !v6))
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_15;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    v11 = 0u;
    v12 = 0u;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CFA922E4(a1, a2);
  if ((v8 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_1CF94BBF0(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_15:
    sub_1CF929418((uint64_t)&v11);
    return 0;
  }
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v10;
  return result;
}

_BYTE *sub_1CFAB9C70@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1CFAB9CA8(a1, MEMORY[0x1E0DEEA58], a2);
}

_BYTE *sub_1CFAB9C8C@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1CFAB9CA8(a1, MEMORY[0x1E0DEEA50], a2);
}

_BYTE *sub_1CFAB9CA8@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v4 = *result;
  v5 = v4 > 0x20;
  v6 = (1 << v4) & 0x100003E01;
  v7 = v5 || v6 == 0;
  v8 = v7 && (result = (_BYTE *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

const char *CoreIDVFeatureFlag.domain.getter()
{
  return "CoreIDV";
}

uint64_t CoreIDVFeatureFlag.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1CFAB9D54 + 4 * byte_1CFB1FB80[*v0]))("unittesting", 11);
}

const char *sub_1CFAB9D54()
{
  return "rac";
}

const char *sub_1CFAB9D88()
{
  return "livenessRefactor2024";
}

const char *sub_1CFAB9D9C()
{
  return "digitalPresentmentRegionCheck";
}

const char *sub_1CFAB9DB0()
{
  return "silenceLegacyWarmup";
}

BOOL static CoreIDVFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CoreIDVFeatureFlag.hash(into:)()
{
  return sub_1CFB02A9C();
}

uint64_t CoreIDVFeatureFlag.hashValue.getter()
{
  sub_1CFB02A90();
  sub_1CFB02A9C();
  return sub_1CFB02ACC();
}

uint64_t sub_1CFAB9E44()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1CFAB9E50()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

Swift::Bool __swiftcall FeatureFlagProvider.isEnabled(_:)(CoreIDVShared::CoreIDVFeatureFlag a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool result;

  v1 = a1;
  v2 = sub_1CFB012CC();
  MEMORY[0x1E0C80A78](v2, v3, v4, v5, v6, v7, v8, v9);
  __asm { BR              X9 }
  return result;
}

uint64_t sub_1CFAB9EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _DWORD *v10;

  *(_QWORD *)(v4 - 96) = &type metadata for FeatureFlag;
  *(_QWORD *)(v4 - 88) = sub_1CFABA248();
  v5 = swift_allocObject();
  *(_QWORD *)(v4 - 120) = v5;
  *(_QWORD *)(v5 + 16) = "CoreIDV";
  *(_QWORD *)(v5 + 24) = 7;
  *(_BYTE *)(v5 + 32) = 2;
  *(_QWORD *)(v5 + 40) = "rac";
  *(_QWORD *)(v5 + 48) = 3;
  *(_BYTE *)(v5 + 56) = 2;
  v6 = sub_1CFB011AC();
  __swift_destroy_boxed_opaque_existential_1(v4 - 120);
  if (qword_1ED9054E8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED907590);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v0);
  v8 = sub_1CFB012B4();
  v9 = sub_1CFB01FC8();
  if (os_log_type_enabled(v8, v9))
  {
    *(_QWORD *)(v4 - 144) = v2;
    v10 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v4 - 128) = swift_slowAlloc();
    *v10 = 136315394;
    __asm { BR              X10 }
  }

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return v6 & 1;
}

BOOL sub_1CFABA230(CoreIDVShared::CoreIDVFeatureFlag a1)
{
  return FeatureFlagProvider.isEnabled(_:)(a1);
}

unint64_t sub_1CFABA248()
{
  unint64_t result;

  result = qword_1ED903B48[0];
  if (!qword_1ED903B48[0])
  {
    result = MEMORY[0x1D17DA600](&unk_1CFB1FC90, &type metadata for FeatureFlag);
    atomic_store(result, qword_1ED903B48);
  }
  return result;
}

uint64_t sub_1CFABA28C()
{
  return swift_deallocObject();
}

unint64_t sub_1CFABA2A0()
{
  unint64_t result;

  result = qword_1EFBC4E38;
  if (!qword_1EFBC4E38)
  {
    result = MEMORY[0x1D17DA600](&protocol conformance descriptor for CoreIDVFeatureFlag, &type metadata for CoreIDVFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1EFBC4E38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CoreIDVFeatureFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1CFABA330 + 4 * byte_1CFB1FB9A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1CFABA364 + 4 * byte_1CFB1FB95[v4]))();
}

uint64_t sub_1CFABA364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFABA36C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CFABA374);
  return result;
}

uint64_t sub_1CFABA380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CFABA388);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1CFABA38C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CFABA394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreIDVFeatureFlag()
{
  return &type metadata for CoreIDVFeatureFlag;
}

uint64_t dispatch thunk of FeatureFlagProviding.isEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for FeatureFlagProvider()
{
  return &type metadata for FeatureFlagProvider;
}

uint64_t getEnumTagSinglePayload for FeatureFlag(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

