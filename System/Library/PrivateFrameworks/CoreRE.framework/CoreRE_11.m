uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Slice<re::ecs2::AmbientAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientAudioComponent>,re::Slice<re::ecs2::AmbientAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientAudioComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A580;
  *(_DWORD *)(v3 + 28) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 36) = 0x13F800000;
  result = 6.14672757e-10;
  *(_OWORD *)(v3 + 44) = xmmword_22610D440;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4AE58;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D18))
  {
    qword_254108D10 = re::ecs2::introspect_SpatialAudioComponent(0);
    __cxa_guard_release(&qword_254108D18);
  }
  return qword_254108D10;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SpatialAudioComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4ADE8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SpatialAudioComponent::~SpatialAudioComponent(re::ecs2::SpatialAudioComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SpatialAudioComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4AE58;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialAudioComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Slice<re::ecs2::SpatialAudioComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialAudioComponent>,re::Slice<re::ecs2::SpatialAudioComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialAudioComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioTransientComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 136, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED49BA8;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 60) = 0u;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_DWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 124) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4AF70;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D28);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D28))
  {
    qword_254108D20 = re::ecs2::introspect_AudioTransientComponent(0);
    __cxa_guard_release(&qword_254108D28);
  }
  return qword_254108D20;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioTransientComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4AF00;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4AF70;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioTransientComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Slice<re::ecs2::AudioTransientComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioTransientComponent>,re::Slice<re::ecs2::AudioTransientComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioTransientComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::AudioSessionComponent *re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doMakeComponent@<X0>(re::ecs2::AudioSessionComponent **a1@<X8>)
{
  re::ecs2::AudioSessionComponent *v2;
  re::ecs2::AudioSessionComponent *result;

  v2 = (re::ecs2::AudioSessionComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                + 7)
                                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioSessionComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 256, 0);
  result = re::ecs2::AudioSessionComponent::AudioSessionComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B088;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D38))
  {
    qword_254108D30 = re::ecs2::introspect_AudioSessionComponent(0);
    __cxa_guard_release(&qword_254108D38);
  }
  return qword_254108D30;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioSessionComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B018;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B088;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioSessionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Slice<re::ecs2::AudioSessionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioSessionComponent>,re::Slice<re::ecs2::AudioSessionComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioSessionComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  re::ecs2::AudioAnimationComponent *v2;
  uint64_t v3;

  v2 = (re::ecs2::AudioAnimationComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                                  + 7)
                                                                                               + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioAnimationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 248, 0);
  re::ecs2::AudioAnimationComponent::AudioAnimationComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B1A0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D48))
  {
    qword_254108D40 = re::ecs2::introspect_AudioAnimationComponent(0);
    __cxa_guard_release(&qword_254108D48);
  }
  return qword_254108D40;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioAnimationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B130;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B1A0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioAnimationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Slice<re::ecs2::AudioAnimationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioAnimationComponent>,re::Slice<re::ecs2::AudioAnimationComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioAnimationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioMixerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED61D40;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 116) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B2B8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D58))
  {
    qword_254108D50 = re::ecs2::introspect_AudioMixerComponent(0);
    __cxa_guard_release(&qword_254108D58);
  }
  return qword_254108D50;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioMixerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B248;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B2B8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Slice<re::ecs2::AudioMixerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixerComponent>,re::Slice<re::ecs2::AudioMixerComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ReverbComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ReverbComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 48, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED649A8;
  *(_QWORD *)(v3 + 32) = -1;
  *(_BYTE *)(v3 + 40) = 1;
  *(_WORD *)(v3 + 42) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B3D0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D68))
  {
    qword_254108D60 = re::ecs2::introspect_ReverbComponent(0);
    __cxa_guard_release(&qword_254108D68);
  }
  return qword_254108D60;
}

__n128 re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReverbComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ReverbComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B360;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B3D0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReverbComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Slice<re::ecs2::ReverbComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReverbComponent>,re::Slice<re::ecs2::ReverbComponent*>>::Subscription const&,re::Slice<re::ecs2::ReverbComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioMixGroupsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED65290;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 116) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B4E8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D78))
  {
    qword_254108D70 = re::ecs2::introspect_AudioMixGroupsComponent(0);
    __cxa_guard_release(&qword_254108D78);
  }
  return qword_254108D70;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioMixGroupsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B478;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B4E8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioMixGroupsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Slice<re::ecs2::AudioMixGroupsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioMixGroupsComponent>,re::Slice<re::ecs2::AudioMixGroupsComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioMixGroupsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)v3 = &off_24ED57F38;
  *(_QWORD *)&result = 3;
  *(_QWORD *)(v3 + 28) = 3;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B600;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D88))
  {
    qword_254108D80 = re::ecs2::introspect_AudioDebugComponent(0);
    __cxa_guard_release(&qword_254108D88);
  }
  return qword_254108D80;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioDebugComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B590;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AudioDebugComponent::~AudioDebugComponent(re::ecs2::AudioDebugComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioDebugComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B600;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Slice<re::ecs2::AudioDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioDebugComponent>,re::Slice<re::ecs2::AudioDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioDebugComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 80, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED584C0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B718;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108D98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108D98))
  {
    qword_254108D90 = re::ecs2::introspect_AudioLibraryComponent(0);
    __cxa_guard_release(&qword_254108D98);
  }
  return qword_254108D90;
}

__n128 re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AudioLibraryComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B6A8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AudioLibraryComponent::~AudioLibraryComponent(re::ecs2::AudioLibraryComponent *this)
{
  *(_QWORD *)this = &off_24ED584C0;
  re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit((uint64_t *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED584C0;
  re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit((uint64_t *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AudioLibraryComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

double re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::EntryWithHash::free(a1[2] + v3);
        ++v4;
        v3 += 72;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::DynamicString,re::AssetHandle,re::Hash<re::DynamicString>,re::EqualTo<re::DynamicString>,true,false>::EntryWithHash::free(uint64_t a1)
{
  int v1;
  uint64_t v3;
  _OWORD *v4;

  v1 = *(_DWORD *)(a1 + 8);
  if (v1 < 0)
  {
    v4 = (_OWORD *)(a1 + 16);
    v3 = *(_QWORD *)(a1 + 16);
    *((_DWORD *)v4 - 2) = v1 & 0x7FFFFFFF;
    if (v3)
    {
      if ((*(_BYTE *)(a1 + 24) & 1) != 0)
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 40))(v3, *(_QWORD *)(a1 + 32));
      *v4 = 0u;
      v4[1] = 0u;
    }
    re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 48));
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B718;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AudioLibraryComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Slice<re::ecs2::AudioLibraryComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AudioLibraryComponent>,re::Slice<re::ecs2::AudioLibraryComponent*>>::Subscription const&,re::Slice<re::ecs2::AudioLibraryComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED592C0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(int32x4_t *)(v3 + 64) = vdupq_n_s32(0x7F800000u);
  *(_BYTE *)(v3 + 80) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 84) = result;
  *(_DWORD *)(v3 + 92) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B830;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DA8))
  {
    qword_254108DA0 = re::ecs2::introspect_AREnvironmentProbeComponent(0);
    __cxa_guard_release(&qword_254108DA8);
  }
  return qword_254108DA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AREnvironmentProbeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B7C0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AREnvironmentProbeComponent::~AREnvironmentProbeComponent(re::ecs2::AREnvironmentProbeComponent *this)
{
  re::AssetHandle::~AssetHandle((re::ecs2::AREnvironmentProbeComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle::~AssetHandle((re::ecs2::AREnvironmentProbeComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AREnvironmentProbeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B830;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AREnvironmentProbeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Slice<re::ecs2::AREnvironmentProbeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AREnvironmentProbeComponent>,re::Slice<re::ecs2::AREnvironmentProbeComponent*>>::Subscription const&,re::Slice<re::ecs2::AREnvironmentProbeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57488;
  result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4B948;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DB8))
  {
    qword_254108DB0 = re::ecs2::introspect_ARSegmentationComponent(0);
    __cxa_guard_release(&qword_254108DB8);
  }
  return qword_254108DB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ARSegmentationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B8D8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ARSegmentationComponent::~ARSegmentationComponent(re::ecs2::ARSegmentationComponent *this)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)*((_QWORD *)this + 7);
  if (v2)
  {

    *((_QWORD *)this + 7) = 0;
  }
  v3 = (void *)*((_QWORD *)this + 6);
  if (v3)
  {

    *((_QWORD *)this + 6) = 0;
  }
  v4 = (void *)*((_QWORD *)this + 5);
  if (v4)
  {

    *((_QWORD *)this + 5) = 0;
  }
  v5 = (void *)*((_QWORD *)this + 4);
  if (v5)
  {

    *((_QWORD *)this + 4) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)*((_QWORD *)this + 7);
  if (v2)
  {

    *((_QWORD *)this + 7) = 0;
  }
  v3 = (void *)*((_QWORD *)this + 6);
  if (v3)
  {

    *((_QWORD *)this + 6) = 0;
  }
  v4 = (void *)*((_QWORD *)this + 5);
  if (v4)
  {

    *((_QWORD *)this + 5) = 0;
  }
  v5 = (void *)*((_QWORD *)this + 4);
  if (v5)
  {

    *((_QWORD *)this + 4) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ARSegmentationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4B948;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ARSegmentationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Slice<re::ecs2::ARSegmentationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ARSegmentationComponent>,re::Slice<re::ecs2::ARSegmentationComponent*>>::Subscription const&,re::Slice<re::ecs2::ARSegmentationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::BallSocketJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED464C0;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 32));
  objc_initWeak((id *)(v2 + 56), 0);
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 56));
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0x3F80000000000000;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = 0x3F80000000000000;
  *(_BYTE *)(v2 + 144) = 1;
  *(_QWORD *)(v2 + 152) = 0;
  result = objc_initWeak((id *)(v2 + 160), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BA60;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DC8))
  {
    qword_254108DC0 = re::ecs2::introspect_BallSocketJointComponent(0);
    __cxa_guard_release(&qword_254108DC8);
  }
  return qword_254108DC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::BallSocketJointComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4B9F0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BA60;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BallSocketJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Slice<re::ecs2::BallSocketJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BallSocketJointComponent>,re::Slice<re::ecs2::BallSocketJointComponent*>>::Subscription const&,re::Slice<re::ecs2::BallSocketJointComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  re *inited;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED45BF0;
  inited = (re *)objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 72) = re::globalAllocators(inited)[2];
  *(_QWORD *)(v2 + 168) = 0;
  result = 0.0;
  *(_OWORD *)(v2 + 108) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 160) = 0;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BB78;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DD8))
  {
    qword_254108DD0 = re::ecs2::introspect_BlendShapeWeightsBufferComponent(0);
    __cxa_guard_release(&qword_254108DD8);
  }
  return qword_254108DD0;
}

__n128 re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsBufferComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4BB08;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BB78;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsBufferComponent>,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsBufferComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::BlendShapeWeightsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 368, 0);
  return re::make::shared::inplace<re::ecs2::BlendShapeWeightsComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BC90;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DE8))
  {
    qword_254108DE0 = re::ecs2::introspect_BlendShapeWeightsComponent(0);
    __cxa_guard_release(&qword_254108DE8);
  }
  return qword_254108DE0;
}

__n128 re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::BlendShapeWeightsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4BC20;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BC90;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BlendShapeWeightsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Slice<re::ecs2::BlendShapeWeightsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BlendShapeWeightsComponent>,re::Slice<re::ecs2::BlendShapeWeightsComponent*>>::Subscription const&,re::Slice<re::ecs2::BlendShapeWeightsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED590C0;
  *(_QWORD *)(v3 + 36) = 0;
  *(_QWORD *)(v3 + 28) = 0;
  *(_QWORD *)(v3 + 41) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BDA8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108DF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108DF8))
  {
    qword_254108DF0 = re::ecs2::introspect_BodyTrackingComponent(0);
    __cxa_guard_release(&qword_254108DF8);
  }
  return qword_254108DF0;
}

__n128 re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::BodyTrackingComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4BD38;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::BodyTrackingComponent::~BodyTrackingComponent(re::ecs2::BodyTrackingComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::BodyTrackingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BDA8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::BodyTrackingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Slice<re::ecs2::BodyTrackingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::BodyTrackingComponent>,re::Slice<re::ecs2::BodyTrackingComponent*>>::Subscription const&,re::Slice<re::ecs2::BodyTrackingComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 376, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_QWORD *)(v2 + 368) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57788;
  *(_DWORD *)(v3 + 28) = 0;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 312) = 0;
  result = 0.0;
  *(_OWORD *)(v2 + 328) = 0u;
  *(_OWORD *)(v2 + 344) = 0u;
  *(_DWORD *)(v2 + 360) = 0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_DWORD *)(v2 + 104) = 0;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_DWORD *)(v2 + 144) = 0;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_DWORD *)(v2 + 184) = 0;
  *(_DWORD *)(v2 + 224) = 0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_DWORD *)(v2 + 264) = 0;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_DWORD *)(v2 + 304) = 0;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_QWORD *)(v2 + 364) = 0x7FFFFFFFLL;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BEC0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E08))
  {
    qword_254108E00 = re::ecs2::introspect_CameraViewDescriptorsComponent(0);
    __cxa_guard_release(&qword_254108E08);
  }
  return qword_254108E00;
}

__n128 re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CameraViewDescriptorsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4BE50;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::CameraViewDescriptorsComponent::~CameraViewDescriptorsComponent(re::ecs2::CameraViewDescriptorsComponent *this, double a2)
{
  *(_QWORD *)this = &off_24ED57788;
  re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit((uint64_t *)this + 41, a2);
  re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit((uint64_t)this + 280);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 30);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 25);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 20);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 15);
  re::DynamicArray<re::CameraMultiView>::deinit((uint64_t)this + 80);
  re::DynamicArray<re::CameraView>::deinit((uint64_t)this + 40);
  objc_destroyWeak((id *)this + 4);
  *((_QWORD *)this + 4) = 0;
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED57788;
  re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit((uint64_t *)this + 41, a2);
  re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit((uint64_t)this + 280);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 30);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 25);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 20);
  re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit((_QWORD *)this + 15);
  re::DynamicArray<re::CameraMultiView>::deinit((uint64_t)this + 80);
  re::DynamicArray<re::CameraView>::deinit((uint64_t)this + 40);
  objc_destroyWeak((id *)this + 4);
  *((_QWORD *)this + 4) = 0;
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CameraViewDescriptorsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<unsigned long,re::DynamicString,re::Hash<unsigned long>,re::EqualTo<unsigned long>,true,false>::deinit(uint64_t *a1, double result)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;

  v3 = *a1;
  if (v3)
  {
    v4 = *((unsigned int *)a1 + 8);
    if ((_DWORD)v4)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0uLL;
      do
      {
        v8 = a1[2];
        v9 = v8 + v5;
        v10 = *(_DWORD *)(v8 + v5 + 8);
        if (v10 < 0)
        {
          *(_DWORD *)(v9 + 8) = v10 & 0x7FFFFFFF;
          v13 = *(_QWORD *)(v9 + 24);
          v12 = (__n128 *)(v9 + 24);
          v11 = v13;
          if (v13)
          {
            if ((*(_BYTE *)(v8 + v5 + 32) & 1) != 0)
            {
              (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)v11 + 40))(v11, *(_QWORD *)(v8 + v5 + 40), v7);
              v7 = 0uLL;
            }
            *v12 = v7;
            v12[1] = v7;
            v4 = *((unsigned int *)a1 + 8);
          }
        }
        ++v6;
        v5 += 56;
      }
      while (v6 < v4);
      v3 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 40))(v3, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor>::deinit(uint64_t a1)
{
  uint64_t result;
  re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *v3;
  uint64_t v4;
  uint64_t v5;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor **)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 384 * v4;
        do
        {
          re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor::~OneoffViewDescriptor(v3);
          v3 = (re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *)((char *)v3 + 384);
          v5 -= 384;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor **)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor::~OneoffViewDescriptor(re::ecs2::CameraViewDescriptorsComponent::OneoffViewDescriptor *this)
{
  uint64_t i;
  void *v3;
  void *v4;
  void *v5;
  uint64_t j;

  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)this + 336);
  re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit((uint64_t)this + 288);
  for (i = 272; i != 256; i -= 8)
  {
    v3 = *(void **)((char *)this + i);
    if (v3)
    {

      *(_QWORD *)((char *)this + i) = 0;
    }
  }
  do
  {
    v4 = *(void **)((char *)this + i);
    if (v4)
    {

      *(_QWORD *)((char *)this + i) = 0;
    }
    i -= 8;
  }
  while (i != 240);
  do
  {
    v5 = *(void **)((char *)this + i);
    if (v5)
    {

      *(_QWORD *)((char *)this + i) = 0;
    }
    i -= 8;
  }
  while (i != 224);
  for (j = 152; j != 72; j -= 40)
    re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)this + j);
  re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)this + 72);
  re::AssetHandle::~AssetHandle(this);
}

uint64_t re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  void *v7;
  void *v8;
  uint64_t j;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD **)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = &v3[17 * v4];
        do
        {
          for (i = 14; i != 12; --i)
          {
            v7 = (void *)v3[i];
            if (v7)
            {

              v3[i] = 0;
            }
          }
          do
          {
            v8 = (void *)v3[i];
            if (v8)
            {

              v3[i] = 0;
            }
            --i;
          }
          while (i != 10);
          for (j = 7; j != 1; j -= 3)
            re::AssetHandle::~AssetHandle((re::AssetHandle *)&v3[j]);
          if (*v3)
          {
            if ((v3[1] & 1) != 0)
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)*v3 + 40))(*v3, v3[2]);
            *(_OWORD *)v3 = 0u;
            *((_OWORD *)v3 + 1) = 0u;
          }
          v3 += 17;
        }
        while (v3 != v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD **)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(uint64_t a1)
{
  uint64_t result;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  __n128 v7;
  __n128 *v8;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(__n128 **)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = v4 << 6;
        v6 = v3 + 2;
        v7 = 0uLL;
        do
        {
          v8 = v6 - 2;
          if (v6->n128_u64[0])
          {
            if ((v6->n128_u8[8] & 1) != 0)
            {
              (*(void (**)(unint64_t, unint64_t, __n128))(*(_QWORD *)v6->n128_u64[0] + 40))(v6->n128_u64[0], v6[1].n128_u64[0], v7);
              v7 = 0uLL;
            }
            *v6 = v7;
            v6[1] = v7;
          }
          if (v8->n128_u64[0])
          {
            if ((v6[-2].n128_u8[8] & 1) != 0)
            {
              (*(void (**)(unint64_t, unint64_t, __n128))(*(_QWORD *)v8->n128_u64[0] + 40))(v8->n128_u64[0], v6[-1].n128_u64[0], v7);
              v7 = 0uLL;
            }
            *v8 = v7;
            v6[-1] = v7;
          }
          v6 += 4;
          v5 -= 64;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(__n128 **)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, __n128 *))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

_QWORD *re::DynamicArray<re::ecs2::CameraViewDescriptor>::deinit(_QWORD *result)
{
  _QWORD *v1;

  if (*result)
  {
    v1 = result;
    result = (_QWORD *)result[4];
    if (result)
    {
      re::ObjectHelper::destroy<re::ecs2::CameraViewDescriptor>((re::AssetHandle *)result, (re::AssetHandle *)&result[42 * v1[2]]);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*v1 + 40))(*v1, v1[4]);
    }
    v1[4] = 0;
    v1[1] = 0;
    v1[2] = 0;
    *v1 = 0;
    ++*((_DWORD *)v1 + 6);
  }
  return result;
}

void re::ObjectHelper::destroy<re::ecs2::CameraViewDescriptor>(re::AssetHandle *a1, re::AssetHandle *a2)
{
  re::AssetHandle *v3;
  uint64_t i;
  void *v5;
  void *v6;
  void *v7;
  uint64_t j;

  if (a1 != a2)
  {
    v3 = a1;
    do
    {
      re::DynamicArray<re::ecs2::SpecifyLaneCommand>::deinit((uint64_t)v3 + 288);
      for (i = 272; i != 256; i -= 8)
      {
        v5 = *(void **)((char *)v3 + i);
        if (v5)
        {

          *(_QWORD *)((char *)v3 + i) = 0;
        }
      }
      do
      {
        v6 = *(void **)((char *)v3 + i);
        if (v6)
        {

          *(_QWORD *)((char *)v3 + i) = 0;
        }
        i -= 8;
      }
      while (i != 240);
      do
      {
        v7 = *(void **)((char *)v3 + i);
        if (v7)
        {

          *(_QWORD *)((char *)v3 + i) = 0;
        }
        i -= 8;
      }
      while (i != 224);
      for (j = 152; j != 72; j -= 40)
        re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)v3 + j);
      re::DynamicArray<re::ecs2::ScopeLanePair>::deinit((uint64_t)v3 + 72);
      re::AssetHandle::~AssetHandle(v3);
      v3 = (re::AssetHandle *)((char *)v3 + 336);
    }
    while (v3 != a2);
  }
}

uint64_t re::DynamicArray<re::CameraMultiView>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = v3 + 1360 * v4;
        do
        {
          v6 = 1344;
          do
          {
            v7 = (_QWORD *)(v3 + v6 - 672);
            re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(v3 + v6 - 400);
            re::DynamicArray<re::RenderGraphFileProvider>::deinit(v3 + v6 - 448);
            if (*v7)
            {
              if ((*(_BYTE *)(v3 + v6 - 664) & 1) != 0)
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)*v7 + 40))(*v7, *(_QWORD *)(v3 + v6 - 656));
              *(_OWORD *)v7 = 0u;
              *(_OWORD *)(v3 + v6 - 656) = 0u;
            }
            v6 -= 672;
          }
          while (v6);
          v3 += 1360;
        }
        while (v3 != v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::RenderGraphFileProvider>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = v3 + 16;
        v6 = 48 * v4;
        v7 = 0uLL;
        do
        {
          v8 = *(_QWORD *)(v5 - 8);
          if (v8)
          {
            if ((*(_BYTE *)v5 & 1) != 0)
            {
              (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)v8 + 40))(v8, *(_QWORD *)(v5 + 8), v7);
              v7 = 0uLL;
            }
            *(__n128 *)(v5 - 8) = v7;
            *(__n128 *)(v5 + 8) = v7;
          }
          v5 += 48;
          v6 -= 48;
        }
        while (v6);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::CameraView>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = v3 + 224;
        v6 = 672 * v4;
        do
        {
          re::DynamicArray<re::ecs2::ScopeLanePair>::deinit(v5 + 48);
          re::DynamicArray<re::RenderGraphFileProvider>::deinit(v5);
          v7 = *(_QWORD *)(v5 - 224);
          if (v7)
          {
            if ((*(_BYTE *)(v5 - 216) & 1) != 0)
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v7 + 40))(v7, *(_QWORD *)(v5 - 208));
            *(_OWORD *)(v5 - 224) = 0u;
            *(_OWORD *)(v5 - 208) = 0u;
          }
          v5 += 672;
          v6 -= 672;
        }
        while (v6);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BEC0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraViewDescriptorsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraViewDescriptorsComponent>,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraViewDescriptorsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 208, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)v3 = &off_24ED5A280;
  *(_QWORD *)(v3 + 28) = 0x3F80000000000000;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = xmmword_22610D450;
  *(_QWORD *)(v3 + 80) = 1065353216;
  result = 0.0;
  *(_QWORD *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_QWORD *)(v3 + 128) = 0xBF00000041200000;
  *(_DWORD *)(v3 + 136) = -1071644672;
  *(_QWORD *)(v3 + 144) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_QWORD *)(v3 + 176) = 0xBF00000041200000;
  *(_DWORD *)(v3 + 184) = -1071644672;
  *(_QWORD *)(v3 + 192) = 0;
  *(_BYTE *)(v3 + 200) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4BFD8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E18))
  {
    qword_254108E10 = re::ecs2::introspect_CameraMovementComponent(0);
    __cxa_guard_release(&qword_254108E18);
  }
  return qword_254108E10;
}

__n128 re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CameraMovementComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4BF68;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::CameraMovementComponent::~CameraMovementComponent(re::ecs2::CameraMovementComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CameraMovementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4BFD8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CameraMovementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Slice<re::ecs2::CameraMovementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CameraMovementComponent>,re::Slice<re::ecs2::CameraMovementComponent*>>::Subscription const&,re::Slice<re::ecs2::CameraMovementComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 96, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED47CB8;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0x3F490FD83C23D70ALL;
  *(_DWORD *)(v2 + 48) = 1045220557;
  result = NAN;
  *(_QWORD *)(v2 + 52) = 0xFFFFFFFF00000001;
  *(_DWORD *)(v2 + 60) = 0;
  *(_DWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 68) = 0x100000000;
  *(_QWORD *)(v2 + 80) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C0F0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E28);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E28))
  {
    qword_254108E20 = re::ecs2::introspect_CharacterControllerComponent(0);
    __cxa_guard_release(&qword_254108E28);
  }
  return qword_254108E20;
}

__n128 re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CharacterControllerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C080;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C0F0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Slice<re::ecs2::CharacterControllerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerComponent>,re::Slice<re::ecs2::CharacterControllerComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CharacterControllerStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED47D38;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C208;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E38))
  {
    qword_254108E30 = re::ecs2::introspect_CharacterControllerStateComponent(0);
    __cxa_guard_release(&qword_254108E38);
  }
  return qword_254108E30;
}

__n128 re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CharacterControllerStateComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C198;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C208;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CharacterControllerStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Slice<re::ecs2::CharacterControllerStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CharacterControllerStateComponent>,re::Slice<re::ecs2::CharacterControllerStateComponent*>>::Subscription const&,re::Slice<re::ecs2::CharacterControllerStateComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57008;
  *(_QWORD *)(v3 + 32) = 0xBF000000BF000000;
  *(_QWORD *)(v3 + 40) = 3204448256;
  *(_QWORD *)(v3 + 48) = 0x3F0000003F000000;
  *(_QWORD *)(v3 + 56) = 1056964608;
  *(_DWORD *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 68) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C320;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E48))
  {
    qword_254108E40 = re::ecs2::introspect_ClippingBoxComponent(0);
    __cxa_guard_release(&qword_254108E48);
  }
  return qword_254108E40;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ClippingBoxComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C2B0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ClippingBoxComponent::~ClippingBoxComponent(re::ecs2::ClippingBoxComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClippingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C320;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Slice<re::ecs2::ClippingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingBoxComponent>,re::Slice<re::ecs2::ClippingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingBoxComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57588;
  *(_QWORD *)(v3 + 32) = 0xBF000000BF000000;
  *(_QWORD *)(v3 + 40) = 3204448256;
  *(_QWORD *)(v3 + 48) = 0x3F0000003F000000;
  *(_QWORD *)(v3 + 56) = 1056964608;
  result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_QWORD *)(v3 + 93) = 0;
  *(_BYTE *)(v3 + 101) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C438;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E58))
  {
    qword_254108E50 = re::ecs2::introspect_ClippingPrimitiveComponent(0);
    __cxa_guard_release(&qword_254108E58);
  }
  return qword_254108E50;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ClippingPrimitiveComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C3C8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ClippingPrimitiveComponent::~ClippingPrimitiveComponent(re::ecs2::ClippingPrimitiveComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 2;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClippingPrimitiveComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C438;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClippingPrimitiveComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Slice<re::ecs2::ClippingPrimitiveComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClippingPrimitiveComponent>,re::Slice<re::ecs2::ClippingPrimitiveComponent*>>::Subscription const&,re::Slice<re::ecs2::ClippingPrimitiveComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ColliderComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ColliderComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 168, 0);
  return re::make::shared::inplace<re::ecs2::ColliderComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C550;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E68))
  {
    qword_254108E60 = re::ecs2::introspect_ColliderComponent(0);
    __cxa_guard_release(&qword_254108E68);
  }
  return qword_254108E60;
}

__n128 re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ColliderComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ColliderComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C4E0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C550;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ColliderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Slice<re::ecs2::ColliderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ColliderComponent>,re::Slice<re::ecs2::ColliderComponent*>>::Subscription const&,re::Slice<re::ecs2::ColliderComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ForceEffectComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED48910;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v2 + 56) = 0;
  objc_initWeak((id *)(v3 + 72), 0);
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  *(_DWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_DWORD *)(v2 + 152) = 0;
  *(_BYTE *)(v2 + 168) = 1;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C668;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E78))
  {
    qword_254108E70 = re::ecs2::introspect_ForceEffectComponent(0);
    __cxa_guard_release(&qword_254108E78);
  }
  return qword_254108E70;
}

__n128 re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ForceEffectComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C5F8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C668;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ForceEffectComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Slice<re::ecs2::ForceEffectComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ForceEffectComponent>,re::Slice<re::ecs2::ForceEffectComponent*>>::Subscription const&,re::Slice<re::ecs2::ForceEffectComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED580B8;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 104) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_DWORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C780;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E88))
  {
    qword_254108E80 = re::ecs2::introspect_ConstraintListComponent(0);
    __cxa_guard_release(&qword_254108E88);
  }
  return qword_254108E80;
}

__n128 re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ConstraintListComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C710;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ConstraintListComponent::~ConstraintListComponent(re::ecs2::ConstraintListComponent *this)
{
  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ArcWeakPtr<re::internal::AssetEntry>>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ConstraintListComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C780;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ConstraintListComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Slice<re::ecs2::ConstraintListComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ConstraintListComponent>,re::Slice<re::ecs2::ConstraintListComponent*>>::Subscription const&,re::Slice<re::ecs2::ConstraintListComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::CustomMatrixCameraComponent *re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doMakeComponent@<X0>(re::ecs2::CustomMatrixCameraComponent **a1@<X8>)
{
  re::ecs2::CustomMatrixCameraComponent *v2;
  re::ecs2::CustomMatrixCameraComponent *result;

  v2 = (re::ecs2::CustomMatrixCameraComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7) + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CustomMatrixCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 384, 0);
  result = re::ecs2::CustomMatrixCameraComponent::CustomMatrixCameraComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C898;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108E98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108E98))
  {
    qword_254108E90 = re::ecs2::introspect_CustomMatrixCameraComponent(0);
    __cxa_guard_release(&qword_254108E98);
  }
  return qword_254108E90;
}

__n128 re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CustomMatrixCameraComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C828;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C898;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomMatrixCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Slice<re::ecs2::CustomMatrixCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomMatrixCameraComponent>,re::Slice<re::ecs2::CustomMatrixCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomMatrixCameraComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = off_24ED57E38;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  result = re::DynamicString::setCapacity((_QWORD *)(v2 + 32), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4C9B0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108EA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108EA8))
  {
    qword_254108EA0 = re::ecs2::introspect_DebugMeshComponent(0);
    __cxa_guard_release(&qword_254108EA8);
  }
  return qword_254108EA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DebugMeshComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4C940;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DebugMeshComponent::~DebugMeshComponent(re::ecs2::DebugMeshComponent *this)
{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED57E38;
  v3 = (_OWORD *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 6));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED57E38;
  v3 = (_OWORD *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 6));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DebugMeshComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4C9B0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DebugMeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Slice<re::ecs2::DebugMeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DebugMeshComponent>,re::Slice<re::ecs2::DebugMeshComponent*>>::Subscription const&,re::Slice<re::ecs2::DebugMeshComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  int32x4_t result;
  __int128 v5;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57088;
  result = vdupq_n_s32(0x7F800000u);
  *(_QWORD *)&v5 = 0x7F0000007FLL;
  *((_QWORD *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 32) = result;
  *(_OWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 104) = 0;
  *(_DWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_DWORD *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4CAC8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108EB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108EB8))
  {
    qword_254108EB0 = re::ecs2::introspect_CustomDockingRegionComponent(0);
    __cxa_guard_release(&qword_254108EB8);
  }
  return qword_254108EB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::CustomDockingRegionComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CA58;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::CustomDockingRegionComponent::~CustomDockingRegionComponent(re::ecs2::CustomDockingRegionComponent *this)
{
  re::ecs2::PlacementAnimationSerialization *v2;

  *(_QWORD *)this = &off_24ED57088;
  v2 = (re::ecs2::CustomDockingRegionComponent *)((char *)this + 96);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization((re::ecs2::CustomDockingRegionComponent *)((char *)this + 112));
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::ecs2::PlacementAnimationSerialization *v2;

  *(_QWORD *)this = &off_24ED57088;
  v2 = (re::ecs2::CustomDockingRegionComponent *)((char *)this + 96);
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization((re::ecs2::CustomDockingRegionComponent *)((char *)this + 112));
  re::ecs2::PlacementAnimationSerialization::~PlacementAnimationSerialization(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::CustomDockingRegionComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4CAC8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::CustomDockingRegionComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Slice<re::ecs2::CustomDockingRegionComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomDockingRegionComponent>,re::Slice<re::ecs2::CustomDockingRegionComponent*>>::Subscription const&,re::Slice<re::ecs2::CustomDockingRegionComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DrawableQueueSyncComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED30EF8;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4CBE0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108EC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108EC8))
  {
    qword_254108EC0 = re::ecs2::introspect_DrawableQueueSyncComponent(0);
    __cxa_guard_release(&qword_254108EC8);
  }
  return qword_254108EC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DrawableQueueSyncComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CB70;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4CBE0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawableQueueSyncComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Slice<re::ecs2::DrawableQueueSyncComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawableQueueSyncComponent>,re::Slice<re::ecs2::DrawableQueueSyncComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawableQueueSyncComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DrawWorldComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED493D0;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4CCF8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108ED8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108ED8))
  {
    qword_254108ED0 = re::ecs2::introspect_DrawWorldComponent(0);
    __cxa_guard_release(&qword_254108ED8);
  }
  return qword_254108ED0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DrawWorldComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CC88;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4CCF8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DrawWorldComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Slice<re::ecs2::DrawWorldComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DrawWorldComponent>,re::Slice<re::ecs2::DrawWorldComponent*>>::Subscription const&,re::Slice<re::ecs2::DrawWorldComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doMakeComponent@<Q0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  re *inited;
  re *v5;
  re *v6;
  int32x4_t result;
  __int128 v8;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 368, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED583C0;
  inited = (re *)objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 72) = re::globalAllocators(inited)[2];
  *(_QWORD *)(v2 + 80) = 0;
  v5 = (re *)objc_initWeak((id *)(v2 + 88), 0);
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 128) = re::globalAllocators(v5)[2];
  *(_QWORD *)(v2 + 136) = 0;
  v6 = (re *)objc_initWeak((id *)(v2 + 144), 0);
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 184) = re::globalAllocators(v6)[2];
  *(_DWORD *)(v2 + 224) = 0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_DWORD *)(v2 + 264) = 0;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_QWORD *)(v2 + 280) = 0;
  *(_QWORD *)(v2 + 288) = 0;
  *(_QWORD *)(v2 + 272) = 0;
  *(_DWORD *)(v2 + 296) = 1;
  *(_QWORD *)(v2 + 304) = 0;
  *(_QWORD *)(v2 + 312) = 0;
  *(_QWORD *)(v2 + 328) = 0;
  result = vdupq_n_s32(0x7F800000u);
  *(_QWORD *)&v8 = 0x7F0000007FLL;
  *((_QWORD *)&v8 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v2 + 336) = result;
  *(_OWORD *)(v2 + 352) = v8;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4CE10;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108EE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108EE8))
  {
    qword_254108EE0 = re::ecs2::introspect_DynamicBoundingBoxComponent(0);
    __cxa_guard_release(&qword_254108EE8);
  }
  return qword_254108EE0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DynamicBoundingBoxComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CDA0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DynamicBoundingBoxComponent::~DynamicBoundingBoxComponent(re::ecs2::DynamicBoundingBoxComponent *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24ED583C0;
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 280);
  v2 = *((_QWORD *)this + 30);
  if (v2)
  {
    if (*((_QWORD *)this + 34))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *((_QWORD *)this + 34) = 0;
    *((_QWORD *)this + 31) = 0;
    *((_QWORD *)this + 32) = 0;
    *((_QWORD *)this + 30) = 0;
    ++*((_DWORD *)this + 66);
  }
  v3 = *((_QWORD *)this + 25);
  if (v3)
  {
    if (*((_QWORD *)this + 29))
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    *((_QWORD *)this + 29) = 0;
    *((_QWORD *)this + 26) = 0;
    *((_QWORD *)this + 27) = 0;
    *((_QWORD *)this + 25) = 0;
    ++*((_DWORD *)this + 56);
  }
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr((id *)this + 18);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr((id *)this + 11);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr((id *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24ED583C0;
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 280);
  v2 = *((_QWORD *)this + 30);
  if (v2)
  {
    if (*((_QWORD *)this + 34))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *((_QWORD *)this + 34) = 0;
    *((_QWORD *)this + 31) = 0;
    *((_QWORD *)this + 32) = 0;
    *((_QWORD *)this + 30) = 0;
    ++*((_DWORD *)this + 66);
  }
  v3 = *((_QWORD *)this + 25);
  if (v3)
  {
    if (*((_QWORD *)this + 29))
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    *((_QWORD *)this + 29) = 0;
    *((_QWORD *)this + 26) = 0;
    *((_QWORD *)this + 27) = 0;
    *((_QWORD *)this + 25) = 0;
    ++*((_DWORD *)this + 56);
  }
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr((id *)this + 18);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr((id *)this + 11);
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr((id *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DynamicBoundingBoxComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  re *inited;
  id location;
  _QWORD v5[3];
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, sizeof(v5));
  v6 = re::globalAllocators(inited)[2];
  v7 = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  if (v7)
  {
    (*(void (**)(_QWORD *))*v7)(v7);
    if (v7 != v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
  }
  objc_destroyWeak(&location);
  location = 0;
  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  _QWORD *WeakRetained;
  _QWORD *v9;
  re *v10;
  uint64_t *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  re *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      v9 = WeakRetained;

      if (!location[6])
      {
        v16 = re::globalAllocators(v10)[2];
        v18[0] = &off_24ED58310;
        v19 = v16;
        v20 = (re *)v18;
        re::FunctionBase<24ul,void ()(void)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        v10 = v20;
        if (v20)
        {
          v10 = (re *)(**(uint64_t (***)(re *))v20)(v20);
          if (v20 != (re *)v18)
            v10 = (re *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 40))(v19);
        }
      }
      v11 = re::globalAllocators(v10);
      v12 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      v13 = location[1];
      v14 = re::PerFrameAllocatorManager::perFrameAllocator(v11[6], v12);
      (*(void (**)(uint64_t, id, id *))(*(_QWORD *)v14 + 16))(v14, v13, location + 2);
    }
    else
    {
      v15 = location[6];
      if (v15)
      {
        v18[0] = location[1];
        (*(void (**)(id, _QWORD *))(*(_QWORD *)v15 + 16))(v15, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>((re *)"reset", 161, location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>(re *result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;

  if (a3)
  {
    v4 = re::globalAllocators(result)[2];
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a3 + 7));
    if (*a3)
    {
      if (a3[4])
        (*(void (**)(_QWORD))(*(_QWORD *)*a3 + 40))(*a3);
      a3[4] = 0;
      a3[1] = 0;
      a3[2] = 0;
      *a3 = 0;
      ++*((_DWORD *)a3 + 6);
    }
    return (re *)(*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 40))(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
  JUMPOUT(0x2276933B8);
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, _QWORD **a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData>((re *)"operator()", 149, *a2);
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED58310;
  return result;
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED58310;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::PersistentDynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  re *inited;
  id location;
  _QWORD v5[3];
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, sizeof(v5));
  v6 = re::globalAllocators(inited)[2];
  v7 = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  if (v7)
  {
    (*(void (**)(_QWORD *))*v7)(v7);
    if (v7 != v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
  }
  objc_destroyWeak(&location);
  location = 0;
  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  _QWORD *WeakRetained;
  _QWORD *v9;
  re *v10;
  uint64_t *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  re *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      v9 = WeakRetained;

      if (!location[6])
      {
        v16 = re::globalAllocators(v10)[2];
        v18[0] = &off_24ED582B8;
        v19 = v16;
        v20 = (re *)v18;
        re::FunctionBase<24ul,void ()(void)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        v10 = v20;
        if (v20)
        {
          v10 = (re *)(**(uint64_t (***)(re *))v20)(v20);
          if (v20 != (re *)v18)
            v10 = (re *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 40))(v19);
        }
      }
      v11 = re::globalAllocators(v10);
      v12 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      v13 = location[1];
      v14 = re::PerFrameAllocatorManager::perFrameAllocator(v11[6], v12);
      (*(void (**)(uint64_t, id, id *))(*(_QWORD *)v14 + 16))(v14, v13, location + 2);
    }
    else
    {
      v15 = location[6];
      if (v15)
      {
        v18[0] = location[1];
        (*(void (**)(id, _QWORD *))(*(_QWORD *)v15 + 16))(v15, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>((re *)"reset", 161, location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>(re *result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    v4 = re::globalAllocators(result)[2];
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a3 + 21));
    re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)(a3 + 12));
    v5 = a3[5];
    if (v5)
    {
      if (a3[9])
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      a3[9] = 0;
      a3[6] = 0;
      a3[7] = 0;
      a3[5] = 0;
      ++*((_DWORD *)a3 + 16);
    }
    if (*a3)
    {
      if (a3[4])
        (*(void (**)(_QWORD))(*(_QWORD *)*a3 + 40))(*a3);
      a3[4] = 0;
      a3[1] = 0;
      a3[2] = 0;
      *a3 = 0;
      ++*((_DWORD *)a3 + 6);
    }
    return (re *)(*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 40))(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
  JUMPOUT(0x2276933B8);
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, _QWORD **a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData>((re *)"operator()", 149, *a2);
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED582B8;
  return result;
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED582B8;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::DynamicBoundingBoxData*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

id *re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  re *inited;
  id location;
  _QWORD v5[3];
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, sizeof(v5));
  v6 = re::globalAllocators(inited)[2];
  v7 = 0;
  re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  if (v7)
  {
    (*(void (**)(_QWORD *))*v7)(v7);
    if (v7 != v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
  }
  objc_destroyWeak(&location);
  location = 0;
  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  _QWORD *WeakRetained;
  _QWORD *v9;
  re *v10;
  uint64_t *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  re *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      v9 = WeakRetained;

      if (!location[6])
      {
        v16 = re::globalAllocators(v10)[2];
        v18[0] = &off_24ED58368;
        v19 = v16;
        v20 = (re *)v18;
        re::FunctionBase<24ul,void ()(void)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        v10 = v20;
        if (v20)
        {
          v10 = (re *)(**(uint64_t (***)(re *))v20)(v20);
          if (v20 != (re *)v18)
            v10 = (re *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 40))(v19);
        }
      }
      v11 = re::globalAllocators(v10);
      v12 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      v13 = location[1];
      v14 = re::PerFrameAllocatorManager::perFrameAllocator(v11[6], v12);
      (*(void (**)(uint64_t, id, id *))(*(_QWORD *)v14 + 16))(v14, v13, location + 2);
    }
    else
    {
      v15 = location[6];
      if (v15)
      {
        v18[0] = location[1];
        (*(void (**)(id, _QWORD *))(*(_QWORD *)v15 + 16))(v15, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>((re *)"reset", 161, location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>(re *result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    v4 = re::globalAllocators(result)[2];
    re::FixedArray<re::PerFrameSparseCircularBuffer<re::BoundingBoxBuffer,8>>::deinit(a3 + 4);
    v5 = a3[1];
    if (v5)
    {
      if (a3[2])
      {
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, a3[3]);
        a3[2] = 0;
        a3[3] = 0;
      }
      a3[1] = 0;
    }
    return (re *)(*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v4 + 40))(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
  JUMPOUT(0x2276933B8);
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, _QWORD **a2)
{
  return re::internal::destroyPersistent<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs>((re *)"operator()", 149, *a2);
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED58368;
  return result;
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED58368;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::DynamicBoundingBoxComponent::BoundingBoxBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

_QWORD *re::FixedArray<re::PerFrameSparseCircularBuffer<re::BoundingBoxBuffer,8ll>>::deinit(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;

  if (*result)
  {
    v1 = result;
    v3 = result + 1;
    v2 = result[1];
    if (v2)
    {
      v4 = result[2];
      v5 = v4 + 136 * v2;
      do
      {
        v6 = v4;
        v4 += 136;
        for (i = 128; i != 64; i -= 8)
        {
          v8 = *(void **)(v6 + i);
          if (v8)
          {

            *(_QWORD *)(v6 + i) = 0;
          }
        }
      }
      while (v4 != v5);
      result = (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*v1 + 40))(*v1, v1[2]);
      *v3 = 0;
      v3[1] = 0;
    }
    *v1 = 0;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4CE10;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicBoundingBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicBoundingBoxComponent>,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicBoundingBoxComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = off_24ED5A680;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  result = re::DynamicString::setCapacity((_QWORD *)(v2 + 32), 0);
  *(_DWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 96) = 0x3F8000003F800000;
  *(_QWORD *)(v2 + 104) = 0x3F8000003F800000;
  *(_QWORD *)(v2 + 88) = 0;
  *(_BYTE *)(v2 + 112) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4CF28;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108EF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108EF8))
  {
    qword_254108EF0 = re::ecs2::introspect_DynamicTextComponent(0);
    __cxa_guard_release(&qword_254108EF8);
  }
  return qword_254108EF0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DynamicTextComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CEB8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DynamicTextComponent::~DynamicTextComponent(re::ecs2::DynamicTextComponent *this)
{
  uint64_t v2;

  re::AssetHandle::~AssetHandle((re::ecs2::DynamicTextComponent *)((char *)this + 72));
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 6));
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;

  re::AssetHandle::~AssetHandle((re::ecs2::DynamicTextComponent *)((char *)this + 72));
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 6));
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DynamicTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4CF28;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DynamicTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Slice<re::ecs2::DynamicTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DynamicTextComponent>,re::Slice<re::ecs2::DynamicTextComponent*>>::Subscription const&,re::Slice<re::ecs2::DynamicTextComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57FB8;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D040;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F08);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F08))
  {
    qword_254108F00 = re::ecs2::introspect_EDRColorManagementComponent(0);
    __cxa_guard_release(&qword_254108F08);
  }
  return qword_254108F00;
}

__n128 re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::EDRColorManagementComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4CFD0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::EDRColorManagementComponent::~EDRColorManagementComponent(re::ecs2::EDRColorManagementComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::EDRColorManagementComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D040;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EDRColorManagementComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Slice<re::ecs2::EDRColorManagementComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EDRColorManagementComponent>,re::Slice<re::ecs2::EDRColorManagementComponent*>>::Subscription const&,re::Slice<re::ecs2::EDRColorManagementComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HingeJointComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED498C8;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 32));
  objc_initWeak((id *)(v2 + 56), 0);
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 56));
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0x3F80000000000000;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = 0x3F80000000000000;
  *(_BYTE *)(v2 + 144) = 1;
  *(_QWORD *)(v2 + 152) = 0;
  result = objc_initWeak((id *)(v2 + 160), 0);
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D158;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F18))
  {
    qword_254108F10 = re::ecs2::introspect_HingeJointComponent(0);
    __cxa_guard_release(&qword_254108F18);
  }
  return qword_254108F10;
}

__n128 re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::HingeJointComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D0E8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D158;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HingeJointComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Slice<re::ecs2::HingeJointComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HingeJointComponent>,re::Slice<re::ecs2::HingeJointComponent*>>::Subscription const&,re::Slice<re::ecs2::HingeJointComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  _anonymous_namespace_ *v3;
  double result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 1360, 0);
  bzero(v2, 0x550uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED58DC0;
  *(_QWORD *)((char *)v2 + 28) = 0;
  *(_QWORD *)((char *)v2 + 140) = 0;
  *(_OWORD *)(v2 + 5) = 0u;
  *(_OWORD *)(v2 + 7) = 0u;
  *(_OWORD *)(v2 + 9) = 0u;
  *(_OWORD *)(v2 + 11) = 0u;
  *(_OWORD *)(v2 + 13) = 0u;
  *(_OWORD *)(v2 + 15) = 0u;
  *((_WORD *)v2 + 68) = 0;
  *((_BYTE *)v2 + 148) = 1;
  *((_BYTE *)v2 + 152) = 0;
  *((_OWORD *)v2 + 73) = 0u;
  *((_OWORD *)v2 + 74) = 0u;
  re::DynamicString::setCapacity(v2 + 146, 0);
  *((_WORD *)v2 + 604) = 0;
  v2[150] = 0;
  *((_OWORD *)v2 + 76) = xmmword_2260E5F10;
  *((_OWORD *)v2 + 77) = xmmword_2260E5F20;
  *((_OWORD *)v2 + 78) = xmmword_2260E5F40;
  v2[158] = 0;
  result = 0.0;
  *((_OWORD *)v2 + 80) = 0u;
  *((_BYTE *)v2 + 1296) = 0;
  *(_OWORD *)(v2 + 163) = 0u;
  *(_OWORD *)(v2 + 165) = 0u;
  *(_OWORD *)((char *)v2 + 1332) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D270;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F28);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F28))
  {
    qword_254108F20 = re::ecs2::introspect_ImageBasedLightComponent(0);
    __cxa_guard_release(&qword_254108F28);
  }
  return qword_254108F20;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ImageBasedLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D200;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ImageBasedLightComponent::~ImageBasedLightComponent(re::ecs2::ImageBasedLightComponent *this)
{
  re::ecs2::ImageBasedLightComponent::~ImageBasedLightComponent(this);
  JUMPOUT(0x2276933B8);
}

{
  void *v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24ED58DC0;
  v2 = (void *)*((_QWORD *)this + 165);
  if (v2)
  {

    *((_QWORD *)this + 165) = 0;
  }
  v3 = (void *)*((_QWORD *)this + 164);
  if (v3)
  {

    *((_QWORD *)this + 164) = 0;
  }
  v4 = *((_QWORD *)this + 146);
  if (v4)
  {
    if ((*((_BYTE *)this + 1176) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 40))(v4, *((_QWORD *)this + 148));
    *((_OWORD *)this + 73) = 0u;
    *((_OWORD *)this + 74) = 0u;
  }
  if (*((_BYTE *)this + 152))
    (**((void (***)(char *))this + 20))((char *)this + 160);
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 112));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 64));
  re::AssetHandle::~AssetHandle((re::ecs2::ImageBasedLightComponent *)((char *)this + 40));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D270;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Slice<re::ecs2::ImageBasedLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightComponent>,re::Slice<re::ecs2::ImageBasedLightComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58E40;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 32));
  *(_QWORD *)(v2 + 56) = 0;
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D388;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F38))
  {
    qword_254108F30 = re::ecs2::introspect_ImageBasedLightReceiverComponent(0);
    __cxa_guard_release(&qword_254108F38);
  }
  return qword_254108F30;
}

__n128 re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ImageBasedLightReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D318;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ImageBasedLightReceiverComponent::~ImageBasedLightReceiverComponent(id *this)
{
  id *v2;

  *this = &off_24ED58E40;
  v2 = this + 4;
  re::ecs2::EntityHandle::reset(this + 4);
  objc_destroyWeak(v2);
  this[4] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
}

{
  id *v2;

  *this = &off_24ED58E40;
  v2 = this + 4;
  re::ecs2::EntityHandle::reset(this + 4);
  objc_destroyWeak(v2);
  this[4] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ImageBasedLightReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D388;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ImageBasedLightReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ImageBasedLightReceiverComponent>,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ImageBasedLightReceiverComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  double result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 808, 0);
  bzero(v2, 0x328uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED57EB8;
  v2[4] = &off_24ED65B58;
  result = 0.0;
  *(_OWORD *)(v2 + 5) = 0u;
  *(_OWORD *)(v2 + 7) = 0u;
  *((_DWORD *)v2 + 18) = 0;
  *(_QWORD *)((char *)v2 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 11) = 0u;
  *(_OWORD *)(v2 + 13) = 0u;
  *((_DWORD *)v2 + 30) = 0;
  *(_QWORD *)((char *)v2 + 124) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 17) = 0u;
  *(_OWORD *)(v2 + 19) = 0u;
  *((_DWORD *)v2 + 42) = 0;
  *(_QWORD *)((char *)v2 + 172) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 23) = 0u;
  *(_OWORD *)(v2 + 25) = 0u;
  *((_DWORD *)v2 + 54) = 0;
  *(_QWORD *)((char *)v2 + 220) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 29) = 0u;
  *(_OWORD *)(v2 + 31) = 0u;
  *((_DWORD *)v2 + 66) = 0;
  *(_OWORD *)(v2 + 35) = 0u;
  *(_QWORD *)((char *)v2 + 268) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 78) = 0;
  *(_OWORD *)(v2 + 37) = 0u;
  *(_QWORD *)((char *)v2 + 316) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 41) = 0u;
  *(_OWORD *)(v2 + 43) = 0u;
  *((_DWORD *)v2 + 90) = 0;
  *(_QWORD *)((char *)v2 + 364) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 47) = 0u;
  *(_OWORD *)(v2 + 49) = 0u;
  *((_DWORD *)v2 + 102) = 0;
  *(_QWORD *)((char *)v2 + 412) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 53) = 0u;
  *(_OWORD *)(v2 + 55) = 0u;
  *((_DWORD *)v2 + 114) = 0;
  *(_QWORD *)((char *)v2 + 460) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 126) = 0;
  *(_OWORD *)(v2 + 59) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  *(_QWORD *)((char *)v2 + 508) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 138) = 0;
  *(_OWORD *)(v2 + 65) = 0u;
  *(_OWORD *)(v2 + 67) = 0u;
  *(_QWORD *)((char *)v2 + 556) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 150) = 0;
  *(_OWORD *)(v2 + 71) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_QWORD *)((char *)v2 + 604) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 162) = 0;
  *(_OWORD *)(v2 + 77) = 0u;
  *(_OWORD *)(v2 + 79) = 0u;
  *(_QWORD *)((char *)v2 + 652) = 0x7FFFFFFFLL;
  *(_OWORD *)(v2 + 83) = 0u;
  *(_OWORD *)(v2 + 85) = 0u;
  *((_DWORD *)v2 + 174) = 0;
  *(_QWORD *)((char *)v2 + 700) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 186) = 0;
  *(_OWORD *)(v2 + 89) = 0u;
  *(_OWORD *)(v2 + 91) = 0u;
  *(_QWORD *)((char *)v2 + 748) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 198) = 0;
  *(_OWORD *)(v2 + 95) = 0u;
  *(_OWORD *)(v2 + 97) = 0u;
  *(_QWORD *)((char *)v2 + 796) = 0x7FFFFFFFLL;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D4A0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F48);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F48))
  {
    qword_254108F40 = re::ecs2::introspect_KeyValueComponent(0);
    __cxa_guard_release(&qword_254108F48);
  }
  return qword_254108F40;
}

__n128 re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::KeyValueComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D430;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::KeyValueComponent::~KeyValueComponent(re::ecs2::KeyValueComponent *this)
{
  *(_QWORD *)this = &off_24ED57EB8;
  re::KeyValueStore::~KeyValueStore((re::ecs2::KeyValueComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED57EB8;
  re::KeyValueStore::~KeyValueStore((re::ecs2::KeyValueComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 5;
}

void *re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::KeyValueComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::KeyValueStore::~KeyValueStore(re::KeyValueStore *this)
{
  uint64_t *v2;

  *(_QWORD *)this = &off_24ED65B58;
  v2 = (uint64_t *)((char *)this + 8);
  re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 91);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 85);
  re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 79);
  re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 73);
  re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 67);
  re::HashTable<re::StringID,re::DynamicString,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 61);
  re::HashTable<re::StringID,re::GenericSRT<float>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 55);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 49);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 43);
  re::HashTable<re::StringID,re::DeformationAttributeData,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 37);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 31);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 25);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 19);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 13);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 7);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v2);
}

double re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 56;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::BlendShapeWeights,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::BlendShapeWeights::~BlendShapeWeights((re::BlendShapeWeights *)(a1 + 6));
  }
}

double re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(a1[2] + v3);
        ++v4;
        v3 += 64;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::HashTable<re::StringID,re::DynamicArray<re::Vector3<float>>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(uint64_t result)
{
  uint64_t v1;

  if ((*(_DWORD *)result & 0x80000000) != 0)
  {
    v1 = result;
    *(_DWORD *)result &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(result + 8));
    result = *(_QWORD *)(v1 + 24);
    if (result)
    {
      if (*(_QWORD *)(v1 + 56))
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
      *(_QWORD *)(v1 + 56) = 0;
      *(_QWORD *)(v1 + 32) = 0;
      *(_QWORD *)(v1 + 40) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      ++*(_DWORD *)(v1 + 48);
    }
  }
  return result;
}

double re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 112;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::SkeletalPose,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::SkeletalPose::~SkeletalPose((re::SkeletalPose *)(a1 + 6));
  }
}

double re::HashTable<re::StringID,re::GenericSRT<float>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  int v7;
  double result;

  v2 = *a1;
  if (v2)
  {
    v3 = *((unsigned int *)a1 + 8);
    if ((_DWORD)v3)
    {
      v4 = 0;
      for (i = 0; i < v3; ++i)
      {
        v6 = a1[2];
        v7 = *(_DWORD *)(v6 + v4);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v4) = v7 & 0x7FFFFFFF;
          re::StringID::destroyString((re::StringID *)(v6 + v4 + 8));
          v3 = *((unsigned int *)a1 + 8);
        }
        v4 += 80;
      }
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D4A0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::KeyValueComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Slice<re::ecs2::KeyValueComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::KeyValueComponent>,re::Slice<re::ecs2::KeyValueComponent*>>::Subscription const&,re::Slice<re::ecs2::KeyValueComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

__n128 re::ecs2::ComponentType<re::ecs2::LightComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  _anonymous_namespace_ *v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  __n128 result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 880, 0);
  bzero(v2, 0x370uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = off_24ED58540;
  *((_DWORD *)v2 + 7) = 3;
  v2[4] = 0x42B4000046D2A785;
  *((_DWORD *)v2 + 10) = 1120403456;
  v2[6] = 0;
  *((_BYTE *)v2 + 56) = 0;
  *((_DWORD *)v2 + 15) = 1008981770;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 8, 0);
  *((_DWORD *)v2 + 44) = 0;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *(_QWORD *)((char *)v2 + 180) = 0x412000003C23D70ALL;
  *(_QWORD *)((char *)v2 + 188) = 0;
  *((_BYTE *)v2 + 196) = 0;
  *(_DWORD *)((char *)v2 + 198) = 16842752;
  *((_DWORD *)v2 + 51) = 1065353216;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  v5 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 26, 0);
  *((_DWORD *)v2 + 80) = 0;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *(_QWORD *)((char *)v2 + 324) = 0x412000003C23D70ALL;
  *((_WORD *)v2 + 215) = 0;
  *((_BYTE *)v2 + 432) = 0;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *(_OWORD *)((char *)v2 + 413) = 0u;
  *((_OWORD *)v2 + 28) = 0u;
  *((_OWORD *)v2 + 29) = 0u;
  v6 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v2 + 56, 0);
  *((_DWORD *)v2 + 140) = 0;
  *((_OWORD *)v2 + 33) = 0u;
  *((_OWORD *)v2 + 34) = 0u;
  *((_OWORD *)v2 + 31) = 0u;
  *((_OWORD *)v2 + 32) = 0u;
  *((_OWORD *)v2 + 30) = 0u;
  *(_QWORD *)((char *)v2 + 564) = 0x412000003C23D70ALL;
  *((_WORD *)v2 + 331) = 0;
  *((_OWORD *)v2 + 36) = 0u;
  *((_OWORD *)v2 + 37) = 0u;
  *((_OWORD *)v2 + 38) = 0u;
  *((_OWORD *)v2 + 39) = 0u;
  *((_OWORD *)v2 + 40) = 0u;
  *(_QWORD *)((char *)v2 + 653) = 0;
  *((_OWORD *)v2 + 42) = 0u;
  *((_OWORD *)v2 + 43) = 0u;
  re::DynamicString::setCapacity(v2 + 84, 0);
  *((_OWORD *)v2 + 47) = 0u;
  *((_OWORD *)v2 + 48) = 0u;
  *((_OWORD *)v2 + 45) = 0u;
  *((_OWORD *)v2 + 46) = 0u;
  *((_OWORD *)v2 + 44) = 0u;
  v2[98] = 0x3C23D70A00000000;
  *((_DWORD *)v2 + 198) = 1092616192;
  v2[100] = 0;
  *((_BYTE *)v2 + 808) = 0;
  *((_OWORD *)v2 + 51) = 0u;
  *((_DWORD *)v2 + 208) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((__n128 *)v2 + 53) = result;
  *((_BYTE *)v2 + 864) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D5B8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F58))
  {
    qword_254108F50 = re::ecs2::introspect_LightComponent(0);
    __cxa_guard_release(&qword_254108F58);
  }
  return qword_254108F50;
}

__n128 re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::LightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D548;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::LightComponent::~LightComponent(re::ecs2::LightComponent *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = off_24ED58540;
  v2 = *((_QWORD *)this + 84);
  if (v2)
  {
    if ((*((_BYTE *)this + 680) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 86));
    *((_OWORD *)this + 42) = 0u;
    *((_OWORD *)this + 43) = 0u;
  }
  v3 = *((_QWORD *)this + 56);
  if (v3)
  {
    if ((*((_BYTE *)this + 456) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 40))(v3, *((_QWORD *)this + 58));
    *((_OWORD *)this + 28) = 0u;
    *((_OWORD *)this + 29) = 0u;
  }
  v4 = *((_QWORD *)this + 26);
  if (v4)
  {
    if ((*((_BYTE *)this + 216) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 40))(v4, *((_QWORD *)this + 28));
    *((_OWORD *)this + 13) = 0u;
    *((_OWORD *)this + 14) = 0u;
  }
  v5 = *((_QWORD *)this + 8);
  if (v5)
  {
    if ((*((_BYTE *)this + 72) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *((_QWORD *)this + 10));
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = off_24ED58540;
  v2 = *((_QWORD *)this + 84);
  if (v2)
  {
    if ((*((_BYTE *)this + 680) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 86));
    *((_OWORD *)this + 42) = 0u;
    *((_OWORD *)this + 43) = 0u;
  }
  v3 = *((_QWORD *)this + 56);
  if (v3)
  {
    if ((*((_BYTE *)this + 456) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 40))(v3, *((_QWORD *)this + 58));
    *((_OWORD *)this + 28) = 0u;
    *((_OWORD *)this + 29) = 0u;
  }
  v4 = *((_QWORD *)this + 26);
  if (v4)
  {
    if ((*((_BYTE *)this + 216) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 40))(v4, *((_QWORD *)this + 28));
    *((_OWORD *)this + 13) = 0u;
    *((_OWORD *)this + 14) = 0u;
  }
  v5 = *((_QWORD *)this + 8);
  if (v5)
  {
    if ((*((_BYTE *)this + 72) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 40))(v5, *((_QWORD *)this + 10));
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D5B8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Slice<re::ecs2::LightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightComponent>,re::Slice<re::ecs2::LightComponent*>>::Subscription const&,re::Slice<re::ecs2::LightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57A88;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D6D0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F68);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F68))
  {
    qword_254108F60 = re::ecs2::introspect_LightGroupComponent(0);
    __cxa_guard_release(&qword_254108F68);
  }
  return qword_254108F60;
}

__n128 re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::LightGroupComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D660;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::LightGroupComponent::~LightGroupComponent(re::ecs2::LightGroupComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LightGroupComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D6D0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LightGroupComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Slice<re::ecs2::LightGroupComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LightGroupComponent>,re::Slice<re::ecs2::LightGroupComponent*>>::Subscription const&,re::Slice<re::ecs2::LightGroupComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

__n128 re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doMakeComponent@<Q0>(__n128 **a1@<X8>)
{
  ArcSharedObject *v2;
  __n128 *v3;
  __n128 result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  v3[1].n128_u64[0] = 0;
  v3[1].n128_u8[8] = 0;
  v3->n128_u64[0] = (unint64_t)&off_24ED585C0;
  v3[1].n128_u32[3] = 1143652352;
  v3[2].n128_u64[0] = 0;
  v3[2].n128_u64[1] = 0;
  v3[3].n128_u32[0] = 0;
  __asm { FMOV            V0.4S, #1.0 }
  v3[4] = result;
  v3[5].n128_u8[0] = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D7E8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F78))
  {
    qword_254108F70 = re::ecs2::introspect_AmbientLightComponent(0);
    __cxa_guard_release(&qword_254108F78);
  }
  return qword_254108F70;
}

__n128 re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AmbientLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D778;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AmbientLightComponent::~AmbientLightComponent(re::ecs2::AmbientLightComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AmbientLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D7E8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AmbientLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Slice<re::ecs2::AmbientLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AmbientLightComponent>,re::Slice<re::ecs2::AmbientLightComponent*>>::Subscription const&,re::Slice<re::ecs2::AmbientLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::DirectionalLightComponent *re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doMakeComponent@<X0>(re::ecs2::DirectionalLightComponent **a1@<X8>)
{
  re::ecs2::DirectionalLightComponent *v2;
  re::ecs2::DirectionalLightComponent *result;

  v2 = (re::ecs2::DirectionalLightComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7)
                                                                                                 + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 368, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  result = re::ecs2::DirectionalLightComponent::DirectionalLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4D900;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F88);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F88))
  {
    qword_254108F80 = re::ecs2::introspect_DirectionalLightComponent(0);
    __cxa_guard_release(&qword_254108F88);
  }
  return qword_254108F80;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DirectionalLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D890;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

re::ecs2::DirectionalLightComponent *re::ecs2::DirectionalLightComponent::DirectionalLightComponent(re::ecs2::DirectionalLightComponent *this)
{
  uint64_t v2;
  _QWORD *v3;
  _anonymous_namespace_ *v4;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)v2 = off_24ED58640;
  *(_DWORD *)(v2 + 28) = 1158028115;
  *(_BYTE *)(v2 + 32) = 0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v3 = (_QWORD *)(v2 + 48);
  v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_QWORD *)((char *)this + 164) = 0x412000003C23D70ALL;
  *(_QWORD *)((char *)this + 172) = 0;
  *((_BYTE *)this + 180) = 0;
  *(_DWORD *)((char *)this + 182) = 16842752;
  *((_DWORD *)this + 47) = 1065353216;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 12) = 0u;
  re::DynamicString::setCapacity((_QWORD *)this + 24, 0);
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_QWORD *)this + 38) = 0x3C23D70A00000000;
  *((_DWORD *)this + 78) = 1092616192;
  *(_QWORD *)((char *)this + 316) = 0;
  *((_BYTE *)this + 324) = 0;
  *((_BYTE *)this + 326) = 1;
  *((_DWORD *)this + 82) = 1065353216;
  *((_BYTE *)this + 332) = 1;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 21) = _Q0;
  *((_BYTE *)this + 352) = 0;
  return this;
}

void re::ecs2::DirectionalLightComponent::~DirectionalLightComponent(re::ecs2::DirectionalLightComponent *this)
{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;

  *(_QWORD *)this = off_24ED58640;
  v3 = (_OWORD *)((char *)this + 192);
  v2 = *((_QWORD *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 200) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 26));
    *v3 = 0u;
    v3[1] = 0u;
  }
  v4 = *((_QWORD *)this + 6);
  if (v4)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 40))(v4, *((_QWORD *)this + 8));
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;

  *(_QWORD *)this = off_24ED58640;
  v3 = (_OWORD *)((char *)this + 192);
  v2 = *((_QWORD *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 200) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 26));
    *v3 = 0u;
    v3[1] = 0u;
  }
  v4 = *((_QWORD *)this + 6);
  if (v4)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 40))(v4, *((_QWORD *)this + 8));
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DirectionalLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4D900;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Slice<re::ecs2::DirectionalLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightComponent>,re::Slice<re::ecs2::DirectionalLightComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::SpotLightComponent *re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doMakeComponent@<X0>(re::ecs2::SpotLightComponent **a1@<X8>)
{
  re::ecs2::SpotLightComponent *v2;
  re::ecs2::SpotLightComponent *result;

  v2 = (re::ecs2::SpotLightComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                             + 7)
                                                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 320, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  result = re::ecs2::SpotLightComponent::SpotLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DA18;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108F98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108F98))
  {
    qword_254108F90 = re::ecs2::introspect_SpotLightComponent(0);
    __cxa_guard_release(&qword_254108F98);
  }
  return qword_254108F90;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SpotLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4D9A8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

re::ecs2::SpotLightComponent *re::ecs2::SpotLightComponent::SpotLightComponent(re::ecs2::SpotLightComponent *this)
{
  uint64_t v2;
  _QWORD *v3;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)v2 = off_24ED586C0;
  *(_OWORD *)(v2 + 28) = xmmword_22610D460;
  *(_DWORD *)(v2 + 44) = 0x40000000;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v3 = (_QWORD *)(v2 + 48);
  re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_QWORD *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((_WORD *)this + 135) = 0;
  *((_BYTE *)this + 272) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *(_OWORD *)((char *)this + 253) = 0u;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 18) = _Q0;
  *((_BYTE *)this + 304) = 0;
  return this;
}

void re::ecs2::SpotLightComponent::~SpotLightComponent(re::ecs2::SpotLightComponent *this)
{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED586C0;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED586C0;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SpotLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DA18;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Slice<re::ecs2::SpotLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightComponent>,re::Slice<re::ecs2::SpotLightComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PointLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::PointLightComponent *re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doMakeComponent@<X0>(re::ecs2::PointLightComponent **a1@<X8>)
{
  re::ecs2::PointLightComponent *v2;
  re::ecs2::PointLightComponent *result;

  v2 = (re::ecs2::PointLightComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                              + 7)
                                                                                           + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 304, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  result = re::ecs2::PointLightComponent::PointLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DB30;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FA8))
  {
    qword_254108FA0 = re::ecs2::introspect_PointLightComponent(0);
    __cxa_guard_release(&qword_254108FA8);
  }
  return qword_254108FA0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PointLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4DAC0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

re::ecs2::PointLightComponent *re::ecs2::PointLightComponent::PointLightComponent(re::ecs2::PointLightComponent *this)
{
  uint64_t v2;
  _QWORD *v3;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)v2 = off_24ED58740;
  *(_QWORD *)(v2 + 28) = 0x4120000046D2A785;
  *(_DWORD *)(v2 + 36) = 0x40000000;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v3 = (_QWORD *)(v2 + 48);
  re::DynamicString::setCapacity(v3, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_QWORD *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((_WORD *)this + 131) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *(_QWORD *)((char *)this + 253) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 17) = _Q0;
  *((_BYTE *)this + 288) = 0;
  return this;
}

void re::ecs2::PointLightComponent::~PointLightComponent(re::ecs2::PointLightComponent *this)
{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED58740;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED58740;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PointLightComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DB30;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Slice<re::ecs2::PointLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightComponent>,re::Slice<re::ecs2::PointLightComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::RectAreaLightComponent *re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doMakeComponent@<X0>(re::ecs2::RectAreaLightComponent **a1@<X8>)
{
  re::ecs2::RectAreaLightComponent *v2;
  re::ecs2::RectAreaLightComponent *result;

  v2 = (re::ecs2::RectAreaLightComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                 + 7)
                                                                                              + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 224, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  result = re::ecs2::RectAreaLightComponent::RectAreaLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DC48;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FB8))
  {
    qword_254108FB0 = re::ecs2::introspect_RectAreaLightComponent(0);
    __cxa_guard_release(&qword_254108FB8);
  }
  return qword_254108FB0;
}

__n128 re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RectAreaLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4DBD8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

re::ecs2::RectAreaLightComponent *re::ecs2::RectAreaLightComponent::RectAreaLightComponent(re::ecs2::RectAreaLightComponent *this)
{
  uint64_t v2;
  _QWORD *v8;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)v2 = off_24ED587C0;
  *(_DWORD *)(v2 + 28) = 1143652352;
  __asm { FMOV            V0.2S, #1.0 }
  *(_QWORD *)(v2 + 32) = _D0;
  *(_BYTE *)(v2 + 40) = 0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v8 = (_QWORD *)(v2 + 48);
  re::DynamicString::setCapacity(v8, 0);
  *((_DWORD *)this + 40) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_QWORD *)((char *)this + 164) = 0x412000003C23D70ALL;
  *((_QWORD *)this + 22) = 0;
  *((_BYTE *)this + 184) = 0;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 12) = _Q0;
  *((_BYTE *)this + 208) = 0;
  return this;
}

void re::ecs2::RectAreaLightComponent::~RectAreaLightComponent(re::ecs2::RectAreaLightComponent *this)
{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED587C0;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED587C0;
  v3 = (_OWORD *)((char *)this + 48);
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    if ((*((_BYTE *)this + 56) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 8));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RectAreaLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DC48;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RectAreaLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Slice<re::ecs2::RectAreaLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RectAreaLightComponent>,re::Slice<re::ecs2::RectAreaLightComponent*>>::Subscription const&,re::Slice<re::ecs2::RectAreaLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::FrustumLightComponent *re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doMakeComponent@<X0>(re::ecs2::FrustumLightComponent **a1@<X8>)
{
  re::ecs2::FrustumLightComponent *v2;
  re::ecs2::FrustumLightComponent *result;

  v2 = (re::ecs2::FrustumLightComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                                + 7)
                                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 336, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  result = re::ecs2::FrustumLightComponent::FrustumLightComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DD60;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FC8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FC8))
  {
    qword_254108FC0 = re::ecs2::introspect_FrustumLightComponent(0);
    __cxa_guard_release(&qword_254108FC8);
  }
  return qword_254108FC0;
}

__n128 re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::FrustumLightComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4DCF0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

re::ecs2::FrustumLightComponent *re::ecs2::FrustumLightComponent::FrustumLightComponent(re::ecs2::FrustumLightComponent *this)
{
  uint64_t v2;
  uint64_t v8;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  *(_QWORD *)v2 = off_24ED58840;
  *(_OWORD *)(v2 + 28) = xmmword_22610D470;
  __asm { FMOV            V0.2S, #1.0 }
  *(_QWORD *)(v2 + 48) = _D0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  v8 = v2 + 64;
  re::DynamicString::setCapacity((_QWORD *)v8, 0);
  *((_DWORD *)this + 44) = 0;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *(_QWORD *)((char *)this + 180) = 0x412000003C23D70ALL;
  *((_WORD *)this + 143) = 0;
  *((_BYTE *)this + 288) = 0;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *(_OWORD *)(v8 + 205) = 0u;
  __asm { FMOV            V0.4S, #1.0 }
  *((_OWORD *)this + 19) = _Q0;
  *((_BYTE *)this + 320) = 0;
  return this;
}

void re::ecs2::FrustumLightComponent::~FrustumLightComponent(re::ecs2::FrustumLightComponent *this)
{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED58840;
  v3 = (_OWORD *)((char *)this + 64);
  v2 = *((_QWORD *)this + 8);
  if (v2)
  {
    if ((*((_BYTE *)this + 72) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 10));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  _OWORD *v3;

  *(_QWORD *)this = off_24ED58840;
  v3 = (_OWORD *)((char *)this + 64);
  v2 = *((_QWORD *)this + 8);
  if (v2)
  {
    if ((*((_BYTE *)this + 72) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 10));
    *v3 = 0u;
    v3[1] = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::FrustumLightComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DD60;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FrustumLightComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Slice<re::ecs2::FrustumLightComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FrustumLightComponent>,re::Slice<re::ecs2::FrustumLightComponent*>>::Subscription const&,re::Slice<re::ecs2::FrustumLightComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58940;
  result = 2048.00048;
  *(_QWORD *)(v3 + 28) = 0x40A000003F800000;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DE78;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FD8))
  {
    qword_254108FD0 = re::ecs2::introspect_ShadowMapComponent(0);
    __cxa_guard_release(&qword_254108FD8);
  }
  return qword_254108FD0;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4DE08;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ShadowMapComponent::~ShadowMapComponent(re::ecs2::ShadowMapComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DE78;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Slice<re::ecs2::ShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowMapComponent>,re::Slice<re::ecs2::ShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED589C0;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(_BYTE *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 36) = 0;
  *(_BYTE *)(v3 + 44) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4DF90;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FE8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FE8))
  {
    qword_254108FE0 = re::ecs2::introspect_PointLightShadowMapComponent(0);
    __cxa_guard_release(&qword_254108FE8);
  }
  return qword_254108FE0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PointLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4DF20;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PointLightShadowMapComponent::~PointLightShadowMapComponent(re::ecs2::PointLightShadowMapComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PointLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4DF90;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PointLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Slice<re::ecs2::PointLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PointLightShadowMapComponent>,re::Slice<re::ecs2::PointLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::PointLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58A40;
  *(_QWORD *)(v3 + 28) = 0x40A000003F800000;
  *(_BYTE *)(v3 + 36) = 0;
  *(_BYTE *)(v3 + 38) = 1;
  result = 524288.117;
  *(_QWORD *)(v3 + 40) = 0x412000003C23D70ALL;
  *(_DWORD *)(v3 + 48) = 1065353216;
  *(_BYTE *)(v3 + 52) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E0A8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254108FF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254108FF8))
  {
    qword_254108FF0 = re::ecs2::introspect_DirectionalLightShadowMapComponent(0);
    __cxa_guard_release(&qword_254108FF8);
  }
  return qword_254108FF0;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DirectionalLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E038;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DirectionalLightShadowMapComponent::~DirectionalLightShadowMapComponent(re::ecs2::DirectionalLightShadowMapComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DirectionalLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E0A8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectionalLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectionalLightShadowMapComponent>,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectionalLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58AC0;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(_BYTE *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 36) = 0;
  *(_BYTE *)(v3 + 44) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E1C0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109008);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109008))
  {
    qword_254109000 = re::ecs2::introspect_SpotLightShadowMapComponent(0);
    __cxa_guard_release(&qword_254109008);
  }
  return qword_254109000;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SpotLightShadowMapComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E150;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SpotLightShadowMapComponent::~SpotLightShadowMapComponent(re::ecs2::SpotLightShadowMapComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SpotLightShadowMapComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E1C0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpotLightShadowMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Slice<re::ecs2::SpotLightShadowMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpotLightShadowMapComponent>,re::Slice<re::ecs2::SpotLightShadowMapComponent*>>::Subscription const&,re::Slice<re::ecs2::SpotLightShadowMapComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED588C0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E2D8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109018);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109018))
  {
    qword_254109010 = re::ecs2::introspect_FilterMapComponent(0);
    __cxa_guard_release(&qword_254109018);
  }
  return qword_254109010;
}

__n128 re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::FilterMapComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E268;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::FilterMapComponent::~FilterMapComponent(re::ecs2::FilterMapComponent *this)
{
  *(_QWORD *)this = &off_24ED588C0;
  re::AssetHandle::~AssetHandle((re::ecs2::FilterMapComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED588C0;
  re::AssetHandle::~AssetHandle((re::ecs2::FilterMapComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::FilterMapComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E2D8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::FilterMapComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Slice<re::ecs2::FilterMapComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::FilterMapComponent>,re::Slice<re::ecs2::FilterMapComponent*>>::Subscription const&,re::Slice<re::ecs2::FilterMapComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  re::ecs2::VFXSceneComponent *v2;
  uint64_t v3;

  v2 = (re::ecs2::VFXSceneComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                            + 7)
                                                                                         + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 368, 0);
  re::ecs2::VFXSceneComponent::VFXSceneComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E3F0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__guard re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __guard *v1;
  int v3;

  if ((v0 & 1) == 0)
  {
    if (v3)
    {
      re::introspect<re::ecs2::VFXSceneComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_VFXSceneComponent(0);
    }
  }
  return v1[359];
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VFXSceneComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E380;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E3F0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Slice<re::ecs2::VFXSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneComponent>,re::Slice<re::ecs2::VFXSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneMetadataComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 96, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED462F8;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E508;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109028);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109028))
  {
    qword_254109020 = re::ecs2::introspect_VFXSceneMetadataComponent(0);
    __cxa_guard_release(&qword_254109028);
  }
  return qword_254109020;
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VFXSceneMetadataComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E498;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E508;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneMetadataComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Slice<re::ecs2::VFXSceneMetadataComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneMetadataComponent>,re::Slice<re::ecs2::VFXSceneMetadataComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneMetadataComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VFXSceneReadbackComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 88, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_QWORD *)(v2 + 80) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED461E0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_BYTE *)(v3 + 80) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E620;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109038);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109038))
  {
    qword_254109030 = re::ecs2::introspect_VFXSceneReadbackComponent(0);
    __cxa_guard_release(&qword_254109038);
  }
  return qword_254109030;
}

__n128 re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VFXSceneReadbackComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E5B0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E620;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VFXSceneReadbackComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Slice<re::ecs2::VFXSceneReadbackComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VFXSceneReadbackComponent>,re::Slice<re::ecs2::VFXSceneReadbackComponent*>>::Subscription const&,re::Slice<re::ecs2::VFXSceneReadbackComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 88, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_QWORD *)(v2 + 80) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A100;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 32) = 1000;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 80) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E738;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109048);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109048))
  {
    qword_254109040 = re::ecs2::introspect_RenderGraphFileProviderArrayComponent(0);
    __cxa_guard_release(&qword_254109048);
  }
  return qword_254109040;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RenderGraphFileProviderArrayComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E6C8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::RenderGraphFileProviderArrayComponent::~RenderGraphFileProviderArrayComponent(re::ecs2::RenderGraphFileProviderArrayComponent *this)
{
  *(_QWORD *)this = &off_24ED5A100;
  re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit((uint64_t)this + 40);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED5A100;
  re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit((uint64_t)this + 40);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RenderGraphFileProviderArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::RenderGraphFileProviderEntry>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 80 * v4;
        do
        {
          v6 = *(_QWORD *)(v3 + 24);
          if (v6)
          {
            if ((*(_BYTE *)(v3 + 32) & 1) != 0)
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v6 + 40))(v6, *(_QWORD *)(v3 + 40));
            *(_OWORD *)(v3 + 24) = 0u;
            *(_OWORD *)(v3 + 40) = 0u;
          }
          re::AssetHandle::~AssetHandle((re::AssetHandle *)v3);
          v3 += 80;
          v5 -= 80;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E738;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderGraphFileProviderArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderGraphFileProviderArrayComponent>,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderGraphFileProviderArrayComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ListenerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 144, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58038;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(_OWORD *)(v3 + 32) = xmmword_2260E7ED0;
  *(_BYTE *)(v3 + 48) = 1;
  *(_DWORD *)(v3 + 52) = 1065353216;
  *(_OWORD *)(v3 + 64) = xmmword_2260E5F10;
  *(_OWORD *)(v3 + 80) = xmmword_2260E5F20;
  result = 0.0;
  *(_OWORD *)(v3 + 96) = xmmword_2260E5F40;
  *(_OWORD *)(v3 + 112) = xmmword_2260E5D70;
  *(_BYTE *)(v3 + 128) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E850;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109058);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109058))
  {
    qword_254109050 = re::ecs2::introspect_ListenerComponent(0);
    __cxa_guard_release(&qword_254109058);
  }
  return qword_254109050;
}

__n128 re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ListenerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ListenerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E7E0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ListenerComponent::~ListenerComponent(re::ecs2::ListenerComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ListenerComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E850;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ListenerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Slice<re::ecs2::ListenerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ListenerComponent>,re::Slice<re::ecs2::ListenerComponent*>>::Subscription const&,re::Slice<re::ecs2::ListenerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_QWORD *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59F80;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4E968;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109068);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109068))
  {
    qword_254109060 = re::ecs2::introspect_MaterialOverrideComponent(0);
    __cxa_guard_release(&qword_254109068);
  }
  return qword_254109060;
}

__n128 re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MaterialOverrideComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4E8F8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::MaterialOverrideComponent::~MaterialOverrideComponent(re::ecs2::MaterialOverrideComponent *this)
{
  *(_QWORD *)this = &off_24ED59F80;
  re::DynamicArray<re::ecs2::MaterialOverride>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED59F80;
  re::DynamicArray<re::ecs2::MaterialOverride>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MaterialOverrideComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::MaterialOverride>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(uint64_t **)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 120 * v4;
        do
        {
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 12));
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 9));
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v3 + 6));
          re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v3);
          v3 += 15;
          v5 -= 120;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(uint64_t **)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

double re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 120;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::HashTable<re::StringID,re::ecs2::MaterialParameterVariant,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *a1)
{
  if ((*a1 & 0x80000000) != 0)
  {
    *a1 &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(a1 + 2));
    re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 24));
  }
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4E968;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialOverrideComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Slice<re::ecs2::MaterialOverrideComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialOverrideComponent>,re::Slice<re::ecs2::MaterialOverrideComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialOverrideComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_QWORD *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A780;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4EA80;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109078))
  {
    qword_254109070 = re::ecs2::introspect_DirectMaterialParametersArrayComponent(0);
    __cxa_guard_release(&qword_254109078);
  }
  return qword_254109070;
}

__n128 re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DirectMaterialParametersArrayComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4EA10;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DirectMaterialParametersArrayComponent::~DirectMaterialParametersArrayComponent(re::ecs2::DirectMaterialParametersArrayComponent *this)
{
  *(_QWORD *)this = &off_24ED5A780;
  re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED5A780;
  re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit((uint64_t)this + 32);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 16;
}

void *re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DirectMaterialParametersArrayComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SerializableDirectMaterialParameters>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 80 * v4;
        do
        {
          re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit(v3 + 40);
          re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit(v3);
          v3 += 80;
          v5 -= 80;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4EA80;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DirectMaterialParametersArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DirectMaterialParametersArrayComponent>,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::DirectMaterialParametersArrayComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 152, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_QWORD *)(v2 + 144) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59240;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_DWORD *)(v3 + 96) = 0;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_DWORD *)(v3 + 136) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4EB98;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109088);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109088))
  {
    qword_254109080 = re::ecs2::introspect_MaterialParameterBlockArrayComponent(0);
    __cxa_guard_release(&qword_254109088);
  }
  return qword_254109080;
}

__n128 re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MaterialParameterBlockArrayComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4EB28;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::MaterialParameterBlockArrayComponent::~MaterialParameterBlockArrayComponent(re::ecs2::MaterialParameterBlockArrayComponent *this)
{
  char *v2;

  *(_QWORD *)this = &off_24ED59240;
  v2 = (char *)this + 32;
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit((uint64_t)this + 112);
  re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit((uint64_t)v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  char *v2;

  *(_QWORD *)this = &off_24ED59240;
  v2 = (char *)this + 32;
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit((uint64_t)this + 112);
  re::DynamicArray<re::SharedPtr<re::ecs2::System>>::deinit((uint64_t)this + 72);
  re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit((uint64_t)v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 8;
}

void *re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MaterialParameterBlockArrayComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SerializableMaterialParameterBlock>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 0;
        v6 = 408 * v4;
        do
        {
          re::HashSetBase<re::StringID,re::StringID,re::internal::ValueAsKey<re::StringID>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 352));
          re::HashTable<re::StringID,re::ecs2::SerializedMaterialParameter,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 304));
          re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 256));
          re::HashTable<unsigned long long,re::RenderGraphTargetHandle,re::PrecalculatedHash,re::EqualTo<unsigned long long>,false,false>::deinit((uint64_t *)(v3 + v5 + 208));
          re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 160));
          re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 112));
          re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 64));
          re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)(v3 + v5 + 16));
          *(_QWORD *)(v3 + v5) = &off_24ED426B8;
          objc_destructInstance((id)(v3 + v5 + 8));
          v5 += 408;
        }
        while (v6 != v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

double re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 72;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

_DWORD *re::HashTable<re::StringID,re::Optional<re::ecs2::SerializableParameterBinding>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free(_DWORD *result)
{
  _DWORD *v1;

  if ((*result & 0x80000000) != 0)
  {
    v1 = result;
    *result &= ~0x80000000;
    re::StringID::destroyString((re::StringID *)(result + 2));
    return re::Optional<re::ecs2::SerializableParameterBinding>::~Optional((_BYTE *)v1 + 24);
  }
  return result;
}

_BYTE *re::Optional<re::ecs2::SerializableParameterBinding>::~Optional(_BYTE *a1)
{
  if (*a1)
  {
    re::StringID::destroyString((re::StringID *)(a1 + 32));
    re::StringID::destroyString((re::StringID *)(a1 + 16));
  }
  return a1;
}

double re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;

  v2 = *a1;
  if (v2)
  {
    if (*((_DWORD *)a1 + 8))
    {
      v3 = 0;
      v4 = 0;
      do
      {
        re::HashTable<re::StringID,re::StringID,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::EntryWithoutHash::free((_DWORD *)(a1[2] + v3));
        ++v4;
        v3 += 40;
      }
      while (v4 < *((unsigned int *)a1 + 8));
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::SerializableMaterialParameterBlockHandle>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 24 * v4;
        do
        {
          if (*(_QWORD *)v3)
          {

            *(_QWORD *)v3 = 0;
          }
          v3 += 24;
          v5 -= 24;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4EB98;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MaterialParameterBlockArrayComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MaterialParameterBlockArrayComponent>,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>>::Subscription const&,re::Slice<re::ecs2::MaterialParameterBlockArrayComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

__n128 re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __n128 result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::UnlitMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 104, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED496D8;
  __asm { FMOV            V0.4S, #1.0 }
  *(__n128 *)(v3 + 28) = result;
  *(_BYTE *)(v3 + 44) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 70) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4ECB0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109098);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109098))
  {
    qword_254109090 = re::ecs2::introspect_UnlitMaterialParametersComponent(0);
    __cxa_guard_release(&qword_254109098);
  }
  return qword_254109090;
}

__n128 re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::UnlitMaterialParametersComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4EC40;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4ECB0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UnlitMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UnlitMaterialParametersComponent>,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::UnlitMaterialParametersComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  double result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 560, 0);
  bzero(v2, 0x230uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED5A180;
  re::PbrMaterialParameters::PbrMaterialParameters((re::PbrMaterialParameters *)(v2 + 4));
  v2[68] = 0;
  result = 0.0;
  *((_OWORD *)v2 + 33) = 0u;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4EDC8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090A8))
  {
    qword_2541090A0 = re::ecs2::introspect_PbrMaterialParametersComponent(0);
    __cxa_guard_release(&qword_2541090A8);
  }
  return qword_2541090A0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PbrMaterialParametersComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4ED58;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PbrMaterialParametersComponent::~PbrMaterialParametersComponent(re::ecs2::PbrMaterialParametersComponent *this)
{
  re::ecs2::PbrMaterialParametersComponent::~PbrMaterialParametersComponent(this);
  JUMPOUT(0x2276933B8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED5A180;
  v2 = (re::ecs2::PbrMaterialParametersComponent *)((char *)this + 248);
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 528));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 344));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 320));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 296));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 272));
  re::AssetHandle::~AssetHandle(v2);
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 224));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 200));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 176));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 152));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 128));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 104));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle((re::ecs2::PbrMaterialParametersComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PbrMaterialParametersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4EDC8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PbrMaterialParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Slice<re::ecs2::PbrMaterialParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PbrMaterialParametersComponent>,re::Slice<re::ecs2::PbrMaterialParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::PbrMaterialParametersComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id *re::ecs2::ComponentType<re::ecs2::MeshComponent>::doMakeComponent@<X0>(id **a1@<X8>)
{
  id *v2;
  id *result;

  v2 = (id *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                   + 7)
                                                                + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 336, 0);
  result = re::ecs2::MeshComponent::MeshComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4EEE0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090B8))
  {
    qword_2541090B0 = re::ecs2::introspect_MeshComponent(0);
    __cxa_guard_release(&qword_2541090B8);
  }
  return qword_2541090B0;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4EE70;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4EEE0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Slice<re::ecs2::MeshComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshComponent>,re::Slice<re::ecs2::MeshComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  re *inited;
  uint64_t *result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshSceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 704, 0);
  bzero(v2, 0x2C0uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED48E00;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_DWORD *)v2 + 16) = 0;
  *(_QWORD *)((char *)v2 + 68) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_DWORD *)v2 + 28) = 0;
  *(_QWORD *)((char *)v2 + 116) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_DWORD *)v2 + 40) = 0;
  *(_QWORD *)((char *)v2 + 164) = 0x7FFFFFFFLL;
  v2[26] = 0;
  v2[23] = 0;
  v2[24] = 0;
  v2[22] = 0;
  *((_DWORD *)v2 + 50) = 0;
  *((_DWORD *)v2 + 54) = 0;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *(_OWORD *)((char *)v2 + 252) = 0u;
  *(_QWORD *)((char *)v2 + 268) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 78) = 0;
  *(_OWORD *)(v2 + 35) = 0u;
  *(_OWORD *)(v2 + 37) = 0u;
  *(_QWORD *)((char *)v2 + 316) = 0x7FFFFFFFLL;
  v2[79] = 0;
  *(_OWORD *)(v2 + 41) = 0u;
  *(_OWORD *)(v2 + 43) = 0u;
  *(_OWORD *)(v2 + 45) = 0u;
  *(_OWORD *)(v2 + 47) = 0u;
  *(_OWORD *)(v2 + 49) = 0u;
  *(_OWORD *)(v2 + 51) = 0u;
  *(_OWORD *)(v2 + 53) = 0u;
  *(_OWORD *)(v2 + 55) = 0u;
  *(_OWORD *)(v2 + 57) = 0u;
  *(_OWORD *)(v2 + 59) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  *(_OWORD *)(v2 + 63) = 0u;
  *(_OWORD *)(v2 + 65) = 0u;
  *(_OWORD *)(v2 + 67) = 0u;
  *(_OWORD *)(v2 + 69) = 0u;
  *(_OWORD *)(v2 + 71) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 75) = 0u;
  *(_OWORD *)(v2 + 77) = 0u;
  inited = (re *)objc_initWeak((id *)v2 + 80, 0);
  v2[81] = 0;
  result = re::globalAllocators(inited);
  v2[85] = result[2];
  v2[86] = 0;
  v2[87] = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4EFF8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090C8))
  {
    qword_2541090C0 = re::ecs2::introspect_MeshSceneComponent(0);
    __cxa_guard_release(&qword_2541090C8);
  }
  return qword_2541090C0;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshSceneComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4EF88;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4EFF8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Slice<re::ecs2::MeshSceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSceneComponent>,re::Slice<re::ecs2::MeshSceneComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSceneComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshSortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 464, 0);
  return re::make::shared::inplace<re::ecs2::MeshSortingComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F110;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090D8))
  {
    qword_2541090D0 = re::ecs2::introspect_MeshSortingComponent(0);
    __cxa_guard_release(&qword_2541090D8);
  }
  return qword_2541090D0;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshSortingComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F0A0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F110;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Slice<re::ecs2::MeshSortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSortingComponent>,re::Slice<re::ecs2::MeshSortingComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSortingComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshDeformationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 440, 0);
  return re::make::shared::inplace<re::ecs2::MeshDeformationComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F228;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090E8))
  {
    qword_2541090E0 = re::ecs2::introspect_MeshDeformationComponent(0);
    __cxa_guard_release(&qword_2541090E8);
  }
  return qword_2541090E0;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshDeformationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F1B8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F228;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshDeformationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Slice<re::ecs2::MeshDeformationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshDeformationComponent>,re::Slice<re::ecs2::MeshDeformationComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshDeformationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58CC0;
  *(_DWORD *)(v3 + 28) = 1065353216;
  *(_BYTE *)(v3 + 32) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F340;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541090F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541090F8))
  {
    qword_2541090F0 = re::ecs2::introspect_HierarchicalFadeComponent(0);
    __cxa_guard_release(&qword_2541090F8);
  }
  return qword_2541090F0;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::HierarchicalFadeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F2D0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::HierarchicalFadeComponent::~HierarchicalFadeComponent(re::ecs2::HierarchicalFadeComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 3;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F340;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Slice<re::ecs2::HierarchicalFadeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeComponent>,re::Slice<re::ecs2::HierarchicalFadeComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;

  if (!a3)
    return 0;
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderRaw>>(a3, (unsigned int *)a2);
  v4 = *(_QWORD *)(a2 + 40);
  if ((v4 & 1) != 0)
    v5 = v4 >> 1;
  else
    v5 = v4 >> 1;
  return v5 == 0;
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_2(int a1, re::snapshot::EncoderOPACK *this, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;

  if (!a3)
    return 0;
  re::snapshot::EncoderOPACK::beginObject((unsigned int *)this);
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderOPACK>>(a3, this);
  re::snapshot::EncoderOPACK::endObject((unsigned int *)this);
  v5 = *((_QWORD *)this + 5);
  if ((v5 & 1) != 0)
    v6 = v5 >> 1;
  else
    v6 = v5 >> 1;
  return v6 == 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (!a3)
    return 0;
  re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderRaw>>(a3, a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 != *(_QWORD *)(a2 + 24))
    re::snapshot::Decoder::error((const char **)a2, "failed to consume input: %zu vs %zu", v4 - *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if (!*(_BYTE *)(a2 + 36))
    return 1;
  re::snapshot::Decoder::logInput((re::snapshot::Decoder *)a2);
  return 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs225HierarchicalFadeComponentEEEPKNS1_5EntryEv_block_invoke_4(int a1, re::snapshot::DecoderOPACK *this, uint64_t a3)
{
  uint64_t v5;

  if (!a3)
    return 0;
  if (re::snapshot::DecoderOPACK::beginObject(this, 0))
  {
    re::ecs2::HierarchicalFadeComponent::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderOPACK>>(a3, (uint64_t)this);
    re::snapshot::DecoderOPACK::endObject((uint64_t *)this, 0);
  }
  v5 = *((_QWORD *)this + 2);
  if (v5 != *((_QWORD *)this + 3))
    re::snapshot::Decoder::error((const char **)this, "failed to consume input: %zu vs %zu", v5 - *(_QWORD *)this, *((_QWORD *)this + 1));
  if (!*((_BYTE *)this + 36))
    return 1;
  re::snapshot::Decoder::logInput(this);
  return 0;
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58D40;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F558;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109110);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109110))
  {
    qword_254109108 = re::ecs2::introspect_HierarchicalFadeSecondaryOpacityMarkerComponent(0);
    __cxa_guard_release(&qword_254109110);
  }
  return qword_254109108;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F4E8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent::~HierarchicalFadeSecondaryOpacityMarkerComponent(re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F558;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent>,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalFadeSecondaryOpacityMarkerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57888;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F670;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109120);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109120))
  {
    qword_254109118 = re::ecs2::introspect_HierarchicalTintComponent(0);
    __cxa_guard_release(&qword_254109120);
  }
  return qword_254109118;
}

__n128 re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::HierarchicalTintComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F600;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::HierarchicalTintComponent::~HierarchicalTintComponent(re::ecs2::HierarchicalTintComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 4;
}

void *re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::HierarchicalTintComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F670;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::HierarchicalTintComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Slice<re::ecs2::HierarchicalTintComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::HierarchicalTintComponent>,re::Slice<re::ecs2::HierarchicalTintComponent*>>::Subscription const&,re::Slice<re::ecs2::HierarchicalTintComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshSmoothComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 336, 0);
  return re::make::shared::inplace<re::ecs2::MeshSmoothComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F788;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109130);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109130))
  {
    qword_254109128 = re::ecs2::introspect_MeshSmoothComponent(0);
    __cxa_guard_release(&qword_254109130);
  }
  return qword_254109128;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshSmoothComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F718;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F788;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshSmoothComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Slice<re::ecs2::MeshSmoothComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshSmoothComponent>,re::Slice<re::ecs2::MeshSmoothComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshSmoothComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MeshOffsetsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 216, 0);
  return re::make::shared::inplace<re::ecs2::MeshOffsetsComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F8A0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109140);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109140))
  {
    qword_254109138 = re::ecs2::introspect_MeshOffsetsComponent(0);
    __cxa_guard_release(&qword_254109140);
  }
  return qword_254109138;
}

__n128 re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MeshOffsetsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F830;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F8A0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MeshOffsetsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Slice<re::ecs2::MeshOffsetsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MeshOffsetsComponent>,re::Slice<re::ecs2::MeshOffsetsComponent*>>::Subscription const&,re::Slice<re::ecs2::MeshOffsetsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::EntityFunctionConstantComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED46440;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4F9B8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109150);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109150))
  {
    qword_254109148 = re::ecs2::introspect_EntityFunctionConstantComponent(0);
    __cxa_guard_release(&qword_254109150);
  }
  return qword_254109148;
}

__n128 re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::EntityFunctionConstantComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4F948;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4F9B8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::EntityFunctionConstantComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Slice<re::ecs2::EntityFunctionConstantComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::EntityFunctionConstantComponent>,re::Slice<re::ecs2::EntityFunctionConstantComponent*>>::Subscription const&,re::Slice<re::ecs2::EntityFunctionConstantComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  int32x4_t result;
  __int128 v5;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57308;
  *(_QWORD *)(v3 + 28) = 0x400000003FA00000;
  *(_DWORD *)(v3 + 36) = 1094713344;
  *(_WORD *)(v3 + 40) = 1;
  result = vdupq_n_s32(0x7F800000u);
  *(_QWORD *)&v5 = 0x7F0000007FLL;
  *((_QWORD *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 48) = result;
  *(_OWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4FAD0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109160);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109160))
  {
    qword_254109158 = re::ecs2::introspect_ProjectiveShadowReceiverComponent(0);
    __cxa_guard_release(&qword_254109160);
  }
  return qword_254109158;
}

__n128 re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ProjectiveShadowReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FA60;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ProjectiveShadowReceiverComponent::~ProjectiveShadowReceiverComponent(re::ecs2::ProjectiveShadowReceiverComponent *this)
{
  re::AssetHandle::~AssetHandle((re::ecs2::ProjectiveShadowReceiverComponent *)((char *)this + 80));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle::~AssetHandle((re::ecs2::ProjectiveShadowReceiverComponent *)((char *)this + 80));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ProjectiveShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4FAD0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ProjectiveShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ProjectiveShadowReceiverComponent>,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::ProjectiveShadowReceiverComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 80, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56F08;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 76) = 1;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4FBE8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109170);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109170))
  {
    qword_254109168 = re::ecs2::introspect_ShadowClusterComponent(0);
    __cxa_guard_release(&qword_254109170);
  }
  return qword_254109168;
}

__n128 re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ShadowClusterComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FB78;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ShadowClusterComponent::~ShadowClusterComponent(re::ecs2::ShadowClusterComponent *this)
{
  re::AssetHandle::~AssetHandle((re::ecs2::ShadowClusterComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle::~AssetHandle((re::ecs2::ShadowClusterComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return 12;
}

void *re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ShadowClusterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4FBE8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ShadowClusterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Slice<re::ecs2::ShadowClusterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ShadowClusterComponent>,re::Slice<re::ecs2::ShadowClusterComponent*>>::Subscription const&,re::Slice<re::ecs2::ShadowClusterComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56E88;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4FD00;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109180);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109180))
  {
    qword_254109178 = re::ecs2::introspect_ClusterShadowMarkerComponent(0);
    __cxa_guard_release(&qword_254109180);
  }
  return qword_254109178;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ClusterShadowMarkerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FC90;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ClusterShadowMarkerComponent::~ClusterShadowMarkerComponent(re::ecs2::ClusterShadowMarkerComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClusterShadowMarkerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4FD00;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowMarkerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowMarkerComponent>,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowMarkerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56E08;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4FE18;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109190);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109190))
  {
    qword_254109188 = re::ecs2::introspect_ClusterShadowSeparatorComponent(0);
    __cxa_guard_release(&qword_254109190);
  }
  return qword_254109188;
}

__n128 re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ClusterShadowSeparatorComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FDA8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ClusterShadowSeparatorComponent::~ClusterShadowSeparatorComponent(re::ecs2::ClusterShadowSeparatorComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ClusterShadowSeparatorComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4FE18;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ClusterShadowSeparatorComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ClusterShadowSeparatorComponent>,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>>::Subscription const&,re::Slice<re::ecs2::ClusterShadowSeparatorComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A700;
  result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_BYTE *)(v3 + 64) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED4FF30;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091A0))
  {
    qword_254109198 = re::ecs2::introspect_AnchorShadowMarker(0);
    __cxa_guard_release(&qword_2541091A0);
  }
  return qword_254109198;
}

__n128 re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AnchorShadowMarker>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FEC0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AnchorShadowMarker::~AnchorShadowMarker(re::ecs2::AnchorShadowMarker *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AnchorShadowMarker,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED4FF30;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AnchorShadowMarker>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Slice<re::ecs2::AnchorShadowMarker*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AnchorShadowMarker>,re::Slice<re::ecs2::AnchorShadowMarker*>>::Subscription const&,re::Slice<re::ecs2::AnchorShadowMarker*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 192, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59C80;
  *(_WORD *)(v3 + 25) = 0;
  *(_QWORD *)(v3 + 32) = 0x3F8000003F800000;
  *(_QWORD *)(v3 + 40) = 1065353216;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0x3F80000000000000;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 140) = 0u;
  *(_QWORD *)(v3 + 168) = 0;
  *(_QWORD *)(v3 + 176) = 0;
  *(_QWORD *)(v3 + 160) = 0;
  *(_DWORD *)(v3 + 184) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50048;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__guard re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __guard *v1;
  int v3;

  if ((v0 & 1) == 0)
  {
    if (v3)
    {
      re::introspect<re::ecs2::MotionStateComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_MotionStateComponent(0);
    }
  }
  return v1[379];
}

__n128 re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::MotionStateComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED4FFD8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::MotionStateComponent::~MotionStateComponent(re::ecs2::MotionStateComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::MotionStateComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50048;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::MotionStateComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Slice<re::ecs2::MotionStateComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::MotionStateComponent>,re::Slice<re::ecs2::MotionStateComponent*>>::Subscription const&,re::Slice<re::ecs2::MotionStateComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::NetworkComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  __int128 v3;
  double result;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 640, 0);
  bzero(v2, 0x280uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED58F40;
  v2[4] = 0;
  v2[5] = 0;
  *((_DWORD *)v2 + 12) = 16777471;
  *((_BYTE *)v2 + 52) = 0;
  v2[8] = 0;
  v2[9] = 0;
  v2[7] = 0;
  *((_DWORD *)v2 + 20) = 1;
  v2[11] = 0;
  v2[12] = 0;
  *((_DWORD *)v2 + 28) = 0;
  *((_WORD *)v2 + 58) = 16;
  *(_QWORD *)&v3 = -1;
  *((_QWORD *)&v3 + 1) = -1;
  *((_OWORD *)v2 + 8) = v3;
  v2[15] = v2 + 16;
  *((_OWORD *)v2 + 9) = v3;
  v2[20] = 0;
  v2[21] = 0;
  *((_DWORD *)v2 + 44) = 1;
  v2[23] = 0;
  v2[24] = 0;
  v2[39] = 0;
  v2[40] = 0;
  *((_DWORD *)v2 + 82) = 1;
  result = 0.0;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  v2[46] = 0;
  *((_DWORD *)v2 + 94) = 1;
  v2[49] = 0;
  v2[50] = 0;
  v2[48] = 0;
  *((_OWORD *)v2 + 26) = 0u;
  *((_OWORD *)v2 + 27) = 0u;
  *((_DWORD *)v2 + 112) = 0;
  *(_QWORD *)((char *)v2 + 452) = 0x7FFFFFFFLL;
  *((_OWORD *)v2 + 29) = 0u;
  *((_OWORD *)v2 + 30) = 0u;
  *((_DWORD *)v2 + 124) = 0;
  *(_QWORD *)((char *)v2 + 500) = 0x7FFFFFFFLL;
  *((_DWORD *)v2 + 136) = 0;
  *((_OWORD *)v2 + 32) = 0u;
  *((_OWORD *)v2 + 33) = 0u;
  *(_QWORD *)((char *)v2 + 548) = 0x7FFFFFFFLL;
  *((_BYTE *)v2 + 560) = 1;
  *((_DWORD *)v2 + 142) = 0;
  v2[73] = 0;
  v2[72] = 0;
  *((_DWORD *)v2 + 150) = 0;
  v2[74] = 0;
  v2[78] = 0;
  *(_DWORD *)((char *)v2 + 615) = 0;
  v2[76] = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50160;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__objc2_class_ro *re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __objc2_class_ro **p_info;
  int v3;

  p_info = VideoSpillMapMetalSession.info;
  if ((v0 & 1) == 0)
  {
    p_info = (__objc2_class_ro **)(VideoSpillMapMetalSession + 32);
    if (v3)
    {
      re::introspect<re::ecs2::NetworkComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_NetworkComponent(0);
      p_info = (__objc2_class_ro **)(VideoSpillMapMetalSession + 32);
    }
  }
  return p_info[297];
}

__n128 re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::NetworkComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED500F0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::NetworkComponent::~NetworkComponent(re::ecs2::NetworkComponent *this)
{
  re::ecs2::NetworkComponent::~NetworkComponent(this);
  JUMPOUT(0x2276933B8);
}

{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24ED58F40;
  v2 = *((_QWORD *)this + 72);
  if (v2)
  {
    if (*((_QWORD *)this + 76))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *((_QWORD *)this + 76) = 0;
    *((_QWORD *)this + 73) = 0;
    *((_QWORD *)this + 74) = 0;
    *((_QWORD *)this + 72) = 0;
    ++*((_DWORD *)this + 150);
  }
  re::HashSetBase<unsigned short,unsigned short,re::internal::ValueAsKey<unsigned short>,re::Hash<unsigned short>,re::EqualTo<unsigned short>,true,false>::deinit((uint64_t *)this + 64);
  re::HashSetBase<RESyncableRefRetainer,RESyncableRefRetainer,re::internal::ValueAsKey<RESyncableRefRetainer>,re::ecs2::NetworkComponent::RESyncableRefRetainerHash,re::EqualTo<RESyncableRefRetainer>,true,false>::deinit((uint64_t *)this + 58);
  re::HashSetBase<unsigned short,unsigned short,re::internal::ValueAsKey<unsigned short>,re::Hash<unsigned short>,re::EqualTo<unsigned short>,true,false>::deinit((uint64_t *)this + 52);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 360);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 312);
  re::DynamicOverflowArray<RESyncableRefRetainer,16ul>::deinit((uint64_t)this + 160);
  re::ecs2::PackedTypeIDs::~PackedTypeIDs((re::ecs2::NetworkComponent *)((char *)this + 112));
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit((uint64_t)this + 64);
  v3 = *((_QWORD *)this + 5);
  if (v3)
  {

    *((_QWORD *)this + 5) = 0;
  }
  if (*((_QWORD *)this + 4))
  {
    RESyncRelease();
    *((_QWORD *)this + 4) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 9;
}

void *re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::NetworkComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

double re::HashSetBase<RESyncableRefRetainer,RESyncableRefRetainer,re::internal::ValueAsKey<RESyncableRefRetainer>,re::ecs2::NetworkComponent::RESyncableRefRetainerHash,re::EqualTo<RESyncableRefRetainer>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  int v7;
  double result;

  v2 = *a1;
  if (v2)
  {
    v3 = *((unsigned int *)a1 + 8);
    if ((_DWORD)v3)
    {
      v4 = 0;
      for (i = 0; i < v3; ++i)
      {
        v6 = a1[2] + v4;
        v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
          if (*(_QWORD *)(v6 + 16))
          {
            RESyncRelease();
            *(_QWORD *)(v6 + 16) = 0;
            v3 = *((unsigned int *)a1 + 8);
          }
        }
        v4 += 24;
      }
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

uint64_t re::DynamicOverflowArray<RESyncableRefRetainer,16ul>::deinit(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;

  if (*(_QWORD *)result)
  {
    v1 = (_QWORD *)result;
    v2 = *(_QWORD *)(result + 8);
    if (v2)
    {
      if ((*(_BYTE *)(result + 16) & 1) != 0)
        v3 = (uint64_t *)(result + 24);
      else
        v3 = *(uint64_t **)(result + 32);
      v4 = 8 * v2;
      do
      {
        result = *v3;
        if (*v3)
        {
          result = RESyncRelease();
          *v3 = 0;
        }
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *((_DWORD *)v1 + 4);
    if ((v5 & 1) == 0)
    {
      result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)*v1 + 40))(*v1, v1[4]);
      v5 = *((_DWORD *)v1 + 4);
    }
    *v1 = 0;
    v1[1] = 0;
    *((_DWORD *)v1 + 4) = (v5 | 1) + 2;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50160;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Slice<re::ecs2::NetworkComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkComponent>,re::Slice<re::ecs2::NetworkComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  re::ecs2::OrthographicCameraComponent *v2;
  uint64_t v3;

  v2 = (re::ecs2::OrthographicCameraComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7) + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::OrthographicCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 240, 0);
  re::ecs2::OrthographicCameraComponent::OrthographicCameraComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50278;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091B0))
  {
    qword_2541091A8 = re::ecs2::introspect_OrthographicCameraComponent(0);
    __cxa_guard_release(&qword_2541091B0);
  }
  return qword_2541091A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::OrthographicCameraComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50208;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50278;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::OrthographicCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Slice<re::ecs2::OrthographicCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::OrthographicCameraComponent>,re::Slice<re::ecs2::OrthographicCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::OrthographicCameraComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED591C0;
  *(_BYTE *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 96) = 1065353216;
  *(_BYTE *)(v3 + 100) = 0;
  result = 0.12500003;
  *(_QWORD *)(v3 + 104) = 0x3FC000003F800000;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50390;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091C0))
  {
    qword_2541091B8 = re::ecs2::introspect_PassthroughDarkeningComponent(0);
    __cxa_guard_release(&qword_2541091C0);
  }
  return qword_2541091B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PassthroughDarkeningComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50320;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PassthroughDarkeningComponent::~PassthroughDarkeningComponent(re::ecs2::PassthroughDarkeningComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PassthroughDarkeningComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50390;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PassthroughDarkeningComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Slice<re::ecs2::PassthroughDarkeningComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PassthroughDarkeningComponent>,re::Slice<re::ecs2::PassthroughDarkeningComponent*>>::Subscription const&,re::Slice<re::ecs2::PassthroughDarkeningComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  re::ecs2::PerspectiveCameraComponent *v2;
  uint64_t v3;

  v2 = (re::ecs2::PerspectiveCameraComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType + 7)
                                                                                                  + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PerspectiveCameraComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 272, 0);
  re::ecs2::PerspectiveCameraComponent::PerspectiveCameraComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED504A8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091D0))
  {
    qword_2541091C8 = re::ecs2::introspect_PerspectiveCameraComponent(0);
    __cxa_guard_release(&qword_2541091D0);
  }
  return qword_2541091C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PerspectiveCameraComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50438;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED504A8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PerspectiveCameraComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Slice<re::ecs2::PerspectiveCameraComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PerspectiveCameraComponent>,re::Slice<re::ecs2::PerspectiveCameraComponent*>>::Subscription const&,re::Slice<re::ecs2::PerspectiveCameraComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsOriginComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED43A90;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED505C0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091E0))
  {
    qword_2541091D8 = re::ecs2::introspect_PhysicsOriginComponent(0);
    __cxa_guard_release(&qword_2541091E0);
  }
  return qword_2541091D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PhysicsOriginComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50550;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED505C0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsOriginComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Slice<re::ecs2::PhysicsOriginComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsOriginComponent>,re::Slice<re::ecs2::PhysicsOriginComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsOriginComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsSimulationComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED68080;
  *(_WORD *)(v3 + 25) = 0;
  *(_BYTE *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0x100000006;
  result = objc_initWeak((id *)(v2 + 80), 0);
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED506D8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541091F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541091F0))
  {
    qword_2541091E8 = re::ecs2::introspect_PhysicsSimulationComponent(0);
    __cxa_guard_release(&qword_2541091F0);
  }
  return qword_2541091E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PhysicsSimulationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50668;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED506D8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsSimulationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Slice<re::ecs2::PhysicsSimulationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsSimulationComponent>,re::Slice<re::ecs2::PhysicsSimulationComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsSimulationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsJointsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 136, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_QWORD *)(v2 + 128) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED70208;
  *(_QWORD *)(v3 + 32) = &off_24ED68990;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_DWORD *)(v3 + 104) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 112) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED507F0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109200);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109200))
  {
    qword_2541091F8 = re::ecs2::introspect_PhysicsJointsComponent(0);
    __cxa_guard_release(&qword_254109200);
  }
  return qword_2541091F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PhysicsJointsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50780;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED507F0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsJointsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Slice<re::ecs2::PhysicsJointsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsJointsComponent>,re::Slice<re::ecs2::PhysicsJointsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsJointsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57B08;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50908;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109210);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109210))
  {
    qword_254109208 = re::ecs2::introspect_PlanarReflectionCaptureComponent(0);
    __cxa_guard_release(&qword_254109210);
  }
  return qword_254109208;
}

__n128 re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PlanarReflectionCaptureComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50898;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PlanarReflectionCaptureComponent::~PlanarReflectionCaptureComponent(re::ecs2::PlanarReflectionCaptureComponent *this)
{
  *(_QWORD *)this = &off_24ED57B08;
  re::AssetHandle::~AssetHandle((re::ecs2::PlanarReflectionCaptureComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED57B08;
  re::AssetHandle::~AssetHandle((re::ecs2::PlanarReflectionCaptureComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50908;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionCaptureComponent>,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionCaptureComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57B88;
  objc_initWeak((id *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 32));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50A20;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109220);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109220))
  {
    qword_254109218 = re::ecs2::introspect_PlanarReflectionReceiverComponent(0);
    __cxa_guard_release(&qword_254109220);
  }
  return qword_254109218;
}

__n128 re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PlanarReflectionReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED509B0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PlanarReflectionReceiverComponent::~PlanarReflectionReceiverComponent(id *this)
{
  id *v2;

  *this = &off_24ED57B88;
  v2 = this + 4;
  re::ecs2::EntityHandle::reset(this + 4);
  objc_destroyWeak(v2);
  this[4] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
}

{
  id *v2;

  *this = &off_24ED57B88;
  v2 = this + 4;
  re::ecs2::EntityHandle::reset(this + 4);
  objc_destroyWeak(v2);
  this[4] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50A20;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PlanarReflectionReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PlanarReflectionReceiverComponent>,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::PlanarReflectionReceiverComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 144, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveBoxComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50B38;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109230);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109230))
  {
    qword_254109228 = re::ecs2::introspect_PrimitiveBoxComponent(0);
    __cxa_guard_release(&qword_254109230);
  }
  return qword_254109228;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveBoxComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50AC8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50B38;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Slice<re::ecs2::PrimitiveBoxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxComponent>,re::Slice<re::ecs2::PrimitiveBoxComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 168, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_QWORD *)(v2 + 160) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)&result = 0x3000100010001;
  *(_QWORD *)(v3 + 28) = 0x3000100010001;
  *(_WORD *)(v3 + 36) = 4;
  *(_OWORD *)(v3 + 40) = xmmword_2260F83A0;
  *(_DWORD *)(v3 + 56) = 1065353216;
  *(_DWORD *)(v3 + 60) = 16777473;
  *(_WORD *)(v3 + 64) = 1;
  *(_BYTE *)(v3 + 66) = 0;
  *(_WORD *)(v3 + 68) = 0;
  *(_BYTE *)(v3 + 70) = 1;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 120) = 0x3000100010001;
  *(_WORD *)(v3 + 128) = 4;
  *(_OWORD *)(v3 + 132) = xmmword_2260F83A0;
  *(_DWORD *)(v3 + 148) = 1065353216;
  *(_DWORD *)(v3 + 152) = 16777473;
  *(_WORD *)(v3 + 156) = 1;
  *(_BYTE *)(v3 + 158) = 0;
  *(_WORD *)(v3 + 160) = 1;
  *(_QWORD *)v3 = &off_24ED59678;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50C50;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109240);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109240))
  {
    qword_254109238 = re::ecs2::introspect_PrimitiveBoxWithRoundedCornersComponent(0);
    __cxa_guard_release(&qword_254109240);
  }
  return qword_254109238;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50BE0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PrimitiveBoxWithRoundedCornersComponent::~PrimitiveBoxWithRoundedCornersComponent(re::ecs2::PrimitiveBoxWithRoundedCornersComponent *this)
{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED59710;
  v2 = (re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 72);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 96));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED59710;
  v2 = (re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 72);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveBoxWithRoundedCornersComponent *)((char *)this + 96));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

_QWORD *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,re::GeomBuildBoxWithRoundedCornersOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED59710;
  v2 = (re::AssetHandle *)(a1 + 9);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 12));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveBoxWithRoundedCornersComponent,re::GeomBuildBoxWithRoundedCornersOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED59710;
  v2 = (re::AssetHandle *)(a1 + 9);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 12));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50C50;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveBoxWithRoundedCornersComponent>,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveBoxWithRoundedCornersComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCapsuleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveCapsuleComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50D68;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109250);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109250))
  {
    qword_254109248 = re::ecs2::introspect_PrimitiveCapsuleComponent(0);
    __cxa_guard_release(&qword_254109250);
  }
  return qword_254109248;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveCapsuleComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50CF8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50D68;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCapsuleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCapsuleComponent>,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCapsuleComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveConeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 120, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveConeComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50E80;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109260);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109260))
  {
    qword_254109258 = re::ecs2::introspect_PrimitiveConeComponent(0);
    __cxa_guard_release(&qword_254109260);
  }
  return qword_254109258;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveConeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50E10;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50E80;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveConeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Slice<re::ecs2::PrimitiveConeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveConeComponent>,re::Slice<re::ecs2::PrimitiveConeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveConeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveCylinderComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 136, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveCylinderComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED50F98;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109270);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109270))
  {
    qword_254109268 = re::ecs2::introspect_PrimitiveCylinderComponent(0);
    __cxa_guard_release(&qword_254109270);
  }
  return qword_254109268;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveCylinderComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED50F28;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED50F98;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveCylinderComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Slice<re::ecs2::PrimitiveCylinderComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveCylinderComponent>,re::Slice<re::ecs2::PrimitiveCylinderComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveCylinderComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 144, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 28) = 65537;
  *(_WORD *)(v3 + 32) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 36) = result;
  *(_DWORD *)(v3 + 44) = 0;
  *(_WORD *)(v3 + 48) = 257;
  *(_DWORD *)(v3 + 52) = 2;
  *(_WORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 58) = 1;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_DWORD *)(v3 + 112) = 65537;
  *(_WORD *)(v3 + 116) = 0;
  *(double *)(v3 + 120) = result;
  *(_DWORD *)(v3 + 128) = 0;
  *(_WORD *)(v3 + 132) = 257;
  *(_DWORD *)(v3 + 136) = 2;
  *(_WORD *)(v3 + 140) = 1;
  *(_QWORD *)v3 = &off_24ED59760;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED510B0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109280);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109280))
  {
    qword_254109278 = re::ecs2::introspect_PrimitivePlaneComponent(0);
    __cxa_guard_release(&qword_254109280);
  }
  return qword_254109278;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitivePlaneComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51040;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PrimitivePlaneComponent::~PrimitivePlaneComponent(re::ecs2::PrimitivePlaneComponent *this)
{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED597F8;
  v2 = (re::ecs2::PrimitivePlaneComponent *)((char *)this + 64);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePlaneComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED597F8;
  v2 = (re::ecs2::PrimitivePlaneComponent *)((char *)this + 64);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePlaneComponent *)((char *)this + 88));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitivePlaneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

_QWORD *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePlaneComponent,re::GeomBuildPlaneOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED597F8;
  v2 = (re::AssetHandle *)(a1 + 8);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 11));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePlaneComponent,re::GeomBuildPlaneOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED597F8;
  v2 = (re::AssetHandle *)(a1 + 8);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 11));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED510B0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Slice<re::ecs2::PrimitivePlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePlaneComponent>,re::Slice<re::ecs2::PrimitivePlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePlaneComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 28) = 1;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v3 + 32) = result;
  *(_DWORD *)(v3 + 40) = 1065353216;
  *(_WORD *)(v3 + 44) = 257;
  *(_BYTE *)(v3 + 46) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 50) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_WORD *)(v3 + 104) = 1;
  *(double *)(v3 + 108) = result;
  *(_DWORD *)(v3 + 116) = 1065353216;
  *(_WORD *)(v3 + 120) = 257;
  *(_BYTE *)(v3 + 122) = 0;
  *(_WORD *)(v3 + 124) = 1;
  *(_QWORD *)v3 = &off_24ED59848;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED511C8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109290);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109290))
  {
    qword_254109288 = re::ecs2::introspect_PrimitivePyramidComponent(0);
    __cxa_guard_release(&qword_254109290);
  }
  return qword_254109288;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitivePyramidComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51158;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PrimitivePyramidComponent::~PrimitivePyramidComponent(re::ecs2::PrimitivePyramidComponent *this)
{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED598E0;
  v2 = (re::ecs2::PrimitivePyramidComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePyramidComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED598E0;
  v2 = (re::ecs2::PrimitivePyramidComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitivePyramidComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitivePyramidComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

_QWORD *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePyramidComponent,re::GeomBuildPyramidOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED598E0;
  v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitivePyramidComponent,re::GeomBuildPyramidOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED598E0;
  v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED511C8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitivePyramidComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Slice<re::ecs2::PrimitivePyramidComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitivePyramidComponent>,re::Slice<re::ecs2::PrimitivePyramidComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitivePyramidComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveSphereComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  return re::make::shared::inplace<re::ecs2::PrimitiveSphereComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED512E0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092A0))
  {
    qword_254109298 = re::ecs2::introspect_PrimitiveSphereComponent(0);
    __cxa_guard_release(&qword_2541092A0);
  }
  return qword_254109298;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveSphereComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51270;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED512E0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveSphereComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Slice<re::ecs2::PrimitiveSphereComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveSphereComponent>,re::Slice<re::ecs2::PrimitiveSphereComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveSphereComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 28) = 1;
  *(_DWORD *)(v3 + 32) = 1065353216;
  *(_WORD *)(v3 + 36) = 257;
  *(_BYTE *)(v3 + 38) = 0;
  *(_WORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 42) = 1;
  result = 0.0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_WORD *)(v3 + 96) = 1;
  *(_DWORD *)(v3 + 100) = 1065353216;
  *(_WORD *)(v3 + 104) = 257;
  *(_BYTE *)(v3 + 106) = 0;
  *(_WORD *)(v3 + 108) = 1;
  *(_QWORD *)v3 = &off_24ED59930;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED513F8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092B0))
  {
    qword_2541092A8 = re::ecs2::introspect_PrimitiveTetrahedronComponent(0);
    __cxa_guard_release(&qword_2541092B0);
  }
  return qword_2541092A8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveTetrahedronComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51388;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PrimitiveTetrahedronComponent::~PrimitiveTetrahedronComponent(re::ecs2::PrimitiveTetrahedronComponent *this)
{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED599C8;
  v2 = (re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 72));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED599C8;
  v2 = (re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 48);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTetrahedronComponent *)((char *)this + 72));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveTetrahedronComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

_QWORD *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTetrahedronComponent,re::GeomBuildTetrahedronOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED599C8;
  v2 = (re::AssetHandle *)(a1 + 6);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 9));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTetrahedronComponent,re::GeomBuildTetrahedronOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED599C8;
  v2 = (re::AssetHandle *)(a1 + 6);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 9));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED513F8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTetrahedronComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTetrahedronComponent>,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTetrahedronComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 28) = 65544;
  result = 0.00000190734908;
  *(_QWORD *)(v3 + 32) = 0x3EC000003F800000;
  *(_DWORD *)(v3 + 40) = 1056964608;
  *(_WORD *)(v3 + 44) = 257;
  *(_BYTE *)(v3 + 46) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 50) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_DWORD *)(v3 + 104) = 65544;
  *(_QWORD *)(v3 + 108) = 0x3EC000003F800000;
  *(_DWORD *)(v3 + 116) = 1056964608;
  *(_WORD *)(v3 + 120) = 257;
  *(_BYTE *)(v3 + 122) = 0;
  *(_WORD *)(v3 + 124) = 1;
  *(_QWORD *)v3 = &off_24ED59A18;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51510;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092C0))
  {
    qword_2541092B8 = re::ecs2::introspect_PrimitiveTubeComponent(0);
    __cxa_guard_release(&qword_2541092C0);
  }
  return qword_2541092B8;
}

__n128 re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PrimitiveTubeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED514A0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PrimitiveTubeComponent::~PrimitiveTubeComponent(re::ecs2::PrimitiveTubeComponent *this)
{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED59AB0;
  v2 = (re::ecs2::PrimitiveTubeComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTubeComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;

  *(_QWORD *)this = &off_24ED59AB0;
  v2 = (re::ecs2::PrimitiveTubeComponent *)((char *)this + 56);
  re::AssetHandle::~AssetHandle((re::ecs2::PrimitiveTubeComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PrimitiveTubeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

_QWORD *re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTubeComponent,re::GeomBuildTubeOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED59AB0;
  v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  return a1;
}

void re::ecs2::PrimitiveComponentBase<re::ecs2::PrimitiveTubeComponent,re::GeomBuildTubeOptions,(re::ecs2::ComponentTypeBase::Flags)2>::~PrimitiveComponentBase(_QWORD *a1)
{
  re::AssetHandle *v2;

  *a1 = &off_24ED59AB0;
  v2 = (re::AssetHandle *)(a1 + 7);
  re::AssetHandle::~AssetHandle((re::AssetHandle *)(a1 + 10));
  re::AssetHandle::~AssetHandle(v2);
  *a1 = &off_24ED426B8;
  objc_destructInstance(a1 + 1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51510;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PrimitiveTubeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Slice<re::ecs2::PrimitiveTubeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PrimitiveTubeComponent>,re::Slice<re::ecs2::PrimitiveTubeComponent*>>::Subscription const&,re::Slice<re::ecs2::PrimitiveTubeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayCastComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A080;
  result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_DWORD *)(v3 + 80) = 2;
  *(_DWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 100) = -1;
  *(_QWORD *)(v3 + 116) = 0;
  *(_QWORD *)(v3 + 108) = 0;
  *(_DWORD *)(v3 + 124) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51628;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092D0))
  {
    qword_2541092C8 = re::ecs2::introspect_RayCastComponent(0);
    __cxa_guard_release(&qword_2541092D0);
  }
  return qword_2541092C8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RayCastComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED515B8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::RayCastComponent::~RayCastComponent(re::ecs2::RayCastComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayCastComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51628;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Slice<re::ecs2::RayCastComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastComponent>,re::Slice<re::ecs2::RayCastComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType+ 7), 96, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58B40;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  objc_initWeak((id *)(v2 + 64), 0);
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 64));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51740;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092E0))
  {
    qword_2541092D8 = re::ecs2::introspect_RayCastResultComponent(0);
    __cxa_guard_release(&qword_2541092E0);
  }
  return qword_2541092D8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RayCastResultComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED516D0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::RayCastResultComponent::~RayCastResultComponent(id *this)
{
  id *v2;

  *this = &off_24ED58B40;
  v2 = this + 8;
  re::ecs2::EntityHandle::reset(this + 8);
  objc_destroyWeak(v2);
  this[8] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
}

{
  id *v2;

  *this = &off_24ED58B40;
  v2 = this + 8;
  re::ecs2::EntityHandle::reset(this + 8);
  objc_destroyWeak(v2);
  this[8] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayCastResultComponent,(re::ecs2::ComponentTypeBase::Flags)1>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51740;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayCastResultComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Slice<re::ecs2::RayCastResultComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayCastResultComponent>,re::Slice<re::ecs2::RayCastResultComponent*>>::Subscription const&,re::Slice<re::ecs2::RayCastResultComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)v3 = &off_24ED59D00;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51858;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541092F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541092F0))
  {
    qword_2541092E8 = re::ecs2::introspect_RayTracedShadowReceiverComponent(0);
    __cxa_guard_release(&qword_2541092F0);
  }
  return qword_2541092E8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RayTracedShadowReceiverComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED517E8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::RayTracedShadowReceiverComponent::~RayTracedShadowReceiverComponent(re::ecs2::RayTracedShadowReceiverComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RayTracedShadowReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51858;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RayTracedShadowReceiverComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RayTracedShadowReceiverComponent>,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>>::Subscription const&,re::Slice<re::ecs2::RayTracedShadowReceiverComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58238;
  *(_WORD *)(v3 + 25) = 0;
  *(_BYTE *)(v3 + 28) = 0;
  *(_BYTE *)(v3 + 30) = 0;
  *(_BYTE *)(v3 + 38) = 0;
  *(_BYTE *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 42) = 0;
  *(_BYTE *)(v3 + 44) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 36) = 0;
  *(_DWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 52) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51970;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109300);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109300))
  {
    qword_2541092F8 = re::ecs2::introspect_RenderOptionsComponent(0);
    __cxa_guard_release(&qword_254109300);
  }
  return qword_2541092F8;
}

__n128 re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RenderOptionsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51900;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::RenderOptionsComponent::~RenderOptionsComponent(re::ecs2::RenderOptionsComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 11;
}

void *re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::RenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51970;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Slice<re::ecs2::RenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RenderOptionsComponent>,re::Slice<re::ecs2::RenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::RenderOptionsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RigidBodyComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 400, 0);
  return re::make::shared::inplace<re::ecs2::RigidBodyComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51A88;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109310);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109310))
  {
    qword_254109308 = re::ecs2::introspect_RigidBodyComponent(0);
    __cxa_guard_release(&qword_254109310);
  }
  return qword_254109308;
}

__n128 re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RigidBodyComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51A18;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51A88;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigidBodyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Slice<re::ecs2::RigidBodyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigidBodyComponent>,re::Slice<re::ecs2::RigidBodyComponent*>>::Subscription const&,re::Slice<re::ecs2::RigidBodyComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59578;
  *(_QWORD *)&result = 0x300000001;
  *(_QWORD *)(v3 + 28) = 0x300000001;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51BA0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109320);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109320))
  {
    qword_254109318 = re::ecs2::introspect_PhysicsDebugComponent(0);
    __cxa_guard_release(&qword_254109320);
  }
  return qword_254109318;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PhysicsDebugComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51B30;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PhysicsDebugComponent::~PhysicsDebugComponent(re::ecs2::PhysicsDebugComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PhysicsDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51BA0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Slice<re::ecs2::PhysicsDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsDebugComponent>,re::Slice<re::ecs2::PhysicsDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsDebugComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::RigComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id re::ecs2::ComponentType<re::ecs2::RigComponent>::doMakeComponent@<X0>(ArcSharedObject **a1@<X8>)
{
  ArcSharedObject *v2;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::RigComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 496, 0);
  return re::make::shared::inplace<re::ecs2::RigComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51CB8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109330);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109330))
  {
    qword_254109328 = re::ecs2::introspect_RigComponent(0);
    __cxa_guard_release(&qword_254109330);
  }
  return qword_254109328;
}

__n128 re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::RigComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::RigComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51C48;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51CB8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::RigComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Slice<re::ecs2::RigComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::RigComponent>,re::Slice<re::ecs2::RigComponent*>>::Subscription const&,re::Slice<re::ecs2::RigComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 104, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_QWORD *)(v2 + 96) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56C88;
  result = 0.0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_BYTE *)(v3 + 96) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51DD0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109340);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109340))
  {
    qword_254109338 = re::ecs2::introspect_IKParametersComponent(0);
    __cxa_guard_release(&qword_254109340);
  }
  return qword_254109338;
}

__n128 re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::IKParametersComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51D60;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::IKParametersComponent::~IKParametersComponent(re::ecs2::IKParametersComponent *this)
{
  re::FixedArray<re::FullBodyIKSolver>::deinit((_QWORD *)this + 7);
  re::AssetHandle::~AssetHandle((re::ecs2::IKParametersComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::FixedArray<re::FullBodyIKSolver>::deinit((_QWORD *)this + 7);
  re::AssetHandle::~AssetHandle((re::ecs2::IKParametersComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::IKParametersComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51DD0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::IKParametersComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Slice<re::ecs2::IKParametersComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::IKParametersComponent>,re::Slice<re::ecs2::IKParametersComponent*>>::Subscription const&,re::Slice<re::ecs2::IKParametersComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::InputTargetComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = &off_24ED65AD8;
  *(_QWORD *)&result = 16843008;
  *(_DWORD *)(v3 + 24) = 16843008;
  *(_WORD *)(v3 + 28) = -256;
  *(_BYTE *)(v3 + 30) = 1;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED51EE8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109350);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109350))
  {
    qword_254109348 = re::ecs2::introspect_InputTargetComponent(0);
    __cxa_guard_release(&qword_254109350);
  }
  return qword_254109348;
}

__n128 re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::InputTargetComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51E78;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED51EE8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::InputTargetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Slice<re::ecs2::InputTargetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::InputTargetComponent>,re::Slice<re::ecs2::InputTargetComponent*>>::Subscription const&,re::Slice<re::ecs2::InputTargetComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _QWORD *result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 288, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = off_24ED59B80;
  *(_DWORD *)(v3 + 24) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity((_QWORD *)(v2 + 32), 0);
  *(_QWORD *)(v2 + 64) = 0x3F8000003F800000;
  *(_QWORD *)(v2 + 72) = 0x3F8000003F800000;
  *(_DWORD *)(v2 + 80) = 1084227584;
  *(_OWORD *)(v2 + 96) = xmmword_22610D480;
  *(_QWORD *)(v2 + 112) = 0x3CA3D70A3DCCCCCDLL;
  *(_WORD *)(v2 + 120) = 0;
  *(_OWORD *)(v2 + 128) = xmmword_2260E5F40;
  *(_OWORD *)(v2 + 144) = xmmword_226104350;
  *(_OWORD *)(v2 + 160) = xmmword_22610BC10;
  *(_QWORD *)(v2 + 176) = -1;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(_QWORD *)(v2 + 232) = 0;
  result = re::DynamicString::setCapacity((_QWORD *)(v2 + 208), 0);
  *(_QWORD *)(v2 + 272) = 0;
  *(_QWORD *)(v2 + 248) = 0;
  *(_QWORD *)(v2 + 256) = 0;
  *(_QWORD *)(v2 + 240) = 0;
  *(_DWORD *)(v2 + 264) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52000;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109360);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109360))
  {
    qword_254109358 = re::ecs2::introspect_SkeletalDebugComponent(0);
    __cxa_guard_release(&qword_254109360);
  }
  return qword_254109358;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SkeletalDebugComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED51F90;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SkeletalDebugComponent::~SkeletalDebugComponent(re::ecs2::SkeletalDebugComponent *this)
{
  uint64_t v2;
  uint64_t v3;

  re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240);
  v2 = *((_QWORD *)this + 26);
  if (v2)
  {
    if ((*((_BYTE *)this + 216) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 28));
    *((_OWORD *)this + 13) = 0u;
    *((_OWORD *)this + 14) = 0u;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkeletalDebugComponent *)((char *)this + 184));
  v3 = *((_QWORD *)this + 4);
  if (v3)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 40))(v3, *((_QWORD *)this + 6));
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  uint64_t v3;

  re::DynamicArray<re::DynamicArray<unsigned char>>::deinit((uint64_t)this + 240);
  v2 = *((_QWORD *)this + 26);
  if (v2)
  {
    if ((*((_BYTE *)this + 216) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 28));
    *((_OWORD *)this + 13) = 0u;
    *((_OWORD *)this + 14) = 0u;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkeletalDebugComponent *)((char *)this + 184));
  v3 = *((_QWORD *)this + 4);
  if (v3)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v3 + 40))(v3, *((_QWORD *)this + 6));
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkeletalDebugComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52000;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalDebugComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Slice<re::ecs2::SkeletalDebugComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalDebugComponent>,re::Slice<re::ecs2::SkeletalDebugComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalDebugComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  re *inited;
  uint64_t i;
  _QWORD *v5;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 624, 0);
  bzero(v2, 0x270uLL);
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  *v2 = &off_24ED5A858;
  inited = (re *)objc_initWeak((id *)v2 + 4, 0);
  v2[5] = 0;
  v2[9] = re::globalAllocators(inited)[2];
  *(_OWORD *)((char *)v2 + 108) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_DWORD *)v2 + 40) = 0;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  v2[21] = 0;
  v2[22] = 0xFFFFFFFFFFFFFFFLL;
  v2[23] = 0;
  v2[24] = 0;
  memset_pattern16(v2 + 25, &unk_22610D490, 0x40uLL);
  for (i = 0; i != 40; i += 5)
  {
    v5 = &v2[i];
    v5[37] = 0;
    v5[34] = 0;
    v5[35] = 0;
    v5[33] = 0;
    *((_DWORD *)v5 + 72) = 0;
  }
  v2[77] = 0;
  v2[74] = 0;
  v2[75] = 0;
  v2[73] = 0;
  *((_DWORD *)v2 + 152) = 0;
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52118;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109370);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109370))
  {
    qword_254109368 = re::ecs2::introspect_SkeletalPoseBufferComponent(0);
    __cxa_guard_release(&qword_254109370);
  }
  return qword_254109368;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SkeletalPoseBufferComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED520A8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SkeletalPoseBufferComponent::~SkeletalPoseBufferComponent(re::ecs2::SkeletalPoseBufferComponent *this)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24ED5A858;
  re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit((uint64_t)this + 584);
  v2 = 320;
  do
  {
    v3 = (char *)this + v2;
    v4 = *(_QWORD *)((char *)this + v2 + 224);
    if (v4)
    {
      if (*((_QWORD *)v3 + 32))
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
      *((_QWORD *)v3 + 32) = 0;
      *(_QWORD *)((char *)this + v2 + 232) = 0;
      *(_QWORD *)((char *)this + v2 + 240) = 0;
      *(_QWORD *)((char *)this + v2 + 224) = 0;
      ++*(_DWORD *)((char *)this + v2 + 248);
    }
    v2 -= 40;
  }
  while (v2);
  re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit((uint64_t)this + 136);
  v5 = *((_QWORD *)this + 12);
  if (v5)
  {
    if (*((_QWORD *)this + 16))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *((_QWORD *)this + 16) = 0;
    *((_QWORD *)this + 13) = 0;
    *((_QWORD *)this + 14) = 0;
    *((_QWORD *)this + 12) = 0;
    ++*((_DWORD *)this + 30);
  }
  re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr((id *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24ED5A858;
  re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit((uint64_t)this + 584);
  v2 = 320;
  while (1)
  {
    v3 = (char *)this + v2;
    v4 = *(_QWORD *)((char *)this + v2 + 224);
    if (v4)
    {
      if (*((_QWORD *)v3 + 32))
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
      *((_QWORD *)v3 + 32) = 0;
      *(_QWORD *)((char *)this + v2 + 232) = 0;
      *(_QWORD *)((char *)this + v2 + 240) = 0;
      *(_QWORD *)((char *)this + v2 + 224) = 0;
      ++*(_DWORD *)((char *)this + v2 + 248);
    }
    v2 -= 40;
    if (!v2)
    {
      re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit((uint64_t)this + 136);
      v5 = *((_QWORD *)this + 12);
      if (v5)
      {
        if (*((_QWORD *)this + 16))
          (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
        *((_QWORD *)this + 16) = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
        *((_QWORD *)this + 12) = 0;
        ++*((_DWORD *)this + 30);
      }
      re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr((id *)this + 4);
      *(_QWORD *)this = &off_24ED426B8;
      objc_destructInstance((char *)this + 8);
      JUMPOUT(0x2276933B8);
    }
  }
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseBufferComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

uint64_t re::DynamicArray<re::ecs2::SkeletalPoseBufferComponent::MeshBoundsEstimatorForJointRange>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = v4 << 7;
        v6 = (_QWORD *)(v3 + 64);
        do
        {
          v7 = v6[5];
          if (v7)
          {
            if (v6[6])
            {
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v7 + 40))(v7, v6[7]);
              v6[6] = 0;
              v6[7] = 0;
            }
            v6[5] = 0;
          }
          v8 = v6[1];
          if (v8)
          {
            if (v6[2])
            {
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v8 + 40))(v8, v6[3]);
              v6[2] = 0;
              v6[3] = 0;
            }
            v6[1] = 0;
          }
          v9 = *(v6 - 2);
          if (v9)
          {
            if (*(v6 - 1))
            {
              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v9 + 40))(v9, *v6);
              *(v6 - 1) = 0;
              *v6 = 0;
            }
            *(v6 - 2) = 0;
          }
          v10 = *(v6 - 7);
          if (v10)
          {
            if (*(v6 - 3))
              (*(void (**)(uint64_t))(*(_QWORD *)v10 + 40))(v10);
            *(v6 - 3) = 0;
            *(v6 - 6) = 0;
            *(v6 - 5) = 0;
            *(v6 - 7) = 0;
            ++*((_DWORD *)v6 - 8);
          }
          v6 += 16;
          v5 -= 128;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

uint64_t re::DynamicArray<re::ecs2::SkinnedMeshJointRange>::deinit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  result = *(_QWORD *)a1;
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (v4)
      {
        v5 = 56 * v4;
        v6 = (_QWORD *)(v3 + 48);
        do
        {
          v7 = *(v6 - 4);
          if (v7)
          {
            if (*v6)
              (*(void (**)(uint64_t))(*(_QWORD *)v7 + 40))(v7);
            *v6 = 0;
            *(v6 - 3) = 0;
            *(v6 - 2) = 0;
            *(v6 - 4) = 0;
            ++*((_DWORD *)v6 - 2);
          }
          v6 += 7;
          v5 -= 56;
        }
        while (v5);
        result = *(_QWORD *)a1;
        v3 = *(_QWORD *)(a1 + 32);
      }
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 40))(result, v3);
    }
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    ++*(_DWORD *)(a1 + 24);
  }
  return result;
}

id *re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::~FramePersistentPtr(id *a1)
{
  re *inited;
  id location;
  _QWORD v5[3];
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  inited = (re *)objc_initWeak(&location, 0);
  memset(v5, 0, sizeof(v5));
  v6 = re::globalAllocators(inited)[2];
  v7 = 0;
  re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(a1, &location, 0, (uint64_t)v5);
  if (v7)
  {
    (*(void (**)(_QWORD *))*v7)(v7);
    if (v7 != v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
  }
  objc_destroyWeak(&location);
  location = 0;
  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)(a1 + 2));
  objc_destroyWeak(a1);
  *a1 = 0;
  return a1;
}

uint64_t re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(id *location, id *a2, void *a3, uint64_t a4)
{
  _QWORD *WeakRetained;
  _QWORD *v9;
  re *v10;
  uint64_t *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  re *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (location[1])
  {
    WeakRetained = objc_loadWeakRetained(location);
    if (WeakRetained)
    {
      v9 = WeakRetained;

      if (!location[6])
      {
        v16 = re::globalAllocators(v10)[2];
        v18[0] = &off_24ED5A800;
        v19 = v16;
        v20 = (re *)v18;
        re::FunctionBase<24ul,void ()(void)>::operator=<24ul>((uint64_t)(location + 2), (uint64_t)v18);
        v10 = v20;
        if (v20)
        {
          v10 = (re *)(**(uint64_t (***)(re *))v20)(v20);
          if (v20 != (re *)v18)
            v10 = (re *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 40))(v19);
        }
      }
      v11 = re::globalAllocators(v10);
      v12 = v9[2] & 0xFFFFFFFFFFFFFFFLL | ((unint64_t)v9[1] << 60);
      v13 = location[1];
      v14 = re::PerFrameAllocatorManager::perFrameAllocator(v11[6], v12);
      (*(void (**)(uint64_t, id, id *))(*(_QWORD *)v14 + 16))(v14, v13, location + 2);
    }
    else
    {
      v15 = location[6];
      if (v15)
      {
        v18[0] = location[1];
        (*(void (**)(id, _QWORD *))(*(_QWORD *)v15 + 16))(v15, v18);
      }
      else
      {
        re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>((re *)"reset", 161, (uint64_t)location[1]);
      }
    }
  }
  re::ArcWeakPtr<re::VideoHistogram>::operator=(location, a2);
  location[1] = a3;
  return re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::operator=<24ul>((uint64_t)(location + 2), a4);
}

re *re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>(re *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;

  if (a3)
  {
    v4 = re::globalAllocators(result)[2];
    re::FixedArray<re::BufferSlice>::deinit((_QWORD *)(a3 + 24));
    v5 = *(void **)(a3 + 16);
    if (v5)
    {

      *(_QWORD *)(a3 + 16) = 0;
    }
    return (re *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 40))(v4, a3);
  }
  return result;
}

void re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::~Callable()
{
  JUMPOUT(0x2276933B8);
}

re *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::operator()(uint64_t a1, uint64_t *a2)
{
  return re::internal::destroyPersistent<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs>((re *)"operator()", 149, *a2);
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::cloneInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED5A800;
  return result;
}

_QWORD *re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::moveInto(uint64_t a1, _QWORD *a2)
{
  _QWORD *result;

  result = a2;
  *a2 = &off_24ED5A800;
  return result;
}

uint64_t re::internal::Callable<re::FramePersistentPtr<re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs,re::FrameManager>::reset(re::ArcWeakPtr<re::FrameManager>,re::ecs2::SkeletalPoseBufferComponent::SkeletalPoseBufferInputs*,re::Function<void ()(void *)> &&)::{lambda(void *)#1},void ()(void *)>::size()
{
  return 16;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52118;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseBufferComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseBufferComponent>,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseBufferComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;

  v2 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                       + 7)
                                                                    + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkeletalPoseComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 3952, 0);
  return re::make::shared::inplace<re::ecs2::SkeletalPoseComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52230;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__guard re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __guard *v1;
  int v3;

  if ((v0 & 1) == 0)
  {
    if (v3)
    {
      re::introspect<re::ecs2::SkeletalPoseComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_SkeletalPoseComponent(0);
    }
  }
  return v1[460];
}

__n128 re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SkeletalPoseComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED521C0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52230;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkeletalPoseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Slice<re::ecs2::SkeletalPoseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkeletalPoseComponent>,re::Slice<re::ecs2::SkeletalPoseComponent*>>::Subscription const&,re::Slice<re::ecs2::SkeletalPoseComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;

  if (!a3)
    return 0;
  re::ecs2::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderRaw>>((unsigned int *)a2, a3);
  v4 = *(_QWORD *)(a2 + 40);
  if ((v4 & 1) != 0)
    v5 = v4 >> 1;
  else
    v5 = v4 >> 1;
  return v5 == 0;
}

BOOL ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_2(int a1, re::snapshot::EncoderOPACK *this, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;

  if (!a3)
    return 0;
  re::snapshot::EncoderOPACK::beginObject((unsigned int *)this);
  re::ecs2::snapshotMapFields<re::snapshot::Writer<re::snapshot::EncoderOPACK>>(this, a3);
  re::snapshot::EncoderOPACK::endObject((unsigned int *)this);
  v5 = *((_QWORD *)this + 5);
  if ((v5 & 1) != 0)
    v6 = v5 >> 1;
  else
    v6 = v5 >> 1;
  return v6 == 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (!a3)
    return 0;
  re::ecs2::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderRaw>>(a2, a3);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 != *(_QWORD *)(a2 + 24))
    re::snapshot::Decoder::error((const char **)a2, "failed to consume input: %zu vs %zu", v4 - *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if (!*(_BYTE *)(a2 + 36))
    return 1;
  re::snapshot::Decoder::logInput((re::snapshot::Decoder *)a2);
  return 0;
}

uint64_t ___ZN2re8snapshot8Registry3addINS_4ecs221SkeletalPoseComponentEEEPKNS1_5EntryEv_block_invoke_4(int a1, re::snapshot::DecoderOPACK *this, uint64_t a3)
{
  uint64_t v5;

  if (!a3)
    return 0;
  if (re::snapshot::DecoderOPACK::beginObject(this, 0))
  {
    re::ecs2::snapshotMapFields<re::snapshot::Reader<re::snapshot::DecoderOPACK>>((uint64_t)this, a3);
    re::snapshot::DecoderOPACK::endObject((uint64_t *)this, 0);
  }
  v5 = *((_QWORD *)this + 2);
  if (v5 != *((_QWORD *)this + 3))
    re::snapshot::Decoder::error((const char **)this, "failed to consume input: %zu vs %zu", v5 - *(_QWORD *)this, *((_QWORD *)this + 1));
  if (!*((_BYTE *)this + 36))
    return 1;
  re::snapshot::Decoder::logInput(this);
  return 0;
}

double re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 64, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57708;
  result = 0.0;
  *(_OWORD *)(v3 + 28) = 0u;
  *(_OWORD *)(v3 + 44) = 0u;
  *(_DWORD *)(v3 + 60) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52448;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109388);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109388))
  {
    qword_254109380 = re::ecs2::introspect_SkyboxComponent(0);
    __cxa_guard_release(&qword_254109388);
  }
  return qword_254109380;
}

__n128 re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SkyboxComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED523D8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SkyboxComponent::~SkyboxComponent(re::ecs2::SkyboxComponent *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 7);
  if (v2)
  {

    *((_QWORD *)this + 7) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkyboxComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;

  v2 = *((_QWORD *)this + 7);
  if (v2)
  {

    *((_QWORD *)this + 7) = 0;
  }
  re::AssetHandle::~AssetHandle((re::ecs2::SkyboxComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SkyboxComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52448;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SkyboxComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Slice<re::ecs2::SkyboxComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SkyboxComponent>,re::Slice<re::ecs2::SkyboxComponent*>>::Subscription const&,re::Slice<re::ecs2::SkyboxComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  _OWORD *v3;
  uint64_t v4;
  double result;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 480, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *((_OWORD *)v2 + 24) = 0u;
  *((_OWORD *)v2 + 25) = 0u;
  *((_OWORD *)v2 + 26) = 0u;
  *((_OWORD *)v2 + 27) = 0u;
  *((_OWORD *)v2 + 28) = 0u;
  *((_OWORD *)v2 + 29) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  v3 = (_OWORD *)((char *)v2 + 176);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)v4 = &off_24ED59498;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = &off_24ED59518;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 132) = 0u;
  *(_QWORD *)(v4 + 148) = 0x7FFFFFFFLL;
  *(_QWORD *)(v4 + 160) = 0;
  *(_BYTE *)(v4 + 168) = 0;
  *(_QWORD *)v3 = &off_24ED59548;
  *(_OWORD *)(v4 + 184) = 0u;
  *(_OWORD *)(v4 + 200) = 0u;
  *(_DWORD *)(v4 + 216) = 0;
  *(_QWORD *)(v4 + 220) = 0x7FFFFFFFLL;
  *(_DWORD *)(v4 + 264) = 0;
  *(_OWORD *)(v4 + 248) = 0u;
  *(_OWORD *)(v4 + 232) = 0u;
  *(_QWORD *)((char *)v3 + 92) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)v3 + 104) = 0u;
  *(_OWORD *)((char *)v3 + 120) = 0u;
  *(_DWORD *)(v4 + 312) = 0;
  *(_QWORD *)((char *)v3 + 140) = 0x7FFFFFFFLL;
  *(_OWORD *)((char *)v3 + 152) = 0u;
  *(_OWORD *)((char *)v3 + 168) = 0u;
  result = 0.0;
  *(_DWORD *)(v4 + 360) = 0;
  *(_QWORD *)((char *)v3 + 188) = 0x7FFFFFFFLL;
  *(_QWORD *)(v4 + 408) = 0;
  *(_QWORD *)(v4 + 384) = 0;
  *(_QWORD *)(v4 + 392) = 0;
  *(_DWORD *)(v4 + 400) = 0;
  *(_QWORD *)(v4 + 376) = 0;
  *(_DWORD *)(v4 + 416) = 0;
  *(_QWORD *)(v4 + 472) = 0;
  *(_OWORD *)(v4 + 452) = 0u;
  *(_OWORD *)(v4 + 424) = 0u;
  *(_OWORD *)(v4 + 440) = 0u;
  *a1 = v4;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52560;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109398);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109398))
  {
    qword_254109390 = re::ecs2::introspect_StateMachineComponent(0);
    __cxa_guard_release(&qword_254109398);
  }
  return qword_254109390;
}

__n128 re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::StateMachineComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED524F0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::StateMachineComponent::~StateMachineComponent(re::ecs2::StateMachineComponent *this)
{
  re::AssetHandle *v2;
  char *v3;

  *(_QWORD *)this = &off_24ED59498;
  v2 = (re::ecs2::StateMachineComponent *)((char *)this + 32);
  v3 = (char *)this + 440;
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)this + 440);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v3);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::StateParameterBlackboard::~StateParameterBlackboard((re::ecs2::StateMachineComponent *)((char *)this + 176));
  re::ecs2::LayeredStateMachine::~LayeredStateMachine((re::ecs2::StateMachineComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::StateMachineComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle *v2;
  char *v3;

  *(_QWORD *)this = &off_24ED59498;
  v2 = (re::ecs2::StateMachineComponent *)((char *)this + 32);
  v3 = (char *)this + 440;
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)this + 440);
  re::DynamicArray<re::BindPoint::BindPointData>::deinit((uint64_t)v3);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::DynamicArray<re::RigGraphNodeInputParameter>::deinit((uint64_t)this + 376);
  re::StateParameterBlackboard::~StateParameterBlackboard((re::ecs2::StateMachineComponent *)((char *)this + 176));
  re::ecs2::LayeredStateMachine::~LayeredStateMachine((re::ecs2::StateMachineComponent *)((char *)this + 80));
  re::AssetHandle::~AssetHandle((re::ecs2::StateMachineComponent *)((char *)this + 56));
  re::AssetHandle::~AssetHandle(v2);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::StateMachineComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::LayeredStateMachine::~LayeredStateMachine(re::ecs2::LayeredStateMachine *this)
{
  re::ecs2::LayeredStateMachine::~LayeredStateMachine(this);
  JUMPOUT(0x2276933B8);
}

{
  double v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24ED59518;
  re::ecs2::LayeredStateMachine::deinit((uint64_t **)this);
  v2 = re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 4);
  v3 = *((_QWORD *)this + 1);
  if (v3)
  {
    if (*((_QWORD *)this + 2))
    {
      (*(void (**)(uint64_t, _QWORD, double))(*(_QWORD *)v3 + 40))(v3, *((_QWORD *)this + 3), v2);
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
    }
    *((_QWORD *)this + 1) = 0;
  }
}

void re::StateParameterBlackboard::~StateParameterBlackboard(re::StateParameterBlackboard *this)
{
  re::StateParameterBlackboard::~StateParameterBlackboard(this);
  JUMPOUT(0x2276933B8);
}

{
  uint64_t *v2;

  *(_QWORD *)this = &off_24ED59548;
  v2 = (uint64_t *)((char *)this + 8);
  re::StateParameterBlackboard::deinit(this);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 19);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 13);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit((uint64_t *)this + 7);
  re::HashTable<re::StringID,re::DataArrayHandle<re::RigGraphOperatorDefinition>,re::Hash<re::StringID>,re::EqualTo<re::StringID>,false,false>::deinit(v2);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52560;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StateMachineComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Slice<re::ecs2::StateMachineComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StateMachineComponent>,re::Slice<re::ecs2::StateMachineComponent*>>::Subscription const&,re::Slice<re::ecs2::StateMachineComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doMakeComponent@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 160, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = off_24ED59E00;
  *(_DWORD *)(v3 + 28) = 0;
  *(_BYTE *)(v3 + 32) = 0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  v4 = (_QWORD *)(v3 + 40);
  re::DynamicString::setCapacity(v4, 0);
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  result = *(double *)&re::kInvalidStringRenderHandle;
  *(_OWORD *)(v2 + 96) = re::kInvalidStringRenderHandle;
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 128) = 0x3F8000003F800000;
  *(_QWORD *)(v2 + 136) = 0x3F8000003F800000;
  *(_BYTE *)(v2 + 144) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52678;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093A8))
  {
    qword_2541093A0 = re::ecs2::introspect_StaticTextComponent(0);
    __cxa_guard_release(&qword_2541093A8);
  }
  return qword_2541093A0;
}

__n128 re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::StaticTextComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52608;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::StaticTextComponent::~StaticTextComponent(re::ecs2::StaticTextComponent *this)
{
  uint64_t v2;

  re::AssetHandle::~AssetHandle((re::ecs2::StaticTextComponent *)((char *)this + 72));
  v2 = *((_QWORD *)this + 5);
  if (v2)
  {
    if ((*((_BYTE *)this + 48) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 7));
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;

  re::AssetHandle::~AssetHandle((re::ecs2::StaticTextComponent *)((char *)this + 72));
  v2 = *((_QWORD *)this + 5);
  if (v2)
  {
    if ((*((_BYTE *)this + 48) & 1) != 0)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 40))(v2, *((_QWORD *)this + 7));
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::StaticTextComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52678;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::StaticTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Slice<re::ecs2::StaticTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::StaticTextComponent>,re::Slice<re::ecs2::StaticTextComponent*>>::Subscription const&,re::Slice<re::ecs2::StaticTextComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::Static3DTextComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 288, 0);
  return re::make::shared::inplace<re::ecs2::Static3DTextComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52790;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093B8))
  {
    qword_2541093B0 = re::ecs2::introspect_Static3DTextComponent(0);
    __cxa_guard_release(&qword_2541093B8);
  }
  return qword_2541093B0;
}

__n128 re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::Static3DTextComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52720;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52790;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::Static3DTextComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Slice<re::ecs2::Static3DTextComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::Static3DTextComponent>,re::Slice<re::ecs2::Static3DTextComponent*>>::Subscription const&,re::Slice<re::ecs2::Static3DTextComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57608;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED528A8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093C8))
  {
    qword_2541093C0 = re::ecs2::introspect_SubsceneComponent(0);
    __cxa_guard_release(&qword_2541093C8);
  }
  return qword_2541093C0;
}

__n128 re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SubsceneComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52838;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SubsceneComponent::~SubsceneComponent(re::ecs2::SubsceneComponent *this)
{
  re::AssetHandle::~AssetHandle((re::ecs2::SubsceneComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::AssetHandle::~AssetHandle((re::ecs2::SubsceneComponent *)((char *)this + 32));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SubsceneComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED528A8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SubsceneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Slice<re::ecs2::SubsceneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SubsceneComponent>,re::Slice<re::ecs2::SubsceneComponent*>>::Subscription const&,re::Slice<re::ecs2::SubsceneComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::TransformComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::TransformComponent *re::ecs2::ComponentType<re::ecs2::TransformComponent>::doMakeComponent@<X0>(re::ecs2::TransformComponent **a1@<X8>)
{
  re::ecs2::TransformComponent *v2;
  re::ecs2::TransformComponent *result;

  v2 = (re::ecs2::TransformComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                             + 7)
                                                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::TransformComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 208, 0);
  result = re::ecs2::TransformComponent::TransformComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED529C0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__guard re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __guard *v1;
  int v3;

  if ((v0 & 1) == 0)
  {
    if (v3)
    {
      re::introspect<re::ecs2::TransformComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_TransformComponent(0);
    }
  }
  return v1[377];
}

__n128 re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TransformComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::TransformComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52950;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED529C0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TransformComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Slice<re::ecs2::TransformComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TransformComponent>,re::Slice<re::ecs2::TransformComponent*>>::Subscription const&,re::Slice<re::ecs2::TransformComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::UISortingComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

int32x4_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  int32x4_t result;
  __int128 v5;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 112, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED595F8;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  result = vdupq_n_s32(0x7F800000u);
  *(_QWORD *)&v5 = 0x7F0000007FLL;
  *((_QWORD *)&v5 + 1) = 0x7F0000007FLL;
  *(int32x4_t *)(v3 + 48) = result;
  *(_OWORD *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 80) = 1;
  *(_QWORD *)(v3 + 84) = 0;
  *(_QWORD *)(v3 + 89) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52AD8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093D8))
  {
    qword_2541093D0 = re::ecs2::introspect_UISortingComponent(0);
    __cxa_guard_release(&qword_2541093D8);
  }
  return qword_2541093D0;
}

__n128 re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::UISortingComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::UISortingComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52A68;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::UISortingComponent::~UISortingComponent(re::ecs2::UISortingComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::UISortingComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52AD8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::UISortingComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Slice<re::ecs2::UISortingComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::UISortingComponent>,re::Slice<re::ecs2::UISortingComponent*>>::Subscription const&,re::Slice<re::ecs2::UISortingComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VideoComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  re::ecs2::VideoComponent *v2;
  uint64_t v3;

  v2 = (re::ecs2::VideoComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                         + 7)
                                                                                      + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VideoComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 288, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  re::ecs2::VideoComponent::VideoComponent(v2);
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52BF0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093E8))
  {
    qword_2541093E0 = re::ecs2::introspect_VideoComponent(0);
    __cxa_guard_release(&qword_2541093E8);
  }
  return qword_2541093E0;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VideoComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52B80;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

double re::ecs2::VideoComponent::VideoComponent(re::ecs2::VideoComponent *this)
{
  uint64_t v1;
  double result;

  ArcSharedObject::ArcSharedObject(this, 0);
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 0;
  *(_QWORD *)v1 = &off_24ED6DFD0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 56) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_WORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_DWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_DWORD *)(v1 + 200) = -1;
  *(_WORD *)(v1 + 204) = 0;
  *(_WORD *)(v1 + 207) = 0;
  *(_DWORD *)(v1 + 212) = 0;
  *(_WORD *)(v1 + 216) = 0;
  *(_OWORD *)(v1 + 224) = re::ecs2::kDefaultVideoUVParams;
  *(_OWORD *)(v1 + 240) = unk_2261115D8;
  *(_QWORD *)(v1 + 256) = 0;
  *(_QWORD *)(v1 + 264) = 0;
  __asm { FMOV            V0.2S, #1.0 }
  *(double *)(v1 + 272) = result;
  *(_DWORD *)(v1 + 280) = 1065353216;
  *(_WORD *)(v1 + 284) = 0;
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52BF0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Slice<re::ecs2::VideoComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoComponent>,re::Slice<re::ecs2::VideoComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 160, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED708D0;
  *(_BYTE *)(v3 + 80) = 0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 60) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_QWORD *)(v3 + 136) = 0;
  result = re::DynamicString::setCapacity((_QWORD *)(v2 + 112), 0);
  *(_BYTE *)(v2 + 144) = 1;
  *(_DWORD *)(v2 + 148) = 1055286886;
  *(_BYTE *)(v2 + 152) = 0;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52D08;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541093F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541093F8))
  {
    qword_2541093F0 = re::ecs2::introspect_VideoPlayerComponent(0);
    __cxa_guard_release(&qword_2541093F8);
  }
  return qword_2541093F0;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VideoPlayerComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52C98;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52D08;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Slice<re::ecs2::VideoPlayerComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerComponent>,re::Slice<re::ecs2::VideoPlayerComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 192, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59D80;
  *(_DWORD *)(v3 + 28) = -1082130432;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_WORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = -1;
  *(_QWORD *)(v3 + 96) = 0;
  *(_BYTE *)(v3 + 104) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_QWORD *)(v3 + 152) = 0;
  *(_BYTE *)(v3 + 160) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 128) = 0;
  *(_BYTE *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 168) = 0;
  *(_QWORD *)(v3 + 176) = -1;
  *(_QWORD *)(v3 + 184) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52E20;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109408);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109408))
  {
    qword_254109400 = re::ecs2::introspect_VideoPlayerStatusComponent(0);
    __cxa_guard_release(&qword_254109408);
  }
  return qword_254109400;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VideoPlayerStatusComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52DB0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::VideoPlayerStatusComponent::~VideoPlayerStatusComponent(re::ecs2::VideoPlayerStatusComponent *this)
{
  *(_QWORD *)this = &off_24ED59D80;
  re::AssetHandle::~AssetHandle((re::ecs2::VideoPlayerStatusComponent *)((char *)this + 112));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED59D80;
  re::AssetHandle::~AssetHandle((re::ecs2::VideoPlayerStatusComponent *)((char *)this + 112));
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VideoPlayerStatusComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52E20;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoPlayerStatusComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Slice<re::ecs2::VideoPlayerStatusComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoPlayerStatusComponent>,re::Slice<re::ecs2::VideoPlayerStatusComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoPlayerStatusComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::VideoProxyComponent *re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doMakeComponent@<X0>(re::ecs2::VideoProxyComponent **a1@<X8>)
{
  re::ecs2::VideoProxyComponent *v2;
  re::ecs2::VideoProxyComponent *result;

  v2 = (re::ecs2::VideoProxyComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                              + 7)
                                                                                           + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VideoProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 64, 0);
  result = re::ecs2::VideoProxyComponent::VideoProxyComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED52F38;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109418);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109418))
  {
    qword_254109410 = re::ecs2::introspect_VideoProxyComponent(0);
    __cxa_guard_release(&qword_254109418);
  }
  return qword_254109410;
}

__n128 re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VideoProxyComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52EC8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED52F38;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VideoProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Slice<re::ecs2::VideoProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VideoProxyComponent>,re::Slice<re::ecs2::VideoProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VideoProxyComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56D08;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53050;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109428);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109428))
  {
    qword_254109420 = re::ecs2::introspect_SceneUnderstandingRootComponent(0);
    __cxa_guard_release(&qword_254109428);
  }
  return qword_254109420;
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRootComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED52FE0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneUnderstandingRootComponent::~SceneUnderstandingRootComponent(re::ecs2::SceneUnderstandingRootComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRootComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53050;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRootComponent>,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRootComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56D88;
  *(_DWORD *)(v3 + 25) = 0;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53168;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109438);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109438))
  {
    qword_254109430 = re::ecs2::introspect_SceneUnderstandingRenderOptionsComponent(0);
    __cxa_guard_release(&qword_254109438);
  }
  return qword_254109430;
}

__n128 re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED530F8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneUnderstandingRenderOptionsComponent::~SceneUnderstandingRenderOptionsComponent(re::ecs2::SceneUnderstandingRenderOptionsComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::SceneUnderstandingRenderOptionsComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53168;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SceneUnderstandingRenderOptionsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SceneUnderstandingRenderOptionsComponent>,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>>::Subscription const&,re::Slice<re::ecs2::SceneUnderstandingRenderOptionsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::SpatialSceneClassificationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 48, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED685A8;
  *(_QWORD *)(v3 + 33) = 0;
  *(_QWORD *)(v3 + 25) = 0;
  *(_DWORD *)(v3 + 40) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53280;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109448);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109448))
  {
    qword_254109440 = re::ecs2::introspect_SpatialSceneClassificationComponent(0);
    __cxa_guard_release(&qword_254109448);
  }
  return qword_254109440;
}

__n128 re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::SpatialSceneClassificationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53210;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53280;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::SpatialSceneClassificationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::SpatialSceneClassificationComponent>,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>>::Subscription const&,re::Slice<re::ecs2::SpatialSceneClassificationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VoiceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

re::ecs2::VoiceComponent *re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doMakeComponent@<X0>(re::ecs2::VoiceComponent **a1@<X8>)
{
  re::ecs2::VoiceComponent *v2;
  re::ecs2::VoiceComponent *result;

  v2 = (re::ecs2::VoiceComponent *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                         + 7)
                                                                                      + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VoiceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 1152, 0);
  result = re::ecs2::VoiceComponent::VoiceComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53398;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109458);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109458))
  {
    qword_254109450 = re::ecs2::introspect_VoiceComponent(0);
    __cxa_guard_release(&qword_254109458);
  }
  return qword_254109450;
}

__n128 re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VoiceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VoiceComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53328;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53398;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VoiceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Slice<re::ecs2::VoiceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VoiceComponent>,re::Slice<re::ecs2::VoiceComponent*>>::Subscription const&,re::Slice<re::ecs2::VoiceComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::GroundPlaneComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED44198;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED534B0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109468);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109468))
  {
    qword_254109460 = re::ecs2::introspect_GroundPlaneComponent(0);
    __cxa_guard_release(&qword_254109468);
  }
  return qword_254109460;
}

__n128 re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::GroundPlaneComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53440;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED534B0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::GroundPlaneComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Slice<re::ecs2::GroundPlaneComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::GroundPlaneComponent>,re::Slice<re::ecs2::GroundPlaneComponent*>>::Subscription const&,re::Slice<re::ecs2::GroundPlaneComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PinComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PinComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PinComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 72, 0);
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED6A548;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED535C8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109478);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109478))
  {
    qword_254109470 = re::ecs2::introspect_PinComponent(0);
    __cxa_guard_release(&qword_254109478);
  }
  return qword_254109470;
}

__n128 re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PinComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PinComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53558;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED535C8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PinComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Slice<re::ecs2::PinComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PinComponent>,re::Slice<re::ecs2::PinComponent*>>::Subscription const&,re::Slice<re::ecs2::PinComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

id *re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doMakeComponent@<X0>(id **a1@<X8>)
{
  id *v2;
  id *result;

  v2 = (id *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                   + 7)
                                                                + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PhysicsConstraintsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 136, 0);
  result = re::ecs2::PhysicsConstraintsComponent::PhysicsConstraintsComponent(v2);
  *a1 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED536E0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109488);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109488))
  {
    qword_254109480 = re::ecs2::introspect_PhysicsConstraintsComponent(0);
    __cxa_guard_release(&qword_254109488);
  }
  return qword_254109480;
}

__n128 re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PhysicsConstraintsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53670;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED536E0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PhysicsConstraintsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Slice<re::ecs2::PhysicsConstraintsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PhysicsConstraintsComponent>,re::Slice<re::ecs2::PhysicsConstraintsComponent*>>::Subscription const&,re::Slice<re::ecs2::PhysicsConstraintsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PortalComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PortalComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57408;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (id *)(v3 + 40);
  objc_initWeak((id *)(v3 + 40), 0);
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  re::ecs2::EntityHandle::reset(v4);
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = xmmword_2260E5F40;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = xmmword_2260E5F40;
  *(_DWORD *)(v2 + 128) = 0x1000000;
  *(_QWORD *)(v2 + 136) = 0;
  objc_initWeak((id *)(v2 + 144), 0);
  *(_QWORD *)(v2 + 152) = 0;
  *(_QWORD *)(v2 + 160) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 144));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED537F8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109498);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109498))
  {
    qword_254109490 = re::ecs2::introspect_PortalComponent(0);
    __cxa_guard_release(&qword_254109498);
  }
  return qword_254109490;
}

__n128 re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PortalComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53788;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PortalComponent::~PortalComponent(id *this)
{
  id *v2;

  v2 = this + 18;
  re::ecs2::EntityHandle::reset(this + 18);
  objc_destroyWeak(v2);
  this[18] = 0;
  re::ecs2::EntityHandle::reset(this + 5);
  objc_destroyWeak(this + 5);
  this[5] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
}

{
  id *v2;

  v2 = this + 18;
  re::ecs2::EntityHandle::reset(this + 18);
  objc_destroyWeak(v2);
  this[18] = 0;
  re::ecs2::EntityHandle::reset(this + 5);
  objc_destroyWeak(this + 5);
  this[5] = 0;
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return 10;
}

void *re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PortalComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED537F8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Slice<re::ecs2::PortalComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalComponent>,re::Slice<re::ecs2::PortalComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57388;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53910;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094A8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094A8))
  {
    qword_2541094A0 = re::ecs2::introspect_WorldScopeComponent(0);
    __cxa_guard_release(&qword_2541094A8);
  }
  return qword_2541094A0;
}

__n128 re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::WorldScopeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED538A0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::WorldScopeComponent::~WorldScopeComponent(re::ecs2::WorldScopeComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::WorldScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53910;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Slice<re::ecs2::WorldScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldScopeComponent>,re::Slice<re::ecs2::WorldScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldScopeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 56, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57288;
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  *(_QWORD *)(v3 + 48) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53A28;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094B8))
  {
    qword_2541094B0 = re::ecs2::introspect_WorldRootComponent(0);
    __cxa_guard_release(&qword_2541094B8);
  }
  return qword_2541094B0;
}

__n128 re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::WorldRootComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED539B8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::WorldRootComponent::~WorldRootComponent(re::ecs2::WorldRootComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::WorldRootComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53A28;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::WorldRootComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Slice<re::ecs2::WorldRootComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::WorldRootComponent>,re::Slice<re::ecs2::WorldRootComponent*>>::Subscription const&,re::Slice<re::ecs2::WorldRootComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED56C08;
  *(_WORD *)(v3 + 25) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53B40;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094C8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094C8))
  {
    qword_2541094C0 = re::ecs2::introspect_PortalCrossingFlagsComponent(0);
    __cxa_guard_release(&qword_2541094C8);
  }
  return qword_2541094C0;
}

__n128 re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::PortalCrossingFlagsComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53AD0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::PortalCrossingFlagsComponent::~PortalCrossingFlagsComponent(re::ecs2::PortalCrossingFlagsComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::PortalCrossingFlagsComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53B40;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::PortalCrossingFlagsComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::PortalCrossingFlagsComponent>,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>>::Subscription const&,re::Slice<re::ecs2::PortalCrossingFlagsComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doMakeComponent@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VertexCacheComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 248, 0);
  return re::make::shared::inplace<re::ecs2::VertexCacheComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53C58;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094D8))
  {
    qword_2541094D0 = re::ecs2::introspect_VertexCacheComponent(0);
    __cxa_guard_release(&qword_2541094D8);
  }
  return qword_2541094D0;
}

__n128 re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VertexCacheComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53BE8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53C58;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VertexCacheComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Slice<re::ecs2::VertexCacheComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VertexCacheComponent>,re::Slice<re::ecs2::VertexCacheComponent*>>::Subscription const&,re::Slice<re::ecs2::VertexCacheComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

uint64_t *re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doMakeComponent@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 192, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59040;
  *(_WORD *)(v3 + 32) = 256;
  *(_BYTE *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 56) = 0x20000000200;
  *(_DWORD *)(v3 + 64) = 71;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_DWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 124) = 0x7FFFFFFFLL;
  result = re::globalAllocators((re *)v3);
  *(_QWORD *)(v2 + 160) = result[2];
  *(_QWORD *)(v2 + 168) = 0;
  *(_QWORD *)(v2 + 176) = 0;
  *(_DWORD *)(v2 + 184) = -1;
  *a1 = v2;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53D70;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094E8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094E8))
  {
    qword_2541094E0 = re::ecs2::introspect_VisualProxyCaptureComponent(0);
    __cxa_guard_release(&qword_2541094E8);
  }
  return qword_2541094E0;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VisualProxyCaptureComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53D00;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::VisualProxyCaptureComponent::~VisualProxyCaptureComponent(re::ecs2::VisualProxyCaptureComponent *this)
{
  const void *v2;
  void *v3;

  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)this + 136);
  re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)this + 11);
  v2 = (const void *)*((_QWORD *)this + 10);
  if (v2)
    CFRelease(v2);
  v3 = (void *)*((_QWORD *)this + 9);
  if (v3)
  {

    *((_QWORD *)this + 9) = 0;
  }
  if (*((_BYTE *)this + 40))
  {
    objc_destroyWeak((id *)this + 6);
    *((_QWORD *)this + 6) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  const void *v2;
  void *v3;

  re::FunctionBase<24ul,REEventHandlerResult ()(re::ecs2::Scene *,RESceneDidAddEvent const&)>::destroyCallable((uint64_t)this + 136);
  re::HashSetBase<re::RigGraphSystem::BuildTask *,re::RigGraphSystem::BuildTask *,re::internal::ValueAsKey<re::RigGraphSystem::BuildTask *>,re::Hash<re::RigGraphSystem::BuildTask *>,re::EqualTo<re::RigGraphSystem::BuildTask *>,true,false>::deinit((uint64_t *)this + 11);
  v2 = (const void *)*((_QWORD *)this + 10);
  if (v2)
    CFRelease(v2);
  v3 = (void *)*((_QWORD *)this + 9);
  if (v3)
  {

    *((_QWORD *)this + 9) = 0;
  }
  if (*((_BYTE *)this + 40))
  {
    objc_destroyWeak((id *)this + 6);
    *((_QWORD *)this + 6) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyCaptureComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53D70;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyCaptureComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Slice<re::ecs2::VisualProxyCaptureComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyCaptureComponent>,re::Slice<re::ecs2::VisualProxyCaptureComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyCaptureComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A380;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53E88;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2541094F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2541094F8))
  {
    qword_2541094F0 = re::ecs2::introspect_VisualProxyScopeComponent(0);
    __cxa_guard_release(&qword_2541094F8);
  }
  return qword_2541094F0;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VisualProxyScopeComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53E18;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::VisualProxyScopeComponent::~VisualProxyScopeComponent(re::ecs2::VisualProxyScopeComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53E88;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Slice<re::ecs2::VisualProxyScopeComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeComponent>,re::Slice<re::ecs2::VisualProxyScopeComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_WORD *)(v3 + 24) = 256;
  *(_QWORD *)v3 = &off_24ED5A400;
  *(_DWORD *)(v3 + 28) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED53FA0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109508);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109508))
  {
    qword_254109500 = re::ecs2::introspect_VisualProxyScopeTraceComponent(0);
    __cxa_guard_release(&qword_254109508);
  }
  return qword_254109500;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VisualProxyScopeTraceComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED53F30;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::VisualProxyScopeTraceComponent::~VisualProxyScopeTraceComponent(re::ecs2::VisualProxyScopeTraceComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::VisualProxyScopeTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED53FA0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyScopeTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyScopeTraceComponent>,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyScopeTraceComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 72, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_QWORD *)(v2 + 64) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED48CB8;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_WORD *)(v3 + 48) = 256;
  *(_BYTE *)(v3 + 56) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED540B8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109518);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109518))
  {
    qword_254109510 = re::ecs2::introspect_VisualProxyComponent(0);
    __cxa_guard_release(&qword_254109518);
  }
  return qword_254109510;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VisualProxyComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED54048;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED540B8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Slice<re::ecs2::VisualProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyComponent>,re::Slice<re::ecs2::VisualProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::VisualProxyFilterComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED48D38;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED541D0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109528);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109528))
  {
    qword_254109520 = re::ecs2::introspect_VisualProxyFilterComponent(0);
    __cxa_guard_release(&qword_254109528);
  }
  return qword_254109520;
}

__n128 re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::VisualProxyFilterComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED54160;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED541D0;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::VisualProxyFilterComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Slice<re::ecs2::VisualProxyFilterComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::VisualProxyFilterComponent>,re::Slice<re::ecs2::VisualProxyFilterComponent*>>::Subscription const&,re::Slice<re::ecs2::VisualProxyFilterComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 32, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A000;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED542E8;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109538);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109538))
  {
    qword_254109530 = re::ecs2::introspect_AllowsCASeparatedProxyComponent(0);
    __cxa_guard_release(&qword_254109538);
  }
  return qword_254109530;
}

__n128 re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::AllowsCASeparatedProxyComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED54278;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::AllowsCASeparatedProxyComponent::~AllowsCASeparatedProxyComponent(re::ecs2::AllowsCASeparatedProxyComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::AllowsCASeparatedProxyComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED542E8;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::AllowsCASeparatedProxyComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AllowsCASeparatedProxyComponent>,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>>::Subscription const&,re::Slice<re::ecs2::AllowsCASeparatedProxyComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doMakeComponent(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType+ 7), 128, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = off_24ED58BC0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  v4 = (_anonymous_namespace_ *)re::DynamicString::setCapacity((_QWORD *)(v2 + 32), 0);
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  re::DynamicString::setCapacity((_QWORD *)(v2 + 64), 0);
  *(_WORD *)(v2 + 96) = 0;
  *(_BYTE *)(v2 + 98) = 0;
  objc_initWeak((id *)(v2 + 104), 0);
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 120) = 0;
  re::ecs2::EntityHandle::reset((id *)(v2 + 104));
  *a1 = v2;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54400;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

void *re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  _UNKNOWN **v1;
  int v3;

  v1 = &re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
  if ((v0 & 1) == 0)
  {
    v1 = &re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    if (v3)
    {
      re::introspect<re::ecs2::ReferenceComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_ReferenceComponent(0);
      v1 = &re::ecs2::ComponentImpl<re::ecs2::PlanarReflectionReceiverComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
    }
  }
  return v1[12];
}

__n128 re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ReferenceComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED54390;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ReferenceComponent::~ReferenceComponent(id *this)
{
  id *v2;
  id v3;
  id v4;

  v2 = this + 13;
  re::ecs2::EntityHandle::reset(this + 13);
  objc_destroyWeak(v2);
  this[13] = 0;
  v3 = this[8];
  if (v3)
  {
    if (((_BYTE)this[9] & 1) != 0)
      (*(void (**)(id, id))(*(_QWORD *)v3 + 40))(v3, this[10]);
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
  }
  v4 = this[4];
  if (v4)
  {
    if (((_BYTE)this[5] & 1) != 0)
      (*(void (**)(id, id))(*(_QWORD *)v4 + 40))(v4, this[6]);
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
}

{
  id *v2;
  id v3;
  id v4;

  v2 = this + 13;
  re::ecs2::EntityHandle::reset(this + 13);
  objc_destroyWeak(v2);
  this[13] = 0;
  v3 = this[8];
  if (v3)
  {
    if (((_BYTE)this[9] & 1) != 0)
      (*(void (**)(id, id))(*(_QWORD *)v3 + 40))(v3, this[10]);
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
  }
  v4 = this[4];
  if (v4)
  {
    if (((_BYTE)this[5] & 1) != 0)
      (*(void (**)(id, id))(*(_QWORD *)v4 + 40))(v4, this[6]);
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  *this = &off_24ED426B8;
  objc_destructInstance(this + 1);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ReferenceComponent,(re::ecs2::ComponentTypeBase::Flags)4>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54400;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ReferenceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Slice<re::ecs2::ReferenceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ReferenceComponent>,re::Slice<re::ecs2::ReferenceComponent*>>::Subscription const&,re::Slice<re::ecs2::ReferenceComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED5A200;
  *(_DWORD *)(v3 + 28) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54518;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109548);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109548))
  {
    qword_254109540 = re::ecs2::introspect_ThrottleComponent(0);
    __cxa_guard_release(&qword_254109548);
  }
  return qword_254109540;
}

__n128 re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::ThrottleComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED544A8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::ThrottleComponent::~ThrottleComponent(re::ecs2::ThrottleComponent *this)
{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::ThrottleComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54518;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::ThrottleComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Slice<re::ecs2::ThrottleComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::ThrottleComponent>,re::Slice<re::ecs2::ThrottleComponent*>>::Subscription const&,re::Slice<re::ecs2::ThrottleComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

__n128 re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doMakeComponent@<Q0>(_QWORD *a1@<X8>)
{
  ArcSharedObject *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  uint64_t v6;

  v2 = (ArcSharedObject *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                                                + 7)
                                                                             + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 176, 0);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  ArcSharedObject::ArcSharedObject(v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED59E80;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_DWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 68) = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 80) = 0;
  v4 = MEMORY[0x24BDC0D88];
  result = *(__n128 *)MEMORY[0x24BDC0D88];
  *(_OWORD *)(v3 + 88) = *MEMORY[0x24BDC0D88];
  v6 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v3 + 104) = v6;
  *(__n128 *)(v3 + 112) = result;
  *(_BYTE *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 128) = v6;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_BYTE *)(v3 + 160) = 0;
  *(_QWORD *)(v3 + 168) = 0;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54630;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109558);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109558))
  {
    qword_254109550 = re::ecs2::introspect_TimebaseComponent(0);
    __cxa_guard_release(&qword_254109558);
  }
  return qword_254109550;
}

__n128 re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::TimebaseComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED545C0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::TimebaseComponent::~TimebaseComponent(re::ecs2::TimebaseComponent *this)
{
  *(_QWORD *)this = &off_24ED59E80;
  re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  *(_QWORD *)this = &off_24ED59E80;
  re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit((uint64_t *)this + 4);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::TimebaseComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<unsigned long long,re::ClockOrTimebase,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double result;

  v2 = *a1;
  if (v2)
  {
    v3 = *((_DWORD *)a1 + 8);
    if (v3)
    {
      v4 = 0;
      v5 = 200 * v3;
      do
      {
        v6 = a1[2] + v4;
        v7 = *(_DWORD *)(v6 + 8);
        if (v7 < 0)
          *(_DWORD *)(v6 + 8) = v7 & 0x7FFFFFFF;
        v4 += 200;
      }
      while (v5 != v4);
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54630;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::TimebaseComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Slice<re::ecs2::TimebaseComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::TimebaseComponent>,re::Slice<re::ecs2::TimebaseComponent*>>::Subscription const&,re::Slice<re::ecs2::TimebaseComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::NetworkAssetComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 216, 0);
  return re::make::shared::inplace<re::ecs2::NetworkAssetComponent>(v2, a1);
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54748;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

__guard re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;
  __guard *v1;
  int v3;

  if ((v0 & 1) == 0)
  {
    if (v3)
    {
      re::introspect<re::ecs2::NetworkAssetComponent>(void)::info = (_UNKNOWN *)re::ecs2::introspect_NetworkAssetComponent(0);
    }
  }
  return v1[18];
}

__n128 re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::NetworkAssetComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED546D8;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::AcousticMeshComponent>,re::Slice<re::ecs2::AcousticMeshComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::registerCallbacks(_DWORD *a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 32, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 98, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    result = re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 54, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    return re::Event<re::NetworkSystem,re::ecs2::Component *>::addSubscription(a1 + 76, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke;
    re::Event<re::GeometricObjectBase>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54748;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::NetworkAssetComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Slice<re::ecs2::NetworkAssetComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::NetworkAssetComponent>,re::Slice<re::ecs2::NetworkAssetComponent*>>::Subscription const&,re::Slice<re::ecs2::NetworkAssetComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doMakeComponent(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 40, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED58440;
  *(_QWORD *)(v3 + 32) = 0;
  *a1 = v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54860;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109568);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109568))
  {
    qword_254109560 = re::ecs2::introspect_DeferredActivationComponent(0);
    __cxa_guard_release(&qword_254109568);
  }
  return qword_254109560;
}

__n128 re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::DeferredActivationComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED547F0;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::DeferredActivationComponent::~DeferredActivationComponent(re::ecs2::DeferredActivationComponent *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24ED58440;
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {

    *((_QWORD *)this + 4) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_24ED58440;
  v2 = *((_QWORD *)this + 4);
  if (v2)
  {

    *((_QWORD *)this + 4) = 0;
  }
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::DeferredActivationComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54860;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::DeferredActivationComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Slice<re::ecs2::DeferredActivationComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::DeferredActivationComponent>,re::Slice<re::ecs2::DeferredActivationComponent*>>::Subscription const&,re::Slice<re::ecs2::DeferredActivationComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

double re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::makeBindNode@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _anonymous_namespace_ *v5;

  v5 = (_anonymous_namespace_ *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
  return re::makeRelativeBindNode(v5, a2, a3);
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::isCustomComponent()
{
  return 0;
}

void re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(_QWORD *a1)
{
  re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(a1);
  JUMPOUT(0x2276933B8);
}

double re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doMakeComponent@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**((_QWORD **)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
                                                             + 7)
                                                          + 32))(*((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType+ 7), 232, 0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_QWORD *)(v2 + 224) = 0;
  ArcSharedObject::ArcSharedObject((ArcSharedObject *)v2, 0);
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)v3 = &off_24ED57188;
  *(_DWORD *)(v3 + 28) = 0;
  *(_WORD *)(v3 + 32) = 0;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_DWORD *)(v3 + 72) = 0;
  *(_QWORD *)&result = 0x7FFFFFFFLL;
  *(_QWORD *)(v3 + 76) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_DWORD *)(v3 + 120) = 0;
  *(_QWORD *)(v3 + 124) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_DWORD *)(v3 + 168) = 0;
  *(_QWORD *)(v3 + 172) = 0x7FFFFFFFLL;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  *(_DWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 220) = 0x7FFFFFFFLL;
  *a1 = v3;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doMakeSceneComponentCollection(re *a1)
{
  uint64_t *v2;
  uint64_t v3;
  _anonymous_namespace_ *v4;
  _anonymous_namespace_ *v5;
  _anonymous_namespace_ *v6;
  _anonymous_namespace_ *v7;

  v2 = re::globalAllocators(a1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v2[2] + 32))(v2[2], 656, 8);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = a1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_QWORD *)v3 = &off_24ED54978;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 0;
  *(_QWORD *)(v3 + 200) = 0;
  *(_DWORD *)(v3 + 208) = 0;
  *(_DWORD *)(v3 + 192) = 0;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_DWORD *)(v3 + 240) = 0;
  *(_QWORD *)(v3 + 224) = 0;
  *(_QWORD *)(v3 + 232) = 0;
  *(_QWORD *)(v3 + 216) = 0;
  *(_QWORD *)(v3 + 288) = 0;
  *(_DWORD *)(v3 + 296) = 0;
  *(_OWORD *)(v3 + 248) = 0u;
  *(_DWORD *)(v3 + 280) = 0;
  *(_OWORD *)(v3 + 264) = 0u;
  *(_QWORD *)(v3 + 304) = 0;
  *(_QWORD *)(v3 + 312) = 0;
  *(_DWORD *)(v3 + 328) = 0;
  *(_QWORD *)(v3 + 320) = 0;
  *(_QWORD *)(v3 + 376) = 0;
  *(_DWORD *)(v3 + 384) = 0;
  *(_DWORD *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 336) = 0u;
  *(_OWORD *)(v3 + 352) = 0u;
  *(_QWORD *)(v3 + 392) = 0;
  *(_QWORD *)(v3 + 400) = 0;
  *(_DWORD *)(v3 + 416) = 0;
  *(_QWORD *)(v3 + 408) = 0;
  *(_QWORD *)(v3 + 464) = 0;
  *(_DWORD *)(v3 + 472) = 0;
  *(_DWORD *)(v3 + 456) = 0;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_QWORD *)(v3 + 480) = 0;
  *(_QWORD *)(v3 + 488) = 0;
  *(_QWORD *)(v3 + 496) = 0;
  *(_DWORD *)(v3 + 504) = 1;
  *(_QWORD *)(v3 + 520) = 0;
  *(_QWORD *)(v3 + 512) = 0;
  *(_DWORD *)(v3 + 536) = 0;
  *(_QWORD *)(v3 + 528) = 0;
  *(_QWORD *)(v3 + 552) = 0;
  *(_QWORD *)(v3 + 544) = 0;
  *(_DWORD *)(v3 + 560) = 1;
  *(_QWORD *)(v3 + 576) = 0;
  *(_QWORD *)(v3 + 568) = 0;
  *(_DWORD *)(v3 + 592) = 0;
  *(_QWORD *)(v3 + 584) = 0;
  *(_QWORD *)(v3 + 608) = 0;
  *(_QWORD *)(v3 + 600) = 0;
  *(_DWORD *)(v3 + 616) = 1;
  *(_QWORD *)(v3 + 632) = 0;
  *(_QWORD *)(v3 + 624) = 0;
  *(_DWORD *)(v3 + 648) = 0;
  *(_QWORD *)(v3 + 640) = 0;
  v4 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 128), 0);
  ++*(_DWORD *)(v3 + 152);
  v5 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 216), 0);
  ++*(_DWORD *)(v3 + 240);
  v6 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 304), 0);
  ++*(_DWORD *)(v3 + 328);
  v7 = (_anonymous_namespace_ *)re::DynamicArray<re::EvaluationRegister>::setCapacity((_QWORD *)(v3 + 392), 0);
  ++*(_DWORD *)(v3 + 416);
  return v3;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetComponentIntrospectionInfo()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254109578);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254109578))
  {
    qword_254109570 = re::ecs2::introspect_LoadTraceComponent(0);
    __cxa_guard_release(&qword_254109578);
  }
  return qword_254109570;
}

__n128 re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetComponentTypeID@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = a1[4];
  *a2 = result;
  return result;
}

uint64_t re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::doGetNetworkSyncInfo(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

_QWORD *re::ecs2::ComponentType<re::ecs2::LoadTraceComponent>::~ComponentType(_QWORD *a1)
{
  re *v2;
  void (***v3)(_QWORD);
  uint64_t v4;

  *a1 = off_24ED54908;
  v2 = (re *)a1[6];
  if (v2)
    v2 = (re *)RESyncRelease();
  v3 = (void (***)(_QWORD))a1[7];
  if (v3)
  {
    v4 = re::globalAllocators(v2)[2];
    (**v3)(v3);
    (*(void (**)(uint64_t, void (***)(_QWORD)))(*(_QWORD *)v4 + 40))(v4, v3);
  }
  *a1 = &unk_24ED45840;
  re::StringID::destroyString((re::StringID *)(a1 + 3));
  return a1;
}

void re::ecs2::LoadTraceComponent::~LoadTraceComponent(re::ecs2::LoadTraceComponent *this)
{
  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23);
  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 17);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
}

{
  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 23);
  re::HashSetBase<re::AssetHandle,re::AssetHandle,re::internal::ValueAsKey<re::AssetHandle>,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 17);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 11);
  re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit((uint64_t *)this + 5);
  *(_QWORD *)this = &off_24ED426B8;
  objc_destructInstance((char *)this + 8);
  JUMPOUT(0x2276933B8);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::allocator()
{
  return *((_QWORD *)re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType
         + 7);
}

uint64_t re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::commonComponentIndex()
{
  return -1;
}

void *re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::componentType()
{
  return re::ecs2::ComponentImpl<re::ecs2::LoadTraceComponent,(re::ecs2::ComponentTypeBase::Flags)2>::s_componentType;
}

double re::HashTable<re::AssetHandle,re::ecs2::LoadTraceAssetLoadState,re::Hash<re::AssetHandle>,re::EqualTo<re::AssetHandle>,true,false>::deinit(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double result;

  v2 = *a1;
  if (v2)
  {
    v3 = *((unsigned int *)a1 + 8);
    if ((_DWORD)v3)
    {
      v4 = 0;
      v5 = 8;
      do
      {
        v6 = a1[2];
        v7 = *(_DWORD *)(v6 + v5);
        if (v7 < 0)
        {
          *(_DWORD *)(v6 + v5) = v7 & 0x7FFFFFFF;
          re::AssetHandle::~AssetHandle((re::AssetHandle *)(v6 + v5 + 8));
          v3 = *((unsigned int *)a1 + 8);
        }
        ++v4;
        v5 += 48;
      }
      while (v4 < v3);
      v2 = *a1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 40))(v2, a1[1]);
    *((_DWORD *)a1 + 8) = 0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
    *(_QWORD *)&result = 0x7FFFFFFFLL;
    *(uint64_t *)((char *)a1 + 36) = 0x7FFFFFFFLL;
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::~SceneComponentCollection(uint64_t a1)
{
  re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::~SceneComponentCollection(a1);
  JUMPOUT(0x2276933B8);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::didAdd(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 128, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::doActivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 216, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::doDeactivate(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 304, a1);
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::willRemove(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  re::ecs2::Component **v5;
  re::ecs2::ComponentBucketsBase *v6;
  uint64_t v7;
  re::ecs2::Component *v8;

  if (*(_QWORD *)(a2 + 16))
  {
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::raise(a1 + 392, a1);
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      v5 = *(re::ecs2::Component ***)(a2 + 32);
      v6 = (re::ecs2::ComponentBucketsBase *)(a1 + 480);
      v7 = 8 * v4;
      do
      {
        v8 = *v5++;
        re::ecs2::ComponentBucketsBase::removeComponentFromAllBuckets(v6, v8);
        v7 -= 8;
      }
      while (v7);
    }
  }
}

double re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::registerCallbacks(uint64_t a1, _QWORD *a2)
{
  double result;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t *, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 128, (uint64_t)&v5);
  }
  if (a2[4])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 392, (uint64_t)&v5);
  }
  if (a2[5])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    result = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 216, (uint64_t)&v5);
  }
  if (a2[6])
  {
    v5 = a2;
    v6 = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>;
    v7 = 0;
    v8 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    return re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::addSubscription(a1 + 304, (uint64_t)&v5);
  }
  return result;
}

void re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::unregisterCallbacks(uint64_t a1, _QWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *, _QWORD *);
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a2[3])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 128, &v4);
  }
  if (a2[4])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 392, &v4);
  }
  if (a2[5])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 216, &v4);
  }
  if (a2[6])
  {
    *(_QWORD *)&v4 = a2;
    *((_QWORD *)&v4 + 1) = re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>;
    v5 = 0;
    v6 = re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke;
    re::Event<re::ecs2::SceneComponentCollection<re::ecs2::CustomComponent>,re::Slice<re::ecs2::CustomComponent*>>::removeSubscription(a1 + 304, &v4);
  }
}

uint64_t re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>::~SceneComponentCollection(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = &off_24ED54978;
  v3 = (uint64_t *)(a1 + 128);
  v2 = *(_QWORD *)(a1 + 128);
  if (v2)
  {
    if (*(_QWORD *)(a1 + 160))
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 40))(v2);
    *(_QWORD *)(a1 + 160) = 0;
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    ++*(_DWORD *)(a1 + 152);
  }
  v4 = *(_QWORD *)(a1 + 216);
  if (v4)
  {
    if (*(_QWORD *)(a1 + 248))
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 40))(v4);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    ++*(_DWORD *)(a1 + 240);
  }
  v5 = *(_QWORD *)(a1 + 304);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 336))
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
    *(_QWORD *)(a1 + 336) = 0;
    *(_QWORD *)(a1 + 312) = 0;
    *(_QWORD *)(a1 + 320) = 0;
    *(_QWORD *)(a1 + 304) = 0;
    ++*(_DWORD *)(a1 + 328);
  }
  v6 = *(_QWORD *)(a1 + 392);
  if (v6)
  {
    if (*(_QWORD *)(a1 + 424))
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 400) = 0;
    *(_QWORD *)(a1 + 408) = 0;
    *(_QWORD *)(a1 + 392) = 0;
    ++*(_DWORD *)(a1 + 416);
  }
  re::ecs2::ComponentBucketsBase::deinit((re::ecs2::ComponentBucketsBase *)(a1 + 480));
  re::BucketArray<unsigned long,8ul>::deinit(a1 + 600);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 600);
  re::BucketArray<re::HashTable<re::ecs2::Component *,re::DataArrayHandle<re::ecs2::Component *>,re::Hash<re::ecs2::Component *>,re::EqualTo<re::ecs2::Component *>,true,false>,8ul>::deinit(a1 + 544);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 544);
  re::BucketArray<re::DataArray<re::ecs2::Component *>,8ul>::deinit(a1 + 488);
  re::DynamicOverflowArray<re::CollisionCastHit *,2ul>::deinit(a1 + 488);
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 392));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 304));
  re::Event<re::Engine>::~Event((uint64_t *)(a1 + 216));
  re::Event<re::Engine>::~Event(v3);
  *(_QWORD *)a1 = off_24ED71348;
  re::HashBrown<unsigned long long,re::Pair<void const*,void const*,true>,re::Hash<unsigned long long>,re::EqualTo<unsigned long long>,void,false>::deinit(a1 + 56);
  return re::ReadOnlyCollection<re::ecs2::Component *,true>::~ReadOnlyCollection(a1);
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::didAddComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 24);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::willRemoveComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 32);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doActivateComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 40);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::ecs2::SceneComponentCollectionCallbacks::doDeactivateComponent<re::ecs2::LoadTraceComponent>(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void (*v5)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void (**)(_QWORD))(a1 + 48);
  if (*(_BYTE *)(a1 + 16))
  {
    if (a4)
    {
      v7 = 8 * a4;
      do
      {
        v8 = *a3++;
        ((void (*)(uint64_t, _QWORD))v5)(v8, *(_QWORD *)(a1 + 56));
        v7 -= 8;
      }
      while (v7);
    }
  }
  else if (a4)
  {
    v9 = 8 * a4;
    do
    {
      v10 = *a3++;
      v5(v10);
      v9 -= 8;
    }
    while (v9);
  }
  return 0;
}

uint64_t re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::createSubscription<re::ecs2::SceneComponentCollectionCallbacks>(re::ecs2::SceneComponentCollectionCallbacks *,REEventHandlerResult (re::ecs2::SceneComponentCollectionCallbacks::*)(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Slice<re::ecs2::LoadTraceComponent*>))::{lambda(re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>*,re::Event<re::ecs2::SceneComponentCollection<re::ecs2::LoadTraceComponent>,re::Slice<re::ecs2::LoadTraceComponent*>>::Subscription const&,re::Slice<re::ecs2::LoadTraceComponent*>&&)#1}::__invoke(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t (*v4)(_QWORD *, uint64_t, _QWORD, _QWORD);
  uint64_t v5;
  _QWORD *v6;

  v4 = (uint64_t (*)(_QWORD *, uint64_t, _QWORD, _QWORD))a2[1];
  v5 = a2[2];
  v6 = (_QWORD *)(*a2 + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD))(*v6 + v4);
  return v4(v6, a1, *a3, a3[1]);
}

