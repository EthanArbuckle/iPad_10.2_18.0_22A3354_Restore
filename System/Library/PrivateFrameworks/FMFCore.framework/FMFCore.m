uint64_t sub_21190F4F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2119F7EE8(a1);
}

uint64_t sub_21190F50C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21195A988();
  *a1 = result;
  return result;
}

void sub_21190F538()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21190F62C(319, (unint64_t *)&qword_254AC9490, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_21190F62C(319, (unint64_t *)&qword_254ACC3B0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_21190F62C(319, qword_254AC96F0, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_21190F62C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_211A47E14();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_21190F678@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_21190F6A4(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_21190F6A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  _OWORD v6[2];

  if (qword_254AC7B98 != -1)
    swift_once();
  swift_beginAccess();
  v2 = off_254ACDCB8;
  if (*((_QWORD *)off_254ACDCB8 + 2) && (v3 = sub_21193A1E8(a1), (v4 & 1) != 0))
    sub_211950B6C(v2[7] + 32 * v3, (uint64_t)v6);
  else
    memset(v6, 0, sizeof(v6));
  swift_endAccess();
  sub_211958C38(&qword_254AC97C0);
  return swift_dynamicCast();
}

void sub_21190F798()
{
  unint64_t v0;
  unint64_t v1;

  sub_21190F62C(319, (unint64_t *)&qword_254ACC3B0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_21190F62C(319, (unint64_t *)&qword_254ACDE10, (void (*)(uint64_t))type metadata accessor for FMFLocation);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_21190F8A8(_QWORD *a1)
{
  return sub_21195DB70(a1);
}

uint64_t sub_21190F8BC()
{
  uint64_t v0;

  v0 = sub_211A47748();
  sub_211960F38(v0, qword_254ADC800);
  sub_21194F3E0(v0, (uint64_t)qword_254ADC800);
  return sub_211A47730();
}

uint64_t sub_21190F93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_211963DB0;
  return sub_21191E5C8(a1, v1);
}

void sub_21190F990(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 1032);
  sub_21192DD68((uint64_t)a2, a1 + 1032, &qword_254ACAA30);
  sub_211961470(a2);
  sub_211933F60(v3);
  sub_211933924();
}

uint64_t sub_21190FA34()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_21190FB48()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  qword_254ACDFA8 = (uint64_t)result;
  return result;
}

void sub_21190FB78(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  if (a1)
    v2 = sub_211A47A90();
  else
    v2 = 0;
  v3 = (id)v2;
  objc_msgSend(v1, sel_setEnabledTopics_);

}

void sub_21190FBC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254AC9940)
  {
    sub_211A4722C();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254AC9940);
  }
}

_QWORD *sub_21190FC18(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_211958C38(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = j__malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_211961074(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FMFAddress(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

_QWORD *sub_21190FD60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_211958C38(&qword_254ACA958);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_211960F8C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21190FE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211962FFC;
  return sub_211915DF0(a1, a2);
}

uint64_t sub_21190FECC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)(a1 + *a4);
  *v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRelease();
  return a5(v7);
}

uint64_t type metadata accessor for FMFGenericResponseHandler()
{
  return objc_opt_self();
}

void sub_21190FF38(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 += v10;
  }
  if (a3 <= v8)
  {
    v14 = 0;
  }
  else if (v9 <= 3)
  {
    v16 = ((a3 - v8 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v8 < a2)
  {
    v15 = ~v8 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v17 = v15 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v9 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

_QWORD *_s7FMFCore14InitialTabInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2119101C4()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  char v3;
  id v4;
  id v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  char v9;

  v1 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5)
  {
    if (v0[7])
      goto LABEL_3;
LABEL_15:
    v3 = 0;
    return v3 & 1;
  }
  if (!MEMORY[0x212BE496C](v0 + 2))
  {
    if (MEMORY[0x212BE496C](v0 + 2))
    {
      if (!v1)
      {
        v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
        v5 = objc_msgSend(v4, sel_deviceModelName);

        if (v5)
        {
          sub_211A47910();

        }
        sub_2119FEF84(0xD000000000000017, 0x8000000211A545B0);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (MEMORY[0x212BE496C](v0 + 2))
          goto LABEL_19;
        goto LABEL_3;
      }
      swift_unknownObjectRelease();
    }
    else if (!v0[7])
    {
      goto LABEL_15;
    }
    if (MEMORY[0x212BE496C](v0 + 2))
    {
      if (v1)
      {
        swift_unknownObjectRelease();
        goto LABEL_21;
      }
LABEL_19:
      type metadata accessor for FMLocalize();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_211A46FE0();
      swift_unknownObjectRelease();

LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_3:
    if (!v0[11])
    {
      sub_21197ADAC();
      if (v2)
        goto LABEL_20;
      goto LABEL_15;
    }
LABEL_21:
    v3 = 1;
    return v3 & 1;
  }
  v9 = v1;
  v3 = sub_21191A61C(&v9, v0[4], v0[5]);
  swift_unknownObjectRelease();
  return v3 & 1;
}

_QWORD *sub_211910408()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4B00];
  v0[14] = 0;
  v0[15] = v1;
  v0[16] = v1;
  v0[17] = 0;
  v0[18] = 0;
  v0[19] = v1;
  v0[20] = v1;
  v2 = (char *)v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  v3 = sub_211A47208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

void sub_21191048C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 1112) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211933924();
}

uint64_t type metadata accessor for FMFMyLocationResponse()
{
  return objc_opt_self();
}

uint64_t sub_2119104E4(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 2;
  v7 = *(_QWORD *)(v4 + 64);
  if (v5 <= 1)
  {
    v6 = 0;
    if (v7 <= 3)
    {
      v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        v8 = 4;
      }
      else
      {
        v10 = v9 != 0;
        v11 = v9 >= 0xFF;
        v8 = 2;
        if (!v11)
          v8 = v10;
      }
    }
    else
    {
      v8 = 1;
    }
    v7 += v8;
  }
  if (!a2)
    return 0;
  if (a2 <= v6)
    goto LABEL_27;
  v12 = 8 * v7;
  if (v7 <= 3)
  {
    v14 = ((a2 - v6 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      v13 = *(_DWORD *)(a1 + v7);
      if (!v13)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_27:
      if (v6)
      {
        v16 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
        if (v16 >= 3)
          return v16 - 2;
        else
          return 0;
      }
      return 0;
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_27;
LABEL_20:
  v15 = (v13 - 1) << v12;
  if (v7 > 3)
    v15 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X12 }
  }
  return v6 + v15 + 1;
}

uint64_t sub_211910698()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_211A473B8();
  if (v1 <= 0x3F)
  {
    result = sub_211A473DC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_21191071C()
{
  unint64_t v0;
  unint64_t v1;

  sub_21191170C();
  if (v0 <= 0x3F)
  {
    sub_211A47208();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

void sub_211910804()
{
  unint64_t v0;
  unint64_t v1;

  sub_21196161C();
  if (v0 <= 0x3F)
  {
    sub_211A47208();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_211910908(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x212BE47C8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_211910948()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A47208();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2119109D4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211938340();
}

void sub_211910A14()
{
  unint64_t v0;
  unint64_t v1;

  sub_211A47208();
  if (v0 <= 0x3F)
  {
    sub_21191170C();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

FMFCore::FMFAlertType_optional __swiftcall FMFAlertType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFAlertType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_211910B24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_211910B98()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_211910C20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A47274();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_211910CC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMAPSConnectionHandler()
{
  return objc_opt_self();
}

uint64_t sub_211910D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21196158C(a1, v3);
  swift_endAccess();
  sub_211914F58();
  return sub_211923EE8(a1, &qword_254AC8870);
}

void sub_211910DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4B08];
  if (a2)
    v2 = a2;
  *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211938340();
}

uint64_t sub_211910E18(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  type metadata accessor for FMDiskIO.KeyPair(255, a1[10], a1[11], a1[12]);
  result = sub_211A47E14();
  if (v2 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMLocationShifter()
{
  return objc_opt_self();
}

void sub_211910ED4()
{
  type metadata accessor for MergeStateMachine.State();
}

void sub_211910F5C(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = a2[28];
  swift_bridgeObjectRetain();
  v7 = sub_21196145C(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    a2[15] = 0;
    swift_bridgeObjectRelease();
    a2[21] = 0;
    swift_bridgeObjectRelease();
    v8 = 1;
    swift_beginAccess();
    a2[22] = 0;
    swift_bridgeObjectRelease();
    a2[28] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
  }
  *a3 = v8;
}

uint64_t sub_21191102C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 176) = v5;
    *v5 = v3;
    v5[1] = sub_211961EA4;
    return sub_211913064();
  }
}

uint64_t sub_211911114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_211A48018();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

void sub_2119111B8(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  v7 = sub_21196145C(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 120) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 88) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_211911254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v24 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v8 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_211A47E14();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v23 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v23 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v23 - v19, v4 + *(int *)(a1 + 36), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, v4 + *(int *)(a1 + 40), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v4, v6);
  return sub_21191269C((uint64_t)v20, (uint64_t)v17, (uint64_t)v10, v6, v23, v24);
}

uint64_t sub_21191140C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_211911478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_211910B24;
    return sub_211A47538();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = sub_211958C38(&qword_254ACA1D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    v11 = sub_211A47B8C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_21192C6B8(v6, v5, &qword_254ACA1D0);
    v12 = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v1;
    *(_QWORD *)(v15 + 24) = v12;
    sub_21192DD68(v5, v15 + v13, &qword_254ACA1D0);
    *(_QWORD *)(v15 + v14) = v1;
    swift_retain_n();
    sub_2119E1B00(v9, (uint64_t)&unk_254ACA1E8, v15);
    swift_release();
    sub_211923EE8(v6, &qword_254ACA1D0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211911650()
{
  uint64_t v0;
  uint64_t result;

  sub_211911824(0, &qword_254ACC558);
  sub_211958C38(&qword_254ACC560);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_211A4A230;
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 64) = sub_2119512B0();
  *(_QWORD *)(v0 + 32) = 0xD000000000000029;
  *(_QWORD *)(v0 + 40) = 0x8000000211A562C0;
  result = sub_211A47D00();
  qword_254ADC738 = result;
  return result;
}

void sub_21191170C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254ACC0D0[0])
  {
    sub_211A47274();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, qword_254ACC0D0);
  }
}

uint64_t destroy for InitialTabInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211911790()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[18] + 8))(v2[19], v2[17]);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_211911824(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_21191185C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 1104) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211933924();
}

void sub_211911894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254AC7D50)
  {
    sub_211A47304();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254AC7D50);
  }
}

uint64_t sub_2119118E8()
{
  uint64_t v0;

  v0 = sub_211A47748();
  sub_211960F38(v0, qword_254ADC7E8);
  sub_21194F3E0(v0, (uint64_t)qword_254ADC7E8);
  return sub_211A4773C();
}

uint64_t sub_211911930()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_211A47E14();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMDemoManager()
{
  return objc_opt_self();
}

void sub_2119119D8()
{
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_211911A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_211911AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_211911AF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_211949660(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_211911B10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_21193F664(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_211911B28()
{
  sub_2119317F8();
  return sub_211A48390();
}

uint64_t sub_211911B50(_QWORD *a1)
{
  return FMFPreferences.encode(to:)(a1);
}

uint64_t sub_211911B64@<X0>(uint64_t *a1@<X8>)
{
  return sub_2119238EC(a1);
}

uint64_t sub_211911B7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2119238C0(a1);
}

unint64_t sub_211911B90@<X0>(unint64_t *a1@<X8>)
{
  return sub_211911BA8(a1);
}

unint64_t sub_211911BA8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_21195A3A8();
  *a1 = result;
  return result;
}

uint64_t sub_211911BE0(uint64_t a1, id a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 && (v3 = objc_msgSend(a2, sel_identifier)) != 0)
  {
    v4 = v3;
    v5 = sub_211A47910();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_211911C50()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = sub_211A47E14();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

void sub_211911D1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a1[93];
  v7 = a1[94];
  v8 = a1[95];
  a1[93] = a2;
  a1[94] = a3;
  a1[95] = a4;
  a1[96] = a5;
  sub_21192769C(a2, a3, a4);
  sub_21195A23C(v6, v7, v8);
  a1[15] = 0;
  swift_bridgeObjectRelease();
  sub_211933924();
}

_QWORD *sub_211911DA0(_QWORD *a1, void **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, void **, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  unsigned int v29;
  uint64_t v30;
  void *v31;
  id v32;
  unsigned int v33;
  char v34;
  unsigned int v35;
  int v36;
  void *v37;
  id v38;
  unsigned int v39;
  size_t __n;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v43 = a3[3];
  v7 = *(_QWORD *)(v43 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v44 = a3[4];
  v10 = *(_QWORD *)(v44 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v42 = *(_QWORD *)(v7 + 64);
  v12 = (v42 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v16 + 64) <= 8uLL)
    v17 = 8;
  else
    v17 = *(_QWORD *)(v16 + 64);
  if (v17 + 1 > v14)
    v18 = v17 + 1;
  else
    v18 = v14;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  if (v19 > 3)
    goto LABEL_16;
  v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a2 + v19);
      if (v21 < 3)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v21 = *((unsigned __int8 *)a2 + v19);
    if (v21 < 3)
      goto LABEL_25;
LABEL_21:
    if (v19 <= 3)
      v22 = v19;
    else
      v22 = 4;
    __asm { BR              X13 }
  }
  v21 = *(_DWORD *)((char *)a2 + v19);
  if (v21 >= 3)
    goto LABEL_21;
LABEL_25:
  if (v21 != 2)
  {
    if (v21 != 1)
    {
      v23 = *(void (**)(_QWORD *, void **, uint64_t))(v5 + 16);
      v24 = a1;
      v23(a1, a2, v4);
      v25 = ((unint64_t)a1 + v9) & ~v8;
      v26 = ((unint64_t)a2 + v9) & ~v8;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v43);
      v27 = (void *)((v25 + v42 + v11) & ~v11);
      v28 = (const void *)((v26 + v42 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v44))
      {
        memcpy(v27, v28, __n);
        if (v19 > 3)
          goto LABEL_44;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v27, v28, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v44);
        if (v19 > 3)
        {
LABEL_44:
          *((_BYTE *)a1 + v19) = 0;
          return v24;
        }
      }
      v35 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v35 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      goto LABEL_44;
    }
    v29 = *((unsigned __int8 *)a2 + v17);
    if (v29 >= 2)
    {
      if (v17 <= 3)
        v30 = v17;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    v24 = a1;
    if (v29 == 1)
    {
      v37 = *a2;
      v38 = v37;
      *a1 = v37;
      v34 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, void **, uint64_t))(v16 + 16))(a1, a2, AssociatedTypeWitness);
      v34 = 0;
    }
    *((_BYTE *)a1 + v17) = v34;
    if (v19 > 3)
    {
LABEL_51:
      *((_BYTE *)a1 + v19) = 1;
      return v24;
    }
    v36 = 1;
    v39 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v39 <= 0xFFFC)
    {
      if (v39 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 1;
        return v24;
      }
      goto LABEL_51;
    }
LABEL_55:
    *(_DWORD *)((char *)v24 + v19) = v36;
    return v24;
  }
  v31 = *a2;
  v32 = v31;
  v24 = a1;
  *a1 = v31;
  if (v19 <= 3)
  {
    v33 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v33 > 0xFFFC)
    {
      v36 = 2;
      goto LABEL_55;
    }
    if (v33 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v19) = 2;
      return v24;
    }
  }
  *((_BYTE *)a1 + v19) = 2;
  return v24;
}

void sub_211912220()
{
  unsigned __int16 *v0;
  unsigned int v1;

  if (v1 >= 4)
  {
    if ((*v0 | (*((unsigned __int8 *)v0 + 2) << 16)) != 0xFFFFFFFF)
      JUMPOUT(0x2119120B0);
    JUMPOUT(0x21191219CLL);
  }
  JUMPOUT(0x211912184);
}

uint64_t sub_211912254(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _QWORD v15[7];
  char v16;

  v2 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v3 = *(_QWORD *)(result + 24);
    v4 = *(_QWORD *)(result + 32);
    v5 = *(_BYTE *)(result + 56);
    v7 = *(_QWORD *)(result + 40);
    v6 = *(_QWORD *)(result + 48);
    v9 = *(_QWORD *)(result + 8);
    v8 = *(_QWORD *)(result + 16);
    swift_beginAccess();
    result = MEMORY[0x212BE496C](v1 + 32);
    if (result)
    {
      v14 = v6;
      v10 = v4;
      v11 = v3;
      v12 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v15[0] = v2;
      v15[1] = v9;
      v15[2] = v8;
      v15[3] = v11;
      v15[4] = v10;
      v15[5] = v7;
      v15[6] = v14;
      v16 = v5 & 1;
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 72))(v1, v15, ObjectType, v12);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_211912328(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x212BE496C](v1 + 32);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 88))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *sub_2119123A8(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __int16 v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = result[2];
  if (v2)
  {
    v3 = result[3];
    v5 = *result;
    v4 = result[1];
    swift_beginAccess();
    result = (uint64_t *)MEMORY[0x212BE496C](v1 + 32);
    if (result)
    {
      v6 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v8 = v5 & 0x101;
      v9 = BYTE2(v5) & 1;
      v10 = BYTE3(v5);
      v11 = v4;
      v12 = v2;
      v13 = v3;
      (*(void (**)(uint64_t, __int16 *, uint64_t, uint64_t))(v6 + 64))(v1, &v8, ObjectType, v6);
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_21191246C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 24);
  sub_211A482A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  v9 = v7 + *(int *)(v8 + 44);
  v10 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v3, v5);
  v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v11(v9, 0, 1, v5);
  v11(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211912564()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2119AB23C();
  qword_254ACA528 = result;
  unk_254ACA530 = v1;
  return result;
}

uint64_t sub_211912584()
{
  uint64_t v0;
  uint64_t __dst[45];

  memcpy(__dst, (const void *)(v0 + 16), 0x161uLL);
  sub_21196F6D0(__dst);
  return swift_deallocClassInstance();
}

uint64_t sub_2119125CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  if (*(_QWORD *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection))
  {
    v1 = result;
    v2 = *(_QWORD *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8);
    ObjectType = swift_getObjectType();
    sub_211958C38((uint64_t *)&unk_254ACC540);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_211A4A230;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8);
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v6;
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v7(v4, ObjectType, v2);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21191269C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v11 = *(_QWORD *)(a4 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(a6, 1, 1);
  v14 = (int *)type metadata accessor for AsyncTimerSequence.Iterator(0, a4, a5, v13);
  v15 = a6 + v14[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v15, 1, 1, AssociatedTypeWitness);
  v17 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a6, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a6, a3, a4);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v12)(a6, 0, 1, a4);
  v18 = a6 + v14[9];
  v19 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a1, v19);
  v20 = a6 + v14[10];
  v21 = sub_211A47E14();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
}

void *sub_211912818()
{
  uint64_t inited;
  void *v1;
  int v2;
  unint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *result;

  sub_211958C38((uint64_t *)&unk_254ACDD80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A50A70;
  *(_BYTE *)(inited + 32) = 0;
  v1 = (void *)sub_211A478EC();
  v2 = MGGetSInt32Answer();

  if (v2 == 9)
  {
    v3 = 0xD000000000000056;
    v4 = "https://support.apple.com/guide/findmy-mac/set-location-notifications-fmmeb70d2de0/mac";
  }
  else if (v2 == 3)
  {
    v3 = 0xD00000000000005FLL;
    v4 = "https://support.apple.com/guide/ipad/set-location-notifications-for-friends-ipad4c370380/ipados";
  }
  else
  {
    v3 = 0xD00000000000005ELL;
    v4 = "https://support.apple.com/guide/iphone/set-location-notifications-for-friends-iph843dd79b6/ios";
  }
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = (unint64_t)(v4 - 32) | 0x8000000000000000;
  *(_BYTE *)(inited + 72) = 1;
  v5 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 104) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = 200;
  *(_BYTE *)(inited + 112) = 2;
  v6 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 144) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 120) = 0x4000000000000000;
  *(_BYTE *)(inited + 152) = 3;
  *(_QWORD *)(inited + 184) = v6;
  *(_QWORD *)(inited + 160) = 0x404E000000000000;
  *(_BYTE *)(inited + 192) = 5;
  *(_QWORD *)(inited + 224) = v6;
  *(_QWORD *)(inited + 200) = 0x403E000000000000;
  *(_BYTE *)(inited + 232) = 6;
  *(_QWORD *)(inited + 264) = v5;
  *(_QWORD *)(inited + 240) = 100;
  *(_BYTE *)(inited + 272) = 4;
  *(_QWORD *)(inited + 304) = v6;
  *(_QWORD *)(inited + 280) = 0x403E000000000000;
  *(_BYTE *)(inited + 312) = 7;
  *(_QWORD *)(inited + 344) = v6;
  *(_QWORD *)(inited + 320) = 0x4092C00000000000;
  *(_BYTE *)(inited + 352) = 11;
  *(_QWORD *)(inited + 384) = v6;
  *(_QWORD *)(inited + 360) = 0x4072C00000000000;
  result = (void *)sub_211939E10(inited);
  off_254ACDCB8 = result;
  return result;
}

uint64_t sub_2119129C4(uint64_t a1, uint64_t a2)
{
  _QWORD **v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;

  v3 = (_QWORD **)(a2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  v4 = *v3;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_211960F78(0, v4[2] + 1, 1, v4);
    *v3 = v4;
  }
  v7 = v4[2];
  v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    v4 = sub_211960F78((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
    *v3 = v4;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a1;
  swift_endAccess();
  return sub_21193A740(0.0);
}

void sub_211912AAC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_211911824(0, &qword_254ACC2B8);
  sub_211961268();
  v5 = sub_211A47C40();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_211912B50()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_211912BC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  result = sub_211A47E14();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_211A47E14();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_211912C8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = sub_211A47208();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_211A471FC();
  v7 = v6 + qword_254ADC818;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v7, v5, v1);
  return swift_endAccess();
}

uint64_t static FMDemoManager.assetURL(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_211958C38(&qword_254AC8C98);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_211A4713C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7BC8 != -1)
    swift_once();
  v9 = sub_21194F3E0(v0, (uint64_t)qword_254ACDFB0);
  sub_211964BAC(v9, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_2119132F0((uint64_t)v3);
    sub_211971B98();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    sub_211A4710C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_211912EF0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  char *v7;
  const char *v8;
  void *v9;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      v3 = sub_211A47E14();
      if (v4 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v7 = &v6;
        v8 = "(";
        v9 = &unk_211A4E3B8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t sub_211912FD0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  if (result)
  {
    v4 = result;
    swift_beginAccess();
    result = MEMORY[0x212BE496C](v2 + 32);
    if (result)
    {
      v5 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 80))(v2, v4, a2 & 1, ObjectType, v5);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_211913064()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  sub_211958C38(&qword_254AC9FD0);
  v1[3] = swift_task_alloc();
  v2 = *(_QWORD *)(sub_211958C38(&qword_254ACA1D0) - 8);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 + 64);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

void sub_2119130FC(char *a1@<X8>)
{
  uint64_t v1;

  sub_211913114(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_211913114(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = swift_bridgeObjectRetain();
  v7 = sub_2119131B8(v6, a2);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    a1[29] = 0;
    swift_bridgeObjectRelease();
    a1[15] = 0;
    swift_bridgeObjectRelease();
    a1[23] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_2119131B8(uint64_t a1, uint64_t a2)
{
  return sub_21193461C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:));
}

void sub_2119131CC(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119131E4(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

void sub_2119131E4(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = a2[24];
  swift_bridgeObjectRetain();
  v7 = sub_2119131B8(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    a2[29] = 0;
    swift_bridgeObjectRelease();
    a2[15] = 0;
    swift_bridgeObjectRelease();
    a2[24] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

uint64_t FMFAlert.deinit()
{
  uint64_t v0;

  sub_211962AB8(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2119132F0(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_2119132F0(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  return v0;
}

uint64_t sub_2119132F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC8C98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_211913330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_211A48030();
  sub_211910908(&qword_254AC9FF0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_211A482A0();
  sub_211910908(&qword_254AC9FF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_211A4803C();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_2119A0244;
  return sub_211A482AC();
}

uint64_t sub_211913448@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD v25[5];

  v6 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v10 = sub_211958C38(&qword_254ACC010);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v14 = sub_211A47340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_211964AFC(a2, (uint64_t)v9);
  v15 = type metadata accessor for FMFServerInteractionController();
  swift_allocObject();
  v16 = a1;
  result = sub_211923924((uint64_t)v13, a1, (uint64_t)v9);
  v18 = (_QWORD *)result;
  if (qword_254AC7BB0 != -1)
    result = swift_once();
  if (byte_254ACDFA0 == 1)
  {
    v25[3] = v15;
    v25[4] = &off_24CCCD470;
    v25[0] = v18;
    swift_retain();
    v19 = sub_211971898(v16, (uint64_t)v25);
    sub_211931C34((uint64_t)v25);
    if (qword_254AC7B80 != -1)
      swift_once();
    v20 = sub_211A47748();
    sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
    v21 = sub_211A47724();
    v22 = sub_211A47D30();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_21190D000, v21, v22, "FMFManager: Entering Demo Mode", v23, 2u);
      MEMORY[0x212BE48A0](v23, -1, -1);
    }

    a3[3] = type metadata accessor for FMFDemoInteractionController();
    a3[4] = &off_24CCC8568;
    result = swift_release();
    v18 = v19;
  }
  else
  {
    a3[3] = v15;
    a3[4] = &off_24CCCD470;
  }
  *a3 = v18;
  return result;
}

_QWORD *sub_211913860(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v9 = v8;
  v17 = *(_QWORD *)(a8 + 16);
  sub_21192C6B8(a4, v9 + qword_254ADC878, &qword_254AC8870);
  *(_QWORD *)(v9 + qword_254ADC880) = a5;
  *(_QWORD *)(v9 + qword_254ADC888) = a6;
  *(_QWORD *)(v9 + qword_254ADC890) = a7;
  v18 = v9 + qword_254ADC898;
  *(_OWORD *)v18 = *(_OWORD *)a8;
  *(_QWORD *)(v18 + 16) = v17;
  *(_BYTE *)(v9 + qword_254ADC8A0) = a1;
  if ((a1 & 1) == 0)
  {
    v19 = type metadata accessor for FMFFriend();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a4, 1, v19) == 1)
    {
      if (a3 == 2)
        goto LABEL_7;
      goto LABEL_6;
    }
    if (a3 != 2)
    {
LABEL_6:
      sub_211A47F70();
      sub_211A48054();
      sub_211A479B8();
    }
  }
LABEL_7:
  v20 = sub_21193BD18();
  sub_21193CB88(a4);
  return v20;
}

uint64_t sub_211913ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v0 = sub_211A47D90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A47D60();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_211920E14();
  sub_211A477B4();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v6, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v0);
  result = sub_211A47DC0();
  qword_254ACDCB0 = result;
  return result;
}

uint64_t sub_211913C98()
{
  if (qword_254AC7B38 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A470F4();
  return swift_bridgeObjectRelease();
}

void sub_211913E20()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_254AC7B80 != -1)
    swift_once();
  v0 = sub_211A47748();
  sub_21194F3E0(v0, (uint64_t)qword_254ADC7E8);
  oslog = sub_211A47724();
  v1 = sub_211A47D30();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_21190D000, oslog, v1, "FMFRefreshController: refresh request completed after timer", v2, 2u);
    MEMORY[0x212BE48A0](v2, -1, -1);
  }

}

uint64_t sub_211913EEC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_211913F78()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  char *v10;
  uint64_t v11;
  const char *v12;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = sub_211A47E14();
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v10 = &v9;
        swift_getAssociatedTypeWitness();
        sub_21195E2C0(&qword_254ACC360);
        v6 = sub_211A48354();
        v0 = v6;
        if (v7 <= 0x3F)
        {
          v11 = *(_QWORD *)(v6 - 8) + 64;
          v12 = "\b";
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

uint64_t sub_21191415C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t started;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for FMSystemDirectoryUtilities();
  v0 = swift_allocObject();
  v1 = swift_slowAlloc();
  started = sysdir_start_search_path_enumeration_private();
  MEMORY[0x212BE49CC](started, v1);
  v3 = sub_211A479C4();
  v5 = v4;
  result = MEMORY[0x212BE48A0](v1, -1, -1);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v5;
  qword_254ADC660 = v0;
  return result;
}

uint64_t sub_2119141E0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_254AC7B38 != -1)
    swift_once();
  v1 = *(_QWORD *)(qword_254ADC660 + 16);
  v2 = *(_QWORD *)(qword_254ADC660 + 24);
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  result = swift_bridgeObjectRelease();
  qword_254ADC7B0 = v1;
  *(_QWORD *)algn_254ADC7B8 = v2;
  return result;
}

uint64_t sub_2119142A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[24];

  v2 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD *)(a1 + 128);
  v7 = a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21192C6B8(v7, (uint64_t)v5, &qword_254AC8870);
  v8 = v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  swift_beginAccess();
  swift_retain();
  sub_2119615D4((uint64_t)v5, v8);
  swift_endAccess();
  swift_release();
  swift_retain();
  sub_21193A740(0.0);
  return swift_release();
}

uint64_t sub_2119143A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_211A47274();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B48 != -1)
    swift_once();
  v17 = qword_254ACBE48;
  sub_211A47250();
  if (qword_254AC7B68 != -1)
    swift_once();
  v4 = qword_254ADC7B0;
  v5 = *(_QWORD *)algn_254ADC7B8;
  v6 = qword_254AC7B60;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = qword_254ACC630;
  v8 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v9 = objc_msgSend(v8, sel_bundleIdentifier);

  if (v9)
  {
    v10 = sub_211A47910();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  v13 = sub_211A09628(v10, v12, v7);
  swift_bridgeObjectRelease();
  type metadata accessor for FMFManagerConfiguration();
  v14 = swift_allocObject();
  result = sub_2119DC3DC(&v17, (uint64_t)v3, v4, v5, v13 & 1, (uint64_t)sub_211913448, 0, 0, 0, 0);
  qword_254ACBE50 = v14;
  return result;
}

uint64_t sub_211914590()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = sub_211A47E14();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = sub_211A47E14();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        AssociatedTypeWitness = sub_211A47E14();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t sub_2119146B4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

id static FMDemoManager.hasDemoModeAsset(for:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  void *v8;
  id v9;
  _BYTE v11[16];

  v2 = sub_211A4713C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11[15] = *a1;
  static FMDemoManager.assetURL(for:)();
  if (qword_254AC7BC0 != -1)
    swift_once();
  v7 = (void *)qword_254ACDFA8;
  sub_211A47124();
  v8 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_fileExistsAtPath_, v8);

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

uint64_t sub_211914810(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[3];

  swift_beginAccess();
  v2[5] = a2;
  swift_unknownObjectWeakAssign();
  v4 = v2[9];
  v5 = v2[10];
  v7[0] = v2[8];
  v7[1] = v4;
  v7[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211917040(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_2119148C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  aBlock[4] = sub_211962944;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC69A0;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v15[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v3, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t sub_211914A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v33 = sub_211A46F14();
  v10 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254ACD730);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)v32 - v20;
  v32[1] = a1;
  v32[2] = a2;
  v32[3] = a3;
  v32[4] = a4;
  v22 = sub_211A46F2C();
  v34 = a5;
  v24 = v23;
  if (v23 >> 60 == 15)
  {
    sub_211958C38(&qword_254ACD7A0);
    sub_21193AC74(&qword_254ACD7A8, &qword_254ACD7A0, (uint64_t)&unk_211A50FB0);
    v25 = (void *)swift_allocError();
    swift_willThrow();
    sub_211A473AC();
    sub_211A473D0();
    sub_211A47028();
    swift_allocObject();
    sub_211A4701C();
    sub_21193AC74(&qword_254ACD790, &qword_254ACD730, (uint64_t)&protocol conformance descriptor for FMDiskIO<A>.KeyPair);
    v27 = sub_211A47010();
    v29 = v28;
    swift_release();
    v35 = v27;
    v36 = v29;
    v30 = v33;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BE319E8], v33);
    sub_2119FCA50();
    sub_211A46F20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v30);

    sub_21193B8F8(v27, v29);
    v21 = v18;
  }
  else
  {
    v26 = v22;
    sub_211A47004();
    swift_allocObject();
    sub_211A46FF8();
    sub_21193AC74(&qword_254ACD7B0, &qword_254ACD730, (uint64_t)&protocol conformance descriptor for FMDiskIO<A>.KeyPair);
    sub_211A46FEC();
    sub_211964B98(v26, v24);
    swift_release();
  }
  return sub_21192DD68((uint64_t)v21, v34, &qword_254ACD730);
}

uint64_t sub_211914F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(_QWORD *)(v1 + 48);
  aBlock[4] = sub_211964870;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB970;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v15[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v3, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t sub_21191512C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_2119151F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_211958C38(&qword_254AC8C98);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211960F38(v2, qword_254ACDFB0);
  v5 = sub_21194F3E0(v0, (uint64_t)qword_254ACDFB0);
  if (qword_254AC7BC0 != -1)
    swift_once();
  v6 = (void *)qword_254ACDFA8;
  v7 = (void *)sub_211A478EC();
  v8 = objc_msgSend(v6, sel_containerURLForSecurityApplicationGroupIdentifier_, v7);

  if (v8)
  {
    sub_211A47118();

    v9 = sub_211A4713C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
  }
  else
  {
    v10 = sub_211A4713C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  return sub_211964BF4((uint64_t)v4, v5);
}

void sub_211915348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D18();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315394;
    if (a2)
      v11 = 1702195828;
    else
      v11 = 0x65736C6166;
    if (a2)
      v12 = 0xE400000000000000;
    else
      v12 = 0xE500000000000000;
    sub_211950A9C(v11, v12, &v15);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a4)
      v13 = 1702195828;
    else
      v13 = 0x65736C6166;
    if (a4)
      v14 = 0xE400000000000000;
    else
      v14 = 0xE500000000000000;
    sub_211950A9C(v13, v14, &v15);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v7, v8, "FMFRefreshController: connectionHandler didReceive topicToken: %s publicToken:%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v10, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21191558C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = sub_211958C38(&qword_254ACA090);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v18 - v9;
  sub_21192C6B8(v1, (uint64_t)&v18 - v9, &qword_254ACA090);
  if (swift_getEnumCaseMultiPayload())
    __asm { BR              X10 }
  v12 = sub_211958C38(&qword_254ACA098);
  v13 = &v10[*(int *)(v12 + 48)];
  v14 = (uint64_t)&v10[*(int *)(v12 + 64)];
  swift_retain();
  v15 = *(_QWORD *)sub_211A476DC();
  *v7 = a1;
  v7[1] = v15;
  v7[2] = MEMORY[0x24BEE4AF8];
  v7[3] = 0;
  v7[4] = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_2119A17AC((uint64_t)v7, v1, &qword_254ACA090);
  sub_211923EE8(v14, &qword_254ACA0A0);
  v16 = sub_211958C38(&qword_254ACA0A8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  return sub_211923EE8((uint64_t)v10, &qword_254ACA0B0);
}

void sub_211915708()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __break(1u);
}

void sub_211915728()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 8);
  swift_release();

  __break(1u);
}

uint64_t sub_211915740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_211939F3C(*(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), &qword_254AC7B98, (uint64_t *)&off_254ACDCB8, a1);
}

uint64_t sub_211915778(uint64_t a1, uint64_t a2)
{
  if (qword_254AC7B90 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1, a2);
  return sub_211A47DA8();
}

uint64_t FMFGenericResponseHandler.didUpdate(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = sub_211A4779C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = sub_2119620F8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB108;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v16 = v1;
  sub_211A477B4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v4, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_211915A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connectionQueue];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = a3;
  v17 = _Block_copy(aBlock);
  v18 = v3;
  sub_211A477B4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v15, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return swift_release();
}

uint64_t sub_211915BFC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v5 = sub_211A4779C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)&a3[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a1;
  aBlock[4] = sub_211962100;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB258;
  v17 = _Block_copy(aBlock);
  v18 = a3;
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v6, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v15, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return swift_release();
}

uint64_t sub_211915DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v3[6] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  v6 = sub_211A47E14();
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211915EC4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v14 = *((_QWORD *)a1 + 2);
  v15 = *((_QWORD *)a1 + 3);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  aBlock[4] = sub_211963C0C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC9B8;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_2119160D0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  _QWORD v5[6];

  v1 = *(NSObject **)(v0 + 32);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_211962214;
  *(_QWORD *)(v2 + 24) = v0;
  v5[4] = sub_2119213A8;
  v5[5] = v2;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_211921368;
  v5[3] = &unk_24CCC70B8;
  v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t FMLocationShiftingRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_211916204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9[2];

  v2 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2119393F8() & 1) != 0)
  {
    v6 = sub_211A47B8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = a1;
    swift_retain();
    sub_2119E1C34((uint64_t)v5, (uint64_t)&unk_254ACCB18, (uint64_t)v7);
LABEL_5:
    swift_release();
    goto LABEL_6;
  }
  if (*(_QWORD *)(a1 + 200))
  {
    swift_retain();
    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    sub_211A0F370(v9[1]);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  swift_retain();
  sub_2119182B0();
  swift_release();
  swift_retain();
  sub_2119190C0();
  return swift_release();
}

uint64_t sub_21191637C(uint64_t *a1)
{
  uint64_t v3;

  swift_retain();
  sub_211958C38(a1);
  sub_211A47DA8();
  swift_release();
  return v3;
}

uint64_t sub_2119163E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v7 = sub_211958C38(&qword_254ACA1D8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 0, 1, v7);
  v8 = sub_211A47B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_21192C6B8(v2, v1, &qword_254ACA1D0);
  v9 = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v6;
  *(_QWORD *)(v12 + 24) = v9;
  sub_21192DD68(v1, v12 + v10, &qword_254ACA1D0);
  *(_QWORD *)(v12 + v11) = v6;
  swift_retain_n();
  sub_2119E1B00(v5, (uint64_t)&unk_254ACA1E8, v12);
  swift_release();
  sub_211923EE8(v2, &qword_254ACA1D0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211916554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];
  _BYTE v19[64];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v17[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21192DD68(a1, (uint64_t)v19, &qword_254ACAA30);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  sub_21192DD68((uint64_t)v19, v14 + 24, &qword_254ACAA30);
  aBlock[4] = sub_211963BA4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC8C8;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t destroy for FMFMyInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119167AC(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t aBlock[6];
  uint64_t v37;

  v10 = sub_211A4779C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211A477D8();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 || !a1)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v24 = sub_211A47748();
    sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
    v25 = a2;
    v26 = a2;
    v27 = sub_211A47724();
    v28 = sub_211A47D30();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v37 = (uint64_t)a2;
      v31 = a2;
      sub_211958C38(&qword_254ACDE90);
      v32 = sub_211A47928();
      v37 = sub_211950A9C(v32, v33, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v27, v28, "FMFRefreshController: refreshClientRequest completed with error: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v30, -1, -1);
      MEMORY[0x212BE48A0](v29, -1, -1);
    }
    else
    {

    }
    return a3(0);
  }
  else
  {
    v34[1] = *(_QWORD *)(a5 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
    v35 = v18;
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a5;
    v21[3] = a1;
    v21[4] = a3;
    v21[5] = a4;
    aBlock[4] = (uint64_t)sub_21196292C;
    aBlock[5] = (uint64_t)v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCC6A18;
    v22 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_211A477B4();
    v37 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v20, v14, v22);
    _Block_release(v22);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v35);
    return swift_release();
  }
}

uint64_t sub_211916B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 88) + 704) == 1)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v8 = sub_211A47748();
    sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
    v9 = sub_211A47724();
    v10 = sub_211A47D30();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21190D000, v9, v10, "FMFManager: loaded cached data", v11, 2u);
      MEMORY[0x212BE48A0](v11, -1, -1);
    }

    v12 = (char *)(a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
    swift_beginAccess();
    v13 = *v12;
    *v12 = 1;
    sub_21191CFBC(v13);
  }
  v14 = *(_QWORD *)(a1 + 128);
  v15 = swift_retain();
  v16 = (void *)MEMORY[0x212BE42D0](v15);
  sub_211921CDC(v14, a2, a3, a4);
  objc_autoreleasePoolPop(v16);
  return swift_release();
}

uint64_t sub_211916CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_211A473DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void sub_211916D50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v2 = sub_211A477FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_254AC7B80 != -1)
    swift_once();
  v7 = sub_211A47748();
  sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
  v8 = sub_211A47724();
  v9 = sub_211A47D30();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_21190D000, v8, v9, "FMFRefreshController: refreshTimerFired", v10, 2u);
    MEMORY[0x212BE48A0](v10, -1, -1);
  }

  v11 = *(void **)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  *v6 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2);
  v12 = v11;
  LOBYTE(v11) = sub_211A47814();
  v13 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
  if ((v11 & 1) != 0)
  {
    v14 = (void *)MEMORY[0x212BE42D0](v13);
    sub_21191A348(a1, (uint64_t)sub_211913E20, 0);
    objc_autoreleasePoolPop(v14);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_211916EEC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFSecureLocationCtrl: start refreshing", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[17];
  v6 = v0[15];
  v7 = v0[16];

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v8 = (_QWORD *)swift_task_alloc();
  v0[19] = v8;
  *v8 = v0;
  v8[1] = sub_211961F78;
  return sub_211A4758C();
}

uint64_t sub_211917040(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_211A477D8();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v2;
  v15[3] = v12;
  v15[4] = v13;
  v15[5] = v14;
  aBlock[4] = sub_211964878;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB340;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v11, v7, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v19);
  return swift_release();
}

uint64_t sub_211917254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_211A4779C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v4 + qword_254ACDCF0);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  aBlock[4] = sub_211961CC4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD4E8;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v9, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_211917468(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_211A47DA8();
  if (v7 == 1)
  {
    if (MEMORY[0x212BE496C](a1 + 32))
    {
      v3 = *(_QWORD *)(a1 + 40);
      ObjectType = swift_getObjectType();
      sub_211958C38(&qword_254AC83D8);
      sub_211A47DA8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v7, ObjectType, v3);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    result = MEMORY[0x212BE496C](a1 + 32);
    if (result)
    {
      v5 = *(_QWORD *)(a1 + 40);
      v6 = swift_getObjectType();
      sub_211958C38(&qword_254ACABB8);
      sub_211A47DA8();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, v6, v5);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2119175CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  sub_211958C38(&qword_254AC9FD0);
  v2[7] = swift_task_alloc();
  sub_211958C38(qword_254AC8A78);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v2[11] = swift_task_alloc();
  v3 = sub_211A47400();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v4 = sub_211A47424();
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  sub_211A4743C();
  v2[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119176F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21195A23C(a10, a11, a12);
    sub_211933F60(a46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_211917850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing);
    v10 = v6;
    if (v7)
      v8 = 1702195828;
    else
      v8 = 0x65736C6166;
    if (v7)
      v9 = 0xE400000000000000;
    else
      v9 = 0xE500000000000000;
    sub_211950A9C(v8, v9, &v10);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFRefreshController: auto refreshing set to: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v6, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_211917A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = sub_211A47B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v5;
  v6[5] = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 136) = sub_2119E1B00(v1, (uint64_t)&unk_254ACA210, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211917B4C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t result;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21190D000, v7, v8, "FMFRefreshController: initClientRequest completed", v9, 2u);
    MEMORY[0x212BE48A0](v9, -1, -1);
  }

  if (a2 || !a1)
  {
    v14 = a2;
    v15 = a2;
    v16 = sub_211A47724();
    v17 = sub_211A47D24();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = a2;
      sub_211958C38(&qword_254ACDE90);
      v21 = sub_211A47928();
      sub_211950A9C(v21, v22, &v23);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v16, v17, "FMFRefreshController: initClient completed with error: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v19, -1, -1);
      MEMORY[0x212BE48A0](v18, -1, -1);
    }
    else
    {

    }
    result = MEMORY[0x212BE496C](a3 + 32);
    if (result)
    {
      sub_2119E9C78(a2);
      result = swift_unknownObjectRelease();
    }
  }
  else
  {
    *(_BYTE *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 1;
    swift_retain();
    v10 = sub_211A47724();
    v11 = sub_211A47D30();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_21190D000, v10, v11, "FMFRefreshController: received snapshot initClient response", v12, 2u);
      MEMORY[0x212BE48A0](v12, -1, -1);
    }

    sub_21191AC58(a1);
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isSnapshotMode) & 1) == 0)
      sub_21193A740(0.0);
    result = swift_release();
  }
  *(_BYTE *)(a3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) = 0;
  return result;
}

uint64_t sub_211917E70(_QWORD *a1)
{
  char *v2;
  char v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t ObjectType;
  Swift::OpaquePointer friends;

  v2 = (char *)a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized;
  swift_beginAccess();
  v3 = *v2;
  *v2 = 1;
  sub_21191CFBC(v3);
  v4 = (void *)a1[23];
  if (v4)
  {
    v5 = qword_254AC7B80;
    v6 = v4;
    if (v5 != -1)
      swift_once();
    v7 = sub_211A47748();
    sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
    v8 = sub_211A47724();
    v9 = sub_211A47D30();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21190D000, v8, v9, "FMFMyLocationController: Starting to update my location", v10, 2u);
      MEMORY[0x212BE48A0](v10, -1, -1);
    }

    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager], sel_startUpdatingLocation);
  }
  if (*(_BYTE *)(a1[7] + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) == 1)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v11 = sub_211A47748();
    sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
    v12 = sub_211A47724();
    v13 = sub_211A47D30();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21190D000, v12, v13, "FMFManager: ingesting friends from fmfd", v14, 2u);
      MEMORY[0x212BE48A0](v14, -1, -1);
    }

    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    FMFManager.didReceive(friends:fromServer:)(friends, 1);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  result = MEMORY[0x212BE496C](a1 + 4);
  if (result)
  {
    v16 = a1[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v16 + 16))(a1, ObjectType, v16);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21191811C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211918158()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211918184(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119181B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119181E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21191824C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_211918278(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_2119182B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v17[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A477D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21190D000, v12, v13, "FMFDataManager: purging old locations", v14, 2u);
    MEMORY[0x212BE48A0](v14, -1, -1);
  }

  aBlock[4] = sub_211963BDC;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC6C0;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v10, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t sub_211918530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v17[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A477D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21190D000, v12, v13, "FMFManager: didInitialize", v14, 2u);
    MEMORY[0x212BE48A0](v14, -1, -1);
  }

  aBlock[4] = sub_2119645B8;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB7B8;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v10, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t initializeWithCopy for FMFMyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_21191881C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint8_t *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  _BOOL8 v22;
  void *v23;
  void *v24;

  v2 = v1;
  switch(a1)
  {
    case 0:
      if (qword_254AC7B80 != -1)
        swift_once();
      v12 = sub_211A47748();
      sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
      v8 = sub_211A47724();
      v13 = sub_211A47D30();
      if (!os_log_type_enabled(v8, v13))
        goto LABEL_16;
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21190D000, v8, v13, "FMFMyLocationController: location manager didChangeAuthorization: NOT DETERMINED", v14, 2u);
      v11 = v14;
      goto LABEL_15;
    case 1:
      if (qword_254AC7B80 != -1)
        swift_once();
      v15 = sub_211A47748();
      sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
      v16 = sub_211A47724();
      v17 = sub_211A47D30();
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_26;
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = "FMFMyLocationController: location manager didChangeAuthorization: RESTRICTED";
      break;
    case 2:
      if (qword_254AC7B80 != -1)
        swift_once();
      v20 = sub_211A47748();
      sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
      v16 = sub_211A47724();
      v17 = sub_211A47D30();
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_26;
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = "FMFMyLocationController: location manager didChangeAuthorization: DENIED";
      break;
    case 3:
    case 4:
      if (qword_254AC7B80 != -1)
        swift_once();
      v3 = sub_211A47748();
      sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
      v4 = sub_211A47724();
      v5 = sub_211A47D30();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_21190D000, v4, v5, "FMFMyLocationController: location manager didChangeAuthorization: AUTHORIZED", v6, 2u);
        MEMORY[0x212BE48A0](v6, -1, -1);
      }

      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager), sel_startUpdatingLocation);
      goto LABEL_27;
    default:
      if (qword_254AC7B80 != -1)
        swift_once();
      v7 = sub_211A47748();
      sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
      v8 = sub_211A47724();
      v9 = sub_211A47D30();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v10 = 67109120;
        sub_211A47E2C();
        _os_log_impl(&dword_21190D000, v8, v9, "FMFMyLocationController: location manager didChangeAuthorization: UNKNOWN: %d", v10, 8u);
        v11 = v10;
LABEL_15:
        MEMORY[0x212BE48A0](v11, -1, -1);
      }
LABEL_16:

      goto LABEL_27;
  }
  _os_log_impl(&dword_21190D000, v16, v17, v19, v18, 2u);
  MEMORY[0x212BE48A0](v18, -1, -1);
LABEL_26:

  sub_211A02934();
LABEL_27:
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager), sel_accuracyAuthorization) != 0;
  v23 = (void *)sub_211A478EC();
  v24 = (void *)sub_211A478EC();
  objc_msgSend(v21, sel_setBool_forKey_inDomain_, v22, v23, v24);

}

uint64_t sub_211918C90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = v1;
  sub_211958C38(&qword_254AC9FD0);
  v2[9] = swift_task_alloc();
  sub_211958C38(qword_254AC8A78);
  v2[10] = swift_task_alloc();
  v2[11] = sub_211958C38(&qword_254ACA010);
  v2[12] = swift_task_alloc();
  v3 = *(_QWORD *)(sub_211958C38(&qword_254ACA018) - 8);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 + 64);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v4 = sub_211A47400();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v5 = type metadata accessor for FMFFriend();
  v2[21] = v5;
  v2[22] = *(_QWORD *)(v5 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211918DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t i;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](a1, a2);
  v7 = sub_211A47B44();
  swift_bridgeObjectRetain();
  MEMORY[0x212BE47C8](MEMORY[0x24BEE12F0], v7);
  v8 = sub_211A47FD0();
  if (qword_254AC7B80 != -1)
    swift_once();
  v9 = sub_211A47748();
  sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v10 = sub_211A47724();
  v11 = sub_211A47D30();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v18 = v5;
    *(_DWORD *)v12 = 134217984;
    v19 = MEMORY[0x212BE3934](v8, v3);
    v5 = v18;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v10, v11, "FMImageCache: Preloading data for %ld requests.", v12, 0xCu);
    MEMORY[0x212BE48A0](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (!MEMORY[0x212BE394C](v8, v3))
    return swift_bridgeObjectRelease();
  for (i = 0; ; ++i)
  {
    v14 = sub_211A47B08();
    sub_211A47AD8();
    if ((v14 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * i, v3);
      v15 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_15;
      goto LABEL_10;
    }
    result = sub_211A47F88();
    if (v5 != 8)
      break;
    v19 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v6, &v19, v3);
    swift_unknownObjectRelease();
    v15 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_15:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_10:
    sub_211A353F4((uint64_t)v6, 0, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v15 == MEMORY[0x212BE394C](v8, v3))
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2119190C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "FMFRefreshController: Start refreshing.", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  v6 = *(NSObject **)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21196297C;
  *(_QWORD *)(v7 + 24) = v1;
  v10[4] = sub_2119213A8;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_211921368;
  v10[3] = &unk_24CCC6B30;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v8);
  _Block_release(v8);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_211919280()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_211A478EC();
  v5 = (void *)sub_211A478EC();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  v6 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v6);
  if (result)
  {
    v8 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken);
    v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken + 8);
    v12 = *v1;
    v13 = v1[1];
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

_QWORD *sub_211919418(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31[45];
  _BYTE v32[353];
  int v33;
  char v34;

  v3 = v1;
  v5 = sub_211958C38(&qword_254ACBD00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v29 = a1;
  sub_211931DB4(a1, v10);
  sub_2119626F8();
  sub_211A48360();
  if (v2)
  {
    v14 = v3;
    v15 = (uint64_t)v29;
    type metadata accessor for FMFMyLocationResponse();
    swift_deallocPartialClassInstance();
    v16 = v15;
  }
  else
  {
    v11 = v6;
    v34 = 0;
    sub_21193215C();
    sub_211A48174();
    memcpy(v3 + 2, v32, 0x161uLL);
    LOBYTE(v31[0]) = 1;
    sub_211A4815C();
    v3[47] = v12;
    LOBYTE(v31[0]) = 2;
    sub_211A4815C();
    v28 = v5;
    v3[48] = v13;
    v14 = v3;
    if (qword_254AC7B80 != -1)
      swift_once();
    v18 = sub_211A47748();
    sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v33 = v21;
      v22 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31[0] = v27;
      *(_DWORD *)v22 = 136315138;
      v26 = v22 + 4;
      v23 = sub_211921190();
      v30 = sub_211950A9C(v23, v24, v31);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v19, (os_log_type_t)v33, "FMFMyLocationResponse: initialized with coder %s", v22, 0xCu);
      v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v25, -1, -1);
      MEMORY[0x212BE48A0](v22, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v28);
    v16 = (uint64_t)v29;
  }
  sub_211931C34(v16);
  return v14;
}

uint64_t sub_211919784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v27 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v12 = sub_211A47748();
  sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v13 = sub_211A47724();
  v14 = sub_211A47D18();
  if (os_log_type_enabled(v13, v14))
  {
    v24 = v2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25 = v9;
    v17 = (_QWORD *)v16;
    *(_DWORD *)v15 = 138412290;
    v26 = v8;
    v18 = sub_211A47844();
    aBlock[0] = v18;
    v8 = v26;
    sub_211A47E2C();
    *v17 = v18;
    v2 = v24;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v13, v14, "FMFRefreshController: connectionHandler didReceive message: %@", v15, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    v19 = v17;
    v9 = v25;
    MEMORY[0x212BE48A0](v19, -1, -1);
    MEMORY[0x212BE48A0](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = v2;
  aBlock[4] = sub_211962974;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC67C0;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v22 = v27;
  sub_211A477B4();
  v29 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v22, v7, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
  return swift_release();
}

uint64_t sub_211919B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(v1, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 80));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v4 + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(char **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48));
    sub_211919C54(v7, v6);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v8;
    *v8 = v0;
    v8[1] = sub_21196300C;
    return sub_211A482AC();
  }
}

uint64_t sub_211919C54@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t result;
  double v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t AssociatedConformanceWitness;
  char *v64;
  char *v65;

  v60 = a2;
  v65 = a1;
  v3 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v58 = AssociatedTypeWitness;
  v6 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v5);
  v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v59 = (char *)&v54 - v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v55 = (char *)&v54 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v14 = sub_211A47E14();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v54 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v64 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v26 = (char *)&v54 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)&v54 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (char *)&v54 - v32;
  v62 = v3;
  AssociatedConformanceWitness = v2;
  v35 = v34;
  sub_211A482A0();
  v36 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, v61 + *((int *)v65 + 11), v14);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v33, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v19, 1, v13) == 1)
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v37(v30, v26, v13);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v13);
    v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v37(v30, v19, v13);
  }
  v38 = v36 + *((int *)v65 + 9);
  swift_getAssociatedConformanceWitness();
  v39 = v64;
  sub_211A4803C();
  if ((sub_211A478D4() & 1) == 0)
  {
    v53 = *(void (**)(char *, uint64_t))(v35 + 8);
    v53(v30, v13);
    v53(v33, v13);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v37)(v60, v39, v13);
  }
  v65 = v30;
  v41 = v57;
  v40 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v38, v58);
  v42 = v56;
  sub_211A48048();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_211A48078();
  v44 = v43;
  v45 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  result = v45(v42, v40);
  v47 = ceil(v44);
  if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) != 0)
  {
    if (v47 > -9.22337204e18)
    {
      if (v47 < 9.22337204e18)
      {
        v48 = v39;
        v49 = v55;
        v50 = v59;
        sub_211A48084();
        v45(v50, v40);
        v51 = v65;
        sub_211A4803C();
        v45(v49, v40);
        v52 = *(void (**)(char *, uint64_t))(v35 + 8);
        v52(v48, v13);
        v52(v51, v13);
        return ((uint64_t (*)(char *, uint64_t))v52)(v33, v13);
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_21191A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for FMFFriend();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

void sub_21191A134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_211958C38(&qword_254ACA090);
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_21192C6B8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_254ACA090);
  v4 = (char *)&loc_21191A1B8 + *((int *)qword_21199BC10 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_21191A1C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;

  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)v2[2];
  if (v2[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v2[3];
    sub_211923EE8((uint64_t)v1, &qword_254ACA090);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_21190FD60(0, v5[2] + 1, 1, v5);
    v8 = v5[2];
    v9 = v5[3];
    v10 = v8 + 1;
    if (v8 >= v9 >> 1)
    {
      v11 = v5;
      v12 = v5[2];
      v13 = sub_21190FD60((_QWORD *)(v9 > 1), v8 + 1, 1, v11);
      v8 = v12;
      v5 = v13;
    }
    v5[2] = v10;
    v5[v8 + 4] = v0;
    sub_211923EE8((uint64_t)v1, &qword_254ACA090);
    *v1 = v4;
    v1[1] = v3;
    v1[2] = v5;
    v1[3] = v7;
    v1[4] = 0;
    swift_storeEnumTagMultiPayload();
    return 0;
  }
  return v0;
}

uint64_t sub_21191A348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t refreshed;
  _QWORD v30[3];

  v6 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v30[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_21190D000, v11, v12, "FMFRefreshController: sending refreshClient request…", v13, 2u);
    MEMORY[0x212BE48A0](v13, -1, -1);
  }

  v14 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  v15 = *(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason);
  swift_beginAccess();
  sub_211911AB0(v14, (uint64_t)v9);
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  v17 = *v16;
  v18 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  v19 = *v18;
  v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  swift_beginAccess();
  v21 = *v20;
  v30[0] = MEMORY[0x24BEE4AF8];
  v30[1] = MEMORY[0x24BEE4AF8];
  v30[2] = MEMORY[0x24BEE4AF8];
  type metadata accessor for FMFInitRefreshClientRequest();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_211913860(0, 0, v15, (uint64_t)v9, v17, v19, v21, (uint64_t)v30);
  v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
  v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
  sub_211931DB4((_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v23);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a2;
  v25[3] = a3;
  v25[4] = a1;
  v26 = *(void (**)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t))(v24 + 64);
  refreshed = type metadata accessor for FMFInitRefreshClientResponse();
  swift_retain();
  swift_retain();
  v26(v22, sub_211962938, v25, refreshed, v23, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_21191A61C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  if (*a1)
    return 0;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_standardUserDefaults);
  v8 = (void *)sub_211A478EC();
  v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  if (v9)
  {
    sub_211A47E8C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_21192DD68((uint64_t)v21, (uint64_t)v22, &qword_254AC97C0);
  if (!v23)
  {
    sub_211923EE8((uint64_t)v22, &qword_254AC97C0);
LABEL_13:
    if (!a3)
      return 1;
LABEL_14:
    v10 = objc_msgSend(v6, sel_standardUserDefaults);
    v11 = (void *)sub_211A478EC();
    v12 = (void *)sub_211A478EC();
    objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

    v13 = objc_msgSend(v6, sel_standardUserDefaults);
    objc_msgSend(v13, sel_synchronize);

    return 1;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  if (!a3)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v19 != a2 || v20 != a3)
  {
    v14 = sub_211A48258();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_18;
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  if (qword_254AC7B80 != -1)
    swift_once();
  v15 = sub_211A47748();
  sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
  v16 = sub_211A47724();
  v17 = sub_211A47D30();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_21190D000, v16, v17, "Location alert has already been displayed. Not displaying again.", v18, 2u);
    MEMORY[0x212BE48A0](v18, -1, -1);
  }

  return 0;
}

_QWORD *sub_21191A8F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = v5;
  v30 = a3;
  v31 = a5;
  v27 = a4;
  v28 = a1;
  v29 = a2;
  v7 = sub_211A47D90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A47D60();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12, v14);
  v15 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v15, v16);
  v26 = sub_211920E14();
  sub_211A477B4();
  v33 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v13, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC74((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE5750], v7);
  v5[2] = sub_211A47DC0();
  if (qword_254AC7B80 != -1)
    swift_once();
  v17 = sub_211A47748();
  sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
  v18 = v27;
  swift_bridgeObjectRetain_n();
  v19 = sub_211A47724();
  v20 = sub_211A47D30();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v33 = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    v23 = v30;
    v32 = sub_211950A9C(v30, v18, &v33);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v19, v20, "FMDiskIO: init with file name: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v22, -1, -1);
    MEMORY[0x212BE48A0](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v23 = v30;
  }
  v24 = v29;
  v6[3] = v28;
  v6[4] = v24;
  v6[5] = v23;
  v6[6] = v18;
  sub_21192DD68(v31, (uint64_t)v6 + *(_QWORD *)(*v6 + 128), &qword_254ACD728);
  return v6;
}

double sub_21191AC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double result;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BYTE v12[32];

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = sub_21195BB68(0xD000000000000017, 0x8000000211A53CD0);
    if ((v6 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)v12);
      if ((swift_dynamicCast() & 1) != 0)
      {
        result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval) = (double)v11;
      }
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = sub_21195BB68(0xD000000000000017, 0x8000000211A53CF0);
    if ((v8 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v3 + 56) + 32 * v7, (uint64_t)v12);
      if ((swift_dynamicCast() & 1) != 0)
      {
        result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval) = (double)v11;
      }
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    v9 = sub_21195BB68(0xD000000000000014, 0x8000000211A53D10);
    if ((v10 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v3 + 56) + 32 * v9, (uint64_t)v12);
      if ((swift_dynamicCast() & 1) != 0)
      {
        result = (double)v11;
        *(double *)(v2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval) = (double)v11;
      }
    }
  }
  return result;
}

uint64_t sub_21191ADE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v1 = v0;
  v2 = sub_211958C38(&qword_254ACA0A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211958C38(&qword_254ACA0A8);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_211958C38(&qword_254ACA068);
  MEMORY[0x24BDAC7A8](v42, v8);
  v40 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACA038);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211958C38(&qword_254ACA0D8);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_211958C38(&qword_254ACA0B0);
  v41 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_211958C38(&qword_254ACA188);
  MEMORY[0x24BDAC7A8](v39, v24);
  v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v1, v10);
  v27 = sub_211958C38(&qword_254ACA060);
  sub_21193AC74(&qword_254ACA198, &qword_254ACA038, MEMORY[0x24BEE7030]);
  sub_211A4806C();
  sub_211958C38(&qword_254ACA1A0);
  v28 = *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80);
  v29 = (v28 + 32) & ~v28;
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_211A4A230;
  v31 = sub_211958C38(&qword_254ACA028);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30 + v29, 1, 2, v31);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v19, v15);
  *(_QWORD *)&v23[*(int *)(v20 + 52)] = v30;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v32 = sub_211958C38(&qword_254ACA070);
  sub_21192C6B8(v1 + *(int *)(v32 + 68), v40, &qword_254ACA068);
  v33 = &v26[*(int *)(v39 + 52)];
  sub_21193AC74(&qword_254ACA1B0, &qword_254ACA068, (uint64_t)&unk_211A4E8F8);
  sub_211A4806C();
  sub_21192DD68((uint64_t)v23, (uint64_t)v26, &qword_254ACA0B0);
  sub_21192C6B8((uint64_t)v26, (uint64_t)v23, &qword_254ACA0B0);
  v34 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v33, v45);
  v35 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v46, 1, 1, v20);
  sub_211958C38(&qword_254ACA1B8);
  swift_allocObject();
  v36 = sub_21192DAA0((uint64_t)v23, v34, v35);
  sub_211958C38(&qword_254ACA1C0);
  *(_QWORD *)(swift_allocObject() + 16) = v36;
  sub_211923EE8((uint64_t)v26, &qword_254ACA188);
  return *(_QWORD *)(v1 + *(int *)(v32 + 72));
}

uint64_t FMFAddress.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char v103;
  uint64_t v104;

  v5 = sub_211958C38(&qword_254ACEEF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211960200();
  sub_211A48360();
  if (v2)
  {
    v10 = (uint64_t)a1;
  }
  else
  {
    v102 = a1;
    sub_211958C38(&qword_254AC8378);
    v103 = 0;
    sub_21194D07C((unint64_t *)&qword_254AC8380, &qword_254AC8378, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_211A48174();
    v100 = v104;
    LOBYTE(v104) = 1;
    v11 = sub_211A48144();
    v98 = v12;
    v99 = v11;
    LOBYTE(v104) = 2;
    v13 = sub_211A48144();
    v96 = v14;
    v97 = v13;
    LOBYTE(v104) = 3;
    v15 = sub_211A48144();
    v94 = v16;
    v95 = v15;
    LOBYTE(v104) = 4;
    v17 = sub_211A48144();
    v92 = v18;
    v93 = v17;
    LOBYTE(v104) = 5;
    v19 = sub_211A48144();
    v90 = v20;
    v91 = v19;
    LOBYTE(v104) = 6;
    v21 = sub_211A48144();
    v88 = v22;
    v89 = v21;
    LOBYTE(v104) = 7;
    v23 = sub_211A48144();
    v86 = v24;
    v87 = v23;
    LOBYTE(v104) = 8;
    v25 = sub_211A48144();
    v84 = v26;
    v85 = v25;
    LOBYTE(v104) = 9;
    v27 = sub_211A48144();
    v82 = v28;
    v83 = v27;
    LOBYTE(v104) = 10;
    v29 = sub_211A48144();
    v80 = v30;
    v81 = v29;
    v103 = 11;
    sub_211A48174();
    v68 = v104;
    LOBYTE(v104) = 12;
    v31 = sub_211A48144();
    v78 = v32;
    v79 = v31;
    LOBYTE(v104) = 13;
    v33 = sub_211A48144();
    v76 = v34;
    v77 = v33;
    LOBYTE(v104) = 14;
    v35 = sub_211A48144();
    v74 = v36;
    v75 = v35;
    LOBYTE(v104) = 15;
    v37 = sub_211A48144();
    v72 = v38;
    v73 = v37;
    LOBYTE(v104) = 16;
    v39 = sub_211A48144();
    v101 = v6;
    v70 = v40;
    v71 = v39;
    LOBYTE(v104) = 17;
    v41 = sub_211A48144();
    v43 = v42;
    v69 = v41;
    LOBYTE(v104) = 18;
    v44 = sub_211A48144();
    v46 = v45;
    LOBYTE(v104) = 19;
    v47 = sub_211A48144();
    v49 = v48;
    (*(void (**)(char *, uint64_t))(v101 + 8))(v9, v5);
    v50 = v99;
    *a2 = v100;
    a2[1] = v50;
    v51 = v97;
    a2[2] = v98;
    a2[3] = v51;
    v52 = v95;
    a2[4] = v96;
    a2[5] = v52;
    v53 = v93;
    a2[6] = v94;
    a2[7] = v53;
    v54 = v91;
    a2[8] = v92;
    a2[9] = v54;
    v55 = v89;
    a2[10] = v90;
    a2[11] = v55;
    v56 = v87;
    a2[12] = v88;
    a2[13] = v56;
    v57 = v85;
    a2[14] = v86;
    a2[15] = v57;
    v58 = v83;
    a2[16] = v84;
    a2[17] = v58;
    v59 = v81;
    a2[18] = v82;
    a2[19] = v59;
    v60 = v68;
    a2[20] = v80;
    a2[21] = v60;
    v61 = v78;
    a2[22] = v79;
    a2[23] = v61;
    v62 = v76;
    a2[24] = v77;
    a2[25] = v62;
    v63 = v74;
    a2[26] = v75;
    a2[27] = v63;
    v64 = v72;
    a2[28] = v73;
    a2[29] = v64;
    v65 = v70;
    a2[30] = v71;
    a2[31] = v65;
    a2[32] = v69;
    a2[33] = v43;
    a2[34] = v44;
    a2[35] = v46;
    a2[36] = v47;
    a2[37] = v49;
    v10 = (uint64_t)v102;
  }
  return sub_211931C34(v10);
}

uint64_t sub_21191B96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_211958C38(&qword_254ACA028);
  sub_21193AC74(&qword_254ACA030, &qword_254ACA010, MEMORY[0x24BEE6AA8]);
  sub_211A48210();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = sub_211958C38(&qword_254ACA038);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 0, 1, v7);
  v8 = sub_211A47B8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_21192C6B8(v2, v1, &qword_254ACA018);
  v9 = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v6;
  *(_QWORD *)(v12 + 24) = v9;
  sub_21192DD68(v1, v12 + v10, &qword_254ACA018);
  *(_QWORD *)(v12 + v11) = v6;
  swift_retain_n();
  sub_2119E1B00(v5, (uint64_t)&unk_254ACA050, v12);
  swift_release();
  sub_211923EE8(v2, &qword_254ACA018);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21191BB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD *v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16[3];
  uint64_t v17;
  uint64_t v18;

  v7 = objc_allocWithZone(MEMORY[0x24BE2FE68]);
  v8 = (void *)sub_211A478EC();
  v9 = objc_msgSend(v7, sel_initWithDescription_andTimeout_, v8, 120.0);

  sub_21193719C(a2);
  v17 = type metadata accessor for FMFMyLocationRequest();
  v18 = MEMORY[0x24BE301B0];
  v16[0] = a2;
  v15[3] = v17;
  v15[4] = sub_211910908(&qword_254ACDD60, (uint64_t (*)(uint64_t))type metadata accessor for FMFMyLocationRequest, (uint64_t)&unk_211A4CBF0);
  v10 = (void *)objc_opt_self();
  swift_retain_n();
  v11 = objc_msgSend(v10, sel_processInfo, a2);
  v12 = objc_msgSend(v11, sel_processName);

  sub_211A47910();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v9;
  swift_retain();
  v14 = v9;
  sub_211A47370();
  swift_bridgeObjectRelease();
  swift_release();
  sub_211931C34((uint64_t)v15);
  sub_211931C34((uint64_t)v16);
  objc_msgSend(v14, sel_wait);

}

uint64_t sub_21191BD54()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  swift_beginAccess();
  return *v1;
}

id sub_21191BD98(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD, void *), uint64_t a5, void *a6)
{
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;

  if (a3)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v9 = sub_211A47748();
    sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
    v10 = a3;
    v11 = a3;
    v12 = sub_211A47724();
    v13 = sub_211A47D30();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v25 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getErrorValue();
      v16 = sub_211A482DC();
      sub_211950A9C(v16, v17, &v25);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v12, v13, "FMFServerInteractionController: didn't complete because of error: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v15, -1, -1);
      MEMORY[0x212BE48A0](v14, -1, -1);
    }
    else
    {

    }
    a4(0, a3);
    return objc_msgSend(a6, sel_signal);
  }
  else
  {
    if (a2 >> 60 != 15)
      __asm { BR              X10 }
    if (qword_254AC7B80 != -1)
      swift_once();
    v19 = sub_211A47748();
    sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
    v20 = sub_211A47724();
    v21 = sub_211A47D30();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_21190D000, v20, v21, "FMFServerInteractionController: received empty data", v22, 2u);
      MEMORY[0x212BE48A0](v22, -1, -1);
    }

    sub_211A011B8();
    v23 = (void *)swift_allocError();
    *v24 = 1;
    a4(0, v23);

    return objc_msgSend(a6, sel_signal);
  }
}

char *sub_21191C544(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  uint64_t v31;

  v2 = v1;
  v29 = a1;
  v3 = sub_211A47D90();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A47D60();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v7, v9);
  v10 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v10, v11);
  *(_QWORD *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = 0;
  v12 = &v1[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation];
  v13 = type metadata accessor for FMFLocation();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation], 1, 1, v13);
  v15 = OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationShifter;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  v16 = v2;
  *(_QWORD *)&v2[v15] = FMLocationShifter.init()();
  v17 = &v16[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v18 = &v16[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue;
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  sub_211A477B4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v8, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v6, *MEMORY[0x24BEE5750], v28);
  *(_QWORD *)&v16[v19] = sub_211A47DC0();
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA88]), sel_init);
  *(_QWORD *)&v16[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager] = v20;
  v21 = v29;
  sub_2119299DC(v29, (uint64_t)&v16[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController]);

  v22 = (objc_class *)type metadata accessor for FMFMyLocationController();
  v30.receiver = v16;
  v30.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v30, sel_init);
  v24 = *(void **)&v23[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager];
  v25 = v23;
  objc_msgSend(v24, sel_setDelegate_, v25);
  objc_msgSend(v24, sel_setDesiredAccuracy_, 100.0);
  objc_msgSend(v24, sel_setDistanceFilter_, 100.0);

  sub_211931C34(v21);
  return v25;
}

uint64_t sub_21191C8C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v4 = v3;
  v8 = sub_211A47748();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v29[0] = v27;
    *(_DWORD *)v16 = 136315394;
    if (!a2)
    {
LABEL_13:
      result = swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
    v24 = v9;
    v25 = v4;
    swift_bridgeObjectRetain();
    v28 = sub_211950A9C(a1, a2, v29);
    sub_211A47E2C();
    result = swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2112;
    if (!a3)
    {
LABEL_14:
      __break(1u);
      return result;
    }
    v18 = sub_211A47844();
    v28 = v18;
    sub_211A47E2C();
    v19 = v26;
    *v26 = v18;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v14, v15, "FMAPSConnectionHandler: Received message for topic: %s \n Message: %@", (uint8_t *)v16, 0x16u);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v19, -1, -1);
    v20 = v27;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v20, -1, -1);
    MEMORY[0x212BE48A0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v8);
    v4 = v25;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v21 = v4 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v21);
  if (!result)
    return result;
  if (!a3)
  {
    __break(1u);
    goto LABEL_13;
  }
  v22 = *(_QWORD *)(v21 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v4, a3, ObjectType, v22);
  return swift_unknownObjectRelease();
}

uint64_t FMFMyInfo.debugDescription.getter()
{
  uint64_t v0;

  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x212BE38C8](v0, MEMORY[0x24BEE0D00]);
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0;
}

uint64_t sub_21191CE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  result = a22;
  if (a22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21191CFBC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v2 + 48);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  *(_BYTE *)(v15 + 24) = a1;
  aBlock[4] = sub_211939B94;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB6C8;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_21191D1B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;

  v1 = *(void **)(v0 + qword_254ADC7D0);
  objc_msgSend(v1, sel_coordinate);
  v2 = MEMORY[0x24BEE13C8];
  v15 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v14 = v3;
  sub_21193DB98(&v14, v13);
  v4 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21193D704(v13, 0x656475746974616CLL, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_coordinate);
  v15 = v2;
  *(_QWORD *)&v14 = v6;
  sub_21193DB98(&v14, v13);
  v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_21193D704(v13, 0x64757469676E6F6CLL, 0xE900000000000065, v7);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_horizontalAccuracy);
  v15 = v2;
  *(_QWORD *)&v14 = v8;
  sub_21193DB98(&v14, v13);
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_21193D704(v13, 0xD000000000000012, 0x8000000211A52610, v9);
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_verticalAccuracy);
  v15 = v2;
  *(_QWORD *)&v14 = v10;
  sub_21193DB98(&v14, v13);
  v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_21193D704(v13, 0xD000000000000010, 0x8000000211A55D60, v11);
  swift_bridgeObjectRelease();
  v15 = sub_211958C38(&qword_254AC97B8);
  *(_QWORD *)&v14 = v4;
  swift_beginAccess();
  sub_21193C870((uint64_t)&v14, 0x6E6F697461636F6CLL, 0xE800000000000000);
  return swift_endAccess();
}

uint64_t sub_21191D3E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = *((_BYTE *)a1 + 8);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  *(_QWORD *)(v16 + 24) = v14;
  *(_BYTE *)(v16 + 32) = v15;
  aBlock[4] = sub_211938B60;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC968;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_21191D5E8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v2 = v1;
  v23 = a1;
  v22 = sub_211A47D90();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A47D60();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v7, v9);
  v10 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v10, v11);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v1 + 24) = 0x8000000211A57DA0;
  *(_QWORD *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
  *(_BYTE *)(v1 + 41) = 0;
  sub_211920E14();
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  sub_211A477C0();
  v24 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v8, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE5750], v22);
  *(_QWORD *)(v1 + 64) = sub_211A47DC0();
  *(_QWORD *)(v1 + 80) = 0;
  swift_unknownObjectWeakInit();
  sub_211958C38((uint64_t *)&unk_254ACC540);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_211A4A230;
  if (qword_254AC7B68 != -1)
    swift_once();
  v13 = *(_QWORD *)algn_254ADC7B8;
  *(_QWORD *)(v12 + 32) = qword_254ADC7B0;
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v2 + 88) = v12;
  v14 = qword_254AC7B80;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = sub_211A47748();
  sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
  v16 = sub_211A47724();
  v17 = sub_211A47D30();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_21190D000, v16, v17, "FMFGarbageCollector: initialized", v18, 2u);
    MEMORY[0x212BE48A0](v18, -1, -1);
  }

  *(_BYTE *)(v2 + 40) = v23 & 1;
  sub_211926D64();
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v19, sel_addObserver_selector_name_object_, v2, sel_scheduleAccountVerificationWithNotification_, *MEMORY[0x24BDB3FB0], 0);

  return v2;
}

void *sub_21191D978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t ObjectType;
  void (*v37)(void *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t aBlock[6];
  objc_super v72;

  v68 = a6;
  v69 = a5;
  v66 = a3;
  v67 = a4;
  v64 = a1;
  v65 = a2;
  v7 = sub_211A4779C();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v57 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_211A47D90();
  v10 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63, v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211A47D60();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v14, v16);
  v56 = sub_211A477D8();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56, v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v6;
  *(_QWORD *)&v6[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v62 = OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connectionQueue;
  v60 = sub_211920E14();
  v20 = v6;
  sub_211A477B4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v15, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE5750], v63);
  v21 = v19;
  *(_QWORD *)&v61[v62] = sub_211A47DC0();
  v22 = &v20[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v20[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v20[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken];
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v25 = &v20[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
  v26 = v65;
  *(_QWORD *)v25 = v64;
  *((_QWORD *)v25 + 1) = v26;
  v27 = &v20[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_preferenceDomain];
  v28 = v67;
  *(_QWORD *)v27 = v66;
  *((_QWORD *)v27 + 1) = v28;
  v30 = v68;
  v29 = v69;
  *(_QWORD *)v22 = v69;
  *((_QWORD *)v22 + 1) = v30;
  v31 = v29;
  swift_unknownObjectRetain();

  swift_unknownObjectRelease();
  v32 = (objc_class *)type metadata accessor for FMAPSConnectionHandler();
  v72.receiver = v20;
  v72.super_class = v32;
  v33 = (char *)objc_msgSendSuper2(&v72, sel_init);
  v34 = v33;
  if (v31)
  {
    if (*(_QWORD *)&v33[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection])
    {
      v35 = *(_QWORD *)&v33[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8];
      ObjectType = swift_getObjectType();
      v37 = *(void (**)(void *, uint64_t, uint64_t))(v35 + 16);
      v38 = v34;
      swift_unknownObjectRetain();
      v37(v34, ObjectType, v35);
      swift_unknownObjectRelease();
    }
    else
    {
      v44 = v33;
    }
    if (qword_254AC7B80 != -1)
      swift_once();
    v45 = sub_211A47748();
    sub_21194F3E0(v45, (uint64_t)qword_254ADC7E8);
    v46 = v34;
    v47 = sub_211A47724();
    v48 = sub_211A47D30();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_DWORD *)v49 = 136315138;
      aBlock[0] = v50;
      v51 = *(_QWORD *)&v46[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
      v52 = *(_QWORD *)&v46[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      v70 = sub_211950A9C(v51, v52, aBlock);
      sub_211A47E2C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v47, v48, "FMAPSConnectionHandler: initialized with topic %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v50, -1, -1);
      MEMORY[0x212BE48A0](v49, -1, -1);

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }

  }
  else
  {
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v34;
    aBlock[4] = (uint64_t)sub_2119624DC;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCD1B8;
    v40 = _Block_copy(aBlock);
    v41 = v34;
    sub_211A477B4();
    v70 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v42 = v57;
    v43 = v59;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v21, v42, v40);

    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
    swift_release();
  }
  return v34;
}

uint64_t sub_21191DF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A47D90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v9, v10);
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_211920E14();
  sub_211A477CC();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_2119612EC();
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_211961368();
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE5750], v2);
  *(_QWORD *)(v0 + 32) = sub_211A47DC0();
  *(_BYTE *)(v0 + 40) = 0;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_defaultCenter);
  swift_retain();
  v13 = (void *)sub_211A478EC();
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v1, sel_refreshFMFRestricted, v13, 0);

  swift_release();
  v14 = objc_msgSend(v11, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v1, sel_refreshFMFRestricted, *MEMORY[0x24BE63740], 0);

  v15 = *(NSObject **)(v1 + 32);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_211962214;
  *(_QWORD *)(v16 + 24) = v1;
  aBlock[4] = sub_2119778B8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_211921368;
  aBlock[3] = &unk_24CCC7108;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v15, v17);
  _Block_release(v17);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v15 & 1) == 0)
    return v1;
  __break(1u);
  return result;
}

_QWORD *sub_21191E2D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;

  v5 = v4;
  v10 = sub_211A4722C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A47220();
  v15 = sub_211A47214();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v5[2] = v15;
  v5[3] = v17;
  v5[5] = 0;
  swift_unknownObjectWeakInit();
  sub_2119299DC(a1, (uint64_t)(v5 + 8));
  v5[13] = a4;
  v5[6] = a2;
  v5[7] = a3;
  v18 = qword_254AC7B80;
  swift_retain();
  swift_retain();
  v19 = a3;
  if (v18 != -1)
    swift_once();
  v20 = sub_211A47748();
  sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v21 = sub_211A47724();
  v22 = sub_211A47D30();
  if (os_log_type_enabled(v21, v22))
  {
    v44 = v19;
    v23 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v46 = v40;
    v42 = a2;
    v43 = a1;
    *(_DWORD *)v23 = 136315138;
    v39 = v23 + 4;
    v24 = v5[2];
    v25 = v5[3];
    swift_bridgeObjectRetain();
    v26 = sub_21193707C(0xCuLL, v24, v25);
    v28 = v27;
    v41 = a4;
    v30 = v29;
    v32 = v31;
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x212BE376C](v26, v28, v30, v32);
    v35 = v34;
    swift_bridgeObjectRelease();
    v45 = sub_211950A9C(v33, v35, &v46);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v21, v22, "FMFActionsController<%s>.init", v23, 0xCu);
    v36 = v40;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v36, -1, -1);
    MEMORY[0x212BE48A0](v23, -1, -1);

    swift_release();
    swift_release();
    v37 = v43;
  }
  else
  {
    swift_release_n();

    swift_release();
    swift_release();
    v37 = a1;
  }
  sub_211931C34(v37);
  return v5;
}

uint64_t sub_21191E5C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[24] = a1;
  v2[25] = a2;
  sub_211958C38(&qword_254ACA0B8);
  v2[26] = swift_task_alloc();
  sub_211958C38(&qword_254ACA058);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  sub_211958C38(&qword_254AC9FD0);
  v2[29] = swift_task_alloc();
  v3 = *(_QWORD *)(sub_211958C38(&qword_254ACA0A0) - 8);
  v2[30] = v3;
  v2[31] = *(_QWORD *)(v3 + 64);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v4 = sub_211958C38(&qword_254ACA0A8);
  v2[34] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[35] = v5;
  v2[36] = *(_QWORD *)(v5 + 64);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v6 = *(_QWORD *)(sub_211958C38(&qword_254ACA0B0) - 8);
  v2[39] = v6;
  v2[40] = *(_QWORD *)(v6 + 64);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = sub_211958C38(&qword_254ACA0C0);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21191E76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21191E78C(a1, a2, a3, a4);
}

uint64_t sub_21191E78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_211A4779C();
  v23 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211A477D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)(v5 + qword_254ACDCF0);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a4;
  v19[3] = v5;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  aBlock[4] = sub_211936A3C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD560;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v18, v13, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  return swift_release();
}

uint64_t sub_21191E9A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  _BYTE v20[248];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A477D8();
  v9 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21192DD68(a1, (uint64_t)v20, (uint64_t *)&unk_254ACC2F0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  sub_21192DD68((uint64_t)v20, v13 + 24, (uint64_t *)&unk_254ACC2F0);
  v19[4] = sub_211939628;
  v19[5] = v13;
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 1107296256;
  v19[2] = sub_21192382C;
  v19[3] = &unk_24CCCC918;
  v14 = _Block_copy(v19);
  swift_retain();
  sub_211A477B4();
  v18 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v16);
  return swift_release();
}

uint64_t FMFConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[9];
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v3 = sub_211958C38(&qword_254ACADD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v41 = *(_QWORD *)(v1 + 16);
  v42 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v39 = *(_QWORD *)(v1 + 40);
  v40 = v9;
  v38 = *(unsigned __int8 *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v36 = *(_QWORD *)(v1 + 64);
  v37 = v10;
  v11 = *(_QWORD *)(v1 + 72);
  v34 = *(_QWORD *)(v1 + 80);
  v35 = v11;
  v33 = *(_QWORD *)(v1 + 88);
  v32 = *(unsigned __int8 *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  v30 = *(_QWORD *)(v1 + 112);
  v31 = v12;
  v13 = *(_QWORD *)(v1 + 120);
  v28 = *(_QWORD *)(v1 + 128);
  v29 = v13;
  v23[1] = *(_QWORD *)(v1 + 136);
  v23[2] = *(_QWORD *)(v1 + 144);
  v23[3] = *(_QWORD *)(v1 + 152);
  v23[4] = *(_QWORD *)(v1 + 160);
  v23[5] = *(_QWORD *)(v1 + 168);
  v23[6] = *(_QWORD *)(v1 + 176);
  v23[7] = *(_QWORD *)(v1 + 184);
  v23[8] = *(_QWORD *)(v1 + 192);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 201);
  v24 = *(unsigned __int8 *)(v1 + 200);
  v25 = v6;
  v14 = *(_QWORD *)(v1 + 216);
  v26 = *(_QWORD *)(v1 + 208);
  v27 = v14;
  v15 = *(_QWORD *)(v1 + 232);
  v16 = a1[3];
  v17 = a1;
  v19 = v18;
  sub_211931DB4(v17, v16);
  sub_211926030();
  sub_211A4836C();
  v44 = 0;
  v20 = v43;
  sub_211A481D4();
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v19);
  v43 = v15;
  v44 = 1;
  sub_211A481D4();
  v44 = 2;
  sub_211A481D4();
  v44 = 3;
  sub_211A481C8();
  v44 = 4;
  sub_211A481D4();
  v44 = 5;
  sub_211A481D4();
  v44 = 6;
  sub_211A481BC();
  v44 = 7;
  sub_211A481D4();
  v44 = 8;
  sub_211A481D4();
  v44 = 9;
  sub_211A481D4();
  v44 = 10;
  v42 = v19;
  sub_211A481D4();
  v44 = 11;
  sub_211A481D4();
  v44 = 12;
  sub_211A481BC();
  v44 = 13;
  sub_211A481D4();
  v44 = 14;
  sub_211A481D4();
  v44 = 15;
  sub_211A481D4();
  v44 = 16;
  sub_211A481D4();
  v44 = 17;
  sub_211A481D4();
  v44 = 18;
  sub_211A481D4();
  v44 = 19;
  sub_211A481D4();
  v44 = 20;
  sub_211A481D4();
  v44 = 21;
  sub_211A481D4();
  v44 = 22;
  sub_211A481D4();
  v44 = 23;
  sub_211A481D4();
  v44 = 24;
  sub_211A481D4();
  v44 = 25;
  sub_211A481BC();
  v44 = 26;
  sub_211A481BC();
  v44 = 27;
  sub_211A481D4();
  v44 = 28;
  sub_211A481D4();
  v44 = 29;
  sub_211A481D4();
  v44 = 30;
  v21 = v42;
  sub_211A481D4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v21);
}

_QWORD *FMFAlert.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v3 = v1;
  v5 = sub_211958C38(&qword_254AC8C98);
  MEMORY[0x24BDAC7A8](v5, v6);
  v27 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211958C38(&qword_254AC9430);
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)(v1 + 2);
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21190D000, v14, v15, "FMAlert: initialized with coder", v16, 2u);
    MEMORY[0x212BE48A0](v16, -1, -1);
  }

  sub_211931DB4(a1, a1[3]);
  sub_21195FF50();
  sub_211A48360();
  if (v2)
  {
    sub_211962AB8(v12);
    type metadata accessor for FMFAlert();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v37 = 0;
    v3[4] = sub_211A48144();
    v3[5] = v17;
    v36 = 1;
    v3[6] = sub_211A48144();
    v3[7] = v18;
    v35 = 2;
    v3[8] = sub_211A48144();
    v3[9] = v19;
    v34 = 3;
    v3[10] = sub_211A48144();
    v3[11] = v20;
    v33 = 5;
    v3[12] = sub_211A48144();
    v3[13] = v21;
    v32 = 4;
    sub_211A48144();
    v22 = (uint64_t)v27;
    sub_211A47130();
    swift_bridgeObjectRelease();
    sub_211964BF4(v22, (uint64_t)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
    v31 = 6;
    sub_211A48144();
    v23 = (uint64_t)v27;
    sub_211A47130();
    swift_bridgeObjectRelease();
    sub_211964BF4(v23, (uint64_t)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
    v30 = 7;
    v24._countAndFlagsBits = sub_211A48144();
    FMFAlertType.init(rawValue:)(v24);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    *((_BYTE *)v3 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v29;
  }
  sub_211931C34((uint64_t)a1);
  return v3;
}

unint64_t FMFAddress.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8B68);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000016;
}

uint64_t sub_21191F7D8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v7 = sub_211A47400();
  result = MEMORY[0x24BDAC7A8](v7, v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v29 = a2;
    v30 = v12;
    v31 = v10;
    v32 = result;
    v28 = v3;
    v33 = MEMORY[0x24BEE4AF8];
    sub_21191FA18(0, v13, 0);
    v14 = v33;
    v15 = (uint64_t *)(a3 + 40);
    do
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      v33 = v14;
      v19 = *(_QWORD *)(v14 + 16);
      v18 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1)
      {
        sub_21191FA18(v18 > 1, v19 + 1, 1);
        v14 = v33;
      }
      v15 += 2;
      *(_QWORD *)(v14 + 16) = v19 + 1;
      v20 = v14 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v17;
      *(_BYTE *)(v20 + 48) = a1;
      --v13;
    }
    while (v13);
    v22 = v30;
    v21 = v31;
    v23 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v29, v32);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v22, v23);
    if ((_DWORD)v24 == *MEMORY[0x24BE31D08] || (_DWORD)v24 == *MEMORY[0x24BE31D00])
    {
      v26 = *(_QWORD *)(v28 + 88);
      MEMORY[0x24BDAC7A8](v24, v25);
      *(&v27 - 2) = v14;
      *(&v27 - 1) = v26;
      swift_retain();
      sub_211A47DA8();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    }
  }
  return result;
}

uint64_t sub_21191FA18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2119417C0(a1, a2, a3, *v3, &qword_254ACA968);
  *v3 = (char *)result;
  return result;
}

_QWORD *FMImageCache.init(converter:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v26 = a1;
  v27 = a2;
  v4 = sub_211A47D90();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47D60();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8, v10);
  v11 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v11, v12);
  v2[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  sub_211920E14();
  sub_211A477CC();
  v28 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v9, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v7, *MEMORY[0x24BEE5750], v25);
  v2[3] = sub_211A47DC0();
  swift_getAssociatedConformanceWitness();
  v2[4] = sub_211A47838();
  sub_21195E2C0(&qword_254ACC360);
  sub_211A48354();
  swift_getFunctionTypeMetadata1();
  sub_211A47B44();
  v2[5] = sub_211A47820();
  v2[6] = sub_211A47820();
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21190D000, v14, v15, "FMImageCache: initialized", v16, 2u);
    MEMORY[0x212BE48A0](v16, -1, -1);
  }

  v17 = v27;
  v3[7] = v26;
  v3[8] = v17;
  v18 = (void *)v3[2];
  swift_retain();
  v19 = v18;
  v20 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setName_, v20);

  v21 = (id)v3[2];
  objc_msgSend(v21, sel_setMaxConcurrentOperationCount_, 3);

  swift_release();
  return v3;
}

uint64_t sub_21191FDF8(_QWORD *a1)
{
  return FMFFeatures.encode(to:)(a1);
}

uint64_t FMFFeatures.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[32];

  v3 = sub_211958C38(&qword_254ACDA90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_211927C68();
  sub_211A4836C();
  v9[31] = 0;
  sub_211A481BC();
  if (!v1)
  {
    v9[30] = 1;
    sub_211A481BC();
    v9[29] = 2;
    sub_211A481BC();
    v9[28] = 3;
    sub_211A481BC();
    v9[27] = 4;
    sub_211A481BC();
    v9[26] = 5;
    sub_211A481BC();
    v9[25] = 6;
    sub_211A481BC();
    v9[24] = 7;
    sub_211A481BC();
    v9[15] = 8;
    sub_211A481BC();
    v9[14] = 9;
    sub_211A481BC();
    v9[13] = 10;
    sub_211A481BC();
    v9[12] = 11;
    sub_211A481BC();
    v9[11] = 12;
    sub_211A481BC();
    v9[10] = 13;
    sub_211A481BC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_211920108(_QWORD *a1)
{
  return FMFMyInfo.encode(to:)(a1);
}

uint64_t FMFMyInfo.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;

  v4 = sub_211958C38(&qword_254ACF250);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v19 = v1[2];
  v20 = v9;
  v11 = v1[3];
  v17 = v1[4];
  v18 = v11;
  v12 = v1[5];
  v16[0] = v1[6];
  v16[1] = v12;
  v23 = *((unsigned __int8 *)v1 + 56);
  sub_211931DB4(a1, a1[3]);
  sub_211920B58();
  sub_211A4836C();
  v21 = v10;
  v24 = 0;
  sub_211958C38(&qword_254AC8378);
  sub_21194D07C(&qword_254AC8B78, &qword_254AC8378, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_211A481E0();
  if (!v2)
  {
    v14 = v17;
    v13 = v18;
    LOBYTE(v21) = 1;
    sub_211A481B0();
    v21 = v13;
    v22 = v14;
    v24 = 2;
    sub_211958C38(&qword_254AC7C58);
    sub_21194D07C((unint64_t *)&qword_254AC7C60, &qword_254AC7C58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    LOBYTE(v21) = 3;
    sub_211A481B0();
    LOBYTE(v21) = 4;
    sub_211A481BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_211920364(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint8_t *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  id v37;
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  _QWORD aBlock[6];

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = ((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_211A477D8();
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    v45 = sub_211A47724();
    v17 = sub_211A47D24();
    if (os_log_type_enabled(v45, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21190D000, v45, v17, "FMAPSConnectionHandler: Public APS Token was nil.", v18, 2u);
      MEMORY[0x212BE48A0](v18, -1, -1);
    }

  }
  else
  {
    v43 = v13;
    v44 = v12;
    v19 = (void *)sub_211A47160();
    if (qword_254AC7B80 != -1)
      swift_once();
    v45 = v9;
    v20 = sub_211A47748();
    sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
    v21 = v19;
    v22 = sub_211A47724();
    v23 = sub_211A47D30();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v41 = v3;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v42 = v6;
      v40 = (_QWORD *)v26;
      *(_DWORD *)v25 = 138412290;
      aBlock[0] = v21;
      v27 = v21;
      sub_211A47E2C();
      v28 = v40;
      *v40 = v21;

      _os_log_impl(&dword_21190D000, v22, v23, "FMAPSConnectionHandler: Public APS Token received %@.", v25, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      v6 = v42;
      MEMORY[0x212BE48A0](v28, -1, -1);
      v29 = v25;
      v3 = v41;
      MEMORY[0x212BE48A0](v29, -1, -1);

    }
    else
    {

    }
    v30 = v21;
    v31 = objc_msgSend(v21, sel_fm_hexString);
    v32 = sub_211A47910();
    v34 = v33;

    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v3;
    v35[3] = v32;
    v35[4] = v34;
    aBlock[4] = sub_211962508;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCD168;
    v36 = _Block_copy(aBlock);
    v37 = v3;
    sub_211A477B4();
    v46 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v38 = v45;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v15, v38, v36);
    _Block_release(v36);

    (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v38, v5);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
    swift_release();
  }
}

uint64_t sub_2119207EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFMyInfo.init(from:)(a1, a2);
}

uint64_t FMFMyInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;

  v5 = sub_211958C38(&qword_254ACF240);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211920B58();
  sub_211A48360();
  if (v2)
    return sub_211931C34((uint64_t)a1);
  sub_211958C38(&qword_254AC8378);
  v36 = 0;
  sub_21194D07C((unint64_t *)&qword_254AC8380, &qword_254AC8378, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_211A48174();
  v10 = v37;
  v35 = 1;
  swift_bridgeObjectRetain();
  v11 = sub_211A48144();
  v31 = v12;
  v28 = v11;
  v34 = 2;
  swift_bridgeObjectRetain();
  v13 = sub_211A48144();
  v29 = v10;
  v27 = v13;
  v33 = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_211A48144();
  v30 = v15;
  v25 = v16;
  v26 = v17;
  v32 = 4;
  swift_bridgeObjectRetain();
  v19 = sub_211A48150();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v20 = v28;
  *(_QWORD *)a2 = v29;
  *(_QWORD *)(a2 + 8) = v20;
  v21 = v30;
  v23 = v26;
  v22 = v27;
  *(_QWORD *)(a2 + 16) = v31;
  *(_QWORD *)(a2 + 24) = v22;
  v24 = v25;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v24;
  *(_QWORD *)(a2 + 48) = v23;
  *(_BYTE *)(a2 + 56) = v19 & 1;
  sub_211931C34((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_211920B58()
{
  unint64_t result;

  result = qword_254ACF248;
  if (!qword_254ACF248)
  {
    result = MEMORY[0x212BE47C8](&unk_211A52424, &type metadata for FMFMyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF248);
  }
  return result;
}

uint64_t FMLocationShifter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_211A47D90();
  v1 = *(_QWORD *)(v0 - 8);
  v15[0] = v0;
  MEMORY[0x24BDAC7A8](v0, v2);
  v16 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_211A47D60();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4, v6);
  v7 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_211920E14();
  sub_211A477CC();
  v18 = MEMORY[0x24BEE4AF8];
  v15[2] = sub_211910908((unint64_t *)&qword_254AC8880, v5, MEMORY[0x24BEE5698]);
  v15[1] = sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  v9 = *MEMORY[0x24BEE5750];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v11 = v16;
  v10(v16, v9, v0);
  v12 = sub_211A47DC0();
  v13 = v17;
  *(_QWORD *)(v17 + 24) = v12;
  sub_211A477CC();
  v18 = MEMORY[0x24BEE4AF8];
  sub_211A47EA4();
  v10(v11, v9, v15[0]);
  *(_QWORD *)(v13 + 32) = sub_211A47DC0();
  *(_QWORD *)(v13 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CC28]), sel_init);
  return v13;
}

unint64_t sub_211920E14()
{
  unint64_t result;

  result = qword_254ACC300;
  if (!qword_254ACC300)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254ACC300);
  }
  return result;
}

unint64_t FMFPreferences.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211958C38(&qword_254ACA7D0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254ACA7B0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

uint64_t sub_211921190()
{
  uint64_t v0;
  _QWORD __dst[47];

  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  sub_211A47F70();
  __dst[45] = 0;
  __dst[46] = 0xE000000000000000;
  sub_211A479B8();
  memcpy(__dst, (const void *)(v0 + 16), 0x161uLL);
  sub_211A48054();
  sub_211A479B8();
  sub_211A47C28();
  sub_211A479B8();
  sub_211A47C28();
  __dst[0] = 60;
  __dst[1] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __dst[0];
}

uint64_t sub_211921368(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_211921388()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2119213A8()
{
  uint64_t v0;

  return sub_2119213B0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2119213B0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_2119213D0(uint64_t a1)
{
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19[3];

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE63930]);
    if (qword_254AC7B80 != -1)
      swift_once();
    v5 = sub_211A47748();
    sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
    v6 = sub_211A47724();
    v7 = sub_211A47D30();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      *(_DWORD *)v8 = 136315138;
      v19[0] = v9;
      if (v4 == 2)
        v10 = 1702195828;
      else
        v10 = 0x65736C6166;
      if (v4 == 2)
        v11 = 0xE400000000000000;
      else
        v11 = 0xE500000000000000;
      sub_211950A9C(v10, v11, v19);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v6, v7, "FMFSystemStateController: isRestricted: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v9, -1, -1);
      MEMORY[0x212BE48A0](v8, -1, -1);
    }

    v12 = v4 == 2;
    v13 = *(unsigned __int8 *)(a1 + 40);
    *(_BYTE *)(a1 + 40) = v12;
    if (v12 == v13 || (v14 = MEMORY[0x212BE496C](a1 + 16)) == 0)
    {

    }
    else
    {
      v15 = v14;
      v16 = v14 + 32;
      swift_beginAccess();
      if (MEMORY[0x212BE496C](v16))
      {
        v17 = *(_QWORD *)(v15 + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t))(v17 + 120))(v15, v4 == 2, ObjectType, v17);

        swift_unknownObjectRelease();
      }
      else
      {

      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_211921650(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  _UNKNOWN **v16;
  char *v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a1;
  v1 = sub_211A47D90();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A47D60();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v8, v9);
  v30[1] = sub_211A47910();
  v30[2] = sub_211A47910();
  sub_211920E14();
  sub_211A477B4();
  v35 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v6, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v4, *MEMORY[0x24BEE5750], v32);
  v10 = v33;
  v11 = (void *)sub_211A47DC0();
  v12 = objc_allocWithZone(MEMORY[0x24BE08738]);
  v13 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithEnvironmentName_namedDelegatePort_queue_, v13, v14, v11);

  v16 = &off_24CCCD010;
  v17 = &v10[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  if (!v15)
    v16 = 0;
  *(_QWORD *)v17 = v15;
  *((_QWORD *)v17 + 1) = v16;
  swift_unknownObjectRelease();
  if (*(_QWORD *)v17)
  {
    v18 = *((_QWORD *)v17 + 1);
    ObjectType = swift_getObjectType();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    swift_unknownObjectRetain();
    v21 = v10;
    v20(v10, ObjectType, v18);
    swift_unknownObjectRelease();
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v22 = sub_211A47748();
  sub_21194F3E0(v22, (uint64_t)qword_254ADC7E8);
  v23 = v10;
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v35 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = *(_QWORD *)&v23[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
    v29 = *(_QWORD *)&v23[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
    swift_bridgeObjectRetain();
    v34 = sub_211950A9C(v28, v29, &v35);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v24, v25, "FMAPSConnectionHandler: initialized with default connection for topic %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v27, -1, -1);
    MEMORY[0x212BE48A0](v26, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_211921A74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21194C228(a1, a2);
}

uint64_t sub_211921A88()
{
  sub_211921AAC();
  return swift_deallocClassInstance();
}

uint64_t sub_211921AAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211921C14(v0 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21195A23C(*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences), *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16));
  sub_211933F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_211921C14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC8360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_211921C54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_211921C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_211921CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t refreshed;
  _DWORD v34[4];
  uint64_t v35;

  v9 = sub_211958C38(&qword_254AC8870);
  result = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) & 1) == 0)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) == 1)
    {
      if (qword_254AC7B80 != -1)
        swift_once();
      v15 = sub_211A47748();
      sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
      v16 = sub_211A47724();
      v17 = sub_211A47D30();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_21190D000, v16, v17, "FMFRefreshController: asking fmfd about followers and following…", v18, 2u);
        MEMORY[0x212BE48A0](v18, -1, -1);
      }

      result = sub_21196C798();
      *(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 1;
    }
    else
    {
      v35 = v4;
      v34[3] = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce);
      v19 = type metadata accessor for FMFFriend();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = MEMORY[0x24BEE4AF8];
      v21 = sub_21192233C(MEMORY[0x24BEE4AF8]);
      v22 = sub_21192233C(v20);
      type metadata accessor for FMFInitRefreshClientRequest();
      v23 = swift_allocObject();
      sub_211911AB0((uint64_t)v13, v23 + qword_254ADC878);
      *(_QWORD *)(v23 + qword_254ADC880) = 0;
      *(_QWORD *)(v23 + qword_254ADC888) = v21;
      *(_QWORD *)(v23 + qword_254ADC890) = v22;
      v24 = (_QWORD *)(v23 + qword_254ADC898);
      *v24 = a2;
      v24[1] = a3;
      v24[2] = a4;
      *(_BYTE *)(v23 + qword_254ADC8A0) = 1;
      v25 = sub_21193BD18();
      sub_21193CB88((uint64_t)v13);
      *(_BYTE *)(a1 + v14) = 1;
      if (qword_254AC7B80 != -1)
        swift_once();
      v26 = sub_211A47748();
      sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
      v27 = sub_211A47724();
      v28 = sub_211A47D30();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_21190D000, v27, v28, "FMFRefreshController: sending initClient request…", v29, 2u);
        MEMORY[0x212BE48A0](v29, -1, -1);
      }

      v30 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
      v31 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
      sub_211931DB4((_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v30);
      v32 = *(void (**)(_QWORD *, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 64);
      refreshed = type metadata accessor for FMFInitRefreshClientResponse();
      swift_retain();
      v32(v25, sub_211962A08, a1, refreshed, v30, v31);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2119220C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v6 = sub_211A47208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) & 1) == 0)
  {
    if (MEMORY[0x212BE496C](a1 + 32))
    {
      sub_211918530();
      swift_unknownObjectRelease();
    }
    *(_BYTE *)(a1 + v11) = 1;
  }
  sub_21191AC58(a2);
  sub_211A471FC();
  v12 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v12, v10, v6);
  swift_endAccess();
  v13 = (_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts);
  swift_beginAccess();
  v14 = MEMORY[0x24BEE4AF8];
  *v13 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v15 = sub_21192233C(v14);
  v16 = (unint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  *v16 = v15;
  swift_bridgeObjectRelease();
  v17 = sub_21192233C(v14);
  v18 = (unint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  swift_beginAccess();
  *v18 = v17;
  swift_bridgeObjectRelease();
  sub_21193A740(*(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval));
  if (qword_254AC7B80 != -1)
    swift_once();
  v19 = sub_211A47748();
  sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
  v20 = sub_211A47724();
  v21 = sub_211A47D18();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_21190D000, v20, v21, "FMFRefreshController: refreshClientRequest completed", v22, 2u);
    MEMORY[0x212BE48A0](v22, -1, -1);
  }

  return a3(1);
}

unint64_t sub_21192233C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_211958C38(&qword_254ACEE70);
  v2 = (_QWORD *)sub_211A480CC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_21195BB68(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21192244C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v2 = v1;
  v24 = a1;
  v23 = sub_211A47D90();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v3);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v20, v5);
  v6 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_211A471F0();
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + qword_254ACC020) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + qword_254ACC028) = v8;
  *(_QWORD *)(v1 + qword_254ACC030) = v8;
  *(_QWORD *)(v1 + qword_254ACC038) = 0;
  if (qword_254AC7B88 != -1)
    swift_once();
  v9 = sub_211A47748();
  sub_21194F3E0(v9, (uint64_t)qword_254ADC800);
  swift_retain_n();
  v10 = sub_211A47724();
  v11 = sub_211A47D30();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v26 = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = sub_211A483A8();
    v25 = sub_211950A9C(v14, v15, &v26);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v10, v11, "%s: initialized", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v13, -1, -1);
    MEMORY[0x212BE48A0](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v17 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setName_, v17);

  objc_msgSend(v16, sel_setMaxConcurrentOperationCount_, 10);
  sub_211920E14();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26 = 0xD000000000000022;
  v27 = 0x8000000211A55FC0;
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A477CC();
  v26 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC74((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v22, *MEMORY[0x24BEE5750], v23);
  v18 = sub_211A47DC0();
  *(_QWORD *)(v2 + qword_254ACC040) = v16;
  sub_21192DD68(v24, v2 + qword_254ADC718, &qword_254AC9200);
  *(_QWORD *)(v2 + qword_254ACC048) = v18;
  return v2;
}

uint64_t sub_211922944()
{
  swift_retain();
  sub_211958C38(&qword_254AC97A0);
  sub_211A47DA8();
  return swift_release();
}

_QWORD *sub_2119229AC(uint64_t a1, uint64_t a2, char *a3, int a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[4];

  v6 = v5;
  v59 = a4;
  v60 = a5;
  v58 = a3;
  v61 = a1;
  v62 = a2;
  v7 = sub_211A47D90();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v55 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A47D60();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10, v12);
  v13 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_211A4722C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A47220();
  v20 = sub_211A47214();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v6[2] = v20;
  v6[3] = v22;
  v6[5] = 0;
  swift_unknownObjectWeakInit();
  v23 = (char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
  v24 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason) = 2;
  swift_weakInit();
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_tapContexts) = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics) = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData) = v26;
  v27 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue;
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  sub_211A477B4();
  v64[1] = v25;
  sub_211910908((unint64_t *)&qword_254AC8880, v11, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, *MEMORY[0x24BEE5750], v57);
  *(_QWORD *)((char *)v6 + v27) = sub_211A47DC0();
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_callbackInterval) = 0x40E86A0000000000;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval) = 0x40B3880000000000;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval) = 0x40ED4C0000000000;
  sub_211A47190();
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer) = 0;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) = 0;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializationInProgress) = 0;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) = 0;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 0;
  swift_weakAssign();
  sub_2119299DC(v62, (uint64_t)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController);
  v28 = v58;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_apsConnectionHandler) = v58;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isSnapshotMode) = v59;
  *((_BYTE *)v6 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) = v60;
  v29 = &v28[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate];
  v30 = v28;
  swift_beginAccess();
  *((_QWORD *)v29 + 1) = &off_24CCC6780;
  swift_unknownObjectWeakAssign();
  v31 = qword_254AC7B80;
  v32 = v30;
  if (v31 != -1)
    swift_once();
  v33 = sub_211A47748();
  sub_21194F3E0(v33, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v34 = sub_211A47724();
  v35 = sub_211A47D30();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v64[0] = v57;
    *(_DWORD *)v36 = 136315650;
    v58 = v32;
    v37 = v6[2];
    v38 = v6[3];
    swift_bridgeObjectRetain();
    v39 = sub_21193707C(0xCuLL, v37, v38);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x212BE376C](v39, v41, v43, v45);
    v48 = v47;
    swift_bridgeObjectRelease();
    v63 = sub_211950A9C(v46, v48, v64);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    if ((v59 & 1) != 0)
      v49 = 0x70616E7320736120;
    else
      v49 = 0;
    if ((v59 & 1) != 0)
      v50 = 0xEC000000746F6873;
    else
      v50 = 0xE000000000000000;
    v63 = sub_211950A9C(v49, v50, v64);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    if ((v60 & 1) != 0)
      v51 = 0x4620676E69737520;
    else
      v51 = 0;
    if ((v60 & 1) != 0)
      v52 = 0xEB0000000044464DLL;
    else
      v52 = 0xE000000000000000;
    v63 = sub_211950A9C(v51, v52, v64);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v34, v35, "FMFRefreshController<%s>.init%s%s", (uint8_t *)v36, 0x20u);
    v53 = v57;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v53, -1, -1);
    MEMORY[0x212BE48A0](v36, -1, -1);

    swift_release();
  }
  else
  {
    swift_release_n();

    swift_release();
  }
  sub_211931C34(v62);
  return v6;
}

uint64_t FMFContactsDataController.init(isSnapshotMode:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  LODWORD(v47) = a1;
  v46 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v46, v3);
  v45[1] = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = sub_211A47D90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A4722C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A47220();
  v17 = sub_211A47214();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  *(_QWORD *)(v2 + 16) = v17;
  *(_QWORD *)(v2 + 24) = v19;
  *(_QWORD *)(v2 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE5758], v7);
  sub_211A477B4();
  v49 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  *(_QWORD *)(v2 + 64) = sub_211A47DC0();
  v20 = v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate;
  v21 = sub_211A47208();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  v22(v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactUpdateDate, 1, 1, v21);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_contactRecords) = 0;
  *(_BYTE *)(v2 + 32) = v47;
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v2, sel_contactStoreChangedWithNotification_, *MEMORY[0x24BDBA3D0], 0);

  if (qword_254AC7B80 != -1)
    swift_once();
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v47 = v28;
    *(_DWORD *)v27 = 136446466;
    v48 = *(_QWORD *)v2;
    v49 = v28;
    sub_211958C38((uint64_t *)&unk_254ACC330);
    v29 = sub_211A47928();
    v48 = sub_211950A9C(v29, v30, &v49);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v46 = v27 + 14;
    v31 = *(_QWORD *)(v2 + 16);
    v32 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    v33 = sub_21193707C(0xCuLL, v31, v32);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x212BE376C](v33, v35, v37, v39);
    v42 = v41;
    swift_bridgeObjectRelease();
    v48 = sub_211950A9C(v40, v42, &v49);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v25, v26, "%{public}s<%s>.init", (uint8_t *)v27, 0x16u);
    v43 = v47;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v43, -1, -1);
    MEMORY[0x212BE48A0](v27, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return v2;
}

uint64_t destroy for FMFPreferences()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119235AC()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0[5];
  *(_QWORD *)(v0[6] + 112) = v0[20];
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v4 = v0[10];
    v22 = v0[11];
    v23 = MEMORY[0x24BEE4AF8];
    v5 = v0[5];
    sub_211948C10(0, v2, 0);
    v6 = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(_QWORD *)(v4 + 72);
    v3 = v23;
    do
    {
      v7 = v0;
      v8 = (uint64_t *)v0[11];
      sub_211934794(v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v9 = *v8;
      v10 = *(_QWORD *)(v22 + 8);
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211948C10(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v23;
      }
      v12 = *(_QWORD *)(v3 + 16);
      v11 = *(_QWORD *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_211948C10(v11 > 1, v12 + 1, 1);
        v3 = v23;
      }
      *(_QWORD *)(v3 + 16) = v12 + 1;
      v13 = v3 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      v6 += v21;
      --v2;
      v0 = v7;
    }
    while (v2);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0[13] + 104))(v0[14], *MEMORY[0x24BE31D08], v0[12]);
  if (*(_QWORD *)(v3 + 16)
    && MEMORY[0x212BE496C](v0[6] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(1, v0[14], v3);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  v15 = v0[8];
  v14 = v0[9];
  v16 = v0[6];
  (*(void (**)(uint64_t, uint64_t))(v0[13] + 8))(v0[14], v0[12]);
  sub_211A471FC();
  v17 = sub_211A47208();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 0, 1, v17);
  sub_21192DD68(v14, v15, qword_254AC8A78);
  v18 = v16 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_2119A17AC(v15, v18, qword_254AC8A78);
  swift_endAccess();
  v19 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v19;
  *v19 = v0;
  v19[1] = sub_21191102C;
  return sub_211918C90(v0[5]);
}

uint64_t sub_21192382C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_211923858()
{
  uint64_t v0;

  sub_211923864(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_211923864(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v5 = a2;
  if (!a2)
    v5 = a3;
  v7 = v5;
  v6 = a2;
  sub_211A01390(v7, a3, 0);

}

uint64_t sub_2119238C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2119512F4();
  *a1 = result;
  return result;
}

uint64_t sub_2119238EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2119512F4();
  *a1 = result;
  return result;
}

uint64_t sub_211923924(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v3;
  v53 = a2;
  v54 = a3;
  v55 = a1;
  v5 = sub_211958C38(&qword_254ACC010);
  MEMORY[0x24BDAC7A8](v5, v6);
  v52 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47D90();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = (uint8_t *)v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v49 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v13, v14);
  v15 = sub_211A4722C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)(v4 + qword_254ACDCD8);
  swift_retain();
  sub_211A47220();
  v21 = sub_211A47214();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  *v20 = v21;
  v20[1] = v23;
  v48 = v4 + qword_254ACDCE0;
  swift_unknownObjectWeakInit();
  v24 = qword_254ACDCE8;
  sub_211A47358();
  swift_allocObject();
  *(_QWORD *)(v4 + v24) = sub_211A4734C();
  v25 = qword_254ACDCF0;
  sub_211920E14();
  sub_211A477B4();
  v57 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint8_t *))(v50 + 104))(v49, *MEMORY[0x24BEE5750], v51);
  *(_QWORD *)(v4 + v25) = sub_211A47DC0();
  *(_BYTE *)(v4 + qword_254ACDD00) = 0;
  sub_211A471FC();
  *(_QWORD *)(v4 + qword_254ADC820 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + qword_254ADC828 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + qword_254ADC830) = 0;
  *(_QWORD *)(v4 + qword_254ADC838) = 0;
  v26 = qword_254ACDD08;
  *(_QWORD *)(v4 + v26) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C00]), sel_init);
  swift_unknownObjectWeakAssign();
  sub_21192C6B8(v54, v4 + qword_254ACDCF8, &qword_254AC9200);
  swift_release();
  sub_21192C6B8(v55, v52, &qword_254ACC010);
  swift_retain();
  v27 = sub_211A4737C();
  v28 = qword_254AC7B80;
  swift_retain();
  if (v28 != -1)
    swift_once();
  v29 = sub_211A47748();
  sub_21194F3E0(v29, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v30 = sub_211A47724();
  v31 = sub_211A47D30();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v52 = v33;
    *(_DWORD *)v32 = 136315138;
    v57 = v33;
    v51 = v32 + 4;
    v34 = *(_QWORD *)(v27 + qword_254ACDCD8);
    v35 = *(_QWORD *)(v27 + qword_254ACDCD8 + 8);
    swift_bridgeObjectRetain();
    v36 = sub_21193707C(0xCuLL, v34, v35);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x212BE376C](v36, v38, v40, v42);
    v45 = v44;
    swift_bridgeObjectRelease();
    v56 = sub_211950A9C(v43, v45, &v57);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v30, v31, "FMFServerInteractionController<%s>.init", v32, 0xCu);
    v46 = v52;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v46, -1, -1);
    MEMORY[0x212BE48A0](v32, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  sub_211923EE8(v54, &qword_254AC9200);
  sub_211923EE8(v55, &qword_254ACC010);
  return v27;
}

uint64_t sub_211923EE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_211958C38(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_211923F24(uint64_t a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v61[2];
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t aBlock[6];
  objc_super v69;

  v3 = v2;
  v66 = a2;
  v5 = sub_211A47D90();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v62 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v8, v9);
  v61[1] = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = sub_211A4722C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t *)&v3[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
  v19 = v3;
  sub_211A47220();
  v20 = sub_211A47214();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  *v18 = v20;
  v18[1] = v22;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fences] = MEMORY[0x24BEE4B08];
  v23 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode;
  v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe] = 0;
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends] = 0;
  v24 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_secureLocationsManager;
  *(_QWORD *)&v19[v24] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C00]), sel_init);
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager] = a1;
  LOBYTE(v18) = v66;
  v19[v23] = v66;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  v65 = a1;
  swift_retain();
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationShifter] = FMLocationShifter.init()();
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  sub_211A477C0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, *MEMORY[0x24BEE5750], v64);
  *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue] = sub_211A47DC0();

  v25 = (objc_class *)type metadata accessor for FMFGenericResponseHandler();
  v69.receiver = v19;
  v69.super_class = v25;
  v26 = objc_msgSendSuper2(&v69, sel_init);
  v27 = v26;
  if ((v18 & 1) != 0)
  {
    v28 = v26;
  }
  else
  {
    v29 = objc_allocWithZone(MEMORY[0x24BDD1710]);
    v30 = v27;
    v31 = objc_msgSend(v29, (SEL)&selRef_dealloc);
    objc_msgSend(v31, sel_setUnderlyingQueue_, *(_QWORD *)&v30[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue]);
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FED0]), sel_initWithDelegate_delegateQueue_, v30, v31);
    v33 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession;
    v34 = *(void **)&v30[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession];
    *(_QWORD *)&v30[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_fmfSession] = v32;

    v35 = *(void **)&v30[v33];
    if (v35)
    {
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v30;
      aBlock[4] = (uint64_t)sub_211962108;
      aBlock[5] = v36;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_211912AAC;
      aBlock[3] = (uint64_t)&unk_24CCCB208;
      v37 = _Block_copy(aBlock);
      v38 = v30;
      v39 = v35;
      swift_release();
      objc_msgSend(v39, sel_getFences_, v37);

      _Block_release(v37);
    }
    else
    {

    }
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v40 = sub_211A47748();
  sub_21194F3E0(v40, (uint64_t)qword_254ADC7E8);
  v41 = v27;
  v42 = sub_211A47724();
  v43 = sub_211A47D30();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    aBlock[0] = v45;
    *(_DWORD *)v44 = 136315394;
    v64 = v44 + 4;
    v46 = *(_QWORD *)&v41[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
    v47 = *(_QWORD *)&v41[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier + 8];
    swift_bridgeObjectRetain();
    v48 = sub_21193707C(0xCuLL, v46, v47);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    swift_bridgeObjectRelease();
    v55 = MEMORY[0x212BE376C](v48, v50, v52, v54);
    v57 = v56;
    swift_bridgeObjectRelease();
    v67 = sub_211950A9C(v55, v57, aBlock);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    if ((v66 & 1) != 0)
      v58 = 0x70616E7320736120;
    else
      v58 = 0;
    if ((v66 & 1) != 0)
      v59 = 0xEC000000746F6873;
    else
      v59 = 0xE000000000000000;
    v67 = sub_211950A9C(v58, v59, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v42, v43, "FMFGenericResponseHandler<%s>.init%s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v45, -1, -1);
    MEMORY[0x212BE48A0](v44, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }

  return v41;
}

uint64_t destroy for SecureFriend()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211924610()
{
  sub_21194D0D8();
  return sub_211A48390();
}

uint64_t sub_211924638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  sub_211958C38(&qword_254AC9FD0);
  v3[25] = swift_task_alloc();
  sub_211958C38(qword_254AC8A78);
  v3[26] = swift_task_alloc();
  v4 = sub_211A47748();
  v3[27] = v4;
  v3[28] = *(_QWORD *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v5 = sub_211A47400();
  v3[33] = v5;
  v3[34] = *(_QWORD *)(v5 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211924774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  dispatch_queue_t v41;
  _BYTE v42[240];
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  _QWORD v49[57];
  _BYTE v50[456];
  uint64_t v51[57];
  _BYTE v52[464];

  v1 = v0;
  v2 = sub_211A477D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A4779C();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v13 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(_BYTE *)(v13 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    v14 = *(_QWORD *)(v0 + 240);
    if (!v14)
    {
LABEL_7:
      sub_21196A450((uint64_t)v50);
      v20 = MEMORY[0x24BEE4AF8];
      v51[0] = MEMORY[0x24BEE4AF8];
      v51[1] = MEMORY[0x24BEE4AF8];
      v51[2] = MEMORY[0x24BEE4AF8];
      v51[3] = MEMORY[0x24BEE4AF8];
      v51[4] = MEMORY[0x24BEE4AF8];
      v51[5] = MEMORY[0x24BEE4AF8];
      v51[6] = MEMORY[0x24BEE4AF8];
      v51[7] = MEMORY[0x24BEE4AF8];
      memset(&v51[9], 0, 40);
      LOBYTE(v51[14]) = 1;
      v51[8] = MEMORY[0x24BEE4AF8];
      sub_21192DD68((uint64_t)v50, (uint64_t)&v51[15], (uint64_t *)&unk_254ACC2F0);
      memset(&v51[45], 0, 57);
      v51[53] = v20;
      v51[54] = v20;
      v51[55] = v20;
      v51[56] = MEMORY[0x24BEE4B00];
      memcpy(v52, v51, 0x1C8uLL);
      sub_211A47790();
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v1;
      memcpy((void *)(v21 + 24), v52, 0x1C8uLL);
      v49[4] = sub_211935F24;
      v49[5] = v21;
      v49[0] = MEMORY[0x24BDAC760];
      v49[1] = 1107296256;
      v49[2] = sub_21192382C;
      v49[3] = &unk_24CCCC148;
      v22 = _Block_copy(v49);
      swift_retain();
      sub_211A477B4();
      MEMORY[0x212BE3BC8](0, v6, v12, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      result = swift_release();
      *(_BYTE *)(v1 + 704) = 0;
      return result;
    }
    v38 = v3;
    v39 = v7;
    v40 = v2;
    sub_2119FB3B0((uint64_t)v49);
    sub_21192DD68((uint64_t)v49, (uint64_t)v52, &qword_254ACD750);
    v41 = *(dispatch_queue_t *)(v14 + 16);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v52;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_211961BB4;
    *(_QWORD *)(v16 + 24) = v15;
    v47 = sub_2119213A8;
    v48 = v16;
    v43 = MEMORY[0x24BDAC760];
    v44 = 1107296256;
    v45 = sub_211921368;
    v46 = &unk_24CCCC0F8;
    v17 = _Block_copy(&v43);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(v41, v17);
    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_21192DD68((uint64_t)v52, (uint64_t)v50, &qword_254ACD750);
      swift_release();
      swift_release();
      sub_21192DD68((uint64_t)v50, (uint64_t)v51, &qword_254ACD750);
      v19 = sub_2119CEE68(v51);
      v3 = v38;
      v7 = v39;
      if (v19 == 1)
      {
        v2 = v40;
        goto LABEL_7;
      }
      memcpy(v52, v51, 0x1C8uLL);
      sub_2119337E0(v51);
      sub_211A47790();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v1;
      memcpy((void *)(v23 + 24), v52, 0x1C8uLL);
      v47 = sub_211935F24;
      v48 = v23;
      v43 = MEMORY[0x24BDAC760];
      v44 = 1107296256;
      v45 = sub_21192382C;
      v46 = &unk_24CCCC198;
      v24 = _Block_copy(&v43);
      swift_retain();
      sub_211A477B4();
      MEMORY[0x212BE3BC8](0, v6, v12, v24);
      _Block_release(v24);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v40);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      swift_release();
      *(_QWORD *)(v1 + 224) = v51[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 88) = v51[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 104) = v51[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 112) = v51[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 184) = v51[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 192) = v51[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 200) = v51[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 208) = v51[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25 = swift_bridgeObjectRetain();
      sub_211963B58(v25);
      v26 = swift_bridgeObjectRetain();
      sub_211963BB8(v26);
      v27 = swift_bridgeObjectRetain();
      sub_211963BEC(v27);
      *(_QWORD *)(v1 + 720) = v51[56];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = v51[11];
      if (v51[11])
      {
        v29 = v51[12];
        v30 = *(_QWORD *)(v1 + 744);
        v31 = *(_QWORD *)(v1 + 752);
        v32 = *(_QWORD *)(v1 + 760);
        *(_OWORD *)(v1 + 744) = *(_OWORD *)&v51[9];
        *(_QWORD *)(v1 + 760) = v28;
        *(_QWORD *)(v1 + 768) = v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21195A23C(v30, v31, v32);
      }
      if (v51[45])
      {
        v33 = v51[52];
        v34 = v51[51];
        v35 = v51[46];
        v41 = *(dispatch_queue_t *)(v1 + 1032);
        v40 = *(_QWORD *)(v1 + 1040);
        v39 = *(_QWORD *)(v1 + 1080);
        *(_QWORD *)(v1 + 1032) = v51[45];
        *(_QWORD *)(v1 + 1040) = v35;
        v36 = *(_OWORD *)&v51[49];
        *(_OWORD *)(v1 + 1048) = *(_OWORD *)&v51[47];
        *(_OWORD *)(v1 + 1064) = v36;
        *(_QWORD *)(v1 + 1080) = v34;
        *(_BYTE *)(v1 + 1088) = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_211933F60((uint64_t)v41);
      }
      if (LOBYTE(v51[14]) != 1)
      {
        v43 = v51[13];
        LOBYTE(v44) = 0;
        sub_21191D3E8(&v43);
      }
      sub_2119FB558((uint64_t)v50);
      sub_21192DD68((uint64_t)&v51[15], (uint64_t)&v43, (uint64_t *)&unk_254ACC2F0);
      result = sub_21196A434((uint64_t)&v43);
      if ((_DWORD)result != 1)
      {
        sub_21192DD68((uint64_t)&v51[15], (uint64_t)v42, (uint64_t *)&unk_254ACC2F0);
        result = sub_21191E9A4((uint64_t)v42);
      }
      *(_BYTE *)(v1 + 704) = 1;
    }
  }
  return result;
}

uint64_t initializeWithCopy for FMFPreferences(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_211924F00(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  NSObject *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[6];
  _BYTE v86[240];
  _QWORD v87[58];

  v5 = v4;
  v81 = a4;
  v79 = a1;
  v80 = a3;
  v83 = a2;
  v6 = sub_211958C38(&qword_254ACD728);
  MEMORY[0x24BDAC7A8](v6, v7);
  v71 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211958C38(&qword_254ACD730);
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v70 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A47D90();
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v82 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_211A4722C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A47220();
  v26 = sub_211A47214();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  *(_QWORD *)(v5 + 16) = v26;
  *(_QWORD *)(v5 + 24) = v28;
  *(_QWORD *)(v5 + 40) = 0;
  swift_unknownObjectWeakInit();
  v76 = sub_211920E14();
  v29 = v20;
  sub_211A477C0();
  v30 = MEMORY[0x24BEE4AF8];
  v87[0] = MEMORY[0x24BEE4AF8];
  v74 = sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  v73 = sub_211958C38((uint64_t *)&unk_254ACC310);
  v75 = sub_21193AC74((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  v31 = *MEMORY[0x24BEE5750];
  v32 = v78;
  v77 = *(_QWORD *)(v77 + 104);
  ((void (*)(char *, uint64_t, uint64_t))v77)(v82, v31, v78);
  v72 = v29;
  *(_QWORD *)(v5 + 56) = sub_211A47DC0();
  sub_211A477B4();
  v87[0] = v30;
  sub_211A47EA4();
  v33 = v82;
  v34 = (void (*)(char *, _QWORD, uint64_t))v77;
  ((void (*)(char *, uint64_t, uint64_t))v77)(v82, v31, v32);
  *(_QWORD *)(v5 + 64) = sub_211A47DC0();
  sub_211A477C0();
  sub_211A47D54();
  v34(v33, *MEMORY[0x24BEE5758], v32);
  *(_QWORD *)(v5 + 72) = sub_211A47DC0();
  type metadata accessor for FMFPendingDataManager();
  v35 = swift_allocObject();
  v36 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v35 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v35 + 24) = v36;
  *(_QWORD *)(v35 + 32) = v36;
  *(_OWORD *)(v35 + 40) = 0u;
  *(_OWORD *)(v35 + 56) = 0u;
  *(_OWORD *)(v35 + 72) = 0u;
  *(_OWORD *)(v35 + 88) = 0u;
  *(_OWORD *)(v35 + 104) = 0u;
  *(_OWORD *)(v35 + 113) = 0u;
  *(_QWORD *)(v5 + 80) = v35;
  *(_QWORD *)(v5 + 88) = v30;
  *(_QWORD *)(v5 + 96) = v30;
  *(_QWORD *)(v5 + 104) = v30;
  *(_QWORD *)(v5 + 112) = v30;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = v30;
  *(_QWORD *)(v5 + 136) = v30;
  *(_QWORD *)(v5 + 144) = v30;
  *(_QWORD *)(v5 + 152) = v30;
  *(_QWORD *)(v5 + 160) = v30;
  *(_QWORD *)(v5 + 168) = 0;
  *(_QWORD *)(v5 + 176) = 0;
  *(_QWORD *)(v5 + 184) = v30;
  *(_QWORD *)(v5 + 192) = v30;
  *(_QWORD *)(v5 + 200) = v30;
  *(_QWORD *)(v5 + 208) = v30;
  *(_BYTE *)(v5 + 216) = 0;
  *(_QWORD *)(v5 + 232) = 0;
  *(_QWORD *)(v5 + 240) = 0;
  *(_QWORD *)(v5 + 224) = v30;
  sub_21196A450((uint64_t)v86);
  v87[0] = v30;
  v87[1] = v30;
  v87[2] = v30;
  v87[3] = v30;
  v87[4] = v30;
  v87[5] = v30;
  v87[6] = v30;
  v87[7] = v30;
  memset(&v87[9], 0, 40);
  v87[8] = v30;
  LOBYTE(v87[14]) = 1;
  sub_21192DD68((uint64_t)v86, (uint64_t)&v87[15], (uint64_t *)&unk_254ACC2F0);
  memset(&v87[45], 0, 57);
  v87[53] = v30;
  v87[54] = v30;
  v87[55] = v30;
  v87[56] = v36;
  memcpy((void *)(v5 + 248), v87, 0x1C8uLL);
  *(_BYTE *)(v5 + 704) = 0;
  *(_QWORD *)(v5 + 720) = v36;
  *(_QWORD *)(v5 + 728) = v36;
  *(_OWORD *)(v5 + 744) = 0u;
  *(_OWORD *)(v5 + 760) = 0u;
  *(_QWORD *)(v5 + 776) = 0;
  *(_BYTE *)(v5 + 784) = 1;
  sub_21192DD68((uint64_t)v86, v5 + 792, (uint64_t *)&unk_254ACC2F0);
  *(_OWORD *)(v5 + 1032) = 0u;
  *(_OWORD *)(v5 + 1048) = 0u;
  *(_OWORD *)(v5 + 1064) = 0u;
  *(_OWORD *)(v5 + 1073) = 0u;
  *(_QWORD *)(v5 + 1096) = v30;
  *(_QWORD *)(v5 + 1104) = v30;
  *(_QWORD *)(v5 + 1112) = v30;
  *(_QWORD *)(v5 + 736) = v80;
  *(_BYTE *)(v5 + 216) = v81;
  v37 = v79;
  *(_QWORD *)(v5 + 48) = v79;
  if (v83)
  {
    swift_retain();
    swift_retain();
    v38 = v83;
  }
  else
  {
    type metadata accessor for FMFContactsDataController();
    swift_allocObject();
    swift_retain();
    swift_retain();
    v38 = FMFContactsDataController.init(isSnapshotMode:)(v81 & 1);
  }
  *(_QWORD *)(v5 + 712) = v38;
  if (*(_BYTE *)(v37 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(_BYTE *)(v37 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    swift_retain();
    v39 = v70;
    sub_211914A94(0xD000000000000011, 0x8000000211A56BE0, 0x4D61746144464D46, 0xEE00726567616E61, v70);
    v40 = *(_QWORD *)(v37 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
    v41 = *(_QWORD *)(v37 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory + 8);
    v42 = v71;
    sub_21192C6B8(v39, v71, &qword_254ACD730);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v42, 0, 1, v69);
    sub_211958C38(&qword_254ACD788);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v43 = sub_21191A8F0(v40, v41, 0xD000000000000014, 0x8000000211A56C00, v42);
    sub_211923EE8(v39, &qword_254ACD730);
    *(_QWORD *)(v5 + 240) = v43;
  }
  else
  {
    *(_QWORD *)(v5 + 240) = 0;
    swift_retain();
  }
  swift_release();
  v44 = *(NSObject **)(v5 + 56);
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = sub_211963C08;
  *(_QWORD *)(v45 + 24) = v5;
  v85[4] = (uint64_t)sub_2119778B8;
  v85[5] = v45;
  v85[0] = MEMORY[0x24BDAC760];
  v85[1] = 1107296256;
  v85[2] = (uint64_t)sub_211921368;
  v85[3] = (uint64_t)&unk_24CCCCC10;
  v46 = _Block_copy(v85);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v44, v46);
  _Block_release(v46);
  LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v44 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(v5 + 712) + 48) = &off_24CCCBDC0;
    swift_unknownObjectWeakAssign();
    if (qword_254AC7B80 == -1)
      goto LABEL_10;
  }
  swift_once();
LABEL_10:
  v47 = sub_211A47748();
  sub_21194F3E0(v47, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v48 = sub_211A47724();
  v49 = sub_211A47D30();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v82 = (char *)swift_slowAlloc();
    v85[0] = (uint64_t)v82;
    *(_DWORD *)v50 = 136315394;
    v78 = v50 + 4;
    v51 = *(_QWORD *)(v5 + 16);
    v52 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    v53 = sub_21193707C(0xCuLL, v51, v52);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    swift_bridgeObjectRelease();
    v60 = MEMORY[0x212BE376C](v53, v55, v57, v59);
    v62 = v61;
    swift_bridgeObjectRelease();
    v84 = sub_211950A9C(v60, v62, v85);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    if ((v81 & 1) != 0)
      v63 = 0x70616E7320736120;
    else
      v63 = 0;
    if ((v81 & 1) != 0)
      v64 = 0xEC000000746F6873;
    else
      v64 = 0xE000000000000000;
    v84 = sub_211950A9C(v63, v64, v85);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v48, v49, "FMFDataManager<%s>.init%s", (uint8_t *)v50, 0x16u);
    v65 = v82;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v65, -1, -1);
    MEMORY[0x212BE48A0](v50, -1, -1);
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
    swift_release_n();
  }
  swift_release();
  return v5;
}

uint64_t sub_21192591C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFDevice.init(from:)(a1, a2);
}

uint64_t sub_211925930@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFConfig.init(from:)(a1, a2);
}

uint64_t FMFConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v5 = sub_211958C38(&qword_254ACADC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211926030();
  sub_211A48360();
  if (!v2)
  {
    v58 = 0;
    v10 = sub_211A48168();
    v58 = 1;
    v11 = sub_211A48168();
    v58 = 2;
    v57 = sub_211A48168();
    v58 = 3;
    sub_211A4815C();
    v13 = v12;
    v58 = 4;
    v56 = sub_211A48168();
    v58 = 5;
    v55 = sub_211A48168();
    v58 = 6;
    v54 = sub_211A48150();
    v58 = 7;
    v53 = sub_211A48168();
    v58 = 8;
    v52 = sub_211A48168();
    v58 = 9;
    v51 = sub_211A48168();
    v58 = 10;
    v50 = sub_211A48168();
    v58 = 11;
    v49 = sub_211A48168();
    v58 = 12;
    v48 = sub_211A48150();
    v58 = 13;
    v47 = sub_211A48168();
    v58 = 14;
    v46 = sub_211A48168();
    v58 = 15;
    v45 = sub_211A48168();
    v58 = 16;
    v44 = sub_211A48168();
    v58 = 17;
    v14 = sub_211A4812C();
    v16 = 20;
    if ((v15 & 1) == 0)
      v16 = v14;
    v43 = v16;
    v58 = 18;
    v42 = sub_211A48168();
    v58 = 19;
    v41 = sub_211A48168();
    v58 = 20;
    v40 = sub_211A48168();
    v58 = 21;
    v39 = sub_211A48168();
    v58 = 22;
    v38 = sub_211A48168();
    v58 = 23;
    v37 = sub_211A48168();
    v58 = 24;
    v36 = sub_211A48168();
    v58 = 25;
    v35 = sub_211A48150();
    v58 = 26;
    v34 = sub_211A48150();
    v58 = 27;
    v33 = sub_211A48168();
    v58 = 28;
    v32 = sub_211A48168();
    v58 = 29;
    v31 = sub_211A48168();
    v58 = 30;
    v18 = sub_211A48168();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v19 = v54 & 1;
    v20 = v48 & 1;
    v21 = v35 & 1;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    v22 = v34 & 1;
    *(_QWORD *)(a2 + 16) = v57;
    *(_QWORD *)(a2 + 24) = v13;
    v23 = v55;
    *(_QWORD *)(a2 + 32) = v56;
    *(_QWORD *)(a2 + 40) = v23;
    *(_BYTE *)(a2 + 48) = v19;
    *(_QWORD *)(a2 + 56) = v53;
    *(_QWORD *)(a2 + 64) = v52;
    *(_QWORD *)(a2 + 72) = v51;
    *(_QWORD *)(a2 + 80) = v50;
    *(_QWORD *)(a2 + 88) = v49;
    *(_BYTE *)(a2 + 96) = v20;
    v24 = v46;
    *(_QWORD *)(a2 + 104) = v47;
    *(_QWORD *)(a2 + 112) = v24;
    v25 = v44;
    *(_QWORD *)(a2 + 120) = v45;
    *(_QWORD *)(a2 + 128) = v25;
    v26 = v42;
    *(_QWORD *)(a2 + 136) = v43;
    *(_QWORD *)(a2 + 144) = v26;
    v27 = v40;
    *(_QWORD *)(a2 + 152) = v41;
    *(_QWORD *)(a2 + 160) = v27;
    v28 = v38;
    *(_QWORD *)(a2 + 168) = v39;
    *(_QWORD *)(a2 + 176) = v28;
    v29 = v36;
    *(_QWORD *)(a2 + 184) = v37;
    *(_QWORD *)(a2 + 192) = v29;
    *(_BYTE *)(a2 + 200) = v21;
    *(_BYTE *)(a2 + 201) = v22;
    v30 = v32;
    *(_QWORD *)(a2 + 208) = v33;
    *(_QWORD *)(a2 + 216) = v30;
    *(_QWORD *)(a2 + 224) = v31;
    *(_QWORD *)(a2 + 232) = v18;
  }
  return sub_211931C34((uint64_t)a1);
}

unint64_t sub_211926030()
{
  unint64_t result;

  result = qword_254ACADD0;
  if (!qword_254ACADD0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DFCC, &type metadata for FMFConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACADD0);
  }
  return result;
}

void sub_211926074(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  unsigned __int8 v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _BYTE v83[456];
  uint64_t v84[61];
  uint64_t v85;
  unint64_t v86;

  v71 = a2;
  v3 = sub_211A47394();
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A473F4();
  v67 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v73 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACD728);
  MEMORY[0x24BDAC7A8](v10, v11);
  v76 = (uint64_t)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_211958C38(&qword_254ACD730);
  v75 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v13);
  v15 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A4713C();
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v82 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v70 = v6;
  v77 = v7;
  v78 = v15;
  v19 = sub_211A47748();
  v20 = sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
  v21 = sub_211A47724();
  v22 = sub_211A47D30();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_21190D000, v21, v22, "FMDiskIO: read from disk", v23, 2u);
    MEMORY[0x212BE48A0](v23, -1, -1);
  }

  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v25 = a1[3];
  v26 = a1[4];
  v28 = a1[5];
  v27 = a1[6];
  v85 = v25;
  v86 = v26;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  v29 = a1;
  v30 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v24, sel_fileExistsAtPath_, v30);

  if ((v31 & 1) != 0)
  {
    v74 = v20;
    v64 = v29;
    v85 = v25;
    v86 = v26;
    swift_bridgeObjectRetain();
    sub_211A479B8();
    v32 = v82;
    sub_211A470F4();
    swift_bridgeObjectRelease();
    v37 = sub_211A47148();
    v39 = v38;
    v40 = v25;
    v72 = v27;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v32, v81);
    v41 = v64;
    swift_retain();
    sub_211926D20(v37, v39);
    swift_retain();
    v63 = v37;
    sub_211926D20(v37, v39);
    v42 = sub_211A47724();
    v43 = sub_211A47D30();
    v44 = v43;
    v45 = os_log_type_enabled(v42, v43);
    v65 = v40;
    v66 = v28;
    v62[1] = v26;
    if (v45)
    {
      v46 = swift_slowAlloc();
      v82 = (char *)swift_slowAlloc();
      v84[0] = (uint64_t)v82;
      *(_DWORD *)v46 = 136315394;
      LODWORD(v81) = v44;
      v85 = v40;
      v86 = v26;
      swift_bridgeObjectRetain();
      v47 = v42;
      sub_211A479B8();
      v85 = sub_211950A9C(v85, v86, v84);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      v48 = v63;
      v49 = sub_211A47154();
      v85 = sub_211950A9C(v49, v50, v84);
      sub_211A47E2C();
      v41 = v64;
      swift_bridgeObjectRelease();
      sub_21193B8F8(v48, v39);
      sub_21193B8F8(v48, v39);
      _os_log_impl(&dword_21190D000, v42, (os_log_type_t)v81, "FMDiskIO: file: %s data: %s", (uint8_t *)v46, 0x16u);
      v51 = v82;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v51, -1, -1);
      MEMORY[0x212BE48A0](v46, -1, -1);

    }
    else
    {
      swift_release_n();
      v48 = v63;
      sub_21193B8F8(v63, v39);
      sub_21193B8F8(v48, v39);

    }
    v52 = (uint64_t)v78;
    sub_211A47004();
    swift_allocObject();
    sub_211A46FF8();
    v53 = v76;
    sub_21192C6B8((uint64_t)v41 + *(_QWORD *)(*v41 + 128), v76, &qword_254ACD728);
    v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v53, 1, v79);
    v55 = v77;
    if (v54 == 1)
    {
      sub_211923EE8(v53, &qword_254ACD728);
      sub_211963740();
      sub_211A46FEC();
      sub_21193B8F8(v48, v39);
      swift_release();
    }
    else
    {
      sub_21192DD68(v53, v52, &qword_254ACD730);
      sub_211910908(&qword_254ACD760, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C40], MEMORY[0x24BE31C50]);
      sub_211A46FEC();
      v62[2] = v39;
      v58 = v70;
      sub_211A473A0();
      v82 = (char *)sub_211A473E8();
      v60 = v59;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v58, v69);
      sub_211963740();
      v61 = (uint64_t)v82;
      sub_211A46FEC();
      swift_release();
      sub_21193B8F8(v61, v60);
      sub_21193B8F8(v48, v39);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v73, v55);
      sub_211923EE8((uint64_t)v78, &qword_254ACD730);
    }
    nullsub_1(&v85, v56);
    sub_21192DD68((uint64_t)&v85, (uint64_t)v83, &qword_254ACD750);
    v57 = v71;
    sub_21192DD68(v71, (uint64_t)v84, &qword_254ACD750);
    sub_21192DD68((uint64_t)v83, v57, &qword_254ACD750);
    sub_2119FB558((uint64_t)v84);
  }
  else
  {
    v65 = v25;
    v66 = v28;
    v72 = v27;
    swift_retain_n();
    v33 = sub_211A47724();
    v34 = sub_211A47D24();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v84[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v85 = v65;
      v86 = v26;
      swift_bridgeObjectRetain();
      sub_211A479B8();
      v85 = sub_211950A9C(v85, v86, v84);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v33, v34, "FMDiskIO: Disk archive does not exist at: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v36, -1, -1);
      MEMORY[0x212BE48A0](v35, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_211926D20(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_211926D64()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  id v40;
  void *v41;
  void *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  NSObject *v49;
  char v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  uint64_t (*v62)();
  uint64_t v63;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFGarbageCollector: verifyingAccount...", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }

  v5 = *(void **)(v0 + 32);
  v6 = objc_msgSend(v5, sel_aa_primaryAppleAccount);
  if (!v6)
  {
    v11 = sub_211A47724();
    v12 = sub_211A47D24();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21190D000, v11, v12, "FMFGarbageCollector: error retrieving primary account", v13, 2u);
      MEMORY[0x212BE48A0](v13, -1, -1);
    }

    sub_211A399CC();
    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_aa_personID);
  v53 = v5;
  if (v8)
  {
    v55 = sub_211A47910();
    v10 = v9;
  }
  else
  {
    v55 = 0;
    v10 = 0;
  }
  v14 = (void *)objc_opt_self();
  v56 = v0;
  v15 = (void *)sub_211A478EC();
  v16 = (void *)sub_211A478EC();
  v17 = objc_msgSend(v14, sel_stringForKey_inDomain_, v15, v16);

  v52 = v14;
  if (v17)
  {
    v54 = sub_211A47910();
    v19 = v18;

  }
  else
  {
    v54 = 0;
    v19 = 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_211A47724();
  v21 = sub_211A47D30();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v22 = 136315394;
    v57 = v23;
    aBlock = v55;
    v59 = v10;
    swift_bridgeObjectRetain();
    sub_211958C38(&qword_254AC7C58);
    v24 = sub_211A47928();
    v51 = v8;
    aBlock = sub_211950A9C(v24, v25, &v57);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    aBlock = v54;
    v59 = v19;
    swift_bridgeObjectRetain();
    v26 = sub_211A47928();
    aBlock = sub_211950A9C(v26, v27, &v57);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v20, v21, "FMFGarbageCollector: verifyingAccount new: %s previous: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v23, -1, -1);
    MEMORY[0x212BE48A0](v22, -1, -1);

    if (v10)
      goto LABEL_17;
LABEL_22:
    if (!v19)
      goto LABEL_27;
    goto LABEL_23;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!v10)
    goto LABEL_22;
LABEL_17:
  if (!v19)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v55 == v54 && v10 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v50 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0)
  {
LABEL_24:
    v28 = sub_211A47724();
    v29 = sub_211A47D30();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_21190D000, v28, v29, "FMFGarbageCollector: purging cache because person id are not matching.", v30, 2u);
      MEMORY[0x212BE48A0](v30, -1, -1);
    }

    sub_211A399CC();
  }
LABEL_27:
  v31 = objc_msgSend(v7, sel_aa_fmfAccount, v51);
  v32 = objc_msgSend(v53, sel_credentialForAccount_, v31);
  v33 = v32;
  if (v32
    && (v34 = objc_msgSend(v32, sel_credentialItemForKey_, *MEMORY[0x24BDB4228])) != 0)
  {

    v35 = *(void **)(v56 + 64);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v56;
    *(_QWORD *)(v36 + 24) = v31;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_211962D5C;
    *(_QWORD *)(v37 + 24) = v36;
    v62 = sub_2119778B8;
    v63 = v37;
    aBlock = MEMORY[0x24BDAC760];
    v59 = 1107296256;
    v60 = sub_211921368;
    v61 = &unk_24CCCFA30;
    v38 = _Block_copy(&aBlock);
    v39 = v35;
    swift_retain();
    v40 = v31;
    swift_retain();
    swift_release();
    dispatch_sync(v39, v38);

    _Block_release(v38);
    LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v38 & 1) == 0)
    {
      v41 = (void *)sub_211A478EC();
      v42 = (void *)sub_211A478EC();
      objc_msgSend(v52, sel_setString_forKey_inDomain_, v8, v41, v42);
      swift_release();

      return;
    }
  }
  else
  {

    v43 = sub_211A47724();
    v44 = sub_211A47D30();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_21190D000, v43, v44, "FMFGarbageCollector: purging cache because the token is missing", v45, 2u);
      MEMORY[0x212BE48A0](v45, -1, -1);
    }

    v46 = *(void **)(v56 + 64);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = sub_211A39E90;
    *(_QWORD *)(v47 + 24) = v56;
    v62 = sub_2119213A8;
    v63 = v47;
    aBlock = MEMORY[0x24BDAC760];
    v59 = 1107296256;
    v60 = sub_211921368;
    v61 = &unk_24CCCF9B8;
    v48 = _Block_copy(&aBlock);
    swift_retain();
    v49 = v46;
    swift_retain();
    swift_release();
    dispatch_sync(v49, v48);

    _Block_release(v48);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v48 & 1) == 0)
    {
      sub_211A399CC();
      swift_release();

      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2119275E0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;

  return sub_2119275F8(v1, a1);
}

uint64_t sub_2119275F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1[10];
  v4 = v3[5];
  v5 = v3[6];
  v6 = v3[7];
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = v3[8];
  if (!v6)
  {
    v7 = a1[93];
    v8 = a1[94];
    v9 = a1[95];
    v10 = a1[96];
    sub_21192769C(v7, v8, v9);
  }
  *a2 = v7;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v10;
  return sub_21192769C(v4, v5, v6);
}

uint64_t sub_21192769C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2119276CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMFFeatures.init(from:)(a1, a2);
}

uint64_t FMFFeatures.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = sub_211958C38(&qword_254ACDA80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211927C68();
  sub_211A48360();
  if (!v2)
  {
    LOBYTE(v36) = 0;
    v10 = sub_211A48150();
    LOBYTE(v36) = 1;
    v11 = sub_211A48150();
    LOBYTE(v36) = 2;
    LODWORD(v34) = sub_211A48150();
    LOBYTE(v36) = 3;
    LODWORD(v33) = sub_211A48150();
    LOBYTE(v36) = 4;
    LODWORD(v32) = sub_211A48150();
    LOBYTE(v36) = 5;
    LODWORD(v31) = sub_211A48150();
    LOBYTE(v36) = 6;
    LODWORD(v30) = sub_211A48150();
    LOBYTE(v36) = 7;
    LODWORD(v29) = sub_211A48150();
    LOBYTE(v36) = 8;
    v28 = sub_211A48150();
    LOBYTE(v36) = 9;
    v27 = sub_211A48150();
    LOBYTE(v36) = 10;
    v26 = sub_211A48150();
    LOBYTE(v36) = 11;
    v25 = sub_211A48150();
    LOBYTE(v36) = 12;
    HIDWORD(v24) = sub_211A48150();
    LOBYTE(v36) = 13;
    v12 = sub_211A48150();
    v14 = v10 & 1;
    if ((v11 & 1) != 0)
      v14 = v10 & 1 | 2;
    if ((v34 & 1) != 0)
      v14 |= 4uLL;
    if ((v33 & 1) != 0)
      v14 |= 8uLL;
    if ((v32 & 1) != 0)
      v14 |= 0x10uLL;
    if ((v31 & 1) != 0)
      v14 |= 0x20uLL;
    if ((v30 & 1) != 0)
      v14 |= 0x40uLL;
    if ((v29 & 1) != 0)
      v14 |= 0x80uLL;
    if ((v28 & 1) != 0)
      v14 |= 0x100uLL;
    if ((v27 & 1) != 0)
      v14 |= 0x200uLL;
    if ((v26 & 1) != 0)
      v14 |= 0x400uLL;
    if ((v25 & 1) != 0)
      v14 |= 0x800uLL;
    if ((v24 & 0x100000000) != 0)
      v14 |= 0x1000uLL;
    if ((v12 & 1) != 0)
      v14 |= 0x2000uLL;
    v34 = v14;
    v36 = v14;
    v32 = FMFFeatures.debugDescription.getter();
    v16 = v15;
    if (qword_254AC7B80 != -1)
      swift_once();
    v17 = sub_211A47748();
    sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v18 = sub_211A47724();
    v19 = sub_211A47D30();
    v33 = v18;
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v36 = v31;
      v30 = v20;
      *(_DWORD *)v20 = 136315138;
      v29 = v20 + 4;
      swift_bridgeObjectRetain();
      v35 = sub_211950A9C(v32, v16, &v36);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      v21 = v33;
      v22 = v30;
      _os_log_impl(&dword_21190D000, v33, v19, "FMFFeature: initialized %s", v30, 0xCu);
      v23 = v31;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v23, -1, -1);
      MEMORY[0x212BE48A0](v22, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v34;
  }
  return sub_211931C34((uint64_t)a1);
}

unint64_t sub_211927C68()
{
  unint64_t result;

  result = qword_254ACDA88;
  if (!qword_254ACDA88)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50548, &type metadata for FMFFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDA88);
  }
  return result;
}

unint64_t FMFFeatures.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000018;
}

_QWORD *sub_211927D4C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _BOOL4 v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  void *v52;
  uint64_t v53;
  _OWORD v54[29];
  _BYTE v55[456];
  char v56;
  uint64_t v57;
  _BYTE v58[248];
  uint64_t v59;
  _BYTE v60[456];
  _BYTE v61[256];
  _QWORD *v62;

  v52 = a2;
  v53 = sub_211958C38(&qword_254ACA9B8);
  v4 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(&v60[72], 0, 40);
  v60[112] = 1;
  sub_21196A450((uint64_t)v61);
  sub_2119B1B50((uint64_t)v61, (uint64_t)&v60[120]);
  memset(&v60[360], 0, 57);
  v8 = a1[3];
  v62 = a1;
  sub_211931DB4(a1, v8);
  sub_21195E4EC();
  sub_211A48360();
  if (v2)
  {
    sub_211931C34((uint64_t)v62);
    v10 = 0;
  }
  else
  {
    v51 = &v60[120];
    sub_211958C38(&qword_254AC8408);
    LOBYTE(v54[0]) = 0;
    sub_211930F74();
    v9 = v7;
    sub_211A48174();
    v12 = *(_QWORD *)v55;
    *(_QWORD *)v60 = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 1;
    swift_bridgeObjectRetain();
    sub_211A48174();
    v50 = v12;
    v13 = *(_QWORD *)v55;
    *(_QWORD *)&v60[8] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 2;
    swift_bridgeObjectRetain();
    sub_211A48174();
    v49 = v13;
    v14 = *(_QWORD *)v55;
    *(_QWORD *)&v60[16] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 3;
    swift_bridgeObjectRetain();
    sub_211A48174();
    v48 = v14;
    v15 = *(_QWORD *)v55;
    *(_QWORD *)&v60[24] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 4;
    swift_bridgeObjectRetain();
    sub_211A48174();
    v16 = *(_QWORD *)v55;
    *(_QWORD *)&v60[32] = *(_QWORD *)v55;
    sub_211958C38(&qword_254AC8420);
    LOBYTE(v54[0]) = 5;
    v17 = sub_21193106C();
    swift_bridgeObjectRetain();
    v47 = v17;
    sub_211A48174();
    v46 = v16;
    v18 = *(_QWORD *)v55;
    *(_QWORD *)&v60[40] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 6;
    swift_bridgeObjectRetain();
    sub_211A48174();
    *(_QWORD *)&v60[48] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 7;
    v45 = *(_QWORD *)v55;
    swift_bridgeObjectRetain();
    sub_211A48174();
    *(_QWORD *)&v60[56] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 8;
    v44 = *(_QWORD *)v55;
    swift_bridgeObjectRetain();
    sub_211A48174();
    v31 = v15;
    v32 = v18;
    v19 = *(_QWORD *)v55;
    *(_QWORD *)&v60[64] = *(_QWORD *)v55;
    LOBYTE(v54[0]) = 9;
    sub_211931908();
    v30 = v19;
    swift_bridgeObjectRetain();
    v47 = (unint64_t)v9;
    sub_211A48174();
    v40 = *(_OWORD *)&v55[8];
    v41 = *(_QWORD *)&v55[24];
    v20 = 256;
    if (!v55[1])
      v20 = 0;
    v21 = v20 | v55[0];
    v22 = 0x10000;
    if (!v55[2])
      v22 = 0;
    v39 = v21 | v22 | ((unint64_t)v55[3] << 24);
    *(_QWORD *)&v60[72] = v39;
    *(_OWORD *)&v60[80] = v40;
    *(_QWORD *)&v60[96] = v41;
    v58[247] = 10;
    sub_21192769C(v39, v40, *((uint64_t *)&v40 + 1));
    sub_21193194C();
    sub_211A48174();
    v42 = 0;
    v33 = v59;
    *(_QWORD *)&v60[104] = v59;
    v60[112] = 0;
    LOBYTE(v57) = 11;
    sub_2119311A8();
    sub_211A48174();
    v54[12] = *(_OWORD *)&v55[192];
    v54[13] = *(_OWORD *)&v55[208];
    v54[14] = *(_OWORD *)&v55[224];
    v54[8] = *(_OWORD *)&v55[128];
    v54[9] = *(_OWORD *)&v55[144];
    v54[10] = *(_OWORD *)&v55[160];
    v54[11] = *(_OWORD *)&v55[176];
    v54[4] = *(_OWORD *)&v55[64];
    v54[5] = *(_OWORD *)&v55[80];
    v54[6] = *(_OWORD *)&v55[96];
    v54[7] = *(_OWORD *)&v55[112];
    v54[0] = *(_OWORD *)v55;
    v54[1] = *(_OWORD *)&v55[16];
    v54[2] = *(_OWORD *)&v55[32];
    v54[3] = *(_OWORD *)&v55[48];
    nullsub_1(v54, *(double *)&v55[48]);
    sub_2119B1B50((uint64_t)v54, (uint64_t)v58);
    sub_2119B1B50((uint64_t)v58, (uint64_t)v51);
    LOBYTE(v54[0]) = 12;
    sub_211931164();
    sub_211A48174();
    v43 = 0;
    v51 = *(_BYTE **)v55;
    v36 = *(_OWORD *)&v55[8];
    v37 = *(_QWORD *)&v55[32];
    v34 = *(_QWORD *)&v55[24];
    v35 = *(_OWORD *)&v55[40];
    v38 = v55[56];
    *(_QWORD *)&v60[360] = *(_QWORD *)v55;
    *(_OWORD *)&v60[368] = *(_OWORD *)&v55[8];
    *(_QWORD *)&v60[384] = *(_QWORD *)&v55[24];
    *(_QWORD *)&v60[392] = *(_QWORD *)&v55[32];
    *(_QWORD *)&v60[400] = *(_QWORD *)&v55[40];
    *(_QWORD *)&v60[408] = *(_QWORD *)&v55[48];
    v60[416] = v55[56];
    v29 = sub_211958C38(&qword_254AC83A0);
    LOBYTE(v54[0]) = 13;
    sub_211933F10((uint64_t)v51);
    sub_21192A218(&qword_254AC83A8, &qword_254AC83A0, (uint64_t (*)(void))sub_211961680, MEMORY[0x24BEE12D0]);
    v23 = v43;
    sub_211A48174();
    v10 = v23 == 0;
    if (!v23)
    {
      v24 = *(_QWORD *)v55;
      *(_QWORD *)&v60[424] = *(_QWORD *)v55;
      sub_211958C38(&qword_254ACA9C8);
      LOBYTE(v54[0]) = 16;
      sub_21195E478(&qword_254ACA9D0, (uint64_t (*)(void))sub_211964884, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
      swift_bridgeObjectRetain();
      sub_211A48174();
      v25 = *(_QWORD *)v55;
      *(_QWORD *)&v60[448] = *(_QWORD *)v55;
      sub_211958C38(&qword_254ACA9D8);
      LOBYTE(v54[0]) = 14;
      sub_21192A218(&qword_254ACA9E0, &qword_254ACA9D8, (uint64_t (*)(void))sub_211961910, MEMORY[0x24BEE12D0]);
      swift_bridgeObjectRetain();
      sub_211A48174();
      v26 = *(_QWORD *)v55;
      *(_QWORD *)&v60[432] = *(_QWORD *)v55;
      sub_211958C38(&qword_254AC8388);
      v56 = 15;
      sub_211930FF0();
      swift_bridgeObjectRetain();
      sub_211A48174();
      v27 = v42 != 0;
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v47, v53);
      v28 = v57;
      *(_QWORD *)&v60[440] = v57;
      *(_QWORD *)&v54[0] = v50;
      *((_QWORD *)&v54[0] + 1) = v49;
      *(_QWORD *)&v54[1] = v48;
      *((_QWORD *)&v54[1] + 1) = v31;
      *(_QWORD *)&v54[2] = v46;
      *((_QWORD *)&v54[2] + 1) = v32;
      *(_QWORD *)&v54[3] = v45;
      *((_QWORD *)&v54[3] + 1) = v44;
      *(_QWORD *)&v54[4] = v30;
      *((_QWORD *)&v54[4] + 1) = v39;
      v54[5] = v40;
      *(_QWORD *)&v54[6] = v41;
      *((_QWORD *)&v54[6] + 1) = v33;
      LOBYTE(v54[7]) = v27;
      sub_2119B1B50((uint64_t)v58, (uint64_t)&v54[7] + 8);
      *((_QWORD *)&v54[22] + 1) = v51;
      v54[23] = v36;
      *(_QWORD *)&v54[24] = v34;
      *((_QWORD *)&v54[24] + 1) = v37;
      v54[25] = v35;
      LOBYTE(v54[26]) = v38;
      *((_QWORD *)&v54[26] + 1) = v24;
      *(_QWORD *)&v54[27] = v26;
      *((_QWORD *)&v54[27] + 1) = v28;
      *(_QWORD *)&v54[28] = v25;
      sub_2119337E0(v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211933F60((uint64_t)v51);
      sub_21195A23C(v39, v40, *((uint64_t *)&v40 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      memcpy(v52, v54, 0x1C8uLL);
      sub_211931C34((uint64_t)v62);
      memcpy(v55, v60, sizeof(v55));
      return sub_2119B1B98(v55);
    }
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v47, v53);
    sub_211933F60((uint64_t)v51);
    sub_21195A23C(v39, v40, *((uint64_t *)&v40 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211931C34((uint64_t)v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_21195A23C(*(uint64_t *)&v60[72], *(uint64_t *)&v60[80], *(uint64_t *)&v60[88]);
  result = (_QWORD *)sub_211933F60(*(uint64_t *)&v60[360]);
  if (v10)
    return (_QWORD *)swift_bridgeObjectRelease();
  return result;
}

uint64_t FMFManager.init(configuration:tabInfo:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  int v45;
  id v46;
  uint64_t v47;
  char *v48;
  void (*v49)(__int128 *__return_ptr);
  uint64_t v50;
  char *v51;
  char *v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  char *v57;
  int v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v105;
  char *v106;
  __int128 v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  __int128 v117[3];

  v3 = v2;
  v113 = a1;
  v5 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v106 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211958C38(&qword_254AC9200);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v111 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v112 = (char *)&v105 - v13;
  v114 = sub_211A47D90();
  v110 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114, v14);
  v108 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v16, v17);
  v18 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_211A4722C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = *((_QWORD *)a2 + 2);
  sub_211A47220();
  v25 = sub_211A47214();
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t))(v21 + 8);
  v107 = *a2;
  v28(v24, v20);
  *(_QWORD *)(v3 + 16) = v25;
  *(_QWORD *)(v3 + 24) = v27;
  *(_QWORD *)(v3 + 40) = 0;
  swift_unknownObjectWeakInit();
  sub_211920E14();
  sub_211A477B4();
  *(_QWORD *)&v117[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC74((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310, MEMORY[0x24BEE12C8]);
  v29 = v113;
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v108, *MEMORY[0x24BEE5750], v114);
  *(_QWORD *)(v3 + 48) = sub_211A47DC0();
  *(_WORD *)(v3 + 224) = 0;
  *(_BYTE *)(v3 + 226) = 0;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 200) = 0u;
  v30 = v3 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  v31 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized) = 0;
  *(_QWORD *)(v3 + 56) = v29;
  *(_OWORD *)(v3 + 64) = v107;
  *(_QWORD *)(v3 + 80) = v109;
  v32 = *(_QWORD *)(v29 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (v32)
    v33 = *(_QWORD *)(v32 + 32) != 0;
  else
    v33 = 0;
  v34 = OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch;
  LODWORD(v110) = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
  LODWORD(v114) = v33;
  *(_BYTE *)(v3 + 225) = v33;
  v35 = v29 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v36 = sub_211A47274();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v39 = (uint64_t)v112;
  v109 = v35;
  v38(v112, v35, v36);
  v40 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56);
  v40(v39, 0, 1, v36);
  type metadata accessor for FMFReverseGeocodingCache();
  swift_allocObject();
  v41 = v111;
  sub_21192C6B8(v39, v111, &qword_254AC9200);
  swift_retain();
  v42 = sub_21192244C(v41);
  sub_211923EE8(v39, &qword_254AC9200);
  v43 = 0;
  if (*(_BYTE *)(v29 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1)
    v43 = *(_BYTE *)(v29 + v34) ^ 1;
  type metadata accessor for FMFGarbageCollector();
  swift_allocObject();
  *(_QWORD *)(v3 + 104) = sub_21191D5E8(v43 & 1);
  type metadata accessor for FMFSystemStateController();
  swift_allocObject();
  *(_QWORD *)(v3 + 112) = sub_21191DF8C();
  *(_QWORD *)(v3 + 216) = v42;
  type metadata accessor for FMFDataManager();
  swift_allocObject();
  swift_retain_n();
  v44 = swift_retain();
  v111 = v42;
  v45 = v114;
  *(_QWORD *)(v3 + 88) = sub_211924F00(v44, 0, v42, v114);
  *(_QWORD *)(v3 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C00]), sel_init);
  v46 = objc_allocWithZone((Class)type metadata accessor for FMFGenericResponseHandler());
  v47 = swift_retain();
  v48 = sub_211923F24(v47, v45);
  *(_QWORD *)(v3 + 120) = v48;
  v49 = *(void (**)(__int128 *__return_ptr))(v29
                                                      + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  v50 = (uint64_t)v112;
  v38(v112, v109, v36);
  v40(v50, 0, 1, v36);
  v51 = v48;
  v49(v117);

  sub_211923EE8(v50, &qword_254AC9200);
  sub_2119622B4(v117, v3 + 136);
  v52 = 0;
  if ((*(_BYTE *)(v29 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) & 2) != 0)
  {
    swift_beginAccess();
    sub_2119299DC(v3 + 136, (uint64_t)v117);
    v53 = objc_allocWithZone((Class)type metadata accessor for FMFMyLocationController());
    v52 = sub_21191C544((uint64_t)v117);
  }
  v54 = *(void **)(v3 + 184);
  *(_QWORD *)(v3 + 184) = v52;

  v55 = *(_QWORD *)(v3 + 88);
  swift_beginAccess();
  sub_2119299DC(v3 + 136, (uint64_t)v117);
  v56 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
  swift_retain();
  v57 = (char *)sub_21191D978(0xD000000000000017, 0x8000000211A56350, 0xD000000000000024, 0x8000000211A54ED0, 0, 0);
  type metadata accessor for FMFRefreshController();
  swift_allocObject();
  v58 = v114;
  *(_QWORD *)(v3 + 128) = sub_2119229AC(v55, (uint64_t)v117, v57, v114, v110);
  sub_2119299DC(v3 + 136, (uint64_t)v117);
  v59 = *(_QWORD *)(v3 + 88);
  v60 = *(void **)(v3 + 96);
  v61 = *(_QWORD *)(v3 + 112);
  type metadata accessor for FMFActionsController();
  swift_allocObject();
  swift_retain();
  v62 = v60;
  swift_retain();
  *(_QWORD *)(v3 + 176) = sub_21191E2D4((uint64_t)v117, v59, v62, v61);
  if (v58)
  {
    type metadata accessor for FMFProactiveLocationController();
    swift_allocObject();
    v63 = v111;
    swift_retain();
    v64 = swift_retain();
    sub_2119B20F4(v64, v63);
    *(_QWORD *)(v3 + 192) = v65;
    swift_release();
  }
  else if ((sub_2119393F8() & 1) != 0)
  {
    type metadata accessor for FMFSecureLocationController(0);
    swift_allocObject();
    *(_QWORD *)(v3 + 208) = sub_211910408();
    swift_release();
    v66 = sub_211A47B8C();
    v67 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v106, 1, 1, v66);
    v68 = (_QWORD *)swift_allocObject();
    v68[2] = 0;
    v68[3] = 0;
    v68[4] = v3;
    swift_retain();
    sub_2119E21D4(v67, (uint64_t)&unk_254ACC640, (uint64_t)v68);
    swift_release();
  }
  else
  {
    v69 = *(_QWORD *)(v3 + 88);
    v70 = *(void **)(v3 + 96);
    type metadata accessor for FMFSecureLocationRefreshController();
    swift_allocObject();
    swift_retain();
    *(_QWORD *)(v3 + 200) = sub_211A09B18(v69, v70);
    swift_release();
    v71 = *(_QWORD *)(v3 + 200);
    if (v71)
    {
      *(_QWORD *)(v71 + 176) = &off_24CCCB5D0;
      swift_unknownObjectWeakAssign();
      v72 = *(_QWORD *)(v3 + 200);
      if (v72)
      {
        *(_QWORD *)(v72 + 192) = &off_24CCCB608;
        swift_unknownObjectWeakAssign();
      }
    }
  }
  *(_QWORD *)(*(_QWORD *)(v3 + 88) + 40) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v3 + 112) + 24) = &off_24CCCB550;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v73 = *(_QWORD *)(v3 + 160);
  v74 = *(_QWORD *)(v3 + 168);
  sub_21192997C(v3 + 136, v73);
  v75 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v74 + 16);
  v76 = swift_retain();
  v75(v76, &off_24CCCB540, v73, v74);
  v77 = *(_QWORD *)(v3 + 160);
  v78 = *(_QWORD *)(v3 + 168);
  sub_21192997C(v3 + 136, v77);
  v79 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v78 + 40);
  v80 = swift_retain();
  v79(v80, &off_24CCCB560, v77, v78);
  swift_endAccess();
  v81 = *(_QWORD *)(v3 + 120) + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v81 + 8) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v3 + 128) + 40) = &off_24CCCB4A8;
  swift_unknownObjectWeakAssign();
  v82 = *(_QWORD *)(v3 + 184);
  if (v82)
  {
    *(_QWORD *)(v82 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8) = &protocol witness table for FMFManager;
    swift_unknownObjectWeakAssign();
  }
  *(_QWORD *)(*(_QWORD *)(v3 + 176) + 40) = &off_24CCCB5A0;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v3 + 104) + 80) = &off_24CCCB5C0;
  swift_unknownObjectWeakAssign();
  if (qword_254AC7B80 != -1)
    swift_once();
  v83 = sub_211A47748();
  sub_21194F3E0(v83, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v84 = sub_211A47724();
  v85 = sub_211A47D30();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = swift_slowAlloc();
    v112 = (char *)swift_slowAlloc();
    v116 = v112;
    *(_DWORD *)v86 = 136315650;
    v87 = *(_QWORD *)(v3 + 16);
    v88 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
    v89 = sub_21193707C(0xCuLL, v87, v88);
    v91 = v90;
    v93 = v92;
    v95 = v94;
    swift_bridgeObjectRelease();
    v96 = MEMORY[0x212BE376C](v89, v91, v93, v95);
    v98 = v97;
    swift_bridgeObjectRelease();
    v115 = sub_211950A9C(v96, v98, (uint64_t *)&v116);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v86 + 12) = 2080;
    if ((_DWORD)v114)
      v99 = 0x70616E7320736120;
    else
      v99 = 0;
    if ((_DWORD)v114)
      v100 = 0xEC000000746F6873;
    else
      v100 = 0xE000000000000000;
    v115 = sub_211950A9C(v99, v100, (uint64_t *)&v116);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v86 + 22) = 2080;
    if ((_DWORD)v110)
      v101 = 0x4620676E69737520;
    else
      v101 = 0;
    if ((_DWORD)v110)
      v102 = 0xEB0000000044464DLL;
    else
      v102 = 0xE000000000000000;
    v115 = sub_211950A9C(v101, v102, (uint64_t *)&v116);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v84, v85, "FMFManager<%s>.init%s%s", (uint8_t *)v86, 0x20u);
    v103 = v112;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v103, -1, -1);
    MEMORY[0x212BE48A0](v86, -1, -1);
    swift_release();

    swift_release();
  }
  else
  {
    swift_release();
    swift_release_n();
    swift_release();

  }
  return v3;
}

uint64_t sub_21192997C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2119299A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;

  *(_QWORD *)(*v5 + *a5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_2119299DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_211929A20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFPreferences.init(from:)(a1, a2);
}

uint64_t FMFPreferences.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;

  v5 = sub_211958C38(&qword_254ACA780);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21192A27C();
  sub_211A48360();
  if (!v2)
  {
    LOBYTE(v42) = 1;
    v10 = sub_211A48144();
    v41 = a2;
    v12 = v11;
    v40 = v10;
    LOBYTE(v42) = 0;
    v13 = sub_211A48144();
    v15 = v14;
    LOBYTE(v42) = 2;
    v38 = sub_211A48144();
    v39 = v16;
    LOBYTE(v42) = 3;
    v36 = sub_211A48144();
    v37 = v17;
    LOBYTE(v42) = 4;
    v18 = sub_211A48144();
    v34 = v20;
    v35 = v18;
    sub_211958C38(&qword_254ACA790);
    v44 = 5;
    sub_21192A218(&qword_254ACA798, &qword_254ACA790, (uint64_t (*)(void))sub_21196360C, MEMORY[0x24BEE12D0]);
    sub_211A48174();
    v33 = v42;
    if (v13 == 7562585 && v15 == 0xE300000000000000 || (sub_211A48258() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v21 = 1;
    }
    else
    {
      if (v13 != 28494 || v15 != 0xE200000000000000)
        sub_211A48258();
      swift_bridgeObjectRelease();
      v21 = 0;
    }
    v43 = v21;
    v22 = v38;
    v23 = v39;
    v24 = v41;
    if (v38 == 7562585 && v39 == 0xE300000000000000 || (sub_211A48258() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v25 = 1;
    }
    else
    {
      if (v22 != 28494 || v23 != 0xE200000000000000)
        sub_211A48258();
      swift_bridgeObjectRelease();
      v25 = 0;
    }
    v45 = v25;
    if (v36 == 7562585 && v37 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      v26 = 1;
    }
    else
    {
      v26 = sub_211A48258();
      swift_bridgeObjectRelease();
    }
    v27 = v26 & 1;
    if (v12)
    {
      v28 = sub_211A480F0();
      swift_bridgeObjectRelease();
      v29 = v28 == 1;
    }
    else
    {
      v29 = 2;
    }
    v30 = v33;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v31 = v45;
    *(_BYTE *)v24 = v43;
    *(_BYTE *)(v24 + 1) = v31;
    *(_BYTE *)(v24 + 2) = v27;
    *(_BYTE *)(v24 + 3) = v29;
    v32 = v34;
    *(_QWORD *)(v24 + 8) = v35;
    *(_QWORD *)(v24 + 16) = v32;
    *(_QWORD *)(v24 + 24) = v30;
  }
  return sub_211931C34((uint64_t)a1);
}

uint64_t FMFPreferences.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _DWORD v15[2];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  char v22;

  v3 = sub_211958C38(&qword_254ACA7A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v1;
  v8 = v1[1];
  v15[0] = v1[2];
  v15[1] = v8;
  v17 = v1[3];
  v16 = *((_QWORD *)v1 + 3);
  sub_211931DB4(a1, a1[3]);
  sub_21192A27C();
  sub_211A4836C();
  LOBYTE(v19) = 4;
  v9 = v18;
  sub_211A481B0();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v11 = v17;
  v19 = v16;
  v22 = 5;
  sub_211958C38(&qword_254ACA7B0);
  sub_21192A218(&qword_254ACA7B8, &qword_254ACA7B0, sub_211961438, MEMORY[0x24BEE4AA8]);
  sub_211A481E0();
  v12 = 0x454E4F5952455645;
  if ((v11 & 1) == 0)
    v12 = 0x53444E45495246;
  v13 = 0xE800000000000000;
  if ((v11 & 1) == 0)
    v13 = 0xE700000000000000;
  if (v11 == 2)
  {
    v12 = 0;
    v14 = 0;
  }
  else
  {
    v14 = v13;
  }
  v19 = v12;
  v20 = v14;
  v22 = 1;
  sub_211958C38(&qword_254AC7C58);
  sub_21192A2C0();
  sub_211A481E0();
  swift_bridgeObjectRelease();
  LOBYTE(v19) = 0;
  sub_211A481B0();
  swift_bridgeObjectRelease();
  LOBYTE(v19) = 2;
  sub_211A481B0();
  swift_bridgeObjectRelease();
  LOBYTE(v19) = 3;
  sub_211A481B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21192A218(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_21195E2C0(a2);
    v9 = a3();
    result = MEMORY[0x212BE47C8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21192A27C()
{
  unint64_t result;

  result = qword_254ACA788;
  if (!qword_254ACA788)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D1CC, &type metadata for FMFPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA788);
  }
  return result;
}

unint64_t sub_21192A2C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC7C60;
  if (!qword_254AC7C60)
  {
    v1 = sub_21195E2C0(&qword_254AC7C58);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC7C60);
  }
  return result;
}

uint64_t destroy for FMFDevice()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21192A344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_211A47910();
  v2 = v1;
  if (v0 == sub_211A47910() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t FMDiskIO.KeyPair.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;

  v33 = a5;
  v38 = sub_211A473DC();
  v32 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v9);
  v37 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_211A473B8();
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v11);
  v39 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMDiskIO.KeyPair.CodingKeys(255, a2, a3, a4);
  MEMORY[0x212BE47C8](&unk_211A50F60, v13);
  v42 = sub_211A4818C();
  v35 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v14);
  v16 = (char *)&v32 - v15;
  v34 = type metadata accessor for FMDiskIO.KeyPair(0, a2, a3, a4);
  v17 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v18);
  v20 = (char *)&v32 - v19;
  sub_211931DB4(a1, a1[3]);
  v41 = v16;
  v21 = v43;
  sub_211A48360();
  v22 = a1;
  if (v21)
    return sub_211931C34((uint64_t)a1);
  v24 = v34;
  v23 = v35;
  v43 = v17;
  v25 = (uint64_t)v22;
  v26 = v20;
  v27 = v36;
  v28 = v37;
  v29 = v38;
  v45 = 0;
  sub_211910908(&qword_254ACE080, (uint64_t (*)(uint64_t))MEMORY[0x24BE31BE8], MEMORY[0x24BE31C00]);
  sub_211A48174();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v39, v40);
  v44 = 1;
  sub_211910908(qword_254ACE088, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C18], MEMORY[0x24BE31C30]);
  sub_211A48174();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v41, v42);
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v26[*(int *)(v24 + 44)], v28, v29);
  v30 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v33, v26, v24);
  sub_211931C34(v25);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v26, v24);
}

uint64_t sub_21192A6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x212BE4744](a1, v6, a5);
}

uint64_t FMFFriend.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFriend.shortName.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1])
    return 0;
  v2 = v1[5];
  v3 = v1[6];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMFFriend.isWaitingForShallowLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 72));
}

uint64_t FMFFriend.contact.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FMFFriend() + 76));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  return sub_211958FFC(v4, v5);
}

id sub_21192A810(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_21192A83C(a1, a2, a3, *(_QWORD *)(v3 + 24), *(uint64_t **)(v3 + 32), *(void (**)(_QWORD, void *))(v3 + 40), *(_QWORD *)(v3 + 48), *(void **)(v3 + 56));
}

id sub_21192A83C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD, void *), uint64_t a7, void *a8)
{
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v26;
  id v27;
  char v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  _BYTE *v41;
  void *v42;
  uint64_t v44[6];

  if (a3)
  {
    v13 = sub_211A46F08();
    v44[3] = v13;
    v44[4] = sub_211910908((unint64_t *)&qword_254AC81D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE319D0], MEMORY[0x24BE319B8]);
    v14 = sub_211969B08(v44);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v14, *MEMORY[0x24BE319C0], v13);
    LOBYTE(v13) = MEMORY[0x212BE2D10](v44);
    sub_211931C34((uint64_t)v44);
    if ((v13 & 1) != 0)
    {
      if (qword_254AC7B80 != -1)
        swift_once();
      v15 = sub_211A47748();
      sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
      v16 = a3;
      v17 = a3;
      v18 = sub_211A47724();
      v19 = sub_211A47D30();
      if (os_log_type_enabled(v18, v19))
      {
        v42 = a8;
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v44[0] = v21;
        *(_DWORD *)v20 = 136315138;
        swift_getErrorValue();
        v22 = sub_211A482DC();
        v44[5] = sub_211950A9C(v22, v23, v44);
        sub_211A47E2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21190D000, v18, v19, "FMFServerInteractionController: didn't complete because of error (will check Stewie): %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v21, -1, -1);
        v24 = v20;
        a8 = v42;
        MEMORY[0x212BE48A0](v24, -1, -1);
      }
      else
      {

      }
      v27 = *(id *)(a4 + qword_254ACDD08);
      v28 = sub_2119694DC(v27);

      if ((v28 & 1) != 0 && ((*(uint64_t (**)(void))(qword_254ADC680 + *a5 + 192))() & 1) != 0)
      {
        v29 = sub_211A47724();
        v30 = sub_211A47D30();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_21190D000, v29, v30, "FMFServerInteractionController: discarded alert because refresh request and Stewie-enabled", v31, 2u);
          MEMORY[0x212BE48A0](v31, -1, -1);
        }

      }
      else
      {
        v32 = sub_211A47724();
        v33 = sub_211A47D30();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v34 = 0;
          _os_log_impl(&dword_21190D000, v32, v33, "FMFServerInteractionController: proceeding with alert", v34, 2u);
          MEMORY[0x212BE48A0](v34, -1, -1);
        }

        sub_211A00660(a5, (uint64_t)a3);
      }
    }
    a6(0, a3);
    return objc_msgSend(a8, sel_signal);
  }
  else
  {
    v26 = *a5;
    if (v26 == type metadata accessor for FMFInitRefreshClientRequest())
      *(_BYTE *)(a4 + qword_254ACDD00) = 1;
    if (a2 >> 60 != 15)
      __asm { BR              X10 }
    if (qword_254AC7B80 != -1)
      swift_once();
    v36 = sub_211A47748();
    sub_21194F3E0(v36, (uint64_t)qword_254ADC7E8);
    v37 = sub_211A47724();
    v38 = sub_211A47D30();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_21190D000, v37, v38, "FMFServerInteractionController: received empty data", v39, 2u);
      MEMORY[0x212BE48A0](v39, -1, -1);
    }

    sub_211A011B8();
    v40 = (void *)swift_allocError();
    *v41 = 1;
    a6(0, v40);

    return objc_msgSend(a8, sel_signal);
  }
}

uint64_t sub_21192B434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[6];

  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v28 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v27 = v3;
    v15 = v14;
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v25[1] = v13 + 4;
    swift_bridgeObjectRetain();
    v26 = v6;
    v16 = sub_211A47868();
    v17 = v2;
    v19 = v18;
    swift_bridgeObjectRelease();
    v31 = sub_211950A9C(v16, v19, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    v2 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v11, v12, "FMFServerInteractionController: process server context: %s", v13, 0xCu);
    v6 = v26;
    swift_arrayDestroy();
    v20 = v15;
    v3 = v27;
    MEMORY[0x212BE48A0](v20, -1, -1);
    MEMORY[0x212BE48A0](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_254AC7B90 != -1)
    swift_once();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  aBlock[4] = (uint64_t)sub_211935F88;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21192382C;
  aBlock[3] = (uint64_t)&unk_24CCCD5D8;
  v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v23 = v28;
  sub_211A477B4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v23, v6, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v30);
  return swift_release();
}

uint64_t type metadata accessor for FMFInitRefreshClientResponse()
{
  uint64_t result;

  result = qword_254AC8208;
  if (!qword_254AC8208)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21192B82C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = sub_211A4779C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_updateQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v1;
  aBlock[4] = sub_2119373F0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB168;
  v15 = _Block_copy(aBlock);
  swift_retain();
  v16 = v1;
  sub_211A477B4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v4, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t *sub_21192BA1C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_21192BA30(a1, a2);
}

uint64_t *sub_21192BA30@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  id v86;
  char *v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  __int16 v92;
  uint64_t v93;
  _QWORD v94[2];
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  _BYTE v115[304];
  uint64_t v116[45];
  uint64_t v117[45];
  _BYTE v118[304];
  _QWORD v119[46];

  v107 = a2;
  v3 = sub_211958C38(&qword_254AC89F8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v103 = (char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v104 = (char *)v94 - v9;
  MEMORY[0x24BDAC7A8](v8, v10);
  v108 = (char *)v94 - v11;
  v12 = type metadata accessor for FMFLabelledLocation();
  v109 = *(_QWORD *)(v12 - 8);
  v110 = v12;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v112 = (uint64_t)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v101 = (uint64_t)v94 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v113 = (char *)v94 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v102 = (uint64_t)v94 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v111 = (_QWORD *)((char *)v94 - v27);
  MEMORY[0x24BDAC7A8](v26, v28);
  v100 = (uint64_t)v94 - v29;
  v30 = sub_211A47208();
  v31 = *(_QWORD *)(v30 - 8);
  v105 = v30;
  v106 = v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v34 = (char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_211958C38(&qword_254AC8A00);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)v94 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v119[39]) = 0;
  v40 = a1;
  sub_211931DB4(a1, a1[3]);
  sub_21192C61C();
  v41 = v114;
  sub_211A48360();
  if (v41)
    return (uint64_t *)sub_211931C34((uint64_t)a1);
  v99 = v34;
  v114 = v36;
  v115[0] = 0;
  sub_211964964();
  sub_211A48174();
  v43 = v35;
  memcpy(v116, v117, 0x130uLL);
  nullsub_1(v116, v44);
  sub_21196F558((uint64_t)v116, (uint64_t)v118);
  v45 = (uint64_t)a1;
  sub_21196F558((uint64_t)v118, (uint64_t)v119);
  LOBYTE(v117[0]) = 6;
  LOBYTE(v119[44]) = sub_211A48150() & 1;
  LOBYTE(v117[0]) = 1;
  sub_211A4815C();
  v47 = v46;
  LOBYTE(v117[0]) = 2;
  sub_211A4815C();
  v49 = v48;
  LOBYTE(v117[0]) = 3;
  sub_211A4815C();
  v51 = v50;
  LOBYTE(v117[0]) = 4;
  v52 = sub_211A48180();
  v97 = &v119[39];
  v53 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v52);
  sub_211A471E4();

  sub_211958C38(&qword_254AC8388);
  LOBYTE(v116[0]) = 5;
  sub_2119613B4((unint64_t *)&qword_254AC8390, &qword_254AC8398, (uint64_t)&protocol conformance descriptor for FMFLabelledLocation, MEMORY[0x24BEE12D0]);
  sub_211A48174();
  v119[43] = v117[0];
  v59 = v109;
  v58 = v110;
  v60 = (uint64_t)v108;
  if (v117[0])
  {
    v94[1] = v117[0];
    v95 = v43;
    v61 = *(_QWORD *)(v117[0] + 16);
    if (v61)
    {
      v62 = v117[0] + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
      v98 = *(_QWORD *)(v109 + 72);
      swift_bridgeObjectRetain();
      v63 = v111;
      do
      {
        sub_21196F5A0(v62, (uint64_t)v63);
        if (v63[3])
          __asm { BR              X9 }
        v63 = v111;
        sub_21196F5E4((uint64_t)v111);
        v62 += v98;
        --v61;
      }
      while (v61);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v60 = (uint64_t)v108;
    v58 = v110;
    v111 = *(_QWORD **)(v59 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v108, 1, 1, v110);
    swift_bridgeObjectRelease();
    v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v60, 1, v58);
    v43 = v95;
    if (v84 != 1)
    {
      v85 = v100;
      sub_21196F780(v60, v100);
      v73 = *(_QWORD *)(v85 + 16);
      v72 = *(_QWORD *)(v85 + 24);
      v74 = *(_WORD *)(v85 + 32);
      swift_bridgeObjectRetain();
      sub_21196F5E4(v85);
      v45 = (uint64_t)v40;
      goto LABEL_42;
    }
    v45 = (uint64_t)v40;
  }
  else
  {
    v111 = *(_QWORD **)(v109 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v108, 1, 1, v110);
  }
  sub_21192C678(v60);
  v96 = v39;
  if (v119[43])
  {
    v54 = *(_QWORD *)(v119[43] + 16);
    if (v54)
    {
      v55 = v119[43] + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
      v56 = *(_QWORD *)(v59 + 72);
      v108 = (char *)v119[43];
      swift_bridgeObjectRetain();
      v57 = (uint64_t)v113;
      do
      {
        sub_21196F5A0(v55, v57);
        if (*(_QWORD *)(v57 + 24))
          __asm { BR              X9 }
        v57 = (uint64_t)v113;
        sub_21196F5E4((uint64_t)v113);
        v55 += v56;
        --v54;
      }
      while (v54);
      v45 = (uint64_t)v40;
      v59 = v109;
      v58 = v110;
      v65 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      v65 = v104;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v65, 1, 1, v58);
    swift_bridgeObjectRelease();
    v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v65, 1, v58);
    v64 = (uint64_t)v65;
    v39 = v96;
    if (v66 == 1)
      goto LABEL_23;
    v71 = v102;
    sub_21196F780(v64, v102);
    v73 = *(_QWORD *)(v71 + 16);
    v72 = *(_QWORD *)(v71 + 24);
    v74 = *(_WORD *)(v71 + 32);
    swift_bridgeObjectRetain();
    sub_21196F5E4(v71);
LABEL_42:
    v77 = v105;
    goto LABEL_43;
  }
  v64 = (uint64_t)v104;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v104, 1, 1, v58);
LABEL_23:
  sub_21192C678(v64);
  if (!v119[43])
  {
    v75 = v58;
    v76 = (uint64_t)v103;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v103, 1, 1, v75);
    v77 = v105;
LABEL_34:
    sub_21192C678(v76);
    if (v119[43] && *(_QWORD *)(v119[43] + 16))
    {
      v80 = v119[43] + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
      v73 = *(_QWORD *)(v80 + 16);
      v72 = *(_QWORD *)(v80 + 24);
      v74 = *(_WORD *)(v80 + 32);
      swift_bridgeObjectRetain();
    }
    else
    {
      v73 = 0;
      v72 = 0;
      v74 = 0;
    }
    goto LABEL_43;
  }
  v67 = *(_QWORD *)(v119[43] + 16);
  if (v67)
  {
    v68 = v119[43] + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
    v69 = *(_QWORD *)(v59 + 72);
    v113 = (char *)v119[43];
    swift_bridgeObjectRetain();
    v70 = v112;
    do
    {
      sub_21196F5A0(v68, v70);
      if (*(_QWORD *)(v70 + 24))
        __asm { BR              X9 }
      v70 = v112;
      sub_21196F5E4(v112);
      v68 += v69;
      --v67;
    }
    while (v67);
    v45 = (uint64_t)v40;
    v76 = (uint64_t)v103;
    v59 = v109;
  }
  else
  {
    swift_bridgeObjectRetain();
    v76 = (uint64_t)v103;
  }
  v78 = v110;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v111)(v76, 1, 1, v110);
  swift_bridgeObjectRelease();
  v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v76, 1, v78);
  v77 = v105;
  v39 = v96;
  if (v79 == 1)
    goto LABEL_34;
  v81 = v76;
  v82 = v101;
  sub_21196F780(v81, v101);
  v83 = v82;
  v73 = *(_QWORD *)(v82 + 16);
  v72 = *(_QWORD *)(v82 + 24);
  v74 = *(_WORD *)(v83 + 32);
  swift_bridgeObjectRetain();
  sub_21196F5E4(v83);
LABEL_43:
  v119[40] = v73;
  v119[41] = v72;
  LOWORD(v119[42]) = v74;
  v86 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v87 = v99;
  v88 = (void *)sub_211A471A8();
  v89 = (char *)objc_msgSend(v86, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v88, v49, v47, 0.0, v51, 0.0, -1.0, -1.0);
  v113 = v89;

  (*(void (**)(char *, uint64_t))(v106 + 8))(v87, v77);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v39, v43);
  v119[38] = v89;
  sub_21196F558((uint64_t)v119, (uint64_t)v115);
  LOBYTE(v88) = *v97;
  v90 = v119[40];
  v91 = v119[41];
  v92 = v119[42];
  v93 = v119[43];
  LOBYTE(v89) = v97[40];
  sub_21196F558((uint64_t)v115, (uint64_t)v116);
  v116[38] = (uint64_t)v113;
  LOBYTE(v116[39]) = (_BYTE)v88;
  v116[40] = v90;
  v116[41] = v91;
  LOWORD(v116[42]) = v92;
  v116[43] = v93;
  LOBYTE(v116[44]) = (_BYTE)v89;
  memcpy(v107, v116, 0x161uLL);
  sub_21196F620(v116);
  sub_211931C34(v45);
  memcpy(v117, v119, 0x161uLL);
  return sub_21196F6D0(v117);
}

uint64_t type metadata accessor for FMFLabelledLocation()
{
  uint64_t result;

  result = qword_254ACAC88;
  if (!qword_254ACAC88)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_21192C61C()
{
  unint64_t result;

  result = qword_254AC8A08;
  if (!qword_254AC8A08)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A5C0, &type metadata for FMFSimpleLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8A08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLabelledLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FMFLabelledLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21192C678(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC89F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21192C6B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_211958C38(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_21192C6FC(char *__dst, char *__src, _QWORD *a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  size_t __n;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = __dst;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)&__src[v13];
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = __src[v13];
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)&__src[v13];
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    v22 = (void *)*((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    swift_retain();
    v23 = v22;
    *((_QWORD *)v4 + 1) = v22;
    if (v13 <= 3)
    {
      v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v24 > 0xFFFC)
      {
        v26 = 2;
        goto LABEL_38;
      }
      if (v24 > 0xFC)
      {
        LOWORD(v26) = 2;
        goto LABEL_41;
      }
    }
    v4[v13] = 2;
    return v4;
  }
  if (v15 == 1)
  {
    v25 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    *((_QWORD *)__dst + 1) = v25;
    *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13 > 3)
    {
LABEL_30:
      v4[v13] = 1;
      return v4;
    }
    v26 = 1;
    v27 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v27 <= 0xFFFC)
    {
      if (v27 <= 0xFC)
        goto LABEL_30;
LABEL_41:
      *(_WORD *)&v4[v13] = v26;
      return v4;
    }
LABEL_38:
    *(_DWORD *)&v4[v13] = v26;
    return v4;
  }
  __n = v12;
  v32 = a3[3];
  v33 = a3[4];
  v17 = ~v7;
  (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
  v31 = v4;
  v18 = (unint64_t)&v4[v8] & v17;
  v19 = (unint64_t)&__src[v8] & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v18, v19, v32);
  v20 = (void *)((v18 + v9 + v11) & ~v11);
  v21 = (const void *)((v19 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v33))
  {
    memcpy(v20, v21, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v33);
  }
  v4 = v31;
  if (v13 > 3)
    goto LABEL_33;
  v28 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v28 > 0xFFFC)
  {
    *(_DWORD *)&v31[v13] = 0;
    return v4;
  }
  if (v28 <= 0xFC)
LABEL_33:
    v31[v13] = 0;
  else
    *(_WORD *)&v31[v13] = 0;
  return v4;
}

uint64_t sub_21192CA98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_21192CB74 + 4 * byte_211A4E244[v17 - 1]))();
}

uint64_t sub_21192CBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21192CC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

void *sub_21192CC94(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          v8 = 4;
        }
        else
        {
          v10 = v9 != 0;
          v11 = v9 >= 0xFF;
          v8 = 2;
          if (!v11)
            v8 = v10;
        }
      }
      else
      {
        v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void sub_21192CDA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v2 = v0[44];
  v1 = v0[45];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0[25] + 16));
  swift_beginAccess();
  sub_21192D2E4(v1);
  swift_endAccess();
  sub_21192C6B8(v1, v2, &qword_254ACA0C0);
  v3 = (char *)sub_21192CE50 + 4 * byte_211A4C100[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21192CE50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v0[44];
  v17 = v0[42];
  v3 = v0[38];
  v19 = v0[41];
  v20 = v0[37];
  v4 = v0[35];
  v25 = v0[40];
  v26 = v0[36];
  v6 = v0[33];
  v5 = v0[34];
  v23 = v0[39];
  v21 = v0[32];
  v22 = v0[30];
  *(_QWORD *)(v1 - 88) = v0[29];
  v27 = v0[25];
  v7 = sub_211958C38(&qword_254ACA0C8);
  v8 = v2 + *(int *)(v7 + 48);
  v9 = v2 + *(int *)(v7 + 64);
  sub_21192DD68(v2, v17, &qword_254ACA0B0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v18 = v5;
  v24(v3, v8, v5);
  sub_21192DD68(v9, v6, &qword_254ACA0A0);
  swift_beginAccess();
  v10 = sub_211A47B8C();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(*(_QWORD *)(v1 - 88), 1, 1, v10);
  sub_21192C6B8(v17, v19, &qword_254ACA0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v20, v3, v5);
  sub_21192C6B8(v6, v21, &qword_254ACA0A0);
  v11 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v12 = (v25 + *(unsigned __int8 *)(v4 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v26 + *(unsigned __int8 *)(v22 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v27;
  sub_21192DD68(v19, (uint64_t)v14 + v11, &qword_254ACA0B0);
  v24((uint64_t)v14 + v12, v20, v18);
  sub_21192DD68(v21, (uint64_t)v14 + v13, &qword_254ACA0A0);
  swift_retain();
  v15 = sub_2119E2088(*(_QWORD *)(v1 - 88), (uint64_t)&unk_254ACA0E0, (uint64_t)v14);
  sub_21191558C(v15);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

void sub_21192D2E4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[4];

  v14[2] = a1;
  v2 = sub_211958C38(&qword_254ACA058);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_211958C38(&qword_254ACA060);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_211958C38(&qword_254ACA090);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_21192C6B8(v1, (uint64_t)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_254ACA090);
  v13 = (char *)&loc_21192D420 + dword_21199BC24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21192D430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_211958C38(&qword_254ACA098);
  v3 = v0 + *(int *)(v2 + 48);
  v4 = v0 + *(int *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 96);
  sub_21192DD68(v0, v5, &qword_254ACA0B0);
  v6 = sub_211958C38(&qword_254ACA0C8);
  v7 = v5 + *(int *)(v6 + 48);
  v8 = sub_211958C38(&qword_254ACA0A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, v3, v8);
  sub_21192DD68(v4, v5 + *(int *)(v6 + 64), &qword_254ACA0A0);
  sub_211958C38(&qword_254ACA0C0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_21192D86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t i;

  swift_beginAccess();
  v4 = sub_21192D90C(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21192D90C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v3 = sub_211958C38(&qword_254ACA090);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21192C6B8((uint64_t)v1, (uint64_t)v6, &qword_254ACA090);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
    __asm { BR              X10 }
  v9 = *v6;
  v8 = v6[1];
  v10 = v6[2];
  if (v6[4])
  {
    swift_release();
    swift_release();
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    v11 = v6[3];
    sub_211923EE8((uint64_t)v1, &qword_254ACA090);
    *v1 = v9;
    v1[1] = v8;
    v1[2] = MEMORY[0x24BEE4AF8];
    v1[3] = v11;
    v1[4] = a1;
    swift_storeEnumTagMultiPayload();
    return v10;
  }
  return result;
}

uint64_t sub_21192DAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a1;
  v39 = a3;
  v34 = a2;
  v6 = sub_211958C38(&qword_254ACA0A0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACA0A8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211958C38(&qword_254ACA0B0);
  v40 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_211958C38(&qword_254ACA148);
  v20 = MEMORY[0x24BDAC7A8](v38, v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v35 = (uint64_t)&v34 - v24;
  v25 = (_DWORD *)swift_slowAlloc();
  *v25 = 0;
  *(_QWORD *)(v3 + 16) = v25;
  sub_21192C6B8(a1, (uint64_t)v18, &qword_254ACA0B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  v26 = v39;
  sub_21192C6B8(v39, (uint64_t)v9, &qword_254ACA0A0);
  v27 = sub_211958C38(&qword_254ACA098);
  v28 = &v22[*(int *)(v27 + 48)];
  v29 = (uint64_t)&v22[*(int *)(v27 + 64)];
  sub_21192DD68((uint64_t)v18, (uint64_t)v22, &qword_254ACA0B0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v28, v14, v10);
  sub_21192C6B8((uint64_t)v9, v29, &qword_254ACA0A0);
  sub_211958C38(&qword_254ACA090);
  swift_storeEnumTagMultiPayload();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v41);
  sub_211923EE8((uint64_t)v9, &qword_254ACA0A0);
  v30 = 2;
  if ((_DWORD)v14 != 1)
    v30 = 3;
  *(_QWORD *)&v22[*(int *)(v38 + 68)] = v30;
  v31 = v35;
  sub_21192DD68((uint64_t)v22, v35, &qword_254ACA148);
  sub_211923EE8(v26, &qword_254ACA0A0);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v34, v10);
  sub_211923EE8(v36, &qword_254ACA0B0);
  v32 = v37;
  sub_21192DD68(v31, v37 + *(_QWORD *)(*(_QWORD *)v37 + 136), &qword_254ACA148);
  return v32;
}

uint64_t sub_21192DD68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_211958C38(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for FriendCacheData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 360))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21192DE64()
{
  uint64_t v0;

  sub_211A47910();
  sub_211A48318();
  sub_211A4797C();
  v0 = sub_211A48348();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21192DF4C(unint64_t a1)
{
  void *v1;
  uint8_t *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v1;
  v5 = sub_211A4722C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  v13 = a1 >> 62;
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v36 = v6;
  v2 = (uint8_t *)swift_slowAlloc();
  v6 = swift_slowAlloc();
  v40 = v6;
  *(_DWORD *)v2 = 136315138;
  if (v13)
    goto LABEL_24;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (result = swift_bridgeObjectRetain(); ; v14 = result)
  {
    v37 = v5;
    v35 = v3;
    if (!v14)
    {
      swift_bridgeObjectRelease();
      v20 = 0;
      goto LABEL_13;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v16 = (id)MEMORY[0x212BE3DA8](0, a1);
      goto LABEL_10;
    }
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v16 = *(id *)(a1 + 32);
LABEL_10:
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v17, sel_debugDescription);

    v14 = sub_211A47910();
    v20 = v19;

LABEL_13:
    v38 = v14;
    v39 = v20;
    sub_211958C38(&qword_254AC7C58);
    v21 = sub_211A47928();
    v38 = sub_211950A9C(v21, v22, &v40);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v11, v12, "FMFMyLocationController: location manager didUpdateLocations: %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v6, -1, -1);
    MEMORY[0x212BE48A0](v2, -1, -1);

    v6 = v36;
    v5 = v37;
    v3 = v35;
LABEL_14:
    if (v13)
    {
      swift_bridgeObjectRetain();
      v11 = sub_211A480A8();
      if (!v11)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(NSObject **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11)
        return swift_bridgeObjectRelease();
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v23 = (id)MEMORY[0x212BE3DA8](0, a1);
      goto LABEL_19;
    }
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(id *)(a1 + 32);
LABEL_19:
      v24 = v23;
      swift_bridgeObjectRelease();
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v3;
      *(_QWORD *)(v25 + 24) = v24;
      v26 = v24;
      v3;
      sub_211A47220();
      v27 = sub_211A47214();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      type metadata accessor for FMLocationShiftingRequest();
      v30 = (_QWORD *)swift_allocObject();
      v30[2] = v26;
      v30[3] = v27;
      v30[4] = v29;
      sub_211958C38((uint64_t *)&unk_254ACDE80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_211A50A90;
      *(_QWORD *)(v31 + 32) = v30;
      v38 = v31;
      sub_211A47AC0();
      v32 = v38;
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = v26;
      v33[3] = sub_211938930;
      v33[4] = v25;
      v34 = v26;
      swift_retain();
      swift_retain();
      sub_21195D1C4(v32, (uint64_t)sub_211935834, (uint64_t)v33);
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    result = sub_211A480A8();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMLocationShiftingRequest()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for FriendCacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v24;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v8;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v9 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v9;
  v10 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v10;
  v11 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v11;
  v12 = *(_QWORD *)(a2 + 360);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 368);
    v14 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 360) = v12;
    *(_QWORD *)(a1 + 368) = v13;
    v15 = *(_QWORD *)(a2 + 384);
    v16 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 376) = v14;
    *(_QWORD *)(a1 + 384) = v15;
    v17 = *(_QWORD *)(a2 + 400);
    v18 = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 392) = v16;
    *(_QWORD *)(a1 + 400) = v17;
    *(_QWORD *)(a1 + 408) = v18;
    *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v19;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
  }
  v20 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v20;
  v22 = *(_QWORD *)(a2 + 440);
  v21 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v22;
  *(_QWORD *)(a1 + 448) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FMFDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeWithCopy for FMFAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v22 = a2[21];
  a1[20] = a2[20];
  a1[21] = v22;
  v13 = a2[23];
  a1[22] = a2[22];
  a1[23] = v13;
  v14 = a2[25];
  a1[24] = a2[24];
  a1[25] = v14;
  v15 = a2[27];
  a1[26] = a2[26];
  a1[27] = v15;
  v16 = a2[29];
  a1[28] = a2[28];
  a1[29] = v16;
  v17 = a2[31];
  a1[30] = a2[30];
  a1[31] = v17;
  v18 = a2[33];
  a1[32] = a2[32];
  a1[33] = v18;
  v19 = a2[35];
  a1[34] = a2[34];
  a1[35] = v19;
  v20 = a2[37];
  a1[36] = a2[36];
  a1[37] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21192E7F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_21192E81C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21192E81C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v3 = sub_211958C38(&qword_254ACBC18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[4];
  sub_211931DB4(a1, a1[3]);
  sub_21192E9E8();
  sub_211A48360();
  if (v1)
  {
    sub_211931C34((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_211A48144();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_211A48144();
    sub_211A480F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_211931C34((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_21192E9E8()
{
  unint64_t result;

  result = qword_254ACBC20;
  if (!qword_254ACBC20)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EDDC, &type metadata for FMFLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC20);
  }
  return result;
}

uint64_t FMFFriend.shareExpires.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFFriend();
  return sub_21192C6B8(v1 + *(int *)(v3 + 32), a1, qword_254AC8A78);
}

uint64_t destroy for FMFAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMFFriend.locationAlertsOnFriend.getter()
{
  type metadata accessor for FMFFriend();
  return swift_bridgeObjectRetain();
}

_QWORD *initializeWithCopy for FMFSimpleLocation(_QWORD *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;

  v4 = __src[21];
  if (v4)
  {
    v5 = __src[1];
    *__dst = *__src;
    __dst[1] = v5;
    v6 = __src[3];
    __dst[2] = __src[2];
    __dst[3] = v6;
    v7 = __src[5];
    __dst[4] = __src[4];
    __dst[5] = v7;
    v8 = __src[7];
    __dst[6] = __src[6];
    __dst[7] = v8;
    v9 = __src[9];
    __dst[8] = __src[8];
    __dst[9] = v9;
    v10 = __src[11];
    __dst[10] = __src[10];
    __dst[11] = v10;
    v11 = __src[13];
    __dst[12] = __src[12];
    __dst[13] = v11;
    v12 = __src[15];
    __dst[14] = __src[14];
    __dst[15] = v12;
    v13 = __src[17];
    __dst[16] = __src[16];
    __dst[17] = v13;
    v14 = __src[19];
    __dst[18] = __src[18];
    __dst[19] = v14;
    __dst[20] = __src[20];
    __dst[21] = v4;
    v15 = __src[23];
    __dst[22] = __src[22];
    __dst[23] = v15;
    v16 = __src[25];
    __dst[24] = __src[24];
    __dst[25] = v16;
    v17 = __src[27];
    __dst[26] = __src[26];
    __dst[27] = v17;
    v18 = __src[29];
    __dst[28] = __src[28];
    __dst[29] = v18;
    v19 = __src[31];
    __dst[30] = __src[30];
    __dst[31] = v19;
    v20 = __src[33];
    __dst[32] = __src[32];
    __dst[33] = v20;
    v21 = __src[35];
    __dst[34] = __src[34];
    __dst[35] = v21;
    v22 = __src[37];
    __dst[36] = __src[36];
    __dst[37] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0x130uLL);
  }
  v23 = (void *)__src[38];
  __dst[38] = v23;
  *((_BYTE *)__dst + 312) = *((_BYTE *)__src + 312);
  v24 = __src[41];
  __dst[40] = __src[40];
  __dst[41] = v24;
  *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
  __dst[43] = __src[43];
  *((_BYTE *)__dst + 352) = *((_BYTE *)__src + 352);
  v25 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return __dst;
}

uint64_t destroy for FMFSimpleLocation(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21192EE30@<X0>(size_t *a1@<X8>)
{
  return sub_21192EE48(a1);
}

uint64_t sub_21192EE48@<X0>(size_t *a1@<X8>)
{
  uint64_t v2;
  size_t v3;
  uint64_t result;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_21192EEB4(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

size_t sub_21192EEB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_211958C38(&qword_254ACA3C0);
  v3 = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_211A19BB8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_211973358();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21192EFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = MEMORY[0x24BEE4AF8];
    v30 = MEMORY[0x24BEE4AF8];
    v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    v8 = v1 + v6;
    swift_bridgeObjectRetain();
    do
    {
      v9 = *(_QWORD *)(v0 + 72);
      sub_211934794(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v10 = *(_QWORD *)(v0 + 72);
      if ((*(_BYTE *)(v9 + *(int *)(v4 + 36)) & 2) != 0)
      {
        sub_211942810(v10, *(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21194B0AC(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v30;
        }
        v12 = *(_QWORD *)(v5 + 16);
        v11 = *(_QWORD *)(v5 + 24);
        v13 = v5;
        if (v12 >= v11 >> 1)
        {
          sub_21194B0AC(v11 > 1, v12 + 1, 1);
          v13 = v30;
        }
        v14 = *(_QWORD *)(v0 + 64);
        *(_QWORD *)(v13 + 16) = v12 + 1;
        sub_211942810(v14, v13 + v6 + v12 * v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v5 = v13;
      }
      else
      {
        sub_211934758(v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v8 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v5 + 16);
    if (v15)
    {
      v27 = *(_QWORD *)(v0 + 56);
      v31 = MEMORY[0x24BEE4AF8];
      sub_21192F2B0(0, v15, 0);
      v16 = v5 + v6;
      v17 = v31;
      v28 = v7;
      v29 = v0;
      do
      {
        v18 = *(uint64_t **)(v0 + 56);
        sub_211934794(v16, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v19 = *v18;
        v20 = *(_QWORD *)(v27 + 8);
        v21 = *(_QWORD *)(v27 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21192F2B0(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v31;
        }
        v23 = *(_QWORD *)(v17 + 16);
        v22 = *(_QWORD *)(v17 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_21192F2B0(v22 > 1, v23 + 1, 1);
          v17 = v31;
        }
        *(_QWORD *)(v17 + 16) = v23 + 1;
        v24 = v17 + 32 * v23;
        *(_QWORD *)(v24 + 32) = v19;
        *(_QWORD *)(v24 + 40) = v20;
        *(_QWORD *)(v24 + 48) = v21;
        *(_WORD *)(v24 + 56) = 0;
        *(_BYTE *)(v24 + 58) = 0;
        v0 = v29;
        v16 += v28;
        --v15;
      }
      while (v15);
      swift_release();
    }
    else
    {
      swift_release();
      v17 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v0 + 80) = v17;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v26;
    *v26 = v0;
    v26[1] = sub_211912B50;
    return sub_211924638(v17, *(_QWORD *)(v0 + 24));
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21192F2B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21192F2CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21192F2CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_211958C38(&qword_254ACA200);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t FMFFriend.favoriteOrder.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 60));
}

uint64_t FMFFriend.optedNotToShare.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 40));
}

uint64_t sub_21192F470()
{
  return sub_2119301C0();
}

uint64_t sub_21192F490@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 120))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_21192F4BC(_QWORD *a1)
{
  swift_allocObject();
  return sub_21192F504(a1);
}

uint64_t sub_21192F504(_QWORD *a1)
{
  uint8_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint8_t *v49;
  uint64_t v51;
  void *v52;
  uint8_t *v53;
  _QWORD *v54;
  uint8_t *v55;
  char *v56;
  _OWORD v57[15];
  char v58;
  _OWORD v59[3];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _QWORD v72[30];
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t v80;
  uint64_t v81;

  v3 = (uint64_t)v1;
  v5 = sub_211958C38(&qword_254AC8368);
  v81 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211930118();
  swift_retain();
  sub_211A48360();
  v9 = v2;
  if (v2)
  {
    swift_release();
    sub_211931C34((uint64_t)a1);
    type metadata accessor for FMFInitRefreshClientResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v55 = v1;
    sub_211958C38(&qword_254AC8378);
    LOBYTE(v59[0]) = 0;
    sub_211930F18();
    sub_211A48174();
    v56 = v8;
    v54 = a1;
    v10 = v72[0];
    v11 = *(_QWORD *)(v72[0] + 16);
    if (v11)
    {
      v52 = 0;
      v53 = (uint8_t *)v5;
      v72[0] = MEMORY[0x24BEE4AF8];
      sub_211A26778(0, v11, 0);
      v12 = v72[0];
      v51 = v10;
      v13 = (uint64_t *)(v10 + 40);
      do
      {
        v15 = *(v13 - 1);
        v14 = *v13;
        swift_bridgeObjectRetain_n();
        v16 = sub_211A480F0();
        swift_bridgeObjectRelease();
        v17 = v16 > 4;
        v72[0] = v12;
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_211A26778(v18 > 1, v19 + 1, 1);
          v17 = v16 > 4;
          v12 = v72[0];
        }
        v13 += 2;
        *(_QWORD *)(v12 + 16) = v19 + 1;
        v20 = v12 + 24 * v19;
        *(_QWORD *)(v20 + 32) = v15;
        *(_QWORD *)(v20 + 40) = v14;
        *(_BYTE *)(v20 + 48) = 3;
        *(_BYTE *)(v20 + 49) = v17;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      v21 = (uint64_t)v54;
      v9 = v52;
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = MEMORY[0x24BEE4AF8];
      v21 = (uint64_t)v54;
    }
    v22 = v55;
    *(_QWORD *)&v55[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels] = v12;
    sub_211958C38(&qword_254AC8388);
    LOBYTE(v59[0]) = 1;
    sub_211930FF0();
    sub_211A48174();
    if (v9)
    {

      v23 = 0;
    }
    else
    {
      v23 = v72[0];
    }
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations] = v23;
    sub_211958C38(&qword_254AC83A0);
    LOBYTE(v59[0]) = 2;
    sub_21193015C(&qword_254AC83A8, &qword_254AC83A0, (uint64_t (*)(void))sub_211961680);
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices] = v72[0];
    LOBYTE(v59[0]) = 3;
    sub_211931908();
    sub_211A48174();
    v24 = v72[1];
    v25 = v72[2];
    v26 = v72[3];
    v27 = 256;
    if (!BYTE1(v72[0]))
      v27 = 0;
    v28 = v27 | LOBYTE(v72[0]);
    v29 = 0x10000;
    if (!BYTE2(v72[0]))
      v29 = 0;
    v30 = v28 | v29 | ((unint64_t)BYTE3(v72[0]) << 24);
    v31 = (unint64_t *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences];
    *v31 = v30;
    v31[1] = v24;
    v31[2] = v25;
    v31[3] = v26;
    LOBYTE(v59[0]) = 4;
    sub_21193194C();
    sub_211A48174();
    v32 = &v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features];
    *(_QWORD *)v32 = v72[0];
    v32[8] = 0;
    v73 = 5;
    sub_211931164();
    sub_211A48174();
    v33 = v75;
    v34 = v76;
    v35 = v77;
    v36 = v78;
    v37 = v79;
    v38 = v80;
    v39 = &v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo];
    *(_QWORD *)v39 = v74;
    *((_QWORD *)v39 + 1) = v33;
    *((_QWORD *)v39 + 2) = v34;
    *(_OWORD *)(v39 + 24) = v35;
    *((_QWORD *)v39 + 5) = v36;
    *((_QWORD *)v39 + 6) = v37;
    v39[56] = v38;
    v58 = 6;
    sub_2119311A8();
    sub_211A48174();
    v57[12] = v69;
    v57[13] = v70;
    v57[14] = v71;
    v57[8] = v65;
    v57[9] = v66;
    v57[10] = v67;
    v57[11] = v68;
    v57[4] = v61;
    v57[5] = v62;
    v57[6] = v63;
    v57[7] = v64;
    v57[0] = v59[0];
    v57[1] = v59[1];
    v57[2] = v59[2];
    v57[3] = v60;
    nullsub_1(v57, *(double *)&v60);
    sub_21192DD68((uint64_t)v57, (uint64_t)v72, (uint64_t *)&unk_254ACC2F0);
    sub_21192DD68((uint64_t)v72, (uint64_t)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config], (uint64_t *)&unk_254ACC2F0);
    sub_211958C38(&qword_254AC83D8);
    LOBYTE(v57[0]) = 7;
    sub_2119310E8();
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations] = *(_QWORD *)&v59[0];
    sub_211958C38(&qword_254AC83F0);
    LOBYTE(v57[0]) = 8;
    sub_21193015C(&qword_254AC83F8, &qword_254AC83F0, (uint64_t (*)(void))sub_211962BCC);
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress] = *(_QWORD *)&v59[0];
    sub_211958C38(&qword_254AC8408);
    LOBYTE(v57[0]) = 10;
    sub_211930F74();
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 11;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 12;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 13;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 9;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers] = *(_QWORD *)&v59[0];
    sub_211958C38(&qword_254AC8420);
    LOBYTE(v57[0]) = 14;
    sub_21193106C();
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 16;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 15;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe] = *(_QWORD *)&v59[0];
    LOBYTE(v57[0]) = 17;
    sub_211A48174();
    *(_QWORD *)&v22[OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends] = *(_QWORD *)&v59[0];
    swift_release();
    sub_2119299DC(v21, (uint64_t)v59);
    v40 = v21;
    v3 = sub_2119311EC(v59);
    v54 = (_QWORD *)v40;
    v41 = qword_254AC7B80;
    swift_retain();
    if (v41 != -1)
      swift_once();
    v42 = sub_211A47748();
    sub_21194F3E0(v42, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v43 = sub_211A47724();
    v44 = sub_211A47D30();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      *(_QWORD *)&v59[0] = v46;
      v55 = v45;
      *(_DWORD *)v45 = 136315138;
      v53 = v45 + 4;
      v47 = sub_2119301C0();
      *(_QWORD *)&v57[0] = sub_211950A9C(v47, v48, (uint64_t *)v59);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v49 = v55;
      _os_log_impl(&dword_21190D000, v43, v44, "FMFInitRefreshClientResponse: initialized with coder %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v46, -1, -1);
      MEMORY[0x212BE48A0](v49, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, _QWORD))(v81 + 8))(v56, 0);
    sub_211931C34((uint64_t)v54);
    swift_release();
  }
  return v3;
}

uint64_t sub_2119300F0()
{
  sub_211930118();
  return sub_211A48390();
}

unint64_t sub_211930118()
{
  unint64_t result;

  result = qword_254AC8370;
  if (!qword_254AC8370)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49ED8, &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8370);
  }
  return result;
}

uint64_t sub_21193015C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = sub_21195E2C0(a2);
    v7 = a3();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2119301C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  BOOL v25;
  _QWORD v26[33];

  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v24 = v0;
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  strcpy((char *)v26, "following: ");
  HIDWORD(v26[1]) = -352321536;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following);
  if (v1)
    v2 = *(_QWORD *)(v1 + 16);
  else
    v2 = 0;
  v24 = v2;
  v25 = v1 == 0;
  sub_211958C38(&qword_254AC8358);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "followers: ");
  HIDWORD(v26[1]) = -352321536;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers);
  if (v3)
    v4 = *(_QWORD *)(v3 + 16);
  else
    v4 = 0;
  v24 = v4;
  v25 = v3 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x8000000211A539C0;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing);
  if (v5)
    v6 = *(_QWORD *)(v5 + 16);
  else
    v6 = 0;
  v24 = v6;
  v25 = v5 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000011;
  v26[1] = 0x8000000211A539E0;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers);
  if (v7)
    v8 = *(_QWORD *)(v7 + 16);
  else
    v8 = 0;
  v24 = v8;
  v25 = v7 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26[0] = 0x4F676E69646E6570;
  v26[1] = 0xEF203A7372656666;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers);
  if (v9)
    v10 = *(_QWORD *)(v9 + 16);
  else
    v10 = 0;
  v24 = v10;
  v25 = v9 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "locations: ");
  HIDWORD(v26[1]) = -352321536;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations);
  if (v11)
    v12 = *(_QWORD *)(v11 + 16);
  else
    v12 = 0;
  v24 = v12;
  v25 = v11 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000013;
  v26[1] = 0x8000000211A53A00;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress);
  if (v13)
    v14 = *(_QWORD *)(v13 + 16);
  else
    v14 = 0;
  v24 = v14;
  v25 = v13 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "labels: ");
  BYTE1(v26[1]) = 0;
  WORD1(v26[1]) = 0;
  HIDWORD(v26[1]) = -402653184;
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels);
  if (v15)
    v16 = *(_QWORD *)(v15 + 16);
  else
    v16 = 0;
  v24 = v16;
  v25 = v15 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26[0] = 0xD000000000000013;
  v26[1] = 0x8000000211A53A20;
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations);
  if (v17)
    v18 = *(_QWORD *)(v17 + 16);
  else
    v18 = 0;
  v24 = v18;
  v25 = v17 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "devices: ");
  WORD1(v26[1]) = 0;
  HIDWORD(v26[1]) = -385875968;
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices);
  if (v19)
    v20 = *(_QWORD *)(v19 + 16);
  else
    v20 = 0;
  v24 = v20;
  v25 = v19 == 0;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "preferences: ");
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "features: ");
  BYTE3(v26[1]) = 0;
  HIDWORD(v26[1]) = -369098752;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features);
  v22 = *(_BYTE *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features + 8);
  if (v22)
    v21 = 0;
  v24 = v21;
  v25 = v22;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26[30] = 0x203A6F666E49796DLL;
  v26[31] = 0xE800000000000000;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v26[0] = 60;
  v26[1] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21192DD68(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t)&v24, (uint64_t *)&unk_254ACC2F0);
  sub_21192DD68((uint64_t)&v24, (uint64_t)v26, (uint64_t *)&unk_254ACC2F0);
  sub_21196A434((uint64_t)v26);
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_211930ED4()
{
  unint64_t result;

  result = qword_254AC8350;
  if (!qword_254AC8350)
  {
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254AC8350);
  }
  return result;
}

unint64_t sub_211930F18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8380;
  if (!qword_254AC8380)
  {
    v1 = sub_21195E2C0(&qword_254AC8378);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8380);
  }
  return result;
}

unint64_t sub_211930F74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8410;
  if (!qword_254AC8410)
  {
    v1 = sub_21195E2C0(&qword_254AC8408);
    v2 = sub_211910908(&qword_254AC8418, (uint64_t (*)(uint64_t))type metadata accessor for FMFIntermediateFriend, (uint64_t)&unk_211A4A740);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8410);
  }
  return result;
}

unint64_t sub_211930FF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8390;
  if (!qword_254AC8390)
  {
    v1 = sub_21195E2C0(&qword_254AC8388);
    v2 = sub_211910908(&qword_254AC8398, (uint64_t (*)(uint64_t))type metadata accessor for FMFLabelledLocation, (uint64_t)&protocol conformance descriptor for FMFLabelledLocation);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8390);
  }
  return result;
}

unint64_t sub_21193106C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8428;
  if (!qword_254AC8428)
  {
    v1 = sub_21195E2C0(&qword_254AC8420);
    v2 = sub_211910908((unint64_t *)&qword_254AC8430, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocationAlert, (uint64_t)&protocol conformance descriptor for FMFLocationAlert);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8428);
  }
  return result;
}

unint64_t sub_2119310E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC83E0;
  if (!qword_254AC83E0)
  {
    v1 = sub_21195E2C0(&qword_254AC83D8);
    v2 = sub_211910908(&qword_254AC83E8, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC83E0);
  }
  return result;
}

unint64_t sub_211931164()
{
  unint64_t result;

  result = qword_254AC83C8;
  if (!qword_254AC83C8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFMyInfo, &type metadata for FMFMyInfo);
    atomic_store(result, (unint64_t *)&qword_254AC83C8);
  }
  return result;
}

unint64_t sub_2119311A8()
{
  unint64_t result;

  result = qword_254AC83D0;
  if (!qword_254AC83D0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFConfig, &type metadata for FMFConfig);
    atomic_store(result, (unint64_t *)&qword_254AC83D0);
  }
  return result;
}

uint64_t sub_2119311EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE *v40;
  char v41;
  char *v42;
  uint64_t v43;
  _QWORD v44[2];
  char v45;

  v3 = sub_211958C38(&qword_254AC8360);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(&qword_254ACF058);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119317F8();
  sub_211A48360();
  if (v1)
    goto LABEL_55;
  v42 = v6;
  LOBYTE(v44[0]) = 3;
  result = sub_211A48144();
  v14 = v13;
  v15 = HIBYTE(v13) & 0xF;
  v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0)
    v17 = v15;
  else
    v17 = result & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_54:
    sub_211A011B8();
    swift_allocError();
    *v40 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
LABEL_55:
    v35 = v43;
    type metadata accessor for FMFBaseResponse();
    swift_deallocPartialClassInstance();
    goto LABEL_56;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    v19 = (uint64_t)sub_211A3B094(result, v14, 10);
    v21 = v41;
    goto LABEL_45;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)sub_211A47FB8();
    v19 = (uint64_t)sub_211A3B080(v18, v16, 10);
    v21 = v20 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      v31 = v43;
      *(_QWORD *)(v43 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_fetchStatus) = v19;
      v32 = v31;
      LOBYTE(v44[0]) = 1;
      *(_QWORD *)(v31 + 16) = sub_211A48108();
      LOBYTE(v44[0]) = 2;
      *(_QWORD *)(v32 + 24) = sub_211A48108();
      v33 = type metadata accessor for FMFCommandResponseFragment();
      LOBYTE(v44[0]) = 4;
      sub_211910908(&qword_254ACF068, (uint64_t (*)(uint64_t))type metadata accessor for FMFCommandResponseFragment, (uint64_t)&unk_211A4F100);
      v34 = (uint64_t)v42;
      sub_211A48174();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
      v35 = v43;
      sub_211931884(v34, v43 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse);
      type metadata accessor for FMFAlert();
      v45 = 0;
      sub_211910908(&qword_254ACF070, (uint64_t (*)(uint64_t))type metadata accessor for FMFAlert, (uint64_t)&protocol conformance descriptor for FMFAlert);
      sub_211A48174();
      v36 = v44[0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      *(_QWORD *)(v35 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_alert) = v36;
LABEL_56:
      sub_211931C34((uint64_t)a1);
      return v35;
    }
    goto LABEL_54;
  }
  v44[0] = result;
  v44[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v15)
      goto LABEL_60;
    if (v15 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    v19 = (BYTE1(result) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v22 = v15 - 3;
      if (v22)
      {
        v23 = (unsigned __int8 *)v44 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            goto LABEL_32;
          v25 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v25 + v24;
          if (__OFADD__(v25, v24))
            goto LABEL_32;
          v21 = 0;
          ++v23;
          if (!--v22)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v21 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v15 || (result - 48) > 9u)
      goto LABEL_32;
    v19 = (result - 48);
    if (v15 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (result - 48) + (BYTE1(result) - 48);
      v26 = v15 - 2;
      if (v26)
      {
        v27 = (unsigned __int8 *)v44 + 2;
        while (1)
        {
          v28 = *v27 - 48;
          if (v28 > 9)
            goto LABEL_32;
          v29 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v29 + v28;
          if (__OFADD__(v29, v28))
            goto LABEL_32;
          v21 = 0;
          ++v27;
          if (!--v26)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        v21 = 0;
        v19 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v19 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v30 = v15 - 3;
        if (!v30)
          goto LABEL_44;
        v37 = (unsigned __int8 *)v44 + 3;
        while (1)
        {
          v38 = *v37 - 48;
          if (v38 > 9)
            break;
          v39 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            break;
          v19 = v39 - v38;
          if (__OFSUB__(v39, v38))
            break;
          v21 = 0;
          ++v37;
          if (!--v30)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v19 = 0;
    v21 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

unint64_t sub_2119317F8()
{
  unint64_t result;

  result = qword_254ACF060;
  if (!qword_254ACF060)
  {
    result = MEMORY[0x212BE47C8](&unk_211A52158, &type metadata for FMFBaseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF060);
  }
  return result;
}

uint64_t type metadata accessor for FMFAlert()
{
  uint64_t result;

  result = qword_254AC9480;
  if (!qword_254AC9480)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211931878()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211931884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FMFCommandResponseFragment()
{
  uint64_t result;

  result = qword_254ACBD80;
  if (!qword_254ACBD80)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_211931908()
{
  unint64_t result;

  result = qword_254AC83B8;
  if (!qword_254AC83B8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFPreferences, &type metadata for FMFPreferences);
    atomic_store(result, (unint64_t *)&qword_254AC83B8);
  }
  return result;
}

unint64_t sub_21193194C()
{
  unint64_t result;

  result = qword_254AC83C0;
  if (!qword_254AC83C0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254AC83C0);
  }
  return result;
}

id FMFLocation.location.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  _BYTE v5[360];
  _BYTE v6[304];
  id v7;

  v1 = type metadata accessor for FMFLocation();
  sub_21192DD68(v0 + *(int *)(v1 + 44), (uint64_t)v5, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v5, (uint64_t)v6, &qword_254AC8CD0);
  v2 = 0;
  if (sub_2119724C8((uint64_t)v6) != 1)
  {
    v2 = v7;
    v3 = v7;
  }
  return v2;
}

uint64_t sub_211931A04(_QWORD *a1)
{
  return FMFDevice.encode(to:)(a1);
}

uint64_t FMFDevice.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = sub_211958C38(&qword_254ACDC30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211931DD8();
  sub_211A48360();
  if (v2)
    return sub_211931C34((uint64_t)a1);
  v25 = 0;
  v10 = sub_211A48144();
  v12 = v11;
  v22 = v10;
  v24 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_211A48144();
  v15 = v14;
  v20 = v13;
  v23 = 2;
  swift_bridgeObjectRetain();
  v21 = v15;
  LOBYTE(v15) = sub_211A48150();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v16 = v15 & 1;
  v17 = v21;
  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17;
  *(_BYTE *)(a2 + 32) = v16;
  sub_211931C34((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211931C34(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t FMFDevice.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  v3 = sub_211958C38(&qword_254ACDC40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  v12 = *(unsigned __int8 *)(v1 + 32);
  sub_211931DB4(a1, a1[3]);
  sub_211931DD8();
  sub_211A4836C();
  v15 = 0;
  v9 = v11[3];
  sub_211A481B0();
  if (!v9)
  {
    v14 = 1;
    sub_211A481B0();
    v13 = 2;
    sub_211A481BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

_QWORD *sub_211931DB4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_211931DD8()
{
  unint64_t result;

  result = qword_254ACDC38;
  if (!qword_254ACDC38)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50808, &type metadata for FMFDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDC38);
  }
  return result;
}

uint64_t sub_211931E1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLocation.init(from:)(a1, a2);
}

uint64_t FMFLocation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  _BYTE v46[360];
  _BYTE v47[353];
  _BYTE v48[384];

  v43 = a2;
  v41 = sub_211958C38(&qword_254AC98A0);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for FMFLocation();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v10 + 3) = 0;
  v10[32] = 1;
  v11 = (uint64_t)&v10[*(int *)(v8 + 32)];
  v12 = sub_211A4722C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v45 = v11;
  v42 = v13;
  v13(v11, 1, 1, v12);
  sub_211931DB4(a1, a1[3]);
  sub_2119321C8();
  v40 = v5;
  v14 = v44;
  sub_211A48360();
  if (v14)
  {
    sub_211931C34((uint64_t)a1);
    return sub_211923EE8(v45, &qword_254AC9898);
  }
  else
  {
    v44 = (uint64_t *)v10;
    v38 = v12;
    v17 = v39;
    v16 = v40;
    v48[0] = 3;
    v18 = v41;
    v19 = sub_211A48168();
    v37 = 0;
    v36 = v19;
    v48[383] = 0;
    v20 = v16;
    v21 = sub_211A48144();
    v35 = a1;
    v22 = v17;
    v23 = v44;
    *v44 = v21;
    v23[1] = v24;
    v48[382] = 1;
    sub_21193215C();
    sub_211A48174();
    v25 = v38;
    memcpy(v46, v47, 0x161uLL);
    nullsub_1(v46, v26);
    sub_21192DD68((uint64_t)v46, (uint64_t)v48, &qword_254AC8CD0);
    v28 = v42;
    v27 = v43;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v18);
    v29 = (uint64_t)v44;
    sub_21192DD68((uint64_t)v48, (uint64_t)v44 + v6[11], &qword_254AC8CD0);
    v30 = v36;
    v31 = v36 < 4 && v37 == 0;
    *(_BYTE *)(v29 + 16) = 0;
    if (v31)
      v32 = v30;
    else
      v32 = 0;
    *(_BYTE *)(v29 + 33) = v32;
    v33 = v45;
    sub_211923EE8(v45, &qword_254AC9898);
    v28(v33, 1, 1, v25);
    *(_BYTE *)(v29 + v6[9]) = 0;
    *(_BYTE *)(v29 + v6[10]) = 0;
    sub_21193324C(v29, v27);
    sub_211931C34((uint64_t)v35);
    return sub_211933290(v29);
  }
}

unint64_t sub_21193215C()
{
  unint64_t result;

  result = qword_254AC98B0;
  if (!qword_254AC98B0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A49C, &type metadata for FMFSimpleLocation);
    atomic_store(result, (unint64_t *)&qword_254AC98B0);
  }
  return result;
}

uint64_t sub_2119321A0()
{
  sub_2119321C8();
  return sub_211A48390();
}

unint64_t sub_2119321C8()
{
  unint64_t result;

  result = qword_254AC98A8;
  if (!qword_254AC98A8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B924, &type metadata for FMFLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC98A8);
  }
  return result;
}

uint64_t sub_21193220C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[360];
  _QWORD v33[45];
  uint64_t v34;

  v7 = type metadata accessor for FMFLocation();
  MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v27 = a2;
    v28 = a1;
    v29 = a3;
    v30 = v3;
    v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v15 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    v16 = &qword_254AC8CD0;
    v31 = v15;
    do
    {
      sub_21193324C(v14, (uint64_t)v11);
      v17 = v11[1];
      if (!v17
        || (v18 = *v11,
            sub_21192DD68((uint64_t)v11 + *(int *)(v7 + 44), (uint64_t)v32, v16),
            sub_21192DD68((uint64_t)v32, (uint64_t)v33, v16),
            sub_2119724C8((uint64_t)v33) == 1))
      {
        sub_211933290((uint64_t)v11);
      }
      else
      {
        v19 = v16;
        v20 = (void *)v33[38];
        type metadata accessor for FMLocationShiftingRequest();
        v21 = (_QWORD *)swift_allocObject();
        v21[2] = v20;
        v21[3] = v18;
        v21[4] = v17;
        swift_bridgeObjectRetain();
        v22 = v20;
        v23 = sub_211933290((uint64_t)v11);
        MEMORY[0x212BE3898](v23);
        if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_211A47AE4();
        sub_211A47B14();
        sub_211A47AC0();
        v16 = v19;
        v15 = v31;
      }
      v14 += v15;
      --v13;
    }
    while (v13);
    a1 = v28;
    swift_bridgeObjectRelease();
    v12 = v34;
    a3 = v29;
    a2 = v27;
  }
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21195D1C4(v12, (uint64_t)sub_211938B54, (uint64_t)v24);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_211932434(unint64_t a1, uint64_t a2, void (*a3)(unint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  BOOL v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  void *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD v75[2];
  void (*v76)(unint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  _QWORD v99[45];
  _BYTE v100[353];
  _BYTE v101[304];
  _BYTE v102[360];
  uint64_t v103[46];

  v8 = sub_211958C38(&qword_254ACA218);
  v92 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v88 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v94 = (uint64_t)v75 - v13;
  v14 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v79 = (uint64_t)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v84 = (uint64_t)v75 - v19;
  v95 = type metadata accessor for FMFLocation();
  v93 = *(_QWORD *)(v95 - 8);
  v21 = MEMORY[0x24BDAC7A8](v95, v20);
  v87 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v86 = (uint64_t)v75 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v85 = (uint64_t)v75 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v98 = (_QWORD *)((char *)v75 - v30);
  v31 = *(_QWORD *)(a2 + 16);
  if (v31)
  {
    v75[1] = a4;
    v76 = a3;
    if (a1 >> 62)
    {
LABEL_49:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = sub_211A480A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v33 = a2;
    a2 = 0;
    v34 = *(unsigned __int8 *)(v93 + 80);
    v75[0] = v33;
    v91 = v33 + ((v34 + 32) & ~v34);
    v90 = *(_QWORD *)(v93 + 72);
    v80 = a1 & 0xC000000000000001;
    v97 = a1 + 32;
    v77 = &v100[352];
    v35 = MEMORY[0x24BEE4AF8];
    v78 = v8;
    v89 = v31;
    do
    {
      if (a2 == v31)
        goto LABEL_48;
      v96 = v35;
      sub_21193324C(v91 + v90 * a2, (uint64_t)v98);
      if (v32)
      {
        v37 = *v98;
        v36 = v98[1];
        if (v80)
        {
          swift_bridgeObjectRetain();
          v38 = 0;
          while (1)
          {
            v39 = MEMORY[0x212BE3DA8](v38, a1);
            v31 = v38 + 1;
            if (__OFADD__(v38, 1))
              break;
            v40 = (_QWORD *)v39;
            if (v36)
            {
              v41 = *(_QWORD *)(v39 + 24) == v37 && v36 == *(_QWORD *)(v39 + 32);
              if (v41 || (sub_211A48258() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_30;
              }
            }
            swift_unknownObjectRelease();
            ++v38;
            if (v31 == v32)
            {
              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
          }
          __break(1u);
        }
        else
        {
          v42 = 0;
          while (1)
          {
            v31 = v42 + 1;
            if (__OFADD__(v42, 1))
              break;
            if (v36)
            {
              v40 = *(_QWORD **)(v97 + 8 * v42);
              v43 = v40[3] == v37 && v36 == v40[4];
              if (v43 || (sub_211A48258() & 1) != 0)
              {
                swift_retain();
LABEL_30:
                v44 = v86;
                sub_21193324C((uint64_t)v98, v86);
                v83 = (void *)v40[2];
                v45 = v95;
                v46 = v87;
                v47 = &v87[*(int *)(v95 + 32)];
                v48 = sub_211A4722C();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 1, 1, v48);
                v49 = *(_QWORD *)(v44 + 8);
                *(_QWORD *)v46 = *(_QWORD *)v44;
                *((_QWORD *)v46 + 1) = v49;
                v82 = v49;
                v46[16] = *(_BYTE *)(v44 + 16);
                v46[33] = *(_BYTE *)(v44 + 33);
                sub_21192DD68(v44 + *(int *)(v45 + 44), (uint64_t)v102, &qword_254AC8CD0);
                sub_21192DD68((uint64_t)v102, (uint64_t)v103, &qword_254AC8CD0);
                if (sub_2119724C8((uint64_t)v103) == 1)
                {
                  sub_21196F528(v100);
                  sub_21192DD68((uint64_t)v100, (uint64_t)v101, &qword_254ACCB40);
                  v50 = 0;
                  v51 = 0;
                  v81 = 0;
                  v52 = 0;
                  v53 = 0;
                }
                else
                {
                  sub_21192DD68((uint64_t)v102, (uint64_t)v100, &qword_254AC8CD0);
                  v81 = *(_QWORD *)&v100[320];
                  v52 = *(_QWORD *)&v100[328];
                  v53 = *(_WORD *)&v100[336];
                  v51 = *(_QWORD *)&v100[344];
                  v50 = *v77;
                  sub_2119A18DC(v103);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_21192DD68((uint64_t)v103, (uint64_t)v101, &qword_254ACCB40);
                }
                sub_21192DD68((uint64_t)v101, (uint64_t)v99, &qword_254ACCB40);
                v54 = v83;
                v99[38] = v83;
                LOBYTE(v99[39]) = 0;
                v99[40] = v81;
                v99[41] = v52;
                LOWORD(v99[42]) = v53;
                v99[43] = v51;
                LOBYTE(v99[44]) = v50;
                memcpy(v100, v99, sizeof(v100));
                nullsub_1(v100, v55);
                v56 = v95;
                v57 = (uint64_t)v87;
                sub_21192DD68((uint64_t)v100, (uint64_t)&v87[*(int *)(v95 + 44)], &qword_254AC8CD0);
                v58 = v86;
                v59 = *(_BYTE *)(v86 + 32);
                *(_QWORD *)(v57 + 24) = *(_QWORD *)(v86 + 24);
                v60 = *(int *)(v56 + 36);
                v61 = *(_BYTE *)(v58 + v60);
                *(_BYTE *)(v57 + 32) = v59;
                *(_BYTE *)(v57 + v60) = v61;
                v62 = *(_BYTE *)(v58 + *(int *)(v56 + 40));
                swift_bridgeObjectRetain();
                v63 = v54;
                sub_211933290(v58);
                *(_BYTE *)(v57 + *(int *)(v56 + 40)) = v62;
                v64 = v85;
                sub_211973360(v57, v85);
                v65 = v79;
                sub_21193324C((uint64_t)v98, v79);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v65, 0, 1, v56);
                v8 = v78;
                v66 = v88 + *(int *)(v78 + 48);
                sub_21193324C(v64, v88);
                sub_21192DD68(v65, v66, (uint64_t *)&unk_254AC8CB0);
                v35 = v96;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v35 = sub_21193340C(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
                v31 = v89;
                v68 = *(_QWORD *)(v35 + 16);
                v67 = *(_QWORD *)(v35 + 24);
                if (v68 >= v67 >> 1)
                  v35 = sub_21193340C(v67 > 1, v68 + 1, 1, v35);
                *(_QWORD *)(v35 + 16) = v68 + 1;
                sub_21192DD68(v88, v35+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v68, &qword_254ACA218);
                swift_release();
                sub_211933290(v85);
                goto LABEL_6;
              }
            }
            ++v42;
            if (v31 == v32)
              goto LABEL_39;
          }
        }
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_39:
      v69 = v98;
      v70 = v84;
      sub_21193324C((uint64_t)v98, v84);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v70, 0, 1, v95);
      v71 = v94 + *(int *)(v8 + 48);
      sub_21193324C((uint64_t)v69, v94);
      sub_21192DD68(v70, v71, (uint64_t *)&unk_254AC8CB0);
      v35 = v96;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_21193340C(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
      v73 = *(_QWORD *)(v35 + 16);
      v72 = *(_QWORD *)(v35 + 24);
      v31 = v89;
      if (v73 >= v72 >> 1)
        v35 = sub_21193340C(v72 > 1, v73 + 1, 1, v35);
      *(_QWORD *)(v35 + 16) = v73 + 1;
      sub_21192DD68(v94, v35+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(_QWORD *)(v92 + 72) * v73, &qword_254ACA218);
LABEL_6:
      sub_211933290((uint64_t)v98);
      ++a2;
    }
    while (a2 != v31);
    swift_bridgeObjectRelease();
    v76(v35);
  }
  else
  {
    a3(MEMORY[0x24BEE4AF8]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s7FMFCore11FMFLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  char v60;
  char v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[360];
  uint64_t v70[45];
  uint64_t v71[45];
  uint64_t v72[45];
  _BYTE v73[720];
  _BYTE v74[360];
  _BYTE v75[720];
  _BYTE v76[360];
  _BYTE v77[360];
  _BYTE v78[368];

  v2 = MEMORY[0x24BDAC7A8](a1, a2);
  v4 = v3;
  v5 = (_QWORD *)v2;
  v6 = type metadata accessor for FMFLocation();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v65 = (char *)&v62 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v66 = (uint64_t)&v62 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v62 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v64 = (uint64_t)&v62 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v62 - v30;
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)&v62 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)&v62 - v37;
  v39 = v5[1];
  v40 = v4[1];
  v67 = v41;
  v68 = v42;
  if (!v39)
  {
    if (!v40)
    {
LABEL_10:
      sub_21193324C((uint64_t)v5, (uint64_t)&v62 - v37);
      sub_21193324C((uint64_t)v4, (uint64_t)v35);
      goto LABEL_11;
    }
LABEL_8:
    sub_21193324C((uint64_t)v5, (uint64_t)&v62 - v37);
    sub_21193324C((uint64_t)v4, (uint64_t)v35);
    goto LABEL_9;
  }
  if (!v40)
    goto LABEL_8;
  if (*v5 == *v4 && v39 == v40)
    goto LABEL_10;
  v43 = sub_211A48258();
  sub_21193324C((uint64_t)v5, (uint64_t)v38);
  sub_21193324C((uint64_t)v4, (uint64_t)v35);
  if ((v43 & 1) == 0)
  {
LABEL_9:
    sub_211933290((uint64_t)v35);
    sub_211933290((uint64_t)v38);
    v44 = (uint64_t)v24;
    v46 = v64;
    v45 = (uint64_t)v65;
LABEL_17:
    sub_21193324C((uint64_t)v5, (uint64_t)v31);
    sub_21193324C((uint64_t)v4, v46);
LABEL_18:
    sub_211933290(v46);
    sub_211933290((uint64_t)v31);
    sub_21193324C((uint64_t)v5, v44);
    v47 = v68;
    sub_21193324C((uint64_t)v4, v68);
LABEL_19:
    sub_211933290(v47);
    sub_211933290(v44);
    v48 = v66;
    sub_21193324C((uint64_t)v5, v66);
    v49 = v67;
    sub_21193324C((uint64_t)v4, v67);
LABEL_20:
    sub_211933290(v49);
    sub_211933290(v48);
    sub_21193324C((uint64_t)v5, v45);
    sub_21193324C((uint64_t)v4, (uint64_t)v10);
    goto LABEL_21;
  }
LABEL_11:
  v63 = v10;
  sub_21192DD68((uint64_t)&v38[*(int *)(v6 + 44)], (uint64_t)v76, &qword_254AC8CD0);
  v62 = v6;
  sub_21192DD68((uint64_t)&v35[*(int *)(v6 + 44)], (uint64_t)v77, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v76, (uint64_t)v75, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v77, (uint64_t)&v75[360], &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v76, (uint64_t)v78, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v78) == 1)
  {
    sub_21198610C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_21195C46C);
    sub_211933290((uint64_t)v35);
    sub_211933290((uint64_t)v38);
    sub_21192DD68((uint64_t)&v75[360], (uint64_t)v74, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v74, (uint64_t)v73, &qword_254AC8CD0);
    v44 = (uint64_t)v24;
    if (sub_2119724C8((uint64_t)v73) == 1)
    {
      sub_21192DD68((uint64_t)v75, (uint64_t)v72, &qword_254AC8CD0);
      sub_21198610C((uint64_t)v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2119332CC);
      sub_21193324C((uint64_t)v5, (uint64_t)v31);
      v46 = v64;
      sub_21193324C((uint64_t)v4, v64);
      v10 = v63;
      v45 = (uint64_t)v65;
      goto LABEL_24;
    }
    goto LABEL_16;
  }
  sub_21192DD68((uint64_t)v76, (uint64_t)v74, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v77, (uint64_t)v73, &qword_254AC8CD0);
  v44 = (uint64_t)v24;
  if (sub_2119724C8((uint64_t)v73) == 1)
  {
    sub_21192DD68((uint64_t)v76, (uint64_t)v71, &qword_254AC8CD0);
    sub_21196F620(v71);
    sub_21196F620(v71);
    sub_211933290((uint64_t)v35);
    sub_211933290((uint64_t)v38);
    memcpy(v72, v74, 0x161uLL);
    sub_21196F6D0(v72);
LABEL_16:
    v10 = v63;
    v46 = v64;
    v45 = (uint64_t)v65;
    memcpy(v73, v75, 0x2C9uLL);
    sub_211985F14((uint64_t)v73);
    goto LABEL_17;
  }
  sub_21192DD68((uint64_t)v77, (uint64_t)v69, &qword_254AC8CD0);
  memcpy(v72, v69, 0x161uLL);
  sub_21192DD68((uint64_t)v76, (uint64_t)v70, &qword_254AC8CD0);
  sub_21198610C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_21195C46C);
  sub_21196F620(v70);
  v52 = sub_21196F974((uint64_t)v74, (uint64_t)v72);
  sub_211933290((uint64_t)v35);
  sub_211933290((uint64_t)v38);
  memcpy(v71, v74, 0x161uLL);
  sub_21196F6D0(v71);
  sub_21192DD68((uint64_t)v75, (uint64_t)v72, &qword_254AC8CD0);
  sub_21198610C((uint64_t)v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2119332CC);
  sub_21193324C((uint64_t)v5, (uint64_t)v31);
  v46 = v64;
  sub_21193324C((uint64_t)v4, v64);
  v10 = v63;
  v45 = (uint64_t)v65;
  if ((v52 & 1) == 0)
    goto LABEL_18;
LABEL_24:
  v53 = v31[16];
  sub_211933290((uint64_t)v31);
  v54 = *(unsigned __int8 *)(v46 + 16);
  sub_211933290(v46);
  sub_21193324C((uint64_t)v5, v44);
  v47 = v68;
  sub_21193324C((uint64_t)v4, v68);
  if (v53 != v54)
    goto LABEL_19;
  v55 = *(unsigned __int8 *)(v44 + 33);
  v56 = *(unsigned __int8 *)(v47 + 33);
  sub_211933290(v47);
  sub_211933290(v44);
  v48 = v66;
  sub_21193324C((uint64_t)v5, v66);
  v49 = v67;
  sub_21193324C((uint64_t)v4, v67);
  if (v55 != v56)
    goto LABEL_20;
  v57 = v62;
  v58 = *(unsigned __int8 *)(v48 + *(int *)(v62 + 40));
  sub_211933290(v48);
  v59 = *(unsigned __int8 *)(v49 + *(int *)(v57 + 40));
  sub_211933290(v49);
  sub_21193324C((uint64_t)v5, v45);
  sub_21193324C((uint64_t)v4, (uint64_t)v10);
  if (v58 == v59)
  {
    v60 = *(_BYTE *)(v45 + *(int *)(v57 + 36));
    sub_211933290(v45);
    v61 = v10[*(int *)(v57 + 36)];
    sub_211933290((uint64_t)v10);
    v50 = v60 ^ v61 ^ 1;
    return v50 & 1;
  }
LABEL_21:
  sub_211933290((uint64_t)v10);
  sub_211933290(v45);
  v50 = 0;
  return v50 & 1;
}

uint64_t sub_21193324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_211933290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2119332CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39)
{
  if (a39)
  {
    sub_21191CE4C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21193340C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_211933420(a1, a2, a3, a4, &qword_254ACA978, &qword_254ACA218);
}

uint64_t sub_211933420(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_211958C38(a5);
  v13 = *(_QWORD *)(sub_211958C38(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_211A48090();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(sub_211958C38(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21193362C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_21193362C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(sub_211958C38(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

id sub_211933744(uint64_t a1)
{
  uint64_t v1;

  return sub_211942268(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t FMFFriend.relationshipType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFFriend();
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 36));
  return result;
}

_QWORD *sub_211933780@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _QWORD __dst[57];

  v3 = (const void *)(v1 + 248);
  memcpy(__dst, v3, sizeof(__dst));
  memcpy(a1, v3, 0x1C8uLL);
  return sub_2119337E0(__dst);
}

_QWORD *sub_2119337E0(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1[10];
  v5 = a1[9];
  v3 = a1[11];
  v6 = a1[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21192769C(v5, v4, v3);
  sub_211933F10(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_211933924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t ObjectType;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[464];
  _BYTE v69[456];
  _QWORD v70[57];
  _BYTE v71[240];
  _QWORD v72[57];
  _QWORD v73[57];
  _QWORD v74[58];

  v1 = v0;
  v2 = sub_211A477D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A4779C();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + 48);
  if (*(_BYTE *)(v13 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1
    && (*(_BYTE *)(v13 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) & 1) == 0)
  {
    v41[0] = v12;
    v42 = v10;
    v43 = v9;
    v45 = v3;
    v46 = v2;
    if (qword_254AC7B80 != -1)
      swift_once();
    v44 = v6;
    v14 = sub_211A47748();
    v41[1] = sub_21194F3E0(v14, (uint64_t)qword_254ADC7E8);
    v15 = sub_211A47724();
    v16 = sub_211A47D30();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21190D000, v15, v16, "FMFDataManager: Trying to save the cache blob to disk", v17, 2u);
      MEMORY[0x212BE48A0](v17, -1, -1);
    }

    v18 = *(_QWORD *)(v1 + 88);
    v57 = *(_QWORD *)(v1 + 224);
    v58 = v18;
    v19 = *(_QWORD *)(v1 + 112);
    v59 = *(_QWORD *)(v1 + 104);
    v60 = v19;
    v61 = *(_QWORD *)(v1 + 184);
    v20 = *(_QWORD *)(v1 + 200);
    v21 = *(_QWORD *)(v1 + 208);
    v66 = *(_QWORD *)(v1 + 192);
    v67 = v20;
    v22 = *(_QWORD *)(v1 + 744);
    v65 = *(_QWORD *)(v1 + 752);
    v54 = *(_QWORD *)(v1 + 760);
    v23 = v54;
    v55 = v22;
    v24 = *(_QWORD *)(v1 + 768);
    v52 = v21;
    v53 = v24;
    v51 = *(_QWORD *)(v1 + 776);
    v47 = *(unsigned __int8 *)(v1 + 784);
    sub_21192DD68(v1 + 792, (uint64_t)v71, (uint64_t *)&unk_254ACC2F0);
    v25 = *(_QWORD *)(v1 + 1032);
    v49 = *(_QWORD *)(v1 + 1040);
    v50 = v25;
    v48 = *(_QWORD *)(v1 + 1048);
    v56 = *(_QWORD *)(v1 + 1056);
    v26 = *(_QWORD *)(v1 + 1064);
    v63 = *(_QWORD *)(v1 + 1072);
    v64 = v26;
    v62 = *(_QWORD *)(v1 + 1080);
    v27 = *(_QWORD *)(v1 + 1096);
    v28 = *(_QWORD *)(v1 + 1112);
    v29 = *(_QWORD *)(v1 + 1104);
    v30 = *(_QWORD *)(v1 + 720);
    v72[0] = v57;
    v72[1] = v58;
    v72[2] = MEMORY[0x24BEE4AF8];
    v72[3] = v59;
    v72[4] = v60;
    v72[5] = v61;
    v72[6] = v66;
    v72[7] = v67;
    v72[8] = v21;
    v72[9] = v22;
    v72[10] = v65;
    v72[11] = v23;
    v72[12] = v24;
    v72[13] = v51;
    LOBYTE(v72[14]) = v47;
    LOBYTE(v22) = *(_BYTE *)(v1 + 1088);
    LODWORD(v51) = v22;
    sub_21192DD68((uint64_t)v71, (uint64_t)&v72[15], (uint64_t *)&unk_254ACC2F0);
    v31 = v50;
    v72[45] = v50;
    v72[46] = v49;
    v72[47] = v48;
    v72[48] = v56;
    v72[49] = v64;
    v72[50] = v63;
    v72[51] = v62;
    LOBYTE(v72[52]) = v22;
    v72[53] = v27;
    v72[54] = v28;
    v72[55] = v29;
    v72[56] = v30;
    memcpy(v74, v72, 0x1C8uLL);
    memcpy(v70, v72, sizeof(v70));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21192769C(v55, v65, v54);
    sub_211933F10(v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211A47DA8();
    memcpy(v73, v69, sizeof(v73));
    memcpy(v68, v69, 0x1C8uLL);
    LOBYTE(v22) = sub_211933FAC((uint64_t)v70, (uint64_t)v68);
    sub_2119B1B98(v73);
    if ((v22 & 1) != 0)
    {
      sub_2119B1B98(v72);
      v32 = sub_211A47724();
      v33 = sub_211A47D30();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_21190D000, v32, v33, "FMFDataManager: Nothing changed. Skipping cache write", v34, 2u);
        MEMORY[0x212BE48A0](v34, -1, -1);
      }

    }
    else
    {
      sub_2119337E0(v72);
      v35 = v41[0];
      sub_211A47790();
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v1;
      memcpy((void *)(v36 + 24), v74, 0x1C8uLL);
      v70[4] = sub_211935F24;
      v70[5] = v36;
      v70[0] = MEMORY[0x24BDAC760];
      v70[1] = 1107296256;
      v70[2] = sub_21192382C;
      v70[3] = &unk_24CCCC030;
      v37 = _Block_copy(v70);
      swift_retain();
      v38 = v44;
      sub_211A477B4();
      MEMORY[0x212BE3BC8](0, v38, v35, v37);
      _Block_release(v37);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v46);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v43);
      swift_release();
      if (MEMORY[0x212BE496C](v1 + 32))
      {
        v39 = *(_QWORD *)(v1 + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v39 + 88))(ObjectType, v39);
        swift_unknownObjectRelease();
      }
      if (*(_QWORD *)(v1 + 240))
      {
        swift_retain();
        sub_211934E00(v74);
        swift_release();
      }
      sub_2119B1B98(v72);
    }
  }
}

uint64_t sub_211933F10(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_211933F60(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_211933FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[240];
  _QWORD v70[7];
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[240];
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[240];
  _BYTE v94[248];

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v67 = *(_QWORD *)(a1 + 40);
  v68 = *(_QWORD *)(a1 + 32);
  v65 = *(_QWORD *)(a1 + 48);
  v63 = *(_QWORD *)(a1 + 56);
  v61 = *(_QWORD *)(a1 + 64);
  v56 = *(_QWORD *)(a1 + 72);
  v57 = *(_QWORD *)(a1 + 80);
  v58 = *(_QWORD *)(a1 + 88);
  v59 = *(_QWORD *)(a1 + 96);
  v49 = *(_QWORD *)(a1 + 104);
  v51 = *(_BYTE *)(a1 + 112);
  sub_2119B1B50(a1 + 120, (uint64_t)v93);
  v46 = *(_QWORD *)(a1 + 376);
  v47 = *(_QWORD *)(a1 + 360);
  v42 = *(_QWORD *)(a1 + 384);
  v43 = *(_QWORD *)(a1 + 368);
  v41 = *(_QWORD *)(a1 + 400);
  v44 = *(_QWORD *)(a1 + 392);
  v45 = *(_QWORD *)(a1 + 408);
  v40 = *(_BYTE *)(a1 + 416);
  v31 = *(_QWORD *)(a1 + 424);
  v26 = *(_QWORD *)(a1 + 440);
  v28 = *(_QWORD *)(a1 + 432);
  v29 = *(_QWORD *)(a1 + 448);
  v9 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v66 = *(_QWORD *)(a2 + 40);
  v64 = *(_QWORD *)(a2 + 48);
  v62 = *(_QWORD *)(a2 + 56);
  v60 = *(_QWORD *)(a2 + 64);
  v52 = *(_QWORD *)(a2 + 72);
  v53 = *(_QWORD *)(a2 + 80);
  v54 = *(_QWORD *)(a2 + 96);
  v55 = *(_QWORD *)(a2 + 88);
  v48 = *(_QWORD *)(a2 + 104);
  v50 = *(unsigned __int8 *)(a2 + 112);
  sub_2119B1B50(a2 + 120, (uint64_t)v94);
  v33 = *(_QWORD *)(a2 + 368);
  v34 = *(_QWORD *)(a2 + 376);
  v35 = *(_QWORD *)(a2 + 384);
  v36 = *(_QWORD *)(a2 + 392);
  v37 = *(_QWORD *)(a2 + 400);
  v38 = *(_QWORD *)(a2 + 408);
  v39 = *(_QWORD *)(a2 + 360);
  v32 = *(_BYTE *)(a2 + 416);
  v30 = *(_QWORD *)(a2 + 424);
  v27 = *(_QWORD *)(a2 + 432);
  v13 = *(_QWORD *)(a2 + 440);
  v14 = *(_QWORD *)(a2 + 448);
  v25 = v13;
  if ((sub_21193461C(v5, v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C) & 1) == 0|| (sub_21193461C(v4, v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C) & 1) == 0|| (sub_21193461C(v7, v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C) & 1) == 0|| (sub_21193461C(v6, v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C) & 1) == 0
    || (sub_21193461C(v68, v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C) & 1) == 0|| (sub_21193461C(v67, v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0|| (sub_21193461C(v65, v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0|| (sub_21193461C(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0
    || (sub_21193461C(v61, v60, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert, (uint64_t (*)(char *, char *))static FMFLocationAlert.== infix(_:_:)) & 1) == 0)
  {
    goto LABEL_20;
  }
  if (!v58)
  {
    v16 = v56;
    v15 = v57;
    v17 = v55;
    if (!v55)
      goto LABEL_15;
LABEL_19:
    sub_21192769C(v52, v53, v17);
    sub_21195A23C(v16, v15, v58);
    sub_21195A23C(v52, v53, v17);
    goto LABEL_20;
  }
  v16 = v56;
  v15 = v57;
  v72 = v56;
  v73 = v57;
  v74 = v58;
  v75 = v59;
  v17 = v55;
  if (!v55)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  v89 = v52 & 0xFF010101;
  v90 = v53;
  v91 = v55;
  v92 = v54;
  sub_21192769C(v56, v57, v58);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = _s7FMFCore14FMFPreferencesV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v72, (unsigned __int8 *)&v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21195A23C(v56, v57, v58);
  if ((v18 & 1) == 0)
    goto LABEL_20;
LABEL_15:
  if ((v51 & 1) != 0)
  {
    if (!v50)
      goto LABEL_20;
  }
  else
  {
    v21 = v50;
    if (v49 != v48)
      v21 = 1;
    if ((v21 & 1) != 0)
      goto LABEL_20;
  }
  sub_2119B1B50((uint64_t)v94, (uint64_t)v88);
  sub_2119B1B50((uint64_t)v93, (uint64_t)&v89);
  if (sub_21196A434((uint64_t)&v89) == 1)
  {
    sub_2119B1B50((uint64_t)v94, (uint64_t)v70);
    if (sub_21196A434((uint64_t)v70) != 1)
      goto LABEL_20;
    v22 = v47;
  }
  else
  {
    sub_2119B1B50((uint64_t)v93, (uint64_t)v69);
    sub_2119B1B50((uint64_t)v94, (uint64_t)v70);
    if (sub_21196A434((uint64_t)v70) == 1)
      goto LABEL_20;
    v22 = v47;
    if (!_s7FMFCore9FMFConfigV2eeoiySbAC_ACtFZ_0((uint64_t)v69, (uint64_t)v88))
      goto LABEL_20;
  }
  if (v22)
  {
    v72 = v22;
    v73 = v43;
    v74 = v46;
    v75 = v42;
    v76 = v44;
    v77 = v41;
    v78 = v45;
    v79 = v40;
    if (v39)
    {
      v23 = v14;
      v70[0] = v39;
      v70[1] = v33;
      v70[2] = v34;
      v70[3] = v35;
      v70[4] = v36;
      v70[5] = v37;
      v70[6] = v38;
      v71 = v32 & 1;
      v24 = _s7FMFCore9FMFMyInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v72, (uint64_t)v70);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_20;
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_40:
    v72 = v22;
    v73 = v43;
    v74 = v46;
    v75 = v42;
    v76 = v44;
    v77 = v41;
    v78 = v45;
    v79 = v40;
    v80 = v39;
    v81 = v33;
    v82 = v34;
    v83 = v35;
    v84 = v36;
    v85 = v37;
    v86 = v38;
    v87 = v32;
    sub_211933F10(v39);
    sub_2119B1F10(&v72);
    goto LABEL_20;
  }
  v23 = v14;
  if (v39)
    goto LABEL_40;
LABEL_35:
  if ((sub_211934978(v31, v30) & 1) != 0 && (sub_21195C940(v29, v23) & 1) != 0 && (sub_211934A70(v28, v27) & 1) != 0)
  {
    v19 = sub_21193461C(v26, v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(char *, char *))_s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0);
    return v19 & 1;
  }
LABEL_20:
  v19 = 0;
  return v19 & 1;
}

uint64_t sub_21193461C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  BOOL v23;
  uint64_t v25;

  v8 = a3(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v25 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 == *(_QWORD *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      v21 = 1;
    }
    else
    {
      v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v19 = *(_QWORD *)(v14 + 72);
      v20 = v17 - 1;
      do
      {
        sub_211934794(a1 + v18, (uint64_t)v16, a3);
        sub_211934794(a2 + v18, (uint64_t)v12, a3);
        v21 = a4(v16, v12);
        sub_211934758((uint64_t)v12, a3);
        sub_211934758((uint64_t)v16, a3);
        v23 = v20-- != 0;
        if ((v21 & 1) == 0)
          break;
        v18 += v19;
      }
      while (v23);
    }
  }
  else
  {
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_211934758(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_211934794(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s7FMFCore14FMFPreferencesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;

  result = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0 || ((a1[2] ^ a2[2]) & 1) != 0)
    return result;
  v4 = a1[3];
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 3);
  v8 = a2[3];
  v9 = *((_QWORD *)a2 + 1);
  v10 = *((_QWORD *)a2 + 2);
  v11 = *((_QWORD *)a2 + 3);
  if (v4 != 2)
  {
    if (v8 != 2)
    {
      if ((v4 & 1) != 0)
        v12 = 0x454E4F5952455645;
      else
        v12 = 0x53444E45495246;
      if ((v4 & 1) != 0)
        v13 = 0xE800000000000000;
      else
        v13 = 0xE700000000000000;
      if ((v8 & 1) != 0)
        v14 = 0x454E4F5952455645;
      else
        v14 = 0x53444E45495246;
      if ((v8 & 1) != 0)
        v15 = 0xE800000000000000;
      else
        v15 = 0xE700000000000000;
      if (v12 == v14 && v13 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v16 = sub_211A48258();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v16 & 1) == 0)
          return result;
      }
      goto LABEL_26;
    }
    return 0;
  }
  if (v8 != 2)
    return 0;
LABEL_26:
  if (v5 == v9 && v6 == v10 || (v17 = sub_211A48258(), result = 0, (v17 & 1) != 0))
  {
    result = (v7 | v11) == 0;
    if (v7)
    {
      if (v11)
        return sub_2119B198C(v7, v11);
    }
  }
  return result;
}

uint64_t sub_211934978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  char v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    for (i = 0; ; i += 40)
    {
      v6 = *(_QWORD *)(a1 + i + 48);
      v7 = *(_QWORD *)(a1 + i + 56);
      v8 = *(unsigned __int8 *)(a1 + i + 64);
      v9 = *(_QWORD *)(a2 + i + 48);
      v10 = *(_QWORD *)(a2 + i + 56);
      v11 = *(unsigned __int8 *)(a2 + i + 64);
      v12 = *(_QWORD *)(a1 + i + 32) == *(_QWORD *)(a2 + i + 32) && *(_QWORD *)(a1 + i + 40) == *(_QWORD *)(a2 + i + 40);
      if (!v12 && (sub_211A48258() & 1) == 0)
        break;
      if (v6 == v9 && v7 == v10)
      {
        if (v8 != v11)
          return 0;
      }
      else
      {
        v14 = sub_211A48258();
        result = 0;
        if ((v14 & 1) == 0 || ((v8 ^ v11) & 1) != 0)
          return result;
      }
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_211934A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 40);
    for (i = (_QWORD *)(a1 + 40); ; i += 3)
    {
      v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_211A48258() & 1) == 0)
        break;
      v3 += 3;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t _s7FMFCore9FMFMyInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 8);
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  v20 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 56);
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 56);
  if ((sub_21194E8E8(*(_QWORD **)a1, *(_QWORD **)a2) & 1) == 0)
    return 0;
  v12 = v10;
  if (v2 != v5 || v23 != v7)
  {
    v13 = sub_211A48258();
    v12 = v10;
    v14 = v13;
    result = 0;
    if ((v14 & 1) == 0)
      return result;
  }
  if (v21)
  {
    if (v9)
    {
      if (v22 != v6 || v21 != v9)
      {
        v16 = v12;
        v17 = sub_211A48258();
        v12 = v16;
        v18 = v17;
        result = 0;
        if ((v18 & 1) == 0)
          return result;
      }
      goto LABEL_14;
    }
    return 0;
  }
  if (v9)
    return 0;
LABEL_14:
  if (v20 == v8 && v3 == v12)
    return v4 ^ v11 ^ 1u;
  v19 = sub_211A48258();
  result = 0;
  if ((v19 & 1) != 0)
    return v4 ^ v11 ^ 1u;
  return result;
}

BOOL _s7FMFCore9FMFConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int64x2_t v2;
  int64x2_t v3;
  _BOOL8 result;
  int64x2_t v6;
  int64x2_t v7;
  int8x8_t v8;

  result = 0;
  v6.i64[0] = *(_QWORD *)(a1 + 16);
  v6.i64[1] = *(_QWORD *)(a1 + 32);
  v2.i64[0] = *(_QWORD *)(a1 + 40);
  v7.i64[0] = *(_QWORD *)(a2 + 16);
  v7.i64[1] = *(_QWORD *)(a2 + 32);
  v3.i64[0] = *(_QWORD *)(a2 + 40);
  if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL), (int64x2_t)vextq_s8(*(int8x16_t *)a2, *(int8x16_t *)a2, 8uLL)), (int32x4_t)vceqq_s64(v6, v7)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(vzip1q_s64(v2, *(int64x2_t *)(a1 + 56)), vzip1q_s64(v3, *(int64x2_t *)(a2 + 56))), (int32x4_t)vceqq_s64(
                                                                           (int64x2_t)vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 72), 8uLL), (int64x2_t)vextq_s8(*(int8x16_t *)(a2 + 56), *(int8x16_t *)(a2 + 72), 8uLL)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 80), *(int64x2_t *)(a2 + 80)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 104), *(int64x2_t *)(a2 + 104))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 120), *(int64x2_t *)(a2 + 120)),
                                                              (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 136), *(int64x2_t *)(a2 + 136))))), 7uLL))) & 1) != 0)
  {
    v8 = vand_s8(vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 152), *(int64x2_t *)(a2 + 152)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 168), *(int64x2_t *)(a2 + 168))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 184), *(int64x2_t *)(a2 + 184)), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 208), *(int64x2_t *)(a2 + 208))))), 7uLL)), (int8x8_t)0x8040201008040201);
    v8.i8[0] = vaddv_s8(v8);
    if (v8.i32[0] == 255
      && *(_QWORD *)(a1 + 224) == *(_QWORD *)(a2 + 224)
      && ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 200) ^ *(unsigned __int8 *)(a2 + 200)) & 1) == 0
      && ((*(unsigned __int8 *)(a1 + 201) ^ *(unsigned __int8 *)(a2 + 201)) & 1) == 0
      && *(double *)(a1 + 24) == *(double *)(a2 + 24))
    {
      return *(_QWORD *)(a1 + 232) == *(_QWORD *)(a2 + 232);
    }
  }
  return result;
}

uint64_t sub_211934E00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v20[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21190D000, v14, v15, "FMDiskIO: save to disk", v16, 2u);
    MEMORY[0x212BE48A0](v16, -1, -1);
  }

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  memcpy((void *)(v17 + 24), a1, 0x1C8uLL);
  aBlock[4] = sub_211935F28;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC080;
  v18 = _Block_copy(aBlock);
  sub_2119337E0(a1);
  swift_retain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v7, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t FMFFriend.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFFriend();
  return sub_21192C6B8(v1 + *(int *)(v3 + 80), a1, (uint64_t *)&unk_254AC8CB0);
}

uint64_t sub_2119350F4()
{
  uint64_t *v0;

  return sub_21194E9EC(v0[2], v0[3], v0[4]);
}

uint64_t sub_211935100()
{
  uint64_t v0;

  return sub_21193510C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_21193510C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char **p_type;
  char **v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  double v34;
  double v35;
  id v36;
  void *v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  void (*v49)(uint64_t);
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t aBlock[7];

  v48[1] = a4;
  v49 = a3;
  v59 = a2;
  v66 = a1;
  v4 = sub_211A4779C();
  v63 = *(_QWORD *)(v4 - 8);
  v64 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v62 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v58 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  v13 = (_QWORD *)sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  v11 = v66;
  swift_bridgeObjectRetain_n();
  v57 = v13;
  v12 = sub_211A47724();
  LOBYTE(v13) = sub_211A47D30();
  v14 = v11 >> 62;
  if (!os_log_type_enabled(v12, (os_log_type_t)v13))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v11 = swift_slowAlloc();
  *(_DWORD *)v11 = 134217984;
  if (v14)
    goto LABEL_30;
  v15 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    aBlock[0] = v15;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v12, (os_log_type_t)v13, "FMLocationShifter: processing %ld shifting request", (uint8_t *)v11, 0xCu);
    MEMORY[0x212BE48A0](v11, -1, -1);

LABEL_8:
    v16 = swift_allocObject();
    v65 = v16;
    *(_QWORD *)(v16 + 16) = MEMORY[0x24BEE4AF8];
    v13 = (_QWORD *)(v16 + 16);
    if (v14)
    {
      if (v66 < 0)
        v12 = v66;
      else
        v12 = (v66 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      v17 = sub_211A480A8();
      if (!v17)
        goto LABEL_28;
    }
    else
    {
      v17 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v17)
        goto LABEL_28;
    }
    v18 = objc_opt_self();
    if (v17 >= 1)
      break;
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    v15 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  v20 = (void *)v18;
  v21 = 0;
  v22 = v66 & 0xC000000000000001;
  p_type = (char **)(&stru_24CCDDFF0 + 16);
  v24 = (char **)(&stru_24CCDDFF0 + 16);
  v52 = 0x8000000211A53EA0;
  *(_QWORD *)&v19 = 136315138;
  v51 = v19;
  v50 = MEMORY[0x24BEE4AD8] + 8;
  v56 = v13;
  v54 = (void *)v18;
  v55 = v17;
  v53 = v66 & 0xC000000000000001;
  do
  {
    if (v22)
    {
      v32 = MEMORY[0x212BE3DA8](v21, v66);
    }
    else
    {
      v32 = *(_QWORD *)(v66 + 8 * v21 + 32);
      swift_retain();
    }
    v33 = *(void **)(v32 + 16);
    objc_msgSend(v33, p_type[390]);
    v35 = v34;
    objc_msgSend(v33, p_type[390]);
    if (objc_msgSend(v20, v24[391], v35))
    {
      v36 = objc_allocWithZone(MEMORY[0x24BE2FE68]);
      v37 = (void *)sub_211A478EC();
      v38 = objc_msgSend(v36, sel_initWithDescription_andTimeout_, v37, 60.0);

      swift_retain_n();
      v39 = sub_211A47724();
      v40 = sub_211A47D30();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v67 = v32;
        aBlock[0] = v42;
        *(_DWORD *)v41 = v51;
        type metadata accessor for FMLocationShiftingRequest();
        swift_retain();
        v43 = sub_211A47928();
        *(_QWORD *)(v41 + 4) = sub_211950A9C(v43, v44, aBlock);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21190D000, v39, v40, "FMLocationShifter: processing shifting request %s", (uint8_t *)v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v42, -1, -1);
        MEMORY[0x212BE48A0](v41, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v25 = v59;
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = v25;
      v26[3] = v32;
      v26[4] = v65;
      v26[5] = v38;
      aBlock[4] = (uint64_t)sub_21196E700;
      aBlock[5] = (uint64_t)v26;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_21192382C;
      aBlock[3] = (uint64_t)&unk_24CCC6C00;
      v27 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      v28 = v38;
      v29 = v58;
      sub_211A477B4();
      v67 = MEMORY[0x24BEE4AF8];
      sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_211958C38((uint64_t *)&unk_254ACC1D0);
      sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
      v30 = v62;
      v31 = v64;
      sub_211A47EA4();
      MEMORY[0x212BE3BC8](0, v29, v30, v27);
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v29, v61);
      swift_release();
      objc_msgSend(v28, sel_wait);

      v17 = v55;
      v13 = v56;
      v20 = v54;
      v22 = v53;
      p_type = &stru_24CCDDFF0.type;
      v24 = &stru_24CCDDFF0.type;
    }
    else
    {
      swift_beginAccess();
      v45 = swift_retain();
      MEMORY[0x212BE3898](v45);
      if (*(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_211A47AE4();
      sub_211A47B14();
      sub_211A47AC0();
      swift_endAccess();
    }
    ++v21;
    swift_release();
  }
  while (v17 != v21);
LABEL_28:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v46 = swift_bridgeObjectRetain();
  v49(v46);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_211935834(unint64_t a1)
{
  uint64_t v1;

  sub_211935840(a1, *(void **)(v1 + 16), *(void (**)(id))(v1 + 24));
}

void sub_211935840(unint64_t a1, void *a2, void (*a3)(id))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;

  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_7:
    swift_bridgeObjectRelease();
    v8 = a2;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  if (!sub_211A480A8())
    goto LABEL_7;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = MEMORY[0x212BE3DA8](0, a1);
    swift_bridgeObjectRelease();
    v8 = *(id *)(v9 + 16);
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(a1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v8 = *(id *)(v7 + 16);
    swift_release();
LABEL_8:
    v10 = v8;
    a3(v8);

    return;
  }
  __break(1u);
}

void sub_211935960()
{
  uint64_t v0;

  sub_21193596C(*(_QWORD *)(v0 + 24), *(double *)(v0 + 16));
}

void sub_21193596C(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char v26;
  double v27;
  uint64_t v28;
  double v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  double v34;
  id v35;
  id v36;
  void *v37;
  _OWORD v39[2];
  _QWORD v40[4];
  double v41;

  v4 = sub_211A47208();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v39 - v11 + 16;
  v13 = *(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_maxCallbackInterval);
  if (v13 >= a2)
    v13 = a2;
  v41 = v13;
  v14 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval;
  if (v13 >= *(double *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_minCallbackInterval))
  {
    v26 = 1;
  }
  else
  {
    sub_211A471FC();
    sub_211A471D8();
    v16 = v15;
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v12, v4);
    v18 = a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v18, v4);
    sub_211A471D8();
    v20 = v19;
    v17(v9, v4);
    if (qword_254AC7B80 != -1)
      swift_once();
    v21 = v16 - v20;
    v22 = sub_211A47748();
    sub_21194F3E0(v22, (uint64_t)qword_254ADC7E8);
    v23 = sub_211A47724();
    v24 = sub_211A47D30();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v25 = 134349056;
      *(double *)v40 = v21;
      sub_211A47E2C();
      _os_log_impl(&dword_21190D000, v23, v24, "FMFRefreshController: last refresh interval %{public}f s", v25, 0xCu);
      MEMORY[0x212BE48A0](v25, -1, -1);
    }

    v26 = 0;
    v27 = *(double *)(a1 + v14) + v21 * -1000.0;
    if (v27 <= 0.0)
      v27 = 0.0;
    v41 = v27;
  }
  *(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshReason) = v26;
  if (qword_254AC7B80 != -1)
    swift_once();
  v28 = sub_211A47748();
  sub_21194F3E0(v28, (uint64_t)qword_254ADC7E8);
  v29 = v41;
  v30 = sub_211A47724();
  v31 = sub_211A47D30();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v32 = 134349056;
    *(double *)v40 = v29;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v30, v31, "FMFRefreshController: scheduling next refresh in %{public}f s", v32, 0xCu);
    MEMORY[0x212BE48A0](v32, -1, -1);
  }

  v33 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer), sel_invalidate);
  sub_211911824(0, &qword_254AC8878);
  swift_beginAccess();
  v34 = v41 / 1000.0;
  v40[3] = type metadata accessor for FMFRefreshController();
  v40[0] = a1;
  memset(v39, 0, sizeof(v39));
  swift_retain();
  v35 = sub_211935D7C(v40, (uint64_t)sel_refreshTimerFired, v39, 0, v34);
  v36 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(v36, sel_addTimer_forMode_, v35, *MEMORY[0x24BDBCA90]);

  v37 = *(void **)(a1 + v33);
  *(_QWORD *)(a1 + v33) = v35;

}

id sub_211935D7C(_QWORD *a1, uint64_t a2, _QWORD *a3, char a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  id v20;
  _QWORD v22[2];

  sub_211931DB4(a1, a1[3]);
  v10 = sub_211A48240();
  v11 = a3[3];
  if (v11)
  {
    v12 = sub_211931DB4(a3, a3[3]);
    v22[1] = v22;
    v13 = a4;
    v14 = a2;
    v15 = *(_QWORD *)(v11 - 8);
    MEMORY[0x24BDAC7A8](v12, v12);
    v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = sub_211A48240();
    v19 = *(void (**)(char *, uint64_t))(v15 + 8);
    a2 = v14;
    a4 = v13;
    v19(v17, v11);
    sub_211931C34((uint64_t)a3);
  }
  else
  {
    v18 = 0;
  }
  v20 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v18, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_211931C34((uint64_t)a1);
  return v20;
}

uint64_t type metadata accessor for FMFRefreshController()
{
  uint64_t result;

  result = qword_254AC8548;
  if (!qword_254AC8548)
    return swift_getSingletonMetadata();
  return result;
}

void sub_211935F28()
{
  uint64_t v0;

  sub_211935F34(*(_QWORD **)(v0 + 16), (const void *)(v0 + 24));
}

void sub_211935F34(_QWORD *a1, const void *a2)
{
  void *v3;
  void *v4;
  _BYTE __dst[456];

  v3 = memcpy(__dst, a2, sizeof(__dst));
  v4 = (void *)MEMORY[0x212BE42D0](v3);
  sub_21193ACB4(a1, __dst);
  objc_autoreleasePoolPop(v4);
}

uint64_t sub_211935F88()
{
  uint64_t v0;

  return sub_211935F90(*(_QWORD *)(v0 + 16));
}

uint64_t sub_211935F90(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;

  v1 = result;
  if (*(_QWORD *)(result + 16))
  {
    result = sub_21195BB68(0xD000000000000019, 0x8000000211A531B0);
    if ((v2 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v3 = MEMORY[0x24BEE1768];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v4 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v4 = v38;
        }
        v41 = v3;
        v40[0] = v4;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 1);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0x74655365636E6566, 0xEE006B6E694C7075);
    if ((v5 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v6 = MEMORY[0x24BEE0D00];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v8 = v38;
        v7 = v39;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v7 = v39;
          v8 = v38;
        }
        v41 = v6;
        v40[0] = v8;
        v40[1] = v7;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 0);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000015, 0x8000000211A531D0);
    if ((v9 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v10 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v11 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v11 = v38;
        }
        v41 = v10;
        v40[0] = v11;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 2);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000014, 0x8000000211A531F0);
    if ((v12 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v13 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v14 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v14 = v38;
        }
        v41 = v13;
        v40[0] = v14;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 3);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000018, 0x8000000211A53230);
    if ((v15 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v16 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v17 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v17 = v38;
        }
        v41 = v16;
        v40[0] = v17;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 5);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000020, 0x8000000211A53250);
    if ((v18 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v19 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v20 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v20 = v38;
        }
        v41 = v19;
        v40[0] = v20;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 6);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD00000000000001DLL, 0x8000000211A53210);
    if ((v21 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v22 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v23 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v23 = v38;
        }
        v41 = v22;
        v40[0] = v23;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 4);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD00000000000001DLL, 0x8000000211A53280);
    if ((v24 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v25 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v26 = v38;
        if (qword_254AC7B98 != -1)
        {
          swift_once();
          v26 = v38;
        }
        v41 = v25;
        v40[0] = v26;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 7);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD00000000000001BLL, 0x8000000211A532A0);
    if ((v27 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v28 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v29 = v38;
        if (qword_254AC7BA0 != -1)
        {
          swift_once();
          v29 = v38;
        }
        v41 = v28;
        v40[0] = v29;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 8);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD00000000000001BLL, 0x8000000211A532C0);
    if ((v30 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v31 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v32 = v38;
        if (qword_254AC7BA0 != -1)
        {
          swift_once();
          v32 = v38;
        }
        v41 = v31;
        v40[0] = v32;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 9);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000020, 0x8000000211A532E0);
    if ((v33 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v34 = MEMORY[0x24BEE13C8];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        v35 = v38;
        if (qword_254AC7BA0 != -1)
        {
          swift_once();
          v35 = v38;
        }
        v41 = v34;
        v40[0] = v35;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 10);
        result = swift_endAccess();
      }
    }
  }
  if (*(_QWORD *)(v1 + 16))
  {
    result = sub_21195BB68(0xD000000000000018, 0x8000000211A53340);
    if ((v36 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v1 + 56) + 32 * result, (uint64_t)v40);
      v37 = MEMORY[0x24BEE1768];
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        if (qword_254AC7BA8 != -1)
          swift_once();
        v41 = v37;
        v40[0] = v38;
        swift_beginAccess();
        sub_211936990((uint64_t)v40, 12);
        return swift_endAccess();
      }
    }
  }
  return result;
}

uint64_t sub_211936990(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21193DB98((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_21193A0D0(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_211923EE8(a1, &qword_254AC97C0);
    sub_211A40F14(a2, v7);
    return sub_211923EE8((uint64_t)v7, &qword_254AC97C0);
  }
}

void sub_211936A3C()
{
  uint64_t v0;

  sub_211936A4C(*(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(uint8_t **)(v0 + 16));
}

void sub_211936A4C(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, uint8_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD v69[2];
  uint8_t *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  uint8_t *v76;
  uint64_t v77;
  id v78;
  _QWORD v79[5];
  uint64_t v80[3];
  uint64_t v81;
  uint64_t v82;

  v76 = a5;
  v77 = a3;
  v78 = a4;
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v74 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  v14 = v13;
  v75 = v12;
  v15 = &unk_254ACD000;
  if (os_log_type_enabled(v12, v13))
  {
    v16 = swift_slowAlloc();
    v72 = v14;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v71 = v18;
    *(_DWORD *)v17 = 136315138;
    v80[0] = v18;
    v69[1] = v17 + 4;
    v70 = v17;
    v19 = a1 + qword_254ACDCD8;
    v73 = v7;
    v20 = a1;
    v21 = v8;
    v22 = *(_QWORD *)(a1 + qword_254ACDCD8);
    v23 = *(_QWORD *)(v19 + 8);
    swift_bridgeObjectRetain();
    v24 = sub_21193707C(0xCuLL, v22, v23);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v8 = v21;
    swift_bridgeObjectRelease();
    v31 = v24;
    a1 = v20;
    v7 = v73;
    v32 = MEMORY[0x212BE376C](v31, v26, v28, v30);
    v34 = v33;
    swift_bridgeObjectRelease();
    v79[0] = sub_211950A9C(v32, v34, v80);
    sub_211A47E2C();
    swift_release_n();
    v15 = (_QWORD *)&unk_254ACD000;
    swift_bridgeObjectRelease();
    v35 = v75;
    v36 = v70;
    _os_log_impl(&dword_21190D000, v75, (os_log_type_t)v72, "FMFServerInteractionController<%s>: sending request…", v70, 0xCu);
    v37 = v71;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v37, -1, -1);
    MEMORY[0x212BE48A0](v36, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v38 = objc_allocWithZone(MEMORY[0x24BE2FE68]);
  v39 = (void *)sub_211A478EC();
  v40 = objc_msgSend(v38, sel_initWithDescription_andTimeout_, v39, 120.0);

  v41 = *a2;
  if (v41 != type metadata accessor for FMFInitRefreshClientRequest())
  {
    v42 = v74;
    sub_211A471FC();
    v43 = a1 + qword_254ADC818;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v43, v42, v7);
    swift_endAccess();
  }
  sub_21193719C((uint64_t)a2);
  v81 = type metadata accessor for FMFBaseRequest();
  v82 = MEMORY[0x24BE301B0];
  v80[0] = (uint64_t)a2;
  v79[3] = v81;
  v79[4] = sub_211910908(&qword_254ACDD78, (uint64_t (*)(uint64_t))type metadata accessor for FMFBaseRequest, (uint64_t)&unk_211A4CBF0);
  v79[0] = a2;
  v44 = (void *)objc_opt_self();
  swift_retain_n();
  v45 = objc_msgSend(v44, sel_processInfo);
  v46 = objc_msgSend(v45, sel_processName);

  sub_211A47910();
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = v76;
  v47[3] = a1;
  v48 = v77;
  v49 = v78;
  v47[4] = a2;
  v47[5] = v48;
  v47[6] = v49;
  v47[7] = v40;
  swift_retain();
  swift_retain();
  swift_retain();
  v50 = v40;
  sub_211A47370();
  swift_bridgeObjectRelease();
  swift_release();
  sub_211931C34((uint64_t)v79);
  sub_211931C34((uint64_t)v80);
  objc_msgSend(v50, sel_wait);
  swift_retain_n();
  v51 = sub_211A47724();
  v52 = sub_211A47D30();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v78 = v50;
    v54 = (uint8_t *)v53;
    v55 = swift_slowAlloc();
    *(_DWORD *)v54 = 136315138;
    v80[0] = v55;
    v76 = v54 + 4;
    v77 = a1;
    v56 = (uint64_t *)(a1 + v15[411]);
    v57 = *v56;
    v58 = v56[1];
    swift_bridgeObjectRetain();
    v59 = sub_21193707C(0xCuLL, v57, v58);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    swift_bridgeObjectRelease();
    v66 = MEMORY[0x212BE376C](v59, v61, v63, v65);
    v68 = v67;
    swift_bridgeObjectRelease();
    v79[0] = sub_211950A9C(v66, v68, v80);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v51, v52, "FMFServerInteractionController<%s>: request sent and done", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v55, -1, -1);
    MEMORY[0x212BE48A0](v54, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

unint64_t sub_21193707C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_211A479A0();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_211A47A48();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMFInitRefreshClientRequest()
{
  uint64_t result;

  result = qword_254ACEDD0;
  if (!qword_254ACEDD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FMFBaseRequest()
{
  uint64_t result;

  result = qword_254ACA560;
  if (!qword_254ACA560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21193719C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v2 = v1;
  v4 = sub_211A47208();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_211A47274();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *(_QWORD *)(v2 + qword_254ADC830);
  if (v18)
  {
    *(_QWORD *)(a1 + qword_254ACA550) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v2 + qword_254ADC838);
    if (v19)
    {
      *(_QWORD *)(a1 + qword_254ACA558) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  sub_21192C6B8(v2 + qword_254ACDCF8, (uint64_t)v12, &qword_254AC9200);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_211923EE8((uint64_t)v12, &qword_254AC9200);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v17, v12, v13);
    sub_211939660((uint64_t)v17, 1);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v17, v13);
  }
  v20 = v2 + qword_254ADC818;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v8, v20, v4);
  v21 = a1 + qword_254ADC678;
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 24))(v21, v8, v4);
  swift_endAccess();
  sub_2119399DC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_2119373F0()
{
  uint64_t v0;

  sub_2119373F8(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_2119373F8(uint64_t a1, char *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  _QWORD *v73;
  char *v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char v83;
  char v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char *v93;
  _DWORD v94[66];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  _BYTE v111[240];
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;

  if (qword_254AC7B80 != -1)
    swift_once();
  v4 = sub_211A47748();
  sub_21194F3E0(v4, (uint64_t)qword_254ADC7E8);
  v5 = sub_211A47724();
  v6 = sub_211A47D30();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_21190D000, v5, v6, "FMFGenericResponseHandler: handleInitRefreshResponse", v7, 2u);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }

  v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16);
  if (v9)
  {
    v10 = *v8;
    v11 = v8[1];
    v12 = v8[3];
    *(_QWORD *)&v112 = v10;
    *((_QWORD *)&v112 + 1) = v11;
    *(_QWORD *)&v113 = v9;
    *((_QWORD *)&v113 + 1) = v12;
    sub_21192769C(v10, v11, v9);
    sub_21192769C(v10, v11, v9);
    swift_retain();
    sub_211915EC4(&v112);
    swift_release();
    v13 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v13))
    {
      v14 = *((_QWORD *)v13 + 1);
      ObjectType = swift_getObjectType();
      *(_QWORD *)&v112 = v10 & 0xFF010101;
      *((_QWORD *)&v112 + 1) = v11;
      *(_QWORD *)&v113 = v9;
      *((_QWORD *)&v113 + 1) = v12;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v14 + 8))(&v112, ObjectType, v14);
      swift_unknownObjectRelease();
    }
    sub_21195A23C(v10, v11, v9);
  }
  sub_21192DD68(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t)v111, (uint64_t *)&unk_254ACC2F0);
  sub_21192DD68((uint64_t)v111, (uint64_t)&v112, (uint64_t *)&unk_254ACC2F0);
  v16 = sub_21196A434((uint64_t)&v112);
  if ((_DWORD)v16 != 1)
  {
    sub_21192DD68((uint64_t)v111, (uint64_t)&v95, (uint64_t *)&unk_254ACC2F0);
    swift_retain();
    sub_21191E9A4((uint64_t)&v95);
    swift_release();
    v18 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    v16 = MEMORY[0x212BE496C](v18);
    if (v16)
    {
      v19 = *((_QWORD *)v18 + 1);
      v20 = swift_getObjectType();
      v107 = v124;
      v108 = v125;
      v109 = v126;
      v103 = v120;
      v104 = v121;
      v105 = v122;
      v106 = v123;
      v99 = v116;
      v100 = v117;
      v101 = v118;
      v102 = v119;
      v95 = v112;
      v96 = v113;
      v97 = v114;
      v98 = v115;
      nullsub_1(&v95, *(double *)&v115);
      sub_21192DD68((uint64_t)&v95, (uint64_t)v94, (uint64_t *)&unk_254ACC2F0);
      (*(void (**)(_DWORD *, uint64_t, uint64_t))(v19 + 32))(v94, v20, v19);
      v16 = swift_unknownObjectRelease();
    }
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features + 8) & 1) == 0)
  {
    v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features);
    *(_QWORD *)&v95 = v21;
    BYTE8(v95) = 0;
    swift_retain();
    sub_21191D3E8((uint64_t *)&v95);
    swift_release();
    v22 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    v16 = MEMORY[0x212BE496C](v22);
    if (v16)
    {
      v23 = *((_QWORD *)v22 + 1);
      v24 = swift_getObjectType();
      *(_QWORD *)&v95 = v21;
      BYTE8(v95) = 0;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v23 + 16))(&v95, v24, v23);
      v16 = swift_unknownObjectRelease();
    }
  }
  v92 = a1;
  v93 = a2;
  v25 = a1 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo;
  v26 = *(_QWORD *)v25;
  if (*(_QWORD *)v25)
  {
    v27 = *(_QWORD *)(v25 + 8);
    v28 = *(_QWORD *)(v25 + 16);
    v29 = *(_QWORD *)(v25 + 24);
    v30 = *(_QWORD *)(v25 + 32);
    v32 = *(_QWORD *)(v25 + 40);
    v31 = *(_QWORD *)(v25 + 48);
    v33 = *(_BYTE *)(v25 + 56);
    *(_QWORD *)&v95 = *(_QWORD *)v25;
    *((_QWORD *)&v95 + 1) = v27;
    *(_QWORD *)&v96 = v28;
    *((_QWORD *)&v96 + 1) = v29;
    *(_QWORD *)&v97 = v30;
    *((_QWORD *)&v97 + 1) = v32;
    *(_QWORD *)&v98 = v31;
    BYTE8(v98) = v33;
    sub_211933F10(v26);
    v91 = v33;
    sub_211933F10(v26);
    swift_retain();
    sub_211916554((uint64_t)&v95);
    swift_release();
    v34 = &v93[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v34))
    {
      v35 = *((_QWORD *)v34 + 1);
      v36 = swift_getObjectType();
      *(_QWORD *)&v95 = v26;
      *((_QWORD *)&v95 + 1) = v27;
      *(_QWORD *)&v96 = v28;
      *((_QWORD *)&v96 + 1) = v29;
      *(_QWORD *)&v97 = v30;
      *((_QWORD *)&v97 + 1) = v32;
      *(_QWORD *)&v98 = v31;
      BYTE8(v98) = v91 & 1;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v35 + 24))(&v95, v36, v35);
      swift_unknownObjectRelease();
    }
    v16 = sub_211933F60(v26);
    a2 = v93;
  }
  v37 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices);
  if (v37)
  {
    swift_retain();
    v38 = swift_bridgeObjectRetain();
    sub_211963B58(v38);
    swift_release();
    v39 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    v16 = MEMORY[0x212BE496C](v39);
    if (v16)
    {
      v40 = *((_QWORD *)v39 + 1);
      v41 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 40))(v37, 1, v41, v40);
      v16 = swift_unknownObjectRelease();
    }
  }
  v42 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels);
  if (v42)
  {
    swift_retain();
    v43 = swift_bridgeObjectRetain();
    sub_211963BB8(v43);
    swift_release();
    v44 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    v16 = MEMORY[0x212BE496C](v44);
    if (v16)
    {
      v45 = *((_QWORD *)v44 + 1);
      v46 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v42, v46, v45);
      v16 = swift_unknownObjectRelease();
    }
  }
  v47 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations);
  if (v47)
  {
    swift_retain();
    v48 = swift_bridgeObjectRetain();
    sub_211963BEC(v48);
    swift_release();
    v49 = &a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
    swift_beginAccess();
    v16 = MEMORY[0x212BE496C](v49);
    if (v16)
    {
      v50 = *((_QWORD *)v49 + 1);
      v51 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 80))(v47, v51, v50);
      v16 = swift_unknownObjectRelease();
    }
  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following))
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    v16 = swift_release();
    v52 = v95;
  }
  else
  {
    v52 = 0;
  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers))
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    v16 = swift_release();
    v52 |= v95;
  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers))
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    v16 = swift_release();
    v52 |= v95;
  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing))
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    v16 = swift_release();
    v52 |= v95;
  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers))
  {
    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    swift_release();
    v52 |= v95;
  }
  v53 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe;
  v54 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe];
  v55 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe);
  if (!v55)
  {
    swift_bridgeObjectRetain();
    v55 = v54;
  }
  *(_QWORD *)&a2[v53] = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends;
  v57 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends];
  v58 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends);
  if (!v58)
  {
    swift_bridgeObjectRetain();
    v58 = v57;
  }
  *(_QWORD *)&a2[v56] = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe;
  v60 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe];
  v61 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe);
  if (!v61)
  {
    swift_bridgeObjectRetain();
    v61 = v60;
  }
  *(_QWORD *)&a2[v59] = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends;
  v63 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends];
  v64 = *(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends);
  if (!v64)
  {
    swift_bridgeObjectRetain();
    v64 = v63;
  }
  *(_QWORD *)&a2[v62] = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211938340();
  v65 = swift_allocObject();
  *(_BYTE *)(v65 + 16) = 0;
  swift_retain();
  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  swift_release();
  v66 = v95;
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations))
  {
    swift_bridgeObjectRetain();
    v67 = a2;
    v68 = swift_bridgeObjectRetain();
    v69 = sub_211941B58(v68, v66, (uint64_t)v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v70 = objc_allocWithZone(MEMORY[0x24BE2FE68]);
    v71 = (void *)sub_211A478EC();
    v72 = objc_msgSend(v70, sel_initWithDescription_andTimeout_, v71, 60.0);

    v73 = (_QWORD *)swift_allocObject();
    v73[2] = v67;
    v73[3] = v65;
    v73[4] = v72;
    v74 = v67;
    swift_retain();
    v75 = v72;
    sub_21193220C(v69, (uint64_t)sub_211933744, (uint64_t)v73);
    swift_release();
    swift_bridgeObjectRelease();
    objc_msgSend(v75, sel_wait);

  }
  if (*(_QWORD *)(v92 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress))
  {
    v76 = v93;
    v77 = v93;
    v78 = swift_bridgeObjectRetain();
    v79 = sub_211941334(v78, v66, (uint64_t)v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v79)
    {
      MEMORY[0x24BDAC7A8](v80, v81);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_211A47DA8();
      swift_release();
      swift_bridgeObjectRelease_n();
      v82 = &unk_254ACC000;
      v83 = v52;
      if ((v52 & 1) != 0)
      {
        v76 = v93;
        goto LABEL_62;
      }
      v84 = v95;
      v76 = v93;
      goto LABEL_57;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v76 = v93;
  }
  v82 = (_QWORD *)&unk_254ACC000;
  v83 = v52;
  if ((v52 & 1) != 0)
  {
LABEL_62:
    v88 = &v76[v82[54]];
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v88))
    {
      v89 = *((_QWORD *)v88 + 1);
      v90 = swift_getObjectType();
      swift_retain();
      sub_211A47DA8();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v110, 1, v90, v89);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    return;
  }
  v84 = 0;
LABEL_57:
  swift_beginAccess();
  if ((*(_BYTE *)(v65 + 16) & 1) != 0
    || (v84 & 1) != 0
    || v76[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_isSnapshotMode] == 1)
  {
    goto LABEL_62;
  }
  swift_retain();
  v85 = sub_211A47724();
  v86 = sub_211A47D30();
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc();
    *(_DWORD *)v87 = 67240448;
    v94[0] = v83 & 1;
    sub_211A47E2C();
    *(_WORD *)(v87 + 8) = 1026;
    v94[0] = *(unsigned __int8 *)(v65 + 16);
    sub_211A47E2C();
    swift_release();
    _os_log_impl(&dword_21190D000, v85, v86, "FMFGenericResponseHandler: Skipping update due to no changes detected:\nfriendsUpdated: %{BOOL,public}d locationsUpdated: %{BOOL,public}d", (uint8_t *)v87, 0xEu);
    MEMORY[0x212BE48A0](v87, -1, -1);
    swift_release();

  }
  else
  {

    swift_release_n();
  }
}

void sub_211938340()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  unsigned __int8 v22;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByMe])
  {
    v1 = v0;
    v2 = swift_bridgeObjectRetain();
    sub_2119386E4(v2, v1);
    swift_bridgeObjectRelease();

    MEMORY[0x24BDAC7A8](v3, v4);
    swift_retain();
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRelease();
    v5 = v22;
  }
  else
  {
    v5 = 0;
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnMeByFriends])
  {
    v6 = v0;
    v7 = swift_bridgeObjectRetain();
    sub_2119386E4(v7, v6);
    swift_bridgeObjectRelease();

    MEMORY[0x24BDAC7A8](v8, v9);
    swift_retain();
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRelease();
    v5 |= v22;
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByMe])
  {
    v10 = v0;
    v11 = swift_bridgeObjectRetain();
    sub_2119386E4(v11, v10);
    swift_bridgeObjectRelease();

    MEMORY[0x24BDAC7A8](v12, v13);
    swift_retain();
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRelease();
    v5 |= v22;
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_locationAlertsOnFriendsByFriends])
  {
    v14 = v0;
    v15 = swift_bridgeObjectRetain();
    sub_2119386E4(v15, v14);
    swift_bridgeObjectRelease();

    MEMORY[0x24BDAC7A8](v16, v17);
    swift_retain();
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRelease();
    if (((v22 | v5) & 1) == 0)
      return;
  }
  else if ((v5 & 1) == 0)
  {
    return;
  }
  v18 = &v0[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate];
  swift_beginAccess();
  if (MEMORY[0x212BE496C](v18))
  {
    v19 = *((_QWORD *)v18 + 1);
    ObjectType = swift_getObjectType();
    swift_retain();
    sub_211958C38(&qword_254AC8420);
    sub_211A47DA8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 64))(v21, ObjectType, v19);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

unint64_t sub_2119386E4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FMFLocationAlert();
  v9 = *(_QWORD *)(v29 - 8);
  v11 = MEMORY[0x24BDAC7A8](v29, v10);
  v28 = (uint64_t)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v27 = (uint64_t)v24 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x24BEE4AF8];
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v24[1] = a1;
  v25 = v16;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v26 = a2;
  do
  {
    sub_2119DE2C0(v17, a2, (uint64_t)v8);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v29) == 1)
    {
      sub_211923EE8((uint64_t)v8, (uint64_t *)&unk_254ACC2D0);
    }
    else
    {
      v20 = v27;
      sub_211942810((uint64_t)v8, v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      sub_211942810(v20, v28, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_2119B0A9C(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = sub_2119B0A9C(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      sub_211942810(v28, v19 + v25 + v22 * v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      a2 = v26;
    }
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_211938930(void *a1)
{
  uint64_t v1;

  return sub_211938938(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_211938938(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v6 = sub_211A4779C();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_211A477D8();
  v10 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  v14 = (void *)sub_211A47D9C();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  aBlock[4] = sub_211923858;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD738;
  v16 = _Block_copy(aBlock);
  v17 = a1;
  v18 = a3;
  v19 = a2;
  swift_release();
  sub_211A477B4();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v21);
}

uint64_t sub_211938B54(unint64_t a1)
{
  uint64_t v1;

  return sub_211932434(a1, *(_QWORD *)(v1 + 16), *(void (**)(unint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_211938B60()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 32);
  *(_QWORD *)(v1 + 776) = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v1 + 784) = v2;
  sub_211933924();
}

void sub_211938B90()
{
  uint64_t v0;

  sub_211938B98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_211938B98(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 1096) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_211933924();
}

uint64_t sub_211938BD0()
{
  uint64_t v0;

  return sub_211938BF0(v0);
}

uint64_t sub_211938BF0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  result = MEMORY[0x212BE496C](a1 + 32);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, ObjectType, v3);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_211938C9C()
{
  uint64_t v0;

  return sub_211938CA4(v0);
}

uint64_t sub_211938CA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_211958C38(&qword_254AC83D8);
  sub_211A47DA8();
  if (MEMORY[0x212BE496C](a1 + 32))
  {
    v2 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 72))(v7, ObjectType, v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = MEMORY[0x212BE496C](a1 + 32);
  if (result)
  {
    v5 = *(_QWORD *)(a1 + 40);
    v6 = swift_getObjectType();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, v6, v5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(friends:fromServer:)(Swift::OpaquePointer friends, Swift::Bool fromServer)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  _BOOL4 v70;
  _QWORD *rawValue;
  uint64_t v72;

  v3 = v2;
  v70 = fromServer;
  rawValue = friends._rawValue;
  v4 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v68 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(&qword_254AC8870);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v69 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v63 - v12;
  v14 = type metadata accessor for FMFFriend();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (uint64_t *)((char *)&v63 - v21);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v63 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)&v63 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (uint64_t *)((char *)&v63 - v32);
  v72 = v3;
  v34 = v3 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21192C6B8(v34, (uint64_t)v13, &qword_254AC8870);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_211923EE8((uint64_t)v13, &qword_254AC8870);
    v35 = (uint64_t)rawValue;
    v36 = v72;
    if ((*(_BYTE *)(v72 + 225) & 1) == 0 && *(_BYTE *)(v72 + 224) == 1)
    {
      swift_beginAccess();
      if (MEMORY[0x212BE496C](v36 + 32))
      {
        v37 = *(_QWORD *)(v36 + 40);
        ObjectType = swift_getObjectType();
        v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 128))(v36, v35, ObjectType, v37);
        swift_unknownObjectRelease();
        if ((sub_2119393F8() & 1) != 0)
        {
LABEL_6:
          v40 = sub_211A47B8C();
          v41 = (uint64_t)v68;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v68, 1, 1, v40);
          v42 = (_QWORD *)swift_allocObject();
          v42[2] = 0;
          v42[3] = 0;
          v42[4] = v36;
          v42[5] = v39;
          swift_retain();
          sub_2119E1B00(v41, (uint64_t)&unk_254ACC678, (uint64_t)v42);
          swift_release();
          goto LABEL_25;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v39 = v35;
        if ((sub_2119393F8() & 1) != 0)
          goto LABEL_6;
      }
      if (*(_QWORD *)(v36 + 200))
      {
        swift_retain();
        sub_211A0C808(v39, 0, 0, 0);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    v65 = (uint64_t)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    v66 = v26;
    v67 = v30;
    sub_211942810((uint64_t)v13, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v35 = (uint64_t)rawValue;
    v43 = rawValue[2];
    v44 = (uint64_t)v69;
    v45 = v14;
    v36 = v72;
    v46 = v15;
    if (v43)
    {
      v47 = *(unsigned __int8 *)(v15 + 80);
      v63 = ~v47;
      v64 = v45;
      v48 = (uint64_t)rawValue + ((v47 + 32) & ~v47);
      v49 = *(_QWORD *)(v15 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_211934794(v48, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v50 = *v22 == *v33 && v22[1] == v33[1];
        if (v50 || (sub_211A48258() & 1) != 0)
          break;
        sub_211934758((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v48 += v49;
        if (!--v43)
        {
          v35 = (uint64_t)rawValue;
          swift_bridgeObjectRelease();
          v36 = v72;
          v45 = v64;
          goto LABEL_16;
        }
      }
      v53 = v47;
      v35 = (uint64_t)rawValue;
      swift_bridgeObjectRelease();
      v54 = (uint64_t)v66;
      sub_211942810((uint64_t)v22, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v55 = (uint64_t)v67;
      sub_211942810(v54, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v36 = v72;
      if ((*(_BYTE *)(v72 + 224) & 1) != 0 && (sub_2119393F8() & 1) != 0)
      {
        v56 = sub_211A47B8C();
        v57 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v68, 1, 1, v56);
        v58 = v65;
        sub_211934794(v55, v65, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v59 = (v53 + 40) & v63;
        v60 = (_QWORD *)swift_allocObject();
        v60[2] = 0;
        v60[3] = 0;
        v60[4] = v72;
        v36 = v72;
        sub_211942810(v58, (uint64_t)v60 + v59, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        swift_retain();
        sub_2119E2088(v57, (uint64_t)&unk_254ACC688, (uint64_t)v60);
        swift_release();
        sub_211934758(v55, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211934758((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934758(v55, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211934758((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
    }
    else
    {
LABEL_16:
      v51 = *(_QWORD *)(v36 + 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
      v52 = v51 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend;
      swift_beginAccess();
      swift_retain();
      sub_2119615D4(v44, v52);
      swift_endAccess();
      swift_release();
      sub_211934758((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
  }
LABEL_25:
  swift_beginAccess();
  if (MEMORY[0x212BE496C](v36 + 32))
  {
    v61 = *(_QWORD *)(v36 + 40);
    v62 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, _BOOL4, uint64_t, uint64_t))(v61 + 32))(v36, v35, v70, v62, v61);
    swift_unknownObjectRelease();
  }
  if (*(_BYTE *)(v36 + 225) == 1 && (*(_BYTE *)(v36 + 226) & 1) == 0 && v70)
  {
    *(_BYTE *)(v36 + 226) = 1;
    sub_2119E444C(v35, 0);
  }
}

uint64_t FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119393F8()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    v2 = sub_211A47910();
    v4 = v3;

    if (v2 != 0xD000000000000015 || v4 != 0x8000000211A56590)
    {
      v11 = sub_211A48258();
      swift_bridgeObjectRelease();
      v10 = v11 ^ 1;
      return v10 & 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v5 = sub_211A47748();
    sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
    v6 = sub_211A47724();
    v7 = sub_211A47D24();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13 = v9;
      *(_DWORD *)v8 = 136315138;
      sub_211950A9C(0xD000000000000019, 0x8000000211A56570, &v13);
      sub_211A47E2C();
      _os_log_impl(&dword_21190D000, v6, v7, "FindMyMessagesAppViewController: %s - No Bundle Identifier", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v9, -1, -1);
      MEMORY[0x212BE48A0](v8, -1, -1);
    }

  }
  v10 = 0;
  return v10 & 1;
}

void sub_211939628()
{
  uint64_t v0;

  sub_21192DD68(v0 + 24, *(_QWORD *)(v0 + 16) + 792, (uint64_t *)&unk_254ACC2F0);
  sub_211933924();
}

uint64_t sub_211939660(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v22;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = (uint64_t *)(v2 + qword_254ACA548);
  swift_beginAccess();
  v28 = *v4;
  v5 = v28;
  if (*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_21195BB68(0x6F436E6F69676572, 0xEA00000000006564);
    if ((v7 & 1) != 0)
    {
      sub_211950B6C(*(_QWORD *)(v28 + 56) + 32 * v6, (uint64_t)&v26);
    }
    else
    {
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
    swift_bridgeObjectRetain();
  }
  v8 = *((_QWORD *)&v27 + 1);
  sub_21193999C((uint64_t)&v26);
  if (!v8 || (a2 & 1) != 0)
  {
    v9 = (void *)sub_211A47244();
    v10 = objc_msgSend(v9, sel_objectForKey_, *MEMORY[0x24BDBCAE8]);

    if (v10)
    {
      sub_211A47E8C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_211939954((uint64_t)v23, (uint64_t)&v24);
    if (v25)
    {
      v11 = MEMORY[0x24BEE0D00];
      if ((swift_dynamicCast() & 1) != 0)
      {
        *((_QWORD *)&v27 + 1) = v11;
        v26 = v22;
        sub_21193DB98(&v26, &v24);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v23[0] = v5;
        sub_21193D704(&v24, 0x6F436E6F69676572, 0xEA00000000006564, isUniquelyReferenced_nonNull_native);
        v5 = *(_QWORD *)&v23[0];
        v28 = *(_QWORD *)&v23[0];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      sub_21193999C((uint64_t)&v24);
    }
    sub_211A40BA8(0x6F436E6F69676572, 0xEA00000000006564, &v24);
    sub_21193999C((uint64_t)&v24);
    v5 = v28;
    if (!*(_QWORD *)(v28 + 16))
      goto LABEL_22;
    goto LABEL_19;
  }
LABEL_15:
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_22;
LABEL_19:
  v13 = sub_21195BB68(0x656C61636F6CLL, 0xE600000000000000);
  if ((v14 & 1) != 0)
  {
    sub_211950B6C(*(_QWORD *)(v5 + 56) + 32 * v13, (uint64_t)&v26);
    sub_21193999C((uint64_t)&v26);
    if ((a2 & 1) == 0)
      return swift_bridgeObjectRelease();
    goto LABEL_23;
  }
LABEL_22:
  v26 = 0u;
  v27 = 0u;
  sub_21193999C((uint64_t)&v26);
LABEL_23:
  v15 = MEMORY[0x24BEE0D00];
  sub_211A47238();
  v16 = sub_211A4725C();
  v18 = v17;
  swift_bridgeObjectRelease();
  *((_QWORD *)&v27 + 1) = v15;
  *(_QWORD *)&v26 = v16;
  *((_QWORD *)&v26 + 1) = v18;
  sub_21193DB98(&v26, &v24);
  v19 = v28;
  v20 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v23[0] = v19;
  sub_21193D704(&v24, 0x656C61636F6CLL, 0xE600000000000000, v20);
  v28 = *(_QWORD *)&v23[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211939954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC97C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21193999C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC97C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2119399DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  double v11;
  double v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  double v15;
  double v16;
  uint64_t result;
  double v18;
  _BYTE v19[24];
  _QWORD v20[4];

  v1 = v0;
  v2 = sub_211A47208();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = &v19[-v9];
  sub_211A471FC();
  sub_211A471D8();
  v12 = v11;
  v13 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v13(v10, v2);
  v14 = v1 + qword_254ADC678;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v7, v14, v2);
  sub_211A471D8();
  v16 = v15;
  result = ((uint64_t (*)(_BYTE *, uint64_t))v13)(v7, v2);
  v18 = v12 - v16;
  if ((~COERCE__INT64(v12 - v16) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((unsigned __int128)((uint64_t)v18 * (__int128)1000) >> 64 == (1000 * (uint64_t)v18) >> 63)
  {
    v20[3] = MEMORY[0x24BEE1768];
    v20[0] = 1000 * (uint64_t)v18;
    swift_beginAccess();
    sub_21193C870((uint64_t)v20, 0xD000000000000016, 0x8000000211A54E10);
    return swift_endAccess();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_211939B94()
{
  uint64_t v0;

  return sub_211939BA0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_211939BA0(uint64_t a1, char a2)
{
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v4 = (_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  result = swift_beginAccess();
  if (*v4 == 1 && (a2 & 1) == 0)
  {
    swift_beginAccess();
    result = MEMORY[0x212BE496C](a1 + 32);
    if (result)
    {
      v6 = *(_QWORD *)(a1 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, ObjectType, v6);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(locations:)(Swift::OpaquePointer locations)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  swift_retain();
  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  swift_release();
  swift_beginAccess();
  if (MEMORY[0x212BE496C](v1 + 32))
  {
    v3 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v3 + 48))(v1, locations._rawValue, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  v5 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  swift_retain();
  v6 = objc_msgSend(v5, sel_init);
  v7 = (void *)sub_211A478EC();
  objc_msgSend(v6, sel_setLocalizedDateFormatFromTemplate_, v7);

  v8 = *((_QWORD *)locations._rawValue + 2);
  if (v8)
  {
    v9 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
    v10 = (char *)locations._rawValue
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_21195006C((uint64_t)v10, v12, v6, 0x6465747365676E69, 0xE800000000000000);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();

  }
  swift_bridgeObjectRelease();
}

unint64_t sub_211939E10(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_211958C38(&qword_254ACEE78);
  v2 = sub_211A480CC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21192C6B8(v6, (uint64_t)v13, &qword_254ACEE80);
    v7 = v13[0];
    result = sub_21193A1E8(v13[0]);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = (unint64_t)sub_21193DB98(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_211939F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v23 = a2;
  v25 = a6;
  v10 = sub_211A47E14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v22 - v13;
  if (*a4 != -1)
    swift_once();
  swift_beginAccess();
  v15 = *a5;
  if (*(_QWORD *)(*a5 + 16) && (v16 = sub_21193A1E8(a1), (v17 & 1) != 0))
    sub_211950B6C(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)v24);
  else
    memset(v24, 0, sizeof(v24));
  swift_endAccess();
  sub_211958C38(&qword_254AC97C0);
  v18 = swift_dynamicCast();
  v19 = *(_QWORD *)(a3 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  if ((v18 & 1) != 0)
  {
    v20(v14, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v25, v14, a3);
  }
  else
  {
    v20(v14, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v25, v23, a3);
  }
}

_OWORD *sub_21193A0D0(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21193A1E8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        sub_211931C34((uint64_t)v17);
        return sub_21193DB98(a1, v17);
      }
      return sub_211A44AD8(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_211A45C98();
      goto LABEL_7;
    }
    sub_211A421B0(v13, a3 & 1);
    v19 = sub_21193A1E8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_211A44AD8(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_211A48294();
  __break(1u);
  return result;
}

uint64_t sub_21193A1E8(uint64_t a1)
{
  uint64_t v2;

  sub_211A48318();
  FMFConfigValue.rawValue.getter();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  v2 = sub_211A48348();
  return sub_21193A3C4(a1, v2);
}

uint64_t FMFConfigValue.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21193A29C + 4 * byte_211A508A0[*v0]))(0x74655365636E6566, 0xEE006B6E694C7075);
}

unint64_t sub_21193A29C()
{
  return 0xD000000000000019;
}

uint64_t sub_21193A3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_21193A740(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  _QWORD v22[3];
  _QWORD aBlock[7];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_initializedOnce) == 1)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_useOptimizedFetch) & 1) == 0)
    {
      v22[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
      v15 = swift_allocObject();
      *(double *)(v15 + 16) = a1;
      *(_QWORD *)(v15 + 24) = v1;
      aBlock[4] = sub_211935960;
      aBlock[5] = v15;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21192382C;
      aBlock[3] = &unk_24CCC6A68;
      v16 = _Block_copy(aBlock);
      swift_retain();
      sub_211A477B4();
      v22[2] = MEMORY[0x24BEE4AF8];
      sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_211958C38((uint64_t *)&unk_254ACC1D0);
      sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
      sub_211A47EA4();
      MEMORY[0x212BE3BC8](0, v14, v8, v16);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      return swift_release();
    }
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v17 = sub_211A47748();
    sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
    v18 = sub_211A47724();
    v19 = sub_211A47D30();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_21190D000, v18, v19, "FMFRefreshController: Initialization is not completed yet. Cannot fire refresh.", v20, 2u);
      MEMORY[0x212BE48A0](v20, -1, -1);
    }

    v21 = (void *)MEMORY[0x212BE42D0]();
    sub_211921CDC(v2, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8]);
    objc_autoreleasePoolPop(v21);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_21193AA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v7 = v4;
  v9 = sub_211A4779C();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v7 + 56);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = a4;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_21193AC34(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_21195E2C0(a2);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21193AC74(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_21195E2C0(a2);
    result = MEMORY[0x212BE47C8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21193ACB4(_QWORD *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  void *v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unsigned __int8 v40;
  id v41;
  uint64_t inited;
  void **v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  unsigned __int8 v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  void *v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint8_t *v97;
  _QWORD *v98;
  void *v99;
  void *v100;
  unint64_t v101;
  char v102[73];
  id v103;
  unint64_t v104;
  uint64_t v105;
  _BYTE v106[456];
  uint64_t v107;

  v107 = *MEMORY[0x24BDAC8D0];
  v4 = sub_211A473F4();
  v91 = *(_QWORD *)(v4 - 8);
  v92 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v94 = (unint64_t)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(&qword_254ACD728);
  MEMORY[0x24BDAC7A8](v7, v8);
  v97 = (uint8_t *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACD730);
  v95 = *(_QWORD *)(v10 - 8);
  v96 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v93 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A4713C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v106, a2, sizeof(v106));
  v102[0] = 0;
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_defaultManager);
  v20 = (void *)a1[3];
  v21 = a1[4];
  v98 = a1;
  v100 = v20;
  v101 = v21;
  v22 = (void *)sub_211A478EC();
  LOBYTE(a1) = objc_msgSend(v19, sel_fileExistsAtPath_isDirectory_, v22, v102);

  if ((a1 & 1) == 0)
  {
    v23 = objc_msgSend(v18, sel_defaultManager);
    sub_211A470F4();
    v24 = (void *)sub_211A47100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v103 = 0;
    v25 = objc_msgSend(v23, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v24, 1, 0, &v103);

    v26 = v103;
    if ((v25 & 1) == 0)
    {
      v59 = v26;
      v60 = sub_211A470DC();

      swift_willThrow();
      if (qword_254AC7B80 != -1)
        swift_once();
      v61 = sub_211A47748();
      sub_21194F3E0(v61, (uint64_t)qword_254ADC7E8);
      swift_retain_n();
      v62 = sub_211A47724();
      v63 = sub_211A47D30();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = swift_slowAlloc();
        v99 = (void *)v60;
        v65 = (uint8_t *)v64;
        v66 = swift_slowAlloc();
        *(_DWORD *)v65 = 136315138;
        v105 = v66;
        v97 = v65 + 4;
        v103 = v100;
        v104 = v101;
        swift_bridgeObjectRetain();
        sub_211A479B8();
        v103 = (id)sub_211950A9C((uint64_t)v103, v104, &v105);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21190D000, v62, v63, "FMDiskIO: Could not create directory for content: %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v66, -1, -1);
        MEMORY[0x212BE48A0](v65, -1, -1);
        v67 = v99;
      }
      else
      {
        swift_release_n();
        v67 = (void *)v60;
      }

      return;
    }
  }
  sub_211A47028();
  swift_allocObject();
  v27 = sub_211A4701C();
  sub_21193BCD4();
  v28 = (uint64_t)v99;
  v29 = sub_211A47010();
  if (v28)
  {
    swift_release();
    v31 = (void *)v28;
LABEL_20:
    if (qword_254AC7B80 != -1)
      swift_once();
    v69 = sub_211A47748();
    sub_21194F3E0(v69, (uint64_t)qword_254ADC7E8);
    v70 = v31;
    v71 = v31;
    v72 = sub_211A47724();
    v73 = sub_211A47D24();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      v75 = (void *)swift_slowAlloc();
      v101 = 0;
      v76 = v75;
      v103 = v75;
      *(_DWORD *)v74 = 136315138;
      swift_getErrorValue();
      v77 = sub_211A482DC();
      v105 = sub_211950A9C(v77, v78, (uint64_t *)&v103);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v72, v73, "FMDiskIO: Could not save objects to disk %s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v76, -1, -1);
      MEMORY[0x212BE48A0](v74, -1, -1);

    }
    else
    {

    }
    return;
  }
  v32 = v29;
  v33 = v30;
  v34 = (uint64_t)v97;
  v35 = v98;
  sub_21192C6B8((uint64_t)v98 + *(_QWORD *)(*v98 + 128), (uint64_t)v97, &qword_254ACD728);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v34, 1, v96) != 1)
  {
    sub_21192DD68(v34, v93, &qword_254ACD730);
    sub_211A473C4();
    sub_211910908(&qword_254ACD748, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C40], MEMORY[0x24BE31C48]);
    v79 = sub_211A47010();
    v81 = v80;
    v99 = (void *)v32;
    v82 = (void *)sub_211A47160();
    sub_21193B8F8(v79, v81);
    v83 = v98[5];
    v84 = v98[6];
    v103 = v100;
    v104 = v101;
    swift_bridgeObjectRetain();
    v96 = v84;
    v97 = (uint8_t *)v83;
    sub_211A479B8();
    v85 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
    LODWORD(v79) = objc_msgSend(v82, sel_writeToFile_atomically_, v85, 1);

    (*(void (**)(unint64_t, uint64_t))(v91 + 8))(v94, v92);
    sub_211923EE8(v93, &qword_254ACD730);
    if ((_DWORD)v79)
      goto LABEL_7;
LABEL_27:
    if (qword_254AC7B80 != -1)
      swift_once();
    v86 = sub_211A47748();
    sub_21194F3E0(v86, (uint64_t)qword_254ADC7E8);
    v87 = sub_211A47724();
    v88 = sub_211A47D30();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v89 = 0;
      _os_log_impl(&dword_21190D000, v87, v88, "FMDiskIO: Could not save objects to disk", v89, 2u);
      MEMORY[0x212BE48A0](v89, -1, -1);
    }
    swift_release();
    sub_21193B8F8((uint64_t)v99, v33);

    return;
  }
  sub_211923EE8(v34, &qword_254ACD728);
  v99 = (void *)v32;
  v36 = (void *)sub_211A47160();
  v37 = v35[5];
  v38 = v35[6];
  v103 = v100;
  v104 = v101;
  swift_bridgeObjectRetain();
  v96 = v38;
  v97 = (uint8_t *)v37;
  sub_211A479B8();
  v39 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v36, sel_writeToFile_atomically_, v39, 1);

  if ((v40 & 1) == 0)
    goto LABEL_27;
LABEL_7:
  v94 = v33;
  v95 = v27;
  v41 = objc_msgSend(v18, sel_defaultManager);
  sub_211958C38(&qword_254ACD740);
  inited = swift_initStackObject();
  v43 = (void **)MEMORY[0x24BDD0CF0];
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  v44 = *v43;
  *(_QWORD *)(inited + 32) = *v43;
  v45 = (void *)*MEMORY[0x24BDD0CE0];
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(inited + 64) = v46;
  *(_QWORD *)(inited + 40) = v45;
  v47 = v44;
  v48 = v45;
  sub_21193B9B4(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_211910908(&qword_254AC7EA0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A499E4);
  v49 = (void *)sub_211A47844();
  swift_bridgeObjectRelease();
  v103 = v100;
  v104 = v101;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  v50 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v103 = 0;
  v51 = objc_msgSend(v41, sel_setAttributes_ofItemAtPath_error_, v49, v50, &v103);

  if ((v51 & 1) == 0)
  {
    v68 = v103;
    v31 = (void *)sub_211A470DC();

    swift_willThrow();
    sub_21193B8F8((uint64_t)v99, v94);
    swift_release();
    goto LABEL_20;
  }
  v52 = qword_254AC7B80;
  v53 = v103;
  if (v52 != -1)
    swift_once();
  v54 = sub_211A47748();
  sub_21194F3E0(v54, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v55 = sub_211A47724();
  v56 = sub_211A47D30();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    v105 = v58;
    *(_DWORD *)v57 = 136315138;
    v103 = v100;
    v104 = v101;
    swift_bridgeObjectRetain();
    sub_211A479B8();
    v103 = (id)sub_211950A9C((uint64_t)v103, v104, &v105);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v55, v56, "FMDiskIO: Successfully wrote object to disk @ %s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v58, -1, -1);
    MEMORY[0x212BE48A0](v57, -1, -1);
    swift_release();
    sub_21193B8F8((uint64_t)v99, v94);

  }
  else
  {
    swift_release();
    sub_21193B8F8((uint64_t)v99, v94);

    swift_release_n();
  }
}

uint64_t sub_21193B8F8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_21193B93C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_21193B980()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7E08);
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7E00);
}

unint64_t sub_21193B9B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_211958C38(&qword_254ACEE50);
  v2 = sub_211A480CC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21192C6B8(v6, (uint64_t)&v13, &qword_254ACEE58);
    v7 = v13;
    result = sub_21193BAE0(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_21193DB98(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21193BAE0(uint64_t a1)
{
  uint64_t v2;

  sub_211A47910();
  sub_211A48318();
  sub_211A4797C();
  v2 = sub_211A48348();
  swift_bridgeObjectRelease();
  return sub_21193BB60(a1, v2);
}

unint64_t sub_21193BB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_211A47910();
    v8 = v7;
    if (v6 == sub_211A47910() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_211A48258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_211A47910();
          v15 = v14;
          if (v13 == sub_211A47910() && v15 == v16)
            break;
          v18 = sub_211A48258();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_21193BCD4()
{
  unint64_t result;

  result = qword_254ACD738;
  if (!qword_254ACD738)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D7F0, &type metadata for FriendCacheData);
    atomic_store(result, (unint64_t *)&qword_254ACD738);
  }
  return result;
}

_QWORD *sub_21193BD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  _QWORD *v13;
  id v14;
  unint64_t v16;
  unint64_t v17;

  v1 = sub_211A47310();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + qword_254ACA538) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + qword_254ACA540) = v6;
  *(_QWORD *)(v0 + qword_254ACA548) = v6;
  *(_QWORD *)(v0 + qword_254ACA550) = v6;
  *(_QWORD *)(v0 + qword_254ACA558) = v6;
  sub_211A47190();
  if (qword_254AC7B80 != -1)
    swift_once();
  v7 = sub_211A47748();
  sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
  v8 = sub_211A47724();
  v9 = sub_211A47D30();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_21190D000, v8, v9, "BaseEndpoint: initialized", v10, 2u);
    MEMORY[0x212BE48A0](v10, -1, -1);
  }

  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v12 = objc_msgSend(v11, sel_deviceUDID);

  if (v12)
  {
    sub_211A47910();

    v16 = 0xD000000000000018;
    v17 = 0x8000000211A55030;
    sub_211A479B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_211A479B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_211A479B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0xD000000000000018;
    v17 = 0x8000000211A55030;
    sub_211A479B8();
  }
  swift_bridgeObjectRelease();
  v13 = (_QWORD *)sub_211A47328();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BE30190], v1);
  swift_retain();
  sub_211A4731C();
  sub_21193DD8C();
  v14 = sub_21193CC00();
  (*(void (**)(id))(qword_254ADC680 + *v13 + 256))(v14);
  swift_release();
  return v13;
}

void sub_21193C02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27[3];
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (_QWORD *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v0 + qword_254ADC880);
  if (v6)
  {
    v29 = sub_211958C38(&qword_254ACEE40);
    v28[0] = v6;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21193C870((uint64_t)v28, 0x65746E6F43706174, 0xEA00000000007478);
    swift_endAccess();
  }
  sub_21192C6B8(v1 + qword_254ADC878, (uint64_t)v5, &qword_254AC8870);
  v7 = type metadata accessor for FMFFriend();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_21193CB88((uint64_t)v5);
  }
  else
  {
    v9 = *v5;
    v8 = v5[1];
    swift_bridgeObjectRetain();
    sub_21194ED40((uint64_t)v5);
    v29 = MEMORY[0x24BEE0D00];
    v28[0] = v9;
    v28[1] = v8;
    swift_beginAccess();
    sub_21193C870((uint64_t)v28, 0x64657463656C6573, 0xEE00646E65697246);
    swift_endAccess();
  }
  v10 = *(_QWORD *)(v1 + qword_254ADC888);
  if (v10)
  {
    v29 = sub_211958C38(&qword_254ACEE38);
    v28[0] = v10;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21193C870((uint64_t)v28, 0xD000000000000015, 0x8000000211A53BA0);
    swift_endAccess();
  }
  v11 = *(_QWORD *)(v1 + qword_254ADC890);
  if (v11)
  {
    v29 = sub_211958C38(&qword_254ACEE38);
    v28[0] = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21193C870((uint64_t)v28, 0xD000000000000012, 0x8000000211A53BC0);
    swift_endAccess();
  }
  v12 = v1 + qword_254ADC898;
  v13 = *(_QWORD *)(v1 + qword_254ADC898);
  if (v13)
  {
    v15 = *(_QWORD *)(v12 + 8);
    v14 = *(_QWORD *)(v12 + 16);
    sub_211958C38(&qword_254ACEE28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_211A4A610;
    *(_QWORD *)(inited + 32) = 0x697369567473616CLL;
    *(_QWORD *)(inited + 40) = 0xEF656D6954646574;
    *(_QWORD *)(inited + 48) = v13;
    *(_QWORD *)(inited + 56) = 0x54746E6572727563;
    *(_QWORD *)(inited + 64) = 0xEA00000000006261;
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 80) = 0x6E657053656D6974;
    *(_QWORD *)(inited + 88) = 0xE900000000000074;
    *(_QWORD *)(inited + 96) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_21193C944(inited);
    v29 = sub_211958C38(&qword_254ACEE30);
    v28[0] = v17;
    swift_beginAccess();
    sub_21193C870((uint64_t)v28, 1935827316, 0xE400000000000000);
    swift_endAccess();
  }
  if (*(_BYTE *)(v1 + qword_254ADC8A0) == 1)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v18 = sub_211A47748();
    sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v27[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v26[1] = v21 + 4;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v23 = sub_211A47868();
      v25 = v24;
      swift_bridgeObjectRelease();
      v30 = sub_211950A9C(v23, v25, v27);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v19, v20, "FMFInitRefreshController: Client Context for initClient: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v22, -1, -1);
      MEMORY[0x212BE48A0](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_21193C5BC()
{
  return sub_21193C5DC();
}

uint64_t sub_21193C5DC()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v16[3];
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v18 = *MEMORY[0x24BDAC8D0];
  v2 = (void **)(v0 + qword_254ACA548);
  swift_beginAccess();
  v3 = *v2;
  v4 = sub_211958C38(&qword_254AC97B8);
  v17 = v4;
  v16[0] = v3;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v16, 0x6F43746E65696C63, 0xED0000747865746ELL);
  v5 = *(void **)(v1 + qword_254ACA550);
  v17 = v4;
  v16[0] = v5;
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v16, 0x6F43726576726573, 0xED0000747865746ELL);
  v6 = *(void **)(v1 + qword_254ACA558);
  v17 = v4;
  v16[0] = v6;
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v16, 0x746E6F4361746164, 0xEB00000000747865);
  swift_endAccess();
  v7 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_211A47844();
  swift_bridgeObjectRelease();
  LODWORD(v4) = objc_msgSend(v7, sel_isValidJSONObject_, v8);

  if (!(_DWORD)v4)
    return 0;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_211A47844();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  v10 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v9, 0, v16);

  v11 = v16[0];
  if (!v10)
  {
    v13 = v11;
    v14 = (void *)sub_211A470DC();

    swift_willThrow();
    return 0;
  }
  v12 = sub_211A4716C();

  return v12;
}

uint64_t sub_21193C870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21193DB98((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_21193D704(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_211923EE8(a1, &qword_254AC97C0);
    sub_211A40BA8(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_211923EE8((uint64_t)v9, &qword_254AC97C0);
  }
}

unint64_t sub_21193C944(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_211958C38(&qword_254ACEE48);
  v2 = (_QWORD *)sub_211A480CC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21195BB68(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_21193CA5C()
{
  sub_21193CA7C();
  return swift_deallocClassInstance();
}

uint64_t sub_21193CA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21193CB88(v0 + qword_254ADC878);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21193CBC8(*(_QWORD *)(v0 + qword_254ADC898));
  return v0;
}

uint64_t sub_21193CB88(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC8870);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21193CBC8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_21193CC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  id result;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  void *v80;
  void *v81;
  unsigned __int8 v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  _OWORD v91[2];
  __int128 v92;
  uint64_t v93;
  uint64_t v94;

  v0 = sub_211A47274();
  v87 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_211A47208();
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A471FC();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v93 = MEMORY[0x24BEE1328];
  LOBYTE(v92) = 1;
  sub_21193DB98(&v92, v91);
  v9 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v9;
  sub_21193D704(v91, 0x65646F4D68737570, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  v11 = v90;
  swift_bridgeObjectRelease();
  sub_211A47184();
  v93 = MEMORY[0x24BEE13C8];
  *(double *)&v92 = v12 * 1000.0;
  sub_21193DB98(&v92, v91);
  v13 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v11;
  sub_21193D704(v91, 0x54746E6572727563, 0xEB00000000656D69, v13);
  v14 = v90;
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x24BEE0D00];
  v93 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v92 = 3157559;
  *((_QWORD *)&v92 + 1) = 0xE300000000000000;
  sub_21193DB98(&v92, v91);
  v16 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v14;
  sub_21193D704(v91, 0x6973726556707061, 0xEA00000000006E6FLL, v16);
  v17 = v90;
  v94 = v90;
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v8, sel_productType);
  if (v18)
  {
    v19 = v18;
    v20 = sub_211A47910();
    v22 = v21;

    v93 = v15;
    *(_QWORD *)&v92 = v20;
    *((_QWORD *)&v92 + 1) = v22;
    sub_21193DB98(&v92, v91);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v17;
    sub_21193D704(v91, 0x54746375646F7270, 0xEB00000000657079, v23);
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x54746375646F7270, 0xEB00000000657079, &v92);
    sub_21193999C((uint64_t)&v92);
  }
  v24 = objc_msgSend(v8, sel_deviceClass);
  if (v24)
  {
    v25 = v24;
    v26 = sub_211A47910();
    v28 = v27;

    v93 = v15;
    *(_QWORD *)&v92 = v26;
    *((_QWORD *)&v92 + 1) = v28;
    sub_21193DB98(&v92, v91);
    v29 = v94;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v29;
    sub_21193D704(v91, 0x6C43656369766564, 0xEB00000000737361, v30);
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x6C43656369766564, 0xEB00000000737361, &v92);
    sub_21193999C((uint64_t)&v92);
  }
  v31 = objc_msgSend(v8, sel_osVersion);
  if (v31)
  {
    v32 = v31;
    v33 = sub_211A47910();
    v35 = v34;

    v93 = v15;
    *(_QWORD *)&v92 = v33;
    *((_QWORD *)&v92 + 1) = v35;
    sub_21193DB98(&v92, v91);
    v36 = v94;
    v37 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v36;
    sub_21193D704(v91, 0x6F6973726556736FLL, 0xE90000000000006ELL, v37);
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x6F6973726556736FLL, 0xE90000000000006ELL, &v92);
    sub_21193999C((uint64_t)&v92);
  }
  v38 = objc_msgSend(v8, sel_osBuildVersion);
  if (v38)
  {
    v39 = v38;
    v40 = sub_211A47910();
    v42 = v41;

    v93 = v15;
    *(_QWORD *)&v92 = v40;
    *((_QWORD *)&v92 + 1) = v42;
    sub_21193DB98(&v92, v91);
    v43 = v94;
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v43;
    sub_21193D704(v91, 0x646C697542736FLL, 0xE700000000000000, v44);
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x646C697542736FLL, 0xE700000000000000, &v92);
    sub_21193999C((uint64_t)&v92);
  }
  v45 = objc_msgSend(v8, sel_deviceUDID);
  if (v45)
  {
    v46 = v45;
    v47 = sub_211A47910();
    v49 = v48;

    v93 = v15;
    *(_QWORD *)&v92 = v47;
    *((_QWORD *)&v92 + 1) = v49;
    sub_21193DB98(&v92, v91);
    v50 = v94;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v50;
    sub_21193D704(v91, 0x4455656369766564, 0xEA00000000004449, v51);
    v52 = v90;
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x4455656369766564, 0xEA00000000004449, &v92);
    sub_21193999C((uint64_t)&v92);
    v52 = v94;
  }
  v93 = MEMORY[0x24BEE1328];
  LOBYTE(v92) = 1;
  sub_21193DB98(&v92, v91);
  v53 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v52;
  sub_21193D704(v91, 0xD000000000000012, 0x8000000211A54E50, v53);
  v54 = v90;
  swift_bridgeObjectRelease();
  if (qword_254AC7B40 != -1)
    swift_once();
  v93 = v15;
  v92 = xmmword_254ACA528;
  sub_21193DB98(&v92, v91);
  swift_bridgeObjectRetain();
  v55 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v54;
  sub_21193D704(v91, 0x4B53656369766564, 0xE900000000000055, v55);
  v56 = v90;
  v94 = v90;
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v58 = result;
  v59 = objc_msgSend(result, sel_countryCode);

  if (v59)
  {
    v60 = sub_211A47910();
    v62 = v61;

    v93 = v15;
    *(_QWORD *)&v92 = v60;
    *((_QWORD *)&v92 + 1) = v62;
    sub_21193DB98(&v92, v91);
    v63 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v56;
    sub_21193D704(v91, 0x437972746E756F63, 0xEB0000000065646FLL, v63);
    v94 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_211A40BA8(0x437972746E756F63, 0xEB0000000065646FLL, &v92);
    sub_21193999C((uint64_t)&v92);
  }
  v64 = v86;
  sub_211A47268();
  v65 = (void *)sub_211A47244();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v3, v0);
  v66 = objc_msgSend(v65, sel_objectForKey_, *MEMORY[0x24BDBCAE8]);

  if (v66)
  {
    sub_211A47E8C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v91, 0, sizeof(v91));
  }
  sub_211939954((uint64_t)v91, (uint64_t)&v92);
  if (!v93)
  {
    sub_21193999C((uint64_t)&v92);
    goto LABEL_29;
  }
  v67 = MEMORY[0x24BEE0D00];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    sub_211A40BA8(0x6F436E6F69676572, 0xEA00000000006564, &v92);
    sub_21193999C((uint64_t)&v92);
    goto LABEL_30;
  }
  v93 = v67;
  v92 = v90;
  sub_21193DB98(&v92, v91);
  v68 = v94;
  v69 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v68;
  sub_21193D704(v91, 0x6F436E6F69676572, 0xEA00000000006564, v69);
  v94 = v90;
  swift_bridgeObjectRelease();
LABEL_30:
  v70 = (void *)objc_opt_self();
  v71 = (void *)sub_211A478EC();
  v72 = (void *)sub_211A478EC();
  v73 = objc_msgSend(v70, sel_stringForKey_inDomain_, v71, v72);

  if (v73)
  {
    v74 = sub_211A47910();
    v76 = v75;

    v93 = v15;
    *(_QWORD *)&v92 = v74;
    *((_QWORD *)&v92 + 1) = v76;
    sub_21193DB98(&v92, v91);
    v77 = v94;
    v78 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v90 = v77;
    sub_21193D704(v91, 0x6E656B6F54737061, 0xE800000000000000, v78);
    v79 = v90;
    swift_bridgeObjectRelease();
  }
  else
  {
    v79 = v94;
  }
  v80 = (void *)sub_211A478EC();
  v81 = (void *)sub_211A478EC();
  v82 = objc_msgSend(v70, sel_BOOLForKey_inDomain_, v80, v81);

  v93 = MEMORY[0x24BEE1328];
  LOBYTE(v92) = v82;
  sub_21193DB98(&v92, v91);
  v83 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v90 = v79;
  sub_21193D704(v91, 0xD000000000000010, 0x8000000211A54E30, v83);
  v94 = v90;

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v7, v89);
  v84 = v94;
  v85 = (_QWORD *)(v64 + qword_254ACA548);
  swift_beginAccess();
  *v85 = v84;
  return (id)swift_bridgeObjectRelease();
}

_OWORD *sub_21193D704(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21195BB68(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        sub_211931C34((uint64_t)v19);
        return sub_21193DB98(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21193DBA8();
      goto LABEL_7;
    }
    sub_21193D89C(v15, a4 & 1);
    v21 = sub_21195BB68(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21193D834(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_211A48294();
  __break(1u);
  return result;
}

_OWORD *sub_21193D834(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_21193DB98(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_21193D89C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_211958C38(&qword_254AC8128);
  v6 = sub_211A480C0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_21193DB98(v24, v35);
      }
      else
      {
        sub_211950B6C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_211A48318();
      sub_211A4797C();
      result = sub_211A48348();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_21193DB98(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_21193DB98(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_21193DBA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_211958C38(&qword_254AC8128);
  v2 = *v0;
  v3 = sub_211A480B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_211950B6C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21193DB98(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_21193DD8C()
{
  uint64_t v0;
  uint64_t *v1;
  char isUniquelyReferenced_nonNull_native;
  char v3;
  char v4;
  char v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  unsigned int v14;
  id v15;
  void *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = (uint64_t *)(v0 + qword_254ACA540);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v1;
  *v1 = 0x8000000000000000;
  sub_21193E158(3157553, 0xE300000000000000, 0xD000000000000015, 0x8000000211A54F30, isUniquelyReferenced_nonNull_native);
  *v1 = v19;
  swift_bridgeObjectRelease();
  v3 = swift_isUniquelyReferenced_nonNull_native();
  v20 = *v1;
  *v1 = 0x8000000000000000;
  sub_21193E158(49, 0xE100000000000000, 0xD000000000000013, 0x8000000211A54F50, v3);
  *v1 = v20;
  swift_bridgeObjectRelease();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v1;
  *v1 = 0x8000000000000000;
  sub_21193E158(3157554, 0xE300000000000000, 0xD000000000000014, 0x8000000211A54F70, v4);
  *v1 = v21;
  swift_bridgeObjectRelease();
  v5 = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v1;
  *v1 = 0x8000000000000000;
  sub_21193E158(0x72657665726F46, 0xE700000000000000, 0xD000000000000012, 0x8000000211A54F90, v5);
  *v1 = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  if (!v6)
  {
    __break(1u);
    return;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_serverFriendlyDescription);

  if (v8)
  {
    v9 = sub_211A47910();
    v11 = v10;

    swift_beginAccess();
    if (v11)
    {
      v12 = swift_isUniquelyReferenced_nonNull_native();
      v23 = *v1;
      *v1 = 0x8000000000000000;
      sub_21193E158(v9, v11, 0xD000000000000011, 0x8000000211A54FB0, v12);
      *v1 = v23;
      goto LABEL_7;
    }
  }
  else
  {
    swift_beginAccess();
  }
  sub_211A40AC4(0xD000000000000011, 0x8000000211A54FB0);
LABEL_7:
  swift_bridgeObjectRelease();
  swift_endAccess();
  v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v14 = objc_msgSend(v13, sel_isInternalBuild);

  if (v14)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v16 = (void *)sub_211A478EC();
    v17 = objc_msgSend(v15, sel_BOOLForKey_, v16);

    if (v17)
    {
      swift_beginAccess();
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v24 = *v1;
      *v1 = 0x8000000000000000;
      sub_21193E158(1702195828, 0xE400000000000000, 0xD000000000000018, 0x8000000211A54FF0, v18);
      *v1 = v24;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
}

uint64_t sub_21193E158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_21195BB68(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_211A44B84();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_21193E2CC(v17, a5 & 1);
  v23 = sub_21195BB68(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_211A48294();
  __break(1u);
  return result;
}

uint64_t sub_21193E2CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_211958C38(&qword_254ACD708);
  v42 = a2;
  v6 = sub_211A480C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_211A48318();
    sub_211A4797C();
    result = sub_211A48348();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21193E5F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_21193E608(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_21193E608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  _QWORD *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  char v77;
  char v78;
  char v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  char *v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t aBlock[6];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;

  v7 = sub_211A4779C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v123 = (char *)v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_211A477D8();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122, v11);
  v120 = (char *)v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  v14 = sub_21193F3F0(a1, v13);
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    *a3 = 0;
    return result;
  }
  v116 = v8;
  v117 = v7;
  v118 = a3;
  v119 = v3;
  *(_QWORD *)(a2 + 120) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 168) = 0;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x24BEE4AF8];
  v124 = a2;
  v126 = (_QWORD *)a1;
  if (v16)
  {
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_21193F3C4(0, v16, 0);
    v127 = sub_211958C38(&qword_254ACD6F8);
    a2 = a1 + 48;
    v125 = (_QWORD *)v16;
    do
    {
      v18 = *(_QWORD *)(a2 - 8);
      v19 = *(_BYTE *)a2;
      v134 = *(_QWORD *)(a2 - 16);
      v135 = v18;
      v136 = v19;
      v20 = (_QWORD *)sub_211A480CC();
      v17 = v134;
      v21 = v135;
      v22 = v136;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v23 = sub_21195BB68(v17, v21);
      if ((v24 & 1) != 0)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v20[(v23 >> 6) + 8] |= 1 << v23;
      v25 = (uint64_t *)(v20[6] + 16 * v23);
      *v25 = v17;
      v25[1] = v21;
      *(_BYTE *)(v20[7] + v23) = v22;
      v26 = v20[2];
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        goto LABEL_71;
      v20[2] = v28;
      sub_211958C38(&qword_254ACD700);
      swift_arrayDestroy();
      swift_release();
      v17 = aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21193F3C4(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = aBlock[0];
      }
      v30 = *(_QWORD *)(v17 + 16);
      v29 = *(_QWORD *)(v17 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_21193F3C4(v29 > 1, v30 + 1, 1);
        v17 = aBlock[0];
      }
      a2 += 24;
      *(_QWORD *)(v17 + 16) = v30 + 1;
      *(_QWORD *)(v17 + 8 * v30 + 32) = v20;
      --v16;
    }
    while (v16);
    a2 = v124;
    v16 = (int64_t)v125;
  }
  if (qword_254AC7B80 != -1)
    goto LABEL_76;
  while (2)
  {
    v31 = sub_211A47748();
    v32 = sub_21194F3E0(v31, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v115[2] = v32;
    v33 = sub_211A47724();
    v34 = sub_211A47D30();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      aBlock[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v127 = (uint64_t)(v35 + 4);
      swift_bridgeObjectRetain();
      v37 = sub_211958C38(&qword_254ACD720);
      v38 = MEMORY[0x212BE38C8](v17, v37);
      v40 = v39;
      swift_bridgeObjectRelease();
      v137 = sub_211950A9C(v38, v40, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v33, v34, "FMFDataManager: Shallow locate in progress (in) - %s", v35, 0xCu);
      swift_arrayDestroy();
      v41 = v36;
      a2 = v124;
      MEMORY[0x212BE48A0](v41, -1, -1);
      MEMORY[0x212BE48A0](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v16)
    {
      v42 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
      v43 = (_QWORD *)MEMORY[0x24BEE4B00];
      while (1)
      {
        v45 = v16;
        v46 = *((_QWORD *)v42 - 2);
        v17 = *((_QWORD *)v42 - 1);
        v16 = *v42;
        swift_bridgeObjectRetain_n();
        v47 = (uint64_t)v43;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock[0] = v47;
        v50 = sub_21195BB68(v46, v17);
        v51 = *(_QWORD *)(v47 + 16);
        v52 = (v49 & 1) == 0;
        v53 = v51 + v52;
        if (__OFADD__(v51, v52))
          goto LABEL_72;
        a2 = v49;
        if (*(_QWORD *)(v47 + 24) >= v53)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v43 = (_QWORD *)aBlock[0];
            if ((v49 & 1) == 0)
              goto LABEL_28;
          }
          else
          {
            sub_211A45904();
            v43 = (_QWORD *)aBlock[0];
            if ((a2 & 1) == 0)
              goto LABEL_28;
          }
        }
        else
        {
          sub_21193F3A4(v53, isUniquelyReferenced_nonNull_native);
          v54 = sub_21195BB68(v46, v17);
          if ((a2 & 1) != (v55 & 1))
          {
            result = sub_211A48294();
            __break(1u);
            return result;
          }
          v50 = v54;
          v43 = (_QWORD *)aBlock[0];
          if ((a2 & 1) == 0)
          {
LABEL_28:
            v43[(v50 >> 6) + 8] |= 1 << v50;
            v56 = (uint64_t *)(v43[6] + 16 * v50);
            *v56 = v46;
            v56[1] = v17;
            v57 = v43[7] + 24 * v50;
            *(_QWORD *)v57 = v46;
            *(_QWORD *)(v57 + 8) = v17;
            *(_BYTE *)(v57 + 16) = v16;
            v58 = v43[2];
            v27 = __OFADD__(v58, 1);
            v59 = v58 + 1;
            if (v27)
              goto LABEL_75;
            v43[2] = v59;
            swift_bridgeObjectRetain();
            goto LABEL_20;
          }
        }
        v44 = v43[7] + 24 * v50;
        swift_bridgeObjectRelease();
        *(_QWORD *)v44 = v46;
        *(_QWORD *)(v44 + 8) = v17;
        *(_BYTE *)(v44 + 16) = v16;
LABEL_20:
        v42 += 24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = v45 - 1;
        if (v45 == 1)
        {
          swift_bridgeObjectRelease();
          a2 = v124;
          goto LABEL_34;
        }
      }
    }
    v43 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_34:
    v137 = MEMORY[0x24BEE4AF8];
    v60 = *(_QWORD *)(*(_QWORD *)(a2 + 144) + 16);
    if (!v60)
      goto LABEL_55;
    v127 = swift_bridgeObjectRetain();
    v61 = (_BYTE *)(v127 + 48);
    do
    {
      v62 = *((_QWORD *)v61 - 2);
      v63 = *((_QWORD *)v61 - 1);
      v64 = *v61;
      v65 = v43[2];
      swift_bridgeObjectRetain();
      if (v65)
      {
        swift_bridgeObjectRetain();
        v66 = sub_21195BB68(v62, v63);
        if ((v67 & 1) != 0)
        {
          v68 = v43[7] + 24 * v66;
          v69 = *(_QWORD *)v68;
          v70 = *(_QWORD *)(v68 + 8);
          v71 = *(_BYTE *)(v68 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v72 = (_QWORD *)v137;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v72 = sub_21193F3B0(0, v72[2] + 1, 1, v72);
          v74 = v72[2];
          v73 = v72[3];
          if (v74 >= v73 >> 1)
            v72 = sub_21193F3B0((_QWORD *)(v73 > 1), v74 + 1, 1, v72);
          v72[2] = v74 + 1;
          v75 = &v72[3 * v74];
          v75[4] = v69;
          v75[5] = v70;
          *((_BYTE *)v75 + 48) = v71;
          v137 = (uint64_t)v72;
          swift_bridgeObjectRetain();
          v76 = sub_21195BB68(v69, v70);
          v78 = v77;
          swift_bridgeObjectRelease();
          if ((v78 & 1) != 0)
          {
            v79 = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = (uint64_t)v43;
            if ((v79 & 1) == 0)
            {
              sub_211A45904();
              v43 = (_QWORD *)aBlock[0];
            }
            swift_bridgeObjectRelease();
            sub_21193F3A0(v76, v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        swift_bridgeObjectRelease();
      }
      v80 = (_QWORD *)v137;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v80 = sub_21193F3B0(0, v80[2] + 1, 1, v80);
      v82 = v80[2];
      v81 = v80[3];
      if (v82 >= v81 >> 1)
        v80 = sub_21193F3B0((_QWORD *)(v81 > 1), v82 + 1, 1, v80);
      v80[2] = v82 + 1;
      v83 = &v80[3 * v82];
      v83[4] = v62;
      v83[5] = v63;
      *((_BYTE *)v83 + 48) = v64;
      v137 = (uint64_t)v80;
LABEL_37:
      v61 += 24;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    a2 = v124;
LABEL_55:
    v84 = swift_bridgeObjectRetain();
    sub_21193F650(v84);
    v85 = v137;
    *(_QWORD *)(a2 + 144) = v137;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v86 = *(_QWORD *)(v85 + 16);
    if (v86)
    {
      aBlock[0] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_211940B58(0, v86, 0);
      v127 = sub_211958C38(&qword_254ACD708);
      v125 = &v130;
      v115[1] = v85;
      v17 = v85 + 48;
      v126 = v43;
      while (1)
      {
        v87 = *(_QWORD *)(v17 - 8);
        v88 = *(_BYTE *)v17;
        v130 = *(_QWORD *)(v17 - 16);
        v131 = v87;
        LOBYTE(v128) = v88;
        swift_bridgeObjectRetain_n();
        v132 = sub_211A47940();
        v133 = v89;
        v16 = sub_211A480CC();
        a2 = v130;
        v90 = v131;
        v92 = v132;
        v91 = v133;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v93 = sub_21195BB68(a2, v90);
        if ((v94 & 1) != 0)
          break;
        *(_QWORD *)(v16 + 8 * (v93 >> 6) + 64) |= 1 << v93;
        v95 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v93);
        *v95 = a2;
        v95[1] = v90;
        v96 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v93);
        *v96 = v92;
        v96[1] = v91;
        v97 = *(_QWORD *)(v16 + 16);
        v27 = __OFADD__(v97, 1);
        v98 = v97 + 1;
        if (v27)
          goto LABEL_74;
        *(_QWORD *)(v16 + 16) = v98;
        sub_211958C38(&qword_254ACD710);
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_release();
        v99 = aBlock[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_211940B58(0, *(_QWORD *)(v99 + 16) + 1, 1);
          v99 = aBlock[0];
        }
        v101 = *(_QWORD *)(v99 + 16);
        v100 = *(_QWORD *)(v99 + 24);
        if (v101 >= v100 >> 1)
        {
          sub_211940B58(v100 > 1, v101 + 1, 1);
          v99 = aBlock[0];
        }
        v17 += 24;
        *(_QWORD *)(v99 + 16) = v101 + 1;
        *(_QWORD *)(v99 + 8 * v101 + 32) = v16;
        if (!--v86)
        {
          swift_bridgeObjectRelease_n();
          a2 = v124;
          goto LABEL_66;
        }
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      swift_once();
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  v99 = MEMORY[0x24BEE4AF8];
LABEL_66:
  swift_bridgeObjectRetain();
  v102 = sub_211A47724();
  v103 = sub_211A47D30();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = (uint8_t *)swift_slowAlloc();
    v105 = swift_slowAlloc();
    aBlock[0] = v105;
    *(_DWORD *)v104 = 136315138;
    v127 = (uint64_t)(v104 + 4);
    swift_bridgeObjectRetain();
    v106 = sub_211958C38(&qword_254ACD718);
    v107 = MEMORY[0x212BE38C8](v99, v106);
    v109 = v108;
    swift_bridgeObjectRelease();
    v110 = v107;
    a2 = v124;
    v128 = sub_211950A9C(v110, v109, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v102, v103, "FMFDataManager: Shallow locate in progress (out) - %s", v104, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v105, -1, -1);
    MEMORY[0x212BE48A0](v104, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v111 = v117;
  aBlock[4] = (uint64_t)sub_211938C9C;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21192382C;
  aBlock[3] = (uint64_t)&unk_24CCCBFB8;
  v112 = _Block_copy(aBlock);
  swift_retain();
  v113 = v120;
  sub_211A477B4();
  v128 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v114 = v123;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v113, v114, v112);
  _Block_release(v112);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v114, v111);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v113, v122);
  swift_release();
  *v118 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21193F3A4(uint64_t a1, char a2)
{
  return sub_21194082C(a1, a2, &qword_254ACF108);
}

_QWORD *sub_21193F3B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21194193C(a1, a2, a3, a4, &qword_254ACA968);
}

uint64_t sub_21193F3C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_211940B84(a1, a2, a3, (_QWORD *)*v3, &qword_254ACEB38, &qword_254ACD720);
  *v3 = result;
  return result;
}

uint64_t sub_21193F3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned __int8 v6;
  BOOL v7;
  char v8;
  uint64_t result;
  unsigned __int8 *v10;
  _BYTE *i;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  if (v7 || (v8 = sub_211A48258(), result = 0, (v8 & 1) != 0))
  {
    v10 = (unsigned __int8 *)(a2 + 72);
    for (i = (_BYTE *)(a1 + 72); ; i += 24)
    {
      --v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v5)
      {
        if (v5 == 1)
        {
          v12 = 0x4C676E69646E6570;
          v13 = 0xEF676E697461636FLL;
          v14 = v6;
          if (!v6)
            goto LABEL_21;
        }
        else
        {
          v12 = 0x6F4C646573756170;
          v13 = 0xEE00676E69746163;
          v14 = v6;
          if (!v6)
          {
LABEL_21:
            v15 = 0xE400000000000000;
            if (v12 != 1701736302)
              goto LABEL_26;
            goto LABEL_24;
          }
        }
      }
      else
      {
        v13 = 0xE400000000000000;
        v12 = 1701736302;
        v14 = v6;
        if (!v6)
          goto LABEL_21;
      }
      if (v14 == 1)
      {
        v15 = 0xEF676E697461636FLL;
        if (v12 != 0x4C676E69646E6570)
          goto LABEL_26;
      }
      else
      {
        v15 = 0xEE00676E69746163;
        if (v12 != 0x6F4C646573756170)
          goto LABEL_26;
      }
LABEL_24:
      if (v13 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_26:
      v16 = sub_211A48258();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        return 0;
LABEL_27:
      if (!v2)
        return 1;
      v5 = *i;
      v6 = *v10;
      if ((*((_QWORD *)i - 2) != *((_QWORD *)v10 - 2) || *((_QWORD *)i - 1) != *((_QWORD *)v10 - 1))
        && (sub_211A48258() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
    }
  }
  return result;
}

uint64_t sub_21193F650(uint64_t a1)
{
  return sub_211940D10(a1, (uint64_t (*)(void))sub_21193F3B0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_211942264);
}

uint64_t sub_21193F664@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  uint64_t result;
  int64_t v29;
  unsigned __int8 *v30;
  int64_t v31;
  unsigned __int8 *v32;
  uint64_t *v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  char v117;
  char v118;
  char v119;
  _QWORD *v120;
  unint64_t v121;
  unint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t *v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  _BYTE *v153;
  _QWORD v154[2];
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  int *v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171[2];
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;

  v168 = (int *)type metadata accessor for FMFFriend();
  v166 = *((_QWORD *)v168 - 1);
  v8 = MEMORY[0x24BDAC7A8](v168, v7);
  v159 = (uint64_t)v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v158 = (uint64_t)v154 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (_QWORD *)((char *)v154 - v15);
  MEMORY[0x24BDAC7A8](v14, v17);
  v162 = (uint64_t)v154 - v18;
  v19 = sub_211958C38(&qword_254AC8870);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v163 = (uint64_t)v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  isUniquelyReferenced_nonNull_native = (uint64_t)v154 - v24;
  v26 = a2[16];
  swift_bridgeObjectRetain();
  v27 = sub_211942030(a1, v26);
  result = swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
    *a3 = 0;
    return result;
  }
  v155 = a3;
  v156 = v3;
  a2[15] = 0;
  swift_bridgeObjectRelease();
  v165 = a2;
  a2[21] = 0;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a1 + 16);
  v30 = (unsigned __int8 *)MEMORY[0x24BEE4AF8];
  v170 = isUniquelyReferenced_nonNull_native;
  v161 = v29;
  v157 = a1;
  if (v29)
  {
    v171[0] = MEMORY[0x24BEE4AF8];
    sub_211940B58(0, v29, 0);
    v167 = sub_211958C38(&qword_254ACD708);
    v164 = &v177;
    v31 = v29;
    v32 = (unsigned __int8 *)(a1 + 48);
    v33 = (uint64_t *)v31;
    do
    {
      v30 = (unsigned __int8 *)*((_QWORD *)v32 - 1);
      v34 = *v32;
      v177 = *((_QWORD *)v32 - 2);
      v178 = v30;
      v169 = v33;
      if (v34)
      {
        if (v34 == 1)
        {
          v35 = 0xE700000000000000;
          v36 = 0x776F6C6C616873;
        }
        else
        {
          v35 = 0xE400000000000000;
          v36 = 1885693284;
        }
      }
      else
      {
        v35 = 0xE400000000000000;
        v36 = 1701736302;
      }
      v179 = v36;
      v180 = v35;
      v37 = (_QWORD *)sub_211A480CC();
      v38 = v177;
      isUniquelyReferenced_nonNull_native = (uint64_t)v178;
      v39 = v179;
      v40 = v180;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = sub_21195BB68(v38, isUniquelyReferenced_nonNull_native);
      if ((v42 & 1) != 0)
      {
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      v37[(v41 >> 6) + 8] |= 1 << v41;
      v43 = (uint64_t *)(v37[6] + 16 * v41);
      *v43 = v38;
      v43[1] = isUniquelyReferenced_nonNull_native;
      v44 = (uint64_t *)(v37[7] + 16 * v41);
      *v44 = v39;
      v44[1] = v40;
      v45 = v37[2];
      v46 = __OFADD__(v45, 1);
      v47 = v45 + 1;
      if (v46)
        goto LABEL_104;
      v37[2] = v47;
      sub_211958C38(&qword_254ACD710);
      swift_arrayDestroy();
      swift_release();
      v30 = (unsigned __int8 *)v171[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211940B58(0, *((_QWORD *)v30 + 2) + 1, 1);
        v30 = (unsigned __int8 *)v171[0];
      }
      v48 = v169;
      isUniquelyReferenced_nonNull_native = v170;
      v50 = *((_QWORD *)v30 + 2);
      v49 = *((_QWORD *)v30 + 3);
      if (v50 >= v49 >> 1)
      {
        sub_211940B58(v49 > 1, v50 + 1, 1);
        v30 = (unsigned __int8 *)v171[0];
      }
      v32 += 24;
      *((_QWORD *)v30 + 2) = v50 + 1;
      *(_QWORD *)&v30[8 * v50 + 32] = v37;
      v33 = (uint64_t *)((char *)v48 - 1);
    }
    while (v33);
  }
  if (qword_254AC7B80 != -1)
    goto LABEL_109;
  while (2)
  {
    v51 = sub_211A47748();
    v52 = sub_21194F3E0(v51, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v154[1] = v52;
    v53 = sub_211A47724();
    v54 = sub_211A47D30();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v171[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v169 = (uint64_t *)(v55 + 4);
      swift_bridgeObjectRetain();
      v57 = sub_211958C38(&qword_254ACD718);
      v58 = MEMORY[0x212BE38C8](v30, v57);
      v60 = v59;
      swift_bridgeObjectRelease();
      v61 = v58;
      isUniquelyReferenced_nonNull_native = v170;
      v181 = sub_211950A9C(v61, v60, v171);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v53, v54, "FMFDataManager: Locate in progress (in) - %s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v56, -1, -1);
      MEMORY[0x212BE48A0](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v161)
    {
      v160 = v157 + 32;
      swift_bridgeObjectRetain();
      v62 = 0;
      v167 = MEMORY[0x24BEE4B00];
      while (1)
      {
        v169 = v62;
        v65 = v160 + 24 * (_QWORD)v62;
        v66 = *(_QWORD *)v65;
        v67 = *(_QWORD *)(v65 + 8);
        LODWORD(v164) = *(unsigned __int8 *)(v65 + 16);
        swift_bridgeObjectRetain();
        v68 = sub_2119512F4();
        v69 = *(_QWORD *)(v68 + 16);
        if (v69)
        {
          v70 = v68 + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80));
          v71 = *(_QWORD *)(v166 + 72);
          while (1)
          {
            sub_211934794(v70, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v72 = *v16 == v66 && v16[1] == v67;
            if (v72 || (sub_211A48258() & 1) != 0)
              break;
            sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v70 += v71;
            if (!--v69)
            {
              v73 = 1;
              isUniquelyReferenced_nonNull_native = v170;
              goto LABEL_36;
            }
          }
          isUniquelyReferenced_nonNull_native = v170;
          sub_211942810((uint64_t)v16, v170, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v73 = 0;
        }
        else
        {
          v73 = 1;
        }
LABEL_36:
        v74 = v166;
        v75 = v168;
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v166 + 56))(isUniquelyReferenced_nonNull_native, v73, 1, v168);
        swift_bridgeObjectRelease();
        v76 = v163;
        v30 = (unsigned __int8 *)isUniquelyReferenced_nonNull_native;
        sub_21192C6B8(isUniquelyReferenced_nonNull_native, v163, &qword_254AC8870);
        if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v74 + 48))(v76, 1, v75) != 1)
          break;
        sub_211923EE8(isUniquelyReferenced_nonNull_native, &qword_254AC8870);
        swift_bridgeObjectRelease();
        v63 = v76;
        v64 = (uint64_t *)v161;
LABEL_24:
        v62 = (uint64_t *)((char *)v169 + 1);
        sub_211923EE8(v63, &qword_254AC8870);
        if (v62 == v64)
        {
          swift_bridgeObjectRelease();
          v99 = v167;
          goto LABEL_63;
        }
      }
      v77 = v162;
      sub_211942810(v76, v162, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if (*((_BYTE *)v165 + 216) == 1)
      {
        v78 = *(unsigned __int8 *)(v77 + v168[11]);
        v79 = v158;
        if (v78 == 2)
        {
          sub_211934794(v77, v158, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          goto LABEL_43;
        }
        sub_211934794(v77, v158, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((v78 & 1) == 0)
        {
LABEL_43:
          v82 = *(_BYTE *)(v79 + v168[12]);
          sub_211934758(v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if ((v82 & 1) != 0)
            goto LABEL_60;
LABEL_47:
          swift_bridgeObjectRetain();
          v83 = v167;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v171[0] = v83;
          v85 = sub_21195BB68(v66, v67);
          v86 = *(_QWORD *)(v83 + 16);
          v87 = (v84 & 1) == 0;
          v88 = v86 + v87;
          if (__OFADD__(v86, v87))
            goto LABEL_107;
          v89 = v84;
          if (*(_QWORD *)(v83 + 24) >= v88)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_211A44EE4();
          }
          else
          {
            sub_211940B4C(v88, isUniquelyReferenced_nonNull_native);
            v90 = sub_21195BB68(v66, v67);
            if ((v89 & 1) != (v91 & 1))
            {
              result = sub_211A48294();
              __break(1u);
              return result;
            }
            v85 = v90;
          }
          isUniquelyReferenced_nonNull_native = v170;
          v92 = (_QWORD *)v171[0];
          v167 = v171[0];
          if ((v89 & 1) != 0)
          {
            v93 = *(_QWORD *)(v171[0] + 56) + 24 * v85;
            swift_bridgeObjectRelease();
            *(_QWORD *)v93 = v66;
            *(_QWORD *)(v93 + 8) = v67;
            *(_BYTE *)(v93 + 16) = (_BYTE)v164;
          }
          else
          {
            *(_QWORD *)(v171[0] + 8 * (v85 >> 6) + 64) |= 1 << v85;
            v94 = (uint64_t *)(v92[6] + 16 * v85);
            *v94 = v66;
            v94[1] = v67;
            v95 = v92[7] + 24 * v85;
            *(_QWORD *)v95 = v66;
            *(_QWORD *)(v95 + 8) = v67;
            *(_BYTE *)(v95 + 16) = (_BYTE)v164;
            v96 = v92[2];
            v46 = __OFADD__(v96, 1);
            v97 = v96 + 1;
            if (v46)
              goto LABEL_108;
            v92[2] = v97;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
        sub_211934758(v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_60:
        swift_bridgeObjectRelease();
        sub_211934758(v162, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v63 = isUniquelyReferenced_nonNull_native;
        v64 = (uint64_t *)v161;
        goto LABEL_24;
      }
      v80 = *(unsigned __int8 *)(v77 + v168[12]);
      v81 = v159;
      if (v80 == 2)
      {
        sub_211934794(v77, v159, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934794(v77, v159, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((v80 & 1) != 0)
        {
          v98 = *(unsigned __int8 *)(v81 + v168[13]);
          sub_211934758(v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if (v98 == 1)
            goto LABEL_47;
          goto LABEL_60;
        }
      }
      sub_211934758(v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_47;
    }
    v99 = MEMORY[0x24BEE4B00];
LABEL_63:
    v181 = MEMORY[0x24BEE4AF8];
    v100 = *(_QWORD *)(v165[16] + 16);
    if (!v100)
      goto LABEL_84;
    v170 = swift_bridgeObjectRetain();
    v101 = (_BYTE *)(v170 + 48);
    do
    {
      v102 = *((_QWORD *)v101 - 2);
      v103 = *((_QWORD *)v101 - 1);
      v104 = *v101;
      v105 = *(_QWORD *)(v99 + 16);
      swift_bridgeObjectRetain();
      if (v105)
      {
        swift_bridgeObjectRetain();
        v106 = sub_21195BB68(v102, v103);
        if ((v107 & 1) != 0)
        {
          v108 = *(_QWORD *)(v99 + 56) + 24 * v106;
          v109 = *(_QWORD *)v108;
          v110 = *(_QWORD *)(v108 + 8);
          v111 = *(_BYTE *)(v108 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          v112 = (_QWORD *)v181;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_211943DD8(0, v112[2] + 1, 1, v112);
          v114 = v112[2];
          v113 = v112[3];
          if (v114 >= v113 >> 1)
            v112 = sub_211943DD8((_QWORD *)(v113 > 1), v114 + 1, 1, v112);
          v112[2] = v114 + 1;
          v115 = &v112[3 * v114];
          v115[4] = v109;
          v115[5] = v110;
          *((_BYTE *)v115 + 48) = v111;
          v181 = (uint64_t)v112;
          swift_bridgeObjectRetain();
          v116 = sub_21195BB68(v109, v110);
          v118 = v117;
          swift_bridgeObjectRelease();
          if ((v118 & 1) != 0)
          {
            v119 = swift_isUniquelyReferenced_nonNull_native();
            v171[0] = v99;
            if ((v119 & 1) == 0)
            {
              sub_211A44EE4();
              v99 = v171[0];
            }
            swift_bridgeObjectRelease();
            sub_21193F3A0(v116, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
        swift_bridgeObjectRelease();
      }
      v120 = (_QWORD *)v181;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v120 = sub_211943DD8(0, v120[2] + 1, 1, v120);
      v122 = v120[2];
      v121 = v120[3];
      if (v122 >= v121 >> 1)
        v120 = sub_211943DD8((_QWORD *)(v121 > 1), v122 + 1, 1, v120);
      v120[2] = v122 + 1;
      v123 = &v120[3 * v122];
      v123[4] = v102;
      v123[5] = v103;
      *((_BYTE *)v123 + 48) = v104;
      v181 = (uint64_t)v120;
LABEL_66:
      v101 += 24;
      --v100;
    }
    while (v100);
    swift_bridgeObjectRelease();
LABEL_84:
    v124 = swift_bridgeObjectRetain();
    sub_211942250(v124);
    v125 = v181;
    v16 = *(_QWORD **)(v181 + 16);
    v126 = MEMORY[0x24BEE4AF8];
    v167 = v99;
    if (v16)
    {
      v176 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_211940B58(0, (int64_t)v16, 0);
      v127 = sub_211958C38(&qword_254ACD708);
      v169 = &v172;
      v170 = v127;
      v168 = (int *)v125;
      v30 = (unsigned __int8 *)(v125 + 48);
      while (1)
      {
        isUniquelyReferenced_nonNull_native = *((_QWORD *)v30 - 1);
        v128 = *v30;
        v172 = *((_QWORD *)v30 - 2);
        v173 = isUniquelyReferenced_nonNull_native;
        if (v128)
        {
          if (v128 == 1)
          {
            v129 = 0xE700000000000000;
            v130 = 0x776F6C6C616873;
          }
          else
          {
            v129 = 0xE400000000000000;
            v130 = 1885693284;
          }
        }
        else
        {
          v129 = 0xE400000000000000;
          v130 = 1701736302;
        }
        v171[0] = v130;
        v171[1] = v129;
        swift_bridgeObjectRetain_n();
        v174 = sub_211A47940();
        v175 = v131;
        v132 = (_QWORD *)sub_211A480CC();
        v134 = v172;
        v133 = v173;
        v135 = v174;
        v136 = v175;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v137 = sub_21195BB68(v134, v133);
        if ((v138 & 1) != 0)
          break;
        v132[(v137 >> 6) + 8] |= 1 << v137;
        v139 = (uint64_t *)(v132[6] + 16 * v137);
        *v139 = v134;
        v139[1] = v133;
        v140 = (uint64_t *)(v132[7] + 16 * v137);
        *v140 = v135;
        v140[1] = v136;
        v141 = v132[2];
        v46 = __OFADD__(v141, 1);
        v142 = v141 + 1;
        if (v46)
          goto LABEL_106;
        v132[2] = v142;
        sub_211958C38(&qword_254ACD710);
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        swift_release();
        v126 = v176;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_211940B58(0, *(_QWORD *)(v126 + 16) + 1, 1);
          v126 = v176;
        }
        v144 = *(_QWORD *)(v126 + 16);
        v143 = *(_QWORD *)(v126 + 24);
        if (v144 >= v143 >> 1)
        {
          sub_211940B58(v143 > 1, v144 + 1, 1);
          v126 = v176;
        }
        v30 += 24;
        *(_QWORD *)(v126 + 16) = v144 + 1;
        *(_QWORD *)(v126 + 8 * v144 + 32) = v132;
        v16 = (_QWORD *)((char *)v16 - 1);
        if (!v16)
        {
          swift_bridgeObjectRelease();
          goto LABEL_99;
        }
      }
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      swift_once();
      continue;
    }
    break;
  }
LABEL_99:
  swift_bridgeObjectRetain();
  v145 = sub_211A47724();
  v146 = sub_211A47D30();
  if (os_log_type_enabled(v145, v146))
  {
    v147 = (uint8_t *)swift_slowAlloc();
    v148 = swift_slowAlloc();
    v171[0] = v148;
    *(_DWORD *)v147 = 136315138;
    swift_bridgeObjectRetain();
    v149 = sub_211958C38(&qword_254ACD718);
    v150 = MEMORY[0x212BE38C8](v126, v149);
    v152 = v151;
    swift_bridgeObjectRelease();
    v176 = sub_211950A9C(v150, v152, v171);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v145, v146, "FMFDataManager: Locate in progress (out) - %s", v147, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v148, -1, -1);
    MEMORY[0x212BE48A0](v147, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v153 = v155;
  v165[16] = v181;
  swift_bridgeObjectRelease();
  *v153 = 1;
  return swift_bridgeObjectRelease();
}

unint64_t sub_211940638(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_211A47EB0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        v10 = sub_211A48348();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, v3 = v6, !v18))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_21194082C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;

  v4 = v3;
  v6 = *v3;
  sub_211958C38(a3);
  v41 = a2;
  v7 = sub_211A480C0();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v39 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    for (i = v6; ; v6 = i)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v38)
          goto LABEL_33;
        v24 = v39[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_33;
          v24 = v39[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_33:
              swift_release();
              v4 = v3;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v6 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v38)
                  goto LABEL_33;
                v24 = v39[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
      v32 = *v30;
      v31 = v30[1];
      v33 = *(_QWORD *)(v6 + 56) + 24 * v22;
      v34 = *(_QWORD *)v33;
      v35 = *(_QWORD *)(v33 + 8);
      v36 = *(_BYTE *)(v33 + 16);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_211A48318();
      sub_211A4797C();
      result = sub_211A48348();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v32;
      v19[1] = v31;
      v20 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_QWORD *)v20 = v34;
      *(_QWORD *)(v20 + 8) = v35;
      *(_BYTE *)(v20 + 16) = v36;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_211940B4C(uint64_t a1, char a2)
{
  return sub_21194082C(a1, a2, &qword_254ACA760);
}

uint64_t sub_211940B58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_211940B84(a1, a2, a3, (_QWORD *)*v3, &qword_254ACEB30, &qword_254ACD718);
  *v3 = result;
  return result;
}

uint64_t sub_211940B84(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    sub_211958C38(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = j__malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_211958C38(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_211940D10(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t (*v4)(void);
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v6 = *(_QWORD *)(result + 16);
  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = a2;
  v10 = result;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v11 = *(_QWORD *)(v7 + 24) >> 1, v11 < v8 + v6))
  {
    v7 = v4();
    v11 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = v11 - v12;
  result = a3(v42, v7 + 24 * v12 + 32, v11 - v12, v10);
  if (result < v6)
    goto LABEL_12;
  if (result)
  {
    v16 = *(_QWORD *)(v7 + 16);
    v17 = __OFADD__(v16, result);
    v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_44;
    }
    *(_QWORD *)(v7 + 16) = v18;
  }
  if (result != v13)
  {
LABEL_10:
    result = sub_211973358();
    *v3 = v7;
    return result;
  }
LABEL_13:
  v5 = *(_QWORD *)(v7 + 16);
  v41 = v42[0];
  v14 = v43;
  v40 = v42[1];
  v15 = v44;
  if (v45)
  {
    v19 = (v45 - 1) & v45;
    v20 = v44;
    v21 = __clz(__rbit64(v45)) | (v44 << 6);
    v39 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_15;
  }
LABEL_44:
  v36 = v15 + 1;
  if (__OFADD__(v15, 1))
    goto LABEL_63;
  v39 = (unint64_t)(v14 + 64) >> 6;
  if (v36 >= v39)
    goto LABEL_10;
  v37 = *(_QWORD *)(v40 + 8 * v36);
  v20 = v15 + 1;
  if (!v37)
  {
    v20 = v15 + 2;
    if (v15 + 2 >= v39)
      goto LABEL_10;
    v37 = *(_QWORD *)(v40 + 8 * v20);
    if (!v37)
    {
      v20 = v15 + 3;
      if (v15 + 3 >= v39)
        goto LABEL_10;
      v37 = *(_QWORD *)(v40 + 8 * v20);
      if (!v37)
      {
        v20 = v15 + 4;
        if (v15 + 4 >= v39)
          goto LABEL_10;
        v37 = *(_QWORD *)(v40 + 8 * v20);
        if (!v37)
        {
          v20 = v15 + 5;
          if (v15 + 5 >= v39)
            goto LABEL_10;
          v37 = *(_QWORD *)(v40 + 8 * v20);
          if (!v37)
          {
            v38 = v15 + 6;
            do
            {
              if (v39 == v38)
                goto LABEL_10;
              v37 = *(_QWORD *)(v40 + 8 * v38++);
            }
            while (!v37);
            v20 = v38 - 1;
          }
        }
      }
    }
  }
  v19 = (v37 - 1) & v37;
  v21 = __clz(__rbit64(v37)) + (v20 << 6);
LABEL_15:
  v22 = *(_QWORD *)(v41 + 56) + 24 * v21;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v25 = *(_BYTE *)(v22 + 16);
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v26 = *(_QWORD *)(v7 + 24);
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v5 + 1)
      break;
    if (v5 < v27)
      goto LABEL_20;
LABEL_17:
    *(_QWORD *)(v7 + 16) = v5;
  }
  result = ((uint64_t (*)(BOOL))v4)(v26 > 1);
  v7 = result;
  v27 = *(_QWORD *)(result + 24) >> 1;
  if (v5 >= v27)
    goto LABEL_17;
  while (1)
  {
LABEL_20:
    v28 = v7 + 32 + 24 * v5;
    *(_QWORD *)v28 = v23;
    *(_QWORD *)(v28 + 8) = v24;
    *(_BYTE *)(v28 + 16) = v25;
    ++v5;
    if (v19)
    {
      v29 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v30 = v29 | (v20 << 6);
      goto LABEL_38;
    }
    v31 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v31 >= v39)
      goto LABEL_42;
    v32 = *(_QWORD *)(v40 + 8 * v31);
    v33 = v20 + 1;
    if (!v32)
    {
      v33 = v20 + 2;
      if (v20 + 2 >= v39)
        goto LABEL_42;
      v32 = *(_QWORD *)(v40 + 8 * v33);
      if (!v32)
      {
        v33 = v20 + 3;
        if (v20 + 3 >= v39)
          goto LABEL_42;
        v32 = *(_QWORD *)(v40 + 8 * v33);
        if (!v32)
        {
          v33 = v20 + 4;
          if (v20 + 4 >= v39)
            goto LABEL_42;
          v32 = *(_QWORD *)(v40 + 8 * v33);
          if (!v32)
          {
            v33 = v20 + 5;
            if (v20 + 5 >= v39)
              goto LABEL_42;
            v32 = *(_QWORD *)(v40 + 8 * v33);
            if (!v32)
            {
              v34 = v20 + 6;
              while (v39 != v34)
              {
                v32 = *(_QWORD *)(v40 + 8 * v34++);
                if (v32)
                {
                  v33 = v34 - 1;
                  goto LABEL_37;
                }
              }
LABEL_42:
              *(_QWORD *)(v7 + 16) = v5;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_37:
    v19 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
    v20 = v33;
LABEL_38:
    v35 = *(_QWORD *)(v41 + 56) + 24 * v30;
    v23 = *(_QWORD *)v35;
    v24 = *(_QWORD *)(v35 + 8);
    v25 = *(_BYTE *)(v35 + 16);
    if (v5 >= v27)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_17;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_211941128(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 56) + 24 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    LOBYTE(v20) = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_BYTE *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_211941334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a3;
  v5 = type metadata accessor for FMFFriend();
  v41 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (_QWORD *)((char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v38 = (uint64_t)v35 - v12;
  result = MEMORY[0x24BDAC7A8](v11, v13);
  v37 = (uint64_t)v35 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return MEMORY[0x24BEE4AF8];
  v17 = 0;
  v35[1] = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
  v43 = a1 + 32;
  v18 = MEMORY[0x24BEE4AF8];
  v45 = a2;
  v36 = v16;
  do
  {
    v40 = v18;
    if (v17 <= v16)
      v19 = v16;
    else
      v19 = v17;
    v42 = v19;
    while (1)
    {
      if (v17 == v19)
      {
        __break(1u);
        return result;
      }
      v20 = (uint64_t *)(v43 + 24 * v17);
      v22 = *v20;
      v21 = v20[1];
      ++v17;
      v23 = *(_QWORD *)(a2 + 16);
      v44 = *((unsigned __int8 *)v20 + 16);
      if (!v23)
        break;
      v24 = v41;
      v25 = a2 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = *(_QWORD *)(v24 + 72);
      while (1)
      {
        sub_211934794(v25, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v27 = *v9 == v22 && v9[1] == v21;
        if (v27 || (sub_211A48258() & 1) != 0)
          break;
        sub_211934758((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v25 += v26;
        if (!--v23)
        {
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
      }
      a2 = v45;
      swift_bridgeObjectRelease();
      v28 = v38;
      sub_211942810((uint64_t)v9, v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v29 = v37;
      sub_211942810(v28, v37, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      swift_retain();
      v30 = sub_21194162C(v29);
      swift_release();
      v31 = v29;
      v16 = v36;
      sub_211934758(v31, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v30 & 1) == 0)
        goto LABEL_20;
      result = swift_bridgeObjectRelease();
      v19 = v42;
      if (v17 == v16)
        return v40;
    }
    swift_bridgeObjectRetain();
LABEL_20:
    v18 = v40;
    result = swift_isUniquelyReferenced_nonNull_native();
    v46 = v18;
    if ((result & 1) == 0)
    {
      result = sub_211941794(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v46;
    }
    v33 = *(_QWORD *)(v18 + 16);
    v32 = *(_QWORD *)(v18 + 24);
    if (v33 >= v32 >> 1)
    {
      result = sub_211941794(v32 > 1, v33 + 1, 1);
      v18 = v46;
    }
    *(_QWORD *)(v18 + 16) = v33 + 1;
    v34 = v18 + 24 * v33;
    *(_QWORD *)(v34 + 32) = v22;
    *(_QWORD *)(v34 + 40) = v21;
    *(_BYTE *)(v34 + 48) = v44;
    a2 = v45;
  }
  while (v17 != v16);
  return v18;
}

uint64_t sub_21194162C(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char *v12;
  int v13;
  char v14;
  int v15;
  uint64_t v17;

  v3 = (int *)type metadata accessor for FMFFriend();
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v17 - v9;
  if (*(_BYTE *)(v1 + 216) == 1)
  {
    v11 = *(unsigned __int8 *)(a1 + v3[11]);
    v12 = (char *)&v17 - v9;
    if (v11 == 2)
    {
      sub_211934794(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
    else
    {
      sub_211934794(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v11 & 1) != 0)
      {
        sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v14 = 1;
        return v14 & 1;
      }
    }
    v15 = v10[v3[12]];
    sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (v15 == 2)
      v14 = 0;
    else
      v14 = v15 & 1;
  }
  else
  {
    v13 = *(unsigned __int8 *)(a1 + v3[12]);
    if (v13 == 2)
    {
      sub_211934794(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v14 = 0;
    }
    else
    {
      sub_211934794(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v13 & 1) != 0)
        v14 = v7[v3[13]] ^ 1;
      else
        v14 = 0;
    }
    sub_211934758((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  return v14 & 1;
}

uint64_t sub_211941794(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2119417C0(a1, a2, a3, *v3, &qword_254ACA990);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2119417C0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    sub_211958C38(a5);
    v11 = (char *)swift_allocObject();
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 24 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

_QWORD *sub_21194193C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      sub_211958C38(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_211941A68(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_211941A68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_211941B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)();
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD v57[2];
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v63 = a3;
  v71 = a2;
  v5 = type metadata accessor for FMFFriend();
  v6 = *(_QWORD *)(v5 - 8);
  v66 = (int *)v5;
  v67 = v6;
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v60 = (uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v59 = (uint64_t)v57 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (_QWORD *)((char *)v57 - v15);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v57 - v18;
  v20 = type metadata accessor for FMFLocation();
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v65 = (uint64_t)v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (_QWORD *)((char *)v57 - v26);
  MEMORY[0x24BDAC7A8](v25, v28);
  v31 = (char *)v57 - v30;
  result = MEMORY[0x24BEE4AF8];
  v72 = MEMORY[0x24BEE4AF8];
  v69 = *(_QWORD *)(a1 + 16);
  if (v69)
  {
    v33 = 0;
    v61 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
    v34 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v70 = *(_QWORD *)(v29 + 72);
    v57[1] = v3;
    v58 = v34;
    v68 = a1 + v34;
    v64 = MEMORY[0x24BEE4AF8];
    v35 = type metadata accessor for FMFLocation;
    v36 = v71;
    v62 = v19;
    while (1)
    {
      sub_211934794(v68 + v70 * v33, (uint64_t)v31, (uint64_t (*)(_QWORD))v35);
      v37 = v35;
      sub_211934794((uint64_t)v31, (uint64_t)v27, (uint64_t (*)(_QWORD))v35);
      v38 = *(_QWORD *)(v36 + 16);
      if (!v38)
        goto LABEL_4;
      v39 = v67;
      v40 = v36 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
      swift_bridgeObjectRetain();
      v41 = *(_QWORD *)(v39 + 72);
      while (1)
      {
        sub_211934794(v40, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v42 = v27[1];
        if (v42)
        {
          v43 = *v16 == *v27 && v42 == v16[1];
          if (v43 || (sub_211A48258() & 1) != 0)
            break;
        }
        sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v40 += v41;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRelease();
      v44 = (uint64_t)v62;
      sub_211942810((uint64_t)v16, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if (*(_BYTE *)(*(_QWORD *)(v63 + v61) + 216) == 1)
      {
        v45 = *(unsigned __int8 *)(v44 + v66[11]);
        v46 = v59;
        if (v45 == 2)
        {
          sub_211934794(v44, v59, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        }
        else
        {
          sub_211934794(v44, v59, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if ((v45 & 1) != 0)
          {
            sub_211934758(v46, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            sub_211934758(v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_4:
            v35 = v37;
            sub_211934758((uint64_t)v27, (uint64_t (*)(_QWORD))v37);
            goto LABEL_5;
          }
        }
        v51 = *(unsigned __int8 *)(v46 + v66[12]);
        sub_211934758(v46, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if (v51 == 2)
        {
          sub_211934758(v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v35 = v37;
          sub_211934758((uint64_t)v27, (uint64_t (*)(_QWORD))v37);
LABEL_32:
          sub_211942810((uint64_t)v31, v65, (uint64_t (*)(_QWORD))v35);
          v53 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_211942004(0, *(_QWORD *)(v53 + 16) + 1, 1);
            v35 = v37;
          }
          v54 = v72;
          v56 = *(_QWORD *)(v72 + 16);
          v55 = *(_QWORD *)(v72 + 24);
          if (v56 >= v55 >> 1)
          {
            sub_211942004(v55 > 1, v56 + 1, 1);
            v35 = v37;
            v54 = v72;
          }
          *(_QWORD *)(v54 + 16) = v56 + 1;
          v64 = v54;
          sub_211942810(v65, v54 + v58 + v56 * v70, (uint64_t (*)(_QWORD))v35);
          goto LABEL_6;
        }
        v50 = v51 & 1;
        v35 = v37;
      }
      else
      {
        v47 = *(unsigned __int8 *)(v44 + v66[12]);
        if (v47 == 2)
        {
          v48 = v60;
          sub_211934794(v44, v60, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v49 = v48;
          v50 = 0;
        }
        else
        {
          v52 = v60;
          sub_211934794(v44, v60, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if ((v47 & 1) != 0)
            v50 = *(_BYTE *)(v52 + v66[13]) ^ 1;
          else
            v50 = 0;
          v49 = v52;
        }
        v35 = v37;
        sub_211934758(v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      sub_211934758(v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934758((uint64_t)v27, (uint64_t (*)(_QWORD))v35);
      if ((v50 & 1) == 0)
        goto LABEL_32;
LABEL_5:
      sub_211934758((uint64_t)v31, (uint64_t (*)(_QWORD))v35);
LABEL_6:
      ++v33;
      v36 = v71;
      if (v33 == v69)
        return v72;
    }
  }
  return result;
}

uint64_t sub_211942004(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21194B0D8(a1, a2, a3, (_QWORD *)*v3, &qword_254ACA970, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  *v3 = result;
  return result;
}

uint64_t sub_211942030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned __int8 v6;
  BOOL v7;
  char v8;
  uint64_t result;
  unsigned __int8 *v10;
  _BYTE *i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  if (v7 || (v8 = sub_211A48258(), result = 0, (v8 & 1) != 0))
  {
    v10 = (unsigned __int8 *)(a2 + 72);
    for (i = (_BYTE *)(a1 + 72); ; i += 24)
    {
      --v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v5)
      {
        if (v5 == 1)
        {
          v12 = 0xE700000000000000;
          v13 = 0x776F6C6C616873;
          v14 = v6;
          if (!v6)
            goto LABEL_21;
        }
        else
        {
          v12 = 0xE400000000000000;
          v13 = 1885693284;
          v14 = v6;
          if (!v6)
          {
LABEL_21:
            v15 = 0xE400000000000000;
            if (v13 != 1701736302)
              goto LABEL_26;
            goto LABEL_24;
          }
        }
      }
      else
      {
        v12 = 0xE400000000000000;
        v13 = 1701736302;
        v14 = v6;
        if (!v6)
          goto LABEL_21;
      }
      if (v14 == 1)
      {
        v15 = 0xE700000000000000;
        if (v13 != 0x776F6C6C616873)
          goto LABEL_26;
      }
      else
      {
        v15 = 0xE400000000000000;
        if (v13 != 1885693284)
          goto LABEL_26;
      }
LABEL_24:
      if (v12 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
LABEL_26:
      v16 = sub_211A48258();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        return 0;
LABEL_27:
      if (!v2)
        return 1;
      v5 = *i;
      v6 = *v10;
      if ((*((_QWORD *)i - 2) != *((_QWORD *)v10 - 2) || *((_QWORD *)i - 1) != *((_QWORD *)v10 - 1))
        && (sub_211A48258() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
    }
  }
  return result;
}

uint64_t sub_211942250(uint64_t a1)
{
  return sub_211940D10(a1, (uint64_t (*)(void))sub_211943DD8, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_211942264);
}

id sub_211942268(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v72 = a3;
  v73 = a4;
  v71 = a2;
  v5 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_211958C38(&qword_254ACA218);
  v9 = *(_QWORD *)(v83 - 8);
  v11 = MEMORY[0x24BDAC7A8](v83, v10);
  v79 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v80 = (unint64_t)&v67 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v67 - v17;
  v78 = type metadata accessor for FMFLocation();
  v82 = *(_QWORD *)(v78 - 8);
  v20 = MEMORY[0x24BDAC7A8](v78, v19);
  v77 = (uint64_t)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v74 = (uint64_t)&v67 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v29 = (char *)&v67 - v28;
  v30 = *(_QWORD *)(a1 + 16);
  v31 = MEMORY[0x24BEE4AF8];
  if (v30)
  {
    v76 = v8;
    v84 = MEMORY[0x24BEE4AF8];
    sub_211942004(0, v30, 0);
    v32 = *(unsigned __int8 *)(v9 + 80);
    v70 = a1;
    v81 = *(_QWORD *)(v9 + 72);
    v33 = v84;
    v34 = a1 + ((v32 + 32) & ~v32);
    v69 = v30;
    v35 = v30;
    v75 = v34;
    do
    {
      sub_21192C6B8(v34, (uint64_t)v18, &qword_254ACA218);
      v36 = *(int *)(v83 + 48);
      v37 = v80;
      v38 = v80 + v36;
      v39 = (uint64_t)&v18[v36];
      sub_211934794((uint64_t)v18, v80, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192C6B8(v39, v38, (uint64_t *)&unk_254AC8CB0);
      sub_211942810(v37, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211923EE8(v38, (uint64_t *)&unk_254AC8CB0);
      sub_211923EE8((uint64_t)v18, &qword_254ACA218);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211942004(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v33 = v84;
      }
      v41 = *(_QWORD *)(v33 + 16);
      v40 = *(_QWORD *)(v33 + 24);
      v42 = v75;
      if (v41 >= v40 >> 1)
      {
        sub_211942004(v40 > 1, v41 + 1, 1);
        v33 = v84;
      }
      *(_QWORD *)(v33 + 16) = v41 + 1;
      v43 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      v44 = *(_QWORD *)(v82 + 72);
      sub_211942810((uint64_t)v29, v33 + v43 + v44 * v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v34 += v81;
      --v35;
    }
    while (v35);
    v68 = v33;
    swift_bridgeObjectRetain();
    v80 = MEMORY[0x24BEE4AF8];
    v45 = v69;
    v46 = (uint64_t)v79;
    do
    {
      sub_21192C6B8(v42, v46, &qword_254ACA218);
      v47 = *(int *)(v83 + 48);
      v48 = (uint64_t)&v18[v47];
      v49 = v46 + v47;
      sub_211934794(v46, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192C6B8(v49, v48, (uint64_t *)&unk_254AC8CB0);
      v50 = v48;
      v51 = (uint64_t)v76;
      sub_21192DD68(v50, (uint64_t)v76, (uint64_t *)&unk_254AC8CB0);
      sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211923EE8(v46, &qword_254ACA218);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v51, 1, v78) == 1)
      {
        sub_211923EE8(v51, (uint64_t *)&unk_254AC8CB0);
      }
      else
      {
        v52 = v51;
        v53 = v74;
        sub_211942810(v52, v74, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        sub_211942810(v53, v77, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v54 = v80;
        else
          v54 = sub_21194B098(0, *(_QWORD *)(v80 + 16) + 1, 1, v80);
        v56 = *(_QWORD *)(v54 + 16);
        v55 = *(_QWORD *)(v54 + 24);
        if (v56 >= v55 >> 1)
          v54 = sub_21194B098(v55 > 1, v56 + 1, 1, v54);
        *(_QWORD *)(v54 + 16) = v56 + 1;
        v80 = v54;
        sub_211942810(v77, v54 + v43 + v56 * v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      }
      v42 += v81;
      --v45;
    }
    while (v45);
    v26 = swift_bridgeObjectRelease();
    v31 = v80;
    v57 = v68;
  }
  else
  {
    v57 = MEMORY[0x24BEE4AF8];
  }
  v58 = v71;
  v59 = v72;
  v83 = v72 + 16;
  v60 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager;
  v61 = *(_QWORD *)(v71 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_dataManager);
  MEMORY[0x24BDAC7A8](v26, v27);
  *(&v67 - 2) = v31;
  *(&v67 - 1) = v61;
  swift_retain();
  sub_211A47DA8();
  swift_release();
  v62 = swift_bridgeObjectRelease();
  v63 = *(_QWORD *)(v58 + v60);
  MEMORY[0x24BDAC7A8](v62, v64);
  *(&v67 - 2) = v63;
  *(&v67 - 1) = v57;
  swift_retain();
  sub_211A47DA8();
  swift_release();
  swift_bridgeObjectRelease();
  v65 = v84;
  swift_beginAccess();
  *(_BYTE *)(v59 + 16) = v65;
  return objc_msgSend(v73, sel_signal);
}

uint64_t sub_211942810(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_211942854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  int v59;
  double v60;
  id v61;
  id v62;
  char *v63;
  double v64;
  double v65;
  char v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  double v122;
  id v123;
  id v124;
  char *v125;
  double v126;
  double v127;
  char *v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char v146;
  char v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  _QWORD v157[2];
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE v187[360];
  uint64_t v188[48];
  _BYTE v189[360];
  uint64_t v190[45];
  _BYTE v191[360];
  id v192[46];

  v2 = sub_211A4779C();
  v163 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v162 = (char *)v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A477D8();
  v160 = *(_QWORD *)(v5 - 8);
  v161 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v159 = (char *)v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47208();
  v176 = *(_QWORD *)(v8 - 8);
  v177 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v175 = (char *)v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for FMFLocation();
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v165 = (char *)v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)v157 - v17;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v181 = (uint64_t)v157 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v169 = (char *)v157 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v179 = (char *)v157 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v180 = (uint64_t)v157 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v173 = (char *)v157 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v41 = MEMORY[0x24BDAC7A8](v39, (char *)v157 - v40);
  v172 = (uint64_t)v157 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v46 = (char *)v157 - v45;
  MEMORY[0x24BDAC7A8](v44, v47);
  v53 = (char *)v157 - v52;
  v164 = a1;
  v54 = *(_QWORD *)(a1 + 168);
  if (v54)
  {
    v55 = *(_QWORD *)(v54 + 16);
    if (v55)
    {
      v167 = v48;
      v168 = v50;
      v171 = v51;
      v157[1] = v54;
      v158 = v2;
      v183 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      v56 = v54 + v183;
      v186 = *(_QWORD *)(v49 + 72);
      swift_bridgeObjectRetain();
      v184 = v55 - 1;
      v57 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)&v58 = 136315138;
      v170 = v58;
      v166 = MEMORY[0x24BEE4AD8] + 8;
      v178 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v174 = v18;
      v182 = v46;
      while (1)
      {
        v185 = v56;
        sub_211934794(v56, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v59 = v53[33];
        sub_21192DD68((uint64_t)&v53[v11[11]], (uint64_t)v191, &qword_254AC8CD0);
        sub_21192DD68((uint64_t)v191, (uint64_t)v192, &qword_254AC8CD0);
        if (sub_2119724C8((uint64_t)v192) == 1)
          goto LABEL_12;
        v60 = v59 ? 604800.0 : 7200.0;
        v61 = v192[38];
        v62 = objc_msgSend(v61, sel_timestamp);
        v63 = v175;
        sub_211A471E4();

        sub_211A471C0();
        v65 = v64;
        (*(void (**)(char *, uint64_t))(v176 + 8))(v63, v177);

        if (fabs(v65) >= v60)
        {
LABEL_12:
          if (qword_254AC7B80 != -1)
            swift_once();
          v72 = sub_211A47748();
          sub_21194F3E0(v72, (uint64_t)qword_254ADC7E8);
          sub_211934794((uint64_t)v53, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v73 = sub_211A47724();
          v74 = sub_211A47D30();
          if (os_log_type_enabled(v73, v74))
          {
            v75 = v57;
            v76 = swift_slowAlloc();
            v77 = swift_slowAlloc();
            v190[0] = v77;
            *(_DWORD *)v76 = v170;
            v78 = FMFLocation.debugDescription.getter();
            *(_QWORD *)(v76 + 4) = sub_211950A9C(v78, v79, v190);
            swift_bridgeObjectRelease();
            sub_211934758((uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            _os_log_impl(&dword_21190D000, v73, v74, "FMFDataManager: Purging location: %s", (uint8_t *)v76, 0xCu);
            swift_arrayDestroy();
            v80 = v77;
            v18 = v174;
            MEMORY[0x212BE48A0](v80, -1, -1);
            v81 = v76;
            v57 = v75;
            v46 = v182;
            MEMORY[0x212BE48A0](v81, -1, -1);
          }
          else
          {
            sub_211934758((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          }

          v66 = 0;
          if (!v53[33])
          {
LABEL_10:
            v67 = v167;
            sub_211934794((uint64_t)v53, v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v68 = v173;
            v69 = &v173[v11[8]];
            v70 = sub_211A4722C();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
            v71 = *(_QWORD *)(v67 + 8);
            *v68 = *(_QWORD *)v67;
            v68[1] = v71;
            if ((v66 & 1) != 0)
            {
              sub_21192DD68(v67 + v11[11], (uint64_t)v189, &qword_254AC8CD0);
              sub_2119AC6F0((uint64_t)v189);
            }
            else
            {
              sub_211982898((uint64_t)v189);
            }
            sub_21192DD68((uint64_t)v189, (uint64_t)v190, &qword_254AC8CD0);
            v95 = (uint64_t)v173;
            sub_21192DD68((uint64_t)v190, (uint64_t)&v173[v11[11]], &qword_254AC8CD0);
            *(_BYTE *)(v95 + 16) = 1;
            *(_BYTE *)(v95 + 33) = *(_BYTE *)(v67 + 33);
            v96 = *(_BYTE *)(v67 + 32);
            *(_QWORD *)(v95 + 24) = *(_QWORD *)(v67 + 24);
            v97 = v11[9];
            v98 = *(_BYTE *)(v67 + v97);
            *(_BYTE *)(v95 + 32) = v96;
            *(_BYTE *)(v95 + v97) = v98;
            v99 = *(_BYTE *)(v67 + v11[10]);
            swift_bridgeObjectRetain();
            sub_211934758(v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            *(_BYTE *)(v95 + v11[10]) = v99;
            sub_211942810(v95, v172, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v57 = sub_21194B098(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
            v101 = *(_QWORD *)(v57 + 16);
            v100 = *(_QWORD *)(v57 + 24);
            if (v101 >= v100 >> 1)
              v57 = sub_21194B098(v100 > 1, v101 + 1, 1, v57);
            *(_QWORD *)(v57 + 16) = v101 + 1;
            sub_211942810(v172, v57 + v183 + v101 * v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            if (*((_QWORD *)v53 + 1))
            {
              v102 = *(_QWORD *)v53;
              v103 = *((_QWORD *)v53 + 1);
            }
            else
            {
              v102 = 0;
              v103 = 0xE000000000000000;
            }
            swift_bridgeObjectRetain();
            v104 = v57;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v178 = sub_211943DD8(0, v178[2] + 1, 1, v178);
            v106 = v178[2];
            v105 = v178[3];
            if (v106 >= v105 >> 1)
              v178 = sub_211943DD8((_QWORD *)(v105 > 1), v106 + 1, 1, v178);
            v107 = v178;
            v178[2] = v106 + 1;
            v108 = &v107[3 * v106];
            v108[4] = v102;
            v108[5] = v103;
            *((_BYTE *)v108 + 48) = 1;
            sub_211934758((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v57 = v104;
            v46 = v182;
            v92 = v185;
            goto LABEL_39;
          }
        }
        else
        {
          v66 = 1;
          if (!v53[33])
            goto LABEL_10;
        }
        v82 = v171;
        sub_211934794((uint64_t)v53, v171, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v83 = v179;
        v84 = &v179[v11[8]];
        v85 = sub_211A4722C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 1, 1, v85);
        v86 = *(_QWORD *)(v82 + 8);
        *v83 = *(_QWORD *)v82;
        v83[1] = v86;
        if ((v66 & 1) != 0)
        {
          sub_21192DD68(v82 + v11[11], (uint64_t)v189, &qword_254AC8CD0);
          sub_2119AC6F0((uint64_t)v189);
        }
        else
        {
          sub_211982898((uint64_t)v189);
        }
        sub_21192DD68((uint64_t)v189, (uint64_t)v190, &qword_254AC8CD0);
        v87 = (uint64_t)v179;
        sub_21192DD68((uint64_t)v190, (uint64_t)&v179[v11[11]], &qword_254AC8CD0);
        *(_BYTE *)(v87 + 16) = 1;
        *(_BYTE *)(v87 + 33) = *(_BYTE *)(v82 + 33);
        v88 = *(_BYTE *)(v82 + 32);
        *(_QWORD *)(v87 + 24) = *(_QWORD *)(v82 + 24);
        v89 = v11[9];
        v90 = *(_BYTE *)(v82 + v89);
        *(_BYTE *)(v87 + 32) = v88;
        *(_BYTE *)(v87 + v89) = v90;
        v91 = *(_BYTE *)(v82 + v11[10]);
        swift_bridgeObjectRetain();
        sub_211934758(v82, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        *(_BYTE *)(v87 + v11[10]) = v91;
        sub_211942810(v87, v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v57 = sub_21194B098(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
        v92 = v185;
        v94 = *(_QWORD *)(v57 + 16);
        v93 = *(_QWORD *)(v57 + 24);
        if (v94 >= v93 >> 1)
          v57 = sub_21194B098(v93 > 1, v94 + 1, 1, v57);
        *(_QWORD *)(v57 + 16) = v94 + 1;
        sub_211942810(v180, v57 + v183 + v94 * v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        sub_211934758((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_39:
        if (!v184)
        {
          swift_bridgeObjectRelease();
          v114 = v164;
          swift_beginAccess();
          if (*(_QWORD *)(v114 + 176))
            v115 = *(char **)(v114 + 176);
          else
            v115 = (char *)MEMORY[0x24BEE4AF8];
          v116 = *((_QWORD *)v115 + 2);
          if (v116)
          {
            v179 = v115;
            v117 = (uint64_t)&v115[v183];
            swift_bridgeObjectRetain();
            v118 = MEMORY[0x24BEE4AF8];
            v185 = v116 - 1;
            v180 = MEMORY[0x24BEE4AD8] + 8;
            v119 = (uint64_t)v165;
            v120 = (uint64_t)v169;
            v182 = (char *)v57;
            while (1)
            {
              v184 = v117;
              sub_211934794(v117, v120, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v121 = *(unsigned __int8 *)(v120 + 33);
              sub_21192DD68(v120 + v11[11], (uint64_t)v189, &qword_254AC8CD0);
              sub_21192DD68((uint64_t)v189, (uint64_t)v190, &qword_254AC8CD0);
              if (sub_2119724C8((uint64_t)v190) == 1)
                goto LABEL_77;
              v122 = v121 ? 604800.0 : 7200.0;
              v123 = (id)v190[38];
              v124 = objc_msgSend(v123, sel_timestamp);
              v125 = v175;
              sub_211A471E4();

              sub_211A471C0();
              v127 = v126;
              v128 = v125;
              v57 = (unint64_t)v182;
              (*(void (**)(char *, uint64_t))(v176 + 8))(v128, v177);

              if (fabs(v127) >= v122)
              {
LABEL_77:
                if (qword_254AC7B80 != -1)
                  swift_once();
                v130 = sub_211A47748();
                sub_21194F3E0(v130, (uint64_t)qword_254ADC7E8);
                v131 = v120;
                v132 = v168;
                sub_211934794(v131, v168, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                v133 = sub_211A47724();
                v134 = sub_211A47D30();
                if (os_log_type_enabled(v133, v134))
                {
                  v135 = swift_slowAlloc();
                  v136 = swift_slowAlloc();
                  v188[0] = v136;
                  *(_DWORD *)v135 = v170;
                  v137 = FMFLocation.debugDescription.getter();
                  *(_QWORD *)(v135 + 4) = sub_211950A9C(v137, v138, v188);
                  swift_bridgeObjectRelease();
                  sub_211934758(v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  _os_log_impl(&dword_21190D000, v133, v134, "FMFDataManager: Purging location: %s", (uint8_t *)v135, 0xCu);
                  swift_arrayDestroy();
                  v139 = v136;
                  v119 = (uint64_t)v165;
                  MEMORY[0x212BE48A0](v139, -1, -1);
                  v140 = v135;
                  v57 = (unint64_t)v182;
                  MEMORY[0x212BE48A0](v140, -1, -1);
                }
                else
                {
                  sub_211934758(v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                }

                v129 = 0;
                v18 = v174;
                v120 = (uint64_t)v169;
              }
              else
              {
                v129 = 1;
              }
              sub_211934794(v120, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v141 = v119 + v11[8];
              v142 = sub_211A4722C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v141, 1, 1, v142);
              v143 = *((_QWORD *)v18 + 1);
              *(_QWORD *)v119 = *(_QWORD *)v18;
              *(_QWORD *)(v119 + 8) = v143;
              if ((v129 & 1) != 0)
              {
                sub_21192DD68((uint64_t)&v18[v11[11]], (uint64_t)v187, &qword_254AC8CD0);
                sub_2119AC6F0((uint64_t)v187);
              }
              else
              {
                sub_211982898((uint64_t)v187);
              }
              sub_21192DD68((uint64_t)v187, (uint64_t)v188, &qword_254AC8CD0);
              sub_21192DD68((uint64_t)v188, v119 + v11[11], &qword_254AC8CD0);
              *(_BYTE *)(v119 + 16) = 1;
              *(_BYTE *)(v119 + 33) = v18[33];
              v144 = v18[32];
              *(_QWORD *)(v119 + 24) = *((_QWORD *)v18 + 3);
              v145 = v11[9];
              v146 = v18[v145];
              *(_BYTE *)(v119 + 32) = v144;
              *(_BYTE *)(v119 + v145) = v146;
              v147 = v18[v11[10]];
              swift_bridgeObjectRetain();
              sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              *(_BYTE *)(v119 + v11[10]) = v147;
              sub_211942810(v119, v181, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v118 = sub_21194B098(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
              v149 = *(_QWORD *)(v118 + 16);
              v148 = *(_QWORD *)(v118 + 24);
              if (v149 >= v148 >> 1)
                v118 = sub_21194B098(v148 > 1, v149 + 1, 1, v118);
              *(_QWORD *)(v118 + 16) = v149 + 1;
              v150 = v186;
              sub_211942810(v181, v118 + v183 + v149 * v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              sub_211934758(v120, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              if (!v185)
                break;
              --v185;
              v117 = v184 + v150;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v118 = MEMORY[0x24BEE4AF8];
          }
          v151 = v164;
          *(_QWORD *)(v164 + 128) = v178;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          *(_QWORD *)(v151 + 160) = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v151 + 176) = v118;
          swift_bridgeObjectRelease();
          v152 = swift_allocObject();
          *(_QWORD *)(v152 + 16) = v151;
          *(_QWORD *)(v152 + 24) = v57;
          v190[4] = (uint64_t)sub_211963BD4;
          v190[5] = v152;
          v190[0] = MEMORY[0x24BDAC760];
          v190[1] = 1107296256;
          v190[2] = (uint64_t)sub_21192382C;
          v190[3] = (uint64_t)&unk_24CCCC710;
          v153 = _Block_copy(v190);
          swift_retain();
          v154 = v159;
          sub_211A477B4();
          v188[0] = MEMORY[0x24BEE4AF8];
          sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          sub_211958C38((uint64_t *)&unk_254ACC1D0);
          sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
          v155 = v162;
          v156 = v158;
          sub_211A47EA4();
          MEMORY[0x212BE3BC8](0, v154, v155, v153);
          _Block_release(v153);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v155, v156);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v154, v161);
          return swift_release();
        }
        --v184;
        v56 = v92 + v186;
      }
    }
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v109 = sub_211A47748();
  sub_21194F3E0(v109, (uint64_t)qword_254ADC7E8);
  v110 = sub_211A47724();
  v111 = sub_211A47D30();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v112 = 0;
    _os_log_impl(&dword_21190D000, v110, v111, "FMFDataManager: Purge skipped, we don't have any", v112, 2u);
    MEMORY[0x212BE48A0](v112, -1, -1);
  }

  return sub_2119F7184();
}

uint64_t FMFLocation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[47];
  _BYTE v14[360];
  _QWORD v15[45];
  unint64_t v16;
  unint64_t v17;

  v1 = v0;
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v16 = 0xD00000000000001ALL;
  v17 = 0x8000000211A54780;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v2 = type metadata accessor for FMFLocation();
  sub_21192DD68(v0 + *(int *)(v2 + 44), (uint64_t)v14, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v14, (uint64_t)v15, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v15) != 1)
  {
    if (v15[41])
    {
      v3 = sub_211A47934();
      v5 = v4;
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = v3;
      v6._object = v5;
      FMFDefaultLabel.init(rawValue:)(v6);
      if (LOBYTE(v13[0]) != 5)
      {
        FMFDefaultLabel.localizedLabel.getter();
        swift_bridgeObjectRelease();
      }
    }
  }
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v8 = v16;
  v7 = v17;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "locating: ");
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v13[45] = 0x6E6F697461636F6CLL;
  v13[46] = 0xEA0000000000203ALL;
  sub_21192DD68((uint64_t)v14, (uint64_t)v13, &qword_254AC8CD0);
  sub_21198610C((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_21195C46C);
  sub_211958C38(&qword_254AC8CD0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v9 = 0;
  if ((*(_BYTE *)(v1 + 32) & 1) == 0)
    v9 = *(_QWORD *)(v1 + 24);
  v13[0] = v9;
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v13[0] = v8;
  v13[1] = v7;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v13[0];
  v10 = v13[1];
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "livePending: ");
  HIWORD(v13[1]) = -4864;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v13[0] = v11;
  v13[1] = v10;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  return v13[0];
}

_QWORD *sub_211943DD8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21194193C(a1, a2, a3, a4, &qword_254ACA990);
}

uint64_t sub_211943DEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_211943E04(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_211943E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  uint64_t *v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[304];
  _OWORD v154[19];
  _BYTE v155[360];
  unint64_t v156[45];
  unint64_t v157;

  v135 = a3;
  v5 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v138 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v142 = (char *)&v130 - v10;
  v11 = type metadata accessor for FMFLocation();
  v147 = *(_QWORD *)(v11 - 8);
  v148 = v11;
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v152 = (uint64_t)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v143 = (uint64_t)&v130 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v134 = (uint64_t)&v130 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v132 = (uint64_t)&v130 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v131 = (uint64_t *)((char *)&v130 - v26);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v133 = (uint64_t)&v130 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v139 = (uint64_t)&v130 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v137 = (uint64_t)&v130 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v145 = (uint64_t)&v130 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v144 = (uint64_t *)((char *)&v130 - v41);
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v151 = (uint64_t)&v130 - v44;
  MEMORY[0x24BDAC7A8](v43, v45);
  v150 = (uint64_t *)((char *)&v130 - v46);
  v47 = sub_211A47208();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v49);
  v51 = (char *)&v130 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = (uint64_t *)(a2 + 176);
  swift_beginAccess();
  v52 = *(_QWORD *)(a2 + 176);
  if (!v52)
    goto LABEL_9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = sub_21194B7F0(a1, v52);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v53 & 1) != 0)
  {
    *v135 = 0;
    return result;
  }
  v55 = *v140;
  if (*v140)
  {
    v156[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211A471FC();
    sub_211A47184();
    v57 = v56;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
    v58 = *(_QWORD *)(a1 + 16);
    if (v58)
    {
      v59 = a1 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
      v60 = *(_QWORD *)(v147 + 72);
      swift_bridgeObjectRetain();
      v61 = v136;
      do
      {
        sub_21194A568(v59, v55, v156, 5.0, 10.0, 300.0, v57);
        v59 += v60;
        --v58;
      }
      while (v58);
      v136 = v61;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    a1 = v156[0];
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a2 + 120) = 0;
  swift_bridgeObjectRelease();
  v62 = *(_QWORD *)(a1 + 16);
  if (!v62)
  {
    swift_bridgeObjectRelease();
    v149 = MEMORY[0x24BEE4B00];
    goto LABEL_28;
  }
  v63 = *(unsigned __int8 *)(v147 + 80);
  v146 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a1;
  v64 = a1 + ((v63 + 32) & ~v63);
  v65 = *(_QWORD *)(v147 + 72);
  v66 = (_QWORD *)MEMORY[0x24BEE4B00];
  v67 = v150;
  v149 = v65;
  while (1)
  {
    sub_211934794(v64, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v68 = v67[1];
    if (v68)
      break;
LABEL_15:
    sub_211934758((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v64 += v65;
    if (!--v62)
    {
      v149 = (uint64_t)v66;
      swift_bridgeObjectRelease();
LABEL_28:
      v157 = MEMORY[0x24BEE4AF8];
      if (*v140)
        v83 = *v140;
      else
        v83 = MEMORY[0x24BEE4AF8];
      v84 = *(_QWORD *)(v83 + 16);
      v85 = (uint64_t)v142;
      v86 = v144;
      if (!v84)
      {
        swift_bridgeObjectRetain();
LABEL_71:
        swift_bridgeObjectRelease();
        v129 = swift_bridgeObjectRetain();
        sub_21194B804(v129);
        *v140 = v157;
        swift_bridgeObjectRelease();
        *v135 = 1;
        return swift_bridgeObjectRelease();
      }
      v87 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
      v130 = v83;
      v150 = (uint64_t *)v87;
      v88 = v83 + v87;
      v89 = *(_QWORD *)(v147 + 72);
      swift_bridgeObjectRetain();
      v151 = v89;
      while (1)
      {
        sub_211934794(v88, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v92 = v86[1];
        if (v92)
        {
          v93 = v149;
          if (!*(_QWORD *)(v149 + 16))
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v85, 1, 1, v148);
LABEL_43:
            sub_211923EE8(v85, (uint64_t *)&unk_254AC8CB0);
            goto LABEL_44;
          }
          v94 = *v86;
          swift_bridgeObjectRetain();
          v95 = sub_21195BB68(v94, v92);
          if ((v96 & 1) != 0)
          {
            sub_211934794(*(_QWORD *)(v93 + 56) + v95 * v151, v85, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v97 = v147;
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56);
            v99 = v85;
            v100 = 0;
          }
          else
          {
            v97 = v147;
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56);
            v99 = v85;
            v100 = 1;
          }
          v101 = v148;
          v146 = v98;
          v98(v99, v100, 1, v148);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v85, 1, v101) == 1)
            goto LABEL_43;
          v105 = v145;
          sub_211942810(v85, v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v106 = *(_QWORD *)(v105 + 8);
          if (v106)
          {
            v141 = *(_QWORD *)v105;
            v107 = *(unsigned __int8 *)(v105 + 33);
            v108 = v137;
            sub_211934794(v105, v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            if (v107)
            {
              v109 = *(unsigned __int8 *)(v108 + 16);
              swift_bridgeObjectRetain();
              sub_211934758(v108, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v110 = v139;
              sub_211934794(v105, v139, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v111 = v149;
              if (v109 == 1)
              {
                sub_21192DD68(v110 + *(int *)(v148 + 44), (uint64_t)v155, &qword_254AC8CD0);
                sub_21192DD68((uint64_t)v155, (uint64_t)v156, &qword_254AC8CD0);
                if (sub_2119724C8((uint64_t)v156) == 1)
                {
                  sub_211934758(v110, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  v112 = v131;
                  sub_211934794(v105, (uint64_t)v131, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  v113 = v132;
                  sub_211934794((uint64_t)v144, v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  sub_21196F528(v154);
                  sub_21192DD68((uint64_t)v154, (uint64_t)v153, &qword_254ACCB40);
                  v114 = v133;
                  FMFLocation.init(from:updatedLocation:address:)(v112, v113, (uint64_t)v153, v133);
                  sub_211934794(v114, v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  v115 = v157;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v115 = sub_21194B098(0, *(_QWORD *)(v115 + 16) + 1, 1, v115);
                  v116 = v141;
                  v118 = *(_QWORD *)(v115 + 16);
                  v117 = *(_QWORD *)(v115 + 24);
                  v119 = v118 + 1;
                  if (v118 >= v117 >> 1)
                  {
                    v141 = v118 + 1;
                    v128 = sub_21194B098(v117 > 1, v118 + 1, 1, v115);
                    v119 = v141;
                    v115 = v128;
                  }
                  *(_QWORD *)(v115 + 16) = v119;
                  sub_211942810(v134, (uint64_t)v150 + v115 + v118 * v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  v157 = v115;
                  sub_211934758(v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_65:
                  swift_bridgeObjectRetain();
                  v123 = sub_21195BB68(v116, v106);
                  v125 = v124;
                  swift_bridgeObjectRelease();
                  v126 = (uint64_t)v138;
                  if ((v125 & 1) != 0)
                  {
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v156[0] = v111;
                    if (!isUniquelyReferenced_nonNull_native)
                    {
                      sub_211A458DC();
                      v111 = v156[0];
                    }
                    swift_bridgeObjectRelease();
                    sub_211942810(*(_QWORD *)(v111 + 56) + v123 * v151, v126, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                    v149 = v111;
                    sub_21194B6CC(v123, v111);
                    swift_bridgeObjectRelease();
                    v90 = 0;
                  }
                  else
                  {
                    v90 = 1;
                  }
                  v146(v126, v90, 1, v148);
                  swift_bridgeObjectRelease();
                  sub_211923EE8(v126, (uint64_t *)&unk_254AC8CB0);
                  sub_211934758(v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
                  v85 = (uint64_t)v142;
                  v86 = v144;
                  v91 = v151;
                  goto LABEL_35;
                }
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_211934758(v108, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v110 = v139;
              sub_211934794(v105, v139, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v111 = v149;
            }
            sub_211934758(v110, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            sub_211934794(v105, v143, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v120 = v157;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v120 = sub_21194B098(0, *(_QWORD *)(v120 + 16) + 1, 1, v120);
            v122 = *(_QWORD *)(v120 + 16);
            v121 = *(_QWORD *)(v120 + 24);
            if (v122 >= v121 >> 1)
              v120 = sub_21194B098(v121 > 1, v122 + 1, 1, v120);
            *(_QWORD *)(v120 + 16) = v122 + 1;
            sub_211942810(v143, (uint64_t)v150 + v120 + v122 * v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v157 = v120;
            v116 = v141;
            goto LABEL_65;
          }
          sub_211934758(v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v86 = v144;
        }
LABEL_44:
        sub_211934794((uint64_t)v86, v152, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v102 = v157;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v102 = sub_21194B098(0, *(_QWORD *)(v102 + 16) + 1, 1, v102);
        v104 = *(_QWORD *)(v102 + 16);
        v103 = *(_QWORD *)(v102 + 24);
        if (v104 >= v103 >> 1)
          v102 = sub_21194B098(v103 > 1, v104 + 1, 1, v102);
        *(_QWORD *)(v102 + 16) = v104 + 1;
        v91 = v151;
        sub_211942810(v152, (uint64_t)v150 + v102 + v104 * v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v157 = v102;
LABEL_35:
        sub_211934758((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v88 += v91;
        if (!--v84)
          goto LABEL_71;
      }
    }
  }
  v69 = *v67;
  sub_211934794((uint64_t)v67, v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_bridgeObjectRetain();
  v70 = swift_isUniquelyReferenced_nonNull_native();
  v156[0] = (unint64_t)v66;
  v72 = sub_21195BB68(v69, v68);
  v73 = v66[2];
  v74 = (v71 & 1) == 0;
  v75 = v73 + v74;
  if (!__OFADD__(v73, v74))
  {
    v76 = v71;
    if (v66[3] >= v75)
    {
      if ((v70 & 1) == 0)
        sub_211A458DC();
    }
    else
    {
      sub_21195C5AC(v75, v70);
      v77 = sub_21195BB68(v69, v68);
      if ((v76 & 1) != (v78 & 1))
        goto LABEL_74;
      v72 = v77;
    }
    v65 = v149;
    v66 = (_QWORD *)v156[0];
    if ((v76 & 1) != 0)
    {
      sub_21195BCAC(v151, *(_QWORD *)(v156[0] + 56) + v72 * v149, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    }
    else
    {
      *(_QWORD *)(v156[0] + 8 * (v72 >> 6) + 64) |= 1 << v72;
      v79 = (uint64_t *)(v66[6] + 16 * v72);
      *v79 = v69;
      v79[1] = v68;
      sub_211942810(v151, v66[7] + v72 * v65, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v80 = v66[2];
      v81 = __OFADD__(v80, 1);
      v82 = v80 + 1;
      if (v81)
        goto LABEL_73;
      v66[2] = v82;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67 = v150;
    goto LABEL_15;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  result = sub_211A48294();
  __break(1u);
  return result;
}

uint64_t sub_211944980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  int v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[2];

  v1 = *(_QWORD *)(v0 + 56);
  v2 = MEMORY[0x24BEE4AF8];
  v97[0] = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v1 + 16);
  v4 = swift_bridgeObjectRetain();
  if (v3)
  {
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v8 = *(_QWORD *)(v5 + 72);
    v9 = v4 + v7;
    do
    {
      v10 = *(_QWORD *)(v0 + 192);
      sub_211934794(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v11 = *(_QWORD *)(v0 + 192);
      if ((*(_BYTE *)(v10 + *(int *)(v6 + 36)) & 2) != 0)
      {
        sub_211942810(v11, *(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21194B0AC(0, *(_QWORD *)(v2 + 16) + 1, 1);
          v2 = v97[0];
        }
        v13 = *(_QWORD *)(v2 + 16);
        v12 = *(_QWORD *)(v2 + 24);
        v14 = v2;
        if (v13 >= v12 >> 1)
        {
          sub_21194B0AC(v12 > 1, v13 + 1, 1);
          v14 = v97[0];
        }
        v15 = *(_QWORD *)(v0 + 184);
        *(_QWORD *)(v14 + 16) = v13 + 1;
        sub_211942810(v15, v14 + v7 + v13 * v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v2 = v14;
      }
      else
      {
        sub_211934758(v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v9 += v8;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v2 + 16);
  v93 = v2;
  if (!v16)
  {
    v20 = MEMORY[0x24BEE4AF8];
LABEL_35:
    *(_QWORD *)(v0 + 200) = v20;
    if (qword_254AC7B80 != -1)
      swift_once();
    v42 = sub_211A47748();
    sub_21194F3E0(v42, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v43 = sub_211A47724();
    v44 = sub_211A47D30();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = *(_QWORD *)(v0 + 160);
      v46 = *(_QWORD *)(v0 + 136);
      v92 = *(_QWORD *)(v0 + 144);
      v47 = swift_slowAlloc();
      v95 = swift_slowAlloc();
      v97[0] = v95;
      *(_DWORD *)v47 = 134218242;
      *(_QWORD *)(v0 + 40) = *(_QWORD *)(v20 + 16);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v92 + 104))(v45, *MEMORY[0x24BE31D08], v46);
      sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
      v48 = sub_211A4821C();
      v50 = v49;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v45, v46);
      *(_QWORD *)(v0 + 48) = sub_211950A9C(v48, v50, v97);
      sub_211A47E2C();
      v2 = v93;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v43, v44, "FMFSecureLocationCtrl: setup location stream for: %ld friends, mode: %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v95, -1, -1);
      MEMORY[0x212BE48A0](v47, -1, -1);

      v51 = *(_QWORD *)(v93 + 16);
      if (!v51)
      {
LABEL_56:
        v77 = *(_QWORD *)(v0 + 64);
        swift_release();
        v78 = *(_QWORD *)(v77 + 112);
        *(_QWORD *)(v0 + 208) = v78;
        if (v78)
        {
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 104))(*(_QWORD *)(v0 + 152), *MEMORY[0x24BE31D08], *(_QWORD *)(v0 + 136));
          swift_retain();
          v79 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 216) = v79;
          *v79 = v0;
          v79[1] = sub_211911790;
          return sub_211A4755C();
        }
        else
        {
          swift_bridgeObjectRelease();
          v81 = *(_QWORD *)(v0 + 120);
          v82 = *(_QWORD *)(v0 + 128);
          v83 = *(_QWORD *)(v0 + 104);
          v84 = *(_QWORD *)(v0 + 112);
          v85 = *(_QWORD *)(v0 + 72);
          v86 = *(_QWORD *)(v0 + 64);
          v87 = sub_211958C38(&qword_254ACA038);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v82, 1, 1, v87);
          v88 = sub_211A47B8C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v85, 1, 1, v88);
          sub_21192C6B8(v82, v81, &qword_254ACA018);
          v89 = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
          v90 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
          v91 = swift_allocObject();
          *(_QWORD *)(v91 + 16) = v86;
          *(_QWORD *)(v91 + 24) = v89;
          sub_21192DD68(v81, v91 + v90, &qword_254ACA018);
          *(_QWORD *)(v91 + ((v84 + v90 + 7) & 0xFFFFFFFFFFFFFFF8)) = v86;
          swift_retain_n();
          sub_2119E1B00(v85, (uint64_t)&unk_254ACA050, v91);
          swift_release();
          sub_211923EE8(v82, &qword_254ACA018);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          return (*(uint64_t (**)(void))(v0 + 8))();
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      v51 = *(_QWORD *)(v2 + 16);
      if (!v51)
        goto LABEL_56;
    }
    v52 = *(_QWORD *)(v0 + 176);
    v53 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80)));
    v54 = (uint64_t *)(*(_QWORD *)(v0 + 64) + 120);
    v94 = *(_QWORD *)(v52 + 72);
    swift_retain();
    while (1)
    {
      v96 = v51;
      v61 = *v53;
      v60 = v53[1];
      v62 = v53[4];
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v97[0] = *v54;
      v64 = (_QWORD *)v97[0];
      *v54 = 0x8000000000000000;
      v66 = sub_21195BB68(v61, v60);
      v67 = v64[2];
      v68 = (v65 & 1) == 0;
      v69 = v67 + v68;
      if (__OFADD__(v67, v68))
        goto LABEL_62;
      v70 = v65;
      if (v64[3] >= v69)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v65 & 1) == 0)
            goto LABEL_51;
        }
        else
        {
          sub_211A44EF0();
          v64 = (_QWORD *)v97[0];
          if ((v70 & 1) == 0)
            goto LABEL_51;
        }
      }
      else
      {
        sub_211948E78(v69, isUniquelyReferenced_nonNull_native);
        v64 = (_QWORD *)v97[0];
        v71 = sub_21195BB68(v61, v60);
        if ((v70 & 1) != (v72 & 1))
          return sub_211A48294();
        v66 = v71;
        if ((v70 & 1) == 0)
        {
LABEL_51:
          v64[(v66 >> 6) + 8] |= 1 << v66;
          v73 = (uint64_t *)(v64[6] + 16 * v66);
          *v73 = v61;
          v73[1] = v60;
          v74 = v64[7] + 32 * v66;
          *(_QWORD *)v74 = v61;
          *(_QWORD *)(v74 + 8) = v60;
          *(_QWORD *)(v74 + 16) = v62;
          *(_WORD *)(v74 + 24) = 0;
          *(_BYTE *)(v74 + 26) = 0;
          v75 = v64[2];
          v40 = __OFADD__(v75, 1);
          v76 = v75 + 1;
          if (v40)
            goto LABEL_65;
          v64[2] = v76;
          swift_bridgeObjectRetain();
          goto LABEL_43;
        }
      }
      v55 = v64[7] + 32 * v66;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v55 = v61;
      *(_QWORD *)(v55 + 8) = v60;
      *(_QWORD *)(v55 + 16) = v62;
      *(_WORD *)(v55 + 24) = 0;
      *(_BYTE *)(v55 + 26) = 0;
LABEL_43:
      v56 = *(_QWORD *)(v0 + 80);
      *v54 = (uint64_t)v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v57 = *v53;
      v58 = v53[1];
      v59 = sub_211A47208();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v56, 1, 1, v59);
      sub_211945344(v57, v58, v56, 0);
      sub_211923EE8(v56, qword_254AC8A78);
      v53 = (uint64_t *)((char *)v53 + v94);
      v51 = v96 - 1;
      if (v96 == 1)
      {
        swift_release();
        goto LABEL_56;
      }
    }
  }
  v17 = *(_QWORD *)(v0 + 176);
  v18 = v2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v19 = *(_QWORD *)(v17 + 72);
  swift_retain();
  v20 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    sub_2119926A4(v18, v97);
    v21 = v97[0];
    v22 = *(_QWORD *)(v97[0] + 16);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = v23 + v22;
    if (__OFADD__(v23, v22))
      break;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    if (v25 && v24 <= *(_QWORD *)(v20 + 24) >> 1)
    {
      if (*(_QWORD *)(v21 + 16))
        goto LABEL_24;
    }
    else
    {
      if (v23 <= v24)
        v26 = v23 + v22;
      else
        v26 = v23;
      v20 = sub_211947D7C(v25, v26, 1, v20);
      if (*(_QWORD *)(v21 + 16))
      {
LABEL_24:
        v27 = *(_QWORD *)(v20 + 16);
        v28 = (*(_QWORD *)(v20 + 24) >> 1) - v27;
        v29 = sub_211A474D8();
        if (v28 < v22)
          goto LABEL_63;
        v30 = *(_QWORD *)(v29 - 8);
        v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        v32 = *(_QWORD *)(v30 + 72);
        v33 = v20 + v31 + v32 * v27;
        v34 = v21 + v31;
        v35 = v32 * v22;
        v36 = v33 + v35;
        v37 = v34 + v35;
        if (v34 < v36 && v33 < v37)
          return sub_211A480D8();
        swift_arrayInitWithCopy();
        if (v22)
        {
          v39 = *(_QWORD *)(v20 + 16);
          v40 = __OFADD__(v39, v22);
          v41 = v39 + v22;
          if (v40)
            goto LABEL_64;
          *(_QWORD *)(v20 + 16) = v41;
        }
        goto LABEL_14;
      }
    }
    if (v22)
      goto LABEL_61;
LABEL_14:
    swift_bridgeObjectRelease();
    v18 += v19;
    if (!--v16)
    {
      v2 = v93;
      swift_release();
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return sub_211A480D8();
}

char *sub_211945344(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *result;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  double *v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  char *v68;
  uint64_t v69;
  char *v70;
  double v71;
  double v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  double v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  double v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  char *v89;
  char *v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  double *v98;
  uint64_t v99;
  uint64_t v100;

  v5 = v4;
  v97 = a4;
  v96 = (uint64_t (*)(char *, uint64_t, uint64_t))a3;
  v99 = a1;
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v90 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v89 = (char *)&v85 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v95 = (char *)&v85 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v91 = (char *)&v85 - v19;
  v20 = sub_211958C38(&qword_254ACBBD0);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v85 - v26;
  v28 = type metadata accessor for ShallowRelabilityStats(0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v98 = (double *)((char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_211958C38(qword_254AC8A78);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v38 = (char *)&v85 - v37;
  v40 = MEMORY[0x24BDAC7A8](v36, v39);
  v42 = (char *)&v85 - v41;
  MEMORY[0x24BDAC7A8](v40, v43);
  result = (char *)&v85 - v44;
  v100 = a2;
  if (a2)
  {
    v85 = v45;
    v87 = v8;
    v47 = *(void (**)(void))(v8 + 56);
    v93 = (char *)&v85 - v44;
    v88 = v47;
    v47();
    v94 = v5 + 152;
    swift_beginAccess();
    v86 = v5;
    v48 = *(_QWORD *)(v5 + 152);
    if (*(_QWORD *)(v48 + 16))
    {
      v49 = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50 = sub_21195BB68(v99, v49);
      if ((v51 & 1) != 0)
      {
        sub_211934794(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v29 + 72) * v50, (uint64_t)v27, type metadata accessor for ShallowRelabilityStats);
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
        v53 = v27;
        v54 = 0;
      }
      else
      {
        v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
        v53 = v27;
        v54 = 1;
      }
      v92 = v52;
      v52(v53, v54, 1, v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v92(v27, 1, 1, v28);
      swift_bridgeObjectRetain();
    }
    v55 = (uint64_t)v93;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
    {
      sub_211923EE8((uint64_t)v27, &qword_254ACBBD0);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v88)(&v24[*(int *)(v28 + 32)], 1, 1, v7);
      *(_QWORD *)v24 = 0xBFF0000000000000;
      v24[8] = 0;
      __asm { FMOV            V0.2D, #-1.0 }
      *((_OWORD *)v24 + 1) = _Q0;
      v92(v24, 0, 1, v28);
      swift_beginAccess();
      sub_211945A68((uint64_t)v24, v99, v100);
      swift_endAccess();
      return (char *)sub_211923EE8(v55, qword_254AC8A78);
    }
    sub_211923EE8(v55, qword_254AC8A78);
    v61 = v98;
    sub_211942810((uint64_t)v27, (uint64_t)v98, type metadata accessor for ShallowRelabilityStats);
    v62 = *v61;
    sub_21194E8A0((uint64_t)v61 + *(int *)(v28 + 32), v55);
    v63 = v61[2];
    v64 = v61[3];
    sub_21194E8A0((uint64_t)v96, (uint64_t)v42);
    v65 = v87;
    v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
    if (v66(v42, 1, v7) == 1)
    {
      sub_211923EE8((uint64_t)v42, qword_254AC8A78);
      sub_21194E8A0(v55, (uint64_t)v38);
      v67 = v66(v38, 1, v7);
      v68 = v95;
      if (v67 == 1)
      {
        sub_211923EE8((uint64_t)v38, qword_254AC8A78);
        v69 = v86;
LABEL_22:
        if (v62 == -1.0)
        {
          v79 = v69 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
          swift_beginAccess();
          v80 = v79;
          v81 = v85;
          sub_21194E8A0(v80, v85);
          if (v66((char *)v81, 1, v7) == 1)
          {
            sub_211923EE8(v81, qword_254AC8A78);
            v62 = -1.0;
          }
          else
          {
            v82 = v90;
            (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v90, v81, v7);
            sub_211A471FC();
            sub_211A4719C();
            v62 = v83;
            v84 = *(void (**)(char *, uint64_t))(v65 + 8);
            v84(v68, v7);
            v84(v82, v7);
          }
        }
        sub_21194E8A0(v55, (uint64_t)&v24[*(int *)(v28 + 32)]);
        *(double *)v24 = v62;
        v24[8] = v97 & 1;
        *((double *)v24 + 2) = v63;
        *((double *)v24 + 3) = v64;
        v92(v24, 0, 1, v28);
        swift_beginAccess();
        sub_211945A68((uint64_t)v24, v99, v100);
        swift_endAccess();
        sub_211934758((uint64_t)v98, type metadata accessor for ShallowRelabilityStats);
        return (char *)sub_211923EE8(v55, qword_254AC8A78);
      }
      v74 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      v96 = v66;
      v75 = v89;
      v74(v89, v38, v7);
      sub_211A471FC();
      sub_211A4719C();
      v72 = v76;
      v77 = *(void (**)(char *, uint64_t))(v65 + 8);
      v77(v68, v7);
      v78 = v75;
      v66 = v96;
      v77(v78, v7);
    }
    else
    {
      sub_211923EE8(v55, qword_254AC8A78);
      v70 = v91;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v91, v42, v7);
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v55, v70, v7);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v88)(v55, 0, 1, v7);
      v68 = v95;
      sub_211A471FC();
      sub_211A4719C();
      v72 = v71;
      v73 = *(void (**)(char *, uint64_t))(v65 + 8);
      v73(v68, v7);
      v73(v70, v7);
    }
    if (v63 < v72)
      v63 = v72;
    v69 = v86;
    if (v72 >= 120.0 && v64 == -1.0)
    {
      v64 = -1.0;
    }
    else if (v64 < v72)
    {
      v64 = v72;
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_211945A5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211945A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_211A403E8(a1, a2, a3, &qword_254ACBBD0, type metadata accessor for ShallowRelabilityStats, &qword_254ACF140);
}

uint64_t sub_211945A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_211945A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v77;
  _QWORD *v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  int64_t v92;
  unint64_t v93;
  unint64_t v94;
  int64_t v95;
  unint64_t v96;
  int64_t v97;
  uint64_t *v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  uint64_t v108;
  os_log_type_t v109;
  _BOOL4 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  int64_t v121;
  int64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  BOOL v130;
  unint64_t v131;
  int64_t v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  NSObject *v139;
  os_log_type_t v140;
  _BOOL4 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  int64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  int64_t v191;
  uint64_t *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  NSObject *v201;
  uint64_t v202;
  os_log_type_t v203;
  _BOOL4 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  _QWORD *v210;
  _QWORD *v211;
  uint64_t v213;
  int64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  int64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(uint64_t, uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(uint64_t, uint64_t);
  uint64_t v233;
  NSObject *v234;
  os_log_type_t v235;
  _BOOL4 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  unint64_t v247;
  char v248;
  char v249;
  char v250;
  uint64_t v251;
  uint64_t v252;
  int64_t v253;
  int64_t v254;
  int isUniquelyReferenced_nonNull_native;
  int64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  _QWORD *v272;
  char *v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  int64_t v282;
  uint64_t v283;
  void (*v284)(uint64_t, uint64_t, uint64_t);
  unsigned int log;
  os_log_t loga;
  NSObject *logb;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  int64_t v292;
  uint64_t v293;
  char v294;
  uint64_t v295;
  int64_t v296;
  uint64_t v297;
  void (*v298)(uint64_t, uint64_t);
  int64_t v299;
  char v300;
  char v301;
  uint64_t v302;
  char v303;
  unint64_t v304;
  char v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char v311;
  char v312;
  uint64_t v313;
  char v314;
  uint64_t v315;
  int64_t v316;
  uint64_t v317;
  char v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t *v321;
  char v322;
  uint64_t *v323;
  uint64_t *v324;
  int64_t v325;
  _QWORD *v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t *v330;
  objc_class *isa;
  __int128 v332;
  char v333;
  char v334;
  char v335;
  uint64_t v336[3];

  v1 = v0;
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BEE4AF8];
  v330 = (uint64_t *)(v0 + 144);
  if (qword_254AC7B80 != -1)
    goto LABEL_274;
  while (1)
  {
    v2 = *(_QWORD *)(v1 + 320);
    v3 = *(_QWORD *)(v1 + 264);
    v4 = *(_QWORD *)(v1 + 272);
    v5 = *(_QWORD *)(v1 + 184);
    v6 = sub_21194F3E0(*(_QWORD *)(v1 + 216), (uint64_t)qword_254ADC7E8);
    *(_QWORD *)(v1 + 328) = v6;
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v1 + 336) = v7;
    v7(v2, v5, v3);
    v306 = v6;
    v8 = sub_211A47724();
    v9 = sub_211A47D18();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v1 + 320);
    v12 = *(_QWORD *)(v1 + 264);
    v13 = *(_QWORD *)(v1 + 272);
    v329 = v1;
    if (v10)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      isa = (objc_class *)v15;
      *(_DWORD *)v14 = 136315138;
      sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
      v16 = sub_211A4821C();
      *(_QWORD *)(v1 + 168) = sub_211950A9C(v16, v17, (uint64_t *)&isa);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      v298 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v298(v11, v12);
      _os_log_impl(&dword_21190D000, v8, v9, "FMFSecureLocationCtrl: updateLocating called mode: %s, determining whether we should add friends to the stream", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v15, -1, -1);
      MEMORY[0x212BE48A0](v14, -1, -1);
    }
    else
    {
      v298 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v298(v11, v12);
    }

    v18 = *(_QWORD *)(v1 + 312);
    v19 = *(_QWORD *)(v1 + 264);
    v20 = *(_QWORD *)(v1 + 272);
    v7(v18, *(_QWORD *)(v1 + 184), v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v18, v19);
    v22 = *MEMORY[0x24BE31D08];
    *(_DWORD *)(v1 + 400) = *MEMORY[0x24BE31D08];
    if (v21 == v22)
      break;
    v33 = v330;
    if (v21 != *MEMORY[0x24BE31D00])
    {
      v298(*(_QWORD *)(v1 + 312), *(_QWORD *)(v1 + 264));
LABEL_217:
      v91 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_218:
      *(_QWORD *)(v1 + 344) = v91;
      if (v91[2])
      {
        swift_bridgeObjectRetain();
        v211 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 352) = v211;
        *v211 = v1;
        v211[1] = sub_211997C1C;
        return sub_211998E4C((uint64_t)v91, *(_QWORD *)(v1 + 184));
      }
      v213 = *v33;
      v214 = *(_QWORD *)(*v33 + 16);
      if (v214)
      {
        v324 = v33 + 1;
        v319 = v33 + 2;
        isa = (objc_class *)MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_211948C10(0, v214, 0);
        v215 = 0;
        v216 = (uint64_t)isa;
        v217 = *((_QWORD *)isa + 2);
        v218 = 16 * v217;
        do
        {
          v220 = *(_QWORD *)(v213 + v215 + 32);
          v219 = *(_QWORD *)(v213 + v215 + 40);
          isa = (objc_class *)v216;
          v221 = *(_QWORD *)(v216 + 24);
          v222 = v217 + 1;
          swift_bridgeObjectRetain();
          if (v217 >= v221 >> 1)
          {
            sub_211948C10(v221 > 1, v222, 1);
            v216 = (uint64_t)isa;
          }
          *(_QWORD *)(v216 + 16) = v222;
          v223 = v216 + v218;
          *(_QWORD *)(v223 + 32) = v220;
          *(_QWORD *)(v223 + 40) = v219;
          v218 += 16;
          v215 += 32;
          ++v217;
          --v214;
        }
        while (v214);
        v224 = *(unsigned int *)(v329 + 400);
        v225 = *(_QWORD *)(v329 + 288);
        v226 = *(_QWORD *)(v329 + 264);
        v227 = *(_QWORD *)(v329 + 272);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v227 + 104))(v225, v224, v226);
        if (*(_QWORD *)(v216 + 16)
          && MEMORY[0x212BE496C](*(_QWORD *)(v329 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
        {
          sub_21191F7D8(1, *(_QWORD *)(v329 + 288), v216);
          swift_unknownObjectRelease();
        }
        swift_release();
        v228 = *(void (**)(uint64_t, uint64_t, uint64_t))(v329 + 336);
        v229 = *(_QWORD *)(v329 + 280);
        v230 = *(_QWORD *)(v329 + 264);
        v231 = *(_QWORD *)(v329 + 184);
        v232 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v329 + 272) + 8);
        v232(*(_QWORD *)(v329 + 288), v230);
        v233 = *(_QWORD *)(v329 + 144);
        v228(v229, v231, v230);
        swift_bridgeObjectRetain();
        v234 = sub_211A47724();
        v235 = sub_211A47D30();
        v236 = os_log_type_enabled(v234, v235);
        v237 = *(_QWORD *)(v329 + 280);
        v238 = *(_QWORD *)(v329 + 264);
        if (v236)
        {
          v239 = swift_slowAlloc();
          v240 = swift_slowAlloc();
          isa = (objc_class *)v240;
          *(_DWORD *)v239 = 134218242;
          *v319 = *(_QWORD *)(v233 + 16);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v239 + 12) = 2080;
          sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
          v241 = sub_211A4821C();
          *v324 = sub_211950A9C(v241, v242, (uint64_t *)&isa);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          v232(v237, v238);
          _os_log_impl(&dword_21190D000, v234, v235, "FMFSecureLocationCtrl: add handles to location stream: %ld friends, mode: %s", (uint8_t *)v239, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v240, -1, -1);
          MEMORY[0x212BE48A0](v239, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
          v232(v237, v238);
        }

        swift_beginAccess();
        v244 = *v330;
        v245 = *(_QWORD *)(*v330 + 16);
        v243 = v329;
        if (v245)
        {
          swift_bridgeObjectRetain_n();
          v246 = (char *)(v244 + 58);
          v247 = MEMORY[0x24BEE4AF8];
          while (1)
          {
            v248 = *v246;
            v249 = *(v246 - 1);
            v250 = *(v246 - 2);
            isa = *(objc_class **)(v246 - 26);
            v332 = *(_OWORD *)(v246 - 18);
            v333 = v250;
            v334 = v249;
            v335 = v248;
            sub_21199A700((uint64_t)&isa, v336);
            v251 = v336[0];
            v252 = *(_QWORD *)(v336[0] + 16);
            v253 = *(_QWORD *)(v247 + 16);
            v254 = v253 + v252;
            if (__OFADD__(v253, v252))
              break;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v254 > *(_QWORD *)(v247 + 24) >> 1)
            {
              if (v253 <= v254)
                v256 = v253 + v252;
              else
                v256 = v253;
              v247 = sub_211947D7C(isUniquelyReferenced_nonNull_native, v256, 1, v247);
            }
            v243 = v329;
            if (*(_QWORD *)(v251 + 16))
            {
              v257 = *(_QWORD *)(v247 + 16);
              v258 = (*(_QWORD *)(v247 + 24) >> 1) - v257;
              v259 = sub_211A474D8();
              if (v258 < v252)
                goto LABEL_267;
              v260 = *(_QWORD *)(v259 - 8);
              v261 = (*(unsigned __int8 *)(v260 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80);
              v262 = *(_QWORD *)(v260 + 72);
              v263 = v247 + v261 + v262 * v257;
              v264 = v251 + v261;
              v265 = v262 * v252;
              v266 = v263 + v265;
              v267 = v264 + v265;
              if (v264 < v266 && v263 < v267)
                return sub_211A480D8();
              swift_arrayInitWithCopy();
              v243 = v329;
              if (v252)
              {
                v269 = *(_QWORD *)(v247 + 16);
                v130 = __OFADD__(v269, v252);
                v270 = v269 + v252;
                if (v130)
                  goto LABEL_270;
                *(_QWORD *)(v247 + 16) = v270;
              }
            }
            else if (v252)
            {
              goto LABEL_263;
            }
            v246 += 32;
            swift_bridgeObjectRelease();
            if (!--v245)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_255;
            }
          }
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
          goto LABEL_268;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v247 = MEMORY[0x24BEE4AF8];
LABEL_255:
        *(_QWORD *)(v243 + 368) = v247;
        v271 = *(_QWORD *)(*(_QWORD *)(v243 + 192) + 112);
        *(_QWORD *)(v243 + 376) = v271;
        if (v271)
        {
          swift_retain();
          v272 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v243 + 384) = v272;
          *v272 = v243;
          v272[1] = sub_2119982E4;
          return sub_211A47568();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v243 = v329;
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v243 + 8))();
    }
    v34 = *(_QWORD *)(v1 + 176);
    v35 = *(_QWORD *)(v34 + 16);
    v36 = MEMORY[0x24BEE4AF8];
    log = v21;
    v292 = v35;
    if (v35)
    {
      isa = (objc_class *)MEMORY[0x24BEE4AF8];
      sub_211948C10(0, v35, 0);
      v36 = (uint64_t)isa;
      v37 = *((_QWORD *)isa + 2);
      v38 = 16 * v37;
      v39 = (uint64_t *)(v34 + 40);
      do
      {
        v41 = *(v39 - 1);
        v40 = *v39;
        isa = (objc_class *)v36;
        v42 = *(_QWORD *)(v36 + 24);
        swift_bridgeObjectRetain();
        if (v37 >= v42 >> 1)
        {
          sub_211948C10(v42 > 1, v37 + 1, 1);
          v36 = (uint64_t)isa;
        }
        *(_QWORD *)(v36 + 16) = v37 + 1;
        v43 = v36 + v38;
        *(_QWORD *)(v43 + 32) = v41;
        *(_QWORD *)(v43 + 40) = v40;
        v38 += 16;
        v39 += 4;
        ++v37;
        --v35;
      }
      while (v35);
      v1 = v329;
    }
    v118 = sub_2119591D0(v36);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v308 = swift_bridgeObjectRetain();
    v119 = sub_211948D94(v308);
    v120 = sub_2119591D0((uint64_t)v119);
    swift_release();
    if (*(_QWORD *)(v120 + 16) <= *(_QWORD *)(v118 + 16) >> 3)
    {
      isa = (objc_class *)v118;
      swift_bridgeObjectRetain();
      sub_2119494CC(v120);
      v280 = (uint64_t)isa;
    }
    else
    {
      swift_bridgeObjectRetain();
      v280 = sub_2119484CC(v120, v118);
    }
    v33 = v330;
    v121 = v292;
    if (*(_QWORD *)(v118 + 16) <= *(_QWORD *)(v120 + 16) >> 3)
    {
      isa = (objc_class *)v120;
      sub_2119494CC(v118);
      swift_bridgeObjectRelease();
      v279 = (uint64_t)isa;
    }
    else
    {
      v279 = sub_2119484CC(v118, v120);
      swift_bridgeObjectRelease();
    }
    v122 = 0;
    v123 = -1;
    v281 = v280 + 56;
    v124 = -1 << *(_BYTE *)(v280 + 32);
    v276 = *(_QWORD *)(v1 + 272);
    if (-v124 < 64)
      v123 = ~(-1 << -(char)v124);
    v125 = v123 & *(_QWORD *)(v280 + 56);
    v290 = *(_QWORD *)(v1 + 192);
    v274 = v290 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate;
    v126 = *(_QWORD *)(v1 + 224);
    v127 = *(_QWORD *)(v1 + 176);
    v282 = (unint64_t)(63 - v124) >> 6;
    v273 = (char *)(v127 + 90);
    v278 = v127;
    v275 = (uint64_t *)(v127 + 40);
    v277 = v126;
    while (1)
    {
      while (v125)
      {
        v128 = __clz(__rbit64(v125));
        v125 &= v125 - 1;
        v129 = v128 | (v122 << 6);
        if (v121)
          goto LABEL_135;
      }
      v130 = __OFADD__(v122++, 1);
      if (v130)
        goto LABEL_265;
      if (v122 >= v282)
        goto LABEL_184;
      v131 = *(_QWORD *)(v281 + 8 * v122);
      if (!v131)
        break;
LABEL_134:
      v125 = (v131 - 1) & v131;
      v129 = __clz(__rbit64(v131)) + (v122 << 6);
      if (v121)
      {
LABEL_135:
        v133 = (uint64_t *)(*(_QWORD *)(v280 + 48) + 16 * v129);
        v135 = *v133;
        v134 = v133[1];
        v136 = *(_QWORD *)(v278 + 40);
        v137 = *(_QWORD *)(v278 + 48);
        v322 = *(_BYTE *)(v278 + 56);
        v318 = *(_BYTE *)(v278 + 57);
        v314 = *(_BYTE *)(v278 + 58);
        v138 = *(_QWORD *)(v278 + 32) == *v133 && v136 == v134;
        v304 = v125;
        if (v138)
        {
          v296 = v122;
          swift_bridgeObjectRetain_n();
          v327 = v137;
          swift_bridgeObjectRetain();
LABEL_142:
          v310 = v135;
          v136 = v134;
          goto LABEL_143;
        }
        v310 = *(_QWORD *)(v278 + 32);
        if ((sub_211A48258() & 1) != 0)
        {
          v296 = v122;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v327 = v137;
          swift_bridgeObjectRetain();
          goto LABEL_143;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v121 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_120:
          swift_bridgeObjectRelease();
          v125 = v304;
        }
        else
        {
          v296 = v122;
          v177 = v273;
          v178 = 1;
          while (1)
          {
            v179 = v178 + 1;
            if (__OFADD__(v178, 1))
              goto LABEL_260;
            v180 = *(_QWORD *)(v177 - 26);
            v136 = *(_QWORD *)(v177 - 18);
            v327 = *(_QWORD *)(v177 - 10);
            v322 = *(v177 - 2);
            v318 = *(v177 - 1);
            v314 = *v177;
            if (v180 == v135 && v136 == v134)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_142;
            }
            if ((sub_211A48258() & 1) != 0)
              break;
            ++v178;
            v177 += 32;
            if (v179 == v121)
            {
              swift_bridgeObjectRelease();
              v33 = v330;
              v122 = v296;
              goto LABEL_120;
            }
          }
          v310 = v180;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_143:
          (*(void (**)(_QWORD, uint64_t, _QWORD))(v126 + 16))(*(_QWORD *)(v1 + 256), v306, *(_QWORD *)(v1 + 216));
          swift_bridgeObjectRetain();
          v139 = sub_211A47724();
          v140 = sub_211A47D30();
          v141 = os_log_type_enabled(v139, v140);
          v142 = v1;
          v143 = *(_QWORD *)(v1 + 256);
          v144 = *(_QWORD *)(v142 + 216);
          if (v141)
          {
            v145 = swift_slowAlloc();
            v146 = swift_slowAlloc();
            isa = (objc_class *)v146;
            *(_DWORD *)v145 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v145 + 4) = sub_211950A9C(v135, v134, (uint64_t *)&isa);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21190D000, v139, v140, "FMFSecureLocationCtrl: Insertion detected, will start live locating %s", (uint8_t *)v145, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x212BE48A0](v146, -1, -1);
            v147 = log;
            MEMORY[0x212BE48A0](v145, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v143, v144);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v143, v144);
            v147 = log;
          }
          v148 = *(_QWORD *)(v329 + 304);
          v149 = *(_QWORD *)(v329 + 264);
          v150 = *(_QWORD *)(v329 + 208);
          v284 = *(void (**)(uint64_t, uint64_t, uint64_t))(v276 + 104);
          v284(v148, v147, v149);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_211997A20(v310, v136, v327, 1, v148);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v298(v148, v149);
          v151 = sub_211A47208();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v150, 1, 1, v151);
          swift_bridgeObjectRetain();
          sub_2119D53D0(v310, v136, v150);
          swift_bridgeObjectRelease();
          sub_211923EE8(v150, qword_254AC8A78);
          isa = (objc_class *)MEMORY[0x24BEE4AF8];
          v152 = v292;
          sub_211948C10(0, v292, 0);
          v153 = (uint64_t)isa;
          v154 = *((_QWORD *)isa + 2);
          v155 = 16 * v154;
          v156 = v275;
          do
          {
            v158 = *(v156 - 1);
            v157 = *v156;
            isa = (objc_class *)v153;
            v159 = v154 + 1;
            v160 = *(_QWORD *)(v153 + 24);
            swift_bridgeObjectRetain();
            if (v154 >= v160 >> 1)
            {
              sub_211948C10(v160 > 1, v159, 1);
              v153 = (uint64_t)isa;
            }
            *(_QWORD *)(v153 + 16) = v159;
            v161 = v153 + v155;
            *(_QWORD *)(v161 + 32) = v158;
            *(_QWORD *)(v161 + 40) = v157;
            v155 += 16;
            v156 += 4;
            ++v154;
            --v152;
          }
          while (v152);
          v284(*(_QWORD *)(v329 + 296), log, *(_QWORD *)(v329 + 264));
          if (*(_QWORD *)(v153 + 16) && MEMORY[0x212BE496C](v274))
          {
            sub_21191F7D8(1, *(_QWORD *)(v329 + 296), v153);
            swift_unknownObjectRelease();
          }
          swift_release();
          v298(*(_QWORD *)(v329 + 296), *(_QWORD *)(v329 + 264));
          if (*(_QWORD *)(v290 + 144))
          {
            swift_retain();
            sub_211958C38(&qword_254ACC360);
            sub_211A47BB0();
            swift_release();
          }
          v162 = *(_QWORD *)(v329 + 200);
          v163 = sub_211A47B8C();
          v164 = *(_QWORD *)(v163 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v162, 1, 1, v163);
          v165 = swift_allocObject();
          swift_weakInit();
          v166 = swift_allocObject();
          *(_QWORD *)(v166 + 16) = 0;
          *(_QWORD *)(v166 + 24) = 0;
          *(_QWORD *)(v166 + 32) = v165;
          *(_QWORD *)(v166 + 40) = v310;
          *(_QWORD *)(v166 + 48) = v136;
          *(_QWORD *)(v166 + 56) = v327;
          *(_BYTE *)(v166 + 64) = v322;
          *(_BYTE *)(v166 + 65) = v318;
          *(_BYTE *)(v166 + 66) = v314;
          v167 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v168 = *(_QWORD *)(v329 + 200);
          if (v167 == 1)
          {
            sub_211923EE8(*(_QWORD *)(v329 + 200), &qword_254AC9FD0);
          }
          else
          {
            sub_211A47B80();
            (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v168, v163);
          }
          v126 = v277;
          if (*(_QWORD *)(v166 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            v169 = sub_211A47B50();
            v171 = v170;
            swift_unknownObjectRelease();
          }
          else
          {
            v169 = 0;
            v171 = 0;
          }
          v121 = v292;
          if (v171 | v169)
          {
            *(v330 - 16) = 0;
            *(v330 - 15) = 0;
            *(_QWORD *)(v329 + 32) = v169;
            *(_QWORD *)(v329 + 40) = v171;
          }
          v122 = v296;
          *(_QWORD *)(v290 + 144) = swift_task_create();
          swift_release();
          v172 = (_QWORD *)*v330;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v172 = sub_2119491C4(0, v172[2] + 1, 1, v172);
          v1 = v329;
          v174 = v172[2];
          v173 = v172[3];
          v175 = v310;
          if (v174 >= v173 >> 1)
          {
            v172 = sub_2119491C4((_QWORD *)(v173 > 1), v174 + 1, 1, v172);
            v175 = v310;
          }
          v172[2] = v174 + 1;
          v176 = &v172[4 * v174];
          v176[4] = v175;
          v176[5] = v136;
          v176[6] = v327;
          *((_BYTE *)v176 + 56) = v322;
          *((_BYTE *)v176 + 57) = v318;
          *((_BYTE *)v176 + 58) = v314;
          v33 = v330;
          *v330 = (uint64_t)v172;
          v125 = v304;
        }
      }
    }
    v132 = v122 + 1;
    if (v122 + 1 >= v282)
      goto LABEL_184;
    v131 = *(_QWORD *)(v281 + 8 * v132);
    if (v131)
      goto LABEL_133;
    v132 = v122 + 2;
    if (v122 + 2 >= v282)
      goto LABEL_184;
    v131 = *(_QWORD *)(v281 + 8 * v132);
    if (v131)
      goto LABEL_133;
    v132 = v122 + 3;
    if (v122 + 3 >= v282)
      goto LABEL_184;
    v131 = *(_QWORD *)(v281 + 8 * v132);
    if (v131)
    {
LABEL_133:
      v122 = v132;
      goto LABEL_134;
    }
    while (1)
    {
      v122 = v132 + 1;
      if (__OFADD__(v132, 1))
      {
        __break(1u);
        goto LABEL_273;
      }
      if (v122 >= v282)
        break;
      v131 = *(_QWORD *)(v281 + 8 * v122);
      ++v132;
      if (v131)
        goto LABEL_134;
    }
LABEL_184:
    swift_release();
    v182 = 0;
    v183 = v279 + 56;
    v184 = -1;
    v185 = -1 << *(_BYTE *)(v279 + 32);
    if (-v185 < 64)
      v184 = ~(-1 << -(char)v185);
    v186 = v184 & *(_QWORD *)(v279 + 56);
    v328 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v187 = (unint64_t)(63 - v185) >> 6;
    while (2)
    {
      if (v186)
      {
        v188 = __clz(__rbit64(v186));
        v186 &= v186 - 1;
        v189 = v188 | (v182 << 6);
        goto LABEL_200;
      }
      v130 = __OFADD__(v182++, 1);
      if (v130)
        goto LABEL_266;
      if (v182 >= v187)
      {
LABEL_215:
        swift_bridgeObjectRelease();
        swift_release();
        v91 = v328;
        goto LABEL_218;
      }
      v190 = *(_QWORD *)(v183 + 8 * v182);
      if (v190)
      {
LABEL_199:
        v186 = (v190 - 1) & v190;
        v189 = __clz(__rbit64(v190)) + (v182 << 6);
LABEL_200:
        if (*(_QWORD *)(v308 + 16))
        {
          v192 = (uint64_t *)(*(_QWORD *)(v279 + 48) + 16 * v189);
          v193 = *v192;
          v194 = v192[1];
          swift_bridgeObjectRetain_n();
          v195 = sub_21195BB68(v193, v194);
          if ((v196 & 1) != 0)
          {
            v197 = *(_QWORD *)(v1 + 248);
            v198 = *(_QWORD *)(v1 + 216);
            v199 = *(_QWORD *)(v308 + 56) + 32 * v195;
            v315 = *(_QWORD *)v199;
            v200 = *(_QWORD *)(v199 + 16);
            v311 = *(_BYTE *)(v199 + 24);
            v305 = *(_BYTE *)(v199 + 25);
            v301 = *(_BYTE *)(v199 + 26);
            v323 = *(uint64_t **)(v199 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 16))(v197, v306, v198);
            swift_bridgeObjectRetain();
            v201 = sub_211A47724();
            v202 = v1;
            v203 = sub_211A47D30();
            v204 = os_log_type_enabled(v201, v203);
            v297 = *(_QWORD *)(v202 + 248);
            v205 = *(_QWORD *)(v202 + 216);
            if (v204)
            {
              logb = v201;
              v206 = swift_slowAlloc();
              v291 = v205;
              v207 = swift_slowAlloc();
              isa = (objc_class *)v207;
              *(_DWORD *)v206 = 136315138;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v206 + 4) = sub_211950A9C(v193, v194, (uint64_t *)&isa);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_21190D000, logb, v203, "FMFSecureLocationCtrl: Removal detected, will stop live locating %s", (uint8_t *)v206, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x212BE48A0](v207, -1, -1);
              MEMORY[0x212BE48A0](v206, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v297, v291);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v297, v205);
            }
            v1 = v329;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v328 = sub_2119491C4(0, v328[2] + 1, 1, v328);
            v209 = v328[2];
            v208 = v328[3];
            if (v209 >= v208 >> 1)
              v328 = sub_2119491C4((_QWORD *)(v208 > 1), v209 + 1, 1, v328);
            v328[2] = v209 + 1;
            v210 = &v328[4 * v209];
            v210[4] = v315;
            v210[5] = v323;
            v210[6] = v200;
            *((_BYTE *)v210 + 56) = v311;
            *((_BYTE *)v210 + 57) = v305;
            *((_BYTE *)v210 + 58) = v301;
            v33 = v330;
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        continue;
      }
      break;
    }
    v191 = v182 + 1;
    if (v182 + 1 >= v187)
      goto LABEL_215;
    v190 = *(_QWORD *)(v183 + 8 * v191);
    if (v190)
      goto LABEL_198;
    v191 = v182 + 2;
    if (v182 + 2 >= v187)
      goto LABEL_215;
    v190 = *(_QWORD *)(v183 + 8 * v191);
    if (v190)
      goto LABEL_198;
    v191 = v182 + 3;
    if (v182 + 3 >= v187)
      goto LABEL_215;
    v190 = *(_QWORD *)(v183 + 8 * v191);
    if (v190)
    {
LABEL_198:
      v182 = v191;
      goto LABEL_199;
    }
    while (1)
    {
      v182 = v191 + 1;
      if (__OFADD__(v191, 1))
        break;
      if (v182 >= v187)
        goto LABEL_215;
      v190 = *(_QWORD *)(v183 + 8 * v182);
      ++v191;
      if (v190)
        goto LABEL_199;
    }
LABEL_273:
    __break(1u);
LABEL_274:
    swift_once();
  }
  v23 = *(_QWORD *)(v1 + 176);
  v24 = *(_QWORD *)(v23 + 16);
  v25 = MEMORY[0x24BEE4AF8];
  v316 = v24;
  if (v24)
  {
    isa = (objc_class *)MEMORY[0x24BEE4AF8];
    sub_211948C10(0, v24, 0);
    v25 = (uint64_t)isa;
    v26 = *((_QWORD *)isa + 2);
    v27 = 16 * v26;
    v28 = (uint64_t *)(v23 + 40);
    do
    {
      v30 = *(v28 - 1);
      v29 = *v28;
      isa = (objc_class *)v25;
      v31 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v26 >= v31 >> 1)
      {
        sub_211948C10(v31 > 1, v26 + 1, 1);
        v25 = (uint64_t)isa;
      }
      *(_QWORD *)(v25 + 16) = v26 + 1;
      v32 = v25 + v27;
      *(_QWORD *)(v32 + 32) = v30;
      *(_QWORD *)(v32 + 40) = v29;
      v27 += 16;
      v28 += 4;
      ++v26;
      --v24;
    }
    while (v24);
    v1 = v329;
  }
  v44 = *(NSObject **)(v1 + 192);
  v45 = sub_2119591D0(v25);
  swift_bridgeObjectRelease();
  loga = v44 + 15;
  swift_beginAccess();
  v309 = swift_bridgeObjectRetain();
  v46 = sub_211948D94(v309);
  v47 = sub_2119591D0((uint64_t)v46);
  swift_release();
  if (*(_QWORD *)(v47 + 16) <= *(_QWORD *)(v45 + 16) >> 3)
  {
    isa = (objc_class *)v45;
    swift_bridgeObjectRetain();
    sub_2119494CC(v47);
    v48 = (uint64_t)isa;
  }
  else
  {
    swift_bridgeObjectRetain();
    v48 = sub_2119484CC(v47, v45);
  }
  v33 = v330;
  if (*(_QWORD *)(v45 + 16) <= *(_QWORD *)(v47 + 16) >> 3)
  {
    isa = (objc_class *)v47;
    sub_2119494CC(v45);
    swift_bridgeObjectRelease();
    v295 = (uint64_t)isa;
    if (!*(_QWORD *)(v48 + 16))
    {
LABEL_27:
      if (!*(_QWORD *)(v295 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_217;
      }
    }
  }
  else
  {
    v295 = sub_2119484CC(v45, v47);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v48 + 16))
      goto LABEL_27;
  }
  v49 = 0;
  v50 = *(_QWORD *)(v1 + 224);
  v293 = v48 + 56;
  v51 = -1;
  v52 = -1 << *(_BYTE *)(v48 + 32);
  if (-v52 < 64)
    v51 = ~(-1 << -(char)v52);
  v53 = v51 & *(_QWORD *)(v48 + 56);
  v299 = (unint64_t)(63 - v52) >> 6;
  v288 = *(_QWORD *)(v1 + 176);
  v307 = *(_QWORD *)(v1 + 224);
  v302 = v48;
  while (2)
  {
    if (v53)
    {
      v320 = (v53 - 1) & v53;
      v325 = v49;
      v54 = __clz(__rbit64(v53)) | (v49 << 6);
      goto LABEL_50;
    }
    v55 = v49 + 1;
    if (__OFADD__(v49, 1))
      goto LABEL_261;
    if (v55 < v299)
    {
      v56 = *(_QWORD *)(v293 + 8 * v55);
      v57 = v49 + 1;
      if (!v56)
      {
        v57 = v49 + 2;
        if (v49 + 2 >= v299)
          break;
        v56 = *(_QWORD *)(v293 + 8 * v57);
        if (!v56)
        {
          v57 = v49 + 3;
          if (v49 + 3 >= v299)
            break;
          v56 = *(_QWORD *)(v293 + 8 * v57);
          if (!v56)
          {
            v58 = v49 + 4;
            if (v49 + 4 >= v299)
              break;
            v56 = *(_QWORD *)(v293 + 8 * v58);
            if (!v56)
            {
              while (1)
              {
                v57 = v58 + 1;
                if (__OFADD__(v58, 1))
                  break;
                if (v57 >= v299)
                  goto LABEL_79;
                v56 = *(_QWORD *)(v293 + 8 * v57);
                ++v58;
                if (v56)
                  goto LABEL_49;
              }
LABEL_268:
              __break(1u);
              goto LABEL_269;
            }
            v57 = v49 + 4;
          }
        }
      }
LABEL_49:
      v320 = (v56 - 1) & v56;
      v325 = v57;
      v54 = __clz(__rbit64(v56)) + (v57 << 6);
LABEL_50:
      v59 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * v54);
      v60 = *v59;
      v61 = v59[1];
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v50 + 16))(*(_QWORD *)(v1 + 240), v306, *(_QWORD *)(v1 + 216));
      swift_bridgeObjectRetain_n();
      v62 = sub_211A47724();
      v63 = sub_211A47D30();
      v64 = os_log_type_enabled(v62, v63);
      v65 = *(_QWORD *)(v1 + 240);
      v66 = *(_QWORD *)(v1 + 216);
      if (v64)
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        isa = (objc_class *)v68;
        *(_DWORD *)v67 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v67 + 4) = sub_211950A9C(v60, v61, (uint64_t *)&isa);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21190D000, v62, v63, "FMFSecureLocationCtrl: Insertion detected, will start shallow locating %s", (uint8_t *)v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v68, -1, -1);
        v69 = v67;
        v33 = v330;
        MEMORY[0x212BE48A0](v69, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v65, v66);
      if (!v316)
        goto LABEL_32;
      v71 = *(_QWORD *)(v288 + 32);
      v70 = *(_QWORD *)(v288 + 40);
      v72 = *(_QWORD *)(v288 + 48);
      v73 = *(_BYTE *)(v288 + 56);
      v74 = *(_BYTE *)(v288 + 57);
      v75 = *(_BYTE *)(v288 + 58);
      if (v71 == v60 && v70 == v61)
      {
        v312 = *(_BYTE *)(v288 + 58);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_61:
        v71 = v60;
        v70 = v61;
LABEL_62:
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v77 = swift_isUniquelyReferenced_nonNull_native();
        isa = loga->isa;
        loga->isa = (Class)0x8000000000000000;
        sub_211A43FCC(v60, v61, v72, 0, v60, v61, v77);
        loga->isa = isa;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v78 = (_QWORD *)*v330;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v78 = sub_2119491C4(0, v78[2] + 1, 1, v78);
        v1 = v329;
        v80 = v78[2];
        v79 = v78[3];
        if (v80 >= v79 >> 1)
          v78 = sub_2119491C4((_QWORD *)(v79 > 1), v80 + 1, 1, v78);
        v78[2] = v80 + 1;
        v81 = &v78[4 * v80];
        v81[4] = v71;
        v81[5] = v70;
        v81[6] = v72;
        *((_BYTE *)v81 + 56) = v73;
        *((_BYTE *)v81 + 57) = v74;
        *((_BYTE *)v81 + 58) = v312;
        v33 = v330;
        *v330 = (uint64_t)v78;
        v50 = v307;
      }
      else
      {
        if ((sub_211A48258() & 1) != 0)
        {
          v312 = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_62;
        }
        swift_bridgeObjectRetain();
        if (v316 != 1)
        {
          v82 = (char *)(v288 + 90);
          v83 = 1;
          while (1)
          {
            v84 = v83 + 1;
            if (__OFADD__(v83, 1))
              break;
            v71 = *(_QWORD *)(v82 - 26);
            v70 = *(_QWORD *)(v82 - 18);
            v72 = *(_QWORD *)(v82 - 10);
            v73 = *(v82 - 2);
            v74 = *(v82 - 1);
            v312 = *v82;
            if (v71 == v60 && v70 == v61)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            if ((sub_211A48258() & 1) != 0)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_62;
            }
            ++v83;
            v82 += 32;
            v50 = v307;
            if (v84 == v316)
            {
              v1 = v329;
              swift_bridgeObjectRelease();
              v33 = v330;
              goto LABEL_32;
            }
          }
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
          goto LABEL_264;
        }
        swift_bridgeObjectRelease();
        v50 = v307;
LABEL_32:
        swift_bridgeObjectRelease();
      }
      v48 = v302;
      v53 = v320;
      v49 = v325;
      continue;
    }
    break;
  }
LABEL_79:
  swift_release();
  v86 = 0;
  v87 = v295 + 56;
  v88 = -1;
  v89 = -1 << *(_BYTE *)(v295 + 32);
  if (-v89 < 64)
    v88 = ~(-1 << -(char)v89);
  v90 = v88 & *(_QWORD *)(v295 + 56);
  v91 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v92 = (unint64_t)(63 - v89) >> 6;
  while (2)
  {
    if (v90)
    {
      v93 = __clz(__rbit64(v90));
      v90 &= v90 - 1;
      v94 = v93 | (v86 << 6);
      goto LABEL_98;
    }
    v95 = v86 + 1;
    if (__OFADD__(v86, 1))
      goto LABEL_262;
    if (v95 >= v92)
    {
LABEL_109:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_218;
    }
    v96 = *(_QWORD *)(v87 + 8 * v95);
    ++v86;
    if (v96)
      goto LABEL_97;
    v86 = v95 + 1;
    if (v95 + 1 >= v92)
      goto LABEL_109;
    v96 = *(_QWORD *)(v87 + 8 * v86);
    if (v96)
      goto LABEL_97;
    v86 = v95 + 2;
    if (v95 + 2 >= v92)
      goto LABEL_109;
    v96 = *(_QWORD *)(v87 + 8 * v86);
    if (v96)
    {
LABEL_97:
      v90 = (v96 - 1) & v96;
      v94 = __clz(__rbit64(v96)) + (v86 << 6);
LABEL_98:
      if (*(_QWORD *)(v309 + 16))
      {
        v98 = (uint64_t *)(*(_QWORD *)(v295 + 48) + 16 * v94);
        v100 = *v98;
        v99 = v98[1];
        swift_bridgeObjectRetain_n();
        v101 = sub_21195BB68(v100, v99);
        if ((v102 & 1) != 0)
        {
          v326 = v91;
          v103 = *(_QWORD *)(v1 + 232);
          v104 = *(_QWORD *)(v1 + 216);
          v105 = *(_QWORD *)(v309 + 56) + 32 * v101;
          v313 = *(_QWORD *)v105;
          v106 = *(_QWORD *)(v105 + 16);
          v303 = *(_BYTE *)(v105 + 24);
          v300 = *(_BYTE *)(v105 + 25);
          v294 = *(_BYTE *)(v105 + 26);
          v321 = *(uint64_t **)(v105 + 8);
          swift_bridgeObjectRetain();
          v317 = v106;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 16))(v103, v306, v104);
          swift_bridgeObjectRetain();
          v107 = sub_211A47724();
          v108 = v1;
          v109 = sub_211A47D30();
          v110 = os_log_type_enabled(v107, v109);
          v289 = *(_QWORD *)(v108 + 232);
          v111 = *(_QWORD *)(v108 + 216);
          if (v110)
          {
            v283 = v111;
            v112 = swift_slowAlloc();
            v113 = swift_slowAlloc();
            isa = (objc_class *)v113;
            *(_DWORD *)v112 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v112 + 4) = sub_211950A9C(v100, v99, (uint64_t *)&isa);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_21190D000, v107, v109, "FMFSecureLocationCtrl: Removal detected, will stop shallow locating %s", (uint8_t *)v112, 0xCu);
            swift_arrayDestroy();
            v114 = v113;
            v91 = v326;
            MEMORY[0x212BE48A0](v114, -1, -1);
            MEMORY[0x212BE48A0](v112, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v289, v283);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v289, v111);
            v91 = v326;
          }
          v1 = v329;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = sub_2119491C4(0, v91[2] + 1, 1, v91);
          v116 = v91[2];
          v115 = v91[3];
          if (v116 >= v115 >> 1)
            v91 = sub_2119491C4((_QWORD *)(v115 > 1), v116 + 1, 1, v91);
          v91[2] = v116 + 1;
          v117 = &v91[4 * v116];
          v117[4] = v313;
          v117[5] = v321;
          v117[6] = v317;
          *((_BYTE *)v117 + 56) = v303;
          *((_BYTE *)v117 + 57) = v300;
          *((_BYTE *)v117 + 58) = v294;
          v33 = v330;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      continue;
    }
    break;
  }
  v97 = v95 + 3;
  if (v97 >= v92)
    goto LABEL_109;
  v96 = *(_QWORD *)(v87 + 8 * v97);
  if (v96)
  {
    v86 = v97;
    goto LABEL_97;
  }
  while (1)
  {
    v86 = v97 + 1;
    if (__OFADD__(v97, 1))
      break;
    if (v86 >= v92)
      goto LABEL_109;
    v96 = *(_QWORD *)(v87 + 8 * v86);
    ++v97;
    if (v96)
      goto LABEL_97;
  }
LABEL_269:
  __break(1u);
LABEL_270:
  __break(1u);
  return sub_211A480D8();
}

uint64_t sub_211947C68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21194B0D8(a1, a2, a3, (_QWORD *)*v3, &qword_254ACA3B0, (uint64_t (*)(_QWORD))MEMORY[0x24BE32118]);
  *v3 = result;
  return result;
}

int64_t sub_211947C94(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_211947D7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21194B2B8(a1, a2, a3, a4, &qword_254ACA3B0, (uint64_t (*)(_QWORD))MEMORY[0x24BE32118]);
}

uint64_t sub_211947D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;

  v4 = v3;
  v8 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211958C38(&qword_254ACA278);
  MEMORY[0x24BDAC7A8](v11, v12);
  v65 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMFFriend();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v64 = (uint64_t *)((char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_211958C38(&qword_254ACD780);
  v25 = *(int *)(MEMORY[0x24BDAC7A8](v22, v23) + 48);
  v26 = (char *)&v60 + v25 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211934794(a1 + v25, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211942810((uint64_t)v26, (uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v27 = *(_QWORD *)(a2 + 720);
  if (*(_QWORD *)(v27 + 16))
  {
    v80 = v3;
    v28 = *a3;
    v29 = a3[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = sub_21195BB68(v28, v29);
    if ((v31 & 1) != 0)
    {
      v32 = *(_QWORD *)(v27 + 56) + 56 * v30;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_QWORD *)(v32 + 24);
      v62 = *(_QWORD *)(v32 + 16);
      v63 = v33;
      v61 = *(unsigned __int8 *)(v32 + 32);
      v36 = *(_QWORD *)(v32 + 48);
      v60 = *(_QWORD *)(v32 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211934794((uint64_t)a3, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
      v37 = type metadata accessor for FMFIntermediateFriend();
      v38 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v65, 1, 1, v37);
      v78 = 0;
      v79 = 1;
      v76 = 0;
      v77 = 1;
      v39 = type metadata accessor for FMFLocation();
      v40 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v66, 1, 1, v39);
      v67 = v63;
      v68 = v34;
      v69 = v62;
      v70 = v35;
      v71 = v61;
      v72 = v60;
      v73 = v36;
      v41 = v64;
      sub_211956D54((uint64_t)v17, v38, (unint64_t)&v78, (uint64_t)&v76, v40, 0, 1, &v67, v64, 0, 0, 2u, 2u, 2);
      sub_211934758((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      return sub_211942810((uint64_t)v41, (uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v80;
  }
  result = sub_2119482CC(a3[4]);
  if (v43)
  {
    v44 = result;
    v45 = v43;
    swift_beginAccess();
    v46 = *(_QWORD *)(a2 + 728);
    if (*(_QWORD *)(v46 + 16))
    {
      swift_bridgeObjectRetain();
      v47 = sub_21195BB68(v44, v45);
      if ((v48 & 1) != 0)
      {
        v49 = *(_QWORD *)(v46 + 56) + 56 * v47;
        v51 = *(_QWORD *)v49;
        v50 = *(_QWORD *)(v49 + 8);
        v52 = *(_QWORD *)(v49 + 24);
        v62 = *(_QWORD *)(v49 + 16);
        v63 = v51;
        v61 = *(unsigned __int8 *)(v49 + 32);
        v80 = v4;
        v53 = *(_QWORD *)(v49 + 48);
        v60 = *(_QWORD *)(v49 + 40);
        v54 = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_211934794((uint64_t)a3, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
        v55 = type metadata accessor for FMFIntermediateFriend();
        v56 = (uint64_t)v65;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v65, 1, 1, v55);
        v76 = 0;
        v77 = 1;
        v74 = 0;
        v75 = 1;
        v57 = type metadata accessor for FMFLocation();
        v58 = (uint64_t)v66;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v66, 1, 1, v57);
        v67 = v63;
        v68 = v54;
        v69 = v62;
        v70 = v52;
        v71 = v61;
        v72 = v60;
        v73 = v53;
        v59 = v64;
        sub_211956D54((uint64_t)v17, v56, (unint64_t)&v76, (uint64_t)&v74, v58, 0, 1, &v67, v64, 0, 0, 2u, 2u, 2);
        sub_211934758((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        return sub_211942810((uint64_t)v59, (uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119482CC(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_2119483E8(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_2119483EC(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_211948348(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2119483EC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_211948444(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2119484CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v38 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v37)
          goto LABEL_47;
        v13 = *(_QWORD *)(v38 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v37)
            goto LABEL_47;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v37)
              goto LABEL_47;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v37)
                goto LABEL_47;
              v13 = *(_QWORD *)(v38 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v37)
                {
LABEL_47:
                  sub_211973358();
                  return v2;
                }
                v13 = *(_QWORD *)(v38 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v37)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v38 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_211A48318();
      swift_bridgeObjectRetain();
      sub_211A4797C();
      v19 = sub_211A48348();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_211A48258() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_211A48258() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_211948934((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_211973358();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_211948934((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_211973358();
      MEMORY[0x212BE48A0](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_211948934(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_211A185F8(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        v22 = sub_211A48348();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_211A48258() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_211A48258() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_211948C10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_211948C2C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_211948C2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_211958C38((uint64_t *)&unk_254ACC540);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

_QWORD *sub_211948D94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_211958C38((uint64_t *)&unk_254ACC540);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_2119492D0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_211973358();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_211948E78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  char v41;
  char v42;
  char v43;

  v3 = v2;
  v5 = *v2;
  sub_211958C38(&qword_254ACF130);
  v40 = a2;
  v6 = sub_211A480C0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 32 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_QWORD *)(v32 + 16);
      v42 = *(_BYTE *)(v32 + 25);
      v43 = *(_BYTE *)(v32 + 24);
      v41 = *(_BYTE *)(v32 + 26);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_211A48318();
      sub_211A4797C();
      result = sub_211A48348();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_QWORD *)(v19 + 16) = v35;
      *(_BYTE *)(v19 + 24) = v43;
      *(_BYTE *)(v19 + 25) = v42;
      *(_BYTE *)(v19 + 26) = v41;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

_QWORD *sub_2119491C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_211958C38(&qword_254ACA200);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_211961178(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2119492D0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2119494CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_211A1846C(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_211949660@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t result;
  id v62;
  void *v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  void (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int isUniquelyReferenced_nonNull_native;
  char v96;
  unint64_t v97;
  uint64_t v98;
  _BOOL8 v99;
  uint64_t v100;
  char v101;
  unint64_t v102;
  char v103;
  uint64_t *v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(_QWORD, _QWORD, _QWORD);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  void *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  _QWORD v156[2];
  uint64_t *v157;
  _QWORD *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  _QWORD *v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(_QWORD, _QWORD, _QWORD);
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  _BYTE v186[304];
  _OWORD v187[19];
  _QWORD v188[45];
  unint64_t v189[45];
  unint64_t v190;

  v170 = a3;
  v5 = sub_211A4779C();
  v164 = *(_QWORD *)(v5 - 8);
  v165 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v163 = (char *)v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v161 = *(_QWORD *)(v8 - 8);
  v162 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v160 = (char *)v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v179 = (uint64_t)v156 - v17;
  v18 = type metadata accessor for FMFLocation();
  v181 = *(_QWORD *)(v18 - 8);
  v182 = v18;
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v184 = (uint64_t)v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v175 = (uint64_t)v156 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v167 = (uint64_t)v156 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v159 = (uint64_t)v156 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v158 = (_QWORD *)((char *)v156 - v33);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v166 = (uint64_t)v156 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v172 = (uint64_t)v156 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v171 = (uint64_t)v156 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v174 = (uint64_t)v156 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v185 = (_QWORD *)((char *)v156 - v48);
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v183 = (unint64_t)v156 - v51;
  MEMORY[0x24BDAC7A8](v50, v52);
  v180 = (_QWORD *)((char *)v156 - v53);
  v178 = sub_211A47208();
  v54 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178, v55);
  v57 = (char *)v156 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_2119512F4();
  v59 = sub_21195A988();
  v60 = sub_21194B7F0(a2, v59);
  swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *v170 = 0;
    return result;
  }
  v168 = v15;
  v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v63 = (void *)sub_211A478EC();
  objc_msgSend(v62, sel_setLocalizedDateFormatFromTemplate_, v63);

  v64 = *(_QWORD *)(a2 + 16);
  v169 = a1;
  v65 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
  if (v64)
  {
    v66 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
    v67 = a2 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
    v68 = *(_QWORD *)(v181 + 72);
    v177 = v66;
    swift_bridgeObjectRetain();
    v69 = v64;
    v70 = v176;
    do
    {
      sub_21195006C(v67, v58, v62, 0x69737365636F7270, 0xEA0000000000676ELL);
      v67 += v68;
      --v69;
    }
    while (v69);
    v176 = v70;

    v65 = v177;
    swift_bridgeObjectRelease();
    a1 = v169;
  }
  else
  {

  }
  v71 = sub_21195A988();
  v189[0] = MEMORY[0x24BEE4AF8];
  sub_211A471FC();
  sub_211A47184();
  v73 = v72;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v178);
  if (v64)
  {
    v74 = (uint64_t)v65 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
    v75 = *(_QWORD *)(v181 + 72);
    swift_bridgeObjectRetain();
    v76 = v176;
    do
    {
      sub_21194A568(v74, v71, v189, 5.0, 10.0, 300.0, v73);
      v74 += v75;
      --v64;
    }
    while (v64);
    v176 = v76;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v77 = v189[0];
  v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v79 = (void *)sub_211A478EC();
  objc_msgSend(v78, sel_setLocalizedDateFormatFromTemplate_, v79);

  v80 = *(_QWORD *)(v77 + 16);
  v81 = v180;
  if (v80)
  {
    v82 = v77 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
    v83 = *(_QWORD *)(v181 + 72);
    swift_bridgeObjectRetain();
    v84 = v176;
    do
    {
      sub_21195006C(v82, v58, v78, 0x65737365636F7270, 0xE900000000000064);
      v82 += v83;
      --v80;
    }
    while (v80);
    v176 = v84;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    a1 = v169;
  }
  else
  {
    swift_bridgeObjectRelease();

  }
  a1[15] = 0;
  swift_bridgeObjectRelease();
  a1[21] = 0;
  swift_bridgeObjectRelease();
  v85 = *(_QWORD *)(v77 + 16);
  v86 = v181;
  v87 = v185;
  if (v85)
  {
    v88 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
    v177 = (void (*)(_QWORD, _QWORD, _QWORD))v77;
    v89 = v77 + v88;
    v90 = *(_QWORD *)(v181 + 72);
    v91 = (uint64_t *)MEMORY[0x24BEE4B00];
    v178 = v90;
    while (1)
    {
      sub_211934794(v89, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v92 = v81[1];
      if (!v92)
        goto LABEL_21;
      v93 = *v81;
      sub_211934794((uint64_t)v81, v183, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      swift_bridgeObjectRetain();
      v94 = (unint64_t)v91;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v189[0] = v94;
      v97 = sub_21195BB68(v93, v92);
      v98 = *(_QWORD *)(v94 + 16);
      v99 = (v96 & 1) == 0;
      v100 = v98 + v99;
      if (__OFADD__(v98, v99))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        result = sub_211A48294();
        __break(1u);
        return result;
      }
      v101 = v96;
      if (*(_QWORD *)(v94 + 24) >= v100)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v91 = (uint64_t *)v189[0];
          if ((v96 & 1) == 0)
            goto LABEL_30;
        }
        else
        {
          sub_211A458DC();
          v91 = (uint64_t *)v189[0];
          if ((v101 & 1) == 0)
            goto LABEL_30;
        }
      }
      else
      {
        sub_21195C5AC(v100, isUniquelyReferenced_nonNull_native);
        v102 = sub_21195BB68(v93, v92);
        if ((v101 & 1) != (v103 & 1))
          goto LABEL_82;
        v97 = v102;
        v91 = (uint64_t *)v189[0];
        if ((v101 & 1) == 0)
        {
LABEL_30:
          v91[(v97 >> 6) + 8] |= 1 << v97;
          v104 = (uint64_t *)(v91[6] + 16 * v97);
          *v104 = v93;
          v104[1] = v92;
          v90 = v178;
          sub_211942810(v183, v91[7] + v97 * v178, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v105 = v91[2];
          v106 = __OFADD__(v105, 1);
          v107 = v105 + 1;
          if (v106)
            goto LABEL_81;
          v91[2] = v107;
          swift_bridgeObjectRetain();
          goto LABEL_20;
        }
      }
      v90 = v178;
      sub_21195BCAC(v183, v91[7] + v97 * v178, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v87 = v185;
      v81 = v180;
LABEL_21:
      sub_211934758((uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v89 += v90;
      if (!--v85)
      {
        swift_bridgeObjectRelease();
        a1 = v169;
        v86 = v181;
        goto LABEL_36;
      }
    }
  }
  swift_bridgeObjectRelease();
  v91 = (uint64_t *)MEMORY[0x24BEE4B00];
LABEL_36:
  v190 = MEMORY[0x24BEE4AF8];
  v108 = a1 + 20;
  swift_beginAccess();
  v109 = a1[20];
  v110 = *(_QWORD *)(v109 + 16);
  if (!v110)
    goto LABEL_76;
  v156[1] = a1[20];
  v157 = a1 + 20;
  v180 = v91;
  v183 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v111 = v109 + v183;
  v112 = *(_QWORD *)(v86 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_211934794(v111, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v115 = v87[1];
    if (!v115)
      goto LABEL_50;
    v116 = v180;
    if (!v180[2])
    {
      v121 = v179;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v179, 1, 1, v182);
LABEL_48:
      sub_211923EE8(v121, (uint64_t *)&unk_254AC8CB0);
      goto LABEL_49;
    }
    v117 = *v87;
    swift_bridgeObjectRetain();
    v118 = sub_21195BB68(v117, v115);
    if ((v119 & 1) != 0)
    {
      v120 = v116[7] + v118 * v112;
      v121 = v179;
      sub_211934794(v120, v179, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v122 = *(void (**)(_QWORD, _QWORD, _QWORD))(v86 + 56);
      v123 = v121;
      v124 = 0;
    }
    else
    {
      v122 = *(void (**)(_QWORD, _QWORD, _QWORD))(v86 + 56);
      v121 = v179;
      v123 = v179;
      v124 = 1;
    }
    v125 = v182;
    v177 = v122;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v122)(v123, v124, 1, v182);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v121, 1, v125) == 1)
      goto LABEL_48;
    v129 = v174;
    sub_211942810(v121, v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v178 = *(_QWORD *)(v129 + 8);
    if (!v178)
    {
      sub_211934758(v129, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_49:
      v86 = v181;
      v87 = v185;
LABEL_50:
      sub_211934794((uint64_t)v87, v184, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v126 = v190;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v126 = sub_21194B098(0, *(_QWORD *)(v126 + 16) + 1, 1, v126);
      v128 = *(_QWORD *)(v126 + 16);
      v127 = *(_QWORD *)(v126 + 24);
      if (v128 >= v127 >> 1)
        v126 = sub_21194B098(v127 > 1, v128 + 1, 1, v126);
      *(_QWORD *)(v126 + 16) = v128 + 1;
      sub_211942810(v184, v126 + v183 + v128 * v112, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v190 = v126;
      goto LABEL_40;
    }
    v173 = *(_QWORD *)v129;
    v130 = *(unsigned __int8 *)(v129 + 33);
    v131 = v171;
    sub_211934794(v129, v171, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    if (!v130)
    {
      swift_bridgeObjectRetain();
      sub_211934758(v131, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v133 = v172;
      sub_211934794(v129, v172, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_66:
      sub_211934758(v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211934794(v129, v175, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v140 = v190;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v140 = sub_21194B098(0, *(_QWORD *)(v140 + 16) + 1, 1, v140);
      v142 = *(_QWORD *)(v140 + 16);
      v141 = *(_QWORD *)(v140 + 24);
      if (v142 >= v141 >> 1)
        v140 = sub_21194B098(v141 > 1, v142 + 1, 1, v140);
      *(_QWORD *)(v140 + 16) = v142 + 1;
      sub_211942810(v175, v140 + v183 + v142 * v112, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v190 = v140;
      goto LABEL_71;
    }
    v132 = *(unsigned __int8 *)(v131 + 16);
    swift_bridgeObjectRetain();
    sub_211934758(v131, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v133 = v172;
    sub_211934794(v129, v172, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    if (v132 != 1)
      goto LABEL_66;
    sub_21192DD68(v133 + *(int *)(v125 + 44), (uint64_t)v188, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v188, (uint64_t)v189, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)v189) != 1)
      goto LABEL_66;
    sub_211934758(v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v134 = v158;
    sub_211934794(v129, (uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v135 = v159;
    sub_211934794((uint64_t)v185, v159, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_21196F528(v187);
    sub_21192DD68((uint64_t)v187, (uint64_t)v186, &qword_254ACCB40);
    v136 = v166;
    FMFLocation.init(from:updatedLocation:address:)(v134, v135, (uint64_t)v186, v166);
    sub_211934794(v136, v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v137 = v190;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v137 = sub_21194B098(0, *(_QWORD *)(v137 + 16) + 1, 1, v137);
    v139 = *(_QWORD *)(v137 + 16);
    v138 = *(_QWORD *)(v137 + 24);
    if (v139 >= v138 >> 1)
      v137 = sub_21194B098(v138 > 1, v139 + 1, 1, v137);
    *(_QWORD *)(v137 + 16) = v139 + 1;
    sub_211942810(v167, v137 + v183 + v139 * v112, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v190 = v137;
    sub_211934758(v166, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_71:
    v143 = (uint64_t)v180;
    swift_bridgeObjectRetain();
    v144 = sub_21195BB68(v173, v178);
    v146 = v145;
    swift_bridgeObjectRelease();
    if ((v146 & 1) != 0)
    {
      v147 = swift_isUniquelyReferenced_nonNull_native();
      v189[0] = v143;
      if (!v147)
      {
        sub_211A458DC();
        v143 = v189[0];
      }
      swift_bridgeObjectRelease();
      v114 = (uint64_t)v168;
      sub_211942810(*(_QWORD *)(v143 + 56) + v144 * v112, (uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v180 = (uint64_t *)v143;
      sub_21194B6CC(v144, v143);
      swift_bridgeObjectRelease();
      v113 = 0;
    }
    else
    {
      v113 = 1;
      v114 = (uint64_t)v168;
    }
    v177(v114, v113, 1);
    swift_bridgeObjectRelease();
    sub_211923EE8(v114, (uint64_t *)&unk_254AC8CB0);
    sub_211934758(v129, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v86 = v181;
LABEL_40:
    v87 = v185;
    sub_211934758((uint64_t)v185, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v111 += v112;
    --v110;
  }
  while (v110);
  swift_bridgeObjectRelease();
  a1 = v169;
  v108 = v157;
LABEL_76:
  v148 = swift_bridgeObjectRetain();
  sub_21194B804(v148);
  v149 = *v108;
  v150 = v190;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v151 = sub_21194B7F0(v149, v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v151 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    a1[20] = v150;
    swift_bridgeObjectRelease();
    v189[4] = (unint64_t)sub_211938BD0;
    v189[5] = (unint64_t)a1;
    v189[0] = MEMORY[0x24BDAC760];
    v189[1] = 1107296256;
    v189[2] = (unint64_t)sub_21192382C;
    v189[3] = (unint64_t)&unk_24CCCBF90;
    v152 = _Block_copy(v189);
    swift_retain();
    v153 = v160;
    sub_211A477B4();
    v188[0] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    v154 = v163;
    v155 = v165;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v153, v154, v152);
    _Block_release(v152);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v154, v155);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v153, v162);
    swift_release();
  }
  *v170 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_21194A568(uint64_t a1, uint64_t a2, unint64_t *a3, double a4, double a5, double a6, double a7)
{
  void *v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t (*v61)(_QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  void *v80;
  id v81;
  char *v82;
  id v83;
  char *v84;
  double v85;
  double v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  id v89;
  double v90;
  double v91;
  uint64_t v92;
  unint64_t v93;
  char isUniquelyReferenced_nonNull_native;
  void *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  void *v99;
  double v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  unint64_t v107;
  char v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  unint64_t v123;
  char v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  char v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  char *v147;
  unint64_t *v148;
  uint64_t v149;
  _BYTE v150[360];
  _BYTE v151[360];
  _QWORD v152[45];
  _BYTE v153[360];
  _QWORD v154[46];
  uint64_t v155;

  v148 = a3;
  v144 = sub_211A47208();
  v142 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144, v14);
  v143 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for FMFLocation();
  v20 = *(_QWORD *)(v149 - 8);
  v22 = MEMORY[0x24BDAC7A8](v149, v21);
  v147 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v141 = (uint64_t)&v132 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v136 = (uint64_t)&v132 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v134 = (uint64_t)&v132 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v135 = (uint64_t)&v132 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v137 = (uint64_t)&v132 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v133 = (uint64_t)&v132 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v140 = (char *)&v132 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v138 = (uint64_t)&v132 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v139 = (uint64_t)&v132 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v54 = (uint64_t *)((char *)&v132 - v53);
  v56 = MEMORY[0x24BDAC7A8](v52, v55);
  v146 = (uint64_t)&v132 - v57;
  MEMORY[0x24BDAC7A8](v56, v58);
  v60 = (uint64_t *)((char *)&v132 - v59);
  sub_211934794(a1, (uint64_t)&v132 - v59, v61);
  v62 = *(_QWORD *)(a2 + 16);
  v155 = v20;
  if (v62)
  {
    v145 = v7;
    v63 = a2 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v64 = *(_QWORD *)(v20 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_211934794(v63, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v65 = v54[1];
      v66 = v60[1];
      if (v65)
      {
        if (v66)
        {
          v67 = *v54 == *v60 && v65 == v66;
          if (v67 || (sub_211A48258() & 1) != 0)
          {
LABEL_12:
            sub_211942810((uint64_t)v54, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v68 = 0;
            goto LABEL_15;
          }
        }
      }
      else if (!v66)
      {
        goto LABEL_12;
      }
      sub_211934758((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v63 += v64;
      --v62;
    }
    while (v62);
    v68 = 1;
LABEL_15:
    v20 = v155;
  }
  else
  {
    swift_bridgeObjectRetain();
    v68 = 1;
  }
  v69 = v149;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, v68, 1, v149);
  swift_bridgeObjectRelease();
  v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v69);
  v71 = v148;
  if (v70 != 1)
  {
    v72 = v146;
    sub_211942810((uint64_t)v19, v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_21192DD68(v72 + *(int *)(v69 + 44), (uint64_t)v153, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v153, (uint64_t)v154, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)v154) == 1
      || (v73 = (void *)v154[38],
          sub_21192DD68((uint64_t)v60 + *(int *)(v69 + 44), (uint64_t)v151, &qword_254AC8CD0),
          sub_21192DD68((uint64_t)v151, (uint64_t)v152, &qword_254AC8CD0),
          sub_2119724C8((uint64_t)v152) == 1))
    {
      sub_211934758(v72, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      goto LABEL_21;
    }
    v80 = (void *)v152[38];
    v81 = v73;
    v82 = v80;
    v145 = v81;
    v83 = objc_msgSend(v81, sel_timestamp);
    v84 = v143;
    sub_211A471E4();

    sub_211A47184();
    v86 = v85;
    v87 = *(void (**)(char *, uint64_t))(v142 + 8);
    v88 = v144;
    v87(v84, v144);
    v147 = v82;
    v89 = objc_msgSend(v82, sel_timestamp);
    sub_211A471E4();

    sub_211A47184();
    v91 = v90;
    v87(v84, v88);
    if (v91 - v86 < 0.0)
    {
      v92 = v139;
      sub_211934794(v146, v139, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v93 = *v71;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v71 = v93;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v93 = sub_21194B098(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
        *v71 = v93;
      }
      v95 = v145;
      v97 = *(_QWORD *)(v93 + 16);
      v96 = *(_QWORD *)(v93 + 24);
      if (v97 >= v96 >> 1)
      {
        v93 = sub_21194B098(v96 > 1, v97 + 1, 1, v93);
        *v71 = v93;
      }
      *(_QWORD *)(v93 + 16) = v97 + 1;
      sub_211942810(v92, v93+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(_QWORD *)(v155 + 72) * v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

      goto LABEL_59;
    }
    v98 = v146;
    if (v91 - v86 >= a4)
    {
      v102 = v138;
      sub_211934794(v146, v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v99 = v145;
      v103 = (uint64_t)v140;
    }
    else
    {
      v99 = v145;
      objc_msgSend(v147, sel_distanceFromLocation_, v145);
      v101 = v100;
      v102 = v138;
      sub_211934794(v98, v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v103 = (uint64_t)v140;
      if (v101 < a5)
      {
        v104 = v102;
        v105 = *(unsigned __int8 *)(v102 + 33);
        sub_211934758(v104, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        sub_211934794((uint64_t)v60, v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        if (v105 == 2)
        {
          v106 = *(unsigned __int8 *)(v103 + 33);
          sub_211934758(v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          if (v106 == 1)
          {
            sub_211934794(v98, v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v107 = *v71;
            v108 = swift_isUniquelyReferenced_nonNull_native();
            *v71 = v107;
            if ((v108 & 1) == 0)
            {
              v107 = sub_21194B098(0, *(_QWORD *)(v107 + 16) + 1, 1, v107);
              *v71 = v107;
            }
            v110 = *(_QWORD *)(v107 + 16);
            v109 = *(_QWORD *)(v107 + 24);
            if (v110 >= v109 >> 1)
            {
              v107 = sub_21194B098(v109 > 1, v110 + 1, 1, v107);
              *v71 = v107;
            }
            *(_QWORD *)(v107 + 16) = v110 + 1;
            v111 = v107
                 + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))
                 + *(_QWORD *)(v155 + 72) * v110;
            v112 = v133;
LABEL_58:
            sub_211942810(v112, v111, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

LABEL_59:
            sub_211934758(v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            return sub_211934758((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          }
LABEL_45:
          v113 = v137;
          sub_211934794((uint64_t)v60, v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          if (v91 + a6 >= a7)
          {
            sub_211934758(v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          }
          else
          {
            v114 = *(unsigned __int8 *)(v113 + 33);
            sub_211934758(v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            if (v114 == 2)
            {
              v115 = v134;
              sub_211934794((uint64_t)v60, v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v116 = (int *)v149;
              v117 = v135;
              v118 = v135 + *(int *)(v149 + 32);
              v119 = sub_211A4722C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v118, 1, 1, v119);
              v120 = *(_QWORD *)(v115 + 8);
              *(_QWORD *)v117 = *(_QWORD *)v115;
              *(_QWORD *)(v117 + 8) = v120;
              *(_BYTE *)(v117 + 16) = *(_BYTE *)(v115 + 16);
              v121 = *(_BYTE *)(v115 + 32);
              *(_QWORD *)(v117 + 24) = *(_QWORD *)(v115 + 24);
              *(_BYTE *)(v117 + 32) = v121;
              *(_BYTE *)(v117 + 33) = 1;
              v122 = v115 + v116[8];
              swift_bridgeObjectRetain();
              sub_21195C8F8(v122, v118);
              *(_BYTE *)(v117 + v116[9]) = *(_BYTE *)(v115 + v116[9]);
              *(_BYTE *)(v117 + v116[10]) = *(_BYTE *)(v115 + v116[10]);
              sub_21192DD68(v115 + v116[11], (uint64_t)v150, &qword_254AC8CD0);
              sub_2119AC6F0((uint64_t)v150);
              sub_211934758(v115, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              sub_21192DD68((uint64_t)v150, v117 + v116[11], &qword_254AC8CD0);
              sub_211934794(v117, v136, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              v123 = *v71;
              v124 = swift_isUniquelyReferenced_nonNull_native();
              *v71 = v123;
              if ((v124 & 1) == 0)
              {
                v123 = sub_21194B098(0, *(_QWORD *)(v123 + 16) + 1, 1, v123);
                *v71 = v123;
              }
              v125 = v147;
              v127 = *(_QWORD *)(v123 + 16);
              v126 = *(_QWORD *)(v123 + 24);
              if (v127 >= v126 >> 1)
              {
                v123 = sub_21194B098(v126 > 1, v127 + 1, 1, v123);
                *v71 = v123;
              }
              *(_QWORD *)(v123 + 16) = v127 + 1;
              sub_211942810(v136, v123+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(_QWORD *)(v155 + 72) * v127, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

              sub_211934758(v135, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
              goto LABEL_59;
            }
          }
          sub_211934794((uint64_t)v60, v141, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v128 = *v71;
          v129 = swift_isUniquelyReferenced_nonNull_native();
          *v71 = v128;
          if ((v129 & 1) == 0)
          {
            v128 = sub_21194B098(0, *(_QWORD *)(v128 + 16) + 1, 1, v128);
            *v71 = v128;
          }
          v131 = *(_QWORD *)(v128 + 16);
          v130 = *(_QWORD *)(v128 + 24);
          if (v131 >= v130 >> 1)
          {
            v128 = sub_21194B098(v130 > 1, v131 + 1, 1, v128);
            *v71 = v128;
          }
          *(_QWORD *)(v128 + 16) = v131 + 1;
          v111 = v128
               + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))
               + *(_QWORD *)(v155 + 72) * v131;
          v112 = v141;
          goto LABEL_58;
        }
LABEL_44:
        sub_211934758(v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        goto LABEL_45;
      }
    }
    sub_211934758(v102, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934794((uint64_t)v60, v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    goto LABEL_44;
  }
  sub_211923EE8((uint64_t)v19, (uint64_t *)&unk_254AC8CB0);
LABEL_21:
  v74 = (uint64_t)v147;
  sub_211934794((uint64_t)v60, (uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v75 = *v71;
  v76 = swift_isUniquelyReferenced_nonNull_native();
  *v71 = v75;
  if ((v76 & 1) == 0)
  {
    v75 = sub_21194B098(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
    *v71 = v75;
  }
  v78 = *(_QWORD *)(v75 + 16);
  v77 = *(_QWORD *)(v75 + 24);
  if (v78 >= v77 >> 1)
  {
    v75 = sub_21194B098(v77 > 1, v78 + 1, 1, v75);
    *v71 = v75;
  }
  *(_QWORD *)(v75 + 16) = v78 + 1;
  sub_211942810(v74, v75+ ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80))+ *(_QWORD *)(v155 + 72) * v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  return sub_211934758((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_21194B098(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21194B2B8(a1, a2, a3, a4, &qword_254ACA970, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_21194B0AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21194B0D8(a1, a2, a3, (_QWORD *)*v3, &qword_254ACA3C0, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  *v3 = result;
  return result;
}

uint64_t sub_21194B0D8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_211958C38(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_21194B2B8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_211958C38(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_211A48090();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21194B6D8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

unint64_t sub_21194B4C4(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_211A47EB0();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        v11 = sub_211A48348();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21194B6CC(unint64_t a1, uint64_t a2)
{
  return sub_21194B4C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_21194B6D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_21194B7F0(uint64_t a1, uint64_t a2)
{
  return sub_21193461C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation, (uint64_t (*)(char *, char *))_s7FMFCore11FMFLocationV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_21194B804(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;

  v70 = type metadata accessor for FMFLocation();
  v4 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70, v5);
  v69 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v68 = (uint64_t)&v60 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v60 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = v21 + v19;
  if (__OFADD__(v21, v19))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v20;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(v20 + 24) >> 1, v24 < v22))
  {
    if (v21 <= v22)
      v25 = v21 + v19;
    else
      v25 = v21;
    v20 = sub_21194B098(isUniquelyReferenced_nonNull_native, v25, 1, v20);
    *v1 = v20;
    v24 = *(_QWORD *)(v20 + 24) >> 1;
  }
  v26 = *(_QWORD *)(v20 + 16);
  v2 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v21 = *(_QWORD *)(v4 + 72);
  v27 = v24 - v26;
  v28 = sub_21194C208(&v71, v20 + v2 + v21 * v26, v24 - v26, a1);
  if (v28 < v19)
    goto LABEL_15;
  if (v28)
  {
    v30 = *(_QWORD *)(v20 + 16);
    v31 = __OFADD__(v30, v28);
    v32 = v30 + v28;
    if (v31)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v20 + 16) = v32;
  }
  if (v28 != v27)
    return sub_211973358();
LABEL_16:
  v20 = *(_QWORD *)(v20 + 16);
  v19 = v71;
  v29 = v73;
  v27 = v74;
  v66 = v73;
  v67 = v72;
  if (v75)
  {
    v65 = (v75 - 1) & v75;
    v34 = __clz(__rbit64(v75)) | (v74 << 6);
LABEL_18:
    sub_21193324C(*(_QWORD *)(v19 + 56) + v34 * v21, (uint64_t)v18);
    v35 = v19;
    v36 = v70;
    v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v60(v18, 0, 1, v70);
    v37 = v27;
    goto LABEL_42;
  }
LABEL_20:
  v38 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
LABEL_40:
    v19 = v16;
    goto LABEL_41;
  }
  v39 = (unint64_t)(v29 + 64) >> 6;
  v62 = v27;
  if (v38 < v39)
  {
    v40 = *(_QWORD *)(v67 + 8 * v38);
    if (v40)
    {
LABEL_23:
      v65 = (v40 - 1) & v40;
      v34 = __clz(__rbit64(v40)) + (v38 << 6);
      v27 = v38;
      goto LABEL_18;
    }
    v41 = v27 + 2;
    v62 = v27 + 1;
    if (v27 + 2 < v39)
    {
      v16 = v19;
      v40 = *(_QWORD *)(v67 + 8 * v41);
      if (v40)
      {
LABEL_26:
        v38 = v41;
        goto LABEL_23;
      }
      v62 = v27 + 2;
      if (v27 + 3 < v39)
      {
        v40 = *(_QWORD *)(v67 + 8 * (v27 + 3));
        if (v40)
        {
          v38 = v27 + 3;
          goto LABEL_23;
        }
        v41 = v27 + 4;
        v62 = v27 + 3;
        if (v27 + 4 < v39)
        {
          v40 = *(_QWORD *)(v67 + 8 * v41);
          if (v40)
            goto LABEL_26;
          v38 = v27 + 5;
          v62 = v27 + 4;
          if (v27 + 5 < v39)
          {
            v40 = *(_QWORD *)(v67 + 8 * v38);
            if (v40)
              goto LABEL_23;
            v62 = v39 - 1;
            v42 = v27 + 6;
            while (v39 != v42)
            {
              v40 = *(_QWORD *)(v67 + 8 * v42++);
              if (v40)
              {
                v38 = v42 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_40;
          }
        }
      }
    }
  }
LABEL_41:
  v35 = v19;
  v36 = v70;
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v60(v18, 1, 1, v70);
  v65 = 0;
  v37 = v62;
LABEL_42:
  v61 = v35;
  v62 = v37;
  v43 = v68;
  v71 = v35;
  v72 = v67;
  v73 = v66;
  v74 = v37;
  v75 = v65;
  sub_21192C6B8((uint64_t)v18, v68, (uint64_t *)&unk_254AC8CB0);
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v64(v43, 1, v36) == 1)
  {
LABEL_43:
    sub_211923EE8((uint64_t)v18, (uint64_t *)&unk_254AC8CB0);
    sub_211973358();
    return sub_211923EE8(v43, (uint64_t *)&unk_254AC8CB0);
  }
  v44 = v69;
  while (1)
  {
    sub_211923EE8(v43, (uint64_t *)&unk_254AC8CB0);
    v46 = *v1;
    v47 = *(_QWORD *)(*v1 + 24);
    v48 = v47 >> 1;
    if ((uint64_t)(v47 >> 1) < v20 + 1)
    {
      v46 = sub_21194B098(v47 > 1, v20 + 1, 1, *v1);
      *v1 = v46;
      v48 = *(_QWORD *)(v46 + 24) >> 1;
    }
    sub_21192C6B8((uint64_t)v18, (uint64_t)v11, (uint64_t *)&unk_254AC8CB0);
    if (v64((uint64_t)v11, 1, v70) == 1)
    {
      v43 = v68;
LABEL_83:
      sub_211923EE8((uint64_t)v11, (uint64_t *)&unk_254AC8CB0);
      v45 = v70;
      goto LABEL_46;
    }
    v63 = v46 + v2;
    sub_211973360((uint64_t)v11, v44);
    v49 = v20 < v48;
    if (v20 > v48)
      v48 = v20;
    v50 = v66;
    if (v49)
      break;
LABEL_45:
    v66 = v50;
    sub_211934758(v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v20 = v48;
    v45 = v70;
    v43 = v68;
LABEL_46:
    *(_QWORD *)(*v1 + 16) = v20;
    sub_21192C6B8((uint64_t)v18, v43, (uint64_t *)&unk_254AC8CB0);
    if (v64(v43, 1, v45) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_211923EE8((uint64_t)v18, (uint64_t *)&unk_254AC8CB0);
    result = sub_211973360(v44, v63 + v20 * v21);
    v51 = v71;
    v52 = v74;
    v66 = v73;
    v67 = v72;
    if (v75)
    {
      v65 = (v75 - 1) & v75;
      v53 = __clz(__rbit64(v75)) | (v74 << 6);
      goto LABEL_57;
    }
    v55 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    v56 = (unint64_t)(v73 + 64) >> 6;
    v57 = v74;
    if (v55 < v56)
    {
      v58 = *(_QWORD *)(v67 + 8 * v55);
      if (v58)
        goto LABEL_61;
      v57 = v74 + 1;
      if (v74 + 2 < v56)
      {
        v58 = *(_QWORD *)(v67 + 8 * (v74 + 2));
        if (v58)
        {
          v55 = v74 + 2;
          goto LABEL_61;
        }
        v57 = v74 + 2;
        if (v74 + 3 < v56)
        {
          v58 = *(_QWORD *)(v67 + 8 * (v74 + 3));
          if (v58)
          {
            v55 = v74 + 3;
            goto LABEL_61;
          }
          v57 = v74 + 3;
          if (v74 + 4 < v56)
          {
            v58 = *(_QWORD *)(v67 + 8 * (v74 + 4));
            if (v58)
            {
              v55 = v74 + 4;
LABEL_61:
              v65 = (v58 - 1) & v58;
              v53 = __clz(__rbit64(v58)) + (v55 << 6);
              v52 = v55;
LABEL_57:
              sub_21193324C(*(_QWORD *)(v71 + 56) + v53 * v21, (uint64_t)v18);
              v54 = v70;
              v60(v18, 0, 1, v70);
              goto LABEL_79;
            }
            v55 = v74 + 5;
            v57 = v74 + 4;
            if (v74 + 5 < v56)
            {
              v58 = *(_QWORD *)(v67 + 8 * v55);
              if (v58)
                goto LABEL_61;
              v59 = v74 + 6;
              while (v56 != v59)
              {
                v58 = *(_QWORD *)(v67 + 8 * v59++);
                if (v58)
                {
                  v55 = v59 - 1;
                  goto LABEL_61;
                }
              }
              v57 = v56 - 1;
            }
          }
        }
      }
    }
    v54 = v70;
    v52 = v57;
    v60(v18, 1, 1, v70);
    v65 = 0;
LABEL_79:
    ++v20;
    v61 = v51;
    v62 = v52;
    v71 = v51;
    v72 = v67;
    v50 = v66;
    v73 = v66;
    v74 = v52;
    v75 = v65;
    sub_21192C6B8((uint64_t)v18, (uint64_t)v11, (uint64_t *)&unk_254AC8CB0);
    if (v64((uint64_t)v11, 1, v54) == 1)
    {
      v43 = v68;
      v44 = v69;
      goto LABEL_83;
    }
    v44 = v69;
    sub_211973360((uint64_t)v11, v69);
    if (v20 == v48)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_21194BF50(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v35 - v18;
  v40 = a4;
  v22 = *(_QWORD *)(a4 + 64);
  v21 = a4 + 64;
  v20 = v22;
  v39 = v21;
  v23 = -1 << *(_BYTE *)(v21 - 32);
  if (-v23 < 64)
    v24 = ~(-1 << -(char)v23);
  else
    v24 = -1;
  v25 = v24 & v20;
  if (!a2)
  {
    v26 = 0;
    a3 = 0;
LABEL_38:
    v34 = v39;
    *a1 = v40;
    a1[1] = v34;
    a1[2] = ~v23;
    a1[3] = v26;
    a1[4] = v25;
    return a3;
  }
  if (!a3)
  {
    v26 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v36 = -1 << *(_BYTE *)(v21 - 32);
  v37 = a1;
  v26 = 0;
  v27 = 0;
  v38 = (unint64_t)(63 - v23) >> 6;
  v35 = v38 - 1;
  if (!v25)
    goto LABEL_9;
LABEL_8:
  v28 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  v29 = v28 | (v26 << 6);
  while (1)
  {
    ++v27;
    v33 = *(_QWORD *)(v11 + 72);
    sub_211934794(*(_QWORD *)(v40 + 56) + v33 * v29, (uint64_t)v15, a5);
    sub_211942810((uint64_t)v15, (uint64_t)v19, a5);
    result = sub_211942810((uint64_t)v19, a2, a5);
    if (v27 == a3)
      goto LABEL_37;
    a2 += v33;
    if (v25)
      goto LABEL_8;
LABEL_9:
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v30 >= v38)
      goto LABEL_32;
    v31 = *(_QWORD *)(v39 + 8 * v30);
    if (!v31)
      break;
LABEL_18:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v30 << 6);
    v26 = v30;
  }
  v26 += 2;
  if (v30 + 1 >= v38)
  {
    v25 = 0;
    v26 = v30;
    goto LABEL_36;
  }
  v31 = *(_QWORD *)(v39 + 8 * v26);
  if (v31)
    goto LABEL_14;
  v32 = v30 + 2;
  if (v30 + 2 >= v38)
    goto LABEL_32;
  v31 = *(_QWORD *)(v39 + 8 * v32);
  if (v31)
    goto LABEL_17;
  v26 = v30 + 3;
  if (v30 + 3 >= v38)
  {
    v25 = 0;
    v26 = v30 + 2;
    goto LABEL_36;
  }
  v31 = *(_QWORD *)(v39 + 8 * v26);
  if (v31)
  {
LABEL_14:
    v30 = v26;
    goto LABEL_18;
  }
  v32 = v30 + 4;
  if (v30 + 4 >= v38)
  {
LABEL_32:
    v25 = 0;
LABEL_36:
    a3 = v27;
LABEL_37:
    v23 = v36;
    a1 = v37;
    goto LABEL_38;
  }
  v31 = *(_QWORD *)(v39 + 8 * v32);
  if (v31)
  {
LABEL_17:
    v30 = v32;
    goto LABEL_18;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v38)
    {
      v25 = 0;
      v26 = v35;
      goto LABEL_36;
    }
    v31 = *(_QWORD *)(v39 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21194C208(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21194BF50(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_21194C214(_QWORD *a1)
{
  return sub_21194C8F0(a1);
}

uint64_t sub_21194C228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v46 = a2;
  v3 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v3, v4);
  v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_211958C38(&qword_254AC8B50);
  v6 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for FMFIntermediateFriend();
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (uint64_t *)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(int *)(v12 + 64);
  *((_BYTE *)v14 + v15) = 2;
  sub_211931DB4(a1, a1[3]);
  sub_21194D0D8();
  v16 = v49;
  sub_211A48360();
  if (v16)
    return sub_211931C34((uint64_t)a1);
  v44 = v15;
  v49 = v6;
  v17 = v14;
  LOBYTE(v51) = 0;
  v18 = v48;
  *v17 = sub_211A48144();
  v17[1] = v20;
  LOBYTE(v51) = 1;
  v45 = v9;
  v21 = sub_211A48144();
  v43 = a1;
  v22 = v44;
  v23 = (uint64_t)v17;
  v17[2] = v21;
  v17[3] = v24;
  sub_211958C38(&qword_254AC8378);
  v50 = 2;
  sub_21194D07C((unint64_t *)&qword_254AC8380, &qword_254AC8378, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_211A48174();
  v17[4] = v51;
  v50 = 3;
  sub_211A48174();
  v17[5] = v51;
  LOBYTE(v51) = 4;
  v17[6] = sub_211A48144();
  v17[7] = v25;
  LOBYTE(v51) = 5;
  v17[8] = sub_211A48144();
  v17[9] = v26;
  LOBYTE(v51) = 9;
  *((_BYTE *)v17 + v10[13]) = sub_211A48150() & 1;
  LOBYTE(v51) = 10;
  *((_BYTE *)v17 + v10[14]) = sub_211A48150() & 1;
  LOBYTE(v51) = 11;
  *((_BYTE *)v17 + v10[15]) = sub_211A48150() & 1;
  LOBYTE(v51) = 12;
  *((_BYTE *)v17 + v22) = sub_211A48150() & 1;
  v50 = 13;
  sub_211A48174();
  *(uint64_t *)((char *)v17 + v10[17]) = v51;
  LOBYTE(v51) = 7;
  v27 = sub_211A48180();
  v28 = (uint64_t)v47;
  v29 = (char *)v17 + v10[11];
  v30 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v27, v43);
  sub_211A471E4();

  v31 = sub_211A47208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 0, 1, v31);
  LOBYTE(v51) = 8;
  v32 = sub_211A48180();
  v33 = v49;
  if (v32 < 1)
  {
    v34 = v23 + v10[12];
    v35 = sub_211A47208();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v36 = v23 + v10[12];
    v37 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v32);
    sub_211A471E4();

    v38 = sub_211A47208();
    v33 = v49;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 0, 1, v38);
  }
  LOBYTE(v51) = 6;
  v39 = v45;
  v40 = sub_211A48180();
  v41 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v40);
  sub_211A471E4();

  (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v18);
  v42 = sub_211A47208();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v28, 0, 1, v42);
  sub_21194D214(v28, v23 + v10[10]);
  sub_21194E85C(v23, v46);
  sub_211931C34((uint64_t)v43);
  return sub_21194E820(v23);
}

uint64_t sub_21194C8F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;

  v2 = v1;
  v53 = sub_211958C38(qword_254AC8A78);
  v5 = MEMORY[0x24BDAC7A8](v53, v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v46 - v9;
  v11 = sub_211958C38(&qword_254AC8B60);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21194D0D8();
  sub_211A4836C();
  LOBYTE(v56) = 0;
  v16 = v54;
  sub_211A481B0();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v51 = v7;
  v52 = v10;
  v54 = v12;
  v56 = *(_OWORD *)(v2 + 16);
  v55 = 1;
  sub_211958C38(&qword_254AC7C58);
  sub_21194D07C((unint64_t *)&qword_254AC7C60, &qword_254AC7C58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
  sub_211A481E0();
  v18 = v11;
  *(_QWORD *)&v56 = *(_QWORD *)(v2 + 32);
  v55 = 2;
  v19 = sub_211958C38(&qword_254AC8B68);
  v20 = v2;
  v21 = sub_21194D11C();
  sub_211A481E0();
  *(_QWORD *)&v56 = *(_QWORD *)(v2 + 40);
  v55 = 3;
  sub_211A481E0();
  v49 = v19;
  v50 = v21;
  v56 = *(_OWORD *)(v2 + 48);
  v55 = 4;
  sub_211A481E0();
  v56 = *(_OWORD *)(v2 + 64);
  v55 = 5;
  sub_211A481E0();
  v48 = v18;
  v22 = (int *)type metadata accessor for FMFIntermediateFriend();
  v23 = v22[10];
  v47 = v20;
  v24 = (uint64_t)v52;
  sub_21194E8A0(v20 + v23, (uint64_t)v52);
  v25 = sub_211A47208();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25) == 1)
  {
    v28 = v25;
    sub_211923EE8(v24, qword_254AC8A78);
  }
  else
  {
    v46 = v22;
    sub_211A471D8();
    v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v31 = v30 * 1000.0;
    v32 = v30 * 1000.0 > -9.22337204e18;
    if (v30 * 1000.0 >= 9.22337204e18)
      v32 = 0;
    v33 = v32 & (v31 == trunc(v31));
    if (v33)
      v34 = (uint64_t)v31;
    else
      v34 = 0;
    *(_QWORD *)&v56 = v34;
    BYTE8(v56) = (v33 & 1) == 0;
    v55 = 6;
    sub_211958C38(&qword_254AC8BA0);
    v28 = v25;
    sub_21194D07C(&qword_254AC8BA8, &qword_254AC8BA0, MEMORY[0x24BEE4010], MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    v22 = v46;
  }
  v35 = (uint64_t)v51;
  sub_21194E8A0(v47 + v22[11], (uint64_t)v51);
  if (v27(v35, 1, v28) == 1)
  {
    sub_211923EE8(v35, qword_254AC8A78);
  }
  else
  {
    v46 = v22;
    sub_211A471D8();
    v37 = v36;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v35, v28);
    v38 = v37 * 1000.0;
    v39 = v37 * 1000.0 > -9.22337204e18;
    if (v37 * 1000.0 >= 9.22337204e18)
      v39 = 0;
    v40 = v39 & (v38 == trunc(v38));
    if (v40)
      v41 = (uint64_t)v38;
    else
      v41 = 0;
    *(_QWORD *)&v56 = v41;
    BYTE8(v56) = (v40 & 1) == 0;
    v55 = 7;
    sub_211958C38(&qword_254AC8BA0);
    sub_21194D07C(&qword_254AC8BA8, &qword_254AC8BA0, MEMORY[0x24BEE4010], MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    v22 = v46;
  }
  v42 = v47;
  LOBYTE(v56) = 8;
  sub_21194D1A0();
  v43 = v22;
  sub_211A481E0();
  LOBYTE(v56) = *(_BYTE *)(v42 + v22[13]);
  v55 = 9;
  v44 = sub_211958C38(&qword_254AC8B90);
  sub_21194D07C(&qword_254AC8B98, &qword_254AC8B90, MEMORY[0x24BEE1330], MEMORY[0x24BEE4AA8]);
  v53 = v44;
  sub_211A481E0();
  LOBYTE(v56) = *(_BYTE *)(v42 + v22[14]);
  v55 = 10;
  sub_211A481E0();
  LOBYTE(v56) = *(_BYTE *)(v42 + v22[15]);
  v55 = 11;
  sub_211A481E0();
  LOBYTE(v56) = *(_BYTE *)(v47 + v22[16]);
  v55 = 12;
  sub_211A481E0();
  v45 = v48;
  *(_QWORD *)&v56 = *(_QWORD *)(v47 + v43[17]);
  v55 = 13;
  sub_211A481E0();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v15, v45);
}

uint64_t sub_21194D07C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_21195E2C0(a2);
    v9 = a3;
    result = MEMORY[0x212BE47C8](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21194D0D8()
{
  unint64_t result;

  result = qword_254AC8B58;
  if (!qword_254AC8B58)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A864, &type metadata for FMFIntermediateFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8B58);
  }
  return result;
}

unint64_t sub_21194D11C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8B70;
  if (!qword_254AC8B70)
  {
    v1 = sub_21195E2C0(&qword_254AC8B68);
    v2 = sub_21194D07C(&qword_254AC8B78, &qword_254AC8378, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8B70);
  }
  return result;
}

unint64_t sub_21194D1A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8B80;
  if (!qword_254AC8B80)
  {
    v1 = sub_21195E2C0(qword_254AC8A78);
    v2 = sub_21194E9AC(&qword_254AC8B88, MEMORY[0x24BDCE920]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8B80);
  }
  return result;
}

uint64_t sub_21194D214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(qword_254AC8A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21194D25C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int **v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t);
  int *v185;
  int v186;
  int v187;
  int *v188;
  int v189;
  int v190;
  int *v191;
  int v192;
  int v193;
  char v194;
  int *v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int **v231;
  uint64_t v232;
  uint64_t v233;

  v213 = sub_211A47208();
  v212 = *(_QWORD *)(v213 - 8);
  MEMORY[0x24BDAC7A8](v213, v4);
  v207 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211958C38(qword_254AC8A78);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v204 = (uint64_t)&v203 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v206 = (uint64_t)&v203 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v209 = (uint64_t)&v203 - v14;
  v211 = sub_211958C38(&qword_254AC8B40);
  v16 = MEMORY[0x24BDAC7A8](v211, v15);
  v205 = (uint64_t)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v208 = (uint64_t)&v203 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v210 = (uint64_t)&v203 - v22;
  v23 = type metadata accessor for FMFIntermediateFriend();
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v221 = (uint64_t)&v203 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v222 = (uint64_t)&v203 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v220 = (uint64_t)&v203 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v223 = (uint64_t)&v203 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v219 = (char *)&v203 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v217 = (char *)&v203 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v216 = (char *)&v203 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v215 = (char *)&v203 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v218 = (char *)&v203 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v228 = (uint64_t)&v203 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v224 = (uint64_t)&v203 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v225 = (uint64_t)&v203 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58, v60);
  v233 = (uint64_t)&v203 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61, v63);
  v229 = (uint64_t)&v203 - v65;
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v226 = (uint64_t)&v203 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67, v69);
  v227 = (uint64_t)&v203 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70, v72);
  v230 = (uint64_t)&v203 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73, v75);
  v214 = (char *)&v203 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76, v78);
  v231 = (int **)((char *)&v203 - v80);
  v82 = MEMORY[0x24BDAC7A8](v79, v81);
  v232 = (uint64_t)&v203 - v83;
  v85 = MEMORY[0x24BDAC7A8](v82, v84);
  v87 = (char *)&v203 - v86;
  v89 = MEMORY[0x24BDAC7A8](v85, v88);
  v91 = (char *)&v203 - v90;
  v93 = MEMORY[0x24BDAC7A8](v89, v92);
  v95 = (char *)&v203 - v94;
  v97 = MEMORY[0x24BDAC7A8](v93, v96);
  v99 = (char *)&v203 - v98;
  v101 = MEMORY[0x24BDAC7A8](v97, v100);
  v103 = (char *)&v203 - v102;
  MEMORY[0x24BDAC7A8](v101, v104);
  v106 = (char *)&v203 - v105;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_21194E85C((uint64_t)a1, (uint64_t)&v203 - v105);
    sub_21194E85C((uint64_t)a2, (uint64_t)v103);
  }
  else
  {
    v107 = sub_211A48258();
    sub_21194E85C((uint64_t)a1, (uint64_t)v106);
    sub_21194E85C((uint64_t)a2, (uint64_t)v103);
    if ((v107 & 1) == 0)
    {
      sub_21194E820((uint64_t)v103);
      sub_21194E820((uint64_t)v106);
LABEL_15:
      v111 = v233;
      v110 = (uint64_t)v214;
      sub_21194E85C((uint64_t)a1, (uint64_t)v99);
      sub_21194E85C((uint64_t)a2, (uint64_t)v95);
      goto LABEL_16;
    }
  }
  v203 = (int *)v23;
  v108 = *((_QWORD *)v106 + 3);
  v109 = *((_QWORD *)v103 + 3);
  if (!v108)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v103);
    sub_21194E820((uint64_t)v106);
    if (!v109)
      goto LABEL_11;
    goto LABEL_14;
  }
  if (!v109)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v103);
    sub_21194E820((uint64_t)v106);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*((_QWORD *)v106 + 2) == *((_QWORD *)v103 + 2) && v108 == v109)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v103);
    sub_21194E820((uint64_t)v106);
    swift_bridgeObjectRelease();
LABEL_11:
    sub_21194E85C((uint64_t)a1, (uint64_t)v99);
    sub_21194E85C((uint64_t)a2, (uint64_t)v95);
    v110 = (uint64_t)v214;
    goto LABEL_43;
  }
  v136 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_21194E820((uint64_t)v103);
  sub_21194E820((uint64_t)v106);
  swift_bridgeObjectRelease();
  sub_21194E85C((uint64_t)a1, (uint64_t)v99);
  sub_21194E85C((uint64_t)a2, (uint64_t)v95);
  v111 = v233;
  v110 = (uint64_t)v214;
  if ((v136 & 1) == 0)
  {
LABEL_16:
    sub_21194E820((uint64_t)v95);
    sub_21194E820((uint64_t)v99);
    v112 = v229;
LABEL_17:
    sub_21194E85C((uint64_t)a1, (uint64_t)v91);
    sub_21194E85C((uint64_t)a2, (uint64_t)v87);
LABEL_18:
    sub_21194E820((uint64_t)v87);
    sub_21194E820((uint64_t)v91);
    v114 = v216;
    v113 = v217;
    v115 = v215;
LABEL_19:
    v116 = v232;
    sub_21194E85C((uint64_t)a1, v232);
    v117 = v231;
    sub_21194E85C((uint64_t)a2, (uint64_t)v231);
LABEL_20:
    sub_21194E820((uint64_t)v117);
    sub_21194E820(v116);
LABEL_21:
    v118 = (uint64_t)v113;
LABEL_22:
    v119 = (uint64_t)v115;
    sub_21194E85C((uint64_t)a1, v110);
    v120 = v230;
    sub_21194E85C((uint64_t)a2, v230);
    goto LABEL_23;
  }
LABEL_43:
  v137 = *((_QWORD *)v95 + 4);
  if (!*((_QWORD *)v99 + 4))
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v95);
    sub_21194E820((uint64_t)v99);
    if (!v137)
    {
      sub_21194E85C((uint64_t)a1, (uint64_t)v91);
      sub_21194E85C((uint64_t)a2, (uint64_t)v87);
      v112 = v229;
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  if (!v137)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v95);
    sub_21194E820((uint64_t)v99);
LABEL_50:
    swift_bridgeObjectRelease();
    v112 = v229;
    v111 = v233;
    goto LABEL_17;
  }
  v138 = sub_21194E8E8(*((_QWORD **)v99 + 4), *((_QWORD **)v95 + 4));
  swift_bridgeObjectRetain();
  sub_21194E820((uint64_t)v95);
  sub_21194E820((uint64_t)v99);
  swift_bridgeObjectRelease();
  sub_21194E85C((uint64_t)a1, (uint64_t)v91);
  sub_21194E85C((uint64_t)a2, (uint64_t)v87);
  v112 = v229;
  v111 = v233;
  if ((v138 & 1) == 0)
    goto LABEL_18;
LABEL_52:
  v139 = *((_QWORD *)v87 + 5);
  if (!*((_QWORD *)v91 + 5))
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v87);
    sub_21194E820((uint64_t)v91);
    if (!v139)
    {
      v116 = v232;
      sub_21194E85C((uint64_t)a1, v232);
      v117 = v231;
      sub_21194E85C((uint64_t)a2, (uint64_t)v231);
      v114 = v216;
      v113 = v217;
      v115 = v215;
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if (!v139)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v87);
    sub_21194E820((uint64_t)v91);
LABEL_59:
    swift_bridgeObjectRelease();
    v114 = v216;
    v113 = v217;
    v115 = v215;
    v111 = v233;
    goto LABEL_19;
  }
  LODWORD(v214) = sub_21194E8E8(*((_QWORD **)v91 + 5), *((_QWORD **)v87 + 5));
  swift_bridgeObjectRetain();
  sub_21194E820((uint64_t)v87);
  sub_21194E820((uint64_t)v91);
  swift_bridgeObjectRelease();
  v116 = v232;
  sub_21194E85C((uint64_t)a1, v232);
  v117 = v231;
  sub_21194E85C((uint64_t)a2, (uint64_t)v231);
  v114 = v216;
  v113 = v217;
  v115 = v215;
  v111 = v233;
  if ((v214 & 1) == 0)
    goto LABEL_20;
LABEL_61:
  v140 = *(_QWORD *)(v116 + 56);
  v141 = v117[7];
  if (!v140)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v117);
    sub_21194E820(v116);
    v118 = (uint64_t)v113;
    if (!v141)
      goto LABEL_68;
    swift_bridgeObjectRelease();
    v111 = v233;
    goto LABEL_22;
  }
  if (!v141)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v117);
    sub_21194E820(v116);
    swift_bridgeObjectRelease();
    v111 = v233;
    goto LABEL_21;
  }
  if (*(_QWORD *)(v116 + 48) == v117[6] && v140 == v141)
  {
    swift_bridgeObjectRetain();
    sub_21194E820((uint64_t)v231);
    sub_21194E820(v232);
    swift_bridgeObjectRelease();
    v118 = (uint64_t)v113;
LABEL_68:
    sub_21194E85C((uint64_t)a1, v110);
    v120 = v230;
    sub_21194E85C((uint64_t)a2, v230);
    v119 = (uint64_t)v115;
    goto LABEL_71;
  }
  LODWORD(v217) = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_21194E820((uint64_t)v231);
  sub_21194E820(v232);
  swift_bridgeObjectRelease();
  sub_21194E85C((uint64_t)a1, v110);
  v120 = v230;
  sub_21194E85C((uint64_t)a2, v230);
  v111 = v233;
  v118 = (uint64_t)v113;
  v119 = (uint64_t)v115;
  if ((v217 & 1) == 0)
  {
LABEL_23:
    sub_21194E820(v120);
    sub_21194E820(v110);
LABEL_24:
    v121 = v227;
    sub_21194E85C((uint64_t)a1, v227);
    v122 = v226;
    sub_21194E85C((uint64_t)a2, v226);
    goto LABEL_25;
  }
LABEL_71:
  v142 = *(_QWORD *)(v110 + 72);
  v143 = *(_QWORD *)(v120 + 72);
  if (!v142)
  {
    swift_bridgeObjectRetain();
    sub_21194E820(v120);
    sub_21194E820(v110);
    if (!v143)
      goto LABEL_77;
    goto LABEL_79;
  }
  if (!v143)
  {
    swift_bridgeObjectRetain();
    sub_21194E820(v120);
    sub_21194E820(v110);
LABEL_79:
    swift_bridgeObjectRelease();
    v111 = v233;
    goto LABEL_24;
  }
  if (*(_QWORD *)(v110 + 64) == *(_QWORD *)(v120 + 64) && v142 == v143)
  {
    swift_bridgeObjectRetain();
    sub_21194E820(v230);
    sub_21194E820(v110);
    swift_bridgeObjectRelease();
LABEL_77:
    v121 = v227;
    sub_21194E85C((uint64_t)a1, v227);
    v122 = v226;
    sub_21194E85C((uint64_t)a2, v226);
    goto LABEL_81;
  }
  LODWORD(v232) = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_21194E820(v230);
  sub_21194E820(v110);
  swift_bridgeObjectRelease();
  v121 = v227;
  sub_21194E85C((uint64_t)a1, v227);
  v122 = v226;
  sub_21194E85C((uint64_t)a2, v226);
  v111 = v233;
  if ((v232 & 1) == 0)
  {
LABEL_25:
    sub_21194E820(v122);
    sub_21194E820(v121);
    v123 = v228;
LABEL_26:
    sub_21194E85C((uint64_t)a1, v112);
    sub_21194E85C((uint64_t)a2, v111);
    v124 = (uint64_t)v114;
LABEL_27:
    sub_21194E820(v111);
    sub_21194E820(v112);
    v125 = v225;
    v126 = (uint64_t)v218;
LABEL_28:
    sub_21194E85C((uint64_t)a1, v125);
    v127 = v224;
    sub_21194E85C((uint64_t)a2, v224);
LABEL_29:
    sub_21194E820(v127);
    sub_21194E820(v125);
    v128 = (uint64_t)v219;
LABEL_30:
    sub_21194E85C((uint64_t)a1, v123);
    sub_21194E85C((uint64_t)a2, v126);
LABEL_31:
    sub_21194E820(v126);
    sub_21194E820(v123);
    goto LABEL_32;
  }
LABEL_81:
  v144 = v203[10];
  v232 = v122 + v144;
  v145 = v210;
  v146 = v210 + *(int *)(v211 + 48);
  sub_21194E8A0(v121 + v144, v210);
  v147 = v232;
  v232 = v146;
  sub_21194E8A0(v147, v146);
  v148 = *(int ***)(v212 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v148)(v145, 1, v213) == 1)
  {
    sub_21194E820(v122);
    sub_21194E820(v121);
    v149 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v148)(v232, 1, v213);
    v123 = v228;
    v150 = v145;
    if (v149 == 1)
    {
      sub_211923EE8(v145, qword_254AC8A78);
      sub_21194E85C((uint64_t)a1, v112);
      v111 = v233;
      sub_21194E85C((uint64_t)a2, v233);
      v124 = (uint64_t)v114;
      goto LABEL_88;
    }
    goto LABEL_86;
  }
  v151 = v209;
  sub_21194E8A0(v145, v209);
  v231 = v148;
  v150 = v145;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v148)(v232, 1, v213) == 1)
  {
    sub_21194E820(v226);
    sub_21194E820(v227);
    (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v151, v213);
    v123 = v228;
LABEL_86:
    sub_211923EE8(v150, &qword_254AC8B40);
    v111 = v233;
    goto LABEL_26;
  }
  v152 = v207;
  v153 = v213;
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v207, v232, v213);
  sub_21194E9AC((unint64_t *)&qword_254AC8B48, MEMORY[0x24BDCE958]);
  LODWORD(v232) = sub_211A478E0();
  v154 = v151;
  v155 = *(void (**)(char *, uint64_t))(v212 + 8);
  v156 = v152;
  v112 = v229;
  v155(v156, v153);
  sub_21194E820(v226);
  sub_21194E820(v227);
  v155((char *)v154, v153);
  sub_211923EE8(v150, qword_254AC8A78);
  sub_21194E85C((uint64_t)a1, v112);
  v111 = v233;
  sub_21194E85C((uint64_t)a2, v233);
  v123 = v228;
  v124 = (uint64_t)v114;
  v148 = v231;
  if ((v232 & 1) == 0)
    goto LABEL_27;
LABEL_88:
  v157 = v203[11];
  v158 = v112 + v157;
  v159 = v111 + v157;
  v160 = v208;
  v161 = v208 + *(int *)(v211 + 48);
  sub_21194E8A0(v158, v208);
  v232 = v161;
  sub_21194E8A0(v159, v161);
  v162 = v213;
  v163 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v148)(v160, 1, v213);
  v126 = (uint64_t)v218;
  if (v163 == 1)
  {
    sub_21194E820(v111);
    sub_21194E820(v229);
    v164 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v148)(v232, 1, v162);
    v123 = v228;
    if (v164 == 1)
    {
      sub_211923EE8(v160, qword_254AC8A78);
      v125 = v225;
      sub_21194E85C((uint64_t)a1, v225);
      v127 = v224;
      sub_21194E85C((uint64_t)a2, v224);
      goto LABEL_95;
    }
    goto LABEL_93;
  }
  v165 = v206;
  sub_21194E8A0(v160, v206);
  v231 = v148;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v148)(v232, 1, v162) == 1)
  {
    sub_21194E820(v233);
    sub_21194E820(v229);
    (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v165, v162);
    v123 = v228;
LABEL_93:
    sub_211923EE8(v160, &qword_254AC8B40);
    v125 = v225;
    goto LABEL_28;
  }
  v166 = v207;
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v207, v232, v162);
  sub_21194E9AC((unint64_t *)&qword_254AC8B48, MEMORY[0x24BDCE958]);
  v167 = v165;
  v168 = v162;
  LODWORD(v232) = sub_211A478E0();
  v169 = *(void (**)(char *, uint64_t))(v212 + 8);
  v169(v166, v168);
  sub_21194E820(v233);
  sub_21194E820(v229);
  v169((char *)v167, v168);
  sub_211923EE8(v208, qword_254AC8A78);
  v125 = v225;
  sub_21194E85C((uint64_t)a1, v225);
  v127 = v224;
  sub_21194E85C((uint64_t)a2, v224);
  v123 = v228;
  v148 = v231;
  if ((v232 & 1) == 0)
    goto LABEL_29;
LABEL_95:
  v231 = v148;
  v170 = v203[12];
  v233 = v127 + v170;
  v171 = v205;
  v172 = v205 + *(int *)(v211 + 48);
  sub_21194E8A0(v125 + v170, v205);
  v173 = v233;
  v233 = v172;
  sub_21194E8A0(v173, v172);
  v174 = v171;
  v175 = v171;
  v176 = v213;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v231)(v175, 1, v213) == 1)
  {
    sub_21194E820(v127);
    sub_21194E820(v125);
    v177 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v231)(v233, 1, v176);
    v128 = (uint64_t)v219;
    v123 = v228;
    v178 = v174;
    if (v177 == 1)
    {
      sub_211923EE8(v174, qword_254AC8A78);
      sub_21194E85C((uint64_t)a1, v123);
      sub_21194E85C((uint64_t)a2, v126);
      goto LABEL_102;
    }
    goto LABEL_100;
  }
  v178 = v174;
  v179 = v204;
  sub_21194E8A0(v174, v204);
  v180 = v233;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v231)(v233, 1, v176) == 1)
  {
    sub_21194E820(v224);
    sub_21194E820(v225);
    (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v179, v176);
    v128 = (uint64_t)v219;
    v123 = v228;
LABEL_100:
    sub_211923EE8(v178, &qword_254AC8B40);
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v207, v180, v176);
  sub_21194E9AC((unint64_t *)&qword_254AC8B48, MEMORY[0x24BDCE958]);
  v181 = v207;
  LODWORD(v233) = sub_211A478E0();
  v182 = v179;
  v183 = v176;
  v184 = *(void (**)(char *, uint64_t))(v212 + 8);
  v184(v181, v183);
  sub_21194E820(v224);
  sub_21194E820(v225);
  v184((char *)v182, v183);
  sub_211923EE8(v205, qword_254AC8A78);
  v123 = v228;
  sub_21194E85C((uint64_t)a1, v228);
  sub_21194E85C((uint64_t)a2, v126);
  v128 = (uint64_t)v219;
  if ((v233 & 1) == 0)
    goto LABEL_31;
LABEL_102:
  v185 = v203;
  v186 = *(unsigned __int8 *)(v123 + v203[13]);
  sub_21194E820(v123);
  v187 = *(unsigned __int8 *)(v126 + v185[13]);
  sub_21194E820(v126);
  if (v186 == 2)
  {
    if (v187 == 2)
    {
      sub_21194E85C((uint64_t)a1, v119);
      sub_21194E85C((uint64_t)a2, v124);
      goto LABEL_107;
    }
    goto LABEL_32;
  }
  if (v187 == 2)
  {
LABEL_32:
    sub_21194E85C((uint64_t)a1, v119);
    sub_21194E85C((uint64_t)a2, v124);
LABEL_33:
    sub_21194E820(v124);
    sub_21194E820(v119);
    goto LABEL_34;
  }
  sub_21194E85C((uint64_t)a1, v119);
  sub_21194E85C((uint64_t)a2, v124);
  if (((((v186 & 1) == 0) ^ v187) & 1) == 0)
    goto LABEL_33;
LABEL_107:
  v188 = v203;
  v189 = *(unsigned __int8 *)(v119 + v203[14]);
  sub_21194E820(v119);
  v190 = *(unsigned __int8 *)(v124 + v188[14]);
  sub_21194E820(v124);
  if (v189 == 2)
  {
    if (v190 == 2)
    {
      sub_21194E85C((uint64_t)a1, v118);
      sub_21194E85C((uint64_t)a2, v128);
      goto LABEL_112;
    }
    goto LABEL_34;
  }
  if (v190 == 2)
  {
LABEL_34:
    sub_21194E85C((uint64_t)a1, v118);
    sub_21194E85C((uint64_t)a2, v128);
    v129 = v223;
LABEL_35:
    sub_21194E820(v128);
    sub_21194E820(v118);
    goto LABEL_36;
  }
  sub_21194E85C((uint64_t)a1, v118);
  sub_21194E85C((uint64_t)a2, v128);
  v129 = v223;
  if (((((v189 & 1) == 0) ^ v190) & 1) == 0)
    goto LABEL_35;
LABEL_112:
  v191 = v203;
  v192 = *(unsigned __int8 *)(v118 + v203[15]);
  sub_21194E820(v118);
  v193 = *(unsigned __int8 *)(v128 + v191[15]);
  sub_21194E820(v128);
  if (v192 == 2)
  {
    v129 = v223;
    if (v193 == 2)
    {
      sub_21194E85C((uint64_t)a1, v223);
      v130 = v220;
      sub_21194E85C((uint64_t)a2, v220);
      goto LABEL_117;
    }
    goto LABEL_36;
  }
  v129 = v223;
  if (v193 == 2)
  {
LABEL_36:
    sub_21194E85C((uint64_t)a1, v129);
    v130 = v220;
    sub_21194E85C((uint64_t)a2, v220);
LABEL_37:
    sub_21194E820(v130);
    sub_21194E820(v129);
    goto LABEL_38;
  }
  v194 = ((v192 & 1) == 0) ^ v193;
  sub_21194E85C((uint64_t)a1, v223);
  v130 = v220;
  sub_21194E85C((uint64_t)a2, v220);
  if ((v194 & 1) == 0)
    goto LABEL_37;
LABEL_117:
  v195 = v203;
  v196 = *(unsigned __int8 *)(v129 + v203[16]);
  sub_21194E820(v129);
  v197 = v130;
  v198 = *(unsigned __int8 *)(v130 + v195[16]);
  sub_21194E820(v197);
  if (v196 == 2)
  {
    if (v198 == 2)
    {
      v199 = (uint64_t)a1;
      v132 = v222;
      sub_21194E85C(v199, v222);
      v133 = v221;
      sub_21194E85C((uint64_t)a2, v221);
      goto LABEL_122;
    }
    goto LABEL_38;
  }
  if (v198 == 2)
  {
LABEL_38:
    v131 = (uint64_t)a1;
    v132 = v222;
    sub_21194E85C(v131, v222);
    v133 = v221;
    sub_21194E85C((uint64_t)a2, v221);
LABEL_39:
    sub_21194E820(v133);
    sub_21194E820(v132);
LABEL_40:
    LOBYTE(v134) = 0;
    return v134 & 1;
  }
  v200 = ((v196 & 1) == 0) ^ v198;
  v201 = (uint64_t)a1;
  v132 = v222;
  sub_21194E85C(v201, v222);
  v133 = v221;
  sub_21194E85C((uint64_t)a2, v221);
  if ((v200 & 1) == 0)
    goto LABEL_39;
LABEL_122:
  v202 = v203[17];
  v134 = *(_QWORD *)(v133 + v202);
  if (!*(_QWORD *)(v132 + v202))
  {
    swift_bridgeObjectRetain();
    sub_21194E820(v221);
    sub_21194E820(v222);
    if (!v134)
    {
      LOBYTE(v134) = 1;
      return v134 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (v134)
    LOBYTE(v134) = sub_21194E8E8(*(_QWORD **)(v132 + v202), *(_QWORD **)(v133 + v202));
  swift_bridgeObjectRetain();
  sub_21194E820(v221);
  sub_21194E820(v222);
  swift_bridgeObjectRelease();
  return v134 & 1;
}

uint64_t sub_21194E820(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21194E85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21194E8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(qword_254AC8A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21194E8E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_211A48258(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_211A48258() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21194E9AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_211A47208();
    result = MEMORY[0x212BE47C8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21194E9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[56];

  v6 = type metadata accessor for FMFFriend();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (uint64_t *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
    v30 = MEMORY[0x24BEE4B00];
    goto LABEL_17;
  }
  v37 = a1;
  v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v41 = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain();
  v42 = MEMORY[0x24BEE4B00];
  v39 = a2;
  v40 = a3;
  do
  {
    sub_21194ED7C(v16, (uint64_t)v10);
    v21 = *v10;
    v20 = v10[1];
    if (*(_QWORD *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      v22 = sub_21195BB68(v21, v20);
      if ((v23 & 1) != 0)
      {
        v24 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 56 * v22);
        v26 = *v24;
        v25 = v24[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v27 = sub_2119E0430(v26, v25, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27)
        {
          v28 = v27;
          v29 = sub_2119E0D94((uint64_t)v10, v28);

          a2 = v39;
          a3 = v40;
          if ((v29 & 1) != 0)
            goto LABEL_3;
        }
        else
        {
          a2 = v39;
          a3 = v40;
        }
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    v27 = 0;
LABEL_12:
    v28 = sub_21194EDC0((uint64_t)v10, 0);

    if (v28)
    {
LABEL_3:
      v17 = v28;
      sub_2119DF2AC(v17, (uint64_t)v44);
      swift_bridgeObjectRetain();
      v18 = v42;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v43 = v18;
      sub_211A4441C((uint64_t)v44, v21, v20, isUniquelyReferenced_nonNull_native);
      v42 = v43;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_21194ED40((uint64_t)v10);
    v16 += v41;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  v30 = v42;
  v14 = v38;
LABEL_17:
  sub_211A471FC();
  v31 = sub_211A47208();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 0, 1, v31);
  v32 = a3 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate;
  swift_beginAccess();
  sub_21195CCB4((uint64_t)v14, v32);
  swift_endAccess();
  v33 = swift_bridgeObjectRetain();
  LOBYTE(v32) = sub_21195C940(v33, a2);
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0 || !MEMORY[0x212BE496C](a3 + 40))
    return swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(a3 + 48);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v30, ObjectType, v34);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_21194ED40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21194ED7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_21194EDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void **v14;
  __int128 v15;
  void *v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  char **v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  unint64_t v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  id v60[3];

  v60[2] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  v9 = sub_21194FDA0(v8);
  swift_bridgeObjectRelease();
  v60[0] = v9;
  sub_21194F584((uint64_t *)v60);
  swift_bridgeObjectRelease();
  v10 = (char *)v60[0];
  v11 = *((_QWORD *)v60[0] + 2);
  if (!v11)
  {
LABEL_19:
    swift_release();
    return 0;
  }
  v12 = *(void **)(v54 + 56);
  v13 = sub_211A47274();
  v49 = v10;
  v14 = (void **)(v10 + 40);
  v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v56 = v13;
  *(_QWORD *)&v15 = 136315138;
  v51 = v15;
  v50 = MEMORY[0x24BEE4AD8] + 8;
  v52 = a2;
  v53 = v7;
  while (1)
  {
    v16 = *v14;
    v60[0] = *(v14 - 1);
    v60[1] = v16;
    v58 = 64;
    v59 = 0xE100000000000000;
    v55(v7, 1, 1, v56);
    sub_21194FDB4();
    swift_bridgeObjectRetain();
    sub_211A47E74();
    v18 = v17;
    sub_211923EE8((uint64_t)v7, &qword_254AC9200);
    swift_bridgeObjectRelease();
    v19 = (void *)objc_opt_self();
    if ((v18 & 1) != 0)
    {
      v22 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
      v23 = (void *)sub_211A478EC();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v22, sel_initWithStringValue_, v23, v49, v50);

      v21 = &selRef_predicateForContactsMatchingPhoneNumber_;
    }
    else
    {
      v20 = (id)sub_211A478EC();
      swift_bridgeObjectRelease();
      v21 = &selRef_predicateForContactsMatchingEmailAddress_;
    }
    v24 = objc_msgSend(v19, *v21, v20, v49, v50);

    if (!a2)
      sub_21194FDF8();
    swift_bridgeObjectRetain();
    sub_211958C38(&qword_254AC8CD8);
    v25 = (void *)sub_211A47A90();
    swift_bridgeObjectRelease();
    v60[0] = 0;
    v26 = objc_msgSend(v12, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v24, v25, v60);

    v27 = v60[0];
    if (v26)
      break;
    v28 = v27;
    v57 = v24;
    v29 = (void *)sub_211A470DC();

    swift_willThrow();
    if (qword_254AC7B80 != -1)
      swift_once();
    v30 = sub_211A47748();
    sub_21194F3E0(v30, (uint64_t)qword_254ADC7E8);
    v31 = v29;
    v32 = v29;
    v33 = sub_211A47724();
    v34 = sub_211A47D30();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v60[0] = v36;
      *(_DWORD *)v35 = v51;
      v58 = (uint64_t)v29;
      v37 = v29;
      sub_211958C38(&qword_254ACC360);
      v38 = sub_211A47928();
      *(_QWORD *)(v35 + 4) = sub_211950A9C(v38, v39, (uint64_t *)v60);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v33, v34, "Error getting contact - %s", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      v40 = v36;
      a2 = v52;
      v7 = v53;
      MEMORY[0x212BE48A0](v40, -1, -1);
      MEMORY[0x212BE48A0](v35, -1, -1);

    }
    else
    {

    }
    v14 += 2;
    if (!--v11)
      goto LABEL_19;
  }
  swift_release();
  sub_211911824(0, &qword_254ACC368);
  v41 = sub_211A47AA8();

  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v44)
      goto LABEL_18;
    goto LABEL_23;
  }
  if (!*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    if (qword_254AC7B80 != -1)
      swift_once();
    v45 = sub_211A47748();
    sub_21194F3E0(v45, (uint64_t)qword_254ADC7E8);
    v46 = sub_211A47724();
    v47 = sub_211A47D30();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_21190D000, v46, v47, "No contact found in store", v48, 2u);
      MEMORY[0x212BE48A0](v48, -1, -1);

    }
    else
    {

    }
    return 0;
  }
LABEL_18:
  v42 = sub_2119E0A70(v41);
  swift_bridgeObjectRelease();

  return v42;
}

uint64_t sub_21194F3E0(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t FMFFriend.name.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v10;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1])
    goto LABEL_6;
  v2 = v1[2];
  v3 = v1[3];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    v5 = *(_QWORD *)(v0 + 32);
    swift_bridgeObjectRetain_n();
    v6 = sub_211950FCC(v5, (uint64_t *)&unk_254ACC540, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_2119510B4);
    swift_bridgeObjectRelease();
    v10 = v6;
    sub_21194F584((uint64_t *)&v10);
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      v2 = v10[4];
      swift_bridgeObjectRetain();
      swift_release();
      if (qword_254AC7B58 != -1)
        swift_once();
      v7 = qword_254ADC738;
      v8 = (void *)sub_211A478EC();
      LOBYTE(v7) = objc_msgSend((id)v7, sel_evaluateWithObject_, v8);

      if ((v7 & 1) == 0)
      {
        v2 = sub_211A03AE0(v2);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
      return 0xD000000000000014;
    }
  }
  return v2;
}

uint64_t sub_21194F584(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2119BA448(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_21194F5EC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21194F5EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_211A48204();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_21194FCD4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_2119A5784((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_2119BA434((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_211A47AFC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_211A48258();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_211A48258()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_2119BA0CC(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_2119BA0CC((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_2119A5784((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_211A48258() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_211A48090();
  __break(1u);
  return result;
}

uint64_t sub_21194FCD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_211A48258(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

_QWORD *sub_21194FDA0(uint64_t a1)
{
  return sub_211950FCC(a1, (uint64_t *)&unk_254ACC540, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_2119510B4);
}

unint64_t sub_21194FDB4()
{
  unint64_t result;

  result = qword_254ACC370;
  if (!qword_254ACC370)
  {
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254ACC370);
  }
  return result;
}

uint64_t sub_21194FDF8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_BYTE *)(v0 + 32);
  sub_211958C38((uint64_t *)&unk_254ACDE80);
  v2 = swift_allocObject();
  if ((v1 & 1) != 0)
  {
    *(_OWORD *)(v2 + 16) = xmmword_211A4F680;
    v34 = (void *)*MEMORY[0x24BDBA2C8];
    v3 = *MEMORY[0x24BDBA2C8];
    v35 = (void *)*MEMORY[0x24BDBA318];
    *(_QWORD *)(v2 + 32) = *MEMORY[0x24BDBA318];
    *(_QWORD *)(v2 + 40) = v3;
    v32 = (void *)*MEMORY[0x24BDBA2C0];
    v4 = *MEMORY[0x24BDBA2C0];
    v33 = (void *)*MEMORY[0x24BDBA310];
    *(_QWORD *)(v2 + 48) = *MEMORY[0x24BDBA310];
    *(_QWORD *)(v2 + 56) = v4;
    v5 = (void *)*MEMORY[0x24BDBA380];
    v6 = (void *)*MEMORY[0x24BDBA320];
    *(_QWORD *)(v2 + 64) = *MEMORY[0x24BDBA380];
    *(_QWORD *)(v2 + 72) = v6;
    v7 = (id)*MEMORY[0x24BDBA328];
    v8 = (void *)*MEMORY[0x24BDBA2E8];
    *(_QWORD *)(v2 + 80) = *MEMORY[0x24BDBA328];
    *(_QWORD *)(v2 + 88) = v8;
    v9 = (void *)*MEMORY[0x24BDBA3F0];
    v10 = (void *)*MEMORY[0x24BDBA3E8];
    *(_QWORD *)(v2 + 96) = *MEMORY[0x24BDBA3F0];
    *(_QWORD *)(v2 + 104) = v10;
    v11 = (void *)*MEMORY[0x24BDBA288];
    *(_QWORD *)(v2 + 112) = v7;
    *(_QWORD *)(v2 + 120) = v11;
    v12 = (void *)*MEMORY[0x24BDBA348];
    *(_QWORD *)(v2 + 128) = *MEMORY[0x24BDBA348];
    v36 = v2;
    sub_211A47AC0();
    v13 = v36;
    v14 = v7;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = xmmword_211A4F670;
    v14 = (void *)*MEMORY[0x24BDBA318];
    v15 = (void *)*MEMORY[0x24BDBA2C8];
    *(_QWORD *)(v2 + 32) = *MEMORY[0x24BDBA318];
    *(_QWORD *)(v2 + 40) = v15;
    v35 = v15;
    v33 = (void *)*MEMORY[0x24BDBA2C0];
    v16 = *MEMORY[0x24BDBA2C0];
    v34 = (void *)*MEMORY[0x24BDBA310];
    *(_QWORD *)(v2 + 48) = *MEMORY[0x24BDBA310];
    *(_QWORD *)(v2 + 56) = v16;
    v5 = (void *)*MEMORY[0x24BDBA320];
    v32 = (void *)*MEMORY[0x24BDBA380];
    *(_QWORD *)(v2 + 64) = *MEMORY[0x24BDBA380];
    *(_QWORD *)(v2 + 72) = v5;
    v17 = (void *)*MEMORY[0x24BDBA328];
    v6 = (void *)*MEMORY[0x24BDBA2E8];
    *(_QWORD *)(v2 + 80) = *MEMORY[0x24BDBA328];
    *(_QWORD *)(v2 + 88) = v6;
    v8 = (void *)*MEMORY[0x24BDBA3F0];
    v9 = (void *)*MEMORY[0x24BDBA2F0];
    *(_QWORD *)(v2 + 96) = *MEMORY[0x24BDBA3F0];
    *(_QWORD *)(v2 + 104) = v9;
    v10 = (void *)*MEMORY[0x24BDBA3E8];
    *(_QWORD *)(v2 + 112) = *MEMORY[0x24BDBA3E8];
    *(_QWORD *)(v2 + 120) = v17;
    v11 = (void *)*MEMORY[0x24BDBA288];
    v12 = (void *)*MEMORY[0x24BDBA348];
    *(_QWORD *)(v2 + 128) = *MEMORY[0x24BDBA288];
    *(_QWORD *)(v2 + 136) = v12;
    v37 = v2;
    sub_211A47AC0();
    v13 = v37;
    v7 = v17;
  }
  v18 = v7;
  v19 = v14;
  v20 = v35;
  v21 = v34;
  v22 = v33;
  v23 = v32;
  v24 = v5;
  v25 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v11;
  v30 = v12;
  return v13;
}

uint64_t sub_21195006C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _QWORD v99[45];
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  _BYTE v104[360];
  uint64_t v105;
  unint64_t v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  _QWORD *v110;

  v94 = a3;
  v95 = a5;
  v9 = sub_211A47208();
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v90 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v12, v13);
  v93 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for FMFFriend();
  v15 = *(_QWORD *)(v96 - 8);
  v17 = MEMORY[0x24BDAC7A8](v96, v16);
  v19 = (uint64_t *)((char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17, v20);
  v89 = (uint64_t)&v86 - v21;
  v97 = type metadata accessor for FMFLocation();
  MEMORY[0x24BDAC7A8](v97, v22);
  v24 = (uint64_t *)((char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_211934794(a1, (uint64_t)v24, v25);
  v26 = v24[1];
  if (!v26)
    return sub_211934758((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v87 = a4;
  v88 = v5;
  v110 = v24;
  v27 = *v24;
  v105 = 91;
  v106 = 0xE100000000000000;
  sub_211A479B8();
  v108 = v105;
  v109 = v106;
  v28 = *(_QWORD *)(a2 + 16);
  if (v28)
  {
    v29 = a2;
    v30 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v31 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    v86 = v29;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_211934794(v30, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v32 = v27 == *v19 && v26 == v19[1];
      if (v32 || (sub_211A48258() & 1) != 0)
        break;
      sub_211934758((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v30 += v31;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        v33 = 1;
        v34 = v93;
        v35 = v94;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    v34 = v93;
    sub_211942810((uint64_t)v19, v93, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v33 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = 1;
    v34 = v93;
  }
  v35 = v94;
LABEL_15:
  v37 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v34, v33, 1, v96);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v34, 1, v37) == 1)
  {
    sub_211923EE8(v34, &qword_254AC8870);
    v38 = (uint64_t)v110;
  }
  else
  {
    v39 = v89;
    sub_211942810(v34, v89, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v40 = (_QWORD *)(v39 + *(int *)(v37 + 76));
    if (v40[1])
    {
      v41 = v40[5];
      v42 = v40[6];
      v43 = HIBYTE(v42) & 0xF;
      if ((v42 & 0x2000000000000000) == 0)
        v43 = v41 & 0xFFFFFFFFFFFFLL;
      if (v43)
        swift_bridgeObjectRetain();
    }
    v105 = 47;
    v106 = 0xE100000000000000;
    sub_211A479B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_211A479B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211A479B8();
    swift_bridgeObjectRelease();
    sub_211934758(v39, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v38 = (uint64_t)v110;
  }
  sub_211A479B8();
  v44 = v38 + *(int *)(v97 + 44);
  sub_21192DD68(v44, (uint64_t)v104, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v104, (uint64_t)&v105, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)&v105) != 1)
  {
    v50 = v107;
    v51 = objc_msgSend(v50, sel_timestamp);
    v52 = v90;
    sub_211A471E4();

    v53 = (void *)sub_211A471A8();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v52, v92);
    v54 = v38;
    v55 = objc_msgSend(v35, sel_stringFromDate_, v53);

    v56 = sub_211A47910();
    v58 = v57;

    v100 = 0;
    v101 = 0xE000000000000000;
    sub_211A47F70();
    swift_bridgeObjectRelease();
    v100 = 0x100000000000002ELL;
    v101 = 0x8000000211A56B30;
    LOBYTE(v99[0]) = *(_BYTE *)(v54 + 33);
    sub_211A47928();
    sub_211A479B8();
    swift_bridgeObjectRelease();
    v96 = v100;
    v97 = v101;
    sub_211958C38(&qword_254ACC560);
    v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_211A4D750;
    objc_msgSend(v50, sel_coordinate);
    v60 = MEMORY[0x24BEE13C8];
    v61 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v59 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v59 + 64) = v61;
    *(_QWORD *)(v59 + 32) = v62;
    objc_msgSend(v50, sel_coordinate);
    *(_QWORD *)(v59 + 96) = v60;
    *(_QWORD *)(v59 + 104) = v61;
    *(_QWORD *)(v59 + 72) = v63;
    v64 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v59 + 136) = MEMORY[0x24BEE0D00];
    v65 = sub_2119512B0();
    *(_QWORD *)(v59 + 144) = v65;
    *(_QWORD *)(v59 + 112) = v56;
    *(_QWORD *)(v59 + 120) = v58;
    sub_21192DD68(v44, (uint64_t)v99, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v99, (uint64_t)&v100, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)&v100) == 1 || (v66 = v103) == 0)
    {
      v72 = (_QWORD *)(v59 + 152);
      *(_QWORD *)(v59 + 176) = v64;
      *(_QWORD *)(v59 + 184) = v65;
      v38 = (uint64_t)v110;
    }
    else
    {
      v67 = v102;
      v68 = sub_211A47934();
      v70 = v69;
      swift_bridgeObjectRetain();
      v71._countAndFlagsBits = v68;
      v71._object = v70;
      FMFDefaultLabel.init(rawValue:)(v71);
      if (v98 == 5)
      {
        v72 = (_QWORD *)(v59 + 152);
        *(_QWORD *)(v59 + 176) = v64;
        *(_QWORD *)(v59 + 184) = v65;
        v38 = (uint64_t)v110;
LABEL_33:
        *v72 = v67;
        goto LABEL_34;
      }
      FMFDefaultLabel.localizedLabel.getter();
      v67 = v73;
      v75 = v74;
      swift_bridgeObjectRelease();
      v72 = (_QWORD *)(v59 + 152);
      *(_QWORD *)(v59 + 176) = v64;
      *(_QWORD *)(v59 + 184) = v65;
      if (v75)
      {
        v66 = v75;
        v38 = (uint64_t)v110;
        goto LABEL_33;
      }
      v38 = (uint64_t)v110;
    }
    *v72 = 7104878;
    v66 = 0xE300000000000000;
LABEL_34:
    v49 = v95;
    *(_QWORD *)(v59 + 160) = v66;
    v46 = sub_211A4791C();
    v48 = v76;
    swift_bridgeObjectRelease();

    goto LABEL_35;
  }
  v100 = 0;
  v101 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v100 = 0x1000000000000023;
  v101 = 0x8000000211A56B00;
  LOBYTE(v99[0]) = *(_BYTE *)(v38 + 33);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211958C38(&qword_254ACC560);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_211A4A230;
  *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v45 + 64) = sub_2119512B0();
  *(_QWORD *)(v45 + 32) = 7104878;
  *(_QWORD *)(v45 + 40) = 0xE300000000000000;
  v46 = sub_211A4791C();
  v48 = v47;
  swift_bridgeObjectRelease();
  v49 = v95;
LABEL_35:
  if (qword_254AC7B80 != -1)
    swift_once();
  v77 = sub_211A47748();
  sub_21194F3E0(v77, (uint64_t)qword_254ADC7E8);
  v97 = v108;
  v78 = v109;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79 = sub_211A47724();
  v80 = sub_211A47D30();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = swift_slowAlloc();
    v95 = v46;
    v82 = v49;
    v83 = v81;
    v96 = swift_slowAlloc();
    v100 = v96;
    *(_DWORD *)v83 = 136315650;
    swift_bridgeObjectRetain();
    v99[0] = sub_211950A9C(v87, v82, &v100);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v83 + 12) = 2080;
    swift_bridgeObjectRetain();
    v99[0] = sub_211950A9C(v97, v78, &v100);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v83 + 22) = 2080;
    swift_bridgeObjectRetain();
    v99[0] = sub_211950A9C(v95, v48, &v100);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v79, v80, "👀 FMFSecureLocCtrl: %s location for %s: %s", (uint8_t *)v83, 0x20u);
    v84 = v96;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v84, -1, -1);
    MEMORY[0x212BE48A0](v83, -1, -1);

    v85 = (uint64_t)v110;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v85 = v38;
  }
  return sub_211934758(v85, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_211950A9C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_211950BA8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_211950B6C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_211950B6C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_211931C34((uint64_t)v12);
  return v7;
}

uint64_t sub_211950B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_211950BA8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_211A47E38();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_211950D60(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_211A47FB8();
  if (!v8)
  {
    sub_211A48090();
    __break(1u);
LABEL_17:
    result = sub_211A480D8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_211950D60(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_211950DF4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21195CF2C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21195CF2C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_211950DF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_211950F68(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_211A47F7C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_211A48090();
      __break(1u);
LABEL_10:
      v2 = sub_211A479DC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_211A480D8();
    __break(1u);
LABEL_14:
    result = sub_211A48090();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_211950F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_211958C38(&qword_254AC7DE8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

_QWORD *sub_211950FCC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_211958C38(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = j__malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_211973358();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_2119510B4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_2119512B0()
{
  unint64_t result;

  result = qword_254ACC568;
  if (!qword_254ACC568)
  {
    result = MEMORY[0x212BE47C8](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254ACC568);
  }
  return result;
}

uint64_t sub_2119512F4()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  NSObject *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD *v191;
  void *v192;
  unint64_t v193;
  int64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  void *v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  NSObject *v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  NSObject *v213;
  Class *v214;
  uint64_t v215;
  void (*v216)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  Class *v237;
  unint64_t v238;
  uint64_t v239;
  int64_t *v240;
  int isUniquelyReferenced_nonNull_native;
  char v242;
  uint64_t v243;
  _BOOL8 v244;
  uint64_t v245;
  char v246;
  unint64_t v247;
  char v248;
  _QWORD *v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  BOOL v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(char *, uint64_t, uint64_t);
  NSObject *v257;
  os_log_type_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  os_log_type_t v265;
  uint8_t *v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  NSObject *v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  void (*v284)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  int64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  char v295;
  NSObject *v296;
  os_log_type_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  os_log_type_t v304;
  uint8_t *v305;
  _QWORD *v306;
  uint64_t v307;
  NSObject *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  unint64_t v313;
  uint64_t *v314;
  NSObject *v315;
  uint64_t v316;
  uint64_t v317;
  void (*v318)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void (*v324)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v325;
  uint64_t v326;
  id v327;
  uint64_t v328;
  void (*v329)(uint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t (*v336)();
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t *v340;
  uint64_t v341;
  unint64_t v342;
  char v343;
  void (*v344)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v345;
  uint64_t v346;
  void (*v347)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int64_t *v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t v355;
  char v356;
  uint64_t v357;
  uint64_t v358;
  char v359;
  unint64_t v360;
  uint64_t v361;
  _BOOL8 v362;
  uint64_t v363;
  char v364;
  unint64_t v365;
  char v366;
  uint64_t v367;
  uint64_t *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t *v375;
  char v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  NSObject *v380;
  os_log_type_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  os_log_type_t v388;
  uint8_t *v389;
  uint64_t v390;
  _QWORD *v391;
  uint64_t v392;
  id v393;
  uint64_t *v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t *v397;
  NSObject *v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  void (*v403)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v404;
  void (*v405)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  id v409;
  uint64_t v410;
  _QWORD *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t *v414;
  uint64_t (*v415)();
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  unint64_t v420;
  char v421;
  uint64_t v422;
  void (*v423)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v424;
  uint64_t v425;
  unint64_t v426;
  void (*v427)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char *v447;
  uint64_t v448;
  NSObject *v449;
  int v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  _QWORD *v456;
  uint8_t *v457;
  uint64_t v458;
  unint64_t v459;
  NSObject *v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t (*v463)();
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t (*v467)();
  uint64_t v468;
  uint64_t v469;
  uint64_t isa;
  uint64_t v471;
  uint64_t v472;
  unint64_t v473;
  unsigned int (*v474)(uint64_t, uint64_t, uint64_t);
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  void (*v482)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  void (*v486)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v487;
  uint64_t *v488;
  uint64_t v489;
  id v490;
  uint64_t v491;
  _QWORD *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t (*v496)();
  uint64_t *v497;
  uint64_t v498;
  void (*v499)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  NSObject *v512;
  int v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  _QWORD *v518;
  uint8_t *v519;
  uint64_t v520;
  uint64_t *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  _QWORD *v526;
  uint64_t *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  unint64_t v543;
  char *v544;
  unsigned __int8 *v545;
  uint64_t (*v546)();
  uint64_t (*v547)();
  uint64_t v548;
  uint64_t v549;
  int v550;
  uint64_t *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  char *v556;
  uint64_t v557;
  uint64_t *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t *v563;
  uint64_t v564;
  unint64_t v565;
  uint64_t v566;
  uint64_t v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  unsigned __int8 *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t *v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  char v587;
  uint64_t *v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  unint64_t *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  unint64_t v617;
  uint64_t v618;
  unint64_t v619;
  unint64_t v620;
  uint64_t v621;
  _QWORD *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  unint64_t v628;
  uint64_t v629;
  uint64_t v630;
  unsigned int (*v631)(uint64_t, uint64_t, uint64_t);
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  unint64_t v641;
  uint64_t v642;
  uint64_t *v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  int64_t v647;
  uint64_t v648;
  unint64_t v649;
  unint64_t v650;
  uint64_t v651;
  _QWORD *v652;
  uint64_t v653;
  uint64_t v654;
  unint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  unint64_t v664;
  uint64_t v665;
  unint64_t v666;
  unint64_t v667;
  uint64_t v668;
  _QWORD *v669;
  uint64_t v670;
  _QWORD *v671;
  uint64_t v672;
  uint64_t v673;
  unint64_t v674;
  uint64_t v675;
  uint64_t *v676;
  uint64_t *v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  int64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  char *v688;
  uint64_t v689;
  unint64_t v690;
  unint64_t v691;
  Class v692;
  _QWORD *v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t v697;
  _QWORD *v698;
  int64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  int v703;
  char *v704;
  uint64_t *v705;
  unint64_t v706;
  uint64_t v707;
  int v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  _QWORD *v714;
  NSObject *v715;
  NSObject *v716;
  uint8_t *v717;
  uint64_t v718;
  Swift::Bool v719;
  uint64_t v720;
  uint64_t v721;
  int64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  unint64_t v727;
  int64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t *v733;
  _QWORD *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  int64_t v740;
  uint64_t v741;
  unsigned int (*v742)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v743)(_QWORD, _QWORD, _QWORD);
  uint64_t v744;
  unint64_t v745;
  unint64_t v746;
  uint64_t v747;
  _QWORD *v748;
  uint64_t v749;
  _QWORD *v750;
  _QWORD *v751;
  uint64_t *v752;
  unint64_t v753;
  uint64_t v754;
  uint64_t *v755;
  uint64_t *v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t (*v759)(_QWORD);
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t result;
  uint64_t v764;
  uint64_t v765;
  char *v766;
  uint64_t v767;
  char *v768;
  char *v769;
  char *v770;
  char *v771;
  char *v772;
  char *v773;
  uint64_t v774;
  uint64_t *v775;
  char *v776;
  _QWORD *v777;
  uint64_t *v778;
  uint64_t *v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t *v782;
  uint64_t *v783;
  uint64_t *v784;
  uint64_t *v785;
  uint64_t *v786;
  uint64_t v787;
  uint64_t v788;
  char *v789;
  _QWORD *v790;
  uint64_t *v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  char *v799;
  void (*v800)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v801;
  char *v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  void (*v810)(char *, uint64_t, uint64_t);
  void (*v811)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v812;
  char *v813;
  uint64_t v814;
  _QWORD *v815;
  uint64_t *v816;
  char *v817;
  uint64_t *v818;
  char *v819;
  uint64_t v820;
  _QWORD *v821;
  Class *v822;
  char *v823;
  int64_t v824;
  NSObject *v825;
  uint64_t v826;
  uint64_t v827;
  char *v828;
  uint64_t *v829;
  uint64_t v830;
  uint64_t v831;
  id v832;
  uint64_t v833;
  _QWORD *v834;
  uint64_t v835;
  _QWORD *v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t *v841;
  uint64_t v842;
  int64_t *v843;
  unint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  char v848;
  uint8_t *v849;
  char v850;
  uint64_t v851;
  char v852;
  uint64_t v853;
  char v854;
  uint64_t v855;
  char v856;
  uint64_t v857;
  char v858;
  uint64_t v859;
  char v860;
  __int128 v861;
  __int128 v862;
  __int128 v863;
  uint64_t v864;

  v1 = sub_211958C38(&qword_254ACD770);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v790 = (uint64_t *)((char *)&v765 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v784 = (uint64_t *)((char *)&v765 - v7);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v815 = (uint64_t *)((char *)&v765 - v10);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v802 = (char *)&v765 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v817 = (char *)&v765 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v816 = (uint64_t *)((char *)&v765 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v819 = (char *)&v765 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v818 = (uint64_t *)((char *)&v765 - v25);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v821 = (uint64_t *)((char *)&v765 - v28);
  MEMORY[0x24BDAC7A8](v27, v29);
  v812 = (char *)&v765 - v30;
  v835 = type metadata accessor for FMFLocation();
  v833 = *(_QWORD *)(v835 - 8);
  MEMORY[0x24BDAC7A8](v835, v31);
  v783 = (uint64_t *)((char *)&v765 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v826 = sub_211A47748();
  v797 = *(_QWORD *)(v826 - 8);
  v34 = MEMORY[0x24BDAC7A8](v826, v33);
  v813 = (char *)&v765 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v768 = (char *)&v765 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v769 = (char *)&v765 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v772 = (char *)&v765 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v770 = (char *)&v765 - v47;
  MEMORY[0x24BDAC7A8](v46, v48);
  v771 = (char *)&v765 - v49;
  v50 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v50, v51);
  v838 = (uint64_t)&v765 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_211958C38(&qword_254ACA278);
  MEMORY[0x24BDAC7A8](v53, v54);
  v840 = (uint64_t)&v765 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_211958C38(&qword_254AC8870);
  v58 = MEMORY[0x24BDAC7A8](v56, v57);
  v777 = (uint64_t *)((char *)&v765 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = MEMORY[0x24BDAC7A8](v58, v60);
  v776 = (char *)&v765 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61, v63);
  v789 = (char *)&v765 - v65;
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v804 = (uint64_t)&v765 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67, v69);
  v793 = (uint64_t)&v765 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70, v72);
  v788 = (uint64_t)&v765 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73, v75);
  v805 = (uint64_t)&v765 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76, v78);
  v795 = (uint64_t)&v765 - v80;
  v82 = MEMORY[0x24BDAC7A8](v79, v81);
  v806 = (uint64_t)&v765 - v83;
  v85 = MEMORY[0x24BDAC7A8](v82, v84);
  v794 = (uint64_t)&v765 - v86;
  v88 = MEMORY[0x24BDAC7A8](v85, v87);
  v799 = (char *)&v765 - v89;
  v91 = MEMORY[0x24BDAC7A8](v88, v90);
  v842 = (uint64_t)&v765 - v92;
  MEMORY[0x24BDAC7A8](v91, v93);
  v807 = (uint64_t)&v765 - v94;
  v845 = type metadata accessor for FMFFriend();
  v844 = *(_QWORD *)(v845 - 8);
  v95 = *(_QWORD *)(v844 + 64);
  v97 = MEMORY[0x24BDAC7A8](v845, v96);
  v773 = (char *)&v765 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = MEMORY[0x24BDAC7A8](v97, v98);
  v829 = (uint64_t *)((char *)&v765 - v100);
  v102 = MEMORY[0x24BDAC7A8](v99, v101);
  v814 = (uint64_t)&v765 - v103;
  v105 = MEMORY[0x24BDAC7A8](v102, v104);
  v828 = (char *)&v765 - v106;
  v108 = MEMORY[0x24BDAC7A8](v105, v107);
  v766 = (char *)&v765 - v109;
  v111 = MEMORY[0x24BDAC7A8](v108, v110);
  v781 = (uint64_t)&v765 - v112;
  v114 = MEMORY[0x24BDAC7A8](v111, v113);
  v785 = (uint64_t *)((char *)&v765 - v115);
  v117 = MEMORY[0x24BDAC7A8](v114, v116);
  v786 = (uint64_t *)((char *)&v765 - v118);
  v120 = MEMORY[0x24BDAC7A8](v117, v119);
  v779 = (uint64_t *)((char *)&v765 - v121);
  v123 = MEMORY[0x24BDAC7A8](v120, v122);
  v778 = (uint64_t *)((char *)&v765 - v124);
  v126 = MEMORY[0x24BDAC7A8](v123, v125);
  v787 = (uint64_t)&v765 - v127;
  v129 = MEMORY[0x24BDAC7A8](v126, v128);
  v782 = (uint64_t *)((char *)&v765 - v130);
  v132 = MEMORY[0x24BDAC7A8](v129, v131);
  v780 = (uint64_t)&v765 - v133;
  v135 = MEMORY[0x24BDAC7A8](v132, v134);
  v775 = (uint64_t *)((char *)&v765 - v136);
  v138 = MEMORY[0x24BDAC7A8](v135, v137);
  v792 = (uint64_t)&v765 - v139;
  v141 = MEMORY[0x24BDAC7A8](v138, v140);
  v808 = (uint64_t)&v765 - v142;
  v144 = MEMORY[0x24BDAC7A8](v141, v143);
  v836 = (uint64_t *)((char *)&v765 - v145);
  v147 = MEMORY[0x24BDAC7A8](v144, v146);
  v841 = (uint64_t *)((char *)&v765 - v148);
  v150 = MEMORY[0x24BDAC7A8](v147, v149);
  v798 = (uint64_t)&v765 - v151;
  MEMORY[0x24BDAC7A8](v150, v152);
  v809 = (uint64_t)&v765 - v153;
  v837 = type metadata accessor for FMFIntermediateFriend();
  v839 = *(_QWORD *)(v837 - 8);
  v155 = MEMORY[0x24BDAC7A8](v837, v154);
  v831 = (uint64_t)&v765 - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = MEMORY[0x24BDAC7A8](v155, v157);
  v160 = (uint64_t *)((char *)&v765 - v159);
  v162 = MEMORY[0x24BDAC7A8](v158, v161);
  v164 = (char *)&v765 - v163;
  MEMORY[0x24BDAC7A8](v162, v165);
  v167 = (char *)&v765 - v166;
  v168 = type metadata accessor for FMFLocationAlert();
  v170 = MEMORY[0x24BDAC7A8](v168, v169);
  v172 = MEMORY[0x24BDAC7A8](v170, v171);
  v174 = (uint64_t)&v765 - v173;
  v176 = MEMORY[0x24BDAC7A8](v172, v175);
  v178 = MEMORY[0x24BDAC7A8](v176, v177);
  v180 = (unint64_t)&v765 - v179;
  v182 = MEMORY[0x24BDAC7A8](v178, v181);
  v187 = (char *)&v765 - v186;
  v188 = *(_QWORD *)(v0 + 120);
  if (v188)
  {
    swift_bridgeObjectRetain();
    return v188;
  }
  v822 = (Class *)v185;
  v823 = v167;
  v824 = v182;
  v825 = v184;
  v834 = v183;
  v830 = (uint64_t)v164;
  v791 = v160;
  v827 = v95;
  v189 = swift_allocObject();
  v774 = v189;
  *(_QWORD *)(v189 + 16) = MEMORY[0x24BEE4B00];
  v843 = (int64_t *)(v189 + 16);
  v796 = v0;
  v190 = sub_21195A3A8();
  v191 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v861 = MEMORY[0x24BEE4AF8];
  v192 = (void *)sub_21195A26C(v190);
  v811 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v174;
  v832 = v192;
  if (!v192)
  {
    v820 = (uint64_t)v191;
    v194 = v824;
LABEL_16:
    swift_bridgeObjectRelease();
    v0 = v796;
    v180 = sub_21195A3A8();
    *(_QWORD *)&v861 = v191;
    v199 = (void *)sub_21195A26C(v180);
    v200 = v844;
    v832 = v199;
    if (v199)
    {
      v201 = 0;
      while (1)
      {
        sub_2119B1CE4(v201, 1, v180);
        v195 = v201 + 1;
        if (__OFADD__(v201, 1))
          goto LABEL_359;
        v202 = v200;
        sub_211934794(v180+ ((*((unsigned __int8 *)v834 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v834 + 80))+ v834[9] * v201, v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v0 = *(unsigned __int8 *)(v174 + *(int *)(v194 + 96));
        v203 = v825;
        sub_211934794(v174, (uint64_t)v825, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((_DWORD)v0 == 1)
        {
          v0 = *((unsigned __int8 *)&v203->isa + *(int *)(v194 + 100));
          sub_211934758((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          if ((v0 & 1) != 0)
          {
            v204 = v174;
            v205 = (uint64_t)v822;
            sub_211942810(v204, (uint64_t)v822, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
            v0 = (int64_t)&v861;
            sub_2119FA710();
            v207 = *(_QWORD *)(v861 + 16);
            v206 = *(_QWORD *)(v861 + 24);
            v200 = v202;
            if (v207 >= v206 >> 1)
              sub_211A26834(v206 > 1, v207 + 1, 1);
            sub_2119FA758(v207, v205);
            v194 = v824;
            v174 = (uint64_t)v811;
            goto LABEL_20;
          }
        }
        else
        {
          sub_211934758((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        }
        sub_211934758(v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v200 = v202;
LABEL_20:
        ++v201;
        if ((id)v195 == v832)
        {
          v834 = (_QWORD *)v861;
          goto LABEL_29;
        }
      }
    }
    v834 = v191;
LABEL_29:
    swift_bridgeObjectRelease();
    v208 = v796;
    v209 = *(_QWORD *)(v796 + 88);
    v210 = sub_21195A26C(v209);
    v174 = v840;
    v211 = v845;
    v212 = v809;
    v195 = (uint64_t)v823;
    v803 = v210;
    if (!v210)
    {
      v832 = 0;
LABEL_54:
      v174 = v774;
      v0 = v826;
      v195 = v797;
      v180 = (unint64_t)v771;
      if (qword_254AC7B80 == -1)
        goto LABEL_55;
      goto LABEL_370;
    }
    v0 = *(_QWORD *)(v208 + 80) + 24;
    v800 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v209
                                                                   + ((*(unsigned __int8 *)(v839 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v839 + 80)));
    v767 = v209;
    swift_bridgeObjectRetain();
    v801 = (uint64_t *)v0;
    swift_beginAccess();
    v213 = 0;
    v832 = 0;
    v180 = v807;
    while (1)
    {
      if (__OFADD__(v213, 1))
        goto LABEL_360;
      v824 = (int64_t)&v213->isa + 1;
      v825 = v213;
      sub_211934794((uint64_t)v800 + *(_QWORD *)(v839 + 72) * (_QWORD)v213, v195, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      v233 = *v801;
      if (*(_QWORD *)(*v801 + 16))
      {
        v234 = *(_QWORD *)v195;
        v195 = *(_QWORD *)(v195 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v235 = sub_21195BB68(v234, v195);
        if ((v236 & 1) != 0)
        {
          sub_211934794(*(_QWORD *)(v233 + 56) + *(_QWORD *)(v200 + 72) * v235, v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v237 = *(Class **)(v200 + 56);
          v238 = v180;
          v239 = 0;
        }
        else
        {
          v237 = *(Class **)(v200 + 56);
          v238 = v180;
          v239 = 1;
        }
        v214 = v237;
        ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v237)(v238, v239, 1, v211);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v200 + 48))(v180, 1, v211) != 1)
        {
          sub_211942810(v180, v212, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211934794(v212, v798, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          swift_bridgeObjectRetain();
          v240 = v843;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v861 = *v240;
          v0 = v861;
          *v240 = 0x8000000000000000;
          v180 = sub_21195BB68(v234, v195);
          v243 = *(_QWORD *)(v0 + 16);
          v244 = (v242 & 1) == 0;
          v245 = v243 + v244;
          if (__OFADD__(v243, v244))
            goto LABEL_366;
          v246 = v242;
          if (*(_QWORD *)(v0 + 24) >= v245)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v249 = (_QWORD *)v861;
              if ((v242 & 1) == 0)
                goto LABEL_44;
            }
            else
            {
              v0 = (int64_t)&v861;
              sub_211A458F0();
              v249 = (_QWORD *)v861;
              if ((v246 & 1) == 0)
                goto LABEL_44;
            }
          }
          else
          {
            sub_211A41E78(v245, isUniquelyReferenced_nonNull_native);
            v0 = v861;
            v247 = sub_21195BB68(v234, v195);
            if ((v246 & 1) != (v248 & 1))
              goto LABEL_382;
            v180 = v247;
            v249 = (_QWORD *)v861;
            if ((v246 & 1) == 0)
            {
LABEL_44:
              v249[(v180 >> 6) + 8] |= 1 << v180;
              v250 = (uint64_t *)(v249[6] + 16 * v180);
              *v250 = v234;
              v250[1] = v195;
              v251 = v249[7] + *(_QWORD *)(v200 + 72) * v180;
              v180 = (unint64_t)type metadata accessor for FMFFriend;
              sub_211942810(v798, v251, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
              v252 = v249[2];
              v253 = __OFADD__(v252, 1);
              v254 = v252 + 1;
              if (v253)
                goto LABEL_369;
              v249[2] = v254;
              swift_bridgeObjectRetain();
              goto LABEL_49;
            }
          }
          sub_21195BCAC(v798, v249[7] + *(_QWORD *)(v200 + 72) * v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_49:
          v0 = *v843;
          *v843 = (int64_t)v249;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v212 = v809;
          sub_211934758(v809, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v195 = (uint64_t)v823;
          sub_211934758((uint64_t)v823, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
          v211 = v845;
          v180 = v807;
          goto LABEL_33;
        }
      }
      else
      {
        v214 = *(Class **)(v200 + 56);
        ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v214)(v180, 1, 1, v211);
      }
      sub_211923EE8(v180, &qword_254AC8870);
      v215 = v842;
      v822 = v214;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v214)(v842, 1, 1, v211);
      sub_211934794((uint64_t)v823, v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      v811 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v839 + 56);
      v811(v174, 0, 1, v837);
      v859 = 1;
      v860 = 0;
      v857 = 0;
      v858 = 1;
      v216 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56);
      v217 = v838;
      v218 = v835;
      v216(v838, 1, 1, v835);
      v864 = 0;
      v862 = 0u;
      v863 = 0u;
      v861 = 0u;
      v219 = v841;
      sub_211956D54(v215, v840, (unint64_t)&v859, (uint64_t)&v857, v217, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
      v220 = swift_retain();
      v221 = v832;
      v810 = (void (*)(char *, uint64_t, uint64_t))sub_211959D6C(v220, v219);
      swift_release();
      v222 = swift_retain();
      v223 = sub_2119599C4(v222, v219, (uint64_t)&unk_24CCCC658);
      v832 = v221;
      swift_release();
      sub_211934794((uint64_t)v219, v215, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v224 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v822;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v822)(v215, 0, 1, v845);
      v811(v840, 1, 1, v837);
      v859 = 0;
      v860 = 1;
      v857 = 0;
      v858 = 1;
      v225 = v218;
      v174 = v840;
      v216(v217, 1, 1, v225);
      v211 = v845;
      v864 = 0;
      v862 = 0u;
      v863 = 0u;
      v861 = 0u;
      v764 = v223;
      v180 = v807;
      v226 = v836;
      sub_211956D54(v215, v174, (unint64_t)&v859, (uint64_t)&v857, v217, 0, 1, (uint64_t *)&v861, v836, (uint64_t)v810, v764, 2u, 2u, 2);
      sub_21195BCAC((uint64_t)v226, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v227 = *v219;
      v228 = v219[1];
      sub_211934794((uint64_t)v219, v215, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v224(v215, 0, 1, v211);
      swift_bridgeObjectRetain();
      v229 = v215;
      v200 = v844;
      v230 = v227;
      v231 = v228;
      v195 = (uint64_t)v823;
      v0 = (int64_t)v843;
      sub_211959038(v229, v230, v231);
      sub_211934758(v195, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      v232 = (uint64_t)v219;
      v212 = v809;
      sub_211934758(v232, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_33:
      v213 = ((char *)&v825->isa + 1);
      if (v824 == v803)
      {
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
    }
  }
  v193 = 0;
  v194 = v824;
  while (1)
  {
    sub_2119B1CE4(v193, 1, v190);
    v195 = v193 + 1;
    if (__OFADD__(v193, 1))
      break;
    sub_211934794(v190+ ((*((unsigned __int8 *)v834 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v834 + 80))+ v834[9] * v193, (uint64_t)v187, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v0 = v187[*(int *)(v194 + 96)];
    sub_211934794((uint64_t)v187, v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if ((_DWORD)v0 == 1)
    {
      v0 = *(unsigned __int8 *)(v180 + *(int *)(v194 + 100));
      sub_211934758(v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      if ((v0 & 1) == 0)
      {
        v196 = (uint64_t)v822;
        sub_211942810((uint64_t)v187, (uint64_t)v822, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v0 = (int64_t)&v861;
        sub_2119FA710();
        v198 = *(_QWORD *)(v861 + 16);
        v197 = *(_QWORD *)(v861 + 24);
        if (v198 >= v197 >> 1)
          sub_211A26834(v197 > 1, v198 + 1, 1);
        sub_2119FA758(v198, v196);
        v194 = v824;
        v174 = (uint64_t)v811;
        goto LABEL_7;
      }
    }
    else
    {
      sub_211934758(v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    }
    sub_211934758((uint64_t)v187, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_7:
    ++v193;
    if ((id)v195 == v832)
    {
      v820 = v861;
      v191 = (_QWORD *)MEMORY[0x24BEE4AF8];
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_359:
  __break(1u);
LABEL_360:
  __break(1u);
LABEL_361:
  __break(1u);
LABEL_362:
  __break(1u);
  while (2)
  {
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
LABEL_369:
    __break(1u);
LABEL_370:
    swift_once();
LABEL_55:
    v255 = sub_21194F3E0(v0, (uint64_t)qword_254ADC7E8);
    v256 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
    v767 = v255;
    v810 = v256;
    ((void (*)(unint64_t))v256)(v180);
    swift_retain_n();
    v257 = sub_211A47724();
    v258 = sub_211A47D18();
    v259 = swift_allocObject();
    *(_BYTE *)(v259 + 16) = 64;
    v260 = swift_allocObject();
    *(_BYTE *)(v260 + 16) = 8;
    v261 = swift_allocObject();
    *(_QWORD *)(v261 + 16) = sub_2119FB9D0;
    *(_QWORD *)(v261 + 24) = v174;
    v262 = swift_allocObject();
    *(_QWORD *)(v262 + 16) = sub_2119213A8;
    *(_QWORD *)(v262 + 24) = v261;
    v809 = sub_211958C38(&qword_254ACD778);
    v263 = swift_allocObject();
    sub_2119E0CDC(v263, 3);
    *v264 = sub_2119FB9F8;
    v264[1] = v259;
    v264[2] = sub_2119FCAAC;
    v264[3] = v260;
    v264[4] = sub_2119FBA10;
    v264[5] = v262;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v265 = v258;
    if (os_log_type_enabled(v257, v258))
    {
      v266 = (uint8_t *)swift_slowAlloc();
      v267 = swift_slowAlloc();
      v825 = v257;
      v268 = (_QWORD *)v267;
      *(_WORD *)v266 = 258;
      v266[2] = 64;
      swift_release();
      v266[3] = 8;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v269 = sub_211A47844();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v861 = v269;
      sub_211A47E2C();
      *v268 = v269;
      swift_release_n();
      swift_release();
      swift_release();
      v270 = v825;
      _os_log_impl(&dword_21190D000, v825, v265, "Follower friends - %@", v266, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v268, -1, -1);
      MEMORY[0x212BE48A0](v266, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    v271 = v844;
    v272 = v839;
    v273 = v841;
    v195 = v826;
    v811 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v797 + 8);
    ((void (*)(char *, uint64_t))v811)(v771, v826);
    v274 = *(_QWORD *)(v796 + 96);
    v275 = sub_21195A26C(v274);
    if (v275)
    {
      v276 = v275;
      if (v275 >= 1)
      {
        v277 = v274 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
        v807 = *(_QWORD *)(v272 + 72);
        v825 = *(NSObject **)(v271 + 56);
        v803 = v274;
        swift_bridgeObjectRetain();
        v278 = v835;
        do
        {
          v823 = (char *)v277;
          v824 = v276;
          v279 = v842;
          v280 = v845;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v825)(v842, 1, 1, v845);
          v281 = v277;
          v282 = v840;
          sub_211934794(v281, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
          v822 = *(Class **)(v839 + 56);
          v283 = v837;
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v822)(v282, 0, 1, v837);
          v859 = 1;
          v860 = 0;
          v857 = 0;
          v858 = 1;
          v284 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56);
          v285 = v838;
          v284(v838, 1, 1, v278);
          v864 = 0;
          v862 = 0u;
          v863 = 0u;
          v861 = 0u;
          sub_211956D54(v279, v282, (unint64_t)&v859, (uint64_t)&v857, v285, 0, 1, (uint64_t *)&v861, v273, 0, 0, 2u, 2u, 2);
          sub_211934794((uint64_t)v273, v279, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v825)(v279, 0, 1, v280);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v822)(v282, 1, 1, v283);
          v859 = 0;
          v860 = 1;
          v857 = 0;
          v858 = 1;
          v284(v285, 1, 1, v278);
          v864 = 0;
          v862 = 0u;
          v863 = 0u;
          v861 = 0u;
          v286 = swift_retain();
          v287 = v836;
          v288 = v282;
          v289 = v285;
          v291 = (uint64_t)v823;
          v290 = v824;
          sub_211956D54(v279, v288, (unint64_t)&v859, (uint64_t)&v857, v289, 0, 1, (uint64_t *)&v861, v836, 0, v286, 2u, 2u, 2);
          sub_211934758((uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211942810((uint64_t)v287, (uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v292 = *v273;
          v293 = v841[1];
          v294 = v843;
          swift_beginAccess();
          sub_211934794((uint64_t)v841, (uint64_t)v287, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          swift_bridgeObjectRetain();
          v295 = swift_isUniquelyReferenced_nonNull_native();
          v859 = *v294;
          *v294 = 0x8000000000000000;
          sub_21195BB54((uint64_t)v287, v292, v293, v295);
          *v294 = v859;
          v273 = v841;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_211934758((uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v277 = v291 + v807;
          v276 = v290 - 1;
        }
        while (v276);
        swift_bridgeObjectRelease();
        v174 = v774;
        v195 = v826;
        goto LABEL_63;
      }
      __break(1u);
LABEL_372:
      __break(1u);
LABEL_373:
      __break(1u);
LABEL_374:
      __break(1u);
LABEL_375:
      __break(1u);
LABEL_376:
      __break(1u);
LABEL_377:
      __break(1u);
LABEL_378:
      __break(1u);
LABEL_379:
      __break(1u);
      goto LABEL_380;
    }
LABEL_63:
    v810(v770, v767, v195);
    swift_retain_n();
    v296 = sub_211A47724();
    v297 = sub_211A47D18();
    v298 = swift_allocObject();
    *(_BYTE *)(v298 + 16) = 64;
    v299 = swift_allocObject();
    *(_BYTE *)(v299 + 16) = 8;
    v300 = swift_allocObject();
    *(_QWORD *)(v300 + 16) = sub_2119FB9D0;
    *(_QWORD *)(v300 + 24) = v174;
    v301 = swift_allocObject();
    *(_QWORD *)(v301 + 16) = sub_2119778B8;
    *(_QWORD *)(v301 + 24) = v300;
    v302 = swift_allocObject();
    sub_2119E0CDC(v302, 3);
    *v303 = sub_2119FCAAC;
    v303[1] = v298;
    v303[2] = sub_2119FCAAC;
    v303[3] = v299;
    v303[4] = sub_2119FCAA8;
    v303[5] = v301;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v304 = v297;
    v825 = v296;
    if (os_log_type_enabled(v296, v297))
    {
      v305 = (uint8_t *)swift_slowAlloc();
      v306 = (_QWORD *)swift_slowAlloc();
      *(_WORD *)v305 = 258;
      v305[2] = 64;
      swift_release();
      v305[3] = 8;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v307 = sub_211A47844();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v861 = v307;
      sub_211A47E2C();
      *v306 = v307;
      swift_release_n();
      swift_release();
      swift_release();
      v308 = v825;
      _os_log_impl(&dword_21190D000, v825, v304, "Follower friends with pending - %@", v305, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v306, -1, -1);
      MEMORY[0x212BE48A0](v305, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    v174 = v839;
    v180 = (unint64_t)v772;
    v309 = (uint64_t)v799;
    v310 = v808;
    ((void (*)(char *, uint64_t))v811)(v770, v826);
    v311 = v796;
    v195 = *(_QWORD *)(v796 + 224);
    v312 = sub_21195A26C(v195);
    v313 = v844;
    v314 = (uint64_t *)v830;
    v823 = (char *)v312;
    if (v312)
    {
      v0 = *(_QWORD *)(v311 + 80) + 24;
      v807 = v195 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
      swift_bridgeObjectRetain();
      v822 = (Class *)v0;
      swift_beginAccess();
      v315 = 0;
      v803 = v195;
      while (1)
      {
        v337 = (char *)&v315->isa + 1;
        if (__OFADD__(v315, 1))
          goto LABEL_361;
        v338 = *(_QWORD *)(v174 + 72);
        v825 = v315;
        sub_211934794(v807 + v338 * (_QWORD)v315, (uint64_t)v314, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v339 = (uint64_t)*v822;
        if (*((_QWORD *)*v822 + 2))
        {
          v340 = v314;
          v341 = *v314;
          v195 = v340[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v342 = sub_21195BB68(v341, v195);
          if ((v343 & 1) != 0)
          {
            sub_211934794(*(_QWORD *)(v339 + 56) + *(_QWORD *)(v313 + 72) * v342, v309, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v344 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v313 + 56);
            v345 = v309;
            v346 = 0;
          }
          else
          {
            v344 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v313 + 56);
            v345 = v309;
            v346 = 1;
          }
          v348 = v845;
          v347 = v344;
          v344(v345, v346, 1, v845);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v313 + 48))(v309, 1, v348) != 1)
          {
            sub_211942810(v309, v310, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v180 = (unint64_t)v843;
            swift_beginAccess();
            sub_211934794(v310, v792, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_bridgeObjectRetain();
            v174 = swift_isUniquelyReferenced_nonNull_native();
            v857 = *(_QWORD *)v180;
            v0 = v857;
            *(_QWORD *)v180 = 0x8000000000000000;
            v360 = sub_21195BB68(v341, v195);
            v361 = *(_QWORD *)(v0 + 16);
            v362 = (v359 & 1) == 0;
            v363 = v361 + v362;
            if (__OFADD__(v361, v362))
              goto LABEL_367;
            v364 = v359;
            if (*(_QWORD *)(v0 + 24) >= v363)
            {
              v367 = v792;
              if ((v174 & 1) == 0)
              {
                sub_211A458F0();
                v367 = v792;
              }
            }
            else
            {
              sub_211A41E78(v363, v174);
              v365 = sub_21195BB68(v341, v195);
              if ((v364 & 1) != (v366 & 1))
                goto LABEL_382;
              v360 = v365;
              v367 = v792;
            }
            v310 = v808;
            v174 = v839;
            v0 = v857;
            if ((v364 & 1) != 0)
            {
              sub_21195BCAC(v367, *(_QWORD *)(v857 + 56) + *(_QWORD *)(v313 + 72) * v360, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            }
            else
            {
              sub_211A44ACC(v360, v341, v195, v367, (_QWORD *)v857);
              swift_bridgeObjectRetain();
            }
            v180 = *v843;
            *v843 = v0;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_211934758(v310, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v314 = (uint64_t *)v830;
            sub_211934758(v830, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
            v309 = (uint64_t)v799;
            goto LABEL_71;
          }
        }
        else
        {
          v347 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v313 + 56);
          v347(v309, 1, 1, v845);
        }
        sub_211923EE8(v309, &qword_254AC8870);
        v349 = v830;
        v351 = *(_QWORD *)v830;
        v350 = *(_QWORD *)(v830 + 8);
        v352 = v843;
        swift_beginAccess();
        v353 = *v352;
        v354 = *(_QWORD *)(v353 + 16);
        v824 = (int64_t)v337;
        if (v354)
        {
          swift_bridgeObjectRetain();
          v355 = sub_21195BB68(v351, v350);
          if ((v356 & 1) != 0)
          {
            v357 = *(_QWORD *)(v353 + 56) + *(_QWORD *)(v313 + 72) * v355;
            v316 = v794;
            sub_211934794(v357, v794, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v358 = 0;
          }
          else
          {
            v358 = 1;
            v316 = v794;
          }
          v318 = v347;
          v317 = v845;
          v347(v316, v358, 1, v845);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v313 + 48))(v316, 1, v317) != 1)
          {
            v368 = v775;
            sub_211942810(v316, (uint64_t)v775, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_endAccess();
            v369 = v842;
            sub_211934794((uint64_t)v368, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v318(v369, 0, 1, v317);
            v370 = v840;
            sub_211934794(v349, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
            v371 = v839;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v839 + 56))(v370, 0, 1, v837);
            v857 = 2;
            v858 = 0;
            v855 = 0;
            v856 = 1;
            v372 = v838;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v373 = v841;
            sub_211956D54(v369, v370, (unint64_t)&v857, (uint64_t)&v855, v372, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
            sub_211934758((uint64_t)v368, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            sub_211942810((uint64_t)v373, (uint64_t)v368, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v374 = *v368;
            v180 = v368[1];
            v375 = v843;
            swift_beginAccess();
            sub_211934794((uint64_t)v368, (uint64_t)v373, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_bridgeObjectRetain();
            v376 = swift_isUniquelyReferenced_nonNull_native();
            v857 = *v375;
            *v375 = 0x8000000000000000;
            v377 = (uint64_t)v373;
            v314 = (uint64_t *)v830;
            sub_21195BB54(v377, v374, v180, v376);
            v0 = *v375;
            *v375 = v857;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            v378 = (uint64_t)v368;
            v174 = v371;
            sub_211934758(v378, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v335 = (uint64_t)v314;
            v336 = type metadata accessor for FMFIntermediateFriend;
            goto LABEL_70;
          }
        }
        else
        {
          v316 = v794;
          v317 = v845;
          v318 = v347;
          v347(v794, 1, 1, v845);
        }
        sub_211923EE8(v316, &qword_254AC8870);
        swift_endAccess();
        v319 = v842;
        v318(v842, 1, 1, v317);
        v320 = v840;
        sub_211934794(v349, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v801 = *(uint64_t **)(v839 + 56);
        v321 = v320;
        v322 = v837;
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v801)(v321, 0, 1, v837);
        v857 = 2;
        v858 = 0;
        v855 = 0;
        v856 = 1;
        v800 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56);
        v323 = v835;
        v800(v838, 1, 1, v835);
        v864 = 0;
        v862 = 0u;
        v863 = 0u;
        v861 = 0u;
        v324 = v318;
        v325 = v841;
        sub_211956D54(v319, v840, (unint64_t)&v857, (uint64_t)&v855, v838, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
        v326 = swift_retain();
        v327 = v832;
        v798 = sub_211959D6C(v326, v325);
        swift_release();
        v328 = swift_retain();
        v797 = sub_2119FBA5C(v328, v325);
        v832 = v327;
        swift_release();
        sub_211934794((uint64_t)v325, v319, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v324(v319, 0, 1, v317);
        v329 = v324;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v801)(v840, 1, 1, v322);
        v857 = 0;
        v858 = 1;
        v855 = 0;
        v856 = 1;
        v800(v838, 1, 1, v323);
        v864 = 0;
        v862 = 0u;
        v863 = 0u;
        v861 = 0u;
        v330 = v836;
        sub_211956D54(v319, v840, (unint64_t)&v857, (uint64_t)&v855, v838, 0, 1, (uint64_t *)&v861, v836, v798, v797, 2u, 2u, 2);
        sub_21195BCAC((uint64_t)v330, (uint64_t)v325, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v331 = *v325;
        v332 = v325[1];
        sub_211934794((uint64_t)v325, v319, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v174 = v839;
        v329(v319, 0, 1, v317);
        v333 = v325;
        v180 = (unint64_t)v843;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v334 = v331;
        v0 = v180;
        sub_211959038(v319, v334, v332);
        swift_endAccess();
        sub_211934758(v830, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v335 = (uint64_t)v333;
        v314 = (uint64_t *)v830;
        v336 = type metadata accessor for FMFFriend;
        v309 = (uint64_t)v799;
LABEL_70:
        sub_211934758(v335, (uint64_t (*)(_QWORD))v336);
        v313 = v844;
        v310 = v808;
        v337 = (char *)v824;
LABEL_71:
        v315 = ((char *)&v825->isa + 1);
        v195 = v803;
        if (v337 == v823)
        {
          swift_bridgeObjectRelease();
          v180 = (unint64_t)v772;
          break;
        }
      }
    }
    v810((char *)v180, v767, v826);
    v379 = v774;
    swift_retain_n();
    v380 = sub_211A47724();
    v381 = sub_211A47D18();
    v382 = swift_allocObject();
    *(_BYTE *)(v382 + 16) = 64;
    v383 = swift_allocObject();
    *(_BYTE *)(v383 + 16) = 8;
    v384 = swift_allocObject();
    *(_QWORD *)(v384 + 16) = sub_2119FB9D0;
    *(_QWORD *)(v384 + 24) = v379;
    v385 = swift_allocObject();
    *(_QWORD *)(v385 + 16) = sub_2119778B8;
    *(_QWORD *)(v385 + 24) = v384;
    v386 = swift_allocObject();
    sub_2119E0CDC(v386, 3);
    *v387 = sub_2119FCAAC;
    v387[1] = v382;
    v387[2] = sub_2119FCAAC;
    v387[3] = v383;
    v387[4] = sub_2119FCAA8;
    v387[5] = v385;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v388 = v381;
    if (os_log_type_enabled(v380, v381))
    {
      v389 = (uint8_t *)swift_slowAlloc();
      v390 = swift_slowAlloc();
      v830 = (uint64_t)v380;
      v391 = (_QWORD *)v390;
      *(_WORD *)v389 = 258;
      v389[2] = 64;
      swift_release();
      v389[3] = 8;
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v392 = sub_211A47844();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v861 = v392;
      sub_211A47E2C();
      *v391 = v392;
      swift_release_n();
      swift_release();
      swift_release();
      v393 = (id)v830;
      _os_log_impl(&dword_21190D000, (os_log_t)v830, v388, "Follower+following friends - %@", v389, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v391, -1, -1);
      MEMORY[0x212BE48A0](v389, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    v394 = (uint64_t *)v831;
    ((void (*)(char *, uint64_t))v811)(v772, v826);
    v195 = *(_QWORD *)(v796 + 112);
    v395 = sub_21195A26C(v195);
    v396 = v844;
    v397 = v791;
    if (v395)
    {
      v398 = v395;
      if (v395 < 1)
        goto LABEL_372;
      v399 = *(_QWORD *)(v796 + 80) + 24;
      v400 = v839;
      v401 = (char *)(v195
                    + ((*(unsigned __int8 *)(v839 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v839 + 80)));
      v803 = v195;
      swift_bridgeObjectRetain();
      v824 = v399;
      swift_beginAccess();
      v823 = *(char **)(v400 + 72);
      while (1)
      {
        sub_211934794((uint64_t)v401, (uint64_t)v397, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v416 = *(_QWORD *)v824;
        v417 = *(_QWORD *)(*(_QWORD *)v824 + 16);
        v830 = (uint64_t)v401;
        if (!v417)
          break;
        v418 = *v397;
        v419 = v397[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v420 = sub_21195BB68(v418, v419);
        if ((v421 & 1) != 0)
        {
          v422 = v806;
          sub_211934794(*(_QWORD *)(v416 + 56) + *(_QWORD *)(v396 + 72) * v420, v806, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v423 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v396 + 56);
          v424 = v422;
          v425 = 0;
        }
        else
        {
          v423 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v396 + 56);
          v422 = v806;
          v424 = v806;
          v425 = 1;
        }
        v429 = v845;
        v423(v424, v425, 1, v845);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v396 + 48))(v422, 1, v429) == 1)
        {
          v825 = v398;
          v428 = v429;
          v426 = v844;
          v397 = v791;
          goto LABEL_112;
        }
        v444 = v422;
        v445 = v780;
        sub_211942810(v444, v780, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v446 = v842;
        sub_211934794(v445, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v423(v446, 0, 1, v429);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_211959038(v446, v418, v419);
        swift_endAccess();
        sub_211934758(v445, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v397 = v791;
        sub_211934758((uint64_t)v791, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v394 = (uint64_t *)v831;
LABEL_104:
        v401 = &v823[v830];
        v398 = ((char *)v398 - 1);
        v396 = v844;
        if (!v398)
        {
          swift_bridgeObjectRelease();
          goto LABEL_116;
        }
      }
      v825 = v398;
      v426 = v396;
      v427 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v396 + 56);
      v422 = v806;
      v428 = v845;
      v423 = v427;
      v427(v806, 1, 1, v845);
LABEL_112:
      sub_211923EE8(v422, &qword_254AC8870);
      v430 = *v397;
      v431 = v397[1];
      v432 = v843;
      swift_beginAccess();
      v433 = (uint64_t)v397;
      v434 = *v432;
      swift_bridgeObjectRetain();
      v435 = v430;
      v436 = v795;
      sub_21195991C(v435, v431, v434, v795);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v426 + 48))(v436, 1, v428) == 1)
      {
        sub_211923EE8(v436, &qword_254AC8870);
        swift_endAccess();
        v402 = v842;
        v403 = v423;
        v423(v842, 1, 1, v845);
        v404 = v840;
        sub_211934794(v433, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v822 = *(Class **)(v839 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v822)(v404, 0, 1, v837);
        v855 = 8;
        v856 = 0;
        v853 = 0;
        v854 = 1;
        v405 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56);
        v406 = v838;
        v407 = v835;
        v405(v838, 1, 1, v835);
        v864 = 0;
        v862 = 0u;
        v863 = 0u;
        v861 = 0u;
        sub_211956D54(v402, v840, (unint64_t)&v855, (uint64_t)&v853, v406, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
        v408 = swift_retain();
        v409 = v832;
        v808 = sub_211959D6C(v408, v841);
        swift_release();
        v410 = swift_retain();
        v807 = sub_2119599C4(v410, v841, (uint64_t)&unk_24CCCC608);
        v832 = v409;
        swift_release();
        sub_211934794((uint64_t)v841, v402, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v403(v402, 0, 1, v845);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v822)(v840, 1, 1, v837);
        v855 = 0;
        v856 = 1;
        v853 = 0;
        v854 = 1;
        v405(v406, 1, 1, v407);
        v864 = 0;
        v862 = 0u;
        v863 = 0u;
        v861 = 0u;
        v411 = v836;
        sub_211956D54(v402, v840, (unint64_t)&v855, (uint64_t)&v853, v406, 0, 1, (uint64_t *)&v861, v836, v808, v807, 2u, 2u, 2);
        sub_21195BCAC((uint64_t)v411, (uint64_t)v841, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v412 = *v841;
        v413 = v841[1];
        sub_211934794((uint64_t)v841, v402, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v403(v402, 0, 1, v845);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_211959038(v402, v412, v413);
        swift_endAccess();
        sub_211934758(v433, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        v414 = v841;
        v415 = type metadata accessor for FMFFriend;
      }
      else
      {
        v437 = v782;
        sub_211942810(v436, (uint64_t)v782, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        swift_endAccess();
        v438 = v842;
        sub_211934794((uint64_t)v437, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v423(v438, 0, 1, v428);
        v439 = v840;
        sub_211934794(v433, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v839 + 56))(v439, 0, 1, v837);
        v855 = 8;
        v856 = 0;
        v853 = 0;
        v854 = 1;
        v440 = v838;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
        v864 = 0;
        v862 = 0u;
        v863 = 0u;
        v861 = 0u;
        v441 = v841;
        sub_211956D54(v438, v439, (unint64_t)&v855, (uint64_t)&v853, v440, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
        sub_211934758((uint64_t)v437, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211942810((uint64_t)v441, (uint64_t)v437, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v442 = *v437;
        v443 = v437[1];
        sub_211934794((uint64_t)v437, v438, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v423(v438, 0, 1, v428);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_211959038(v438, v442, v443);
        swift_endAccess();
        sub_211934758((uint64_t)v437, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v414 = (uint64_t *)v433;
        v415 = type metadata accessor for FMFIntermediateFriend;
      }
      sub_211934758((uint64_t)v414, (uint64_t (*)(_QWORD))v415);
      v394 = (uint64_t *)v831;
      v397 = (uint64_t *)v433;
      v398 = v825;
      goto LABEL_104;
    }
LABEL_116:
    v447 = v769;
    v810(v769, v767, v826);
    v448 = v774;
    swift_retain();
    v449 = sub_211A47724();
    v450 = sub_211A47D18();
    v451 = swift_allocObject();
    *(_BYTE *)(v451 + 16) = 64;
    v452 = swift_allocObject();
    *(_BYTE *)(v452 + 16) = 8;
    v453 = swift_allocObject();
    *(_QWORD *)(v453 + 16) = sub_2119FB9D0;
    *(_QWORD *)(v453 + 24) = v448;
    v454 = swift_allocObject();
    *(_QWORD *)(v454 + 16) = sub_2119778B8;
    *(_QWORD *)(v454 + 24) = v453;
    v455 = swift_allocObject();
    sub_2119E0CDC(v455, 3);
    *v456 = sub_2119FCAAC;
    v456[1] = v451;
    v456[2] = sub_2119FCAAC;
    v456[3] = v452;
    v456[4] = sub_2119FCAA8;
    v456[5] = v454;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v825) = v450;
    v830 = (uint64_t)v449;
    if (os_log_type_enabled(v449, (os_log_type_t)v450))
    {
      v457 = (uint8_t *)swift_slowAlloc();
      v458 = swift_slowAlloc();
      v853 = v458;
      v851 = 0;
      *(_WORD *)v457 = 258;
      v855 = (uint64_t)(v457 + 2);
      *(_QWORD *)&v861 = sub_2119FCAAC;
      *((_QWORD *)&v861 + 1) = v451;
      v195 = (uint64_t)v832;
      sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v855, (uint64_t)&v853, (uint64_t)&v851);
      if (!v195)
      {
        swift_release();
        *(_QWORD *)&v861 = sub_2119FCAAC;
        *((_QWORD *)&v861 + 1) = v452;
        sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v855, (uint64_t)&v853, (uint64_t)&v851);
        swift_release();
        *(_QWORD *)&v861 = sub_2119FCAA8;
        *((_QWORD *)&v861 + 1) = v454;
        sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v855, (uint64_t)&v853, (uint64_t)&v851);
        v832 = 0;
        swift_release();
        _os_log_impl(&dword_21190D000, (os_log_t)v830, (os_log_type_t)v825, "FMFDataManager: Follower+following+futureFollower friends - %@", v457, 0xCu);
        sub_211958C38(&qword_254AC8868);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v458, -1, -1);
        sub_211966624();
      }
      goto LABEL_381;
    }

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v811)(v447, v826);
    v459 = v844;
    v195 = *(_QWORD *)(v796 + 104);
    v830 = sub_21195A26C(v195);
    if (v830)
    {
      if (v830 < 1)
        goto LABEL_373;
      v460 = (*(_QWORD *)(v796 + 80) + 24);
      v461 = v839;
      v462 = v195 + ((*(unsigned __int8 *)(v839 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v839 + 80));
      v807 = v195;
      swift_bridgeObjectRetain();
      v825 = v460;
      swift_beginAccess();
      v463 = type metadata accessor for FMFIntermediateFriend;
      v824 = *(_QWORD *)(v461 + 72);
      do
      {
        sub_211934794(v462, (uint64_t)v394, (uint64_t (*)(_QWORD))v463);
        v467 = v463;
        v468 = *v394;
        v469 = v394[1];
        isa = (uint64_t)v825->isa;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v471 = v805;
        sub_21195991C(v468, v469, isa, v805);
        swift_bridgeObjectRelease();
        v472 = v471;
        swift_bridgeObjectRelease();
        v473 = v459;
        v474 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v459 + 48);
        v475 = v845;
        if (v474(v472, 1, v845) == 1)
        {
          sub_211923EE8(v472, &qword_254AC8870);
          v476 = *v394;
          v477 = v394[1];
          v478 = v843;
          swift_beginAccess();
          v479 = *v478;
          swift_bridgeObjectRetain();
          v480 = v476;
          v481 = v788;
          sub_21195991C(v480, v477, v479, v788);
          swift_bridgeObjectRelease();
          if (v474(v481, 1, v475) == 1)
          {
            sub_211923EE8(v481, &qword_254AC8870);
            swift_endAccess();
            v482 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v473 + 56);
            v483 = v475;
            v484 = v842;
            v482(v842, 1, 1, v483);
            v485 = v840;
            sub_211934794((uint64_t)v394, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
            v823 = *(char **)(v839 + 56);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v823)(v485, 0, 1, v837);
            v853 = 4;
            v854 = 0;
            v851 = 0;
            v852 = 1;
            v486 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56);
            v487 = v838;
            v486(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v488 = v841;
            sub_211956D54(v484, v840, (unint64_t)&v853, (uint64_t)&v851, v487, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
            v489 = swift_retain();
            v490 = v832;
            v822 = (Class *)sub_211959D6C(v489, v488);
            swift_release();
            v491 = swift_retain();
            v808 = sub_2119599C4(v491, v488, (uint64_t)&unk_24CCCC5E0);
            v832 = v490;
            swift_release();
            sub_211934794((uint64_t)v488, v484, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v482(v484, 0, 1, v845);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v823)(v840, 1, 1, v837);
            v853 = 0;
            v854 = 1;
            v851 = 0;
            v852 = 1;
            v394 = (uint64_t *)v831;
            v486(v487, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v492 = v836;
            sub_211956D54(v484, v840, (unint64_t)&v853, (uint64_t)&v851, v487, 0, 1, (uint64_t *)&v861, v836, (uint64_t)v822, v808, 2u, 2u, 2);
            sub_21195BCAC((uint64_t)v492, (uint64_t)v488, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v493 = *v488;
            v494 = v488[1];
            sub_211934794((uint64_t)v488, v484, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v482(v484, 0, 1, v845);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v459 = v844;
            sub_211959038(v484, v493, v494);
            v463 = type metadata accessor for FMFIntermediateFriend;
            swift_endAccess();
            sub_211934758((uint64_t)v394, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
            v495 = (uint64_t)v488;
            v496 = type metadata accessor for FMFFriend;
          }
          else
          {
            v497 = v778;
            sub_211942810(v481, (uint64_t)v778, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_endAccess();
            v498 = v842;
            sub_211934794((uint64_t)v497, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v499 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v473 + 56);
            v499(v498, 0, 1, v475);
            v500 = v475;
            v501 = v840;
            sub_211934794(v831, v840, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v839 + 56))(v501, 0, 1, v837);
            v853 = 4;
            v854 = 0;
            v851 = 0;
            v852 = 1;
            v502 = v838;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v503 = v841;
            sub_211956D54(v498, v501, (unint64_t)&v853, (uint64_t)&v851, v502, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
            sub_211934758((uint64_t)v497, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            sub_211942810((uint64_t)v503, (uint64_t)v497, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v504 = *v497;
            v505 = v497[1];
            sub_211934794((uint64_t)v497, v498, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v499(v498, 0, 1, v500);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v506 = v498;
            v459 = v844;
            sub_211959038(v506, v504, v505);
            v463 = type metadata accessor for FMFIntermediateFriend;
            swift_endAccess();
            v507 = (uint64_t)v497;
            v394 = (uint64_t *)v831;
            sub_211934758(v507, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v495 = (uint64_t)v394;
            v496 = type metadata accessor for FMFIntermediateFriend;
          }
          sub_211934758(v495, (uint64_t (*)(_QWORD))v496);
        }
        else
        {
          v464 = v787;
          v823 = (char *)v462;
          sub_211942810(v472, v787, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v465 = v842;
          sub_211934794(v464, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v473 + 56))(v465, 0, 1, v475);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_211959038(v465, v468, v469);
          swift_endAccess();
          v466 = v464;
          v394 = (uint64_t *)v831;
          v462 = (uint64_t)v823;
          sub_211934758(v466, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211934758((uint64_t)v394, (uint64_t (*)(_QWORD))v467);
          v463 = v467;
          v459 = v473;
        }
        v462 += v824;
        --v830;
      }
      while (v830);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_release();
    }
    v508 = sub_21195CC6C();
    v509 = v768;
    v820 = v508;
    v510 = v826;
    ((void (*)(char *))v810)(v768);
    v511 = v774;
    swift_retain();
    v512 = sub_211A47724();
    v513 = sub_211A47D18();
    v514 = swift_allocObject();
    *(_BYTE *)(v514 + 16) = 64;
    v180 = swift_allocObject();
    *(_BYTE *)(v180 + 16) = 8;
    v515 = swift_allocObject();
    *(_QWORD *)(v515 + 16) = sub_2119FB9D0;
    *(_QWORD *)(v515 + 24) = v511;
    v516 = swift_allocObject();
    *(_QWORD *)(v516 + 16) = sub_2119778B8;
    *(_QWORD *)(v516 + 24) = v515;
    v517 = swift_allocObject();
    v195 = sub_2119E0CDC(v517, 3);
    *v518 = sub_2119FCAAC;
    v518[1] = v514;
    v518[2] = sub_2119FCAAC;
    v518[3] = v180;
    v518[4] = sub_2119FCAA8;
    v518[5] = v516;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v836) = v513;
    if (os_log_type_enabled(v512, (os_log_type_t)v513))
    {
      v519 = (uint8_t *)sub_21196661C();
      v520 = swift_slowAlloc();
      v851 = v520;
      v849 = 0;
      *(_WORD *)v519 = 258;
      v853 = (uint64_t)(v519 + 2);
      *(_QWORD *)&v861 = sub_2119FCAAC;
      *((_QWORD *)&v861 + 1) = v514;
      v195 = (uint64_t)v832;
      sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v853, (uint64_t)&v851, (uint64_t)&v849);
      if (!v195)
      {
        swift_release();
        *(_QWORD *)&v861 = sub_2119FCAAC;
        *((_QWORD *)&v861 + 1) = v180;
        sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v853, (uint64_t)&v851, (uint64_t)&v849);
        swift_release();
        *(_QWORD *)&v861 = sub_2119FCAA8;
        *((_QWORD *)&v861 + 1) = v516;
        sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v853, (uint64_t)&v851, (uint64_t)&v849);
        v832 = 0;
        swift_release();
        _os_log_impl(&dword_21190D000, v512, (os_log_type_t)v836, "Follower+following+futureFollower+futureFollowing friends - %@", v519, 0xCu);
        sub_211958C38(&qword_254AC8868);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v520, -1, -1);
        sub_211966624();
      }
      goto LABEL_381;
    }

    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v811)(v509, v510);
    v521 = v783;
    v522 = sub_21195A988();
    v523 = sub_21195A1EC(v522);
    v831 = v522;
    if (v523)
    {
      v524 = v523;
      if (v523 < 1)
        goto LABEL_374;
      v525 = v522 + ((*(unsigned __int8 *)(v833 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v833 + 80));
      v526 = *(_QWORD **)(v833 + 72);
      v834 = v526;
      v195 = (uint64_t)v843;
      do
      {
        sub_211934794(v525, (uint64_t)v521, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v535 = v521[1];
        if (v535)
        {
          v536 = *v521;
          swift_beginAccess();
          v537 = *(_QWORD *)v195;
          swift_bridgeObjectRetain();
          v538 = v537;
          v539 = v793;
          sub_21195991C(v536, v535, v538, v793);
          v180 = v844;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v844 + 48))(v539, 1, v845) == 1)
          {
            sub_211923EE8(v539, &qword_254AC8870);
            swift_endAccess();
            swift_bridgeObjectRelease();
          }
          else
          {
            v527 = v779;
            sub_211942810(v539, (uint64_t)v779, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v528 = v842;
            sub_211934794((uint64_t)v527, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v836 = *(_QWORD **)(v180 + 56);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v528, 0, 1, v845);
            v529 = v840;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v839 + 56))(v840, 1, 1, v837);
            v853 = 0;
            v854 = 1;
            v851 = 0;
            v852 = 1;
            v530 = v838;
            sub_211934794((uint64_t)v521, v838, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v833 + 56))(v530, 0, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v531 = v841;
            sub_211956D54(v528, v529, (unint64_t)&v853, (uint64_t)&v851, v530, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
            sub_211934758((uint64_t)v527, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v532 = (uint64_t)v531;
            v521 = v783;
            sub_211942810(v532, (uint64_t)v527, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v533 = *v527;
            v180 = v527[1];
            sub_211934794((uint64_t)v527, v528, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v528, 0, 1, v845);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_211959038(v528, v533, v180);
            swift_endAccess();
            v534 = (uint64_t)v527;
            v526 = v834;
            sub_211934758(v534, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          }
        }
        sub_211934758((uint64_t)v521, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v525 += (uint64_t)v526;
        --v524;
      }
      while (v524);
    }
    swift_bridgeObjectRelease();
    v540 = *(_QWORD *)(v796 + 152);
    v541 = sub_21195A26C(v540);
    if (v541)
    {
      v542 = v541;
      v543 = v844;
      v544 = v789;
      if (v541 < 1)
        goto LABEL_375;
      swift_bridgeObjectRetain();
      v831 = v540;
      v545 = (unsigned __int8 *)(v540 + 48);
      v546 = type metadata accessor for FMFFriend;
      do
      {
        v547 = v546;
        v549 = *((_QWORD *)v545 - 2);
        v548 = *((_QWORD *)v545 - 1);
        v550 = *v545;
        v551 = v843;
        swift_beginAccess();
        v552 = *v551;
        swift_bridgeObjectRetain();
        v553 = v549;
        v554 = v552;
        v555 = v804;
        v180 = v845;
        sub_21195991C(v553, v548, v554, v804);
        if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v543 + 48))(v555, 1, v180) == 1)
        {
          sub_211923EE8(v555, &qword_254AC8870);
          swift_endAccess();
          swift_bridgeObjectRelease();
          v546 = v547;
        }
        else
        {
          LODWORD(v836) = v550;
          v556 = v544;
          v557 = v555;
          v558 = v786;
          v546 = v547;
          sub_211942810(v557, (uint64_t)v786, (uint64_t (*)(_QWORD))v547);
          swift_endAccess();
          if ((*((_BYTE *)v558 + *(int *)(v180 + 36)) & 2) != 0)
          {
            v559 = v842;
            sub_211934794((uint64_t)v558, v842, (uint64_t (*)(_QWORD))v547);
            v834 = *(_QWORD **)(v543 + 56);
            v560 = v559;
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v834)(v559, 0, 1, v845);
            v561 = v840;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v839 + 56))(v840, 1, 1, v837);
            v853 = 0;
            v854 = 1;
            v851 = 0;
            v852 = 1;
            v562 = v838;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v563 = v841;
            v564 = v561;
            v565 = v844;
            sub_211956D54(v560, v564, (unint64_t)&v853, (uint64_t)&v851, v562, 0, 1, (uint64_t *)&v861, v841, 0, 0, v836, 2u, 2);
            swift_bridgeObjectRelease();
            sub_211934758((uint64_t)v558, (uint64_t (*)(_QWORD))v547);
            sub_211942810((uint64_t)v563, (uint64_t)v558, (uint64_t (*)(_QWORD))v547);
            v566 = *v558;
            v180 = v558[1];
            sub_211934794((uint64_t)v558, v560, (uint64_t (*)(_QWORD))v547);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v834)(v560, 0, 1, v845);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v567 = v560;
            v543 = v565;
            v568 = v789;
            sub_211959038(v567, v566, v180);
            swift_endAccess();
            v569 = (uint64_t)v558;
            v544 = v568;
            v546 = v547;
            sub_211934758(v569, (uint64_t (*)(_QWORD))v547);
          }
          else
          {
            sub_211934758((uint64_t)v558, (uint64_t (*)(_QWORD))v547);
            swift_bridgeObjectRelease();
            v544 = v556;
          }
        }
        v545 += 24;
        --v542;
      }
      while (v542);
      v195 = (uint64_t)v544;
      swift_bridgeObjectRelease();
    }
    else
    {
      v195 = (uint64_t)v789;
    }
    v570 = *(_QWORD *)(v796 + 144);
    v571 = sub_21195A26C(v570);
    v572 = (uint64_t)v776;
    if (v571)
    {
      v573 = v571;
      if (v571 < 1)
        goto LABEL_376;
      swift_bridgeObjectRetain();
      v834 = (_QWORD *)v570;
      v574 = (unsigned __int8 *)(v570 + 48);
      v575 = v195;
      do
      {
        v577 = *((_QWORD *)v574 - 2);
        v576 = *((_QWORD *)v574 - 1);
        v180 = *v574;
        v578 = v843;
        swift_beginAccess();
        v579 = *v578;
        swift_bridgeObjectRetain();
        v580 = v845;
        sub_21195991C(v577, v576, v579, v575);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v844 + 48))(v575, 1, v580) == 1)
        {
          sub_211923EE8(v575, &qword_254AC8870);
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
        else
        {
          v581 = v575;
          v582 = v575;
          v583 = v785;
          sub_211942810(v582, (uint64_t)v785, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          swift_endAccess();
          v584 = v840;
          if ((*((_BYTE *)v583 + *(int *)(v580 + 36)) & 2) != 0)
          {
            v585 = v842;
            sub_211934794((uint64_t)v583, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v836 = *(_QWORD **)(v844 + 56);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v585, 0, 1, v845);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v839 + 56))(v584, 1, 1, v837);
            v853 = 0;
            v854 = 1;
            v851 = 0;
            v852 = 1;
            v586 = v838;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v587 = sub_21195A270(v180, 0);
            swift_bridgeObjectRelease();
            v588 = v841;
            sub_211956D54(v585, v840, (unint64_t)&v853, (uint64_t)&v851, v586, 0, 1, (uint64_t *)&v861, v841, 0, 0, 2u, (v587 & 1) == 0, 2);
            sub_211934758((uint64_t)v583, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            sub_211942810((uint64_t)v588, (uint64_t)v583, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v589 = *v583;
            v180 = v583[1];
            sub_211934794((uint64_t)v583, v585, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v585, 0, 1, v845);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_211959038(v585, v589, v180);
            swift_endAccess();
            v590 = (uint64_t)v583;
            v575 = (uint64_t)v789;
            sub_211934758(v590, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          }
          else
          {
            sub_211934758((uint64_t)v583, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            swift_bridgeObjectRelease();
            v575 = v581;
          }
        }
        v574 += 24;
        --v573;
      }
      while (v573);
      swift_bridgeObjectRelease();
      v572 = (uint64_t)v776;
    }
    v823 = *(char **)(v796 + 80);
    v591 = *((_QWORD *)v823 + 7);
    v592 = v843;
    if (v591)
    {
      v593 = *((_QWORD *)v823 + 8);
      v180 = *((_QWORD *)v823 + 5);
      v594 = *((_QWORD *)v823 + 6);
      swift_bridgeObjectRetain();
      sub_21192769C(v180, v594, v591);
      sub_21195A23C(v180, v594, v591);
      if (v593)
      {
LABEL_167:
        v597 = sub_21195A26C(v593);
        if (v597)
        {
          v195 = v597;
          if (v597 < 1)
            goto LABEL_377;
          v834 = (_QWORD *)v593;
          v598 = (unint64_t *)(v593 + 48);
          while (1)
          {
            v600 = *(v598 - 2);
            v599 = *(v598 - 1);
            v180 = *v598;
            swift_beginAccess();
            v601 = *v592;
            swift_bridgeObjectRetain();
            v602 = v845;
            sub_21195991C(v600, v599, v601, v572);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v844 + 48))(v572, 1, v602) == 1)
            {
              sub_211923EE8(v572, &qword_254AC8870);
              swift_endAccess();
            }
            else
            {
              v603 = v781;
              sub_211942810(v572, v781, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
              swift_endAccess();
              v604 = v840;
              if ((*(_BYTE *)(v603 + *(int *)(v602 + 36)) & 2) != 0)
              {
                v605 = (uint64_t *)v603;
                v606 = v842;
                sub_211934794(v603, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
                v836 = *(_QWORD **)(v844 + 56);
                ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v606, 0, 1, v845);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v839 + 56))(v604, 1, 1, v837);
                v853 = 0;
                v854 = 1;
                v851 = 0;
                v852 = 1;
                v607 = v604;
                v608 = v838;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
                v864 = 0;
                v862 = 0u;
                v863 = 0u;
                v861 = 0u;
                v609 = v841;
                sub_211956D54(v606, v607, (unint64_t)&v853, (uint64_t)&v851, v608, v180, 0, (uint64_t *)&v861, v841, 0, 0, 2u, 2u, 2);
                swift_bridgeObjectRelease();
                sub_211934758((uint64_t)v605, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
                v610 = (uint64_t)v609;
                v572 = (uint64_t)v776;
                sub_211942810(v610, (uint64_t)v605, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
                v611 = *v605;
                v180 = v605[1];
                sub_211934794((uint64_t)v605, v606, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
                ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v606, 0, 1, v845);
                v612 = v843;
                swift_beginAccess();
                swift_bridgeObjectRetain();
                v613 = v606;
                v592 = v612;
                sub_211959038(v613, v611, v180);
                swift_endAccess();
                sub_211934758((uint64_t)v605, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
                goto LABEL_172;
              }
              sub_211934758(v603, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            }
            swift_bridgeObjectRelease();
            v592 = v843;
LABEL_172:
            v598 += 3;
            if (!--v195)
              goto LABEL_177;
          }
        }
        goto LABEL_177;
      }
    }
    v595 = *(_QWORD *)(v796 + 760);
    if (v595)
    {
      v593 = *(_QWORD *)(v796 + 768);
      v596 = *(_QWORD *)(v796 + 752);
      v180 = *(_QWORD *)(v796 + 744);
      swift_bridgeObjectRetain();
      sub_21192769C(v180, v596, v595);
      sub_21195A23C(v180, v596, v595);
      swift_bridgeObjectRelease();
      if (!v593)
        goto LABEL_178;
      goto LABEL_167;
    }
LABEL_177:
    swift_bridgeObjectRelease();
LABEL_178:
    v614 = *((_QWORD *)v823 + 2);
    v615 = *(_QWORD *)(v614 + 64);
    v830 = v614 + 64;
    v0 = 1 << *(_BYTE *)(v614 + 32);
    v616 = -1;
    if (v0 < 64)
      v616 = ~(-1 << v0);
    v617 = v616 & v615;
    swift_beginAccess();
    v836 = (_QWORD *)((unint64_t)(v0 + 63) >> 6);
    v825 = ((char *)v836 - 1);
    swift_bridgeObjectRetain();
    v618 = 0;
    v174 = (uint64_t)type metadata accessor for FMFFriend;
    v195 = (uint64_t)v812;
    if (v617)
    {
LABEL_181:
      v619 = __clz(__rbit64(v617));
      v617 &= v617 - 1;
      v620 = v619 | (v618 << 6);
LABEL_182:
      v621 = *(_QWORD *)(v614 + 56);
      v622 = (_QWORD *)(*(_QWORD *)(v614 + 48) + 16 * v620);
      v623 = v622[1];
      v624 = (uint64_t)v821;
      *v821 = *v622;
      *(_QWORD *)(v624 + 8) = v623;
      v625 = v621 + *(_QWORD *)(v844 + 72) * v620;
      v626 = sub_211958C38(&qword_254ACD780);
      sub_211934794(v625, v624 + *(int *)(v626 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v626 - 8) + 56))(v624, 0, 1, v626);
      swift_bridgeObjectRetain();
      v195 = (uint64_t)v812;
      goto LABEL_189;
    }
    while (1)
    {
      v627 = v618 + 1;
      if (__OFADD__(v618, 1))
        goto LABEL_362;
      if (v627 >= (uint64_t)v836)
      {
        v624 = (uint64_t)v821;
      }
      else
      {
        v628 = *(_QWORD *)(v830 + 8 * v627);
        v624 = (uint64_t)v821;
        if (v628)
          goto LABEL_186;
        v618 += 2;
        if (v627 + 1 >= (uint64_t)v836)
        {
          v618 = v627;
        }
        else
        {
          v628 = *(_QWORD *)(v830 + 8 * v618);
          if (v628)
          {
            ++v627;
LABEL_186:
            v617 = (v628 - 1) & v628;
            v620 = __clz(__rbit64(v628)) + (v627 << 6);
            v618 = v627;
            goto LABEL_182;
          }
          if (v627 + 2 < (uint64_t)v836)
          {
            v628 = *(_QWORD *)(v830 + 8 * (v627 + 2));
            if (v628)
            {
              v627 += 2;
              goto LABEL_186;
            }
            v636 = v627 + 3;
            if (v627 + 3 < (uint64_t)v836)
            {
              v628 = *(_QWORD *)(v830 + 8 * v636);
              if (!v628)
              {
                while (1)
                {
                  v627 = v636 + 1;
                  if (__OFADD__(v636, 1))
                    goto LABEL_378;
                  if (v627 >= (uint64_t)v836)
                  {
                    v618 = (uint64_t)v825;
                    goto LABEL_188;
                  }
                  v628 = *(_QWORD *)(v830 + 8 * v627);
                  ++v636;
                  if (v628)
                    goto LABEL_186;
                }
              }
              v627 += 3;
              goto LABEL_186;
            }
            v618 = v627 + 2;
          }
        }
      }
LABEL_188:
      v629 = sub_211958C38(&qword_254ACD780);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v629 - 8) + 56))(v624, 1, 1, v629);
      v617 = 0;
LABEL_189:
      sub_21192DD68(v624, v195, &qword_254ACD770);
      v630 = sub_211958C38(&qword_254ACD780);
      v180 = *(_QWORD *)(v630 - 8);
      v631 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
      if (v631(v195, 1, v630) == 1)
        break;
      v632 = *(_QWORD *)v195;
      v180 = *(_QWORD *)(v195 + 8);
      v633 = v195 + *(int *)(v630 + 48);
      v634 = v842;
      sub_211942810(v633, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v844 + 56))(v634, 0, 1, v845);
      v635 = v632;
      v0 = (int64_t)v843;
      sub_211959038(v634, v635, v180);
      if (v617)
        goto LABEL_181;
    }
    v834 = v631;
    swift_endAccess();
    swift_release();
    v0 = (int64_t)v823;
    swift_beginAccess();
    v637 = *(_QWORD *)(v0 + 24);
    v638 = *(_QWORD *)(v637 + 64);
    v824 = v637 + 64;
    v639 = 1 << *(_BYTE *)(v637 + 32);
    v640 = -1;
    if (v639 < 64)
      v640 = ~(-1 << v639);
    v641 = v640 & v638;
    v825 = ((unint64_t)(v639 + 63) >> 6);
    v822 = (Class *)((char *)&v825[-1].isa + 7);
    v830 = v637;
    swift_bridgeObjectRetain();
    v642 = 0;
    v643 = v818;
    v195 = (uint64_t)v819;
    v174 = (uint64_t)v766;
    v831 = v180;
LABEL_213:
    if (v641)
    {
      v649 = __clz(__rbit64(v641));
      v641 &= v641 - 1;
      v650 = v649 | (v642 << 6);
      goto LABEL_215;
    }
    v654 = v642 + 1;
    if (__OFADD__(v642, 1))
      continue;
    break;
  }
  if (v654 >= (uint64_t)v825)
  {
LABEL_224:
    v836 = *(_QWORD **)(v180 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v836)(v195, 1, 1, v630);
    v641 = 0;
    goto LABEL_225;
  }
  v655 = *(_QWORD *)(v824 + 8 * v654);
  if (!v655)
  {
    v642 += 2;
    if (v654 + 1 >= (uint64_t)v825)
    {
      v642 = v654;
    }
    else
    {
      v655 = *(_QWORD *)(v824 + 8 * v642);
      if (v655)
      {
        ++v654;
        goto LABEL_219;
      }
      if (v654 + 2 < (uint64_t)v825)
      {
        v655 = *(_QWORD *)(v824 + 8 * (v654 + 2));
        if (v655)
        {
          v654 += 2;
          goto LABEL_219;
        }
        v659 = v654 + 3;
        if (v654 + 3 >= (uint64_t)v825)
        {
          v642 = v654 + 2;
        }
        else
        {
          v655 = *(_QWORD *)(v824 + 8 * v659);
          if (v655)
          {
            v654 += 3;
            goto LABEL_219;
          }
          while (1)
          {
            v654 = v659 + 1;
            if (__OFADD__(v659, 1))
              goto LABEL_379;
            if (v654 >= (uint64_t)v825)
              break;
            v655 = *(_QWORD *)(v824 + 8 * v654);
            ++v659;
            if (v655)
              goto LABEL_219;
          }
          v642 = (uint64_t)v822;
        }
      }
    }
    goto LABEL_224;
  }
LABEL_219:
  v641 = (v655 - 1) & v655;
  v650 = __clz(__rbit64(v655)) + (v654 << 6);
  v642 = v654;
LABEL_215:
  v651 = *(_QWORD *)(v830 + 56);
  v652 = (_QWORD *)(*(_QWORD *)(v830 + 48) + 16 * v650);
  v653 = v652[1];
  *(_QWORD *)v195 = *v652;
  *(_QWORD *)(v195 + 8) = v653;
  sub_211934794(v651 + *(_QWORD *)(v844 + 72) * v650, v195 + *(int *)(v630 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v836 = *(_QWORD **)(v180 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v195, 0, 1, v630);
  swift_bridgeObjectRetain();
LABEL_225:
  sub_21192DD68(v195, (uint64_t)v643, &qword_254ACD770);
  if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v834)(v643, 1, v630) != 1)
  {
    v656 = *v643;
    v657 = v643[1];
    sub_211942810((uint64_t)v643 + *(int *)(v630 + 48), v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v658 = v845;
    if (sub_211974430(*(_QWORD *)(v174 + *(int *)(v845 + 36)), 0))
    {
      v645 = v174;
      v646 = v842;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v844 + 56))(v842, 1, 1, v658);
    }
    else
    {
      v644 = v174;
      v645 = v174;
      v646 = v842;
      sub_211934794(v644, v842, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v844 + 56))(v646, 0, 1, v658);
    }
    v647 = (int64_t)v843;
    swift_beginAccess();
    v648 = v656;
    v0 = v647;
    sub_211959038(v646, v648, v657);
    swift_endAccess();
    sub_211934758(v645, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v643 = v818;
    v195 = (uint64_t)v819;
    v174 = v645;
    v180 = v831;
    goto LABEL_213;
  }
  swift_release();
  v660 = (uint64_t)v823;
  swift_beginAccess();
  v661 = *(_QWORD *)(v660 + 32);
  v662 = *(_QWORD *)(v661 + 64);
  v830 = v661 + 64;
  v0 = 1 << *(_BYTE *)(v661 + 32);
  v663 = -1;
  if (v0 < 64)
    v663 = ~(-1 << v0);
  v664 = v663 & v662;
  swift_beginAccess();
  v831 = (unint64_t)(v0 + 63) >> 6;
  v825 = (v831 - 1);
  swift_bridgeObjectRetain();
  v195 = 0;
  v665 = v842;
  if (v664)
  {
LABEL_243:
    v666 = __clz(__rbit64(v664));
    v664 &= v664 - 1;
    v667 = v666 | (v195 << 6);
    v668 = v827;
    v174 = (uint64_t)v829;
    v669 = v817;
LABEL_244:
    v670 = *(_QWORD *)(v661 + 56);
    v671 = (_QWORD *)(*(_QWORD *)(v661 + 48) + 16 * v667);
    v672 = v671[1];
    *v669 = *v671;
    v669[1] = v672;
    sub_211934794(v670 + *(_QWORD *)(v844 + 72) * v667, (uint64_t)v669 + *(int *)(v630 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v836)(v669, 0, 1, v630);
    swift_bridgeObjectRetain();
    goto LABEL_254;
  }
  while (2)
  {
    v673 = v195 + 1;
    v668 = v827;
    v174 = (uint64_t)v829;
    if (__OFADD__(v195, 1))
      goto LABEL_364;
    v669 = v817;
    if (v673 < v831)
    {
      v674 = *(_QWORD *)(v830 + 8 * v673);
      if (v674)
        goto LABEL_248;
      v195 += 2;
      if (v673 + 1 >= v831)
      {
        v195 = v673;
      }
      else
      {
        v674 = *(_QWORD *)(v830 + 8 * v195);
        if (v674)
        {
          ++v673;
LABEL_248:
          v664 = (v674 - 1) & v674;
          v667 = __clz(__rbit64(v674)) + (v673 << 6);
          v195 = v673;
          goto LABEL_244;
        }
        if (v673 + 2 < v831)
        {
          v674 = *(_QWORD *)(v830 + 8 * (v673 + 2));
          if (v674)
          {
            v673 += 2;
            goto LABEL_248;
          }
          v681 = v673 + 3;
          if (v673 + 3 < v831)
          {
            v674 = *(_QWORD *)(v830 + 8 * v681);
            if (v674)
            {
              v673 += 3;
              goto LABEL_248;
            }
            while (1)
            {
              v673 = v681 + 1;
              if (__OFADD__(v681, 1))
                break;
              if (v673 >= v831)
              {
                v195 = (uint64_t)v825;
                goto LABEL_253;
              }
              v674 = *(_QWORD *)(v830 + 8 * v673);
              ++v681;
              if (v674)
                goto LABEL_248;
            }
LABEL_380:
            __break(1u);
LABEL_381:

            __break(1u);
            __break(1u);
LABEL_382:
            result = sub_211A48294();
            __break(1u);
            return result;
          }
          v195 = v673 + 2;
        }
      }
    }
LABEL_253:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v836)(v817, 1, 1, v630);
    v664 = 0;
LABEL_254:
    v675 = (uint64_t)v669;
    v676 = v816;
    sub_21192DD68(v675, (uint64_t)v816, &qword_254ACD770);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v834)(v676, 1, v630) != 1)
    {
      v677 = v676;
      v678 = *v676;
      v180 = v676[1];
      v679 = (uint64_t)v677 + *(int *)(v630 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v844 + 56))(v665, 1, 1, v845);
      v680 = v678;
      v0 = (int64_t)v843;
      sub_211959038(v665, v680, v180);
      sub_211934758(v679, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if (v664)
        goto LABEL_243;
      continue;
    }
    break;
  }
  swift_endAccess();
  swift_release();
  v682 = *v843;
  v683 = *(_QWORD *)(*v843 + 64);
  v817 = (char *)(*v843 + 64);
  v684 = 1 << *(_BYTE *)(v682 + 32);
  v685 = -1;
  if (v684 < 64)
    v685 = ~(-1 << v684);
  v831 = v685 & v683;
  v0 = (unint64_t)(v684 + 63) >> 6;
  v807 = v0 - 1;
  v686 = swift_bridgeObjectRetain();
  v687 = 0;
  v819 = (char *)v0;
  v812 = (char *)(v0 - 5);
  v822 = (Class *)v686;
  v816 = (uint64_t *)(v686 + 104);
  v818 = (uint64_t *)(MEMORY[0x24BEE4AD8] + 8);
  v195 = v845;
  v180 = (unint64_t)v802;
  v688 = v828;
  v808 = v630;
  while (2)
  {
    if (v831)
    {
      v689 = v668;
      v690 = __clz(__rbit64(v831));
      v831 &= v831 - 1;
      v691 = v690 | (v687 << 6);
      goto LABEL_275;
    }
    v696 = v687 + 1;
    if (__OFADD__(v687, 1))
      goto LABEL_365;
    if (v696 >= (uint64_t)v819)
    {
      v689 = v668;
      goto LABEL_281;
    }
    v697 = *(_QWORD *)&v817[8 * v696];
    if (!v697)
    {
      if (v687 + 2 >= (uint64_t)v819)
      {
        v689 = v668;
        ++v687;
      }
      else
      {
        v697 = *(_QWORD *)&v817[8 * v687 + 16];
        if (v697)
        {
          v696 = v687 + 2;
          goto LABEL_279;
        }
        if (v687 + 3 >= (uint64_t)v819)
        {
          v689 = v668;
          v687 += 2;
        }
        else
        {
          v697 = *(_QWORD *)&v817[8 * v687 + 24];
          if (v697)
          {
            v696 = v687 + 3;
            goto LABEL_279;
          }
          v696 = v687 + 4;
          if (v687 + 4 < (uint64_t)v819)
          {
            v697 = *(_QWORD *)&v817[8 * v696];
            if (v697)
              goto LABEL_279;
            v698 = v815;
            while (v812 != (char *)v687)
            {
              v697 = v816[v687++];
              if (v697)
              {
                v696 = v687 + 4;
                goto LABEL_279;
              }
            }
            v689 = v668;
            v687 = v807;
            goto LABEL_282;
          }
          v689 = v668;
          v687 += 3;
        }
      }
LABEL_281:
      v698 = v815;
LABEL_282:
      v695 = (uint64_t)v698;
      ((void (*)(void))v836)();
      v831 = 0;
      goto LABEL_283;
    }
LABEL_279:
    v689 = v668;
    v831 = (v697 - 1) & v697;
    v691 = __clz(__rbit64(v697)) + (v696 << 6);
    v687 = v696;
LABEL_275:
    v692 = v822[7];
    v693 = (_QWORD *)((char *)v822[6] + 16 * v691);
    v694 = v693[1];
    v695 = (uint64_t)v815;
    *v815 = *v693;
    *(_QWORD *)(v695 + 8) = v694;
    sub_211934794((uint64_t)v692 + *(_QWORD *)(v844 + 72) * v691, v695 + *(int *)(v630 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v836)(v695, 0, 1, v630);
    swift_bridgeObjectRetain();
LABEL_283:
    sub_21192DD68(v695, v180, &qword_254ACD770);
    if (((unsigned int (*)(unint64_t, uint64_t, uint64_t))v834)(v180, 1, v630) != 1)
    {
      v830 = v687;
      v699 = *(_QWORD *)(v180 + 8);
      v825 = *(NSObject **)v180;
      sub_211942810(v180 + *(int *)(v630 + 48), (uint64_t)v688, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v700 = *(_QWORD *)&v688[*(int *)(v195 + 36)];
      v701 = (uint64_t)v688;
      v702 = v814;
      sub_211934794(v701, v814, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v700 & 2) == 0)
      {
        sub_211934758(v702, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        goto LABEL_287;
      }
      v703 = *(unsigned __int8 *)(v702 + *(int *)(v195 + 40));
      sub_211934758(v702, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if (v703 == 2)
      {
LABEL_287:
        v688 = v828;
        sub_211934794((uint64_t)v828, v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_288:
        v0 = *(_QWORD *)(v174 + *(int *)(v195 + 36));
        sub_211934758(v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((v0 & 8) == 0)
        {
          sub_211934758((uint64_t)v688, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          swift_bridgeObjectRelease();
          v668 = v689;
          v687 = v830;
          continue;
        }
      }
      else
      {
        v688 = v828;
        sub_211934794((uint64_t)v828, v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((v703 & 1) != 0)
          goto LABEL_288;
        sub_211934758(v174, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v824 = v699;
      v704 = v813;
      v810(v813, v820, v826);
      v705 = v841;
      sub_211934794((uint64_t)v688, (uint64_t)v841, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v706 = (*(unsigned __int8 *)(v844 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v844 + 80);
      v707 = swift_allocObject();
      sub_211942810((uint64_t)v705, v707 + v706, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v823 = (char *)sub_211A47724();
      v708 = sub_211A47D30();
      v709 = swift_allocObject();
      *(_BYTE *)(v709 + 16) = 32;
      v710 = swift_allocObject();
      *(_BYTE *)(v710 + 16) = 8;
      v711 = swift_allocObject();
      *(_QWORD *)(v711 + 16) = sub_2119FC058;
      *(_QWORD *)(v711 + 24) = v707;
      v712 = swift_allocObject();
      *(_QWORD *)(v712 + 16) = sub_2119213A8;
      *(_QWORD *)(v712 + 24) = v711;
      v713 = swift_allocObject();
      sub_2119E0CDC(v713, 3);
      *v714 = sub_2119FCAAC;
      v714[1] = v709;
      v714[2] = sub_2119FCAAC;
      v714[3] = v710;
      v714[4] = sub_2119FC0B0;
      v714[5] = v712;
      swift_retain();
      swift_retain();
      swift_retain();
      v715 = v823;
      swift_bridgeObjectRelease();
      LODWORD(v821) = v708;
      if (os_log_type_enabled(v715, (os_log_type_t)v708))
      {
        v716 = v715;
        v717 = (uint8_t *)sub_21196661C();
        v718 = swift_slowAlloc();
        v847 = 0;
        v846 = v718;
        *(_WORD *)v717 = 258;
        v849 = v717 + 2;
        *(_QWORD *)&v861 = sub_2119FCAAC;
        *((_QWORD *)&v861 + 1) = v709;
        v195 = (uint64_t)v832;
        sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v849, (uint64_t)&v847, (uint64_t)&v846);
        if (!v195)
        {
          swift_release();
          *(_QWORD *)&v861 = sub_2119FCAAC;
          *((_QWORD *)&v861 + 1) = v710;
          sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v849, (uint64_t)&v847, (uint64_t)&v846);
          swift_release();
          *(_QWORD *)&v861 = sub_2119FC0B0;
          *((_QWORD *)&v861 + 1) = v712;
          sub_211966D28((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v861, (uint64_t)&v849, (uint64_t)&v847, (uint64_t)&v846);
          v832 = 0;
          swift_release();
          _os_log_impl(&dword_21190D000, v716, (os_log_type_t)v821, "FMFDataManager: checking if person is blocked %s", v717, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v718, -1, -1);
          sub_211966624();
        }
        goto LABEL_381;
      }

      swift_release();
      swift_release();
      swift_release();
      ((void (*)(char *, uint64_t))v811)(v704, v826);
      v195 = v845;
      v668 = v827;
      v688 = v828;
      v630 = v808;
      v0 = (int64_t)v828;
      v719 = FMFFriend.isBlocked()();
      v180 = (unint64_t)v802;
      v174 = (uint64_t)v829;
      v720 = v824;
      if (v719)
      {
        v721 = v842;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v844 + 56))(v842, 1, 1, v195);
        v722 = (int64_t)v843;
        swift_beginAccess();
        v723 = v721;
        v0 = v722;
        sub_211959038(v723, (uint64_t)v825, v720);
        swift_endAccess();
        sub_211934758((uint64_t)v688, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934758((uint64_t)v688, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        swift_bridgeObjectRelease();
      }
      v687 = v830;
      continue;
    }
    break;
  }
  swift_release();
  v724 = *(_QWORD *)(v796 + 760);
  if (v724)
  {
    v725 = *(unsigned __int8 *)(v796 + 744);
    v726 = *(_QWORD *)(v796 + 752);
    v727 = ((unint64_t)*(unsigned int *)(v796 + 745) << 8) | ((unint64_t)(*(unsigned __int16 *)(v796 + 749) | (*(unsigned __int8 *)(v796 + 751) << 16)) << 40) | v725;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21195A23C(v727, v726, v724);
    if ((v725 & 1) == 0)
    {
      v728 = *v843;
      v729 = *(_QWORD *)(*v843 + 64);
      v827 = *v843 + 64;
      v730 = 1 << *(_BYTE *)(v728 + 32);
      v731 = -1;
      if (v730 < 64)
        v731 = ~(-1 << v730);
      v180 = v731 & v729;
      v0 = (unint64_t)(v730 + 63) >> 6;
      v824 = v0 - 1;
      v732 = swift_bridgeObjectRetain();
      v733 = 0;
      v829 = (uint64_t *)v0;
      v830 = v732;
      v825 = (v732 + 104);
      v826 = v0 - 5;
      v174 = (uint64_t)type metadata accessor for FMFFriend;
      v734 = v777;
      v195 = (uint64_t)v773;
LABEL_322:
      v742 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v834;
      if (v180)
      {
LABEL_323:
        v743 = v742;
        v744 = v195;
        v745 = __clz(__rbit64(v180));
        v180 &= v180 - 1;
        v746 = v745 | ((_QWORD)v733 << 6);
        goto LABEL_324;
      }
      while (1)
      {
        v752 = (uint64_t *)((char *)v733 + 1);
        if (__OFADD__(v733, 1))
          goto LABEL_368;
        if ((uint64_t)v752 >= (uint64_t)v829)
        {
          v751 = v790;
        }
        else
        {
          v753 = *(_QWORD *)(v827 + 8 * (_QWORD)v752);
          v751 = v790;
          if (v753)
            goto LABEL_328;
          if ((uint64_t)((char *)v733 + 2) >= (uint64_t)v829)
          {
            v733 = (uint64_t *)((char *)v733 + 1);
          }
          else
          {
            v753 = *(_QWORD *)(v827 + 8 * ((_QWORD)v733 + 2));
            if (v753)
            {
              v743 = v742;
              v752 = (uint64_t *)((char *)v733 + 2);
              goto LABEL_329;
            }
            if ((uint64_t)((char *)v733 + 3) >= (uint64_t)v829)
            {
              v733 = (uint64_t *)((char *)v733 + 2);
            }
            else
            {
              v753 = *(_QWORD *)(v827 + 8 * ((_QWORD)v733 + 3));
              if (v753)
              {
                v743 = v742;
                v752 = (uint64_t *)((char *)v733 + 3);
LABEL_329:
                v744 = v195;
                v180 = (v753 - 1) & v753;
                v746 = __clz(__rbit64(v753)) + ((_QWORD)v752 << 6);
                v733 = v752;
LABEL_324:
                v747 = *(_QWORD *)(v830 + 56);
                v748 = (_QWORD *)(*(_QWORD *)(v830 + 48) + 16 * v746);
                v749 = v748[1];
                v750 = v790;
                *v790 = *v748;
                v750[1] = v749;
                sub_211934794(v747 + *(_QWORD *)(v844 + 72) * v746, (uint64_t)v750 + *(int *)(v630 + 48), (uint64_t (*)(_QWORD))v174);
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v836)(v750, 0, 1, v630);
                v751 = v750;
                swift_bridgeObjectRetain();
                v195 = v744;
                v742 = v743;
                goto LABEL_332;
              }
              v752 = (uint64_t *)((char *)v733 + 4);
              if ((uint64_t)((char *)v733 + 4) >= (uint64_t)v829)
              {
                v733 = (uint64_t *)((char *)v733 + 3);
              }
              else
              {
                v753 = *(_QWORD *)(v827 + 8 * (_QWORD)v752);
                if (v753)
                {
LABEL_328:
                  v743 = v742;
                  goto LABEL_329;
                }
                while ((uint64_t *)v826 != v733)
                {
                  v753 = (unint64_t)v825[(_QWORD)v733].isa;
                  v733 = (uint64_t *)((char *)v733 + 1);
                  if (v753)
                  {
                    v743 = v742;
                    v752 = (uint64_t *)((char *)v733 + 4);
                    goto LABEL_329;
                  }
                }
                v733 = (uint64_t *)v824;
              }
            }
          }
        }
        ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v836)(v751, 1, 1, v630);
        v180 = 0;
LABEL_332:
        v754 = (uint64_t)v751;
        v755 = v784;
        sub_21192DD68(v754, (uint64_t)v784, &qword_254ACD770);
        if (v742(v755, 1, v630) == 1)
        {
          swift_release();
          break;
        }
        v756 = v755;
        v757 = *v755;
        v0 = v755[1];
        sub_211942810((uint64_t)v756 + *(int *)(v630 + 48), v195, (uint64_t (*)(_QWORD))v174);
        v758 = *(_QWORD *)(v195 + *(int *)(v845 + 36));
        if ((v758 & 8) != 0)
        {
          v831 = v757;
          v841 = v733;
          v759 = (uint64_t (*)(_QWORD))v174;
          if ((v758 & 2) != 0)
          {
            v735 = v842;
            sub_211934794(v195, v842, v759);
            v828 = *(char **)(v844 + 56);
            v736 = v845;
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v828)(v735, 0, 1, v845);
            v737 = v840;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v839 + 56))(v840, 1, 1, v837);
            v849 = 0;
            v850 = 1;
            v847 = 8;
            v848 = 0;
            v738 = v838;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v833 + 56))(v838, 1, 1, v835);
            v864 = 0;
            v862 = 0u;
            v863 = 0u;
            v861 = 0u;
            v739 = v737;
            v734 = v777;
            sub_211956D54(v735, v739, (unint64_t)&v849, (uint64_t)&v847, v738, 0, 1, (uint64_t *)&v861, v777, 0, 0, 2u, 2u, 2);
            v195 = (uint64_t)v773;
            ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v828)(v734, 0, 1, v736);
          }
          else
          {
            (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v844 + 56))(v734, 1, 1, v845);
            v735 = v842;
          }
          sub_21192C6B8((uint64_t)v734, v735, &qword_254AC8870);
          v740 = (int64_t)v843;
          swift_beginAccess();
          v741 = v0;
          v0 = v740;
          sub_211959038(v735, v831, v741);
          swift_endAccess();
          sub_211923EE8((uint64_t)v734, &qword_254AC8870);
          sub_211934758(v195, v759);
          v174 = (uint64_t)v759;
          v733 = v841;
          goto LABEL_322;
        }
        sub_211934758(v195, (uint64_t (*)(_QWORD))v174);
        swift_bridgeObjectRelease();
        if (v180)
          goto LABEL_323;
      }
    }
  }
  swift_retain();
  v760 = swift_bridgeObjectRetain();
  v188 = sub_2119FB600(v760, v796);
  swift_bridgeObjectRelease();
  swift_release();
  v761 = v796;
  if ((*(_BYTE *)(*(_QWORD *)(v796 + 48) + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) & 1) == 0)
  {
    v762 = *(_QWORD *)(v796 + 720);
    swift_bridgeObjectRetain();
    sub_21195D3D0(v188, v762);
    swift_bridgeObjectRelease();
    v761 = v796;
  }
  *(_QWORD *)(v761 + 120) = v188;
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v188;
}

uint64_t storeEnumTagSinglePayload for FMFFriend()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211956D48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211956D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, char a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  int v94;
  uint64_t v95;
  char v96;
  int *v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  char v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t inited;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  char v132;
  int *v133;
  uint64_t *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t result;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  void (*v159)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  char *v192;
  uint64_t v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  int v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;

  v175 = a7;
  v176 = a6;
  v177 = a5;
  v205 = a3;
  v206 = a4;
  v204 = a2;
  v203 = a1;
  v16 = type metadata accessor for FMFLocation();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v160 = (uint64_t)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_211958C38(&qword_254ACA278);
  MEMORY[0x24BDAC7A8](v20, v21);
  v182 = (uint64_t)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = type metadata accessor for FMFIntermediateFriend();
  v161 = *(_QWORD *)(v193 - 8);
  v24 = MEMORY[0x24BDAC7A8](v193, v23);
  v156 = (uint64_t)&v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v155 = (uint64_t)&v153 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v154 = (uint64_t)&v153 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v185 = (char *)&v153 - v33;
  v34 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v34, v35);
  v37 = (char *)&v153 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (int *)type metadata accessor for FMFFriend();
  v39 = *((_QWORD *)v38 - 1);
  MEMORY[0x24BDAC7A8](v38, v40);
  v42 = (uint64_t *)((char *)&v153 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v43, v44);
  v46 = (char *)&v153 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v47, v48);
  v50 = (char *)&v153 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = *(_QWORD *)v205;
  v191 = *(unsigned __int8 *)(v205 + 8);
  v181 = *(_QWORD *)v206;
  v180 = *(unsigned __int8 *)(v206 + 8);
  v167 = *a8;
  v206 = a8[1];
  v166 = a8[2];
  v165 = a8[3];
  v164 = a8[4];
  v163 = a8[5];
  v162 = a8[6];
  v172 = v38[13];
  *((_BYTE *)a9 + v172) = 0;
  v170 = v38[14];
  *((_BYTE *)a9 + v170) = 2;
  v171 = v38[18];
  *((_BYTE *)a9 + v171) = 1;
  v51 = v38[21];
  v195 = a9;
  *((_BYTE *)a9 + v51) = 7;
  v52 = v51;
  v53 = sub_211A47208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v50, 1, 1, v53);
  v174 = v17;
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v178 = v16;
  v54(v46, 1, 1, v16);
  sub_21192C6B8(v203, (uint64_t)v37, &qword_254AC8870);
  v55 = (*(uint64_t (**)(char *, uint64_t, int *))(v39 + 48))(v37, 1, v38);
  v173 = v46;
  v159 = v54;
  v192 = v50;
  if (v55 == 1)
  {
    sub_211923EE8((uint64_t)v37, &qword_254AC8870);
    v199 = 0;
    v186 = 0;
    v187 = 0;
    v183 = 0;
    v56 = 0;
    v57 = 0;
    v196 = 0;
    v58 = 0;
    v59 = 0;
    v184 = 0;
    v60 = 0;
    v189 = 0;
    v200 = 0;
    v190 = 0;
    v61 = 0;
    v205 = 0xE000000000000000;
    v201 = MEMORY[0x24BEE4B08];
    v188 = 2;
    v169 = 0x7FFFFFFFFFFFFFFFLL;
    v158 = 2;
    v194 = 2;
    v198 = 2;
    v197 = 2;
  }
  else
  {
    sub_211923EE8((uint64_t)v46, (uint64_t *)&unk_254AC8CB0);
    sub_211923EE8((uint64_t)v50, qword_254AC8A78);
    sub_211942810((uint64_t)v37, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v190 = *v42;
    v205 = v42[1];
    v62 = v42[3];
    v189 = v42[2];
    v201 = v42[4];
    sub_21192C6B8((uint64_t)v42 + v38[8], (uint64_t)v50, qword_254AC8A78);
    v63 = v38[10];
    v157 = *(_QWORD *)((char *)v42 + v38[9]);
    v188 = *((unsigned __int8 *)v42 + v63);
    v64 = v38[12];
    v197 = *((unsigned __int8 *)v42 + v38[11]);
    v198 = *((unsigned __int8 *)v42 + v64);
    v158 = *((unsigned __int8 *)v42 + v38[18]);
    v65 = v38[14];
    v202 = *((unsigned __int8 *)v42 + v38[13]);
    v194 = *((unsigned __int8 *)v42 + v65);
    v66 = (uint64_t)v42 + v38[20];
    v169 = *(_QWORD *)((char *)v42 + v38[15]);
    sub_21192C6B8(v66, (uint64_t)v46, (uint64_t *)&unk_254AC8CB0);
    v67 = (_QWORD *)((char *)v42 + v38[19]);
    v68 = *v67;
    v179 = v67[1];
    v69 = v67[2];
    v196 = v67[3];
    v70 = v67[4];
    v59 = v67[5];
    v71 = v67[6];
    v72 = v38[17];
    v187 = *(_QWORD *)((char *)v42 + v38[16]);
    v73 = *(_QWORD *)((char *)v42 + v72);
    *((_BYTE *)v195 + v52) = *((_BYTE *)v42 + v38[21]);
    v74 = v42[5];
    v200 = v62;
    v75 = v38;
    v76 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v183 = v76;
    v77 = v76;
    v38 = v75;
    v78 = v179;
    v184 = v71;
    sub_211958FFC(v77, v179);
    v199 = v74;
    swift_bridgeObjectRetain();
    v57 = v69;
    v60 = v202;
    swift_bridgeObjectRetain();
    v186 = v73;
    swift_bridgeObjectRetain();
    v58 = v70;
    sub_211934758((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v56 = v78;
    v61 = v157;
  }
  v79 = (uint64_t *)v185;
  v80 = v193;
  v81 = v182;
  v202 = v60;
  if ((v191 & 1) != 0)
  {
    v82 = v206;
    v83 = v181;
    v84 = v180;
LABEL_10:
    v86 = v58;
    v87 = v196;
    goto LABEL_43;
  }
  v179 = v56;
  v85 = v168;
  if ((v168 & ~v61) == 0)
    v85 = 0;
  v61 |= v85;
  sub_21192C6B8(v204, v182, &qword_254ACA278);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48))(v81, 1, v80) == 1)
  {
    sub_211923EE8(v81, &qword_254ACA278);
    v82 = v206;
    v83 = v181;
    v84 = v180;
    v56 = v179;
    goto LABEL_10;
  }
  v157 = v61;
  v161 = v59;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211942810(v81, (uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  v88 = *v79;
  v205 = v79[1];
  v189 = v79[2];
  v200 = v79[3];
  v89 = v197;
  v182 = v57;
  if (v197 == 2)
  {
    v90 = v154;
    sub_211934794((uint64_t)v79, v154, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
    v91 = (uint64_t)v192;
    v86 = v58;
LABEL_14:
    v93 = *(_BYTE *)(v90 + *(int *)(v80 + 56));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211934758(v90, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
    v94 = v93 & 1;
    goto LABEL_16;
  }
  v90 = v154;
  sub_211934794((uint64_t)v79, v154, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  v92 = v89;
  v91 = (uint64_t)v192;
  v86 = v58;
  if ((v92 & 1) == 0)
    goto LABEL_14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211934758(v90, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  v94 = 1;
LABEL_16:
  v197 = v94;
  v95 = v155;
  v87 = v196;
  v96 = v198;
  if (v198 == 2)
  {
    sub_211934794((uint64_t)v79, v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
LABEL_19:
    v97 = (int *)v193;
    v98 = v95;
    v99 = *(_BYTE *)(v95 + *(int *)(v193 + 60));
    sub_211934758(v98, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
    v198 = v99 & 1;
    goto LABEL_21;
  }
  sub_211934794((uint64_t)v79, v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  if ((v96 & 1) == 0)
    goto LABEL_19;
  sub_211934758(v95, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  v198 = 1;
  v97 = (int *)v193;
LABEL_21:
  v100 = v194;
  v101 = v156;
  if (v194 == 2)
  {
    sub_211934794((uint64_t)v79, v156, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
LABEL_24:
    v102 = *(_BYTE *)(v101 + v97[16]);
    sub_211934758(v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
    v103 = v102 & 1;
    goto LABEL_26;
  }
  sub_211934794((uint64_t)v79, v156, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  if ((v100 & 1) == 0)
    goto LABEL_24;
  sub_211934758(v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
  v103 = 1;
LABEL_26:
  v194 = v103;
  v57 = v182;
  v199 = *(uint64_t *)((char *)v79 + v97[17]);
  v190 = v88;
  switch(v168)
  {
    case 1uLL:
      v104 = v79[9];
      if (v104)
      {
        v196 = v86;
        v105 = v87;
        v106 = v79[8];
        sub_211958C38((uint64_t *)&unk_254ACC540);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_211A4A230;
        *(_QWORD *)(inited + 32) = v106;
        v87 = v105;
        v97 = (int *)v193;
        v86 = v196;
        *(_QWORD *)(inited + 40) = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v201 = sub_2119A0B34(inited, v201);
        swift_setDeallocating();
        v91 = (uint64_t)v192;
        swift_arrayDestroy();
      }
      else if (v79[4])
      {
        swift_bridgeObjectRetain();
        v117 = swift_bridgeObjectRetain();
        v118 = sub_2119591D0(v117);
        swift_bridgeObjectRelease();
        v201 = sub_211959054(v118, v201);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_211923EE8(v91, qword_254AC8A78);
      sub_21192C6B8((uint64_t)v79 + v97[12], v91, qword_254AC8A78);
      goto LABEL_41;
    case 2uLL:
      if (!v79[5])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_2119A7738(v183, v179);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_77:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_2119A7738(v183, v179);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_78:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_2119A7738(v183, v179);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      v108 = swift_bridgeObjectRetain();
      v109 = sub_2119591D0(v108);
      swift_bridgeObjectRelease();
      v201 = sub_211959054(v109, v201);
      v110 = v97[14];
      v188 = *((unsigned __int8 *)v79 + v97[13]);
      v197 = *((unsigned __int8 *)v79 + v110);
      v198 = *((unsigned __int8 *)v79 + v97[15]);
LABEL_41:
      v57 = v182;
LABEL_42:
      v59 = v161;
      sub_211934758((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      v82 = v206;
      v83 = v181;
      v84 = v180;
      v56 = v179;
      v61 = v157;
      break;
    case 4uLL:
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v111 = swift_initStackObject();
      *(_OWORD *)(v111 + 16) = xmmword_211A4A230;
      v112 = v79[7];
      if (!v112)
        goto LABEL_77;
      v113 = v111;
      v114 = v79[6];
      goto LABEL_36;
    case 8uLL:
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v115 = swift_initStackObject();
      *(_OWORD *)(v115 + 16) = xmmword_211A4A230;
      v112 = v79[9];
      if (!v112)
        goto LABEL_78;
      v113 = v115;
      v114 = v79[8];
LABEL_36:
      *(_QWORD *)(v113 + 32) = v114;
      *(_QWORD *)(v113 + 40) = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116 = sub_2119591D0(v113);
      swift_setDeallocating();
      swift_arrayDestroy();
      v201 = sub_211959054(v116, v201);
      goto LABEL_41;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v201 = MEMORY[0x24BEE4B08];
      goto LABEL_42;
  }
LABEL_43:
  v119 = v195;
  LODWORD(v185) = a13;
  if ((v61 & v83) == 0)
    v84 = 1;
  v120 = v84 == 0;
  v121 = -1;
  if (v120)
    v121 = ~v83;
  v122 = v121 & v61;
  if (v82)
  {
    sub_2119A7738(v183, v56);
    v123 = v167;
    v124 = v166;
    v87 = v165;
    v196 = v164;
    v125 = v163;
    v126 = v162;
  }
  else
  {
    v206 = v56;
    v196 = v86;
    v125 = v59;
    v124 = v57;
    v126 = v184;
    v123 = v183;
  }
  LODWORD(v193) = a12;
  v127 = v205;
  *v119 = v190;
  v119[1] = v127;
  v128 = v200;
  v119[2] = v189;
  v119[3] = v128;
  v119[4] = v201;
  v129 = (uint64_t)v119 + v38[8];
  v130 = v38;
  v131 = (uint64_t)v192;
  sub_21192C6B8((uint64_t)v192, v129, qword_254AC8A78);
  *(_QWORD *)((char *)v119 + v130[9]) = v122;
  v132 = v188;
  if (a14 != 2)
    v132 = a14;
  *((_BYTE *)v119 + v130[10]) = v132;
  *((_BYTE *)v119 + v130[11]) = v197;
  *((_BYTE *)v119 + v130[12]) = v198;
  v133 = v130;
  v134 = (_QWORD *)((char *)v119 + v130[19]);
  v135 = v206;
  *v134 = v123;
  v134[1] = v135;
  v134[2] = v124;
  v134[3] = v87;
  v134[4] = v196;
  v134[5] = v125;
  v136 = v119;
  v134[6] = v126;
  *((_BYTE *)v119 + v170) = v194;
  if (v185 == 2)
  {
    v137 = v178;
    v138 = v171;
    v139 = v202;
    v140 = v169;
    if (v158 == 2)
    {
      if ((v191 & 1) != 0)
        LOBYTE(v141) = 1;
      else
        v141 = (v168 >> 1) & 1;
    }
    else
    {
      LOBYTE(v141) = v158 != 0;
    }
    v142 = v193;
    sub_211923EE8(v204, &qword_254ACA278);
    sub_211923EE8(v203, &qword_254AC8870);
    sub_211923EE8(v131, qword_254AC8A78);
  }
  else
  {
    LOBYTE(v141) = v185 & 1;
    sub_211923EE8(v204, &qword_254ACA278);
    sub_211923EE8(v203, &qword_254AC8870);
    sub_211923EE8(v131, qword_254AC8A78);
    v137 = v178;
    v138 = v171;
    v139 = v202;
    v140 = v169;
    v142 = v193;
  }
  v143 = a10;
  *((_BYTE *)v136 + v138) = v141;
  if (v142 == 2)
    v144 = v139;
  else
    v144 = v142 & 1;
  *((_BYTE *)v136 + v172) = v144;
  v136[5] = v199;
  v145 = v176;
  if ((v175 & 1) != 0)
    v145 = v140;
  *(_QWORD *)((char *)v136 + v133[15]) = v145;
  v146 = v177;
  v147 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v177, 1, v137);
  v148 = (uint64_t)v173;
  if (v147 == 1)
  {
    sub_211923EE8(v146, (uint64_t *)&unk_254AC8CB0);
    result = sub_21192DD68(v148, (uint64_t)v136 + v133[20], (uint64_t *)&unk_254AC8CB0);
  }
  else
  {
    sub_211923EE8((uint64_t)v173, (uint64_t *)&unk_254AC8CB0);
    v150 = v160;
    sub_211942810(v146, v160, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v151 = (uint64_t)v136 + v133[20];
    sub_211942810(v150, v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v159)(v151, 0, 1, v137);
  }
  v152 = a11;
  if (a10)
    result = swift_bridgeObjectRelease();
  else
    v143 = v187;
  *(_QWORD *)((char *)v136 + v133[16]) = v143;
  if (a11)
    result = swift_bridgeObjectRelease();
  else
    v152 = v186;
  *(_QWORD *)((char *)v136 + v133[17]) = v152;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFFriend()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

_QWORD *sub_211957FD0(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  char *__dst;

  v5 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *((_QWORD *)a2 + 3);
  a1[2] = *((_QWORD *)a2 + 2);
  a1[3] = v6;
  v7 = *((_QWORD *)a2 + 5);
  a1[4] = *((_QWORD *)a2 + 4);
  a1[5] = v7;
  v8 = *((_QWORD *)a2 + 7);
  a1[6] = *((_QWORD *)a2 + 6);
  a1[7] = v8;
  v9 = *((_QWORD *)a2 + 9);
  v10 = a3[10];
  __dst = (char *)a1 + v10;
  v26 = &a2[v10];
  a1[8] = *((_QWORD *)a2 + 8);
  a1[9] = v9;
  v11 = sub_211A47208();
  v27 = *(_QWORD *)(v11 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v26, 1, v11))
  {
    v13 = sub_211958C38(qword_254AC8A78);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v14 = v27;
  }
  else
  {
    v14 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v26, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v11);
  }
  v15 = a3[11];
  v16 = (char *)a1 + v15;
  v17 = &a2[v15];
  if (v12(&a2[v15], 1, v11))
  {
    v18 = sub_211958C38(qword_254AC8A78);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[12];
  v20 = (char *)a1 + v19;
  v21 = &a2[v19];
  if (v12(&a2[v19], 1, v11))
  {
    v22 = sub_211958C38(qword_254AC8A78);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[14];
  *((_BYTE *)a1 + a3[13]) = a2[a3[13]];
  *((_BYTE *)a1 + v23) = a2[v23];
  v24 = a3[16];
  *((_BYTE *)a1 + a3[15]) = a2[a3[15]];
  *((_BYTE *)a1 + v24) = a2[v24];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)&a2[a3[17]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FMFFriend()
{
  uint64_t result;

  result = qword_254ACA320;
  if (!qword_254ACA320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FMFIntermediateFriend()
{
  uint64_t result;

  result = qword_254AC8AD8;
  if (!qword_254AC8AD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v40;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_211A4722C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_211958C38(&qword_254AC9898);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[11];
  v16 = a1 + v15;
  v17 = (_QWORD *)(a2 + v15);
  v18 = (void *)v17[38];
  if (v18)
  {
    v19 = v17[21];
    if (v19)
    {
      v20 = v17[1];
      *(_QWORD *)v16 = *v17;
      *(_QWORD *)(v16 + 8) = v20;
      v21 = v17[3];
      *(_QWORD *)(v16 + 16) = v17[2];
      *(_QWORD *)(v16 + 24) = v21;
      v22 = v17[5];
      *(_QWORD *)(v16 + 32) = v17[4];
      *(_QWORD *)(v16 + 40) = v22;
      v23 = v17[7];
      *(_QWORD *)(v16 + 48) = v17[6];
      *(_QWORD *)(v16 + 56) = v23;
      v24 = v17[9];
      *(_QWORD *)(v16 + 64) = v17[8];
      *(_QWORD *)(v16 + 72) = v24;
      v25 = v17[11];
      *(_QWORD *)(v16 + 80) = v17[10];
      *(_QWORD *)(v16 + 88) = v25;
      v26 = v17[13];
      *(_QWORD *)(v16 + 96) = v17[12];
      *(_QWORD *)(v16 + 104) = v26;
      v27 = v17[15];
      *(_QWORD *)(v16 + 112) = v17[14];
      *(_QWORD *)(v16 + 120) = v27;
      v28 = v17[17];
      *(_QWORD *)(v16 + 128) = v17[16];
      *(_QWORD *)(v16 + 136) = v28;
      v29 = v17[19];
      *(_QWORD *)(v16 + 144) = v17[18];
      *(_QWORD *)(v16 + 152) = v29;
      *(_QWORD *)(v16 + 160) = v17[20];
      *(_QWORD *)(v16 + 168) = v19;
      v40 = v17[23];
      *(_QWORD *)(v16 + 176) = v17[22];
      *(_QWORD *)(v16 + 184) = v40;
      v30 = v17[25];
      *(_QWORD *)(v16 + 192) = v17[24];
      *(_QWORD *)(v16 + 200) = v30;
      v31 = v17[27];
      *(_QWORD *)(v16 + 208) = v17[26];
      *(_QWORD *)(v16 + 216) = v31;
      v32 = v17[29];
      *(_QWORD *)(v16 + 224) = v17[28];
      *(_QWORD *)(v16 + 232) = v32;
      v33 = v17[31];
      *(_QWORD *)(v16 + 240) = v17[30];
      *(_QWORD *)(v16 + 248) = v33;
      v34 = v17[33];
      *(_QWORD *)(v16 + 256) = v17[32];
      *(_QWORD *)(v16 + 264) = v34;
      v35 = v17[35];
      *(_QWORD *)(v16 + 272) = v17[34];
      *(_QWORD *)(v16 + 280) = v35;
      v36 = v17[37];
      *(_QWORD *)(v16 + 288) = v17[36];
      *(_QWORD *)(v16 + 296) = v36;
      v18 = (void *)v17[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((void *)(a1 + v15), v17, 0x130uLL);
    }
    *(_QWORD *)(v16 + 304) = v18;
    *(_BYTE *)(v16 + 312) = *((_BYTE *)v17 + 312);
    v37 = v17[41];
    *(_QWORD *)(v16 + 320) = v17[40];
    *(_QWORD *)(v16 + 328) = v37;
    *(_WORD *)(v16 + 336) = *((_WORD *)v17 + 168);
    *(_QWORD *)(v16 + 344) = v17[43];
    *(_BYTE *)(v16 + 352) = *((_BYTE *)v17 + 352);
    v38 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + v15), v17, 0x161uLL);
  }
  return a1;
}

uint64_t destroy for FMFLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void *v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_211A4722C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 44);
  v9 = *(void **)(v8 + 304);
  if (v9)
  {
    if (*(_QWORD *)(v8 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = *(void **)(v8 + 304);
    }

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for FMFFriend(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = a3[8];
  v68 = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  v10 = sub_211A47208();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_211958C38(qword_254AC8A78);
    memcpy(v68, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v68, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v68, 0, 1, v10);
  }
  v14 = a3;
  v15 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  v17 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v20 = a3[19];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = v24;
    v21[32] = v22[32];
    v25 = *((_QWORD *)v22 + 5);
    v26 = *((_QWORD *)v22 + 6);
    *((_QWORD *)v21 + 5) = v25;
    *((_QWORD *)v21 + 6) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v27;
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
  }
  v28 = a3[20];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = (int *)type metadata accessor for FMFLocation();
  v32 = *((_QWORD *)v31 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
  {
    v33 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = v30[1];
    *v29 = *v30;
    v29[1] = v34;
    *((_BYTE *)v29 + 16) = *((_BYTE *)v30 + 16);
    v29[3] = v30[3];
    *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
    v35 = v31[8];
    v66 = (char *)v29 + v35;
    v69 = v32;
    v36 = (char *)v30 + v35;
    v37 = sub_211A4722C();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      v40 = sub_211958C38(&qword_254AC9898);
      memcpy(v66, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v66, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v66, 0, 1, v37);
    }
    v41 = v69;
    *((_BYTE *)v29 + v31[9]) = *((_BYTE *)v30 + v31[9]);
    *((_BYTE *)v29 + v31[10]) = *((_BYTE *)v30 + v31[10]);
    v42 = v31[11];
    v43 = (char *)v29 + v42;
    v44 = (_QWORD *)((char *)v30 + v42);
    v45 = (void *)v44[38];
    if (v45)
    {
      v46 = v44[21];
      if (v46)
      {
        v47 = v44[1];
        *(_QWORD *)v43 = *v44;
        *((_QWORD *)v43 + 1) = v47;
        v48 = v44[3];
        *((_QWORD *)v43 + 2) = v44[2];
        *((_QWORD *)v43 + 3) = v48;
        v49 = v44[5];
        *((_QWORD *)v43 + 4) = v44[4];
        *((_QWORD *)v43 + 5) = v49;
        v50 = v44[7];
        *((_QWORD *)v43 + 6) = v44[6];
        *((_QWORD *)v43 + 7) = v50;
        v51 = v44[9];
        *((_QWORD *)v43 + 8) = v44[8];
        *((_QWORD *)v43 + 9) = v51;
        v52 = v44[11];
        *((_QWORD *)v43 + 10) = v44[10];
        *((_QWORD *)v43 + 11) = v52;
        v53 = v44[13];
        *((_QWORD *)v43 + 12) = v44[12];
        *((_QWORD *)v43 + 13) = v53;
        v54 = v44[15];
        *((_QWORD *)v43 + 14) = v44[14];
        *((_QWORD *)v43 + 15) = v54;
        v55 = v44[17];
        *((_QWORD *)v43 + 16) = v44[16];
        *((_QWORD *)v43 + 17) = v55;
        v56 = v44[19];
        *((_QWORD *)v43 + 18) = v44[18];
        *((_QWORD *)v43 + 19) = v56;
        *((_QWORD *)v43 + 20) = v44[20];
        *((_QWORD *)v43 + 21) = v46;
        v70 = v44[23];
        *((_QWORD *)v43 + 22) = v44[22];
        *((_QWORD *)v43 + 23) = v70;
        v67 = v44[25];
        *((_QWORD *)v43 + 24) = v44[24];
        *((_QWORD *)v43 + 25) = v67;
        v57 = v44[27];
        *((_QWORD *)v43 + 26) = v44[26];
        *((_QWORD *)v43 + 27) = v57;
        v58 = v44[29];
        *((_QWORD *)v43 + 28) = v44[28];
        *((_QWORD *)v43 + 29) = v58;
        v59 = v44[31];
        *((_QWORD *)v43 + 30) = v44[30];
        *((_QWORD *)v43 + 31) = v59;
        v60 = v44[33];
        *((_QWORD *)v43 + 32) = v44[32];
        *((_QWORD *)v43 + 33) = v60;
        v61 = v44[35];
        *((_QWORD *)v43 + 34) = v44[34];
        *((_QWORD *)v43 + 35) = v61;
        v62 = v44[37];
        *((_QWORD *)v43 + 36) = v44[36];
        *((_QWORD *)v43 + 37) = v62;
        v45 = (void *)v44[38];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v29 + v42, v44, 0x130uLL);
      }
      *((_QWORD *)v43 + 38) = v45;
      v43[312] = *((_BYTE *)v44 + 312);
      v63 = v44[41];
      *((_QWORD *)v43 + 40) = v44[40];
      *((_QWORD *)v43 + 41) = v63;
      *((_WORD *)v43 + 168) = *((_WORD *)v44 + 168);
      *((_QWORD *)v43 + 43) = v44[43];
      v43[352] = *((_BYTE *)v44 + 352);
      v64 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)v29 + v42, v44, 0x161uLL);
    }
    v14 = a3;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v41 + 56))(v29, 0, 1, v31);
  }
  *((_BYTE *)a1 + v14[21]) = *((_BYTE *)a2 + v14[21]);
  return a1;
}

uint64_t sub_211958C38(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x212BE47B0]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for FMFFriend(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + a2[20];
  v8 = type metadata accessor for FMFLocation();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v10 = v7 + *(int *)(v8 + 32);
    v11 = sub_211A4722C();
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (!(_DWORD)result)
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v13 = v7 + *(int *)(v8 + 44);
    v14 = *(void **)(v13 + 304);
    if (v14)
    {
      if (*(_QWORD *)(v13 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = *(void **)(v13 + 304);
      }

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for FMFLocation()
{
  uint64_t result;

  result = qword_254AC9930;
  if (!qword_254AC9930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_211958EF0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[10];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[11];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[12];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_211958FF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_211958FFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_211959038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_211A403E8(a1, a2, a3, &qword_254AC8870, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend, &qword_254ACF0F0);
}

uint64_t sub_211959054(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_211959264(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2119591D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_211A47C58();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_211959264(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_211959264(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  v8 = sub_211A48348();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_211A48258() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_211A48258() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_211959410(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_211959410(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_211A27CA4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_211A2994C();
      goto LABEL_22;
    }
    sub_211959F40();
  }
  v11 = *v4;
  sub_211A48318();
  sub_211A4797C();
  result = sub_211A48348();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_211A48258(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_211A48288();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_211A48258();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_2119595A8(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  uint64_t (*v49)(_QWORD);

  v6 = v4;
  v49 = a3;
  v8 = a3(0);
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v43 - v10;
  v12 = *v4;
  sub_211958C38(a4);
  v48 = a2;
  v13 = sub_211A480C0();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v46 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v44 = v4;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45)
      break;
    v27 = v46;
    v28 = v46[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v45)
        goto LABEL_34;
      v28 = v46[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v21 >= v45)
              goto LABEL_34;
            v28 = v46[v21];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v21 = v29;
      }
    }
LABEL_21:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    v30 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v25);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v47 + 72);
    v34 = *(_QWORD *)(v12 + 56) + v33 * v25;
    if ((v48 & 1) != 0)
    {
      sub_211942810(v34, (uint64_t)v11, v49);
    }
    else
    {
      sub_211934794(v34, (uint64_t)v11, v49);
      swift_bridgeObjectRetain();
    }
    sub_211A48318();
    sub_211A4797C();
    result = sub_211A48348();
    v35 = -1 << *(_BYTE *)(v14 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    *v23 = v32;
    v23[1] = v31;
    result = sub_211942810((uint64_t)v11, *(_QWORD *)(v14 + 56) + v33 * v22, v49);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v6 = v44;
  v27 = v46;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v12 + 32);
  if (v42 >= 64)
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v42;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v14;
  return result;
}

uint64_t sub_21195991C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_21195BB68(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = type metadata accessor for FMFFriend();
    v11 = *(_QWORD *)(v10 - 8);
    sub_211934794(v9 + *(_QWORD *)(v11 + 72) * v8, a4, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13 = a4;
    v14 = 0;
    v15 = v10;
  }
  else
  {
    v15 = type metadata accessor for FMFFriend();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v13 = a4;
    v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_2119599C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v41 = a3;
  v44 = a2;
  v5 = type metadata accessor for FMFLocationAlert();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v46 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v41 - v15;
  result = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  v48 = *(_QWORD *)(a1 + 16);
  if (!v48)
    return result;
  v45 = v3;
  v18 = 0;
  v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v49 = *(_QWORD *)(v14 + 72);
  v42 = v19;
  v47 = a1 + v19;
  v20 = MEMORY[0x24BEE4AF8];
  v21 = (uint64_t)v46;
  v43 = (char *)&v41 - v15;
  while (1)
  {
    v50 = v20;
    sub_211934794(v47 + v49 * v18, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v22 = *(_QWORD **)&v16[*(int *)(v5 + 72)];
    if (v22)
    {
      v23 = v22[2];
      if (v23)
      {
        v25 = *v44;
        v24 = v44[1];
        v26 = v22[4] == *v44 && v22[5] == v24;
        if (v26 || (result = sub_211A48258(), (result & 1) != 0))
        {
LABEL_27:
          v20 = v50;
          sub_211934794((uint64_t)v16, v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          sub_211934758(v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_28:
          sub_211942810((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_211A26834(0, *(_QWORD *)(v20 + 16) + 1, 1);
            v21 = (uint64_t)v46;
          }
          v20 = v51;
          v40 = *(_QWORD *)(v51 + 16);
          v39 = *(_QWORD *)(v51 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_211A26834(v39 > 1, v40 + 1, 1);
            v21 = (uint64_t)v46;
            v20 = v51;
          }
          *(_QWORD *)(v20 + 16) = v40 + 1;
          sub_211942810((uint64_t)v9, v20 + v42 + v40 * v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          goto LABEL_5;
        }
        if (v23 != 1)
          break;
      }
    }
LABEL_23:
    v16 = v43;
    sub_211934794((uint64_t)v43, v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v33 = *(_QWORD *)(v21 + *(int *)(v5 + 68));
    if (v33)
    {
      swift_bridgeObjectRetain();
      v34 = swift_bridgeObjectRetain();
      v35 = sub_21194FDA0(v34);
      swift_bridgeObjectRelease();
      v36 = v45;
      v37 = sub_2119F3FA0(v33, (uint64_t)v35);
      v45 = v36;
      v38 = *(_QWORD *)(v37 + 16);
      swift_bridgeObjectRelease();
      sub_211934758(v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      v20 = v50;
      if (v38)
        goto LABEL_28;
    }
    else
    {
      sub_211934758(v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      v20 = v50;
    }
    sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_5:
    if (++v18 == v48)
      return v51;
  }
  v27 = v22 + 7;
  v28 = 1;
  while (1)
  {
    v29 = v9;
    v30 = v5;
    v31 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    v32 = *(v27 - 1) == v25 && *v27 == v24;
    if (v32 || (result = sub_211A48258(), (result & 1) != 0))
    {
      v5 = v30;
      v9 = v29;
      v21 = (uint64_t)v46;
      v16 = v43;
      goto LABEL_27;
    }
    v27 += 2;
    ++v28;
    v26 = v31 == v23;
    v5 = v30;
    v9 = v29;
    v21 = (uint64_t)v46;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FMFLocationAlert()
{
  uint64_t result;

  result = qword_254AC9A70;
  if (!qword_254AC9A70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211959D6C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a2;
  v4 = type metadata accessor for FMFLocationAlert();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v26 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v23 - v10;
  result = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = *(_QWORD *)(v9 + 72);
    v23 = v2;
    v24 = (v14 + 32) & ~v14;
    v16 = a1 + v24;
    v17 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_211934794(v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      v18 = &v11[*(int *)(v4 + 76)];
      v19 = *((_QWORD *)v18 + 1);
      if (v19 && (*(_QWORD *)v18 == *v25 ? (v20 = v19 == v25[1]) : (v20 = 0), v20 || (sub_211A48258() & 1) != 0))
      {
        sub_211942810((uint64_t)v11, v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_211A26834(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v27;
        v22 = *(_QWORD *)(v27 + 16);
        v21 = *(_QWORD *)(v27 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_211A26834(v21 > 1, v22 + 1, 1);
          v17 = v27;
        }
        *(_QWORD *)(v17 + 16) = v22 + 1;
        sub_211942810(v26, v17 + v24 + v22 * v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      }
      else
      {
        sub_211934758((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      }
      v16 += v15;
      --v13;
    }
    while (v13);
    return v27;
  }
  return result;
}

uint64_t sub_211959F40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_211958C38(&qword_254ACCB38);
  v3 = sub_211A47F34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_211A48318();
    swift_bridgeObjectRetain();
    sub_211A4797C();
    result = sub_211A48348();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21195A1EC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_21195A1F4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ShallowRelabilityStats(uint64_t a1)
{
  return sub_21195A1F4(a1, qword_254AC9F78);
}

uint64_t sub_21195A23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21195A270(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x4C676E69646E6570;
    else
      v3 = 0x6F4C646573756170;
    if (v2 == 1)
      v4 = 0xEF676E697461636FLL;
    else
      v4 = 0xEE00676E69746163;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x4C676E69646E6570;
      else
        v6 = 0x6F4C646573756170;
      if (v5 == 1)
        v7 = 0xEF676E697461636FLL;
      else
        v7 = 0xEE00676E69746163;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_21195A3A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;

  v1 = type metadata accessor for FMFLocationAlert();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  v9 = MEMORY[0x24BDAC7A8]((char *)&v67 - v7, v8);
  v11 = MEMORY[0x24BDAC7A8](v9, (char *)&v67 - v10);
  v13 = (char *)&v67 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v67 - v16;
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v67 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v67 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v33 = (char *)&v67 - v32;
  v34 = v0[29];
  if (v34)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v73 = v28;
    v74 = v27;
    v71 = v30;
    v72 = v29;
    v35 = v0[23];
    v36 = *(_QWORD *)(v35 + 16);
    v68 = v31;
    v69 = v0;
    v75 = v17;
    v76 = v13;
    if (v36)
    {
      v70 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v37 = v35 + v70;
      v38 = *(_QWORD *)(v31 + 72);
      v67 = v35;
      swift_bridgeObjectRetain();
      v34 = MEMORY[0x24BEE4AF8];
      do
      {
        sub_211934794(v37, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        sub_21198A2A8((uint64_t)v25, 1, 1, (uint64_t)v33);
        sub_211934794((uint64_t)v33, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2119B0A9C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        v40 = *(_QWORD *)(v34 + 16);
        v39 = *(_QWORD *)(v34 + 24);
        if (v40 >= v39 >> 1)
          v34 = sub_2119B0A9C(v39 > 1, v40 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v40 + 1;
        sub_211942810((uint64_t)v21, v34 + v70 + v40 * v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        sub_211934758((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v37 += v38;
        --v36;
        v17 = v75;
        v13 = v76;
      }
      while (v36);
      swift_bridgeObjectRelease();
      v31 = v68;
      v0 = v69;
    }
    else
    {
      v34 = MEMORY[0x24BEE4AF8];
    }
    v41 = v0[24];
    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
    {
      v43 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v44 = v41 + v43;
      v45 = *(_QWORD *)(v31 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_211934794(v44, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        sub_21198A2A8((uint64_t)v25, 0, 1, (uint64_t)v17);
        sub_211934794((uint64_t)v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2119B0A9C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        v47 = *(_QWORD *)(v34 + 16);
        v46 = *(_QWORD *)(v34 + 24);
        if (v47 >= v46 >> 1)
          v34 = sub_2119B0A9C(v46 > 1, v47 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v47 + 1;
        v13 = v76;
        sub_211942810((uint64_t)v76, v34 + v43 + v47 * v45, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v17 = v75;
        sub_211934758((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v44 += v45;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
      v31 = v68;
      v0 = v69;
    }
    v48 = v0[25];
    v49 = *(_QWORD *)(v48 + 16);
    v51 = v73;
    v50 = v74;
    if (v49)
    {
      v52 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v53 = v48 + v52;
      v54 = *(_QWORD *)(v31 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_211934794(v53, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        sub_21198A2A8((uint64_t)v25, 1, 0, v51);
        sub_211934794(v51, v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2119B0A9C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        v56 = *(_QWORD *)(v34 + 16);
        v55 = *(_QWORD *)(v34 + 24);
        if (v56 >= v55 >> 1)
          v34 = sub_2119B0A9C(v55 > 1, v56 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v56 + 1;
        v50 = v74;
        sub_211942810(v74, v34 + v52 + v56 * v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v51 = v73;
        sub_211934758(v73, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v53 += v54;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
      v31 = v68;
      v0 = v69;
    }
    v57 = v0[26];
    v58 = *(_QWORD *)(v57 + 16);
    if (v58)
    {
      v59 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v60 = v57 + v59;
      v61 = *(_QWORD *)(v31 + 72);
      swift_bridgeObjectRetain();
      v63 = v71;
      v62 = v72;
      do
      {
        sub_211934794(v60, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        sub_21198A2A8((uint64_t)v25, 0, 0, v63);
        sub_211934794(v63, v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2119B0A9C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        v65 = *(_QWORD *)(v34 + 16);
        v64 = *(_QWORD *)(v34 + 24);
        if (v65 >= v64 >> 1)
          v34 = sub_2119B0A9C(v64 > 1, v65 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v65 + 1;
        v62 = v72;
        sub_211942810(v72, v34 + v59 + v65 * v61, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v63 = v71;
        sub_211934758(v71, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
        v60 += v61;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      v0 = v69;
    }
    v0[29] = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[15] = 0;
    swift_bridgeObjectRelease();
  }
  return v34;
}

uint64_t sub_21195A988()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  int isUniquelyReferenced_nonNull_native;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  uint64_t *v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  char v120;
  unint64_t v121;
  uint64_t v122;
  _BOOL8 v123;
  uint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 *v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  char v158;
  unint64_t v159;
  uint64_t v160;
  _BOOL8 v161;
  uint64_t v162;
  char v163;
  unint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  int *v181;
  uint64_t v182;
  uint64_t v183;
  int v184;
  char v185;
  unint64_t v186;
  uint64_t v187;
  _BOOL8 v188;
  uint64_t v189;
  char v190;
  unint64_t v191;
  char v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  uint64_t (*v208)();
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t (*v218)();
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  _QWORD *v232;
  uint64_t result;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t *v252;
  char *v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  int *v260;
  uint64_t v261;
  uint64_t *v262;
  _QWORD v263[45];

  v256 = sub_211958C38(&qword_254ACD768);
  v2 = MEMORY[0x24BDAC7A8](v256, v1);
  v255 = (char *)&v234 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v254 = (uint64_t)&v234 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v234 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v253 = (char *)&v234 - v12;
  v13 = type metadata accessor for FMFIntermediateFriend();
  v237 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v238 = (uint64_t *)((char *)&v234 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v234 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&v234 - v22;
  v24 = type metadata accessor for FMFLocation();
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = MEMORY[0x24BDAC7A8](v30, (char *)&v234 - v31);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v42 = MEMORY[0x24BDAC7A8](v40, v41);
  v44 = MEMORY[0x24BDAC7A8](v42, v43);
  v46 = (char *)&v234 - v45;
  v48 = MEMORY[0x24BDAC7A8](v44, v47);
  v50 = (char *)&v234 - v49;
  v52 = MEMORY[0x24BDAC7A8](v48, v51);
  v54 = (char *)&v234 - v53;
  v56 = MEMORY[0x24BDAC7A8](v52, v55);
  v58 = (char *)&v234 - v57;
  v60 = MEMORY[0x24BDAC7A8](v56, v59);
  v62 = (char *)&v234 - v61;
  v64 = MEMORY[0x24BDAC7A8](v60, v63);
  v76 = v0;
  v77 = v0[21];
  if (v77)
  {
    swift_bridgeObjectRetain();
    return v77;
  }
  v251 = v10;
  v252 = (uint64_t *)((char *)&v234 - v72);
  v257 = (uint64_t)v62;
  v258 = v23;
  v248 = v58;
  v249 = v54;
  v244 = v50;
  v245 = v46;
  v239 = v71;
  v240 = v76;
  v242 = v66;
  v243 = v70;
  v241 = v69;
  v235 = v68;
  v236 = v67;
  v246 = v65;
  v247 = v75;
  v259 = (uint64_t)v20;
  v260 = (int *)v64;
  v250 = v74;
  v261 = v73;
  swift_beginAccess();
  v78 = v240;
  v79 = v240[20];
  v80 = *(_QWORD *)(v79 + 16);
  if (v80)
  {
    v81 = v261;
    v82 = v79 + ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80));
    v83 = *(_QWORD *)(v261 + 72);
    v234 = v240[20];
    swift_bridgeObjectRetain();
    v84 = (uint64_t *)MEMORY[0x24BEE4B00];
    v85 = v257;
    v86 = v252;
    do
    {
      sub_211934794(v82, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v87 = v86[1];
      if (v87)
      {
        v88 = *v86;
        sub_211934794((uint64_t)v86, v85, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v263[0] = v84;
        v91 = sub_21195BB68(v88, v87);
        v92 = v84[2];
        v93 = (v90 & 1) == 0;
        v94 = v92 + v93;
        if (__OFADD__(v92, v93))
          goto LABEL_119;
        v95 = v90;
        if (v84[3] >= v94)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_211A458DC();
        }
        else
        {
          sub_21195C5AC(v94, isUniquelyReferenced_nonNull_native);
          v96 = sub_21195BB68(v88, v87);
          if ((v95 & 1) != (v97 & 1))
            goto LABEL_128;
          v91 = v96;
        }
        v85 = v257;
        v84 = (uint64_t *)v263[0];
        if ((v95 & 1) != 0)
        {
          sub_21195BCAC(v257, *(_QWORD *)(v263[0] + 56) + v91 * v83, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        }
        else
        {
          *(_QWORD *)(v263[0] + 8 * (v91 >> 6) + 64) |= 1 << v91;
          v98 = (uint64_t *)(v84[6] + 16 * v91);
          *v98 = v88;
          v98[1] = v87;
          sub_211942810(v85, v84[7] + v91 * v83, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v99 = v84[2];
          v100 = __OFADD__(v99, 1);
          v101 = v99 + 1;
          if (v100)
            goto LABEL_120;
          v84[2] = v101;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v81 = v261;
        v86 = v252;
      }
      sub_211934758((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v82 += v83;
      --v80;
    }
    while (v80);
    swift_bridgeObjectRelease();
    v78 = v240;
  }
  else
  {
    v84 = (uint64_t *)MEMORY[0x24BEE4B00];
    v81 = v261;
  }
  v102 = *(_QWORD *)(v78[17] + 16);
  v103 = (uint64_t)v258;
  v104 = v259;
  if (!v102)
    goto LABEL_43;
  v257 = swift_bridgeObjectRetain();
  v105 = (unsigned __int8 *)(v257 + 48);
  do
  {
    if (!v84[2])
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v81 + 56))(v103, 1, 1, v260);
LABEL_23:
      sub_211923EE8(v103, (uint64_t *)&unk_254AC8CB0);
      goto LABEL_24;
    }
    v107 = *((_QWORD *)v105 - 2);
    v106 = *((_QWORD *)v105 - 1);
    v108 = *v105;
    swift_bridgeObjectRetain_n();
    v109 = sub_21195BB68(v107, v106);
    if ((v110 & 1) != 0)
    {
      v103 = (uint64_t)v258;
      sub_211934794(v84[7] + *(_QWORD *)(v81 + 72) * v109, (uint64_t)v258, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v111 = 0;
    }
    else
    {
      v111 = 1;
      v103 = (uint64_t)v258;
    }
    v112 = v260;
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v81 + 56))(v103, v111, 1, v260);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v81 + 48))(v103, 1, v112) == 1)
    {
      swift_bridgeObjectRelease();
      v104 = v259;
      goto LABEL_23;
    }
    v113 = v103;
    v114 = (uint64_t)v248;
    sub_211942810(v113, (uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v115 = v114;
    v116 = (uint64_t)v244;
    sub_211934794(v115, (uint64_t)v244, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    swift_bridgeObjectRetain();
    v117 = (uint64_t)v249;
    sub_2119828D0(v116, v106, v108, (uint64_t)v249);
    v118 = (uint64_t)v245;
    sub_211934794(v117, (uint64_t)v245, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v119 = swift_isUniquelyReferenced_nonNull_native();
    v263[0] = v84;
    v121 = sub_21195BB68(v107, v106);
    v122 = v84[2];
    v123 = (v120 & 1) == 0;
    v124 = v122 + v123;
    if (__OFADD__(v122, v123))
      goto LABEL_121;
    v125 = v120;
    if (v84[3] >= v124)
    {
      if ((v119 & 1) == 0)
        sub_211A458DC();
    }
    else
    {
      sub_21195C5AC(v124, v119);
      v126 = sub_21195BB68(v107, v106);
      if ((v125 & 1) != (v127 & 1))
        goto LABEL_128;
      v121 = v126;
    }
    v81 = v261;
    v84 = (uint64_t *)v263[0];
    if ((v125 & 1) != 0)
    {
      sub_21195BCAC(v118, *(_QWORD *)(v263[0] + 56) + *(_QWORD *)(v261 + 72) * v121, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    }
    else
    {
      *(_QWORD *)(v263[0] + 8 * (v121 >> 6) + 64) |= 1 << v121;
      v128 = (uint64_t *)(v84[6] + 16 * v121);
      *v128 = v107;
      v128[1] = v106;
      sub_211942810(v118, v84[7] + *(_QWORD *)(v81 + 72) * v121, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v129 = v84[2];
      v100 = __OFADD__(v129, 1);
      v130 = v129 + 1;
      if (v100)
        goto LABEL_123;
      v84[2] = v130;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v249, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934758((uint64_t)v248, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v103 = (uint64_t)v258;
    v104 = v259;
LABEL_24:
    v105 += 24;
    --v102;
  }
  while (v102);
  swift_bridgeObjectRelease();
  v78 = v240;
LABEL_43:
  v131 = *(_QWORD *)(v78[16] + 16);
  v132 = v239;
  if (!v131)
    goto LABEL_63;
  v245 = (char *)swift_bridgeObjectRetain();
  v133 = (unsigned __int8 *)(v245 + 48);
  while (2)
  {
    if (!v84[2])
      goto LABEL_46;
    v135 = *((_QWORD *)v133 - 2);
    v134 = *((_QWORD *)v133 - 1);
    v136 = *v133;
    swift_bridgeObjectRetain();
    v137 = sub_21195BB68(v135, v134);
    if ((v138 & 1) == 0)
      goto LABEL_45;
    LODWORD(v257) = v136;
    v258 = (char *)v134;
    v139 = *(_QWORD *)(v81 + 72);
    v140 = v132;
    v141 = v243;
    sub_211934794(v84[7] + v139 * v137, v243, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v142 = v141;
    v132 = v140;
    sub_211942810(v142, v140, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    if (!*(_BYTE *)(v140 + 33))
    {
      v248 = (char *)v139;
      v143 = v235;
      sub_211934794(v140, v235, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v249 = (char *)v135;
      v144 = v236;
      *(_QWORD *)(v236 + 24) = 0;
      *(_BYTE *)(v144 + 32) = 1;
      v145 = v260;
      v146 = v260[8];
      v252 = v84;
      v147 = v144 + v146;
      v148 = sub_211A4722C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 1, 1, v148);
      v149 = *(_QWORD *)(v143 + 8);
      *(_QWORD *)v144 = *(_QWORD *)v143;
      *(_QWORD *)(v144 + 8) = v149;
      sub_21192DD68(v143 + v145[11], (uint64_t)v263, &qword_254AC8CD0);
      sub_21192DD68((uint64_t)v263, v144 + v145[11], &qword_254AC8CD0);
      v150 = v143 + v145[8];
      swift_bridgeObjectRetain();
      sub_2119AC6F0((uint64_t)v263);
      sub_21195C8F8(v150, v147);
      *(_BYTE *)(v144 + 33) = *(_BYTE *)(v143 + 33);
      v151 = *(_BYTE *)(v143 + 32);
      *(_QWORD *)(v144 + 24) = *(_QWORD *)(v143 + 24);
      *(_BYTE *)(v144 + 32) = v151;
      v152 = v145[9];
      v153 = *(_BYTE *)(v143 + v152);
      *(_BYTE *)(v144 + 16) = (v257 - 1) < 2;
      *(_BYTE *)(v144 + v152) = v153;
      LOBYTE(v147) = *(_BYTE *)(v143 + v145[10]);
      sub_211934758(v143, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      *(_BYTE *)(v144 + v145[10]) = v147;
      v154 = (uint64_t)v249;
      v155 = v241;
      sub_211942810(v144, v241, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211934794(v155, v242, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v156 = swift_isUniquelyReferenced_nonNull_native();
      v262 = v252;
      v157 = (uint64_t)v258;
      v159 = sub_21195BB68(v154, (uint64_t)v258);
      v160 = v252[2];
      v161 = (v158 & 1) == 0;
      v162 = v160 + v161;
      if (__OFADD__(v160, v161))
        goto LABEL_125;
      v163 = v158;
      if (v252[3] >= v162)
      {
        v104 = v259;
        v166 = v242;
        v167 = (uint64_t)v248;
        if ((v156 & 1) == 0)
        {
          sub_211A458DC();
          v167 = (uint64_t)v248;
          v166 = v242;
        }
        v132 = v239;
        v84 = v262;
        if ((v163 & 1) != 0)
        {
LABEL_55:
          sub_21195BCAC(v166, v84[7] + v159 * v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_61:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_211934758(v241, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          sub_211934758(v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v81 = v261;
          goto LABEL_46;
        }
      }
      else
      {
        sub_21195C5AC(v162, v156);
        v164 = sub_21195BB68(v154, v157);
        v104 = v259;
        if ((v163 & 1) != (v165 & 1))
          goto LABEL_128;
        v159 = v164;
        v166 = v242;
        v132 = v239;
        v167 = (uint64_t)v248;
        v84 = v262;
        if ((v163 & 1) != 0)
          goto LABEL_55;
      }
      v84[(v159 >> 6) + 8] |= 1 << v159;
      v168 = (_QWORD *)(v84[6] + 16 * v159);
      *v168 = v249;
      v168[1] = v157;
      sub_211942810(v166, v84[7] + v159 * v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v169 = v84[2];
      v100 = __OFADD__(v169, 1);
      v170 = v169 + 1;
      if (v100)
        goto LABEL_126;
      v84[2] = v170;
      swift_bridgeObjectRetain();
      goto LABEL_61;
    }
    sub_211934758(v140, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_45:
    swift_bridgeObjectRelease();
    v104 = v259;
LABEL_46:
    v133 += 24;
    if (--v131)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v78 = v240;
LABEL_63:
  v171 = v78[28];
  v172 = *(_QWORD *)(v171 + 16);
  v252 = v84;
  v173 = v238;
  if (v172)
  {
    v174 = v171 + ((*(unsigned __int8 *)(v237 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v237 + 80));
    v257 = *(_QWORD *)(v237 + 72);
    v249 = (char *)v171;
    swift_bridgeObjectRetain();
    v175 = MEMORY[0x24BEE4B00];
    while (1)
    {
      sub_211934794(v174, (uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      if (v84[2])
      {
        v177 = *v173;
        v176 = v173[1];
        swift_bridgeObjectRetain();
        v258 = (char *)v177;
        v178 = sub_21195BB68(v177, v176);
        if ((v179 & 1) != 0)
        {
          sub_211934794(v84[7] + *(_QWORD *)(v81 + 72) * v178, v104, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v180 = 0;
        }
        else
        {
          v180 = 1;
        }
        v181 = v260;
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v81 + 56))(v104, v180, 1, v260);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v81 + 48))(v104, 1, v181) != 1)
        {
          v182 = v246;
          sub_211942810(v104, v246, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          sub_211934794(v182, v247, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          swift_bridgeObjectRetain();
          v183 = v175;
          v184 = swift_isUniquelyReferenced_nonNull_native();
          v263[0] = v175;
          v186 = sub_21195BB68((uint64_t)v258, v176);
          v187 = *(_QWORD *)(v175 + 16);
          v188 = (v185 & 1) == 0;
          v189 = v187 + v188;
          if (__OFADD__(v187, v188))
            goto LABEL_122;
          v190 = v185;
          if (*(_QWORD *)(v183 + 24) >= v189)
          {
            v84 = v252;
            if ((v184 & 1) == 0)
            {
              sub_211A458DC();
              goto LABEL_77;
            }
          }
          else
          {
            sub_21195C5AC(v189, v184);
            v191 = sub_21195BB68((uint64_t)v258, v176);
            if ((v190 & 1) != (v192 & 1))
              goto LABEL_128;
            v186 = v191;
LABEL_77:
            v84 = v252;
          }
          v193 = v263[0];
          if ((v190 & 1) != 0)
          {
            v175 = v263[0];
            sub_21195BCAC(v247, *(_QWORD *)(v263[0] + 56) + *(_QWORD *)(v261 + 72) * v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          }
          else
          {
            *(_QWORD *)(v263[0] + 8 * (v186 >> 6) + 64) |= 1 << v186;
            v194 = (_QWORD *)(*(_QWORD *)(v193 + 48) + 16 * v186);
            *v194 = v258;
            v194[1] = v176;
            v175 = v193;
            sub_211942810(v247, *(_QWORD *)(v193 + 56) + *(_QWORD *)(v261 + 72) * v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v195 = *(_QWORD *)(v175 + 16);
            v100 = __OFADD__(v195, 1);
            v196 = v195 + 1;
            if (v100)
              goto LABEL_124;
            *(_QWORD *)(v175 + 16) = v196;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_211934758(v246, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          sub_211934758((uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
          v81 = v261;
          goto LABEL_67;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v81 + 56))(v104, 1, 1, v260);
      }
      sub_211934758((uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      sub_211923EE8(v104, (uint64_t *)&unk_254AC8CB0);
LABEL_67:
      v174 += v257;
      if (!--v172)
      {
        swift_bridgeObjectRelease();
        v78 = v240;
        v197 = v175;
        goto LABEL_87;
      }
    }
  }
  v197 = MEMORY[0x24BEE4B00];
LABEL_87:
  v198 = *(_QWORD *)(v197 + 16);
  v199 = MEMORY[0x24BEE4AF8];
  v257 = v197;
  if (v198)
  {
    v263[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211942004(0, v198, 0);
    v200 = sub_211948444(v257);
    v203 = v256;
    v202 = v257;
    v204 = v200;
    v205 = 0;
    v206 = v257 + 64;
    v207 = *(_BYTE *)(v257 + 32);
    v246 = v257 + 80;
    v208 = type metadata accessor for FMFLocation;
    v247 = v198;
    v248 = (char *)v201;
    v249 = (char *)(v257 + 64);
    while ((v204 & 0x8000000000000000) == 0 && v204 < 1 << v207)
    {
      v211 = (unint64_t)v204 >> 6;
      if ((*(_QWORD *)(v206 + 8 * ((unint64_t)v204 >> 6)) & (1 << v204)) == 0)
        goto LABEL_114;
      if (*(_DWORD *)(v202 + 36) != (_DWORD)v201)
        goto LABEL_115;
      v258 = (char *)v205;
      v259 = 1 << v204;
      v212 = v253;
      v213 = (uint64_t)&v253[*(int *)(v203 + 48)];
      v214 = *(_QWORD *)(v202 + 56);
      v215 = (uint64_t *)(*(_QWORD *)(v202 + 48) + 16 * v204);
      v216 = *v215;
      v217 = v215[1];
      v260 = *(int **)(v261 + 72);
      sub_211934794(v214 + (_QWORD)v260 * v204, v213, (uint64_t (*)(_QWORD))v208);
      *v212 = v216;
      v212[1] = v217;
      v218 = v208;
      v219 = v251;
      *v251 = v216;
      v219[1] = v217;
      sub_211934794(v213, (uint64_t)v219 + *(int *)(v203 + 48), (uint64_t (*)(_QWORD))v218);
      v220 = (uint64_t)v219;
      v208 = v218;
      v221 = v254;
      sub_21192DD68(v220, v254, &qword_254ACD768);
      swift_bridgeObjectRetain_n();
      sub_211923EE8((uint64_t)v212, &qword_254ACD768);
      v222 = *(int *)(v203 + 48);
      v223 = v250;
      v224 = (uint64_t)&v255[v222];
      sub_211934794(v221 + v222, (uint64_t)&v255[v222], (uint64_t (*)(_QWORD))v218);
      sub_211942810(v224, v223, (uint64_t (*)(_QWORD))v218);
      sub_211923EE8(v221, &qword_254ACD768);
      v199 = v263[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211942004(0, *(_QWORD *)(v199 + 16) + 1, 1);
        v199 = v263[0];
      }
      v226 = *(_QWORD *)(v199 + 16);
      v225 = *(_QWORD *)(v199 + 24);
      if (v226 >= v225 >> 1)
      {
        sub_211942004(v225 > 1, v226 + 1, 1);
        v199 = v263[0];
      }
      *(_QWORD *)(v199 + 16) = v226 + 1;
      sub_211942810(v223, v199+ ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80))+ v226 * (_QWORD)v260, (uint64_t (*)(_QWORD))v218);
      v202 = v257;
      v207 = *(_BYTE *)(v257 + 32);
      v209 = 1 << v207;
      if (v204 >= 1 << v207)
        goto LABEL_116;
      v206 = (uint64_t)v249;
      v227 = *(_QWORD *)&v249[8 * v211];
      if ((v227 & v259) == 0)
        goto LABEL_117;
      LODWORD(v201) = (_DWORD)v248;
      if (*(_DWORD *)(v257 + 36) != (_DWORD)v248)
        goto LABEL_118;
      v228 = v227 & (-2 << (v204 & 0x3F));
      if (v228)
      {
        v209 = __clz(__rbit64(v228)) | v204 & 0xFFFFFFFFFFFFFFC0;
        v210 = v247;
      }
      else
      {
        v229 = v211 + 1;
        v230 = (v209 + 63) >> 6;
        v210 = v247;
        if (v211 + 1 < v230)
        {
          v231 = *(_QWORD *)&v249[8 * v229];
          if (v231)
          {
LABEL_108:
            v209 = __clz(__rbit64(v231)) + (v229 << 6);
          }
          else
          {
            while (v230 - 2 != v211)
            {
              v231 = *(_QWORD *)(v246 + 8 * v211++);
              if (v231)
              {
                v229 = v211 + 1;
                goto LABEL_108;
              }
            }
          }
        }
      }
      v205 = (uint64_t)(v258 + 1);
      v204 = v209;
      if (v258 + 1 == (char *)v210)
      {
        swift_bridgeObjectRelease();
        v78 = v240;
        goto LABEL_110;
      }
    }
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
  }
  else
  {
LABEL_110:
    v78[21] = v199;
    v232 = v78;
    swift_bridgeObjectRelease();
    v77 = v232[21];
    if (v77)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v77;
    }
  }
  __break(1u);
LABEL_128:
  result = sub_211A48294();
  __break(1u);
  return result;
}

uint64_t sub_21195BB54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_211A44590(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend, &qword_254ACF0F0);
}

unint64_t sub_21195BB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_211A48318();
  sub_211A4797C();
  v4 = sub_211A48348();
  return sub_21195BBCC(a1, a2, v4);
}

unint64_t sub_21195BBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_211A48258() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_211A48258() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_21195BCAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

_QWORD *assignWithTake for FMFFriend(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, int *);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  size_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  void *__dst;
  void *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_211958C38(qword_254AC8A78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  v19 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v20 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  v21 = a3[19];
  *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  if (*(_QWORD *)((char *)a1 + v21 + 8))
  {
    v24 = *((_QWORD *)v23 + 1);
    if (v24)
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      swift_bridgeObjectRelease();
      v25 = *((_QWORD *)v23 + 3);
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *((_QWORD *)v22 + 3) = v25;
      swift_bridgeObjectRelease();
      v22[32] = v23[32];
      v26 = *((_QWORD *)v23 + 6);
      *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
      *((_QWORD *)v22 + 6) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_2119A8F10((uint64_t)a1 + v21);
  }
  v27 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v27;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
LABEL_12:
  v28 = a3[20];
  v29 = (uint64_t)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = (int *)type metadata accessor for FMFLocation();
  v32 = *((_QWORD *)v31 - 1);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33((uint64_t)v30, 1, v31);
  if (!v34)
  {
    if (v35)
    {
      sub_211934758(v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      goto LABEL_18;
    }
    v44 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v44;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v29 + 16) = v30[16];
    *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
    *(_WORD *)(v29 + 32) = *((_WORD *)v30 + 16);
    v45 = v31[8];
    v46 = (void *)(v29 + v45);
    v47 = &v30[v45];
    v48 = sub_211A4722C();
    v77 = *(_QWORD *)(v48 - 8);
    v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 48);
    __dsta = v46;
    LODWORD(v46) = v49(v46, 1, v48);
    v50 = v49(v47, 1, v48);
    if ((_DWORD)v46)
    {
      if (v50)
      {
        v51 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC9898) - 8) + 64);
        v52 = __dsta;
LABEL_29:
        memcpy(v52, v47, v51);
        goto LABEL_32;
      }
      (*(void (**)(void *, char *, uint64_t))(v77 + 32))(__dsta, v47, v48);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dsta, 0, 1, v48);
    }
    else
    {
      if (v50)
      {
        (*(void (**)(void *, uint64_t))(v77 + 8))(__dsta, v48);
        v51 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC9898) - 8) + 64);
        v52 = __dsta;
        goto LABEL_29;
      }
      (*(void (**)(void *, char *, uint64_t))(v77 + 40))(__dsta, v47, v48);
    }
LABEL_32:
    *(_BYTE *)(v29 + v31[9]) = v30[v31[9]];
    *(_BYTE *)(v29 + v31[10]) = v30[v31[10]];
    v54 = v31[11];
    v55 = (_QWORD *)(v29 + v54);
    v56 = &v30[v54];
    if (v55[38])
    {
      if (*((_QWORD *)v56 + 38))
      {
        if (v55[21])
        {
          if (*((_QWORD *)v56 + 21))
          {
            *v55 = *(_QWORD *)v56;
            swift_bridgeObjectRelease();
            v57 = *((_QWORD *)v56 + 2);
            v55[1] = *((_QWORD *)v56 + 1);
            v55[2] = v57;
            swift_bridgeObjectRelease();
            v58 = *((_QWORD *)v56 + 4);
            v55[3] = *((_QWORD *)v56 + 3);
            v55[4] = v58;
            swift_bridgeObjectRelease();
            v59 = *((_QWORD *)v56 + 6);
            v55[5] = *((_QWORD *)v56 + 5);
            v55[6] = v59;
            swift_bridgeObjectRelease();
            v60 = *((_QWORD *)v56 + 8);
            v55[7] = *((_QWORD *)v56 + 7);
            v55[8] = v60;
            swift_bridgeObjectRelease();
            v61 = *((_QWORD *)v56 + 10);
            v55[9] = *((_QWORD *)v56 + 9);
            v55[10] = v61;
            swift_bridgeObjectRelease();
            v62 = *((_QWORD *)v56 + 12);
            v55[11] = *((_QWORD *)v56 + 11);
            v55[12] = v62;
            swift_bridgeObjectRelease();
            v63 = *((_QWORD *)v56 + 14);
            v55[13] = *((_QWORD *)v56 + 13);
            v55[14] = v63;
            swift_bridgeObjectRelease();
            v64 = *((_QWORD *)v56 + 16);
            v55[15] = *((_QWORD *)v56 + 15);
            v55[16] = v64;
            swift_bridgeObjectRelease();
            v65 = *((_QWORD *)v56 + 18);
            v55[17] = *((_QWORD *)v56 + 17);
            v55[18] = v65;
            swift_bridgeObjectRelease();
            v66 = *((_QWORD *)v56 + 20);
            v55[19] = *((_QWORD *)v56 + 19);
            v55[20] = v66;
            swift_bridgeObjectRelease();
            v55[21] = *((_QWORD *)v56 + 21);
            swift_bridgeObjectRelease();
            v67 = *((_QWORD *)v56 + 23);
            v55[22] = *((_QWORD *)v56 + 22);
            v55[23] = v67;
            swift_bridgeObjectRelease();
            v68 = *((_QWORD *)v56 + 25);
            v55[24] = *((_QWORD *)v56 + 24);
            v55[25] = v68;
            swift_bridgeObjectRelease();
            v69 = *((_QWORD *)v56 + 27);
            v55[26] = *((_QWORD *)v56 + 26);
            v55[27] = v69;
            swift_bridgeObjectRelease();
            v70 = *((_QWORD *)v56 + 29);
            v55[28] = *((_QWORD *)v56 + 28);
            v55[29] = v70;
            swift_bridgeObjectRelease();
            v71 = *((_QWORD *)v56 + 31);
            v55[30] = *((_QWORD *)v56 + 30);
            v55[31] = v71;
            swift_bridgeObjectRelease();
            v72 = *((_QWORD *)v56 + 33);
            v55[32] = *((_QWORD *)v56 + 32);
            v55[33] = v72;
            swift_bridgeObjectRelease();
            v73 = *((_QWORD *)v56 + 35);
            v55[34] = *((_QWORD *)v56 + 34);
            v55[35] = v73;
            swift_bridgeObjectRelease();
            v74 = *((_QWORD *)v56 + 37);
            v55[36] = *((_QWORD *)v56 + 36);
            v55[37] = v74;
            swift_bridgeObjectRelease();
LABEL_41:
            v75 = (void *)v55[38];
            v55[38] = *((_QWORD *)v56 + 38);

            *((_BYTE *)v55 + 312) = v56[312];
            v76 = *((_QWORD *)v56 + 41);
            v55[40] = *((_QWORD *)v56 + 40);
            v55[41] = v76;
            swift_bridgeObjectRelease();
            *((_WORD *)v55 + 168) = *((_WORD *)v56 + 168);
            v55[43] = *((_QWORD *)v56 + 43);
            swift_bridgeObjectRelease();
            *((_BYTE *)v55 + 352) = v56[352];
            goto LABEL_26;
          }
          sub_21196ECA4((uint64_t)v55);
        }
        memcpy(v55, v56, 0x130uLL);
        goto LABEL_41;
      }
      sub_211985BF8((uint64_t)v55);
    }
    v42 = v55;
    v43 = v56;
    v41 = 353;
    goto LABEL_19;
  }
  if (v35)
  {
LABEL_18:
    v41 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254AC8CB0) - 8) + 64);
    v42 = (void *)v29;
    v43 = v30;
LABEL_19:
    memcpy(v42, v43, v41);
    goto LABEL_26;
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = v30[16];
  *(_QWORD *)(v29 + 24) = *((_QWORD *)v30 + 3);
  *(_WORD *)(v29 + 32) = *((_WORD *)v30 + 16);
  v36 = v31[8];
  __dst = (void *)(v29 + v36);
  v37 = &v30[v36];
  v38 = sub_211A4722C();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = sub_211958C38(&qword_254AC9898);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(__dst, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  *(_BYTE *)(v29 + v31[9]) = v30[v31[9]];
  *(_BYTE *)(v29 + v31[10]) = v30[v31[10]];
  memcpy((void *)(v29 + v31[11]), &v30[v31[11]], 0x161uLL);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_26:
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

uint64_t sub_21195C3D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_211942810(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_21195C46C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39)
{
  id v39;

  if (a39)
  {
    sub_21195DA00(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22);
    swift_bridgeObjectRetain();
    v39 = a39;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21195C5AC(uint64_t a1, int a2)
{
  return sub_2119595A8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation, &qword_254ACF120);
}

uint64_t assignWithTake for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_211A4722C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_211958C38(&qword_254AC9898);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[11];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  if (*(_QWORD *)(a1 + v17 + 304))
  {
    if (v19[38])
    {
      if (v18[21])
      {
        if (v19[21])
        {
          *v18 = *v19;
          swift_bridgeObjectRelease();
          v20 = v19[2];
          v18[1] = v19[1];
          v18[2] = v20;
          swift_bridgeObjectRelease();
          v21 = v19[4];
          v18[3] = v19[3];
          v18[4] = v21;
          swift_bridgeObjectRelease();
          v22 = v19[6];
          v18[5] = v19[5];
          v18[6] = v22;
          swift_bridgeObjectRelease();
          v23 = v19[8];
          v18[7] = v19[7];
          v18[8] = v23;
          swift_bridgeObjectRelease();
          v24 = v19[10];
          v18[9] = v19[9];
          v18[10] = v24;
          swift_bridgeObjectRelease();
          v25 = v19[12];
          v18[11] = v19[11];
          v18[12] = v25;
          swift_bridgeObjectRelease();
          v26 = v19[14];
          v18[13] = v19[13];
          v18[14] = v26;
          swift_bridgeObjectRelease();
          v27 = v19[16];
          v18[15] = v19[15];
          v18[16] = v27;
          swift_bridgeObjectRelease();
          v28 = v19[18];
          v18[17] = v19[17];
          v18[18] = v28;
          swift_bridgeObjectRelease();
          v29 = v19[20];
          v18[19] = v19[19];
          v18[20] = v29;
          swift_bridgeObjectRelease();
          v18[21] = v19[21];
          swift_bridgeObjectRelease();
          v30 = v19[23];
          v18[22] = v19[22];
          v18[23] = v30;
          swift_bridgeObjectRelease();
          v31 = v19[25];
          v18[24] = v19[24];
          v18[25] = v31;
          swift_bridgeObjectRelease();
          v32 = v19[27];
          v18[26] = v19[26];
          v18[27] = v32;
          swift_bridgeObjectRelease();
          v33 = v19[29];
          v18[28] = v19[28];
          v18[29] = v33;
          swift_bridgeObjectRelease();
          v34 = v19[31];
          v18[30] = v19[30];
          v18[31] = v34;
          swift_bridgeObjectRelease();
          v35 = v19[33];
          v18[32] = v19[32];
          v18[33] = v35;
          swift_bridgeObjectRelease();
          v36 = v19[35];
          v18[34] = v19[34];
          v18[35] = v36;
          swift_bridgeObjectRelease();
          v37 = v19[37];
          v18[36] = v19[36];
          v18[37] = v37;
          swift_bridgeObjectRelease();
LABEL_17:
          v38 = (void *)v18[38];
          v18[38] = v19[38];

          *((_BYTE *)v18 + 312) = *((_BYTE *)v19 + 312);
          v39 = v19[41];
          v18[40] = v19[40];
          v18[41] = v39;
          swift_bridgeObjectRelease();
          *((_WORD *)v18 + 168) = *((_WORD *)v19 + 168);
          v18[43] = v19[43];
          swift_bridgeObjectRelease();
          *((_BYTE *)v18 + 352) = *((_BYTE *)v19 + 352);
          return a1;
        }
        sub_21196ECA4((uint64_t)v18);
      }
      memcpy(v18, v19, 0x130uLL);
      goto LABEL_17;
    }
    sub_211985BF8((uint64_t)v18);
  }
  memcpy(v18, v19, 0x161uLL);
  return a1;
}

uint64_t sub_21195C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21195C940(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v34 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v35 = (unint64_t)(v4 + 63) >> 6;
  v36 = result;
  while (v6)
  {
    v39 = (v6 - 1) & v6;
    v40 = v3;
    v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_25:
    v12 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v7);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(result + 56) + 56 * v7;
    v17 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v19 = *(_QWORD *)(v15 + 16);
    v18 = *(_QWORD *)(v15 + 24);
    v20 = *(unsigned __int8 *)(v15 + 32);
    v21 = *(_QWORD *)(v15 + 48);
    v41 = *(_QWORD *)(v15 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v2;
    v23 = sub_21195BB68(v13, v14);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0
      || ((v26 = *(_QWORD *)(v22 + 56) + 56 * v23,
           v27 = *(_QWORD *)(v26 + 16),
           v28 = *(_QWORD *)(v26 + 24),
           v38 = *(unsigned __int8 *)(v26 + 32),
           v29 = *(_QWORD *)(v26 + 40),
           v37 = *(_QWORD *)(v26 + 48),
           *(_QWORD *)v26 == v17)
        ? (v30 = *(_QWORD *)(v26 + 8) == v16)
        : (v30 = 0),
          !v30 && (sub_211A48258() & 1) == 0))
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v27 == v19 && v28 == v18)
    {
      if (v20 != v38)
        goto LABEL_46;
    }
    else if ((sub_211A48258() & 1) == 0 || ((v20 ^ v38) & 1) != 0)
    {
      goto LABEL_46;
    }
    if (v29 == v41 && v37 == v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v22;
      result = v36;
      v6 = v39;
      v3 = v40;
    }
    else
    {
      v33 = sub_211A48258();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v22;
      result = v36;
      v6 = v39;
      v3 = v40;
      if ((v33 & 1) == 0)
        return 0;
    }
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v8 >= v35)
    return 1;
  v9 = *(_QWORD *)(v34 + 8 * v8);
  v10 = v3 + 1;
  if (v9)
    goto LABEL_24;
  v10 = v3 + 2;
  if (v3 + 2 >= v35)
    return 1;
  v9 = *(_QWORD *)(v34 + 8 * v10);
  if (v9)
    goto LABEL_24;
  v10 = v3 + 3;
  if (v3 + 3 >= v35)
    return 1;
  v9 = *(_QWORD *)(v34 + 8 * v10);
  if (v9)
    goto LABEL_24;
  v10 = v3 + 4;
  if (v3 + 4 >= v35)
    return 1;
  v9 = *(_QWORD *)(v34 + 8 * v10);
  if (v9)
  {
LABEL_24:
    v39 = (v9 - 1) & v9;
    v40 = v10;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    goto LABEL_25;
  }
  v11 = v3 + 5;
  if (v3 + 5 >= v35)
    return 1;
  v9 = *(_QWORD *)(v34 + 8 * v11);
  if (v9)
  {
    v10 = v3 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v35)
      return 1;
    v9 = *(_QWORD *)(v34 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_24;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_21195CC6C()
{
  uint64_t v0;

  if (qword_254AC7B80 != -1)
    swift_once();
  v0 = sub_211A47748();
  return sub_21194F3E0(v0, (uint64_t)qword_254ADC7E8);
}

uint64_t sub_21195CCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(qword_254AC8A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_21195CCFC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a2[3];
  v3 = a2[4];
  v5 = *(_QWORD *)(a2[2] - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 <= 0x28)
    v13 = 40;
  if (v13 > 3)
    goto LABEL_7;
  v15 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v15 > 0xFFFC)
  {
    v14 = *(_DWORD *)(a1 + v13);
  }
  else
  {
    if (v15 <= 0xFC)
    {
LABEL_7:
      v14 = *(unsigned __int8 *)(a1 + v13);
      goto LABEL_12;
    }
    v14 = *(unsigned __int16 *)(a1 + v13);
  }
LABEL_12:
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X15 }
  }
  if (v14 == 2)
  {
    swift_release();

  }
  else if (v14 == 1)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = ~v7;
    (*(void (**)(uint64_t))(v5 + 8))(a1);
    v18 = (v8 + a1) & v17;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v4);
    v19 = (v18 + v9 + v11) & ~v11;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v19, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v3);
  }
}

uint64_t sub_21195CF2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_211958C38(&qword_254AC7DE8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_21195D078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 44);
  v6 = sub_211A473DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_21195D0D4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

uint64_t sub_21195D158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_21195D1B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_21195D1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_211A4779C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v4 + 24);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = v4;
  v18[4] = a2;
  v18[5] = a3;
  aBlock[4] = sub_211935100;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC6B88;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v9, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_21195D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v3 + 64);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = v3;
  aBlock[4] = sub_2119350F4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB2A8;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_211A477B4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v15, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return swift_release();
}

unint64_t sub_21195D5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _DWORD v22[4];
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE v28[312];

  v1 = sub_211A47208();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21196F558(v0, (uint64_t)v28);
  v7 = *(void **)(v0 + 304);
  v22[3] = *(unsigned __int8 *)(v0 + 312);
  v23 = *(_QWORD *)(v0 + 344);
  sub_211958C38(&qword_254ACC560);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_211A4A610;
  objc_msgSend(v7, sel_coordinate);
  v9 = MEMORY[0x24BEE13C8];
  v10 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = v11;
  objc_msgSend(v7, sel_coordinate);
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 72) = v12;
  objc_msgSend(v7, sel_horizontalAccuracy);
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 112) = v13;
  sub_211A4791C();
  v24 = 0xD000000000000014;
  v25 = 0x8000000211A53F20;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v14 = v24;
  v15 = v25;
  v24 = 0x6D617473656D6974;
  v25 = 0xEB00000000203A70;
  v16 = objc_msgSend(v7, sel_timestamp);
  sub_211A471E4();

  sub_211910908(&qword_254AC8A58, v2, MEMORY[0x24BDCE988]);
  sub_211A4821C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v24 = v14;
  v25 = v15;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v24;
  v18 = v25;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v24 = 0xD000000000000012;
  v25 = 0x8000000211A53F40;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v24 = v17;
  v25 = v18;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v24;
  v19 = v25;
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v26 = 0x3A73736572646461;
  v27 = 0xE900000000000020;
  sub_21196F558((uint64_t)v28, (uint64_t)&v24);
  sub_21196F7C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  sub_211958C38(&qword_254ACCB40);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v24 = v23;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8A30);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v24 = v20;
  v25 = v19;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_21195DA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  if (a22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21195DB70(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  _BYTE v59[248];
  int v60;
  char v61;

  v3 = sub_211958C38(&qword_254ACA9F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v48 = v1[2];
  v49 = v8;
  v10 = v1[3];
  v46 = v1[4];
  v47 = v10;
  v11 = v1[5];
  v44 = v1[6];
  v45 = v11;
  v12 = v1[7];
  v42 = v1[8];
  v43 = v12;
  v13 = v1[9];
  v14 = v1[10];
  v40 = v1[11];
  v41 = v14;
  v15 = v1[12];
  v38 = v13;
  v39 = v15;
  v37 = v1[13];
  v60 = *((unsigned __int8 *)v1 + 112);
  sub_2119B1B50((uint64_t)(v1 + 15), (uint64_t)v59);
  v16 = v1[45];
  v35 = v1[46];
  v36 = v16;
  v17 = v1[47];
  v33 = v1[48];
  v34 = v17;
  v18 = v1[49];
  v31 = v1[50];
  v32 = v18;
  v30 = v1[51];
  v29 = *((unsigned __int8 *)v1 + 416);
  v19 = v1[53];
  v20 = v1[54];
  v25 = v1[55];
  v26 = v20;
  v27 = v1[56];
  v28 = v19;
  sub_211931DB4(a1, a1[3]);
  sub_21195E4EC();
  sub_211A4836C();
  v51 = v9;
  v61 = 0;
  sub_211958C38(&qword_254AC8408);
  sub_21195E304();
  v21 = v50;
  sub_211A481E0();
  if (!v21)
  {
    v22 = v48;
    v51 = v49;
    v61 = 1;
    sub_211A481E0();
    v51 = v22;
    v61 = 2;
    sub_211A481E0();
    v50 = v4;
    v51 = v47;
    v61 = 3;
    sub_211A481E0();
    v51 = v46;
    v61 = 4;
    sub_211A481E0();
    v51 = v45;
    v61 = 5;
    sub_211958C38(&qword_254AC8420);
    sub_21195E3FC();
    sub_211A481E0();
    v51 = v44;
    v61 = 6;
    sub_211A481E0();
    v51 = v43;
    v61 = 7;
    sub_211A481E0();
    v51 = v42;
    v61 = 8;
    sub_211A481E0();
    v51 = v38;
    v52 = v41;
    v53 = v40;
    v54 = v39;
    v61 = 9;
    sub_211958C38(&qword_254AC97A0);
    sub_21192A218((unint64_t *)&qword_254AC97A8, &qword_254AC97A0, (uint64_t (*)(void))sub_2119639D4, MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    v51 = v37;
    LOBYTE(v52) = v60;
    v61 = 10;
    sub_211958C38(&qword_254ACAA08);
    sub_21192A218(&qword_254ACAA10, &qword_254ACAA08, (uint64_t (*)(void))sub_2119643BC, MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    sub_2119B1B50((uint64_t)v59, (uint64_t)&v51);
    v61 = 11;
    sub_211958C38((uint64_t *)&unk_254ACC2F0);
    sub_21192A218(&qword_254ACAA20, (uint64_t *)&unk_254ACC2F0, (uint64_t (*)(void))sub_21196183C, MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    v51 = v36;
    v52 = v35;
    v53 = v34;
    v54 = v33;
    v55 = v32;
    v56 = v31;
    v57 = v30;
    v58 = v29;
    v61 = 12;
    sub_211958C38(&qword_254ACAA30);
    sub_21192A218(&qword_254ACAA38, &qword_254ACAA30, (uint64_t (*)(void))sub_2119614B8, MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    v51 = v28;
    v61 = 13;
    sub_211958C38(&qword_254AC83A0);
    sub_21192A218(&qword_254ACAA48, &qword_254AC83A0, (uint64_t (*)(void))sub_2119616C4, MEMORY[0x24BEE12A0]);
    sub_211A481E0();
    v51 = v27;
    v61 = 16;
    sub_211958C38(&qword_254ACA9C8);
    sub_21195E478(&qword_254ACAA58, (uint64_t (*)(void))sub_2119648C8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_211A481E0();
    v51 = v26;
    v61 = 14;
    sub_211958C38(&qword_254ACA9D8);
    sub_21192A218(&qword_254ACAA68, &qword_254ACA9D8, (uint64_t (*)(void))sub_211961954, MEMORY[0x24BEE12A0]);
    sub_211A481E0();
    v51 = v25;
    v61 = 15;
    sub_211958C38(&qword_254AC8388);
    sub_21195E380();
    sub_211A481E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_21195E2C0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x212BE47BC](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_21195E304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACA9F8;
  if (!qword_254ACA9F8)
  {
    v1 = sub_21195E2C0(&qword_254AC8408);
    v2 = sub_211910908(&qword_254ACAA00, (uint64_t (*)(uint64_t))type metadata accessor for FMFIntermediateFriend, (uint64_t)&unk_211A4A718);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACA9F8);
  }
  return result;
}

unint64_t sub_21195E380()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8A40;
  if (!qword_254AC8A40)
  {
    v1 = sub_21195E2C0(&qword_254AC8388);
    v2 = sub_211910908((unint64_t *)&qword_254AC8A48, (uint64_t (*)(uint64_t))type metadata accessor for FMFLabelledLocation, (uint64_t)&protocol conformance descriptor for FMFLabelledLocation);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8A40);
  }
  return result;
}

unint64_t sub_21195E3FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACA2B0;
  if (!qword_254ACA2B0)
  {
    v1 = sub_21195E2C0(&qword_254AC8420);
    v2 = sub_211910908((unint64_t *)&qword_254ACA2B8, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocationAlert, (uint64_t)&protocol conformance descriptor for FMFLocationAlert);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACA2B0);
  }
  return result;
}

uint64_t sub_21195E478(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_21195E2C0(&qword_254ACA9C8);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x212BE47C8](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21195E4EC()
{
  unint64_t result;

  result = qword_254ACA9C0;
  if (!qword_254ACA9C0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D93C, &type metadata for FriendCacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA9C0);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for FMFSchedule.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

BOOL sub_21195E540(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_21195E554()
{
  unsigned __int8 *v0;

  return sub_21195E55C(*v0);
}

uint64_t sub_21195E55C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195E584 + 4 * byte_211A4A62E[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_21195E584()
{
  return 0x64496E6F73726570;
}

unint64_t sub_21195E5A4()
{
  return 0xD000000000000015;
}

uint64_t sub_21195E6B8()
{
  return 0x6E65644968737570;
}

ValueMetadata *type metadata accessor for FMFRelationshipType()
{
  return &type metadata for FMFRelationshipType;
}

void static FMFRelationshipType.willFollowMyLocation.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FMFRelationshipType.sharesLocationWithMe.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21195E704()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701667182;
  if (*v0 != 1)
    v1 = 0x6143654D6F747561;
  if (*v0)
    return v1;
  else
    return 25705;
}

__n128 initializeWithTake for FMFDevice(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFContact(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FMFLocationSource()
{
  return &type metadata for FMFLocationSource;
}

void static FMFRelationshipType.willShareLocationWithMe.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FMFRelationshipType.followsMyLocation.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void sub_21195E7DC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_21195E7EC(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t storeEnumTagSinglePayload for FMFIntermediateFriend.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_21195E840 + 4 * byte_211A4A641[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_21195E874 + 4 * byte_211A4A63C[v4]))();
}

uint64_t sub_21195E874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195E87C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21195E884);
  return result;
}

uint64_t sub_21195E890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21195E898);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_21195E89C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195E8A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFSimpleLocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 353))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t dispatch thunk of FMFManager.friendsOperationsRestricted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t sub_21195E904()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + 112) + 40);
}

ValueMetadata *type metadata accessor for FMFContact()
{
  return &type metadata for FMFContact;
}

uint64_t FMFFriend.contactHandles.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FMFLabel()
{
  return &type metadata for FMFLabel;
}

ValueMetadata *type metadata accessor for FMFAddress()
{
  return &type metadata for FMFAddress;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlert()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for FMFLocationAlert()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

BOOL FMFLocation.isSecureLocation.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) != 0;
}

void FMFLocation.locationSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

_BYTE *sub_21195E980(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t dispatch thunk of FMFManager.pendingUpdateFriends.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t sub_21195E994()
{
  return sub_21191637C(&qword_254ACABB8);
}

uint64_t getEnumTagSinglePayload for FMFPreferences(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21195E9F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195EA14 + 4 * byte_211A4B5F8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_21195EA14()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_21195EA5C()
{
  unsigned __int8 *v0;

  return sub_21195EA64(*v0);
}

uint64_t sub_21195EA64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195EAA0 + 4 * byte_211A4DD70[a1]))(0x6F6C6C6F4678616DLL, 0xEC00000073726577);
}

unint64_t sub_21195EAA0()
{
  return 0xD000000000000019;
}

uint64_t sub_21195ED70()
{
  return 0x67694D776F6C6C61;
}

uint64_t sub_21195ED94()
{
  unsigned __int8 *v0;

  return sub_21195ED9C(*v0);
}

uint64_t sub_21195ED9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195EDCC + 4 * byte_211A49CE2[a1]))(0x736C6562616CLL, 0xE600000000000000);
}

unint64_t sub_21195EDCC()
{
  return 0xD000000000000011;
}

uint64_t sub_21195EF78()
{
  return swift_release();
}

uint64_t sub_21195EF80()
{
  return swift_release();
}

uint64_t sub_21195EF88()
{
  return swift_release();
}

uint64_t sub_21195EF90()
{
  return swift_release();
}

uint64_t sub_21195EF98()
{
  return swift_release();
}

uint64_t sub_21195EFA0()
{
  return swift_release();
}

uint64_t sub_21195EFA8()
{
  return swift_release();
}

uint64_t sub_21195EFB0()
{
  return swift_release();
}

uint64_t sub_21195EFB8()
{
  return swift_release();
}

uint64_t sub_21195EFC0()
{
  return swift_release();
}

uint64_t sub_21195EFC8()
{
  return swift_release();
}

uint64_t sub_21195EFD0()
{
  return swift_release();
}

uint64_t sub_21195EFD8()
{
  return swift_release();
}

uint64_t sub_21195EFE0()
{
  return swift_release();
}

uint64_t sub_21195EFE8()
{
  return swift_release();
}

uint64_t sub_21195EFF0()
{
  return swift_release();
}

uint64_t sub_21195EFF8()
{
  return swift_release();
}

uint64_t sub_21195F000()
{
  return swift_release();
}

uint64_t sub_21195F008()
{
  return swift_release();
}

uint64_t sub_21195F010()
{
  return swift_release();
}

uint64_t sub_21195F018()
{
  return swift_release();
}

uint64_t sub_21195F020()
{
  return swift_release();
}

uint64_t sub_21195F028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F118(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_21195F178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t destroy for FMFLabel()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AsyncTimerSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimerSequence);
}

uint64_t sub_21195F19C()
{
  unsigned __int8 *v0;

  return sub_21195F1A4(*v0);
}

uint64_t sub_21195F1A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195F1DC + 4 * byte_211A4D779[a1]))(0x6E69776F6C6C6F66, 0xE900000000000067);
}

uint64_t sub_21195F1DC()
{
  return 0x7265776F6C6C6F66;
}

unint64_t sub_21195F1F4()
{
  return 0xD000000000000010;
}

uint64_t sub_21195F348()
{
  return 0x73746361746E6F63;
}

uint64_t storeEnumTagSinglePayload for FMFDevice.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21195F3AC + 4 * byte_211A50641[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21195F3E0 + 4 * asc_211A5063C[v4]))();
}

uint64_t sub_21195F3E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F3E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21195F3F0);
  return result;
}

uint64_t sub_21195F3FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21195F404);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21195F408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFIntermediateFriend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_21195F4AC()
{
  return 0;
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_21195F4C4()
{
  unsigned __int8 *v0;

  return sub_21195F4CC(*v0);
}

uint64_t sub_21195F4CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195F508 + 4 * byte_211A5020E[a1]))(0x6569724677656976, 0xEB0000000073646ELL);
}

uint64_t sub_21195F508()
{
  return 0x6C6C6F4677656976;
}

uint64_t sub_21195F52C()
{
  return 0x7165526E4F746361;
}

uint64_t sub_21195F54C()
{
  return 0x636F4C726566666FLL;
}

uint64_t sub_21195F570()
{
  return 0x794D65676E616863;
}

uint64_t sub_21195F594()
{
  return 0x654D65676E616863;
}

unint64_t sub_21195F5B8()
{
  return 0xD000000000000012;
}

unint64_t sub_21195F5D4()
{
  return 0xD000000000000019;
}

uint64_t sub_21195F610()
{
  return 0x724665766F6D6572;
}

uint64_t sub_21195F634()
{
  return 0x6F4665766F6D6572;
}

uint64_t sub_21195F658()
{
  return 0x654465766F6D6572;
}

uint64_t sub_21195F678()
{
  return 0x744F796669746F6ELL;
}

uint64_t sub_21195F698()
{
  return 0x654D796669746F6ELL;
}

uint64_t getEnumTagSinglePayload for FriendCacheData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 456))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

__n128 initializeWithTake for FMFLocateInProgress(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLocateInProgress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21195F758 + 4 * byte_211A4EB75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21195F78C + 4 * byte_211A4EB70[v4]))();
}

uint64_t sub_21195F78C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21195F79CLL);
  return result;
}

uint64_t sub_21195F7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21195F7B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21195F7B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F7BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F7C8()
{
  _BYTE *v0;

  if (*v0)
    return 0x737574617473;
  else
    return 25705;
}

uint64_t _s7FMFCore17FMFLocationSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21195F840 + 4 * byte_211A4B601[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21195F874 + 4 * byte_211A4B5FC[v4]))();
}

uint64_t sub_21195F874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F87C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21195F884);
  return result;
}

uint64_t sub_21195F890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21195F898);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21195F89C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195F8A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FriendCacheData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 456) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 456) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFDevice(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFPreferences(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFAddress(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 304))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21195FA80()
{
  unsigned __int8 *v0;

  return sub_21195FA88(*v0);
}

uint64_t sub_21195FA88(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21195FAC0 + 4 * byte_211A4CD5F[a1]))(0xD000000000000013, 0x8000000211A52B10);
}

uint64_t sub_21195FAC0(uint64_t a1)
{
  return a1 - 2;
}

uint64_t sub_21195FB04()
{
  return 0x457972616D697270;
}

uint64_t sub_21195FB24()
{
  return 0x657469726F766166;
}

uint64_t storeEnumTagSinglePayload for FMFConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_21195FB8C + 4 * byte_211A4DD94[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_21195FBC0 + 4 * byte_211A4DD8F[v4]))();
}

uint64_t sub_21195FBC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195FBC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21195FBD0);
  return result;
}

uint64_t sub_21195FBDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21195FBE4);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_21195FBE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195FBF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21195FBFC()
{
  unsigned __int8 *v0;

  return sub_211A3D408(*v0);
}

uint64_t dispatch thunk of FMFManager.isInitialized.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

void *initializeWithTake for FriendCacheData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C8uLL);
}

uint64_t sub_21195FC1C()
{
  unsigned __int8 *v0;

  return sub_21195FC24(*v0);
}

uint64_t sub_21195FC24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195FC58 + 4 * byte_211A4AD57[a1]))(0x64497472656C61, 0xE700000000000000);
}

uint64_t sub_21195FC58()
{
  return 0x656C746974;
}

uint64_t sub_21195FC6C()
{
  return 0x6567617373656DLL;
}

uint64_t sub_21195FC80()
{
  return 0x6E6F747475426B6FLL;
}

unint64_t sub_21195FCB4()
{
  return 0xD000000000000011;
}

uint64_t sub_21195FCD0()
{
  return 0x75426C65636E6163;
}

uint64_t sub_21195FCF4()
{
  return 0x7079547472656C61;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertTriggerType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t FMFLocation.locateInProgress.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_21195FDAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195FDD8 + 4 * byte_211A5224C[*v0]))(0x736C69616D65, 0xE600000000000000);
}

uint64_t sub_21195FDD8()
{
  return 0x6D614E7473726966;
}

uint64_t sub_21195FDF4()
{
  return 0x656369766544656DLL;
}

uint64_t sub_21195FE10()
{
  return 0x6449656369766564;
}

uint64_t sub_21195FE28()
{
  return 0x656C626967696C65;
}

void type metadata accessor for AsyncChain2Sequence()
{
  JUMPOUT(0x212BE4744);
}

uint64_t type metadata accessor for AsyncSyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSyncSequence);
}

ValueMetadata *type metadata accessor for FMFPreferences()
{
  return &type metadata for FMFPreferences;
}

uint64_t sub_21195FE74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21195FEA0 + 4 * byte_211A51F14[*v0]))(0x7472656C61, 0xE500000000000000);
}

uint64_t sub_21195FEA0()
{
  return 0x6F43726576726573;
}

uint64_t sub_21195FEC4()
{
  return 0x746E6F4361746164;
}

uint64_t sub_21195FEE4()
{
  return 0x6174536863746566;
}

uint64_t sub_21195FF04()
{
  return 0x52646E616D6D6F63;
}

uint64_t sub_21195FF28()
{
  sub_21195FF50();
  return sub_211A48390();
}

unint64_t sub_21195FF50()
{
  unint64_t result;

  result = qword_254AC9438;
  if (!qword_254AC9438)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B04C, &type metadata for FMFAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9438);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFInitRefreshClientResponse.InitRefreshCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_21195FFE0 + 4 * byte_211A49CF9[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_211960014 + 4 * byte_211A49CF4[v4]))();
}

uint64_t sub_211960014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196001C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960024);
  return result;
}

uint64_t sub_211960030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211960038);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_21196003C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFInitRefreshClientResponse.InitRefreshCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t FMFPreferences.hideLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t dispatch thunk of FMFManager.friends.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t sub_2119600F4()
{
  return sub_21191637C(&qword_254ACABB8);
}

uint64_t dispatch thunk of FMFManager.preferences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t storeEnumTagSinglePayload for FMFAddress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 168) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 304) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t FMTabInfoLastVisited.getter()
{
  return 0x697369567473616CLL;
}

ValueMetadata *type metadata accessor for FMFConfigValue()
{
  return &type metadata for FMFConfigValue;
}

uint64_t sub_2119601D8()
{
  sub_211960200();
  return sub_211A48390();
}

unint64_t sub_211960200()
{
  unint64_t result;

  result = qword_254ACEEF8;
  if (!qword_254ACEEF8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51E50, &type metadata for FMFAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACEEF8);
  }
  return result;
}

uint64_t FMTabInfoTimeSpent.getter()
{
  return 0x6E657053656D6974;
}

uint64_t FMFGlobalConfig<A>(_:fallback:)(uint64_t a1, uint64_t a2)
{
  return sub_211915778(a1, a2);
}

uint64_t storeEnumTagSinglePayload for FMFSimpleLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_BYTE *)(result + 352) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 353) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 304) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 353) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFAddress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_211960358 + 4 * byte_211A51B73[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_21196038C + 4 * byte_211A51B6E[v4]))();
}

uint64_t sub_21196038C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21196039CLL);
  return result;
}

uint64_t sub_2119603A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119603B0);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_2119603B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119603BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFBaseResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_211960414 + 4 * byte_211A51F28[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_211960448 + 4 * byte_211A51F23[v4]))();
}

uint64_t sub_211960448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960458);
  return result;
}

uint64_t sub_211960464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21196046CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_211960470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFMyInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2119604CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FMFSimpleLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_211960528 + 4 * byte_211A4A403[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_21196055C + 4 * byte_211A4A3FE[v4]))();
}

uint64_t sub_21196055C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21196056CLL);
  return result;
}

uint64_t sub_211960578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211960580);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_211960584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196058C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960598()
{
  unsigned __int8 *v0;

  return sub_2119605A0(*v0);
}

uint64_t sub_2119605A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119605D4 + 4 * byte_211A4A3F7[a1]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_2119605D4()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_2119605F0()
{
  return 0x656475746974616CLL;
}

unint64_t sub_211960608()
{
  return 0xD000000000000012;
}

uint64_t sub_211960624()
{
  return 0x6D617473656D6974;
}

uint64_t sub_211960644()
{
  return 0x736C6562616CLL;
}

uint64_t sub_211960658()
{
  return 0x756363616E497369;
}

uint64_t getEnumTagSinglePayload for FMFAlertType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFPreferences.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_211960754 + 4 * byte_211A4CD70[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_211960788 + 4 * byte_211A4CD6B[v4]))();
}

uint64_t sub_211960788(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960790(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960798);
  return result;
}

uint64_t sub_2119607A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119607ACLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2119607B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119607B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

__n128 initializeWithTake for FMFMyInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 initializeWithTake for FMFPreferences(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFMyInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFMyInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2119608BC + 4 * byte_211A52256[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2119608F0 + 4 * byte_211A52251[v4]))();
}

uint64_t sub_2119608F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119608F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960900);
  return result;
}

uint64_t sub_21196090C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211960914);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_211960918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFMyInfo.CodingKeys()
{
  return &type metadata for FMFMyInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFDevice.CodingKeys()
{
  return &type metadata for FMFDevice.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FMFConfig(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 240))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FMFConfig.CodingKeys()
{
  return &type metadata for FMFConfig.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMFAlert.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2119609FC + 4 * byte_211A4AD6E[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_211960A30 + 4 * byte_211A4AD69[v4]))();
}

uint64_t sub_211960A30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960A38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960A40);
  return result;
}

uint64_t sub_211960A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211960A54);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_211960A58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960A60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for FMDiskIO.KeyPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMDiskIO.KeyPair);
}

uint64_t sub_211960A78()
{
  char *v0;

  return sub_211960A8C(*v0);
}

uint64_t sub_211960A8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x697274656D6D7973;
  else
    return 0x4B65746176697270;
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgressStatus()
{
  return &type metadata for FMFSecureOrLiveLocateInProgressStatus;
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgress()
{
  return &type metadata for FMFSecureOrLiveLocateInProgress;
}

uint64_t sub_211960AF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FMFMyLocationResponse.MyLocationCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_211960B48 + 4 * byte_211A4EE35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_211960B7C + 4 * byte_211A4EE30[v4]))();
}

uint64_t sub_211960B7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960B84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211960B8CLL);
  return result;
}

uint64_t sub_211960B98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211960BA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_211960BA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960BAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211960BB8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x6E6F697461636F6CLL;
}

ValueMetadata *type metadata accessor for FMFIntermediateFriend.CodingKeys()
{
  return &type metadata for FMFIntermediateFriend.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFLocateInProgress()
{
  return &type metadata for FMFLocateInProgress;
}

uint64_t sub_211960C3C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for FMFSchedule.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFFavoriteFriend()
{
  return &type metadata for FMFFavoriteFriend;
}

void sub_211960CE4()
{
  unint64_t v0;
  unint64_t v1;

  sub_21190F62C(319, qword_254AC9A80, (void (*)(uint64_t))type metadata accessor for FMFSchedule);
  if (v0 <= 0x3F)
  {
    sub_21190F62C(319, (unint64_t *)&qword_254ACC3B0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for FriendCacheData()
{
  return &type metadata for FriendCacheData;
}

ValueMetadata *type metadata accessor for FriendCacheData.CodingKeys()
{
  return &type metadata for FriendCacheData.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFPreferences.CodingKeys()
{
  return &type metadata for FMFPreferences.CodingKeys;
}

uint64_t sub_211960E30()
{
  return 0;
}

uint64_t sub_211960E38()
{
  return 1;
}

ValueMetadata *type metadata accessor for SecureFriend()
{
  return &type metadata for SecureFriend;
}

void type metadata accessor for FMImageCache()
{
  JUMPOUT(0x212BE4744);
}

ValueMetadata *type metadata accessor for FMFFeatures.CodingKeys()
{
  return &type metadata for FMFFeatures.CodingKeys;
}

uint64_t dispatch thunk of FMFManager.locationAlerts.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t sub_211960E78()
{
  return sub_21191637C(&qword_254AC8420);
}

__n128 initializeWithCopy for FMFConfig(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t *sub_211960F38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

_QWORD *sub_211960F78(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21190FC18(a1, a2, a3, a4, &qword_254ACA948, &qword_254ACA950);
}

char *sub_211960F8C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_211961074(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_211958C38(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_211961178(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

unint64_t sub_211961268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254ACC2C0;
  if (!qword_254ACC2C0)
  {
    v1 = sub_211911824(255, &qword_254ACC2B8);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254ACC2C0);
  }
  return result;
}

uint64_t sub_2119612C0()
{
  return sub_211910908(&qword_254AC7E88, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A49570);
}

unint64_t sub_2119612EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC8880;
  if (!qword_254AC8880)
  {
    v1 = sub_211A47D60();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_254AC8880);
  }
  return result;
}

uint64_t sub_211961334(uint64_t a1)
{
  void *v1;

  objc_msgSend(v1, sel_setDelegate_, a1);
  return swift_unknownObjectRelease();
}

unint64_t sub_211961368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC8888;
  if (!qword_254AC8888)
  {
    v1 = sub_21195E2C0((uint64_t *)&unk_254ACC310);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254AC8888);
  }
  return result;
}

uint64_t sub_2119613B4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_21195E2C0(&qword_254AC8388);
    v10 = sub_211910908(a2, (uint64_t (*)(uint64_t))type metadata accessor for FMFLabelledLocation, a3);
    result = MEMORY[0x212BE47C8](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_211961438()
{
  return sub_21192A218(&qword_254ACA7C0, &qword_254ACA790, (uint64_t (*)(void))sub_211963650, MEMORY[0x24BEE12A0]);
}

uint64_t sub_21196145C(uint64_t a1, uint64_t a2)
{
  return sub_21193461C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend, (uint64_t (*)(char *, char *))sub_21194D25C);
}

uint64_t *sub_211961470(uint64_t *a1)
{
  sub_211933F10(*a1);
  return a1;
}

ValueMetadata *type metadata accessor for FMFMyInfo()
{
  return &type metadata for FMFMyInfo;
}

unint64_t sub_2119614B8()
{
  unint64_t result;

  result = qword_254ACAA40;
  if (!qword_254ACAA40)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFMyInfo, &type metadata for FMFMyInfo);
    atomic_store(result, (unint64_t *)&qword_254ACAA40);
  }
  return result;
}

unint64_t sub_211961504()
{
  unint64_t result;

  result = qword_254ACF260;
  if (!qword_254ACF260)
  {
    result = MEMORY[0x212BE47C8](&unk_211A52334, &type metadata for FMFMyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF260);
  }
  return result;
}

unint64_t sub_211961548()
{
  unint64_t result;

  result = qword_254ACF268;
  if (!qword_254ACF268)
  {
    result = MEMORY[0x212BE47C8](&unk_211A5235C, &type metadata for FMFMyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF268);
  }
  return result;
}

uint64_t sub_21196158C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119615D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_21196161C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254AC8558[0])
  {
    type metadata accessor for FMFFriend();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, qword_254AC8558);
  }
}

ValueMetadata *type metadata accessor for FMFDevice()
{
  return &type metadata for FMFDevice;
}

unint64_t sub_211961680()
{
  unint64_t result;

  result = qword_254AC83B0;
  if (!qword_254AC83B0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDevice, &type metadata for FMFDevice);
    atomic_store(result, (unint64_t *)&qword_254AC83B0);
  }
  return result;
}

unint64_t sub_2119616C4()
{
  unint64_t result;

  result = qword_254ACAA50;
  if (!qword_254ACAA50)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDevice, &type metadata for FMFDevice);
    atomic_store(result, (unint64_t *)&qword_254ACAA50);
  }
  return result;
}

unint64_t sub_211961710()
{
  unint64_t result;

  result = qword_254ACDC50;
  if (!qword_254ACDC50)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50718, &type metadata for FMFDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDC50);
  }
  return result;
}

unint64_t sub_211961754()
{
  unint64_t result;

  result = qword_254ACDC58;
  if (!qword_254ACDC58)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50740, &type metadata for FMFDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDC58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 240) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

uint64_t sub_211961818(_QWORD *a1)
{
  return FMFConfig.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FMFConfig()
{
  return &type metadata for FMFConfig;
}

unint64_t sub_21196183C()
{
  unint64_t result;

  result = qword_254ACAA28;
  if (!qword_254ACAA28)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFConfig, &type metadata for FMFConfig);
    atomic_store(result, (unint64_t *)&qword_254ACAA28);
  }
  return result;
}

unint64_t sub_211961888()
{
  unint64_t result;

  result = qword_254ACADE8;
  if (!qword_254ACADE8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DEDC, &type metadata for FMFConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACADE8);
  }
  return result;
}

unint64_t sub_2119618CC()
{
  unint64_t result;

  result = qword_254ACADF0;
  if (!qword_254ACADF0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DF04, &type metadata for FMFConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACADF0);
  }
  return result;
}

unint64_t sub_211961910()
{
  unint64_t result;

  result = qword_254ACA9E8;
  if (!qword_254ACA9E8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLabel, &type metadata for FMFLabel);
    atomic_store(result, (unint64_t *)&qword_254ACA9E8);
  }
  return result;
}

unint64_t sub_211961954()
{
  unint64_t result;

  result = qword_254ACAA70;
  if (!qword_254ACAA70)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLabel, &type metadata for FMFLabel);
    atomic_store(result, (unint64_t *)&qword_254ACAA70);
  }
  return result;
}

uint64_t FMFAlert.__deallocating_deinit()
{
  FMFAlert.deinit();
  return swift_deallocClassInstance();
}

_QWORD *sub_2119619BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for FMFAlert();
  v5 = swift_allocObject();
  result = FMFAlert.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

void sub_211961A14()
{
  unint64_t v0;

  sub_211964C3C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for FMFAlert.CodingKeys()
{
  return &type metadata for FMFAlert.CodingKeys;
}

unint64_t sub_211961AC0()
{
  unint64_t result;

  result = qword_254AC95B8;
  if (!qword_254AC95B8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4AF5C, &type metadata for FMFAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC95B8);
  }
  return result;
}

unint64_t sub_211961B04()
{
  unint64_t result;

  result = qword_254AC95C0;
  if (!qword_254AC95C0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4AF84, &type metadata for FMFAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC95C0);
  }
  return result;
}

uint64_t type metadata accessor for FMDiskIO(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMDiskIO);
}

uint64_t sub_211961B58@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FMDiskIO.KeyPair.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_211961B78()
{
  return swift_allocateGenericValueMetadata();
}

void sub_211961B80()
{
  JUMPOUT(0x212BE47C8);
}

void sub_211961B90()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_211961BA0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for FMDiskIO.KeyPair.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMDiskIO.KeyPair.CodingKeys);
}

void sub_211961BB4()
{
  uint64_t v0;

  sub_211926074(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_211961BBC()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_211961BD0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_211961BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_211958C38(&qword_254ACA028);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 2, 2, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211961C2C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for FMFServerInteractionController()
{
  uint64_t result;

  result = qword_254ACDD10;
  if (!qword_254ACDD10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211961C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2119299A4(a1, a2, a3, a4, &qword_254ADC820);
}

uint64_t sub_211961C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2119299A4(a1, a2, a3, a4, &qword_254ADC828);
}

uint64_t sub_211961C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_211917254(a1, a2, a3);
}

id sub_211961CB8(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_21191BD98(a1, a2, a3, *(void (**)(_QWORD, void *))(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32));
}

void sub_211961CC4()
{
  uint64_t *v0;

  sub_21191BB84(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_211961CD0()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for FMFInitRefreshClientResponse.InitRefreshCodingKeys()
{
  return &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys;
}

unint64_t sub_211961D68()
{
  unint64_t result;

  result = qword_254AC8440;
  if (!qword_254AC8440)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49DE8, &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8440);
  }
  return result;
}

unint64_t sub_211961DAC()
{
  unint64_t result;

  result = qword_254AC8448;
  if (!qword_254AC8448)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49E10, &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8448);
  }
  return result;
}

void sub_211961DF0()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMFSecureLocationController(uint64_t a1)
{
  return sub_21195A1F4(a1, (uint64_t *)&unk_254AC9C20);
}

uint64_t sub_211961EA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_211961F78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_211961FD8()
{
  unint64_t v0;

  sub_21196161C();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMSystemDirectoryUtilities()
{
  return objc_opt_self();
}

void sub_21196208C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254ACEFB0)
  {
    type metadata accessor for FMFCommandResponseFragment();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254ACEFB0);
  }
}

id FMLocationShiftingRequest.location.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *FMLocationShiftingRequest.init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a3;
  v3[3] = a1;
  v3[4] = a2;
  return v3;
}

void sub_2119620F8()
{
  uint64_t v0;

  sub_211910DC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_211962100()
{
  uint64_t v0;

  sub_2119109D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_211962108(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_211915BFC(a1, a2, *(char **)(v2 + 16));
}

void sub_211962110()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMFContactsDataController()
{
  uint64_t result;

  result = qword_254ACC3A0;
  if (!qword_254ACC3A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FMFSystemStateController()
{
  return objc_opt_self();
}

void sub_211962214()
{
  uint64_t v0;

  sub_2119213D0(v0);
}

uint64_t sub_211962244()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMFReverseGeocodingCache()
{
  uint64_t result;

  result = qword_254ACCB78;
  if (!qword_254ACCB78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119622B4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for FMReverseGeocodingCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMReverseGeocodingCache);
}

void sub_2119622D8()
{
  unint64_t v0;

  sub_21196421C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMFMyLocationController()
{
  uint64_t result;

  result = qword_254ACDE00;
  if (!qword_254ACDE00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FMFManagerConfiguration()
{
  uint64_t result;

  result = qword_254ACBF48;
  if (!qword_254ACBF48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static FMFManagerConfiguration.default.getter()
{
  if (qword_254AC7B50 != -1)
    swift_once();
  return swift_retain();
}

void sub_211962448()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for FMFPendingUpdateReason()
{
  return &type metadata for FMFPendingUpdateReason;
}

void sub_2119624DC()
{
  uint64_t v0;

  sub_211921650(*(char **)(v0 + 16));
}

uint64_t sub_2119624E4()
{
  uint64_t v0;

  return sub_2119125CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2119624EC()
{
  return sub_211915A18((uint64_t)&unk_24CCCD0B0, (uint64_t)sub_2119624E4, (uint64_t)&unk_24CCCD0C8);
}

uint64_t sub_211962508()
{
  uint64_t *v0;

  return sub_21190FECC(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken, (uint64_t (*)(uint64_t))sub_211919280);
}

uint64_t type metadata accessor for FMFPendingDataManager()
{
  return objc_opt_self();
}

uint64_t sub_211962554()
{
  return sub_211921190();
}

_QWORD *sub_211962574@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for FMFMyLocationResponse();
  v5 = swift_allocObject();
  result = sub_211919418(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertAcceptanceStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFMyLocationResponse.MyLocationCodingKeys()
{
  return &type metadata for FMFMyLocationResponse.MyLocationCodingKeys;
}

unint64_t sub_211962670()
{
  unint64_t result;

  result = qword_254ACBD18;
  if (!qword_254ACBD18)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EEE8, &type metadata for FMFMyLocationResponse.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBD18);
  }
  return result;
}

unint64_t sub_2119626B4()
{
  unint64_t result;

  result = qword_254ACBD20;
  if (!qword_254ACBD20)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EF10, &type metadata for FMFMyLocationResponse.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBD20);
  }
  return result;
}

unint64_t sub_2119626F8()
{
  unint64_t result;

  result = qword_254ACBD08;
  if (!qword_254ACBD08)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EFD8, &type metadata for FMFMyLocationResponse.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBD08);
  }
  return result;
}

void sub_21196273C()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_2119627E4()
{
  unint64_t result;

  result = qword_254AC8BB8;
  if (!qword_254AC8BB8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A774, &type metadata for FMFIntermediateFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8BB8);
  }
  return result;
}

unint64_t sub_211962828()
{
  unint64_t result;

  result = qword_254AC8BC0;
  if (!qword_254AC8BC0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A79C, &type metadata for FMFIntermediateFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8BC0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertTarget(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFGeofenceAlertsFrom()
{
  return &type metadata for FMFGeofenceAlertsFrom;
}

uint64_t sub_211962910(uint64_t a1, uint64_t a2)
{
  return sub_211919784(a2);
}

void sub_211962918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_211915348(a2, a3, a4, a5);
}

uint64_t sub_21196292C()
{
  uint64_t v0;

  return sub_2119220C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_211962938(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2119167AC(a1, a2, *(uint64_t (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_211962944()
{
  uint64_t v0;

  sub_211916D50(v0);
}

uint64_t sub_211962974()
{
  uint64_t v0;

  return sub_2119129C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21196297C()
{
  uint64_t v0;

  return sub_211962984(v0);
}

uint64_t sub_211962984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 1;
  sub_211917850();
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 24);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController + 32);
  sub_211931DB4((_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  sub_2119624EC();
  return sub_21193A740(0.0);
}

uint64_t sub_211962A08(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_211917B4C(a1, a2, v2);
}

uint64_t sub_211962A10()
{
  sub_21191512C();
  return swift_deallocClassInstance();
}

uint64_t sub_211962A30()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FMFMyLocationRequest()
{
  uint64_t result;

  result = qword_254ACDC60;
  if (!qword_254ACDC60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211962AB8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t type metadata accessor for FMFActionsController()
{
  return objc_opt_self();
}

uint64_t FMTabInfoCurrentTab.getter()
{
  return 0x54746E6572727563;
}

unint64_t sub_211962B20()
{
  unint64_t result;

  result = qword_254ACA3E8;
  if (!qword_254ACA3E8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFRelationshipType, &type metadata for FMFRelationshipType);
    atomic_store(result, (unint64_t *)&qword_254ACA3E8);
  }
  return result;
}

unint64_t sub_211962B64()
{
  unint64_t result;

  result = qword_254ACA3E0;
  if (!qword_254ACA3E0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFRelationshipType, &type metadata for FMFRelationshipType);
    atomic_store(result, (unint64_t *)&qword_254ACA3E0);
  }
  return result;
}

void sub_211962BA8()
{
  qword_254ACBE48 = 3;
}

unint64_t sub_211962BCC()
{
  unint64_t result;

  result = qword_254AC8400;
  if (!qword_254AC8400)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EBF4, &type metadata for FMFLocateInProgress);
    atomic_store(result, (unint64_t *)&qword_254AC8400);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLocateInProgress.CodingKeys()
{
  return &type metadata for FMFLocateInProgress.CodingKeys;
}

unint64_t sub_211962C28()
{
  unint64_t result;

  result = qword_254ACBC40;
  if (!qword_254ACBC40)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4ECEC, &type metadata for FMFLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC40);
  }
  return result;
}

unint64_t sub_211962C6C()
{
  unint64_t result;

  result = qword_254ACBC48;
  if (!qword_254ACBC48)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4ED14, &type metadata for FMFLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC48);
  }
  return result;
}

void sub_211962CB0()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for FMFGarbageCollector()
{
  return objc_opt_self();
}

uint64_t sub_211962D5C()
{
  uint64_t v0;

  return sub_211911BE0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_211962D68()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for AsyncMerge2Sequence()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_211962D7C()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x212BE4744);
}

void sub_211962DCC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for AsyncChain2Sequence.Iterator()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_211962FE0(uint64_t a1, uint64_t a2)
{
  return sub_211963694(a1, a2, (void (*)(void))sub_211911254);
}

void sub_211962FEC()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t type metadata accessor for AsyncTimerSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimerSequence.Iterator);
}

uint64_t sub_21196300C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void type metadata accessor for MergeStateMachine()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_21196307C(uint64_t *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = ~v4;
  if ((*(_DWORD *)(v3 + 84) & 0x80000000) != 0)
  {
    result = (*(uint64_t (**)(unint64_t))(v3 + 48))(((unint64_t)a1 + v4 + 8) & v5);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  }
  v6 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  result = (v6 + 1);
  if ((_DWORD)v6 == -1)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  return result;
}

uint64_t *sub_211963140(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    if ((_DWORD)v9 != -1)
      goto LABEL_5;
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7))
    goto LABEL_7;
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

void type metadata accessor for MergeStateMachine.ElementProducedAction()
{
  JUMPOUT(0x212BE4744);
}

void sub_211963240(id *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a2[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v27 = a2[3];
  v6 = *(_QWORD *)(v27 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v28 = a2[4];
  v10 = *(_QWORD *)(v28 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v9 + v11 + ((v5 + v7) & ~v7)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = 8;
  if (v17 <= 8)
    v17 = 8;
  if (v17 + 1 > v14)
    v19 = v17 + 1;
  else
    v19 = v14;
  if (v19 > 8)
    v18 = v19;
  if (v18 > 3)
    goto LABEL_14;
  v20 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a1 + v18);
      if (v21 < 3)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_14:
    v21 = *((unsigned __int8 *)a1 + v18);
    if (v21 < 3)
      goto LABEL_23;
LABEL_19:
    if (v18 <= 3)
      v22 = v18;
    else
      v22 = 4;
    __asm { BR              X15 }
  }
  v21 = *(_DWORD *)((char *)a1 + v18);
  if (v21 >= 3)
    goto LABEL_19;
LABEL_23:
  if (v21 == 2)
    goto LABEL_34;
  if (v21 == 1)
  {
    v25 = *((unsigned __int8 *)a1 + v17);
    if (v25 >= 2)
    {
      if (v17 <= 3)
        v26 = v17;
      else
        v26 = 4;
      __asm { BR              X14 }
    }
    if (v25 != 1)
    {
      (*(void (**)(id *, uint64_t))(v16 + 8))(a1, AssociatedTypeWitness);
      return;
    }
LABEL_34:

    return;
  }
  (*(void (**)(id *, uint64_t))(v4 + 8))(a1, v3);
  v23 = ((unint64_t)a1 + v8) & ~v7;
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v23, v27);
  v24 = (v23 + v9 + v11) & ~v11;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v24, 1, v28))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v28);
}

void type metadata accessor for MergeStateMachine.NextAction()
{
  JUMPOUT(0x212BE4744);
}

void type metadata accessor for MergeStateMachine.State()
{
  JUMPOUT(0x212BE4744);
}

uint64_t dispatch thunk of FMLocationShifter.shift(requests:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

ValueMetadata *type metadata accessor for FMFSimpleLocation()
{
  return &type metadata for FMFSimpleLocation;
}

ValueMetadata *type metadata accessor for FMFSimpleLocation.CodingKeys()
{
  return &type metadata for FMFSimpleLocation.CodingKeys;
}

unint64_t sub_211963584()
{
  unint64_t result;

  result = qword_254AC8A68;
  if (!qword_254AC8A68)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A4D0, &type metadata for FMFSimpleLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8A68);
  }
  return result;
}

unint64_t sub_2119635C8()
{
  unint64_t result;

  result = qword_254AC8A70;
  if (!qword_254AC8A70)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A4F8, &type metadata for FMFSimpleLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8A70);
  }
  return result;
}

unint64_t sub_21196360C()
{
  unint64_t result;

  result = qword_254ACA7A0;
  if (!qword_254ACA7A0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFavoriteFriend, &type metadata for FMFFavoriteFriend);
    atomic_store(result, (unint64_t *)&qword_254ACA7A0);
  }
  return result;
}

unint64_t sub_211963650()
{
  unint64_t result;

  result = qword_254ACA7C8;
  if (!qword_254ACA7C8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFavoriteFriend, &type metadata for FMFFavoriteFriend);
    atomic_store(result, (unint64_t *)&qword_254ACA7C8);
  }
  return result;
}

uint64_t sub_211963694(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;

  a3();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t sub_2119636C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_211963710(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for AsyncSyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSyncSequence.Iterator);
}

_QWORD *sub_21196372C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_211927D4C(a1, a2);
}

unint64_t sub_211963740()
{
  unint64_t result;

  result = qword_254ACD758;
  if (!qword_254ACD758)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D818, &type metadata for FriendCacheData);
    atomic_store(result, (unint64_t *)&qword_254ACD758);
  }
  return result;
}

unint64_t sub_21196378C()
{
  unint64_t result;

  result = qword_254ACAA80;
  if (!qword_254ACAA80)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D84C, &type metadata for FriendCacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACAA80);
  }
  return result;
}

unint64_t sub_2119637D0()
{
  unint64_t result;

  result = qword_254ACAA88;
  if (!qword_254ACAA88)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D874, &type metadata for FriendCacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACAA88);
  }
  return result;
}

uint64_t sub_211963814@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_21190F678(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_211963830@<X0>(_QWORD *a1@<X8>)
{
  return sub_211A1AC4C(a1);
}

void sub_211963844()
{
  unint64_t v0;

  sub_21196208C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMFBaseResponse()
{
  uint64_t result;

  result = qword_254ACEFA0;
  if (!qword_254ACEFA0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for FMFBaseResponse.CodingKeys()
{
  return &type metadata for FMFBaseResponse.CodingKeys;
}

unint64_t sub_21196392C()
{
  unint64_t result;

  result = qword_254ACF088;
  if (!qword_254ACF088)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51FC0, &type metadata for FMFBaseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF088);
  }
  return result;
}

unint64_t sub_211963970()
{
  unint64_t result;

  result = qword_254ACF090;
  if (!qword_254ACF090)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51FE8, &type metadata for FMFBaseResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACF090);
  }
  return result;
}

ValueMetadata *type metadata accessor for InitialTabInfo()
{
  return &type metadata for InitialTabInfo;
}

FMFCore::InitialTabInfo __swiftcall InitialTabInfo.init(lastVisitedTimes:currentTab:timeSpent:)(Swift::OpaquePointer lastVisitedTimes, Swift::OpaquePointer currentTab, Swift::OpaquePointer timeSpent)
{
  Swift::OpaquePointer *v3;
  FMFCore::InitialTabInfo result;

  v3->_rawValue = lastVisitedTimes._rawValue;
  v3[1]._rawValue = currentTab._rawValue;
  v3[2]._rawValue = timeSpent._rawValue;
  result.timeSpent = timeSpent;
  result.currentTab = currentTab;
  result.lastVisitedTimes = lastVisitedTimes;
  return result;
}

unint64_t sub_2119639D4()
{
  unint64_t result;

  result = qword_254AC97B0;
  if (!qword_254AC97B0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFPreferences, &type metadata for FMFPreferences);
    atomic_store(result, (unint64_t *)&qword_254AC97B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFPreferences.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_211963AB0()
{
  unint64_t result;

  result = qword_254ACA7F0;
  if (!qword_254ACA7F0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D0DC, &type metadata for FMFPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA7F0);
  }
  return result;
}

unint64_t sub_211963AF4()
{
  unint64_t result;

  result = qword_254ACA7F8;
  if (!qword_254ACA7F8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D104, &type metadata for FMFPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA7F8);
  }
  return result;
}

uint64_t type metadata accessor for FMFDataManager()
{
  return objc_opt_self();
}

uint64_t sub_211963B58(uint64_t a1)
{
  return sub_21193AA48(a1, (uint64_t)&unk_24CCCC860, (uint64_t)sub_211938B90, (uint64_t)&unk_24CCCC878);
}

void sub_211963B74(char *a1@<X8>)
{
  uint64_t v1;

  sub_211910F5C(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

void sub_211963B8C(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119111B8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_211963BA4()
{
  uint64_t v0;

  sub_21190F990(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

void sub_211963BB0()
{
  uint64_t v0;

  sub_21191048C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_211963BB8(uint64_t a1)
{
  return sub_21193AA48(a1, (uint64_t)&unk_24CCCC7C0, (uint64_t)sub_211963BB0, (uint64_t)&unk_24CCCC7D8);
}

uint64_t sub_211963BD4()
{
  uint64_t v0;

  return sub_211917468(*(_QWORD *)(v0 + 16));
}

uint64_t sub_211963BDC()
{
  uint64_t v0;

  return sub_211942854(v0);
}

void sub_211963BE4()
{
  uint64_t v0;

  sub_21191185C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_211963BEC(uint64_t a1)
{
  return sub_21193AA48(a1, (uint64_t)&unk_24CCCC810, (uint64_t)sub_211963BE4, (uint64_t)&unk_24CCCC828);
}

void sub_211963C0C()
{
  uint64_t v0;

  sub_211911D1C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_211963C20()
{
  unint64_t result;

  result = qword_254ACDCD0;
  if (!qword_254ACDCD0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFConfigValue, &type metadata for FMFConfigValue);
    atomic_store(result, (unint64_t *)&qword_254ACDCD0);
  }
  return result;
}

void sub_211963C64(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  char v11;

  type metadata accessor for FMDemoManager();
  v11 = a2;
  if ((static FMDemoManager.hasDemoModeAsset(for:)(&v11) & 1) != 0)
  {
    v7 = (void *)objc_opt_self();
    v8 = (void *)sub_211A478EC();
    v9 = (void *)sub_211A478EC();
    v10 = objc_msgSend(v7, sel_BOOLForKey_inDomain_, v8, v9);

  }
  else
  {
    v10 = 0;
  }
  *a5 = v10;
}

void sub_211963D28(uint64_t a1)
{
  sub_211963C64(a1, 0, 0xD00000000000001BLL, 0x8000000211A575A0, (unsigned __int8 *)&byte_254ACDFA0);
}

uint64_t sub_211963D50(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t static FMDemoManager.peopleDemoEnabled.getter()
{
  return sub_211963D50(&qword_254AC7BB0, (unsigned __int8 *)&byte_254ACDFA0);
}

void type metadata accessor for MergeStorage()
{
  JUMPOUT(0x212BE4744);
}

uint64_t method lookup function for FMImageCache()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_211963DC0()
{
  return swift_initClassMetadata2();
}

uint64_t dispatch thunk of FMImageCache.preload(requests:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void sub_211963E30()
{
  unint64_t v0;

  sub_211911894();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for FMFSchedule()
{
  uint64_t result;

  result = qword_254AC7D40;
  if (!qword_254AC7D40)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMFLocation(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v42;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = a3[8];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v11 = sub_211A4722C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_211958C38(&qword_254AC9898);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[11];
    v18 = (char *)v4 + v17;
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = (void *)v19[38];
    if (v20)
    {
      v21 = v19[21];
      if (v21)
      {
        v22 = v19[1];
        *(_QWORD *)v18 = *v19;
        *((_QWORD *)v18 + 1) = v22;
        v23 = v19[3];
        *((_QWORD *)v18 + 2) = v19[2];
        *((_QWORD *)v18 + 3) = v23;
        v24 = v19[5];
        *((_QWORD *)v18 + 4) = v19[4];
        *((_QWORD *)v18 + 5) = v24;
        v25 = v19[7];
        *((_QWORD *)v18 + 6) = v19[6];
        *((_QWORD *)v18 + 7) = v25;
        v26 = v19[9];
        *((_QWORD *)v18 + 8) = v19[8];
        *((_QWORD *)v18 + 9) = v26;
        v27 = v19[11];
        *((_QWORD *)v18 + 10) = v19[10];
        *((_QWORD *)v18 + 11) = v27;
        v28 = v19[13];
        *((_QWORD *)v18 + 12) = v19[12];
        *((_QWORD *)v18 + 13) = v28;
        v29 = v19[15];
        *((_QWORD *)v18 + 14) = v19[14];
        *((_QWORD *)v18 + 15) = v29;
        v30 = v19[17];
        *((_QWORD *)v18 + 16) = v19[16];
        *((_QWORD *)v18 + 17) = v30;
        v31 = v19[19];
        *((_QWORD *)v18 + 18) = v19[18];
        *((_QWORD *)v18 + 19) = v31;
        *((_QWORD *)v18 + 20) = v19[20];
        *((_QWORD *)v18 + 21) = v21;
        v42 = v19[23];
        *((_QWORD *)v18 + 22) = v19[22];
        *((_QWORD *)v18 + 23) = v42;
        v32 = v19[25];
        *((_QWORD *)v18 + 24) = v19[24];
        *((_QWORD *)v18 + 25) = v32;
        v33 = v19[27];
        *((_QWORD *)v18 + 26) = v19[26];
        *((_QWORD *)v18 + 27) = v33;
        v34 = v19[29];
        *((_QWORD *)v18 + 28) = v19[28];
        *((_QWORD *)v18 + 29) = v34;
        v35 = v19[31];
        *((_QWORD *)v18 + 30) = v19[30];
        *((_QWORD *)v18 + 31) = v35;
        v36 = v19[33];
        *((_QWORD *)v18 + 32) = v19[32];
        *((_QWORD *)v18 + 33) = v36;
        v37 = v19[35];
        *((_QWORD *)v18 + 34) = v19[34];
        *((_QWORD *)v18 + 35) = v37;
        v38 = v19[37];
        *((_QWORD *)v18 + 36) = v19[36];
        *((_QWORD *)v18 + 37) = v38;
        v20 = (void *)v19[38];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v4 + v17, v19, 0x130uLL);
      }
      *((_QWORD *)v18 + 38) = v20;
      v18[312] = *((_BYTE *)v19 + 312);
      v39 = v19[41];
      *((_QWORD *)v18 + 40) = v19[40];
      *((_QWORD *)v18 + 41) = v39;
      *((_WORD *)v18 + 168) = *((_WORD *)v19 + 168);
      *((_QWORD *)v18 + 43) = v19[43];
      v18[352] = *((_BYTE *)v19 + 352);
      v40 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)v4 + v17, v19, 0x161uLL);
    }
  }
  return v4;
}

void sub_21196421C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254ACDE10)
  {
    type metadata accessor for FMFLocation();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254ACDE10);
  }
}

void sub_211964270()
{
  unint64_t v0;

  sub_21190FBC4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for FMFLocation.CodingKeys()
{
  return &type metadata for FMFLocation.CodingKeys;
}

unint64_t sub_211964324()
{
  unint64_t result;

  result = qword_254AC9990;
  if (!qword_254AC9990)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B834, &type metadata for FMFLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9990);
  }
  return result;
}

unint64_t sub_211964368()
{
  unint64_t result;

  result = qword_254AC9998;
  if (!qword_254AC9998)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B85C, &type metadata for FMFLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9998);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFFeatures()
{
  return &type metadata for FMFFeatures;
}

unint64_t sub_2119643BC()
{
  unint64_t result;

  result = qword_254ACAA18;
  if (!qword_254ACAA18)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254ACAA18);
  }
  return result;
}

unint64_t sub_211964408()
{
  unint64_t result;

  result = qword_254ACDAC0;
  if (!qword_254ACDAC0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50458, &type metadata for FMFFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDAC0);
  }
  return result;
}

unint64_t sub_21196444C()
{
  unint64_t result;

  result = qword_254ACDAC8;
  if (!qword_254ACDAC8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50480, &type metadata for FMFFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDAC8);
  }
  return result;
}

void sub_211964490()
{
  unint64_t v0;

  sub_21196161C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for FMFManager()
{
  uint64_t result;

  result = qword_254ACC6B8;
  if (!qword_254ACC6B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of FMFManager.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t sub_2119645B8()
{
  _QWORD *v0;

  return sub_211917E70(v0);
}

uint64_t sub_2119645C0()
{
  uint64_t v0;

  return sub_211916204(v0);
}

uint64_t dispatch thunk of FMFManager.startRefreshing()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t sub_2119645D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 225) & 1) == 0)
  {
    v18[0] = v3;
    if (qword_254AC7B80 != -1)
      swift_once();
    v13 = sub_211A47748();
    sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
    v14 = sub_211A47724();
    v15 = sub_211A47D30();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21190D000, v14, v15, "FMFManager: start refreshing", v16, 2u);
      MEMORY[0x212BE48A0](v16, -1, -1);
    }

    *(_BYTE *)(v1 + 224) = 1;
    aBlock[4] = sub_2119645C0;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCB368;
    v17 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v12, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return swift_release();
  }
  return result;
}

uint64_t dispatch thunk of FMFManager.selectedFriend.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t sub_211964870()
{
  uint64_t v0;

  return sub_2119142A0(v0);
}

uint64_t sub_211964878()
{
  uint64_t *v0;

  return sub_211916B60(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_211964884()
{
  unint64_t result;

  result = qword_254ACA270;
  if (!qword_254ACA270)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFContact, &type metadata for FMFContact);
    atomic_store(result, (unint64_t *)&qword_254ACA270);
  }
  return result;
}

unint64_t sub_2119648C8()
{
  unint64_t result;

  result = qword_254ACAA60;
  if (!qword_254ACAA60)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFContact, &type metadata for FMFContact);
    atomic_store(result, (unint64_t *)&qword_254ACAA60);
  }
  return result;
}

uint64_t sub_21196490C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FMFAddress.init(from:)(a1, a2);
}

unint64_t sub_211964920()
{
  unint64_t result;

  result = qword_254ACCB48;
  if (!qword_254ACCB48)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFAddress, &type metadata for FMFAddress);
    atomic_store(result, (unint64_t *)&qword_254ACCB48);
  }
  return result;
}

unint64_t sub_211964964()
{
  unint64_t result;

  result = qword_254AC8A10;
  if (!qword_254AC8A10)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFAddress, &type metadata for FMFAddress);
    atomic_store(result, (unint64_t *)&qword_254AC8A10);
  }
  return result;
}

unint64_t sub_2119649A8(uint64_t a1)
{
  unint64_t result;

  result = sub_211964920();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFAddress.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for FMFAddress.CodingKeys()
{
  return &type metadata for FMFAddress.CodingKeys;
}

unint64_t sub_211964A74()
{
  unint64_t result;

  result = qword_254ACEF18;
  if (!qword_254ACEF18)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51D60, &type metadata for FMFAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACEF18);
  }
  return result;
}

unint64_t sub_211964AB8()
{
  unint64_t result;

  result = qword_254ACEF20;
  if (!qword_254ACEF20)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51D88, &type metadata for FMFAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACEF20);
  }
  return result;
}

uint64_t sub_211964AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_211964B44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254ACC3B0)
  {
    sub_211A47208();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254ACC3B0);
  }
}

uint64_t sub_211964B98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21193B8F8(a1, a2);
  return a1;
}

uint64_t sub_211964BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_211964BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_211964C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254AC9490)
  {
    sub_211A4713C();
    v0 = sub_211A47E14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254AC9490);
  }
}

uint64_t FMFSchedule.DaysOfWeek.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

FMFCore::FMFSchedule::DaysOfWeek __swiftcall FMFSchedule.DaysOfWeek.init(rawValue:)(FMFCore::FMFSchedule::DaysOfWeek rawValue)
{
  FMFCore::FMFSchedule::DaysOfWeek *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFSchedule.DaysOfWeek.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FMFSchedule.DaysOfWeek.sunday.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static FMFSchedule.DaysOfWeek.monday.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static FMFSchedule.DaysOfWeek.tuesday.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static FMFSchedule.DaysOfWeek.wednesday.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FMFSchedule.DaysOfWeek.thursday.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FMFSchedule.DaysOfWeek.friday.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static FMFSchedule.DaysOfWeek.saturday.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void sub_211964CFC()
{
  qword_254AC7AF8 = 65;
}

_QWORD *static FMFSchedule.DaysOfWeek.weekends.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_211964DFC(&qword_254AC7AF0, &qword_254AC7AF8, a1);
}

void sub_211964D28()
{
  qword_254AC7B08 = 62;
}

_QWORD *static FMFSchedule.DaysOfWeek.weekdays.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_211964DFC(&qword_254AC7B00, &qword_254AC7B08, a1);
}

uint64_t sub_211964D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (qword_254AC7AF0 != -1)
    result = swift_once();
  v0 = qword_254AC7AF8;
  if (qword_254AC7B00 != -1)
    result = swift_once();
  v1 = qword_254AC7B08;
  if ((qword_254AC7B08 & ~v0) == 0)
    v1 = 0;
  qword_254AC7B18 = v1 | v0;
  return result;
}

_QWORD *static FMFSchedule.DaysOfWeek.all.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_211964DFC(&qword_254AC7B10, &qword_254AC7B18, a1);
}

_QWORD *sub_211964DFC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*result != -1)
    result = (_QWORD *)swift_once();
  *a3 = *a2;
  return result;
}

Swift::String __swiftcall FMFSchedule.DaysOfWeek.description()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_211A4821C();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

_QWORD *sub_211964E7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_211964E88(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_211964E90@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_211964EA4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_211964EB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_211964ECC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_211964EFC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_211964F28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_211964F4C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_211964F60(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_211964F74(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_211964F88@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_211964F9C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_211964FB0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_211964FC4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_211964FD4()
{
  return sub_211A47E98();
}

_QWORD *sub_211964FEC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_211965000@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_211965010(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_21196501C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_211965034(char *a1)
{
  sub_2119761D0(*a1);
}

void sub_211965040()
{
  char *v0;

  sub_2119BBAEC(0, *v0);
}

void sub_21196504C()
{
  __asm { BR              X10 }
}

uint64_t sub_21196508C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_211965130(uint64_t a1)
{
  char *v1;

  sub_2119BBAEC(a1, *v1);
}

uint64_t sub_211965138@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211967D30();
  *a1 = result;
  return result;
}

uint64_t sub_211965164()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_211965198 + 4 * byte_211A48E07[*v0]))();
}

void sub_211965198(_QWORD *a1@<X8>)
{
  *a1 = 0x6E694D7472617473;
  a1[1] = 0xE800000000000000;
}

void sub_2119651B4(_QWORD *a1@<X8>)
{
  *a1 = 0x72756F48646E65;
  a1[1] = 0xE700000000000000;
}

void sub_2119651D0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E694D646E65;
  a1[1] = 0xE600000000000000;
}

void sub_2119651E8(_QWORD *a1@<X8>)
{
  *a1 = 0x6557664F73796164;
  a1[1] = 0xEA00000000006B65;
}

void sub_211965208(_QWORD *a1@<X8>)
{
  *a1 = 0x737961446E617073;
  a1[1] = 0xE800000000000000;
}

void sub_211965224(_QWORD *a1@<X8>)
{
  *a1 = 0x7A5465636E6566;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_211965240()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_211965274 + 4 * byte_211A48E0E[*v0]))(0x756F487472617473, 0xE900000000000072);
}

uint64_t sub_211965274()
{
  return 0x6E694D7472617473;
}

uint64_t sub_21196528C()
{
  return 0x72756F48646E65;
}

uint64_t sub_2119652A4()
{
  return 0x6E694D646E65;
}

uint64_t sub_2119652B8()
{
  return 0x6557664F73796164;
}

uint64_t sub_2119652D4()
{
  return 0x737961446E617073;
}

uint64_t sub_2119652EC()
{
  return 0x7A5465636E6566;
}

uint64_t sub_211965304@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211967D30();
  *a1 = result;
  return result;
}

void sub_211965328(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_211965334()
{
  sub_211965B4C();
  return sub_211A48390();
}

uint64_t sub_21196535C()
{
  sub_211965B4C();
  return sub_211A4839C();
}

uint64_t FMFSchedule.startHour.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FMFSchedule.startHour.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FMFSchedule.startHour.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.startMin.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FMFSchedule.startMin.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFSchedule.startMin.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.endHour.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FMFSchedule.endHour.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*FMFSchedule.endHour.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.endMin.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FMFSchedule.endMin.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*FMFSchedule.endMin.modify())()
{
  return nullsub_1;
}

void FMFSchedule.daysOfWeek.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

_QWORD *FMFSchedule.daysOfWeek.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = *result;
  return result;
}

uint64_t (*FMFSchedule.daysOfWeek.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.spanDays.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FMFSchedule.spanDays.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*FMFSchedule.spanDays.modify())()
{
  return nullsub_1;
}

uint64_t FMFSchedule.timeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMFSchedule() + 40);
  return sub_21196547C(v3, a1);
}

uint64_t sub_21196547C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC7C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMFSchedule.timeZone.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMFSchedule() + 40);
  return sub_2119654F4(a1, v3);
}

uint64_t sub_2119654F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC7C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FMFSchedule.timeZone.modify())(_QWORD, double)
{
  type metadata accessor for FMFSchedule();
  return nullsub_1;
}

uint64_t FMFSchedule.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v2 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + *(int *)(type metadata accessor for FMFSchedule() + 40);
  v7 = sub_211A47304();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = xmmword_211A49A60;
  if (qword_254AC7B10 != -1)
    swift_once();
  *(_QWORD *)(a1 + 32) = qword_254AC7B18;
  *(_QWORD *)(a1 + 40) = 0;
  sub_211A472F8();
  v8((uint64_t)v5, 0, 1, v7);
  return sub_2119654F4((uint64_t)v5, v6);
}

uint64_t FMFSchedule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(char *, uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  NSObject *v17;
  uint64_t v18;
  void (*v19)(NSObject *, uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  NSObject *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t *v44;
  _QWORD v45[2];
  uint64_t v46;
  void (**v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t *v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a2;
  v3 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (void (**)(char *, uint64_t))((char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_211958C38(&qword_254AC7C40);
  v8 = *(char **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFSchedule();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (_QWORD *)((char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = ((char *)v16 + *(int *)(v14 + 40));
  v18 = sub_211A47304();
  v19 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v50 = v17;
  v19(v17, 1, 1, v18);
  sub_211931DB4(a1, a1[3]);
  sub_211965B4C();
  v20 = v49;
  sub_211A48360();
  if (v20)
  {
    v24 = v50;
    sub_211931C34((uint64_t)a1);
    return sub_211923EE8((uint64_t)v24, &qword_254AC7C38);
  }
  else
  {
    v47 = v6;
    v49 = v16;
    LOBYTE(v52) = 0;
    v21 = sub_211A48168();
    v22 = v7;
    v23 = v11;
    v26 = v49;
    *v49 = v21;
    LOBYTE(v52) = 1;
    v27 = v8;
    v28 = (uint64_t)a1;
    v26[1] = sub_211A48168();
    LOBYTE(v52) = 2;
    v29 = v26;
    v26[2] = sub_211A48168();
    LOBYTE(v52) = 3;
    v30 = sub_211A48168();
    v31 = v50;
    v29[3] = v30;
    LOBYTE(v52) = 5;
    v29[5] = sub_211A48168();
    LOBYTE(v52) = 4;
    v29[4] = sub_211A48168();
    LOBYTE(v52) = 6;
    sub_211A48144();
    v32 = v23;
    v33 = (uint64_t)v47;
    sub_211A472C8();
    swift_bridgeObjectRelease();
    sub_2119654F4(v33, (uint64_t)v31);
    v34 = FMFSchedule.debugDescription.getter();
    v36 = v35;
    if (qword_254AC7B80 != -1)
      swift_once();
    v37 = sub_211A47748();
    sub_21194F3E0(v37, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v38 = sub_211A47724();
    v39 = sub_211A47D30();
    v50 = v38;
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v47 = (void (**)(char *, uint64_t))v27;
      v41 = (uint8_t *)v40;
      v42 = swift_slowAlloc();
      v52 = v42;
      v46 = v22;
      *(_DWORD *)v41 = 136315138;
      v45[1] = v41 + 4;
      swift_bridgeObjectRetain();
      v51 = sub_211950A9C(v34, v36, &v52);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      v43 = v50;
      _os_log_impl(&dword_21190D000, v50, v39, "FMFCore.FMFSchedule: initialized with coder %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v42, -1, -1);
      MEMORY[0x212BE48A0](v41, -1, -1);

      v47[1](v32, v46);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*((void (**)(char *, uint64_t))v27 + 1))(v32, v22);
    }
    v44 = v49;
    sub_211966630((uint64_t)v49, v48);
    sub_211931C34(v28);
    return sub_211966674((uint64_t)v44);
  }
}

unint64_t sub_211965B4C()
{
  unint64_t result;

  result = qword_254AC7C48;
  if (!qword_254AC7C48)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49380, &type metadata for FMFSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC7C48);
  }
  return result;
}

uint64_t FMFSchedule.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v1 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  v10 = *v0;
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v0[1];
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v0[2];
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v0[3];
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v6 = v11;
  v5 = v12;
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  v10 = v0[4];
  sub_211A48054();
  sub_211A479B8();
  v10 = v0[5];
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v7 = type metadata accessor for FMFSchedule();
  sub_21196547C((uint64_t)v0 + *(int *)(v7 + 40), (uint64_t)v4);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v11 = v6;
  v12 = v5;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t FMFSchedule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  id v18;
  uint64_t v19;

  v4 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFSchedule();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t)v13 + *(int *)(v11 + 40);
  v15 = sub_211A47304();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  if (a1)
  {
    result = (uint64_t)objc_msgSend(a1, sel_startHour);
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      *v13 = result;
      result = (uint64_t)objc_msgSend(a1, sel_startMin);
      if ((result & 0x8000000000000000) == 0)
      {
        v13[1] = result;
        result = (uint64_t)objc_msgSend(a1, sel_endHour);
        if ((result & 0x8000000000000000) == 0)
        {
          v13[2] = result;
          result = (uint64_t)objc_msgSend(a1, sel_endMin);
          if ((result & 0x8000000000000000) == 0)
          {
            v13[3] = result;
            v13[4] = (uint64_t)objc_msgSend(a1, sel_daysOfWeek);
            result = (uint64_t)objc_msgSend(a1, sel_spanDays);
            if ((result & 0x8000000000000000) == 0)
            {
              v13[5] = result;
              v18 = objc_msgSend(a1, sel_timeZone);
              sub_211A472EC();

              v16((uint64_t)v7, 0, 1, v15);
              sub_2119654F4((uint64_t)v7, v14);
              sub_211966630((uint64_t)v13, a2);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
              return sub_211966674((uint64_t)v13);
            }
            goto LABEL_14;
          }
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
          return result;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_211923EE8(v14, &qword_254AC7C38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
}

uint64_t sub_211966100()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  uint64_t v15;

  v1 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A47304();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FEC8]), sel_init);
  if ((*v0 & 0x8000000000000000) != 0
    || (v11 = v10, objc_msgSend(v10, sel_setStartHour_), (v0[1] & 0x8000000000000000) != 0)
    || (objc_msgSend(v11, sel_setStartMin_), (v0[2] & 0x8000000000000000) != 0)
    || (objc_msgSend(v11, sel_setEndHour_), (v0[3] & 0x8000000000000000) != 0)
    || (objc_msgSend(v11, sel_setEndMin_),
        objc_msgSend(v11, sel_setDaysOfWeek_, v0[4]),
        (v0[5] & 0x8000000000000000) != 0))
  {
    result = sub_211A48090();
    __break(1u);
  }
  else
  {
    objc_msgSend(v11, sel_setSpanDays_);
    v12 = type metadata accessor for FMFSchedule();
    sub_21196547C((uint64_t)v0 + *(int *)(v12 + 40), (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_211923EE8((uint64_t)v4, &qword_254AC7C38);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      v13 = (void *)sub_211A472E0();
      objc_msgSend(v11, sel_setTimeZone_, v13);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return (uint64_t)v11;
  }
  return result;
}

uint64_t FMFSchedule.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  char v22;

  v3 = v1;
  v5 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211958C38(&qword_254AC7C50);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211965B4C();
  sub_211A4836C();
  LOBYTE(v21[0]) = 0;
  sub_211A481D4();
  if (!v2)
  {
    LOBYTE(v21[0]) = 1;
    sub_211A481D4();
    LOBYTE(v21[0]) = 2;
    sub_211A481D4();
    LOBYTE(v21[0]) = 3;
    sub_211A481D4();
    LOBYTE(v21[0]) = 4;
    sub_211A481D4();
    LOBYTE(v21[0]) = 5;
    sub_211A481D4();
    v14 = type metadata accessor for FMFSchedule();
    sub_21196547C(v3 + *(int *)(v14 + 40), (uint64_t)v8);
    v15 = sub_211A47304();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
    {
      sub_211923EE8((uint64_t)v8, &qword_254AC7C38);
      v17 = 0;
      v18 = 0;
    }
    else
    {
      v17 = sub_211A472D4();
      v18 = v19;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    }
    v21[0] = v17;
    v21[1] = v18;
    v22 = 6;
    sub_211958C38(&qword_254AC7C58);
    sub_21192A2C0();
    sub_211A481E0();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_2119665EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFSchedule.init(from:)(a1, a2);
}

uint64_t sub_211966600(_QWORD *a1)
{
  return FMFSchedule.encode(to:)(a1);
}

uint64_t sub_21196661C()
{
  return swift_slowAlloc();
}

void sub_211966624()
{
  JUMPOUT(0x212BE48A0);
}

uint64_t sub_211966630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_211966674(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_DWORD *sub_2119666B0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_2119666C0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2119666CC(uint64_t a1, uint64_t a2)
{
  return sub_211966C9C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2119666E4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_211A478F8();
  *a2 = 0;
  return result;
}

uint64_t sub_211966758(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_211A47904();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2119667D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_211A47910();
  v2 = sub_211A478EC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_211966814(uint64_t a1, uint64_t a2)
{
  return sub_211966C9C(a1, a2, MEMORY[0x24BEE0CD8]);
}

id sub_211966824()
{
  id *v0;

  return *v0;
}

uint64_t sub_21196682C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_211966834()
{
  sub_211910908(&qword_254AC7E48, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A497E4);
  return sub_211A482D0();
}

uint64_t sub_211966874()
{
  sub_211910908(&qword_254AC7E48, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A497E4);
  return sub_211A482C4();
}

uint64_t sub_2119668B8()
{
  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  return sub_211A4707C();
}

uint64_t sub_2119668F8()
{
  return sub_211A47910();
}

uint64_t sub_211966908()
{
  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  return sub_211A470C4();
}

uint64_t sub_211966948()
{
  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  return sub_211A47094();
}

uint64_t sub_211966988(void *a1)
{
  id v2;

  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  v2 = a1;
  return sub_211A47088();
}

uint64_t sub_2119669EC()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_211A47DFC();

  return v2;
}

uint64_t sub_211966A20()
{
  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  return sub_211A470B8();
}

uint64_t sub_211966A70()
{
  sub_211A48318();
  sub_211A478B0();
  return sub_211A48348();
}

uint64_t sub_211966AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_211A47910();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_211966AF8()
{
  sub_211910908(&qword_254AC7EA0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A499E4);
  sub_211910908(&qword_254AC7EA8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A4953C);
  return sub_211A480E4();
}

uint64_t sub_211966B7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_211A478EC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_211966BC0()
{
  sub_211910908(&qword_254AC7E90, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_211A496B0);
  sub_211910908(&qword_254AC7E98, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_211A49650);
  return sub_211A480E4();
}

uint64_t sub_211966C44()
{
  sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
  return sub_211A470A0();
}

uint64_t sub_211966C9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_211A47910();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_211966CD8()
{
  sub_211A47910();
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211966D18(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_211966D28(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_211966D5C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_211950A9C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_211A47E2C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

_BYTE **sub_211966DCC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t _s7FMFCore11FMFScheduleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  char v77;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;

  v89 = sub_211A47304();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v4);
  v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v6, v7);
  v84 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_211958C38(&qword_254AC7DD8);
  MEMORY[0x24BDAC7A8](v86, v9);
  v88 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for FMFSchedule();
  v12 = MEMORY[0x24BDAC7A8](v85, v11);
  v94 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v95 = (char *)&v82 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v93 = (char *)&v82 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v92 = (char *)&v82 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v91 = (uint64_t)&v82 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v90 = (char *)&v82 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v32 = (char *)&v82 - v31;
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v36 = (char *)&v82 - v35;
  v38 = MEMORY[0x24BDAC7A8](v34, v37);
  v40 = (char *)&v82 - v39;
  v42 = MEMORY[0x24BDAC7A8](v38, v41);
  v44 = (char *)&v82 - v43;
  v46 = MEMORY[0x24BDAC7A8](v42, v45);
  v48 = (char *)&v82 - v47;
  MEMORY[0x24BDAC7A8](v46, v49);
  v51 = (char *)&v82 - v50;
  v52 = *a1;
  v53 = *a2;
  sub_211966630((uint64_t)a1, (uint64_t)&v82 - v50);
  sub_211966630((uint64_t)a2, (uint64_t)v48);
  if (v52 != v53)
  {
    sub_211966674((uint64_t)v48);
    sub_211966674((uint64_t)v51);
    sub_211966630((uint64_t)a1, (uint64_t)v44);
    sub_211966630((uint64_t)a2, (uint64_t)v40);
    goto LABEL_11;
  }
  v54 = *((_QWORD *)v51 + 1);
  sub_211966674((uint64_t)v51);
  v55 = *((_QWORD *)v48 + 1);
  sub_211966674((uint64_t)v48);
  sub_211966630((uint64_t)a1, (uint64_t)v44);
  sub_211966630((uint64_t)a2, (uint64_t)v40);
  if (v54 != v55)
  {
LABEL_11:
    sub_211966674((uint64_t)v40);
    sub_211966674((uint64_t)v44);
    sub_211966630((uint64_t)a1, (uint64_t)v36);
    sub_211966630((uint64_t)a2, (uint64_t)v32);
    v58 = (uint64_t)v92;
    v59 = (uint64_t)v90;
    goto LABEL_12;
  }
  v56 = *((_QWORD *)v44 + 2);
  sub_211966674((uint64_t)v44);
  v57 = *((_QWORD *)v40 + 2);
  sub_211966674((uint64_t)v40);
  sub_211966630((uint64_t)a1, (uint64_t)v36);
  sub_211966630((uint64_t)a2, (uint64_t)v32);
  v58 = (uint64_t)v92;
  v59 = (uint64_t)v90;
  if (v56 != v57)
  {
LABEL_12:
    sub_211966674((uint64_t)v32);
    sub_211966674((uint64_t)v36);
    sub_211966630((uint64_t)a1, v59);
    v62 = v91;
    sub_211966630((uint64_t)a2, v91);
    v63 = (uint64_t)v93;
    goto LABEL_13;
  }
  v60 = *((_QWORD *)v36 + 3);
  sub_211966674((uint64_t)v36);
  v61 = *((_QWORD *)v32 + 3);
  sub_211966674((uint64_t)v32);
  sub_211966630((uint64_t)a1, v59);
  v62 = v91;
  sub_211966630((uint64_t)a2, v91);
  v63 = (uint64_t)v93;
  if (v60 != v61)
  {
LABEL_13:
    sub_211966674(v62);
    sub_211966674(v59);
    sub_211966630((uint64_t)a1, v58);
    sub_211966630((uint64_t)a2, v63);
    v67 = (uint64_t)v94;
    v66 = (uint64_t)v95;
    goto LABEL_14;
  }
  v64 = *(_QWORD *)(v59 + 32);
  v65 = *(_QWORD *)(v62 + 32);
  sub_211966674(v62);
  sub_211966674(v59);
  sub_211966630((uint64_t)a1, v58);
  sub_211966630((uint64_t)a2, v63);
  v67 = (uint64_t)v94;
  v66 = (uint64_t)v95;
  if (v64 != v65)
  {
LABEL_14:
    sub_211966674(v63);
    sub_211966674(v58);
    sub_211966630((uint64_t)a1, v66);
    sub_211966630((uint64_t)a2, v67);
    goto LABEL_15;
  }
  v68 = *(_QWORD *)(v58 + 40);
  sub_211966674(v58);
  v69 = *(_QWORD *)(v63 + 40);
  sub_211966674(v63);
  sub_211966630((uint64_t)a1, v66);
  sub_211966630((uint64_t)a2, v67);
  if (v68 != v69)
  {
LABEL_15:
    sub_211966674(v67);
    sub_211966674(v66);
LABEL_16:
    v77 = 0;
    return v77 & 1;
  }
  v70 = *(int *)(v85 + 40);
  v71 = v67 + v70;
  v72 = v88;
  v73 = v88 + *(int *)(v86 + 48);
  sub_21196547C(v66 + v70, v88);
  sub_21196547C(v71, v73);
  v74 = v87;
  v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  v76 = v89;
  if (v75(v72, 1, v89) != 1)
  {
    v79 = v84;
    sub_21196547C(v72, v84);
    if (v75(v73, 1, v76) != 1)
    {
      v80 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v83, v73, v76);
      sub_211910908(&qword_254AC7DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF538]);
      v77 = sub_211A478E0();
      v81 = *(void (**)(char *, uint64_t))(v74 + 8);
      v81(v80, v76);
      sub_211966674(v67);
      sub_211966674(v66);
      v81((char *)v79, v76);
      sub_211923EE8(v72, &qword_254AC7C38);
      return v77 & 1;
    }
    sub_211966674(v67);
    sub_211966674(v66);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v79, v76);
    goto LABEL_20;
  }
  sub_211966674(v67);
  sub_211966674(v66);
  if (v75(v73, 1, v76) != 1)
  {
LABEL_20:
    sub_211923EE8(v72, &qword_254AC7DD8);
    goto LABEL_16;
  }
  sub_211923EE8(v72, &qword_254AC7C38);
  v77 = 1;
  return v77 & 1;
}

unint64_t sub_211967434()
{
  unint64_t result;

  result = qword_254AC7CC8;
  if (!qword_254AC7CC8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFSchedule.DaysOfWeek, &type metadata for FMFSchedule.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_254AC7CC8);
  }
  return result;
}

unint64_t sub_21196747C()
{
  unint64_t result;

  result = qword_254AC7CD0;
  if (!qword_254AC7CD0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFSchedule.DaysOfWeek, &type metadata for FMFSchedule.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_254AC7CD0);
  }
  return result;
}

unint64_t sub_2119674C4()
{
  unint64_t result;

  result = qword_254AC7CD8;
  if (!qword_254AC7CD8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFSchedule.DaysOfWeek, &type metadata for FMFSchedule.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_254AC7CD8);
  }
  return result;
}

unint64_t sub_21196750C()
{
  unint64_t result;

  result = qword_254AC7CE0;
  if (!qword_254AC7CE0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFSchedule.DaysOfWeek, &type metadata for FMFSchedule.DaysOfWeek);
    atomic_store(result, (unint64_t *)&qword_254AC7CE0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMFSchedule(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    a1[2] = *((_OWORD *)a2 + 2);
    v6 = *(int *)(a3 + 40);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_211A47304();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = sub_211958C38(&qword_254AC7C38);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for FMFSchedule(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_211A47304();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_OWORD *initializeWithCopy for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 40);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_211A47304();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_211958C38(&qword_254AC7C38);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for FMFSchedule(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v4 = *(int *)(a3 + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_211A47304();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = sub_211958C38(&qword_254AC7C38);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *initializeWithTake for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 40);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_211A47304();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_211958C38(&qword_254AC7C38);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_OWORD *assignWithTake for FMFSchedule(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 40);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_211A47304();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = sub_211958C38(&qword_254AC7C38);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFSchedule()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_211967A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 40);
  v5 = sub_211958C38(&qword_254AC7C38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for FMFSchedule()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211967AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 40);
  v6 = sub_211958C38(&qword_254AC7C38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

ValueMetadata *type metadata accessor for FMFSchedule.DaysOfWeek()
{
  return &type metadata for FMFSchedule.DaysOfWeek;
}

void type metadata accessor for SecureLocationsStewiePublishReason(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7D98);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DA0);
}

void type metadata accessor for SPMotionActivityState(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DA8);
}

void type metadata accessor for SPSecureLocationPublishReason(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DB0);
}

void type metadata accessor for CLClientLocationReferenceFrame(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DB8);
}

uint64_t storeEnumTagSinglePayload for FMFSchedule.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_211967BD8 + 4 * byte_211A48E1A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_211967C0C + 4 * byte_211A48E15[v4]))();
}

uint64_t sub_211967C0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211967C14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211967C1CLL);
  return result;
}

uint64_t sub_211967C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211967C30);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_211967C34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211967C3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFSchedule.CodingKeys()
{
  return &type metadata for FMFSchedule.CodingKeys;
}

unint64_t sub_211967C5C()
{
  unint64_t result;

  result = qword_254AC7DC0;
  if (!qword_254AC7DC0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49248, &type metadata for FMFSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC7DC0);
  }
  return result;
}

unint64_t sub_211967CA4()
{
  unint64_t result;

  result = qword_254AC7DC8;
  if (!qword_254AC7DC8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49180, &type metadata for FMFSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC7DC8);
  }
  return result;
}

unint64_t sub_211967CEC()
{
  unint64_t result;

  result = qword_254AC7DD0;
  if (!qword_254AC7DD0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A491A8, &type metadata for FMFSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC7DD0);
  }
  return result;
}

uint64_t sub_211967D30()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

void type metadata accessor for SecureLocationsStewieServiceState(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DF0);
}

void type metadata accessor for SecureLocationsStewieError(uint64_t a1)
{
  sub_21193B93C(a1, &qword_254AC7DF8);
}

uint64_t sub_211967DA0()
{
  return sub_211910908(&qword_254AC7E10, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A49500);
}

uint64_t sub_211967DCC()
{
  return sub_211910908(&qword_254AC7E18, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A494D4);
}

uint64_t sub_211967DF8()
{
  return sub_211910908(&qword_254AC7E20, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_211A49614);
}

uint64_t sub_211967E24()
{
  return sub_211910908(&qword_254AC7E28, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_211A495E8);
}

uint64_t sub_211967E50()
{
  return sub_211910908(&qword_254AC7E30, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_211A49684);
}

uint64_t sub_211967E7C()
{
  return sub_211910908(&qword_254AC7E38, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A49740);
}

uint64_t sub_211967EA8()
{
  return sub_211910908(&qword_254AC7E40, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A49890);
}

uint64_t sub_211967ED4()
{
  return sub_211910908(&qword_254AC7E48, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A497E4);
}

uint64_t sub_211967F00()
{
  return sub_211910908(&qword_254AC7E50, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A497B0);
}

uint64_t sub_211967F2C()
{
  return sub_211910908(&qword_254AC7E58, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A4976C);
}

uint64_t sub_211967F58()
{
  return sub_211910908(&qword_254AC7E60, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_211A4997C);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_21193B93C(a1, (unint64_t *)&unk_254AC7EB0);
}

uint64_t sub_211967F98()
{
  return sub_211910908(&qword_254AC7E68, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_211A49940);
}

unint64_t sub_211967FC8()
{
  unint64_t result;

  result = qword_254AC7E70;
  if (!qword_254AC7E70)
  {
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254AC7E70);
  }
  return result;
}

uint64_t sub_21196800C()
{
  return sub_211910908(&qword_254AC7E78, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_211A499B8);
}

uint64_t sub_211968038()
{
  return sub_211910908(&qword_254AC7E80, (uint64_t (*)(uint64_t))type metadata accessor for SecureLocationsStewieError, (uint64_t)&unk_211A498D4);
}

uint64_t sub_211968084()
{
  qword_254AC8040 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");
  return swift_unknownObjectRetain();
}

uint64_t sub_2119680AC()
{
  qword_254AC8048 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t static FMOSActivity.current.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21196817C(&qword_254AC7B28, &qword_254AC8048, a1);
}

const char *FMOSActivity.init(_:parent:options:)@<X0>(const char *description@<X0>, char a2@<W2>, os_activity_t *a3@<X3>, os_activity_flag_t *a4@<X4>, os_activity_t *a5@<X8>)
{
  os_activity_t v6;

  if ((a2 & 1) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!description)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*a3)
  {
    v6 = _os_activity_create(&dword_21190D000, description, *a3, *a4);
    description = (const char *)swift_unknownObjectRelease();
    *a5 = v6;
    return description;
  }
LABEL_7:
  __break(1u);
  return description;
}

uint64_t FMOSActivity.Options.flags.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t static FMOSActivity.none.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_21196817C(&qword_254AC7B20, &qword_254AC8040, a1);
}

uint64_t sub_21196817C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_unknownObjectRetain();
}

uint64_t FMOSActivity.apply(execute:)(const void *a1)
{
  NSObject **v1;
  uint64_t result;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  result = (uint64_t)_Block_copy(a1);
  v3 = *v1;
  if (v3)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_21196830C;
    *(_QWORD *)(v6 + 24) = v5;
    v9[4] = sub_211921388;
    v9[5] = v6;
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 1107296256;
    v9[2] = sub_211921368;
    v9[3] = &unk_24CCC6050;
    v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v3, v7);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2119682E8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_21196830C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_211968318()
{
  return swift_deallocObject();
}

const void *static FMOSActivity.start(_:execute:)(const char *a1, int a2, char a3, void *aBlock)
{
  const void *result;
  const void *v7;
  NSObject *v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  result = _Block_copy(aBlock);
  v7 = result;
  if (qword_254AC7B28 == -1)
  {
    if ((a3 & 1) == 0)
      goto LABEL_3;
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = (const void *)swift_once();
  if ((a3 & 1) != 0)
    goto LABEL_7;
LABEL_3:
  if (!a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = qword_254AC8048;
  swift_unknownObjectRetain();
  v9 = _os_activity_create(&dword_21190D000, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
  swift_unknownObjectRelease();
  v10 = _Block_copy(v7);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_211968948;
  *(_QWORD *)(v12 + 24) = v11;
  v14[4] = sub_21196894C;
  v14[5] = v12;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_211921368;
  v14[3] = &unk_24CCC60C8;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  os_activity_apply(v9, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v7);
  result = (const void *)swift_unknownObjectRelease();
  if ((v13 & 1) != 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t FMOSActivity.Options.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FMOSActivity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static FMOSActivity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static FMOSActivity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMOSActivity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

_DWORD *sub_21196850C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_211968518(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_211968520()
{
  return swift_deallocObject();
}

unint64_t sub_211968534()
{
  unint64_t result;

  result = qword_254AC8050;
  if (!qword_254AC8050)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMOSActivity.Options, &type metadata for FMOSActivity.Options);
    atomic_store(result, (unint64_t *)&qword_254AC8050);
  }
  return result;
}

unint64_t sub_21196857C()
{
  unint64_t result;

  result = qword_254AC8058;
  if (!qword_254AC8058)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMOSActivity.Options, &type metadata for FMOSActivity.Options);
    atomic_store(result, (unint64_t *)&qword_254AC8058);
  }
  return result;
}

unint64_t sub_2119685C4()
{
  unint64_t result;

  result = qword_254AC8060;
  if (!qword_254AC8060)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMOSActivity.Options, &type metadata for FMOSActivity.Options);
    atomic_store(result, (unint64_t *)&qword_254AC8060);
  }
  return result;
}

unint64_t sub_21196860C()
{
  unint64_t result;

  result = qword_254AC8068;
  if (!qword_254AC8068)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMOSActivity.Options, &type metadata for FMOSActivity.Options);
    atomic_store(result, (unint64_t *)&qword_254AC8068);
  }
  return result;
}

_DWORD *sub_211968650@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_211968664@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_211968678@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_21196868C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_2119686BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_2119686E8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_21196870C(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_211968720(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_211968734(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_211968748@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_21196875C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_211968770(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_211968784(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_211968798()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_2119687A8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

BOOL sub_2119687BC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMOSActivity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for FMOSActivity()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for FMOSActivity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for FMOSActivity(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for FMOSActivity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMOSActivity(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMOSActivity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMOSActivity()
{
  return &type metadata for FMOSActivity;
}

ValueMetadata *type metadata accessor for FMOSActivity.Options()
{
  return &type metadata for FMOSActivity.Options;
}

uint64_t type metadata accessor for FMFSaveFavoritesRequest()
{
  uint64_t result;

  result = qword_254AC80D0;
  if (!qword_254AC80D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119689A0()
{
  return swift_initClassMetadata2();
}

unint64_t sub_2119689EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _OWORD v41[2];

  v1 = *(_QWORD *)(v0 + qword_254ADC570);
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v37 = (unint64_t)(v2 + 63) >> 6;
  v38 = *(_QWORD *)(v0 + qword_254ADC570);
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v8 | (v6 << 6); ; i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * i);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * i);
    sub_211958C38(&qword_254AC8120);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_211A49C40;
    *(_QWORD *)(inited + 32) = 25705;
    v18 = inited + 32;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 40) = 0xE200000000000000;
    *(_QWORD *)(inited + 48) = v15;
    *(_QWORD *)(inited + 56) = v14;
    *(_QWORD *)(inited + 80) = 0x726564726FLL;
    v19 = inited + 80;
    *(_QWORD *)(inited + 120) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 88) = 0xE500000000000000;
    *(_QWORD *)(inited + 96) = v16;
    sub_211958C38(&qword_254AC8128);
    v20 = (_QWORD *)sub_211A480CC();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_211968EE4(v18, (uint64_t)&v39);
    v22 = (uint64_t)v39;
    v21 = v40;
    result = sub_21195BB68((uint64_t)v39, v40);
    if ((v23 & 1) != 0)
      goto LABEL_30;
    *(_QWORD *)((char *)v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v24 = (uint64_t *)(v20[6] + 16 * result);
    *v24 = v22;
    v24[1] = v21;
    result = (unint64_t)sub_21193DB98(v41, (_OWORD *)(v20[7] + 32 * result));
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_31;
    v20[2] = v27;
    sub_211968EE4(v19, (uint64_t)&v39);
    v28 = (uint64_t)v39;
    v29 = v40;
    result = sub_21195BB68((uint64_t)v39, v40);
    if ((v30 & 1) != 0)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    *(_QWORD *)((char *)v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v31 = (uint64_t *)(v20[6] + 16 * result);
    *v31 = v28;
    v31[1] = v29;
    result = (unint64_t)sub_21193DB98(v41, (_OWORD *)(v20[7] + 32 * result));
    v32 = v20[2];
    v26 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v26)
      goto LABEL_31;
    v20[2] = v33;
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (unint64_t)sub_2119B02C8(0, v7[2] + 1, 1, v7);
      v7 = (_QWORD *)result;
    }
    v35 = v7[2];
    v34 = v7[3];
    if (v35 >= v34 >> 1)
    {
      result = (unint64_t)sub_2119B02C8((_QWORD *)(v34 > 1), v35 + 1, 1, v7);
      v7 = (_QWORD *)result;
    }
    v7[2] = v35 + 1;
    v7[v35 + 4] = v20;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_32;
    if (v10 >= v37)
      goto LABEL_29;
    v11 = *(_QWORD *)(v36 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v37)
        goto LABEL_29;
      v11 = *(_QWORD *)(v36 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v37)
          goto LABEL_29;
        v11 = *(_QWORD *)(v36 + 8 * v6);
        if (!v11)
          break;
      }
    }
LABEL_18:
    v4 = (v11 - 1) & v11;
  }
  v12 = v10 + 3;
  if (v12 >= v37)
  {
LABEL_29:
    swift_release();
    *((_QWORD *)&v41[0] + 1) = sub_211958C38(&qword_254AC8138);
    v39 = v7;
    swift_beginAccess();
    sub_21193C870((uint64_t)&v39, 0x657469726F766166, 0xE900000000000073);
    return swift_endAccess();
  }
  v11 = *(_QWORD *)(v36 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v37)
      goto LABEL_29;
    v11 = *(_QWORD *)(v36 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_211968DE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_211968DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_211968EBC()
{
  sub_211968DF8();
  return swift_deallocClassInstance();
}

uint64_t sub_211968EDC()
{
  return type metadata accessor for FMFSaveFavoritesRequest();
}

uint64_t sub_211968EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC8130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_211968F2C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_211968FA0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v9[4] = sub_211969C0C;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_21196906C;
  v9[3] = &unk_24CCC6368;
  v7 = _Block_copy(v9);
  swift_retain();
  v8 = a3;
  swift_release();
  objc_msgSend(a1, sel_currentStewieStateWithCompletion_, v7);
  _Block_release(v7);
}

void sub_21196906C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t FMNetworkUtil.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FMNetworkUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMNetworkUtil()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMNetworkUtil()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_211969110()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v0 = (void *)sub_211A478EC();
  sub_211920E14();
  v1 = (void *)sub_211A47D9C();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_211968F2C;
  aBlock[3] = &unk_24CCC6390;
  v2 = _Block_copy(aBlock);
  v3 = _CTServerConnectionCreateOnTargetQueue();
  _Block_release(v2);

  if (v3)
  {
    v4 = (void *)sub_211A478EC();
    _CTServerConnectionCopyCellularUsagePolicy();

    _CTServerConnectionGetCellularDataIsEnabled();
    if (qword_254AC7B80 != -1)
      swift_once();
    v5 = sub_211A47748();
    sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
    v6 = sub_211A47724();
    v7 = sub_211A47D30();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 67109120;
      swift_beginAccess();
      LODWORD(aBlock[0]) = 0;
      sub_211A47E2C();
      _os_log_impl(&dword_21190D000, v6, v7, "FMNetworkUtil: Global cellular enabled? %{BOOL}d", v8, 8u);
      MEMORY[0x212BE48A0](v8, -1, -1);
    }

  }
  return 0;
}

uint64_t sub_2119694DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  NSObject *v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t aBlock[3];
  void *v62;
  uint64_t v63;
  _QWORD *v64;

  v55 = a1;
  v1 = sub_211A477F0();
  v2 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x24BDAC7A8](v1, v3);
  v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v51 - v7;
  v9 = sub_211A4779C();
  v58 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_211A477A8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211A46F08();
  v62 = (void *)v22;
  v63 = sub_211910908((unint64_t *)&qword_254AC81D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE319D0], MEMORY[0x24BE319B8]);
  v23 = sub_211969B08(aBlock);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v23, *MEMORY[0x24BE319C0], v22);
  LOBYTE(v22) = MEMORY[0x212BE2D10](aBlock);
  sub_211931C34((uint64_t)aBlock);
  if ((v22 & 1) != 0)
  {
    v24 = swift_allocObject();
    v54 = v2;
    v25 = v24;
    *(_QWORD *)(v24 + 16) = 0;
    v51 = (_QWORD *)(v24 + 16);
    v26 = dispatch_group_create();
    v53 = v8;
    v27 = v26;
    dispatch_group_enter(v26);
    sub_211920E14();
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v21, *MEMORY[0x24BEE5490], v17);
    v28 = sub_211A47DCC();
    v52 = v1;
    v29 = (void *)v28;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    v30 = (_QWORD *)swift_allocObject();
    v31 = v55;
    v30[2] = v55;
    v30[3] = v25;
    v30[4] = v27;
    v63 = (uint64_t)sub_211969B88;
    v64 = v30;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    v62 = &unk_24CCC6318;
    v32 = _Block_copy(aBlock);
    v33 = v31;
    swift_retain();
    v34 = v27;
    sub_211A477B4();
    v60 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_211969B94();
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v16, v12, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v57);
    swift_release();
    v35 = v59;
    sub_211A477E4();
    v36 = v53;
    MEMORY[0x212BE361C](v35, 60.0);
    v37 = *(void (**)(char *, uint64_t))(v54 + 8);
    v38 = v52;
    v37(v35, v52);
    sub_211A47D3C();
    v37(v36, v38);
    if ((sub_211A47784() & 1) != 0)
    {
      if (qword_254AC7B80 != -1)
        swift_once();
      v39 = sub_211A47748();
      sub_21194F3E0(v39, (uint64_t)qword_254ADC7E8);
      v40 = sub_211A47724();
      v41 = sub_211A47D30();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_21190D000, v40, v41, "FMNetworkUtil: Stewie state is unavailable (timed out after 60 secs)", v42, 2u);
        MEMORY[0x212BE48A0](v42, -1, -1);
        swift_release();

        v43 = 0;
LABEL_18:

        return v43;
      }
      swift_release();

      v43 = 0;
    }
    else
    {
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FE38]), sel_init);
      v45 = objc_msgSend(v44, sel_isNetworkUp);

      v46 = v51;
      swift_beginAccess();
      if (*v46 == 7)
        v43 = 0;
      else
        v43 = v45 ^ 1;
      if (qword_254AC7B80 != -1)
        swift_once();
      v47 = sub_211A47748();
      sub_21194F3E0(v47, (uint64_t)qword_254ADC7E8);
      swift_retain();
      v40 = sub_211A47724();
      v48 = sub_211A47D30();
      if (os_log_type_enabled(v40, v48))
      {
        v49 = swift_slowAlloc();
        *(_DWORD *)v49 = 134218240;
        v60 = *(_QWORD *)(v25 + 16);
        sub_211A47E2C();
        swift_release();
        *(_WORD *)(v49 + 12) = 1024;
        LODWORD(v60) = v43;
        sub_211A47E2C();
        _os_log_impl(&dword_21190D000, v40, v48, "FMNetworkUtil: Stewie state is %ld (available=%{BOOL}d)", (uint8_t *)v49, 0x12u);
        MEMORY[0x212BE48A0](v49, -1, -1);
        swift_release();

        goto LABEL_18;
      }

      swift_release_n();
    }
    v40 = v34;
    goto LABEL_18;
  }
  return 0;
}

uint64_t *sub_211969B08(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_211969B44()
{
  return swift_deallocObject();
}

uint64_t sub_211969B54()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_211969B88()
{
  uint64_t v0;

  sub_211968FA0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_211969B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254ACC350;
  if (!qword_254ACC350)
  {
    v1 = sub_21195E2C0((uint64_t *)&unk_254ACC1D0);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254ACC350);
  }
  return result;
}

uint64_t sub_211969BE0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_211969C0C(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(NSObject **)(v1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = a1;
  dispatch_group_leave(v3);
}

uint64_t sub_211969C6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_211969C9C + 4 * byte_211A49CD0[a1]))(0x736C6562616CLL, 0xE600000000000000);
}

unint64_t sub_211969C9C()
{
  return 0xD000000000000011;
}

uint64_t sub_211969E48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_211969C6C(*a1);
  v5 = v4;
  if (v3 == sub_211969C6C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211969ED0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211969C6C(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211969F30()
{
  unsigned __int8 *v0;

  sub_211969C6C(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211969F70()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211969C6C(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211969FCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21196A4E0();
  *a1 = result;
  return result;
}

uint64_t sub_211969FF8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_211969C6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21196A020@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21196A4E0();
  *a1 = result;
  return result;
}

void sub_21196A044(_BYTE *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_21196A050()
{
  sub_211930118();
  return sub_211A4839C();
}

uint64_t sub_21196A078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t *a10, __int128 *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v46[248];

  v27 = *((_QWORD *)a9 + 2);
  v28 = *((_QWORD *)a9 + 3);
  v29 = *a10;
  v30 = *((_BYTE *)a10 + 8);
  v39 = a11[1];
  v40 = *a11;
  v37 = *a9;
  v38 = a11[2];
  v31 = *((_QWORD *)a11 + 6);
  v32 = *((_BYTE *)a11 + 56);
  sub_21192DD68(a12, (uint64_t)v46, (uint64_t *)&unk_254ACC2F0);
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labels) = a6;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_labelledLocations) = a7;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_devices) = a8;
  v33 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences;
  *(_OWORD *)v33 = v37;
  *(_QWORD *)(v33 + 16) = v27;
  *(_QWORD *)(v33 + 24) = v28;
  v34 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_features;
  *(_QWORD *)v34 = v29;
  *(_BYTE *)(v34 + 8) = v30;
  v35 = v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo;
  *(_OWORD *)v35 = v40;
  *(_OWORD *)(v35 + 16) = v39;
  *(_OWORD *)(v35 + 32) = v38;
  *(_QWORD *)(v35 + 48) = v31;
  *(_BYTE *)(v35 + 56) = v32;
  sub_21192DD68((uint64_t)v46, v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_config, (uint64_t *)&unk_254ACC2F0);
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locations) = a13;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locatesInProgress) = a14;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_following) = a15;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_followers) = a16;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowing) = a17;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_futureFollowers) = a18;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_pendingOffers) = a19;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByMe) = a20;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnMeByFriends) = a21;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByMe) = a22;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_locationAlertsOnFriendsByFriends) = a23;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  sub_21192DD68(a3, v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse, &qword_254AC8360);
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_alert) = a4;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_fetchStatus) = a5;
  return v23;
}

uint64_t sub_21196A304()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21195A23C(*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences), *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_preferences + 16));
  sub_211933F60(*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore28FMFInitRefreshClientResponse_myInfo));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21196A42C()
{
  return type metadata accessor for FMFInitRefreshClientResponse();
}

uint64_t sub_21196A434(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 48);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

double sub_21196A450(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_QWORD *)(a1 + 232) = 0;
  return result;
}

unint64_t sub_21196A49C()
{
  unint64_t result;

  result = qword_254AC8438;
  if (!qword_254AC8438)
  {
    result = MEMORY[0x212BE47C8](&unk_211A49EB0, &type metadata for FMFInitRefreshClientResponse.InitRefreshCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8438);
  }
  return result;
}

uint64_t sub_21196A4E0()
{
  unint64_t v0;

  v0 = sub_211A4827C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

uint64_t sub_21196A534(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFLocateInProgress(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FMFLocateInProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFLocateInProgress(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLocateInProgress(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_21196A680(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21195A270(*a1, *a2);
}

uint64_t sub_21196A68C()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21196A73C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21196A7C8()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21196A874@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21196AF00();
  *a1 = result;
  return result;
}

void sub_21196A8A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEF676E697461636FLL;
  v5 = 0x4C676E69646E6570;
  if (v2 != 1)
  {
    v5 = 0x6F4C646573756170;
    v4 = 0xEE00676E69746163;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21196A910(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_211974854(*a1, *a2);
}

uint64_t sub_21196A91C()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21196A98C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21196A9D8()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21196AA44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_21196AAA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x737574617473;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_21196AAD0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_21196AB30(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21196AB3C()
{
  sub_21196B114();
  return sub_211A48390();
}

uint64_t sub_21196AB64()
{
  sub_21196B114();
  return sub_211A4839C();
}

uint64_t sub_21196AB8C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v13 = a4;
  v6 = sub_211958C38(&qword_254AC8460);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21196B114();
  sub_211A4836C();
  v15 = 0;
  sub_211A481B0();
  if (v4)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v14 = 1;
  sub_211A481B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21196AD34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_21196AF48(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21196AD60(_QWORD *a1)
{
  uint64_t v1;

  return sub_21196AB8C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_21196AD7C(uint64_t a1, uint64_t a2)
{
  return sub_21196AD98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_21196AD98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;

  if (a1 == a4 && a2 == a5 || (v8 = 0, (sub_211A48258() & 1) != 0))
  {
    if (a3)
    {
      if (a3 == 1)
        v9 = 0x4C676E69646E6570;
      else
        v9 = 0x6F4C646573756170;
      if (a3 == 1)
        v10 = 0xEF676E697461636FLL;
      else
        v10 = 0xEE00676E69746163;
      v11 = a6;
      if (a6)
      {
LABEL_12:
        if (v11 == 1)
          v12 = 0x4C676E69646E6570;
        else
          v12 = 0x6F4C646573756170;
        if (v11 == 1)
          v13 = 0xEF676E697461636FLL;
        else
          v13 = 0xEE00676E69746163;
        if (v9 != v12)
          goto LABEL_24;
LABEL_22:
        if (v10 == v13)
        {
          v8 = 1;
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8 & 1;
        }
LABEL_24:
        v8 = sub_211A48258();
        goto LABEL_25;
      }
    }
    else
    {
      v10 = 0xE400000000000000;
      v9 = 1701736302;
      v11 = a6;
      if (a6)
        goto LABEL_12;
    }
    v13 = 0xE400000000000000;
    if (v9 != 1701736302)
      goto LABEL_24;
    goto LABEL_22;
  }
  return v8 & 1;
}

uint64_t sub_21196AF00()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21196AF48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v3 = sub_211958C38(&qword_254AC8450);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[4];
  sub_211931DB4(a1, a1[3]);
  sub_21196B114();
  sub_211A48360();
  if (v1)
  {
    sub_211931C34((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_211A48144();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_211A48144();
    sub_211A480F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_211931C34((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_21196B114()
{
  unint64_t result;

  result = qword_254AC8458;
  if (!qword_254AC8458)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A1B8, &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8458);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFSecureOrLiveLocateInProgress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21196B1A4 + 4 * byte_211A49F35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21196B1D8 + 4 * byte_211A49F30[v4]))();
}

uint64_t sub_21196B1D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196B1E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21196B1E8);
  return result;
}

uint64_t sub_21196B1F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21196B1FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21196B200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196B208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21196B214(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FMFSecureOrLiveLocateInProgress.CodingKeys()
{
  return &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMFSecureOrLiveLocateInProgressStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21196B27C + 4 * byte_211A49F3F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21196B2B0 + 4 * byte_211A49F3A[v4]))();
}

uint64_t sub_21196B2B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196B2B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21196B2C0);
  return result;
}

uint64_t sub_21196B2CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21196B2D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21196B2D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21196B2E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_21196B2F0()
{
  unint64_t result;

  result = qword_254AC8468;
  if (!qword_254AC8468)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A0A0, &type metadata for FMFSecureOrLiveLocateInProgressStatus);
    atomic_store(result, (unint64_t *)&qword_254AC8468);
  }
  return result;
}

unint64_t sub_21196B338()
{
  unint64_t result;

  result = qword_254AC8470;
  if (!qword_254AC8470)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A190, &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8470);
  }
  return result;
}

unint64_t sub_21196B380()
{
  unint64_t result;

  result = qword_254AC8478;
  if (!qword_254AC8478)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A0C8, &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8478);
  }
  return result;
}

unint64_t sub_21196B3C8()
{
  unint64_t result;

  result = qword_254AC8480;
  if (!qword_254AC8480)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A0F0, &type metadata for FMFSecureOrLiveLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8480);
  }
  return result;
}

uint64_t sub_21196B40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21196B414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21196B41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v1 + 16);
    v7 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, &v22);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFRefreshController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v21, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_211962AB8(v1 + 32);
  sub_21193CB88(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_selectedFriend);
  sub_211931C34(v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_interactionController);

  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v18 = v1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_lastRefreshTime;
  v19 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);

  return v1;
}

uint64_t sub_21196B6E8()
{
  sub_21196B41C();
  return swift_deallocClassInstance();
}

uint64_t sub_21196B70C()
{
  return type metadata accessor for FMFRefreshController();
}

uint64_t sub_21196B714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v17[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A477D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21190D000, v12, v13, "FMFRefreshController: Stop refreshing.", v14, 2u);
    MEMORY[0x212BE48A0](v14, -1, -1);
  }

  aBlock[4] = sub_21196DB28;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC6AE0;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v10, v5, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

id sub_21196B994(uint64_t a1)
{
  *(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_isRefreshing) = 0;
  sub_211917850();
  sub_2119FE5C4();
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshTimer), sel_invalidate);
}

uint64_t sub_21196B9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v3;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = sub_21196DB1C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC6AB8;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

void sub_21196BBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_211A477FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v26 = a3;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v25 = a2;
    v17 = v16;
    v28 = v16;
    *(_DWORD *)v15 = 136315138;
    v27 = sub_211950A9C(0xD000000000000014, 0x8000000211A53D50, &v28);
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v12, v13, "FMFRefreshController: refreshTimerFired from %s", v15, 0xCu);
    swift_arrayDestroy();
    v18 = v17;
    a2 = v25;
    MEMORY[0x212BE48A0](v18, -1, -1);
    v19 = v15;
    a3 = v26;
    MEMORY[0x212BE48A0](v19, -1, -1);
  }

  v20 = *(void **)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  *v10 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6);
  v21 = v20;
  LOBYTE(v20) = sub_211A47814();
  v22 = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v20 & 1) != 0)
  {
    v23 = (void *)MEMORY[0x212BE42D0](v22);
    sub_21191A348(a1, a2, a3);
    objc_autoreleasePoolPop(v23);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21196BE2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_211A4779C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v4 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v4;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  *(_BYTE *)(v18 + 40) = a3;
  aBlock[4] = sub_21196DA34;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC6978;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v23 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v9, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

void sub_21196C03C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_liveSessionStatistics);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v7;
  *v7 = 0x8000000000000000;
  sub_211A43E74(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *v7 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_254AC7B80 != -1)
    swift_once();
  v9 = sub_211A47748();
  sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v10 = sub_211A47724();
  v11 = sub_211A47D30();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[0] = v13;
    *(_DWORD *)v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_211950A9C(a2, a3, v15);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 1024;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v10, v11, "FMFRefreshController: appendLiveSessionInformation, friendID: %s, successfulLive: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v13, -1, -1);
    MEMORY[0x212BE48A0](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21196C274(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_refreshQueue);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = v3;
  *(_BYTE *)(v17 + 32) = a2;
  aBlock[4] = sub_21196DA18;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC6928;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

uint64_t sub_21196C474(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v4;
  int v5;
  unint64_t *i;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30[3];

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v4 = (_QWORD *)(a2 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_legacyFallbackData);
  v5 = a3 & 1;
  for (i = (unint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    v7 = *(i - 1);
    v8 = *i;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = (_QWORD *)*v4;
    v29 = (_QWORD *)*v4;
    *v4 = 0x8000000000000000;
    v12 = sub_21195BB68(v7, v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v10[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v19 = v29;
        if ((v11 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_211A44D3C();
        v19 = v29;
        if ((v16 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_211A411A0(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_21195BB68(v7, v8);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_24;
      v12 = v17;
      v19 = v29;
      if ((v16 & 1) != 0)
      {
LABEL_12:
        *(_BYTE *)(v19[7] + v12) = v5;
        goto LABEL_16;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v19[6] + 16 * v12);
    *v20 = v7;
    v20[1] = v8;
    *(_BYTE *)(v19[7] + v12) = v5;
    v21 = v19[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_23;
    v19[2] = v23;
    swift_bridgeObjectRetain();
LABEL_16:
    *v4 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_254AC7B80 != -1)
      swift_once();
    v24 = sub_211A47748();
    sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v25 = sub_211A47724();
    v26 = sub_211A47D30();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)v27 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v27 + 4) = sub_211950A9C(v7, v8, v30);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 1024;
      *(_DWORD *)(v27 + 14) = v5;
      _os_log_impl(&dword_21190D000, v25, v26, "FMFRefreshController: appendLiveSessionInformation, friendID: %s, didFallback: %{BOOL}d", (uint8_t *)v27, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v28, -1, -1);
      MEMORY[0x212BE48A0](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (!--v3)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_211A48294();
  __break(1u);
  return result;
}

uint64_t sub_21196C798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  _QWORD *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD *v34;

  v1 = v0;
  v24 = sub_211A4779C();
  v27 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A477D8();
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = dispatch_group_create();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FED0]), sel_init);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  dispatch_group_enter(v9);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v0;
  v12[3] = v11;
  v12[4] = v9;
  v33 = sub_21196D89C;
  v34 = v12;
  v13 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v30 = 1107296256;
  v31 = sub_21196D494;
  v32 = &unk_24CCC6838;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v15 = v9;
  swift_release();
  v23 = v10;
  objc_msgSend(v10, sel_getHandlesSharingLocationsWithMe_, v14);
  _Block_release(v14);
  dispatch_group_enter(v15);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v0;
  v16[3] = v11;
  v16[4] = v15;
  v33 = sub_21196D908;
  v34 = v16;
  aBlock = v13;
  v30 = 1107296256;
  v31 = sub_21196D494;
  v32 = &unk_24CCC6888;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v18 = v15;
  swift_release();
  objc_msgSend(v10, sel_getHandlesFollowingMyLocation_, v17);
  _Block_release(v17);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v1;
  *(_QWORD *)(v19 + 24) = v11;
  v33 = sub_21196D94C;
  v34 = (_QWORD *)v19;
  aBlock = v13;
  v30 = 1107296256;
  v31 = sub_21192382C;
  v32 = &unk_24CCC68D8;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v28 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v21 = v24;
  sub_211A47EA4();
  sub_211A47D48();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  swift_release();
  return swift_release();
}

id sub_21196CB1C(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t *v43;
  unint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  _BYTE v48[16];
  uint64_t v49;
  _OWORD *v50;
  int *v51;
  uint64_t v52;
  __int128 v53;
  _QWORD *v54;
  unint64_t *v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  _OWORD v59[2];
  uint64_t v60;
  _OWORD v61[2];
  uint64_t v62;
  id v63;

  v55 = a2;
  v3 = type metadata accessor for FMFIntermediateFriend();
  v4 = *(_QWORD *)(v3 - 8);
  v51 = (int *)v3;
  v52 = v4;
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (uint64_t *)&v48[-v10];
  v12 = *(_QWORD *)(a1 + 56);
  v49 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v56 = (unint64_t)(v13 + 63) >> 6;
  v54 = v11 + 2;
  v50 = v11 + 6;
  v57 = a1;
  result = (id)swift_bridgeObjectRetain();
  v17 = 0;
  v53 = xmmword_211A4A230;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_24;
    }
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v56)
      return (id)swift_release();
    v21 = *(_QWORD *)(v49 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v56)
        return (id)swift_release();
      v21 = *(_QWORD *)(v49 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v56)
          return (id)swift_release();
        v21 = *(_QWORD *)(v49 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 3;
          if (v20 + 3 >= v56)
            return (id)swift_release();
          v21 = *(_QWORD *)(v49 + 8 * v17);
          if (!v21)
            break;
        }
      }
    }
LABEL_23:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_24:
    sub_21196D954(*(_QWORD *)(v57 + 48) + 40 * v19, (uint64_t)v61);
    v59[0] = v61[0];
    v59[1] = v61[1];
    v60 = v62;
    v23 = (void *)sub_211A47EF8();
    objc_opt_self();
    v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      v25 = (void *)v24;
      v63 = v23;
      result = objc_msgSend(v25, sel_serverId);
      if (!result)
        goto LABEL_36;
      v26 = result;
      v58 = v15;
      v27 = v17;
      v28 = sub_211A47910();
      v30 = v29;

      *v11 = v28;
      v11[1] = v30;
      v31 = v54;
      v54[1] = 0;
      v31[2] = 0;
      *v31 = 0;
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v53;
      result = objc_msgSend(v25, sel_identifier);
      if (!result)
        goto LABEL_35;
      v33 = result;
      v34 = v51;
      v35 = v51[16];
      v36 = sub_211A47910();
      v38 = v37;

      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v32 + 40) = v38;

      v11[5] = v32;
      v39 = v50;
      *v50 = 0u;
      v39[1] = 0u;
      v40 = (char *)v11 + v34[10];
      v41 = sub_211A47208();
      v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
      v42(v40, 1, 1, v41);
      v42((char *)v11 + v34[11], 1, 1, v41);
      v42((char *)v11 + v34[12], 1, 1, v41);
      *((_BYTE *)v11 + v34[13]) = 2;
      *((_BYTE *)v11 + v34[14]) = 1;
      *((_BYTE *)v11 + v34[15]) = 1;
      *((_BYTE *)v11 + v35) = 2;
      *(uint64_t *)((char *)v11 + v34[17]) = 0;
      sub_21194E85C((uint64_t)v11, (uint64_t)v8);
      v43 = v55;
      v44 = *v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v44 = sub_2119B03E8(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
        *v55 = v44;
      }
      v47 = *(_QWORD *)(v44 + 16);
      v46 = *(_QWORD *)(v44 + 24);
      v17 = v27;
      v15 = v58;
      if (v47 >= v46 >> 1)
      {
        v44 = sub_2119B03E8(v46 > 1, v47 + 1, 1, v44);
        *v55 = v44;
      }
      *(_QWORD *)(v44 + 16) = v47 + 1;
      sub_21196D9C4((uint64_t)v8, v44+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v47);

      sub_21194E820((uint64_t)v11);
    }
    else
    {

    }
    result = (id)sub_21196D990((uint64_t)v59);
  }
  v22 = v20 + 4;
  if (v22 >= v56)
    return (id)swift_release();
  v21 = *(_QWORD *)(v49 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v56)
      return (id)swift_release();
    v21 = *(_QWORD *)(v49 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_21196CFD8(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t *v43;
  unint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  _BYTE v48[16];
  uint64_t v49;
  _OWORD *v50;
  int *v51;
  uint64_t v52;
  __int128 v53;
  _QWORD *v54;
  unint64_t *v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  _OWORD v59[2];
  uint64_t v60;
  _OWORD v61[2];
  uint64_t v62;
  id v63;

  v55 = a2;
  v3 = type metadata accessor for FMFIntermediateFriend();
  v4 = *(_QWORD *)(v3 - 8);
  v51 = (int *)v3;
  v52 = v4;
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (uint64_t *)&v48[-v10];
  v12 = *(_QWORD *)(a1 + 56);
  v49 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v56 = (unint64_t)(v13 + 63) >> 6;
  v54 = v11 + 2;
  v50 = v11 + 5;
  v57 = a1;
  result = (id)swift_bridgeObjectRetain();
  v17 = 0;
  v53 = xmmword_211A4A230;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v17 << 6);
      goto LABEL_24;
    }
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v56)
      return (id)swift_release();
    v21 = *(_QWORD *)(v49 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v56)
        return (id)swift_release();
      v21 = *(_QWORD *)(v49 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v56)
          return (id)swift_release();
        v21 = *(_QWORD *)(v49 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 3;
          if (v20 + 3 >= v56)
            return (id)swift_release();
          v21 = *(_QWORD *)(v49 + 8 * v17);
          if (!v21)
            break;
        }
      }
    }
LABEL_23:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_24:
    sub_21196D954(*(_QWORD *)(v57 + 48) + 40 * v19, (uint64_t)v61);
    v59[0] = v61[0];
    v59[1] = v61[1];
    v60 = v62;
    v23 = (void *)sub_211A47EF8();
    objc_opt_self();
    v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      v25 = (void *)v24;
      v63 = v23;
      result = objc_msgSend(v25, sel_serverId);
      if (!result)
        goto LABEL_36;
      v26 = result;
      v58 = v15;
      v27 = v17;
      v28 = sub_211A47910();
      v30 = v29;

      *v11 = v28;
      v11[1] = v30;
      v31 = v54;
      *v54 = 0;
      v31[1] = 0;
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v53;
      result = objc_msgSend(v25, sel_identifier);
      if (!result)
        goto LABEL_35;
      v33 = result;
      v34 = v51;
      v35 = v51[16];
      v36 = sub_211A47910();
      v38 = v37;

      *(_QWORD *)(v32 + 32) = v36;
      *(_QWORD *)(v32 + 40) = v38;

      v11[4] = v32;
      v39 = v50;
      *v50 = 0u;
      v39[1] = 0u;
      *((_QWORD *)v39 + 4) = 0;
      v40 = (char *)v11 + v34[10];
      v41 = sub_211A47208();
      v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
      v42(v40, 1, 1, v41);
      v42((char *)v11 + v34[11], 1, 1, v41);
      v42((char *)v11 + v34[12], 1, 1, v41);
      *((_BYTE *)v11 + v34[13]) = 2;
      *((_BYTE *)v11 + v34[14]) = 1;
      *((_BYTE *)v11 + v34[15]) = 1;
      *((_BYTE *)v11 + v35) = 2;
      *(uint64_t *)((char *)v11 + v34[17]) = 0;
      sub_21194E85C((uint64_t)v11, (uint64_t)v8);
      v43 = v55;
      v44 = *v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v44 = sub_2119B03E8(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
        *v55 = v44;
      }
      v47 = *(_QWORD *)(v44 + 16);
      v46 = *(_QWORD *)(v44 + 24);
      v17 = v27;
      v15 = v58;
      if (v47 >= v46 >> 1)
      {
        v44 = sub_2119B03E8(v46 > 1, v47 + 1, 1, v44);
        *v55 = v44;
      }
      *(_QWORD *)(v44 + 16) = v47 + 1;
      sub_21196D9C4((uint64_t)v8, v44+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v47);

      sub_21194E820((uint64_t)v11);
    }
    else
    {

    }
    result = (id)sub_21196D990((uint64_t)v59);
  }
  v22 = v20 + 4;
  if (v22 >= v56)
    return (id)swift_release();
  v21 = *(_QWORD *)(v49 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v56)
      return (id)swift_release();
    v21 = *(_QWORD *)(v49 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21196D494(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_211A47C40();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21196D51C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5, void (*a6)(uint64_t, uint64_t *), const char *a7)
{
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;

  v26 = MEMORY[0x24BEE4AF8];
  if (a1)
  {
    v12 = swift_bridgeObjectRetain();
    a6(v12, &v26);
    swift_bridgeObjectRelease();
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    swift_beginAccess();
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v14, v15, a7, v16, 0xCu);
    MEMORY[0x212BE48A0](v16, -1, -1);
  }

  v17 = (void **)(a4 + 16);
  if (swift_weakLoadStrong())
  {
    v18 = swift_beginAccess();
    MEMORY[0x24BDAC7A8](v18, v19);
    swift_bridgeObjectRetain();
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v20 = *v17;
  v21 = *v17;
  if (!*v17)
  {
    v22 = a2;
    v21 = a2;
  }
  swift_beginAccess();
  v23 = *v17;
  *v17 = v21;
  v24 = v20;

  dispatch_group_leave(a5);
  return swift_bridgeObjectRelease();
}

void sub_21196D7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC7FMFCore20FMFRefreshController_firstRefreshCompleted) & 1) == 0)
  {
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    v6 = MEMORY[0x212BE496C](a1 + 32);
    if (v5)
    {
      if (v6)
      {
        v7 = v5;
        sub_2119E9C78(v5);
        swift_unknownObjectRelease();

      }
    }
    else if (v6)
    {
      sub_211918530();
      swift_unknownObjectRelease();
    }
    *(_BYTE *)(a1 + v2) = 1;
  }
}

uint64_t sub_21196D864()
{
  return sub_21191811C((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_21196D874()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21196D89C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_21196D51C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32), (void (*)(uint64_t, uint64_t *))sub_21196CB1C, "FMFRefreshController: fmfd returned %ld following");
}

uint64_t sub_21196D8D4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21196D908(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_21196D51C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32), (void (*)(uint64_t, uint64_t *))sub_21196CFD8, "FMFRefreshController: fmfd returned %ld followers");
}

uint64_t sub_21196D93C()
{
  return sub_21191811C((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_21196D94C()
{
  uint64_t v0;

  sub_21196D7BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21196D954(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_21196D990(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_21196D9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21196DA08()
{
  return sub_21191811C((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_21196DA18()
{
  uint64_t v0;

  return sub_21196C474(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_21196DA24()
{
  return sub_21196DAD8((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_21196DA34()
{
  uint64_t v0;

  sub_21196C03C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_21196DA44()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21196DA70()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21196DAA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21196DAC8()
{
  return sub_21196DAD8((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_21196DAD8(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_21196DB1C()
{
  uint64_t *v0;

  sub_21196BBE8(v0[2], v0[3], v0[4]);
}

id sub_21196DB28()
{
  uint64_t v0;

  return sub_21196B994(v0);
}

uint64_t sub_21196DB30()
{
  return swift_deallocObject();
}

_QWORD *FMLocationShiftingRequest.__allocating_init(identifier:location:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a3;
  result[3] = a1;
  result[4] = a2;
  return result;
}

uint64_t FMLocationShiftingRequest.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMLocationShifter.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  FMLocationShifter.init()();
  return v0;
}

uint64_t sub_21196DC24()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21196DC58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t aBlock;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD *v35;

  v8 = sub_211A477A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(id *)(a1 + 16);
  v13 = *(void **)(a2 + 16);
  objc_msgSend(v13, sel_coordinate);
  v15 = v14;
  objc_msgSend(v13, sel_coordinate);
  v17 = v16;
  objc_msgSend(v13, sel_horizontalAccuracy);
  v19 = v18;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v34 = sub_21196E710;
  v35 = v20;
  v21 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v31 = 1107296256;
  v32 = sub_21196E368;
  v33 = &unk_24CCC6C50;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v23 = a4;
  swift_release();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a3;
  v24[3] = a2;
  v24[4] = v23;
  v34 = sub_21196E720;
  v35 = v24;
  aBlock = v21;
  v31 = 1107296256;
  v32 = sub_211A1BAB4;
  v33 = &unk_24CCC6CA0;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v26 = v23;
  swift_release();
  sub_211920E14();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BEE5490], v8);
  v27 = (void *)sub_211A47DCC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  objc_msgSend(v29, sel_shiftCoordinate_accuracy_withCompletionHandler_mustGoToNetworkCallback_errorHandler_callbackQueue_, v22, 0, v25, v27, v15, v17, v19);

  _Block_release(v25);
  _Block_release(v22);
}

uint64_t sub_21196DEAC(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55[3];

  v53 = a3;
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a1 + 16);
  objc_msgSend(v16, sel_altitude);
  v18 = v17;
  objc_msgSend(v16, sel_verticalAccuracy);
  v20 = v19;
  objc_msgSend(v16, sel_course);
  v22 = v21;
  objc_msgSend(v16, sel_speed);
  v24 = v23;
  v25 = objc_msgSend(v16, sel_timestamp);
  sub_211A471E4();

  v26 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v27 = (void *)sub_211A471A8();
  v28 = objc_msgSend(v26, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v27, a4, a5, v18, a6, v20, v22, v24);

  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30 = a1;
  v29(v15, v11);
  objc_msgSend(v28, sel_setReferenceFrame_, 2);
  v31 = *(_QWORD *)(a1 + 24);
  v32 = *(_QWORD *)(v30 + 32);
  type metadata accessor for FMLocationShiftingRequest();
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v28;
  v33[3] = v31;
  v33[4] = v32;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v34 = v28;
  v35 = swift_retain();
  MEMORY[0x212BE3898](v35);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_211A47AE4();
  sub_211A47B14();
  sub_211A47AC0();
  swift_endAccess();
  if (qword_254AC7B80 != -1)
    swift_once();
  v36 = sub_211A47748();
  sub_21194F3E0(v36, (uint64_t)qword_254ADC7E8);
  v37 = v34;
  swift_retain_n();
  v38 = v16;
  v39 = v37;
  v40 = v38;
  v41 = sub_211A47724();
  v42 = sub_211A47D30();
  v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    v44 = swift_slowAlloc();
    v45 = (_QWORD *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v55[0] = v52;
    *(_DWORD *)v44 = 136315650;
    v51 = v43;
    swift_bridgeObjectRetain();
    v54 = sub_211950A9C(v31, v32, v55);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2112;
    v54 = (uint64_t)v39;
    v46 = v39;
    sub_211A47E2C();
    *v45 = v39;

    *(_WORD *)(v44 + 22) = 2112;
    v54 = (uint64_t)v40;
    v47 = v40;
    sub_211A47E2C();
    v45[1] = v40;

    _os_log_impl(&dword_21190D000, v41, (os_log_type_t)v51, "FMLocationShifter: shifting completed %s newLocation: %@ oldLocation: %@", (uint8_t *)v44, 0x20u);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v45, -1, -1);
    v48 = v52;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v48, -1, -1);
    MEMORY[0x212BE48A0](v44, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  objc_msgSend(v53, sel_signal);

  return swift_release();
}

uint64_t sub_21196E368(uint64_t a1, double a2, double a3, double a4)
{
  void (*v7)(uint64_t, double, double, double);
  uint64_t v8;

  v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  v8 = swift_retain();
  v7(v8, a2, a3, a4);
  return swift_release();
}

id sub_21196E3BC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20[3];

  if (qword_254AC7B80 != -1)
    swift_once();
  v7 = (_QWORD *)(a2 + 16);
  v8 = sub_211A47748();
  sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  v9 = a1;
  v10 = a1;
  v11 = sub_211A47724();
  v12 = sub_211A47D24();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = a1;
    sub_211958C38(&qword_254ACDE90);
    v16 = sub_211A47928();
    sub_211950A9C(v16, v17, v20);
    sub_211A47E2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21190D000, v11, v12, "FMLocationShifter: shifting request error %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v14, -1, -1);
    MEMORY[0x212BE48A0](v13, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  v18 = swift_retain();
  MEMORY[0x212BE3898](v18);
  if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_211A47AE4();
  sub_211A47B14();
  sub_211A47AC0();
  swift_endAccess();
  return objc_msgSend(a4, sel_signal);
}

id *FMLocationShifter.deinit()
{
  id *v0;

  return v0;
}

uint64_t FMLocationShifter.__deallocating_deinit()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMLocationShiftingRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMLocationShiftingRequest.__allocating_init(identifier:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for FMLocationShifter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMLocationShifter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_21196E6A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21196E6C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21196E700()
{
  uint64_t v0;

  sub_21196DC58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_21196E710(double a1, double a2, double a3)
{
  uint64_t v3;

  return sub_21196DEAC(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), a1, a2, a3);
}

id sub_21196E720(void *a1)
{
  uint64_t v1;

  return sub_21196E3BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

_QWORD *assignWithCopy for FMFSimpleLocation(_QWORD *__dst, _QWORD *__src)
{
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  char *v10;

  v4 = (char *)(__src + 39);
  v5 = __src[21];
  if (!__dst[21])
  {
    if (v5)
    {
      *__dst = *__src;
      __dst[1] = __src[1];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      v10 = (char *)(__src + 39);
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[10] = __src[10];
      __dst[11] = __src[11];
      __dst[12] = __src[12];
      __dst[13] = __src[13];
      __dst[14] = __src[14];
      __dst[15] = __src[15];
      __dst[16] = __src[16];
      __dst[17] = __src[17];
      __dst[18] = __src[18];
      __dst[19] = __src[19];
      __dst[20] = __src[20];
      __dst[21] = __src[21];
      __dst[22] = __src[22];
      __dst[23] = __src[23];
      __dst[24] = __src[24];
      __dst[25] = __src[25];
      __dst[26] = __src[26];
      __dst[27] = __src[27];
      __dst[28] = __src[28];
      __dst[29] = __src[29];
      __dst[30] = __src[30];
      __dst[31] = __src[31];
      __dst[32] = __src[32];
      __dst[33] = __src[33];
      __dst[34] = __src[34];
      __dst[35] = __src[35];
      __dst[36] = __src[36];
      __dst[37] = __src[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy(__dst, __src, 0x130uLL);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_21196ECA4((uint64_t)__dst);
    goto LABEL_7;
  }
  *__dst = *__src;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[1] = __src[1];
  __dst[2] = __src[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[3] = __src[3];
  __dst[4] = __src[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  __dst[8] = __src[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[9] = __src[9];
  __dst[10] = __src[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[11] = __src[11];
  __dst[12] = __src[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[13] = __src[13];
  __dst[14] = __src[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[15] = __src[15];
  __dst[16] = __src[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[17] = __src[17];
  __dst[18] = __src[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[19] = __src[19];
  __dst[20] = __src[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[21] = __src[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[22] = __src[22];
  __dst[23] = __src[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[24] = __src[24];
  __dst[25] = __src[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[26] = __src[26];
  __dst[27] = __src[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[28] = __src[28];
  __dst[29] = __src[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[30] = __src[30];
  __dst[31] = __src[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[32] = __src[32];
  __dst[33] = __src[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[34] = __src[34];
  __dst[35] = __src[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[36] = __src[36];
  __dst[37] = __src[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v6 = (void *)__src[38];
  v7 = (void *)__dst[38];
  __dst[38] = v6;
  v8 = v6;

  *((_BYTE *)__dst + 312) = *v4;
  __dst[40] = __src[40];
  __dst[41] = __src[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 336) = *((_BYTE *)__src + 336);
  *((_BYTE *)__dst + 337) = *((_BYTE *)__src + 337);
  __dst[43] = __src[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 352) = v4[40];
  return __dst;
}

uint64_t sub_21196ECA4(uint64_t a1)
{
  destroy for FMFAddress();
  return a1;
}

void *initializeWithTake for FMFSimpleLocation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x161uLL);
}

_QWORD *assignWithTake for FMFSimpleLocation(_QWORD *__dst, char *__src)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v4 = __src + 312;
  if (!__dst[21])
    goto LABEL_5;
  if (!*((_QWORD *)__src + 21))
  {
    sub_21196ECA4((uint64_t)__dst);
LABEL_5:
    memcpy(__dst, __src, 0x130uLL);
    goto LABEL_6;
  }
  *__dst = *(_QWORD *)__src;
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)__src + 2);
  __dst[1] = *((_QWORD *)__src + 1);
  __dst[2] = v5;
  swift_bridgeObjectRelease();
  v6 = *((_QWORD *)__src + 4);
  __dst[3] = *((_QWORD *)__src + 3);
  __dst[4] = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)__src + 6);
  __dst[5] = *((_QWORD *)__src + 5);
  __dst[6] = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)__src + 8);
  __dst[7] = *((_QWORD *)__src + 7);
  __dst[8] = v8;
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)__src + 10);
  __dst[9] = *((_QWORD *)__src + 9);
  __dst[10] = v9;
  swift_bridgeObjectRelease();
  v10 = *((_QWORD *)__src + 12);
  __dst[11] = *((_QWORD *)__src + 11);
  __dst[12] = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)__src + 14);
  __dst[13] = *((_QWORD *)__src + 13);
  __dst[14] = v11;
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)__src + 16);
  __dst[15] = *((_QWORD *)__src + 15);
  __dst[16] = v12;
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)__src + 18);
  __dst[17] = *((_QWORD *)__src + 17);
  __dst[18] = v13;
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)__src + 20);
  __dst[19] = *((_QWORD *)__src + 19);
  __dst[20] = v14;
  swift_bridgeObjectRelease();
  __dst[21] = *((_QWORD *)__src + 21);
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)__src + 23);
  __dst[22] = *((_QWORD *)__src + 22);
  __dst[23] = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)__src + 25);
  __dst[24] = *((_QWORD *)__src + 24);
  __dst[25] = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)__src + 27);
  __dst[26] = *((_QWORD *)__src + 26);
  __dst[27] = v17;
  swift_bridgeObjectRelease();
  v18 = *((_QWORD *)__src + 29);
  __dst[28] = *((_QWORD *)__src + 28);
  __dst[29] = v18;
  swift_bridgeObjectRelease();
  v19 = *((_QWORD *)__src + 31);
  __dst[30] = *((_QWORD *)__src + 30);
  __dst[31] = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)__src + 33);
  __dst[32] = *((_QWORD *)__src + 32);
  __dst[33] = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)__src + 35);
  __dst[34] = *((_QWORD *)__src + 34);
  __dst[35] = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)__src + 37);
  __dst[36] = *((_QWORD *)__src + 36);
  __dst[37] = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  v23 = (void *)__dst[38];
  __dst[38] = *((_QWORD *)__src + 38);

  *((_BYTE *)__dst + 312) = *v4;
  v24 = *((_QWORD *)__src + 41);
  __dst[40] = *((_QWORD *)__src + 40);
  __dst[41] = v24;
  swift_bridgeObjectRelease();
  *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
  __dst[43] = *((_QWORD *)__src + 43);
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 352) = v4[40];
  return __dst;
}

uint64_t sub_21196EEC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  _BYTE v18[304];
  _BYTE __src[304];
  _BYTE v20[304];

  sub_21196F558(v0, (uint64_t)v20);
  v1 = *(_QWORD *)(v0 + 328);
  if (!v1)
    goto LABEL_9;
  v2 = *(_QWORD *)(v0 + 320);
  v3 = sub_211A47934();
  v5 = v4;
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v3;
  v6._object = v5;
  FMFDefaultLabel.init(rawValue:)(v6);
  v7 = v2;
  v8 = v1;
  if (__src[0] != 5)
  {
    FMFDefaultLabel.localizedLabel.getter();
    v7 = v9;
    v8 = v10;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v11 = v7 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = sub_211A47934();
    v14 = v13;
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = v12;
    v15._object = v14;
    FMFDefaultLabel.init(rawValue:)(v15);
    if (__src[0] != 5)
    {
      FMFDefaultLabel.localizedLabel.getter();
      v2 = v16;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_9:
    sub_21196F558((uint64_t)v20, (uint64_t)__src);
    if (sub_21196FB8C((uint64_t)__src) == 1)
    {
      return 0;
    }
    else
    {
      memcpy(v18, __src, sizeof(v18));
      return FMFAddress.displayAddress.getter();
    }
  }
  return v2;
}

uint64_t sub_21196F030(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21196F064 + 4 * byte_211A4A3F0[a1]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_21196F064()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_21196F080()
{
  return 0x656475746974616CLL;
}

unint64_t sub_21196F098()
{
  return 0xD000000000000012;
}

uint64_t sub_21196F0B4()
{
  return 0x6D617473656D6974;
}

uint64_t sub_21196F0D4()
{
  return 0x736C6562616CLL;
}

uint64_t sub_21196F0E8()
{
  return 0x756363616E497369;
}

void sub_21196F108(char *a1)
{
  sub_211975324(*a1);
}

void sub_21196F114()
{
  char *v0;

  sub_2119BBDE4(0, *v0);
}

void sub_21196F120(uint64_t a1)
{
  char *v1;

  sub_2119BB86C(a1, *v1);
}

void sub_21196F128(uint64_t a1)
{
  char *v1;

  sub_2119BBDE4(a1, *v1);
}

uint64_t sub_21196F130@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21197005C();
  *a1 = result;
  return result;
}

uint64_t sub_21196F15C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21196F030(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21196F184@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21197005C();
  *a1 = result;
  return result;
}

uint64_t sub_21196F1A8()
{
  sub_21192C61C();
  return sub_211A48390();
}

uint64_t sub_21196F1D0()
{
  sub_21192C61C();
  return sub_211A4839C();
}

void sub_21196F228(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[38];
  _BYTE v15[312];
  char v16;

  v4 = sub_211958C38(&qword_254AC8A18);
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21196F558(v1, (uint64_t)v15);
  v8 = *(void **)(v1 + 304);
  v12 = *(_QWORD *)(v1 + 344);
  sub_211931DB4(a1, a1[3]);
  sub_21192C61C();
  sub_211A4836C();
  v9 = objc_msgSend(v8, sel_timestamp);
  if (v9)
  {
    v10 = v9;
    sub_21196F558((uint64_t)v15, (uint64_t)v14);
    v16 = 0;
    sub_21196F7C4((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
    sub_211958C38(&qword_254ACCB40);
    sub_21196F848();
    sub_211A481E0();
    if (v2)
    {

      sub_21196F7C4((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    }
    else
    {
      sub_21196F7C4((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
      objc_msgSend(v8, sel_coordinate);
      LOBYTE(v14[0]) = 2;
      sub_211A481C8();
      objc_msgSend(v8, sel_coordinate);
      LOBYTE(v14[0]) = 1;
      sub_211A481C8();
      objc_msgSend(v8, sel_horizontalAccuracy);
      LOBYTE(v14[0]) = 3;
      sub_211A481C8();
      objc_msgSend(v10, sel_fm_epoch);
      LOBYTE(v14[0]) = 4;
      sub_211A481EC();
      v14[0] = v12;
      v16 = 5;
      swift_bridgeObjectRetain();
      sub_211958C38(&qword_254AC8A30);
      sub_21196F8F0();
      sub_211A481E0();
      swift_bridgeObjectRelease();

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_21196F510(_QWORD *a1)
{
  sub_21196F228(a1);
}

double sub_21196F528(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_21196F558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254ACCB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21196F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21196F5E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_21196F620(uint64_t *a1)
{
  void *v2;
  id v3;

  v2 = (void *)a1[38];
  sub_21195DA00(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_21196F6D0(uint64_t *a1)
{
  void *v2;

  v2 = (void *)a1[38];
  sub_21191CE4C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21196F780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLabelledLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21196F7C4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_QWORD *)(a1 + 296));
  return a1;
}

unint64_t sub_21196F848()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254AC8A20;
  if (!qword_254AC8A20)
  {
    v1 = sub_21195E2C0(&qword_254ACCB40);
    v2 = sub_21196F8AC();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8A20);
  }
  return result;
}

unint64_t sub_21196F8AC()
{
  unint64_t result;

  result = qword_254AC8A28;
  if (!qword_254AC8A28)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFAddress, &type metadata for FMFAddress);
    atomic_store(result, (unint64_t *)&qword_254AC8A28);
  }
  return result;
}

unint64_t sub_21196F8F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC8A38;
  if (!qword_254AC8A38)
  {
    v1 = sub_21195E2C0(&qword_254AC8A30);
    v2 = sub_2119613B4((unint64_t *)&qword_254AC8A40, (unint64_t *)&qword_254AC8A48, (uint64_t)&protocol conformance descriptor for FMFLabelledLocation, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC8A38);
  }
  return result;
}

uint64_t sub_21196F974(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  _BYTE v15[304];
  _BYTE __dst[304];
  _BYTE v17[304];
  _BYTE v18[304];
  _BYTE __src[304];
  _BYTE v20[304];
  uint64_t v21;
  _BYTE v22[304];
  _BYTE v23[304];
  _BYTE v24[304];

  sub_21196F558(a1, (uint64_t)v22);
  v4 = *(void **)(a1 + 304);
  v5 = *(_QWORD *)(a1 + 344);
  sub_21196F558(a2, (uint64_t)v23);
  v6 = *(void **)(a2 + 304);
  v7 = *(_QWORD *)(a2 + 344);
  sub_21196F558((uint64_t)v22, (uint64_t)v24);
  if (sub_21196FB8C((uint64_t)v24) != 1)
  {
    sub_21196F558((uint64_t)v22, (uint64_t)__src);
    sub_21196F558((uint64_t)v23, (uint64_t)v20);
    if (sub_21196FB8C((uint64_t)v20) != 1)
    {
      sub_21196F558((uint64_t)v23, (uint64_t)__dst);
      memcpy(v15, __dst, sizeof(v15));
      v8 = _s7FMFCore10FMFAddressV2eeoiySbAC_ACtFZ_0((uint64_t)__src, (uint64_t)v15);
      memcpy(v17, __src, sizeof(v17));
      sub_21196F558((uint64_t)v22, (uint64_t)v18);
      sub_21196FD88((uint64_t)v18);
      sub_21196FED0((uint64_t)v17);
      if ((v8 & 1) != 0)
        goto LABEL_8;
LABEL_12:
      v12 = 0;
      return v12 & 1;
    }
    memcpy(__dst, __src, sizeof(__dst));
    sub_21196F558((uint64_t)v22, (uint64_t)v17);
    sub_21196F558((uint64_t)v22, (uint64_t)v18);
    sub_21196FD88((uint64_t)v18);
    sub_21196FD88((uint64_t)v17);
    sub_21196FED0((uint64_t)__dst);
LABEL_6:
    sub_21196F558((uint64_t)v22, (uint64_t)v20);
    sub_21196F558((uint64_t)v23, (uint64_t)&v21);
    sub_21196F7C4((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
    sub_21196FBA4((uint64_t)v20);
    goto LABEL_12;
  }
  sub_21196F558((uint64_t)v23, (uint64_t)v20);
  if (sub_21196FB8C((uint64_t)v20) != 1)
    goto LABEL_6;
LABEL_8:
  sub_21196FD4C();
  v9 = v4;
  v10 = v6;
  v11 = sub_211A47DE4();

  if ((v11 & 1) == 0)
    goto LABEL_12;
  v12 = (v5 | v7) == 0;
  if (v5 && v7)
  {
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v12 = sub_2119B1978(v13, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12 & 1;
}

uint64_t sub_21196FB8C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 168);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_21196FBA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 312);
  v17 = *(_QWORD *)(a1 + 304);
  v3 = *(_QWORD *)(a1 + 320);
  v4 = *(_QWORD *)(a1 + 328);
  v5 = *(_QWORD *)(a1 + 336);
  v6 = *(_QWORD *)(a1 + 344);
  v7 = *(_QWORD *)(a1 + 352);
  v8 = *(_QWORD *)(a1 + 360);
  v15 = *(_OWORD *)(a1 + 384);
  v16 = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 416);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 448);
  v12 = *(_OWORD *)(a1 + 432);
  v10 = *(_OWORD *)(a1 + 464);
  sub_21191CE4C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168));
  sub_21191CE4C(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

unint64_t sub_21196FD4C()
{
  unint64_t result;

  result = qword_254AC8A50;
  if (!qword_254AC8A50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254AC8A50);
  }
  return result;
}

uint64_t sub_21196FD88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21196FED0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_211970018()
{
  unint64_t result;

  result = qword_254AC8A60;
  if (!qword_254AC8A60)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A598, &type metadata for FMFSimpleLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8A60);
  }
  return result;
}

uint64_t sub_21197005C()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

_QWORD *sub_2119700A4(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = *((_QWORD *)a2 + 3);
    a1[2] = *((_QWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_QWORD *)a2 + 5);
    a1[4] = *((_QWORD *)a2 + 4);
    a1[5] = v9;
    v10 = *((_QWORD *)a2 + 7);
    a1[6] = *((_QWORD *)a2 + 6);
    a1[7] = v10;
    v11 = *((_QWORD *)a2 + 9);
    v12 = a3[10];
    __dst = (char *)a1 + v12;
    v29 = &a2[v12];
    a1[8] = *((_QWORD *)a2 + 8);
    a1[9] = v11;
    v13 = sub_211A47208();
    v30 = *(_QWORD *)(v13 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v29, 1, v13))
    {
      v15 = sub_211958C38(qword_254AC8A78);
      memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v16 = v30;
    }
    else
    {
      v16 = v30;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v29, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v13);
    }
    v18 = a3[11];
    v19 = (char *)v4 + v18;
    v20 = &a2[v18];
    if (v14(&a2[v18], 1, v13))
    {
      v21 = sub_211958C38(qword_254AC8A78);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v13);
    }
    v22 = a3[12];
    v23 = (char *)v4 + v22;
    v24 = &a2[v22];
    if (v14(&a2[v22], 1, v13))
    {
      v25 = sub_211958C38(qword_254AC8A78);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v24, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v13);
    }
    v26 = a3[14];
    *((_BYTE *)v4 + a3[13]) = a2[a3[13]];
    *((_BYTE *)v4 + v26) = a2[v26];
    v27 = a3[16];
    *((_BYTE *)v4 + a3[15]) = a2[a3[15]];
    *((_BYTE *)v4 + v27) = a2[v27];
    *(_QWORD *)((char *)v4 + a3[17]) = *(_QWORD *)&a2[a3[17]];
    swift_bridgeObjectRetain();
  }
  return v4;
}

char *sub_211970330(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 8) = a2[8];
  *((_QWORD *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[10];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_211A47208();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_211958C38(qword_254AC8A78);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[11];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    v20 = sub_211958C38(qword_254AC8A78);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  v21 = a3[12];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = v11(&a1[v21], 1, v9);
  v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    v26 = sub_211958C38(qword_254AC8A78);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
LABEL_19:
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  a1[a3[14]] = *((_BYTE *)a2 + a3[14]);
  a1[a3[15]] = *((_BYTE *)a2 + a3[15]);
  a1[a3[16]] = *((_BYTE *)a2 + a3[16]);
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2119706A4(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  a1[4] = *((_OWORD *)a2 + 4);
  v8 = a3[10];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = sub_211958C38(qword_254AC8A78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[11];
  v16 = (char *)a1 + v15;
  v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    v18 = sub_211958C38(qword_254AC8A78);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[12];
  v20 = (char *)a1 + v19;
  v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    v22 = sub_211958C38(qword_254AC8A78);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[14];
  *((_BYTE *)a1 + a3[13]) = a2[a3[13]];
  *((_BYTE *)a1 + v23) = a2[v23];
  v24 = a3[16];
  *((_BYTE *)a1 + a3[15]) = a2[a3[15]];
  *((_BYTE *)a1 + v24) = a2[v24];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)&a2[a3[17]];
  return a1;
}

char *sub_211970894(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = a2[4];
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 5) = a2[5];
  swift_bridgeObjectRelease();
  v8 = a2[7];
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[9];
  *((_QWORD *)a1 + 8) = a2[8];
  *((_QWORD *)a1 + 9) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[10];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_211A47208();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = sub_211958C38(qword_254AC8A78);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[11];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    v24 = sub_211958C38(qword_254AC8A78);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  v25 = a3[12];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = v15(&a1[v25], 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = sub_211958C38(qword_254AC8A78);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  v31 = a3[14];
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  a1[v31] = *((_BYTE *)a2 + v31);
  v32 = a3[16];
  a1[a3[15]] = *((_BYTE *)a2 + a3[15]);
  a1[v32] = *((_BYTE *)a2 + v32);
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_211970BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_211970C28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_211970CA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_211970CC8 + 4 * byte_211A4A620[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_211970CC8()
{
  return 0x64496E6F73726570;
}

unint64_t sub_211970CE8()
{
  return 0xD000000000000015;
}

uint64_t sub_211970DFC()
{
  return 0x6E65644968737570;
}

uint64_t sub_211970E20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_211970CA0(*a1);
  v5 = v4;
  if (v3 == sub_211970CA0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211970EA8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211970CA0(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211970F08()
{
  unsigned __int8 *v0;

  sub_211970CA0(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211970F48()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211970CA0(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211970FA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211971574();
  *a1 = result;
  return result;
}

uint64_t sub_211970FD0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_211970CA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_211970FF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211971574();
  *a1 = result;
  return result;
}

void sub_21197101C(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_211971028()
{
  sub_21194D0D8();
  return sub_211A4839C();
}

uint64_t sub_211971054()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v1 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v5 = v0[3];
  v10 = v0[2];
  v11 = v5;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v0[4];
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8B68);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v0[5];
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v6 = v0[7];
  v10 = v0[6];
  v11 = v6;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v7 = v0[9];
  v10 = v0[8];
  v11 = v7;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v8 = (int *)type metadata accessor for FMFIntermediateFriend();
  sub_21194E8A0((uint64_t)v0 + v8[10], (uint64_t)v4);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_21194E8A0((uint64_t)v0 + v8[11], (uint64_t)v4);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_21194E8A0((uint64_t)v0 + v8[12], (uint64_t)v4);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v10) = *((_BYTE *)v0 + v8[13]);
  sub_211958C38(&qword_254AC8B90);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v10) = *((_BYTE *)v0 + v8[14]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v10) = *((_BYTE *)v0 + v8[15]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v10) = *((_BYTE *)v0 + v8[16]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = *(_QWORD *)((char *)v0 + v8[17]);
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return v12;
}

unint64_t sub_211971530()
{
  unint64_t result;

  result = qword_254AC8BB0;
  if (!qword_254AC8BB0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A83C, &type metadata for FMFIntermediateFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC8BB0);
  }
  return result;
}

uint64_t sub_211971574()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE)
    return 14;
  else
    return v0;
}

uint64_t FMFRemoveLabelsAction.__allocating_init(labels:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = v2;
  if (*(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(v2 + 24) = a1;
    *(_BYTE *)(v2 + 16) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t FMFRemoveLabelsAction.init(labels:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 16) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FMFRemoveLabelsAction();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t type metadata accessor for FMFRemoveLabelsAction()
{
  return objc_opt_self();
}

uint64_t sub_2119716A4()
{
  uint64_t v0;

  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x212BE38C8](v0, MEMORY[0x24BEE0D00]);
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFRemoveLabelsAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFRemoveLabelsAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21197183C()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMFRemoveLabelsAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFRemoveLabelsAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMFRemoveLabelsAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFRemoveLabelsAction.__allocating_init(labels:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

_QWORD *sub_211971898(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30[2];

  v5 = sub_211958C38(&qword_254AC8C98);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A4713C();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v29 - v16;
  if (qword_254AC7BC8 != -1)
    swift_once();
  v18 = sub_21194F3E0(v5, (uint64_t)qword_254ACDFB0);
  sub_211964BAC(v18, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2119132F0((uint64_t)v8);
    sub_211971B98();
    swift_allocError();
    return (_QWORD *)swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
    sub_211A4710C();
    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v14, v9);
    v21 = sub_211A47148();
    if (v2)
    {
      return (_QWORD *)((uint64_t (*)(char *, uint64_t))v20)(v17, v9);
    }
    else
    {
      v23 = v21;
      v24 = v22;
      if (qword_254AC7B30 != -1)
        swift_once();
      sub_211971BDC();
      sub_211A46F38();
      sub_21193B8F8(v23, v24);
      v20(v17, v9);
      v25 = *(_QWORD *)&v30[0];
      type metadata accessor for FMFDemoDataSource();
      v26 = (_QWORD *)swift_allocObject();
      v27 = MEMORY[0x24BEE4AF8];
      v26[4] = MEMORY[0x24BEE4AF8];
      v26[5] = v27;
      v26[6] = v27;
      v26[7] = v27;
      v26[2] = v25;
      type metadata accessor for FMFDemoDataGenerator();
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_211A4A900;
      *(_QWORD *)(v28 + 32) = 0x4024000000000000;
      v26[3] = v28;
      sub_211979358();
      sub_2119299DC(a2, (uint64_t)v30);
      type metadata accessor for FMFDemoInteractionController();
      swift_allocObject();
      return sub_2119A9868((uint64_t)v26, (uint64_t)a1, v30);
    }
  }
}

unint64_t sub_211971B98()
{
  unint64_t result;

  result = qword_254AC8CA0;
  if (!qword_254AC8CA0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50CE4, &type metadata for FMDemoManager.Error);
    atomic_store(result, (unint64_t *)&qword_254AC8CA0);
  }
  return result;
}

unint64_t sub_211971BDC()
{
  unint64_t result;

  result = qword_254AC8CA8;
  if (!qword_254AC8CA8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDemoContent, &type metadata for FMFDemoContent);
    atomic_store(result, (unint64_t *)&qword_254AC8CA8);
  }
  return result;
}

void FMFLocationAlert.fence.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FEA8]), sel_init);
  if (*(_QWORD *)(v0 + 8))
  {
    v9 = (void *)sub_211A478EC();
    objc_msgSend(v8, sel_setIdentifier_, v9);

  }
  v10 = type metadata accessor for FMFLocationAlert();
  if (*(_QWORD *)(v1 + *(int *)(v10 + 76) + 8))
  {
    v11 = (void *)sub_211A478EC();
    objc_msgSend(v8, sel_setFriendIdentifier_, v11);

  }
  FMFLocationAlert.recipients.getter();
  sub_21197248C();
  v12 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setRecipients_, v12);

  objc_msgSend(v8, sel_setActive_, 1);
  objc_msgSend(v8, sel_setRecurring_, *(unsigned __int8 *)(v1 + 43));
  sub_21192C6B8(v1 + *(int *)(v10 + 48), (uint64_t)v7, (uint64_t *)&unk_254ACC2E0);
  v13 = type metadata accessor for FMFSchedule();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v7, 1, v13) == 1)
  {
    sub_211923EE8((uint64_t)v7, (uint64_t *)&unk_254ACC2E0);
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_211966100();
    sub_211934758((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
  }
  objc_msgSend(v8, sel_setSchedule_, v14);

  v15 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setType_, v15);

  __asm { BR              X10 }
}

uint64_t sub_211971ED0()
{
  id *v0;
  uint64_t v1;
  void *v2;
  int *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  int v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;

  v5 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTrigger_, v5);

  if (*(_QWORD *)(v1 + v3[20] + 8))
  {
    v6 = sub_211A47934();
    v8 = v7;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v6;
    v9._object = v8;
    FMFDefaultLabel.init(rawValue:)(v9);
    v10 = *((unsigned __int8 *)v0 + 360);
    if (v10 != 5)
    {
      *((_BYTE *)v0 + 360) = v10;
      FMFDefaultLabel.localizedLabel.getter();
      swift_bridgeObjectRelease();
    }
    v11 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setLabel_, v11);

  }
  sub_21192DD68(v1 + v3[23], (uint64_t)(v0 + 90), &qword_254ACCB40);
  sub_21192DD68((uint64_t)(v0 + 90), (uint64_t)(v0 + 128), &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)(v0 + 128)) != 1)
  {
    memcpy(v0 + 45, v0 + 128, 0x130uLL);
    v12 = FMFAddress.placemark.getter();
    objc_msgSend(v2, sel_setPlacemark_, v12);

  }
  objc_msgSend(v2, sel_setLocationType_, *(unsigned __int8 *)(v1 + v3[21]));
  FMFLocationAlert.location.getter(v4);
  v13 = type metadata accessor for FMFLocation();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13) == 1)
  {
    sub_211923EE8(v4, (uint64_t *)&unk_254AC8CB0);
  }
  else
  {
    sub_21192DD68(v4 + *(int *)(v13 + 44), (uint64_t)v0, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v0, (uint64_t)(v0 + 45), &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)(v0 + 45)) == 1)
    {
      sub_211934758(v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    }
    else
    {
      v14 = v0[83];
      sub_211934758(v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      objc_msgSend(v2, sel_setLocation_, v14);

    }
  }
  return ((uint64_t (*)(uint64_t))((char *)sub_211972168 + 4
                                                                  * byte_211A4A914[*(unsigned __int8 *)(v1 + v3[15])]))(0x6E6564646948);
}

void *sub_211972168()
{
  uint64_t v0;
  void *v1;
  int *v2;
  void *v3;
  void *v4;
  void *v5;

  v3 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAcceptanceStatus_, v3);

  if (*(_QWORD *)(v0 + v2[13] + 8))
    v4 = (void *)sub_211A478EC();
  else
    v4 = 0;
  objc_msgSend(v1, sel_setCkRecordName_, v4);

  if (*(_QWORD *)(v0 + v2[14] + 8))
    v5 = (void *)sub_211A478EC();
  else
    v5 = 0;
  objc_msgSend(v1, sel_setCkRecordZoneOwnerName_, v5);

  objc_msgSend(v1, sel_setFromMe_, *(unsigned __int8 *)(v0 + v2[24]));
  return v1;
}

void FMFLocationAlert.recipients.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;

  v1 = type metadata accessor for FMFLocationAlert();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 68));
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    v4 = MEMORY[0x24BEE4AF8];
    if (v3)
    {
      v16 = MEMORY[0x24BEE4AF8];
      sub_211A47FF4();
      v5 = (void *)objc_opt_self();
      v6 = v2 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        v7 = (void *)sub_211A478EC();
        v8 = objc_msgSend(v5, sel_handleWithId_, v7);

        if (!v8)
          break;
        v6 += 16;
        swift_bridgeObjectRelease();
        sub_211A47FDC();
        sub_211A48000();
        sub_211A4800C();
        sub_211A47FE8();
        if (!--v3)
        {
          v4 = v16;
          goto LABEL_7;
        }
      }
      __break(1u);
      goto LABEL_17;
    }
LABEL_7:
    sub_2119724E0(v4);
  }
  v9 = *(_QWORD *)(v0 + *(int *)(v1 + 64));
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    v11 = MEMORY[0x24BEE4AF8];
    if (v10)
    {
      v17 = MEMORY[0x24BEE4AF8];
      sub_211A47FF4();
      v12 = (void *)objc_opt_self();
      v13 = v9 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        v14 = (void *)sub_211A478EC();
        v15 = objc_msgSend(v12, sel_handleWithId_, v14);

        if (!v15)
          break;
        v13 += 16;
        swift_bridgeObjectRelease();
        sub_211A47FDC();
        sub_211A48000();
        sub_211A4800C();
        sub_211A47FE8();
        if (!--v10)
        {
          v11 = v17;
          goto LABEL_14;
        }
      }
LABEL_17:
      __break(1u);
      return;
    }
LABEL_14:
    sub_2119724E0(v11);
  }
}

unint64_t sub_21197248C()
{
  unint64_t result;

  result = qword_254AC8CC0;
  if (!qword_254AC8CC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254AC8CC0);
  }
  return result;
}

uint64_t sub_2119724C8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 304);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_2119724E0(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_211A480A8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x212BE3DB4](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_211972D94(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_211A47AC0();
  }
  __break(1u);
  return result;
}

uint64_t sub_211972698(uint64_t a1)
{
  char **v1;
  size_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2119B0410(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_2119727E0(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_211A480A8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x212BE3DB4](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_211972F98(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_211A47AC0();
  }
  __break(1u);
  return result;
}

uint64_t sub_211972998(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_2119B0AB0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_211941128((uint64_t)v41, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, result);
    v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_211973358();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v13 = v42;
  v39 = v41[1];
  v40 = v41[0];
  v14 = v43;
  if (v44)
  {
    v18 = (v44 - 1) & v44;
    v19 = v43;
    v20 = __clz(__rbit64(v44)) | (v43 << 6);
    v38 = (unint64_t)(v42 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  v35 = v14 + 1;
  if (__OFADD__(v14, 1))
    goto LABEL_66;
  v38 = (unint64_t)(v13 + 64) >> 6;
  if (v35 >= v38)
    goto LABEL_13;
  v36 = *(_QWORD *)(v39 + 8 * v35);
  v19 = v14 + 1;
  if (!v36)
  {
    v19 = v14 + 2;
    if (v14 + 2 >= v38)
      goto LABEL_13;
    v36 = *(_QWORD *)(v39 + 8 * v19);
    if (!v36)
    {
      v19 = v14 + 3;
      if (v14 + 3 >= v38)
        goto LABEL_13;
      v36 = *(_QWORD *)(v39 + 8 * v19);
      if (!v36)
      {
        v19 = v14 + 4;
        if (v14 + 4 >= v38)
          goto LABEL_13;
        v36 = *(_QWORD *)(v39 + 8 * v19);
        if (!v36)
        {
          v19 = v14 + 5;
          if (v14 + 5 >= v38)
            goto LABEL_13;
          v36 = *(_QWORD *)(v39 + 8 * v19);
          if (!v36)
          {
            v37 = v14 + 6;
            do
            {
              if (v38 == v37)
                goto LABEL_13;
              v36 = *(_QWORD *)(v39 + 8 * v37++);
            }
            while (!v36);
            v19 = v37 - 1;
          }
        }
      }
    }
  }
  v18 = (v36 - 1) & v36;
  v20 = __clz(__rbit64(v36)) + (v19 << 6);
LABEL_18:
  v21 = *(_QWORD *)(v40 + 56) + 24 * v20;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(_BYTE *)(v21 + 16);
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v25 = v4[3];
    v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1)
      break;
    if (v2 < v26)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_2119B0AB0((_QWORD *)(v25 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v26 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v26)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v27 = (uint64_t)&v4[3 * v2 + 4];
    *(_QWORD *)v27 = v22;
    *(_QWORD *)(v27 + 8) = v23;
    *(_BYTE *)(v27 + 16) = v24 & 1;
    ++v2;
    if (v18)
    {
      v28 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v29 = v28 | (v19 << 6);
      goto LABEL_41;
    }
    v30 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v30 >= v38)
      goto LABEL_45;
    v31 = *(_QWORD *)(v39 + 8 * v30);
    v32 = v19 + 1;
    if (!v31)
    {
      v32 = v19 + 2;
      if (v19 + 2 >= v38)
        goto LABEL_45;
      v31 = *(_QWORD *)(v39 + 8 * v32);
      if (!v31)
      {
        v32 = v19 + 3;
        if (v19 + 3 >= v38)
          goto LABEL_45;
        v31 = *(_QWORD *)(v39 + 8 * v32);
        if (!v31)
        {
          v32 = v19 + 4;
          if (v19 + 4 >= v38)
            goto LABEL_45;
          v31 = *(_QWORD *)(v39 + 8 * v32);
          if (!v31)
          {
            v32 = v19 + 5;
            if (v19 + 5 >= v38)
              goto LABEL_45;
            v31 = *(_QWORD *)(v39 + 8 * v32);
            if (!v31)
            {
              v33 = v19 + 6;
              while (v38 != v33)
              {
                v31 = *(_QWORD *)(v39 + 8 * v33++);
                if (v31)
                {
                  v32 = v33 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v18 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
    v19 = v32;
LABEL_41:
    v34 = *(_QWORD *)(v40 + 56) + 24 * v29;
    v22 = *(_QWORD *)v34;
    v23 = *(_QWORD *)(v34 + 8);
    v24 = *(_BYTE *)(v34 + 16);
    if (v2 >= v26)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_211972D94(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2119733A4(&qword_254AC8CF8, &qword_254AC8CF0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_211958C38(&qword_254AC8CF0);
          v12 = sub_2119731A0(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21197248C();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_211972F98(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2119733A4(&qword_254AC8CE8, &qword_254AC8CE0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_211958C38(&qword_254AC8CE0);
          v12 = sub_2119731F8(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_211958C38(&qword_254AC8CD8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

void (*sub_2119731A0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_211973278(v6, a2, a3);
  return sub_2119731F4;
}

void (*sub_2119731F8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2119732EC(v6, a2, a3);
  return sub_2119731F4;
}

void sub_21197324C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_211973278(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x212BE3DA8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2119732E4;
  }
  __break(1u);
  return result;
}

void sub_2119732E4(id *a1)
{

}

uint64_t (*sub_2119732EC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x212BE3DA8](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return destroy for FMOSActivity;
  }
  __break(1u);
  return result;
}

uint64_t sub_211973358()
{
  return swift_release();
}

uint64_t sub_211973360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119733A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_21195E2C0(a2);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMFShowHideLocationAction.__allocating_init(hideLocation:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 17) = a1;
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t FMFShowHideLocationAction.init(hideLocation:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = a1;
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_211973428()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFShowHideLocationAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFShowHideLocationAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t FMFShowHideLocationAction.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FMFShowHideLocationAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFShowHideLocationAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFShowHideLocationAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFShowHideLocationAction.__allocating_init(hideLocation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

__n128 FMFUpdateMeDeviceAction.__allocating_init(meDevice:)(__n128 *a1)
{
  uint64_t v2;
  __n128 result;
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;

  v2 = swift_allocObject();
  result = *a1;
  v4 = a1[1].n128_u64[0];
  v5 = a1[1].n128_u64[1];
  v6 = a1[2].n128_u8[0];
  *(__n128 *)(v2 + 24) = *a1;
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = v5;
  *(_BYTE *)(v2 + 56) = v6;
  *(_BYTE *)(v2 + 16) = 0;
  return result;
}

uint64_t FMFUpdateMeDeviceAction.init(meDevice:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v3;
  *(_BYTE *)(v1 + 56) = v4;
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_211973664()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A48054();
  return 0;
}

void FMFUpdateMeDeviceAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFUpdateMeDeviceAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119737E4()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMFUpdateMeDeviceAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFUpdateMeDeviceAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdateMeDeviceAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFUpdateMeDeviceAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFUpdateMeDeviceAction.__allocating_init(meDevice:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_2119738A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_2119738B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2119738B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2119738C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2119738C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_2119738D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_2119738D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_2119738E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t sub_2119738E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t FMFUpdateLocationAlertAction.__allocating_init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 *a18)
{
  int v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a4 & 1;
  v24 = swift_allocObject();
  v25 = sub_211973C60(a1, a2, a3, v23, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, v24);
  swift_release();
  return v25;
}

uint64_t FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  unsigned __int8 *v19;
  uint64_t v20;

  v17 = sub_211973C60(a1, a2, a3, a4 & 1, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, v19, v20);
  swift_release();
  return v17;
}

uint64_t sub_211973A38()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47F70();
  sub_211A479B8();
  type metadata accessor for FMFLocationAlert();
  sub_211A48054();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFUpdateLocationAlertAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFUpdateLocationAlertAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211973BFC()
{
  uint64_t v0;

  return sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
}

uint64_t FMFUpdateLocationAlertAction.deinit()
{
  uint64_t v0;

  sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
  return v0;
}

uint64_t FMFUpdateLocationAlertAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
  return swift_deallocClassInstance();
}

uint64_t sub_211973C60(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void *a7, unsigned __int8 *a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 *a17, uint64_t a18)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  char v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v60;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  void *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  _BYTE v81[304];
  _BYTE v82[312];

  v63 = a6;
  v64 = a7;
  v62 = a4;
  v77 = a2;
  v78 = a3;
  v76 = a12;
  v73 = a18;
  v21 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v21, v22);
  v75 = &v61[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v72 = &v61[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = type metadata accessor for FMFLocationAlert();
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v31 = &v61[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v74 = &v61[-v34];
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = &v61[-v37];
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = &v61[-v40];
  sub_21196F558(a5, (uint64_t)v82);
  v42 = *a8;
  v43 = *a17;
  sub_211974170(a1, (uint64_t)v41);
  v65 = v42;
  if (a9 == 2)
    v44 = v41[43];
  else
    v44 = a9 & 1;
  v45 = v73;
  v69 = a15;
  v68 = a14;
  v67 = a13;
  v66 = a11;
  swift_retain();
  sub_21197403C((uint64_t)v41);
  sub_211974170(a1, (uint64_t)v38);
  LODWORD(v73) = v44;
  v70 = a16;
  v71 = a10;
  if (v43 == 3)
  {
    if ((v38[40] & 1) != 0)
    {
      v46 = (uint64_t)v31;
      v47 = a1;
      v48 = sub_211A48258();
      swift_bridgeObjectRelease();
      sub_21197403C((uint64_t)v38);
      LOBYTE(v43) = 0;
      v50 = v63;
      v49 = v64;
      v51 = v62;
      if ((v48 & v44 & 1) != 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    v46 = (uint64_t)v31;
    v47 = a1;
    swift_bridgeObjectRelease();
    sub_21197403C((uint64_t)v38);
    v50 = v63;
    v49 = v64;
    v51 = v62;
    if ((v44 & 1) == 0)
    {
LABEL_11:
      LOBYTE(v43) = 2;
      goto LABEL_12;
    }
    LOBYTE(v43) = 0;
  }
  else
  {
    v46 = (uint64_t)v31;
    v47 = a1;
    sub_21197403C((uint64_t)v38);
    v50 = v63;
    v49 = v64;
    v51 = v62;
  }
LABEL_12:
  v52 = v51 & 1;
  v53 = v46;
  sub_211974170(v47, v46);
  sub_21196F558((uint64_t)v82, (uint64_t)v81);
  v80 = v65;
  v54 = v76;
  v55 = v72;
  sub_2119741B4(v76, (uint64_t)v72);
  v79 = v43;
  v56 = sub_211A47208();
  v57 = (uint64_t)v75;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v75, 1, 1, v56);
  v60 = (uint64_t)v55;
  v58 = v74;
  FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v53, v77, v78, v52, (uint64_t)v81, v50, v49, &v80, (uint64_t)v74, 2, v73, v60, v71, v66, v67, v68, v69, v70, &v79,
    v57);
  sub_2119741FC(v54);
  sub_21197403C(v47);
  sub_21197423C((uint64_t)v58, v45 + OBJC_IVAR____TtC7FMFCore28FMFUpdateLocationAlertAction_locationAlert);
  *(_BYTE *)(v45 + 16) = 1;
  return v45;
}

uint64_t sub_21197403C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_211974078()
{
  return type metadata accessor for FMFUpdateLocationAlertAction();
}

uint64_t type metadata accessor for FMFUpdateLocationAlertAction()
{
  uint64_t result;

  result = qword_254AC8EC8;
  if (!qword_254AC8EC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119740BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFLocationAlert();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFUpdateLocationAlertAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFUpdateLocationAlertAction.__allocating_init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v4 + 136))(a1, a2, a3, a4 & 1);
}

uint64_t sub_211974170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119741B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119741FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21197423C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFLocationAlert();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_211974280(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2119742C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211974358 + 4 * byte_211A4AA45[a2]))(0x6D614E7473726966);
}

uint64_t sub_211974358(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D614E7473726966 && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_211974430(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_21197443C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1701667182;
    else
      v3 = 0x6143654D6F747561;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xED0000656C626170;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1701667182;
      else
        v6 = 0x6143654D6F747561;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xED0000656C626170;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE200000000000000;
    v3 = 25705;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE200000000000000;
  if (v3 != 25705)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211974544(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1701869940;
  else
    v3 = 0x65756C6176;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1701869940;
  else
    v5 = 0x65756C6176;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_2119745DC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21197462C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211974710 + 4 * byte_211A4AA52[a2]))(0x656C746974);
}

uint64_t sub_211974710(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_211974858(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2119748A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211974908 + 4 * byte_211A4AA5E[a2]))(1953069157);
}

uint64_t sub_211974908(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1953069157 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2119749B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211974A10(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211974AF4 + 4 * byte_211A4AA6B[a2]))(0x614D737574617473);
}

uint64_t sub_211974AF4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x614D737574617473 && v1 == 0xE900000000000070)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_211974C44(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x776F6C6C616873;
    else
      v3 = 1885693284;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x776F6C6C616873;
      else
        v6 = 1885693284;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211974D3C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x744F796669746F4ELL;
  else
    v3 = 0x654D796669746F4ELL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEC00000073726568;
  if ((a2 & 1) != 0)
    v5 = 0x744F796669746F4ELL;
  else
    v5 = 0x654D796669746F4ELL;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000073726568;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_211974DE8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6956776F646E6977;
  else
    v3 = 0x736F4D746E6F7266;
  if (v2)
    v4 = 0xEF776F646E695774;
  else
    v4 = 0xED0000656C626973;
  if ((a2 & 1) != 0)
    v5 = 0x6956776F646E6977;
  else
    v5 = 0x736F4D746E6F7266;
  if ((a2 & 1) != 0)
    v6 = 0xED0000656C626973;
  else
    v6 = 0xEF776F646E695774;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_211974EA4(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  char v6;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x8000000211A52FC0;
    else
      v2 = 0x8000000211A52FE0;
    v3 = 0xD000000000000011;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x8000000211A52FC0;
      else
        v5 = 0x8000000211A52FE0;
      if (v3 != 0xD000000000000011)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v2 = 0xE800000000000000;
    v3 = 0x6E6F697461636F6CLL;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v5 = 0xE800000000000000;
  if (v3 != 0x6E6F697461636F6CLL)
  {
LABEL_15:
    v6 = sub_211A48258();
    goto LABEL_16;
  }
LABEL_13:
  if (v2 != v5)
    goto LABEL_15;
  v6 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_211974FA4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x737574617473;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x737574617473;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_211975038(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211975070(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211975118 + 4 * byte_211A4AA7B[a2]))(0x6C6562616CLL);
}

uint64_t sub_211975118(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6562616CLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_21197521C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x646E65697266;
    else
      v3 = 0x736573696D657270;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x646E65697266;
      else
        v6 = 0x736573696D657270;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x6C61636F6CLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x6C61636F6CLL)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_211975324(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211975374(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211975434 + 4 * byte_211A4AA89[a2]))(0x64757469676E6F6CLL);
}

uint64_t sub_211975434(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64757469676E6F6CLL && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_21197554C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E69776F6C6C6F66;
    else
      v3 = 0x7463657269646962;
    if (v2 == 1)
      v4 = 0xE900000000000067;
    else
      v4 = 0xED00006C616E6F69;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E69776F6C6C6F66;
      else
        v6 = 0x7463657269646962;
      if (v5 == 1)
        v7 = 0xE900000000000067;
      else
        v7 = 0xED00006C616E6F69;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x7265776F6C6C6F66;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v3 != 0x7265776F6C6C6F66)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211975684(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726564726FLL;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x726564726FLL;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_211975718(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x626C6C614378616DLL;
  else
    v2 = 0x626C6C61436E696DLL;
  if ((a2 & 1) != 0)
    v3 = 0x626C6C614378616DLL;
  else
    v3 = 0x626C6C61436E696DLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_211A48258();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2119757AC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x676E69646E6550;
    else
      v3 = 0x6465747065636341;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x676E69646E6550;
      else
        v6 = 0x6465747065636341;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x6E6564646948;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x6E6564646948)
  {
LABEL_21:
    v8 = sub_211A48258();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2119758BC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6F74737563;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6F74737563;
  else
    v5 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_21197595C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2119759C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211975A54 + 4 * byte_211A4AA95[a2]))(0x6B726F773C21245FLL);
}

uint64_t sub_211975A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6B726F773C21245FLL && v2 == v1)
    v3 = 1;
  else
    v3 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_211975B34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211975B7C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211975C20 + 4 * byte_211A4AA9F[a2]))(0x6F43726576726573);
}

uint64_t sub_211975C20(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F43726576726573 && v1 == 0xED0000747865746ELL)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_211975D0C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x454E4F5952455645;
  else
    v3 = 0x53444E45495246;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x454E4F5952455645;
  else
    v5 = 0x53444E45495246;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_211975DB0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_211975DFC(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211975E98 + 4 * byte_211A4AAAA[a2]))(a3 - 2);
}

uint64_t sub_211975E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 2 && v3 == 0x8000000211A52B30)
    v4 = 1;
  else
    v4 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_211975F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = FMFConfigValue.rawValue.getter();
  v2 = v1;
  if (v0 == FMFConfigValue.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_211976010(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211976058(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2119760F0 + 4 * byte_211A4AAB5[a2]))(0x5441434552504544);
}

uint64_t sub_2119760F0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5441434552504544 && v1 == 0xEA00000000004445)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2119761D0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21197622C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2119762D4 + 4 * byte_211A4AAC1[a2]))(0x6E694D7472617473);
}

uint64_t sub_2119762D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E694D7472617473 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2119763D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_211976410(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211976488 + 4 * byte_211A4AACC[a2]))(0x6E6F697461636F6CLL);
}

uint64_t sub_211976488(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E6F697461636F6CLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_211976540(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21197659C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_211976610 + 4 * byte_211A4AAD4[a2]))(0x4E79616C70736964);
}

uint64_t sub_211976610(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4E79616C70736964 && v1 == 0xEB00000000656D61)
    v2 = 1;
  else
    v2 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t FMFAddLocationAlertAction.__allocating_init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 *a11, unsigned __int8 *a12, unsigned __int8 *a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v23;
  uint64_t v24;

  v23 = swift_allocObject();
  FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(a1, a2, a3, a4, a5, a6, v24, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  return v23;
}

uint64_t FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 *a11, unsigned __int8 *a12, unsigned __int8 *a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  id v59;
  uint64_t v60;
  uint8_t *v61;
  uint8_t *v62;
  char v64;
  id v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  _BOOL4 v69;
  uint8_t *v70;
  uint64_t v71;
  id v72;
  _QWORD v73[3];
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  id v78;
  int v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[360];
  _BYTE v93[304];
  _BYTE v94[360];
  _QWORD v95[46];

  v83 = a1;
  v89 = a5;
  v90 = a2;
  v87 = a3;
  v86 = a17;
  v88 = a15;
  v91 = a19;
  v21 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v21, v22);
  v81 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FMFLocationAlert();
  MEMORY[0x24BDAC7A8](v24, v25);
  v82 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v80 = (char *)v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v31);
  v84 = (char *)v73 - v32;
  swift_bridgeObjectRelease();
  v79 = *a11;
  v33 = *a12;
  v34 = *a13;
  v35 = a6;
  v36 = type metadata accessor for FMFLocation();
  sub_21192DD68(a6 + *(int *)(v36 + 44), (uint64_t)v94, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v94, (uint64_t)v95, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v95) != 1)
  {
    v77 = v34;
    v45 = (void *)v95[38];
    sub_21192DD68((uint64_t)v94, (uint64_t)v92, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v92, (uint64_t)v93, &qword_254ACCB40);
    if (sub_21196FB8C((uint64_t)v93) == 1)
    {
      v46 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v85;
      v42 = v88;
      if (qword_254AC7B80 != -1)
        swift_once();
      v47 = sub_211A47748();
      sub_21194F3E0(v47, (uint64_t)qword_254ADC7E8);
      v48 = sub_211A47724();
      v49 = sub_211A47D24();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_21190D000, v48, v49, "Location must have an address.", v50, 2u);
        MEMORY[0x212BE48A0](v50, -1, -1);
      }

      sub_2119776BC();
      swift_allocError();
      v52 = 0xD000000000000010;
      v53 = "location.address";
LABEL_22:
      *(_QWORD *)v51 = v52;
      *(_QWORD *)(v51 + 8) = (unint64_t)(v53 - 32) | 0x8000000000000000;
      *(_QWORD *)(v51 + 16) = 0;
      *(_QWORD *)(v51 + 24) = 0;
      *(_BYTE *)(v51 + 32) = 0;
LABEL_23:
      swift_willThrow();

      goto LABEL_24;
    }
    v78 = v45;
    v76 = v33;
    v41 = v85;
    v54 = v90;
    if (!a4 || !*(_QWORD *)(a4 + 16))
    {
      if (v89)
      {
        if (!(*(_QWORD *)(v89 + 16) | v90))
        {
LABEL_17:
          v46 = v78;
          sub_21196F7C4((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21196F7C4((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
          if (qword_254AC7B80 != -1)
            swift_once();
          v55 = sub_211A47748();
          sub_21194F3E0(v55, (uint64_t)qword_254ADC7E8);
          v56 = sub_211A47724();
          v57 = sub_211A47D24();
          v58 = os_log_type_enabled(v56, v57);
          v42 = v88;
          if (v58)
          {
            v59 = v46;
            v60 = v35;
            v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v61 = 0;
            _os_log_impl(&dword_21190D000, v56, v57, "Email, phone numbers, friendId all cannot be empty.", v61, 2u);
            v62 = v61;
            v35 = v60;
            v46 = v59;
            MEMORY[0x212BE48A0](v62, -1, -1);
          }

          sub_2119776BC();
          swift_allocError();
          v52 = 0xD00000000000001ELL;
          v53 = "emails, phoneNumbers, friendId";
          goto LABEL_22;
        }
      }
      else if (!v90)
      {
        goto LABEL_17;
      }
    }
    if (v76)
    {
      v64 = sub_211A48258();
      v65 = v78;
      swift_retain();
      sub_21196F7C4((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
      swift_bridgeObjectRelease();
      if ((v64 & 1) != 0 && !v90)
        goto LABEL_29;
    }
    else
    {
      v72 = v78;
      swift_retain();
      sub_21196F7C4((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
      swift_bridgeObjectRelease();
      if (!v54)
      {
LABEL_29:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21196F7C4((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
        if (qword_254AC7B80 != -1)
          swift_once();
        v66 = sub_211A47748();
        sub_21194F3E0(v66, (uint64_t)qword_254ADC7E8);
        v67 = sub_211A47724();
        v68 = sub_211A47D24();
        v69 = os_log_type_enabled(v67, v68);
        v42 = v88;
        v46 = v78;
        if (v69)
        {
          v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v70 = 0;
          _os_log_impl(&dword_21190D000, v67, v68, "Alert me should be with a friendId only.", v70, 2u);
          MEMORY[0x212BE48A0](v70, -1, -1);
        }

        sub_2119776BC();
        swift_allocError();
        *(_OWORD *)v71 = xmmword_211A4AB30;
        *(_OWORD *)(v71 + 16) = xmmword_211A4AB40;
        *(_BYTE *)(v71 + 32) = 1;
        goto LABEL_23;
      }
    }
    v73[1] = a18;
    v73[2] = a16;
    v74 = a14;
    v73[0] = a9;
    v75 = a6;
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_254AC7B80 != -1)
    swift_once();
  v37 = sub_211A47748();
  sub_21194F3E0(v37, (uint64_t)qword_254ADC7E8);
  v38 = sub_211A47724();
  v39 = sub_211A47D24();
  v40 = os_log_type_enabled(v38, v39);
  v41 = v85;
  v42 = v88;
  if (v40)
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_21190D000, v38, v39, "Location must have an coordinates.", v43, 2u);
    MEMORY[0x212BE48A0](v43, -1, -1);
  }

  sub_2119776BC();
  swift_allocError();
  *(_QWORD *)v44 = 0xD000000000000013;
  *(_QWORD *)(v44 + 8) = 0x8000000211A54270;
  *(_QWORD *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = 0;
  *(_BYTE *)(v44 + 32) = 0;
  swift_willThrow();
LABEL_24:
  sub_2119741FC(v42);
  sub_211934758(v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  type metadata accessor for FMFAddLocationAlertAction();
  swift_deallocPartialClassInstance();
  return v41;
}

uint64_t sub_21197746C()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47F70();
  sub_211A479B8();
  type metadata accessor for FMFLocationAlert();
  sub_211A48054();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFAddLocationAlertAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFAddLocationAlertAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211977630()
{
  uint64_t v0;

  return sub_211934758(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
}

uint64_t FMFAddLocationAlertAction.deinit()
{
  uint64_t v0;

  sub_211934758(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  return v0;
}

uint64_t FMFAddLocationAlertAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_211934758(v0 + OBJC_IVAR____TtC7FMFCore25FMFAddLocationAlertAction_locationAlert, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  return swift_deallocClassInstance();
}

unint64_t sub_2119776BC()
{
  unint64_t result;

  result = qword_254AC8F80;
  if (!qword_254AC8F80)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4AC88, &type metadata for ArgumentsError);
    atomic_store(result, (unint64_t *)&qword_254AC8F80);
  }
  return result;
}

uint64_t type metadata accessor for FMFAddLocationAlertAction()
{
  uint64_t result;

  result = qword_254AC8FB0;
  if (!qword_254AC8FB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21197773C()
{
  return type metadata accessor for FMFAddLocationAlertAction();
}

uint64_t method lookup function for FMFAddLocationAlertAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFAddLocationAlertAction.__allocating_init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 136))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_211977798()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  v3 = (void *)sub_211A478EC();
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, v3, 0);

  v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x24BE63740], 0);

  sub_211962AB8(v0 + 16);
  return v0;
}

uint64_t sub_211977878()
{
  sub_211977798();
  return swift_deallocClassInstance();
}

uint64_t sub_211977898()
{
  return swift_deallocObject();
}

uint64_t sub_2119778A8()
{
  return swift_deallocObject();
}

void sub_211977A80()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  id v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  char *v24;
  char *v25;
  id v26;
  _QWORD aBlock[6];
  objc_super v28;

  v1 = v0;
  v2 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A47274();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  v28.receiver = v0;
  v28.super_class = v11;
  objc_msgSendSuper2(&v28, sel_start);
  v26 = (id)objc_opt_self();
  v12 = objc_msgSend(v26, sel_sharedService);
  v13 = objc_msgSend(v12, sel_defaultTraits);

  sub_21197847C();
  v14 = &v1[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request];
  sub_211A084F8(*(id *)&v1[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request + 16]);
  v16 = v15;
  v17 = type metadata accessor for FMReverseGeocodingRequest();
  sub_211964AFC((uint64_t)&v14[*(int *)(v17 + 24)], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2119784B8((uint64_t)v5);
  }
  else
  {
    v25 = v1;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_211A47238();
    sub_211A4725C();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_clearDeviceDisplayLanguages);
    if (v13)
    {
      v18 = v13;
      v19 = (void *)sub_211A478EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_addDeviceDisplayLanguage_, v19);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_bridgeObjectRelease();
    }
    v1 = v25;
  }
  if (v14[*(int *)(v17 + 32)] == 1 && v16)
    objc_msgSend(v16, sel_setHorizontalAccuracy_, 1100.0);
  v20 = objc_msgSend(v26, sel_sharedService);
  v21 = objc_msgSend(v20, sel_ticketForReverseGeocodeLocation_traits_, v16, v13);

  if (v21)
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v1;
    aBlock[4] = sub_21197851C;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_211978264;
    aBlock[3] = &unk_24CCC7158;
    v23 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    v24 = v1;
    swift_release();
    objc_msgSend(v21, sel_submitWithHandler_timeout_networkActivity_, v23, 25, 0);
    swift_unknownObjectRelease_n();

    _Block_release(v23);
  }
  else
  {

  }
}

void sub_211977DE4(unint64_t a1, id a2, char *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  char **p_type;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  void (*v21)(_QWORD, id);
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void (*v29)(uint64_t, id);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v6 = &unk_254AC7000;
  v7 = &unk_254ADC000;
  p_type = &stru_24CCDDFF0.type;
  if (a2)
  {
    v9 = a2;
    if (qword_254AC7B88 != -1)
      swift_once();
    v10 = sub_211A47748();
    sub_21194F3E0(v10, (uint64_t)qword_254ADC800);
    v11 = a2;
    v12 = a2;
    v13 = sub_211A47724();
    v14 = sub_211A47D24();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v31 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getErrorValue();
      v17 = sub_211A482DC();
      v33 = sub_211950A9C(v17, v18, &v31);
      v7 = (_QWORD *)&unk_254ADC000;
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v13, v14, "FMReverseGeocodingOperation: reverse geocoding completed with error: %s", v15, 0xCu);
      swift_arrayDestroy();
      v19 = v16;
      p_type = (char **)(&stru_24CCDDFF0 + 16);
      MEMORY[0x212BE48A0](v19, -1, -1);
      v20 = v15;
      v6 = (_QWORD *)&unk_254AC7000;
      MEMORY[0x212BE48A0](v20, -1, -1);
    }
    else
    {

    }
    v21 = *(void (**)(_QWORD, id))&a3[v7[199]];
    v22 = a2;
    v21(0, a2);

    objc_msgSend(a3, p_type[437], 1);
  }
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_211A480A8())
      {
LABEL_11:
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x212BE3DA8](0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (v6[369] == -1)
        {
LABEL_15:
          v24 = sub_211A47748();
          sub_21194F3E0(v24, (uint64_t)qword_254ADC800);
          swift_unknownObjectRetain_n();
          v25 = sub_211A47724();
          v26 = sub_211A47D30();
          if (os_log_type_enabled(v25, v26))
          {
            v27 = (uint8_t *)swift_slowAlloc();
            v28 = swift_slowAlloc();
            *(_DWORD *)v27 = 136315138;
            v31 = 0;
            v32 = 0xE000000000000000;
            v33 = v28;
            sub_211958C38((uint64_t *)&unk_254AC9210);
            sub_211A48054();
            v31 = sub_211950A9C(v31, v32, &v33);
            v7 = (_QWORD *)&unk_254ADC000;
            p_type = (char **)(&stru_24CCDDFF0 + 16);
            sub_211A47E2C();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21190D000, v25, v26, "FMReverseGeocodingOperation: reverse geocoding completed with item: %s", v27, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x212BE48A0](v28, -1, -1);
            MEMORY[0x212BE48A0](v27, -1, -1);

          }
          else
          {

            swift_unknownObjectRelease_n();
          }
          v29 = *(void (**)(uint64_t, id))&a3[v7[199]];
          v30 = swift_unknownObjectRetain();
          v29(v30, a2);
          swift_unknownObjectRelease();
          objc_msgSend(a3, p_type[437], 1);
          swift_unknownObjectRelease();
          return;
        }
LABEL_24:
        swift_once();
        goto LABEL_15;
      }
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_211978264(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_211958C38((uint64_t *)&unk_254AC9210);
    v4 = sub_211A47AA8();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_211978344()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMReverseGeocodingOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2119783B4()
{
  return type metadata accessor for FMReverseGeocodingOperation();
}

uint64_t type metadata accessor for FMReverseGeocodingOperation()
{
  uint64_t result;

  result = qword_254AC9190;
  if (!qword_254AC9190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119783F8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMReverseGeocodingRequest();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_21197847C()
{
  unint64_t result;

  result = qword_254AC9208;
  if (!qword_254AC9208)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254AC9208);
  }
  return result;
}

uint64_t sub_2119784B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC9200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2119784F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_21197851C(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_211977DE4(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_211978524(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMReverseGeocodingRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMFShareLocationAction.__allocating_init(handles:friendId:duration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 40) = a3;
  v9 = v8 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  v10 = sub_211A4746C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a4, v10);
  *(_BYTE *)(v8 + 16) = 1;
  return v8;
}

uint64_t FMFShareLocationAction.init(handles:friendId:duration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a3;
  v6 = v4 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  v7 = sub_211A4746C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
  *(_BYTE *)(v4 + 16) = 1;
  return v4;
}

uint64_t sub_211978650()
{
  uint64_t v0;

  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x212BE38C8](v0, MEMORY[0x24BEE0D00]);
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4746C();
  sub_2119787C8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_2119787C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC9220;
  if (!qword_254AC9220)
  {
    v1 = sub_211A4746C();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BE31F30], v1);
    atomic_store(result, (unint64_t *)&qword_254AC9220);
  }
  return result;
}

void FMFShareLocationAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFShareLocationAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211978868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  v2 = sub_211A4746C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t FMFShareLocationAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  v2 = sub_211A4746C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FMFShareLocationAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMFShareLocationAction_duration;
  v2 = sub_211A4746C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_211978968()
{
  return type metadata accessor for FMFShareLocationAction();
}

uint64_t type metadata accessor for FMFShareLocationAction()
{
  uint64_t result;

  result = qword_254AC9250;
  if (!qword_254AC9250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119789AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A4746C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFShareLocationAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFShareLocationAction.__allocating_init(handles:friendId:duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_211978A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v2 = sub_211A4728C();
  v58 = *(_QWORD *)(v2 - 8);
  v59 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v57 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A47298();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v54 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47280();
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211958C38(&qword_254AC7C38);
  MEMORY[0x24BDAC7A8](v11, v12);
  v49 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254AC9318);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_211A46FD4();
  v51 = *(_QWORD *)(v18 - 8);
  v52 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v50 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_211A47208();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_211A472BC();
  v26 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v27);
  v29 = (char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_211A4746C();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v32);
  v34 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v34, v63, v30);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v34, v30);
  if (v35 == *MEMORY[0x24BE31F10])
  {
    sub_211A471B4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
  }
  else
  {
    v47 = v22;
    v48 = v21;
    v63 = a1;
    if (v35 == *MEMORY[0x24BE31F18])
    {
      sub_211A472A4();
      sub_211A471FC();
      v46 = v26;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v17, 1, 1, v60);
      v37 = sub_211A47304();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v49, 1, 1, v37);
      v38 = v50;
      sub_211A46FC8();
      v39 = v53;
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v53, *MEMORY[0x24BDCF020], v62);
      v41 = v54;
      v40 = v55;
      v42 = v56;
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, *MEMORY[0x24BDCF0B0], v56);
      v44 = v57;
      v43 = v58;
      v45 = v59;
      (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, *MEMORY[0x24BDCF068], v59);
      sub_211A472B0();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v62);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v29, v60);
    }
    else if (v35 == *MEMORY[0x24BE31F08])
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v63, 1, 1, v48);
    }
    else
    {
      result = sub_211A4824C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_211978F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ArgumentsError(uint64_t a1)
{
  return sub_211978F6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_211978F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ArgumentsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_211978F2C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ArgumentsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_211978F2C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_211978F6C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ArgumentsError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_211978F6C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentsError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_211979150(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_211979158(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentsError()
{
  return &type metadata for ArgumentsError;
}

BOOL sub_211979180(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, a1);
  v7 = sub_211A48234();
  if (v7)
  {
    v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  }
  else
  {
    v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9, v5, a1);
  }
  v10 = (void *)sub_211A470D0();

  v11 = sub_211979274();
  return v11;
}

BOOL sub_211979274()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;

  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_211A47910();
  v4 = v3;

  if (v2 == sub_211A47910() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_211A48258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  return (uint64_t)objc_msgSend(v0, sel_code) >= 500 && (uint64_t)objc_msgSend(v0, sel_code) < 600;
}

uint64_t sub_211979358()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  int v7;
  char v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t j;
  int v17;
  char v18;
  char v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD __dst[51];
  uint64_t v39;

  v1 = v0;
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v3 - 1;
    v5 = MEMORY[0x24BEE4AF8];
    for (i = 32; ; i += 408)
    {
      memcpy(__dst, (const void *)(v2 + i), sizeof(__dst));
      v7 = LOBYTE(__dst[2]);
      if (LOBYTE(__dst[2]))
      {
        if (LOBYTE(__dst[2]) != 1)
          break;
      }
      v8 = sub_211A48258();
      sub_21197A5E0((uint64_t)__dst);
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        goto LABEL_12;
      if (!v7)
        goto LABEL_11;
      v9 = sub_211A48258();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        sub_21197A740((uint64_t)__dst);
        if (!v4)
          goto LABEL_18;
        goto LABEL_17;
      }
LABEL_12:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_211A267D0(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v39;
      }
      v12 = *(_QWORD *)(v5 + 16);
      v11 = *(_QWORD *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_211A267D0(v11 > 1, v12 + 1, 1);
        v5 = v39;
      }
      *(_QWORD *)(v5 + 16) = v12 + 1;
      memcpy((void *)(v5 + 408 * v12 + 32), __dst, 0x198uLL);
      if (!v4)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
LABEL_17:
      --v4;
    }
    sub_21197A5E0((uint64_t)__dst);
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v5 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_retain();
  v36 = sub_211979D0C(v5);
  swift_release();
  swift_release();
  v13 = *(_QWORD *)(v2 + 16);
  v37 = v1;
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = v13 - 1;
    v15 = MEMORY[0x24BEE4AF8];
    for (j = 32; ; j += 408)
    {
      memcpy(__dst, (const void *)(v2 + j), sizeof(__dst));
      v17 = LOBYTE(__dst[2]);
      if (LOBYTE(__dst[2]))
      {
        if (LOBYTE(__dst[2]) != 1)
          break;
      }
      v18 = sub_211A48258();
      sub_21197A5E0((uint64_t)__dst);
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_31;
      if (v17)
        goto LABEL_30;
      v19 = sub_211A48258();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        sub_21197A740((uint64_t)__dst);
        if (!v14)
          goto LABEL_37;
        goto LABEL_36;
      }
LABEL_31:
      v20 = swift_isUniquelyReferenced_nonNull_native();
      v39 = v15;
      if ((v20 & 1) == 0)
      {
        sub_211A267D0(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v39;
      }
      v22 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_211A267D0(v21 > 1, v22 + 1, 1);
        v15 = v39;
      }
      *(_QWORD *)(v15 + 16) = v22 + 1;
      memcpy((void *)(v15 + 408 * v22 + 32), __dst, 0x198uLL);
      if (!v14)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
LABEL_36:
      --v14;
    }
    sub_21197A5E0((uint64_t)__dst);
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v15 = MEMORY[0x24BEE4AF8];
LABEL_39:
  swift_retain();
  v23 = sub_211979F9C(v15);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = sub_21197A22C(v2);
  swift_bridgeObjectRelease();
  swift_release();
  v25 = *(_QWORD *)(v2 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  if (v25)
  {
    v34 = v24;
    v35 = v23;
    __dst[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211941794(0, v25, 0);
    v26 = __dst[0];
    v27 = (uint64_t *)(v2 + 40);
    do
    {
      v28 = *(v27 - 1);
      v29 = *v27;
      __dst[0] = v26;
      v31 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v31 >= v30 >> 1)
      {
        sub_211941794(v30 > 1, v31 + 1, 1);
        v26 = __dst[0];
      }
      v27 += 51;
      *(_QWORD *)(v26 + 16) = v31 + 1;
      v32 = v26 + 24 * v31;
      *(_QWORD *)(v32 + 32) = v28;
      *(_QWORD *)(v32 + 40) = v29;
      *(_BYTE *)(v32 + 48) = 0;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v24 = v34;
    v23 = v35;
  }
  v37[4] = v36;
  v37[5] = v23;
  v37[6] = v24;
  v37[7] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119798D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  if (qword_254AC7B80 != -1)
    swift_once();
  v4 = sub_211A47748();
  sub_21194F3E0(v4, (uint64_t)qword_254ADC7E8);
  v5 = sub_211A47724();
  v6 = sub_211A47D30();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_21190D000, v5, v6, "FMFDemoDataSource: Recalculating state for demo content.", v7, 2u);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }

  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_2119ABE28(v8, v9, v10, v11, a1);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[4] = v12;
  v2[5] = v14;
  v2[6] = v16;
  v2[7] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211979A88()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoDataSource()
{
  return objc_opt_self();
}

uint64_t destroy for FMFDemoDataState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FMFDemoDataState(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FMFDemoDataState(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FMFDemoDataState(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFDemoDataState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFDemoDataState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoDataState()
{
  return &type metadata for FMFDemoDataState;
}

uint64_t sub_211979D0C(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  int64_t v25;
  uint64_t v26;
  _QWORD v27[52];
  uint64_t v28;

  v3 = (int *)type metadata accessor for FMFIntermediateFriend();
  v23 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v20[1] = v1;
    v28 = MEMORY[0x24BEE4AF8];
    sub_211A267A4(0, v7, 0);
    v9 = (char *)(a1 + 32);
    v25 = v7 - 1;
    v26 = v28;
    v22 = xmmword_211A4A230;
    v21 = xmmword_211A4ACD0;
    while (1)
    {
      v24 = v9;
      memcpy(v27, v9, 0x198uLL);
      v10 = v27[0];
      v11 = v27[1];
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v22;
      *(_QWORD *)(v12 + 32) = v10;
      *(_QWORD *)(v12 + 40) = v11;
      v13 = &v6[v3[10]];
      swift_bridgeObjectRetain_n();
      sub_21197A5E0((uint64_t)v27);
      sub_211A471FC();
      v14 = sub_211A47208();
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
      v15(v13, 0, 1, v14);
      v16 = &v6[v3[11]];
      sub_211A471FC();
      v15(v16, 0, 1, v14);
      v15(&v6[v3[12]], 1, 1, v14);
      v6[v3[16]] = 2;
      *(_QWORD *)v6 = v10;
      *((_QWORD *)v6 + 1) = v11;
      *((_QWORD *)v6 + 2) = v10;
      *((_QWORD *)v6 + 3) = v11;
      *((_QWORD *)v6 + 4) = v12;
      *((_QWORD *)v6 + 5) = &unk_24CCC3C20;
      *((_OWORD *)v6 + 3) = v21;
      *((_QWORD *)v6 + 8) = v10;
      *((_QWORD *)v6 + 9) = v11;
      v6[v3[13]] = 1;
      v6[v3[14]] = 0;
      v6[v3[15]] = 0;
      *(_QWORD *)&v6[v3[17]] = 0;
      swift_bridgeObjectRetain();
      sub_21197A740((uint64_t)v27);
      v8 = v26;
      v28 = v26;
      v18 = *(_QWORD *)(v26 + 16);
      v17 = *(_QWORD *)(v26 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_211A267A4(v17 > 1, v18 + 1, 1);
        v8 = v28;
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      sub_211942810((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      if (!v25)
        break;
      v9 = v24 + 408;
      --v25;
      v26 = v8;
    }
  }
  return v8;
}

uint64_t sub_211979F9C(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  int64_t v25;
  uint64_t v26;
  _QWORD v27[52];
  uint64_t v28;

  v3 = (int *)type metadata accessor for FMFIntermediateFriend();
  v23 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v20[1] = v1;
    v28 = MEMORY[0x24BEE4AF8];
    sub_211A267A4(0, v7, 0);
    v9 = (char *)(a1 + 32);
    v25 = v7 - 1;
    v26 = v28;
    v22 = xmmword_211A4A230;
    v21 = xmmword_211A4ACD0;
    while (1)
    {
      v24 = v9;
      memcpy(v27, v9, 0x198uLL);
      v10 = v27[0];
      v11 = v27[1];
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v22;
      *(_QWORD *)(v12 + 32) = v10;
      *(_QWORD *)(v12 + 40) = v11;
      v13 = &v6[v3[10]];
      swift_bridgeObjectRetain_n();
      sub_21197A5E0((uint64_t)v27);
      sub_211A471FC();
      v14 = sub_211A47208();
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
      v15(v13, 0, 1, v14);
      v16 = &v6[v3[11]];
      sub_211A471FC();
      v15(v16, 0, 1, v14);
      v15(&v6[v3[12]], 1, 1, v14);
      v6[v3[16]] = 2;
      *(_QWORD *)v6 = v10;
      *((_QWORD *)v6 + 1) = v11;
      *((_QWORD *)v6 + 2) = v10;
      *((_QWORD *)v6 + 3) = v11;
      *((_QWORD *)v6 + 4) = &unk_24CCC3C50;
      *((_QWORD *)v6 + 5) = v12;
      *((_QWORD *)v6 + 6) = v10;
      *((_QWORD *)v6 + 7) = v11;
      *((_OWORD *)v6 + 4) = v21;
      v6[v3[13]] = 1;
      v6[v3[14]] = 0;
      v6[v3[15]] = 0;
      *(_QWORD *)&v6[v3[17]] = 0;
      swift_bridgeObjectRetain();
      sub_21197A740((uint64_t)v27);
      v8 = v26;
      v28 = v26;
      v18 = *(_QWORD *)(v26 + 16);
      v17 = *(_QWORD *)(v26 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_211A267A4(v17 > 1, v18 + 1, 1);
        v8 = v28;
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      sub_211942810((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
      if (!v25)
        break;
      v9 = v24 + 408;
      --v25;
      v26 = v8;
    }
  }
  return v8;
}

uint64_t sub_21197A22C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  id v20;
  char *v21;
  void *v22;
  id v23;
  unint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  int *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  int *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int64_t v43;
  uint64_t i;
  _BYTE v45[304];
  _QWORD v46[45];
  _BYTE v47[360];
  _QWORD v48[52];
  uint64_t v49;

  v3 = sub_211A47208();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v39 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFLocation();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = (int *)v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v36[0] = v1;
    v49 = MEMORY[0x24BEE4AF8];
    sub_211942004(0, v10, 0);
    v12 = (char *)(a1 + 32);
    v36[1] = &v48[13];
    v43 = v10 - 1;
    for (i = v49; ; i = v11)
    {
      v42 = v12;
      memcpy(v48, v12, 0x198uLL);
      v13 = *(double *)&v48[3];
      v14 = *(double *)&v48[4];
      v15 = v48[11];
      v16 = v48[12];
      v17 = LOBYTE(v48[6]) ? 0.0 : *(double *)&v48[5];
      v18 = LOBYTE(v48[8]) ? 0.0 : *(double *)&v48[7];
      v19 = LOBYTE(v48[10]) ? 0.0 : *(double *)&v48[9];
      v20 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
      sub_21197A5E0((uint64_t)v48);
      v21 = v39;
      sub_211A471FC();
      v22 = (void *)sub_211A471A8();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v41);
      v23 = objc_msgSend(v20, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_, v22, v13, v14, v17, v18, v19);

      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v24 = sub_211A480F0();
        swift_bridgeObjectRelease();
        v25 = v24 >= 5 ? 259 : 3;
      }
      else
      {
        v15 = 0;
        v25 = 0;
      }
      v26 = v48[0];
      v27 = v48[1];
      memcpy(v45, &v48[13], sizeof(v45));
      nullsub_1(v45, v28);
      sub_21192DD68((uint64_t)v45, (uint64_t)v46, &qword_254ACCB40);
      v46[38] = v23;
      LOBYTE(v46[39]) = 0;
      v46[40] = v15;
      v46[41] = v16;
      LOWORD(v46[42]) = v25;
      v46[43] = 0;
      LOBYTE(v46[44]) = 0;
      memcpy(v47, v46, 0x161uLL);
      nullsub_1(v47, v29);
      *((_QWORD *)v9 + 3) = 0;
      v9[32] = 1;
      v30 = v38;
      v31 = &v9[v38[8]];
      v32 = sub_211A4722C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
      *(_QWORD *)v9 = v26;
      *((_QWORD *)v9 + 1) = v27;
      v9[16] = 0;
      sub_21192DD68((uint64_t)v47, (uint64_t)&v9[v30[11]], &qword_254AC8CD0);
      v9[33] = 0;
      v9[v30[9]] = 0;
      v9[v30[10]] = 0;
      swift_bridgeObjectRetain();
      sub_21196FD88((uint64_t)&v48[13]);
      sub_21197A740((uint64_t)v48);
      v11 = i;
      v49 = i;
      v34 = *(_QWORD *)(i + 16);
      v33 = *(_QWORD *)(i + 24);
      if (v34 >= v33 >> 1)
      {
        sub_211942004(v33 > 1, v34 + 1, 1);
        v11 = v49;
      }
      *(_QWORD *)(v11 + 16) = v34 + 1;
      sub_211942810((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if (!v43)
        break;
      v12 = v42 + 408;
      --v43;
    }
  }
  return v11;
}

uint64_t sub_21197A5E0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21197A740(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t FMFAlertType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21197A8C8 + 4 * byte_211A4AD40[*v0]))(0x454D45564153, 0xE600000000000000);
}

uint64_t sub_21197A8C8()
{
  return 0x5441434552504544;
}

unint64_t sub_21197A8E4()
{
  return 0xD000000000000015;
}

uint64_t sub_21197A900()
{
  return 0x496B726F7774656ELL;
}

uint64_t sub_21197A920()
{
  return 0x696C616974696E69;
}

void sub_21197A944(char *a1)
{
  sub_211976010(*a1);
}

void sub_21197A950()
{
  char *v0;

  sub_2119AD210(*v0);
}

void sub_21197A958()
{
  __asm { BR              X10 }
}

uint64_t sub_21197A990()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_21197AA20(uint64_t a1)
{
  char *v1;

  sub_2119BBBF4(a1, *v1);
}

FMFCore::FMFAlertType_optional sub_21197AA28(Swift::String *a1)
{
  return FMFAlertType.init(rawValue:)(*a1);
}

uint64_t sub_21197AA34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_21197AA60 + 4 * byte_211A4AD4A[*v0]))();
}

void sub_21197AA60(_QWORD *a1@<X8>)
{
  *a1 = 0x5441434552504544;
  a1[1] = 0xEA00000000004445;
}

void sub_21197AA80(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x8000000211A52790;
}

void sub_21197AAA0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "networkIssue");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_21197AAC4(char *a1@<X8>)
{
  strcpy(a1, "initialization");
  a1[15] = -18;
}

void FMFAlert.alertType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
}

uint64_t sub_21197AB00()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v4;
  id v5;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x212BE496C](v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v5 = objc_msgSend(v4, sel_deviceModelName);

    if (v5)
    {
      sub_211A47910();

    }
    v2 = sub_2119FEF84(0xD000000000000017, 0x8000000211A545B0);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_21197AC24()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v4;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x212BE496C](v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = v1;
    v2 = sub_2119E7FA8(&v4);
    swift_unknownObjectRelease();
  }
  return v2;
}

uint64_t sub_21197ACA8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v5;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x212BE496C](v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for FMLocalize();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v2 = sub_211A46FE0();
    swift_unknownObjectRelease();

  }
  return v2;
}

uint64_t sub_21197ADAC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v5;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v1 == 5 || !MEMORY[0x212BE496C](v0 + 16))
  {
    v2 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRetain();
  }
  else if (v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    type metadata accessor for FMLocalize();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v2 = sub_211A46FE0();
    swift_unknownObjectRelease();

  }
  return v2;
}

uint64_t sub_21197AEB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21197AEE4 + 4 * byte_211A4AD4F[a1]))(0x64497472656C61, 0xE700000000000000);
}

uint64_t sub_21197AEE4()
{
  return 0x656C746974;
}

uint64_t sub_21197AEF8()
{
  return 0x6567617373656DLL;
}

uint64_t sub_21197AF0C()
{
  return 0x6E6F747475426B6FLL;
}

unint64_t sub_21197AF40()
{
  return 0xD000000000000011;
}

uint64_t sub_21197AF5C()
{
  return 0x75426C65636E6163;
}

uint64_t sub_21197AF80()
{
  return 0x7079547472656C61;
}

void sub_21197AF9C(char *a1)
{
  sub_2119745DC(*a1);
}

void sub_21197AFA8()
{
  char *v0;

  sub_2119BC090(0, *v0);
}

void sub_21197AFB4(uint64_t a1)
{
  char *v1;

  sub_2119BB63C(a1, *v1);
}

void sub_21197AFBC(uint64_t a1)
{
  char *v1;

  sub_2119BC090(a1, *v1);
}

uint64_t sub_21197AFC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21197BCB8();
  *a1 = result;
  return result;
}

uint64_t sub_21197AFF0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21197AEB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21197B018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21197BCB8();
  *a1 = result;
  return result;
}

void sub_21197B03C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_21197B048()
{
  sub_21195FF50();
  return sub_211A4839C();
}

uint64_t FMFAlert.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FMFAlert.init(from:)(a1);
  return v2;
}

_QWORD *FMFAlert.__allocating_init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  _QWORD *v19;
  char v20;

  v19 = (_QWORD *)swift_allocObject();
  v20 = *a13;
  v19[3] = 0;
  swift_unknownObjectWeakInit();
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = a4;
  v19[8] = a5;
  v19[9] = a6;
  v19[10] = a7;
  v19[11] = a8;
  v19[12] = a10;
  v19[13] = a11;
  sub_211964BF4(a9, (uint64_t)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_211964BF4(a12, (uint64_t)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((_BYTE *)v19 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v20;
  return v19;
}

_QWORD *FMFAlert.init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  _QWORD *v13;
  char v23;

  v23 = *a13;
  v13[3] = 0;
  swift_unknownObjectWeakInit();
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  v13[9] = a6;
  v13[10] = a7;
  v13[11] = a8;
  v13[12] = a10;
  v13[13] = a11;
  sub_211964BF4(a9, (uint64_t)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_211964BF4(a12, (uint64_t)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((_BYTE *)v13 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v23;
  return v13;
}

uint64_t sub_21197B28C(void (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  char v13;
  uint64_t result;
  _BYTE v15[15];
  char v16;

  v3 = sub_211958C38(&qword_254AC8C98);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_211A4713C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType);
  if (v12 == 5
    || !MEMORY[0x212BE496C](v1 + 16)
    || (v16 = v12, v13 = sub_2119E816C(&v16), result = swift_unknownObjectRelease(), (v13 & 1) == 0))
  {
    sub_211964BAC(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, (uint64_t)v6);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_2119132F0((uint64_t)v6);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v11, v6, v7);
      a1(v11);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
  return result;
}

uint64_t sub_21197B3F4(void (*a1)(char *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v3 = sub_211958C38(&qword_254AC8C98);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A4713C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) != 5 && MEMORY[0x212BE496C](v1 + 16))
    return swift_unknownObjectRelease();
  sub_211964BAC(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_2119132F0((uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  a1(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_21197B548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  _QWORD v23[2];

  v1 = v0;
  v2 = sub_211958C38(&qword_254AC8C98);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v21 - v8;
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v23[0] = 60;
  v23[1] = 0xE100000000000000;
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v10 = v23[0];
  v11 = v23[1];
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "okButtonLabel:");
  HIBYTE(v23[1]) = -18;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v22 = v6;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v23[0] = v10;
  v23[1] = v11;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v23[0];
  v13 = v23[1];
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v23[0] = 0xD000000000000011;
  v23[1] = 0x8000000211A54630;
  sub_211964BAC(v0 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, (uint64_t)v9);
  v14 = sub_211A4713C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v9, 1, v14) == 1)
  {
    sub_2119132F0((uint64_t)v9);
  }
  else
  {
    sub_211A470E8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v23[0] = v12;
  v23[1] = v13;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v23[0];
  v17 = v23[1];
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "okButtonURL: ");
  HIWORD(v23[1]) = -4864;
  v19 = (uint64_t)v22;
  sub_211964BAC(v1 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, (uint64_t)v22);
  if (v16((char *)v19, 1, v14) == 1)
  {
    sub_2119132F0(v19);
  }
  else
  {
    sub_211A470E8();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
  }
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v23[0] = v18;
  v23[1] = v17;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23[0];
}

uint64_t sub_21197B9D8()
{
  return sub_21197B548();
}

unint64_t sub_21197B9FC()
{
  unint64_t result;

  result = qword_254AC9450;
  if (!qword_254AC9450)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFAlertType, &type metadata for FMFAlertType);
    atomic_store(result, (unint64_t *)&qword_254AC9450);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFAlertType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21197BA8C + 4 * byte_211A4AD64[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21197BAC0 + 4 * byte_211A4AD5F[v4]))();
}

uint64_t sub_21197BAC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197BAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21197BAD0);
  return result;
}

uint64_t sub_21197BADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21197BAE4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21197BAE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197BAF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFAlertType()
{
  return &type metadata for FMFAlertType;
}

uint64_t sub_21197BB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_21197BB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_21197BB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_21197BB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_21197BB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_21197BB34()
{
  return type metadata accessor for FMFAlert();
}

uint64_t method lookup function for FMFAlert()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFAlert.title.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of FMFAlert.message.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of FMFAlert.okButtonLabel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of FMFAlert.cancelButtonLabel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of FMFAlert.displayAlert.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of FMFAlert.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of FMFAlert.__allocating_init(alertId:title:message:okButtonLabel:okButtonURL:cancelButtonLabel:cancelButtonURL:alertType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of FMFAlert.handleOkAction(urlHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of FMFAlert.handleCancelAction(urlHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of FMFAlert.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t getEnumTagSinglePayload for FMFLocationAlertAddressType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_21197BC74()
{
  unint64_t result;

  result = qword_254AC95B0;
  if (!qword_254AC95B0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B024, &type metadata for FMFAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC95B0);
  }
  return result;
}

uint64_t sub_21197BCB8()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t static FMFDemoContent.load(from:)()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  result = sub_211A47148();
  if (!v0)
  {
    v3 = result;
    v4 = v2;
    if (qword_254AC7B30 != -1)
      swift_once();
    sub_211971BDC();
    sub_211A46F38();
    return sub_21193B8F8(v3, v4);
  }
  return result;
}

uint64_t sub_21197BDB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21197554C(*a1, *a2);
}

uint64_t sub_21197BDBC()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21197BE6C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21197BEF8()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21197BFA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21197DD44();
  *a1 = result;
  return result;
}

void sub_21197BFD0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE900000000000067;
  v5 = 0x6E69776F6C6C6F66;
  if (v2 != 1)
  {
    v5 = 0x7463657269646962;
    v4 = 0xED00006C616E6F69;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7265776F6C6C6F66;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21197C040()
{
  sub_21197DF34();
  return sub_211A47A78();
}

uint64_t sub_21197C09C()
{
  sub_21197DF34();
  return sub_211A47A6C();
}

BOOL sub_21197C0E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21197C0FC()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

uint64_t sub_21197C140()
{
  return sub_211A48324();
}

uint64_t sub_21197C168()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

uint64_t sub_21197C1A8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[38];
  int v30;
  char v31;

  v2 = v1;
  v4 = sub_211958C38(&qword_254AC9628);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v30 = *((unsigned __int8 *)v2 + 16);
  v9 = v2[3];
  v10 = v2[4];
  v26 = v2[5];
  v25 = *((unsigned __int8 *)v2 + 48);
  v24 = v2[7];
  v23 = *((unsigned __int8 *)v2 + 64);
  v22 = v2[9];
  v21 = *((unsigned __int8 *)v2 + 80);
  v11 = v2[11];
  v19 = v2[12];
  v20 = v11;
  sub_211931DB4(a1, a1[3]);
  sub_21197D938();
  sub_211A4836C();
  LOBYTE(v29[0]) = 0;
  v12 = v28;
  v13 = v8;
  sub_211A481B0();
  if (!v12)
  {
    v14 = v24;
    v15 = v25;
    v16 = v26;
    LOBYTE(v29[0]) = v30;
    v31 = 1;
    sub_21197D97C();
    sub_211A481E0();
    v29[0] = v9;
    v29[1] = v10;
    v29[2] = v16;
    LOBYTE(v29[3]) = v15;
    v29[4] = v14;
    LOBYTE(v29[5]) = v23;
    v29[6] = v22;
    LOBYTE(v29[7]) = v21;
    v29[8] = v20;
    v29[9] = v19;
    v31 = 2;
    sub_21197D9C0();
    sub_211A481E0();
    memcpy(v29, v2 + 13, sizeof(v29));
    v31 = 3;
    sub_21196F8AC();
    sub_211A481E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v4);
}

uint64_t sub_21197C3EC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  _QWORD v33[51];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[7];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[312];
  _BYTE v49[304];
  _BYTE v50[304];
  _BYTE v51[7];
  char v52;
  _BYTE v53[7];
  char v54;
  _BYTE v55[7];
  char v56;
  _DWORD v57[3];
  uint64_t v58;

  v58 = sub_211958C38(&qword_254AC9648);
  v5 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21197D938();
  sub_211A48360();
  if (v2)
    return sub_211931C34((uint64_t)a1);
  v31 = a2;
  v32 = a1;
  v9 = v5;
  LOBYTE(v34) = 0;
  v10 = v58;
  v11 = sub_211A48144();
  v13 = v12;
  LOBYTE(v33[0]) = 1;
  sub_21197DA04();
  swift_bridgeObjectRetain();
  sub_211A48174();
  v14 = v34;
  LOBYTE(v33[0]) = 2;
  sub_21197DA48();
  sub_211A48174();
  v29 = v14;
  v15 = v34;
  v16 = v35;
  v26 = v36;
  v27 = v38;
  v28 = v40;
  v30 = v42;
  v17 = v43;
  v24 = v39;
  v25 = v37;
  v56 = v37;
  v54 = v39;
  v23 = v41;
  v52 = v41;
  v48[311] = 3;
  sub_211964964();
  swift_bridgeObjectRetain();
  sub_211A48174();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  memcpy(&v33[13], v49, 0x130uLL);
  memcpy(v50, v49, sizeof(v50));
  v33[0] = v11;
  v33[1] = v13;
  LOBYTE(v10) = v29;
  LOBYTE(v33[2]) = v29;
  v33[3] = v15;
  v33[4] = v16;
  v18 = v26;
  v19 = v27;
  v33[5] = v26;
  LOBYTE(v33[6]) = v25;
  v33[7] = v27;
  LOBYTE(v33[8]) = v24;
  v20 = v28;
  v33[9] = v28;
  LOBYTE(v33[10]) = v23;
  v33[11] = v30;
  v33[12] = v17;
  sub_21197A5E0((uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v31, v33, 0x198uLL);
  sub_211931C34((uint64_t)v32);
  v34 = v11;
  v35 = v13;
  LOBYTE(v36) = v10;
  *(_DWORD *)((char *)&v36 + 1) = v57[0];
  HIDWORD(v36) = *(_DWORD *)((char *)v57 + 3);
  v37 = v15;
  v38 = v16;
  v39 = v18;
  LOBYTE(v40) = v56;
  *(_DWORD *)((char *)&v40 + 1) = *(_DWORD *)v55;
  HIDWORD(v40) = *(_DWORD *)&v55[3];
  v41 = v19;
  LOBYTE(v42) = v54;
  *(_DWORD *)((char *)&v42 + 1) = *(_DWORD *)v53;
  HIDWORD(v42) = *(_DWORD *)&v53[3];
  v43 = v20;
  v44 = v52;
  *(_DWORD *)v45 = *(_DWORD *)v51;
  *(_DWORD *)&v45[3] = *(_DWORD *)&v51[3];
  v46 = v30;
  v47 = v17;
  memcpy(v48, v50, 0x130uLL);
  return sub_21197A740((uint64_t)&v34);
}

uint64_t sub_21197C7E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_21197C814 + 4 * byte_211A4B0A0[*v0]))(0x656C646E6168, 0xE600000000000000);
}

unint64_t sub_21197C814()
{
  return 0xD000000000000010;
}

uint64_t sub_21197C830()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_21197C848()
{
  return 0x73736572646461;
}

uint64_t sub_21197C860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21197DD8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_21197C884(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21197C890()
{
  sub_21197D938();
  return sub_211A48390();
}

uint64_t sub_21197C8B8()
{
  sub_21197D938();
  return sub_211A4839C();
}

uint64_t sub_21197C8E0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_21197C3EC(a1, a2);
}

uint64_t sub_21197C8F4(_QWORD *a1)
{
  return sub_21197C1A8(a1);
}

uint64_t sub_21197C908()
{
  uint64_t result;

  sub_211A46F50();
  swift_allocObject();
  result = sub_211A46F44();
  qword_254AC95C8 = result;
  return result;
}

uint64_t sub_21197C944()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

uint64_t sub_21197C984()
{
  return sub_211A48324();
}

uint64_t sub_21197C9A8()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

uint64_t sub_21197C9E4()
{
  return 0x656C706F6570;
}

uint64_t sub_21197C9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C706F6570 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_211A48258();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_21197CA84(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21197CA90()
{
  sub_21197CC00();
  return sub_211A48390();
}

uint64_t sub_21197CAB8()
{
  sub_21197CC00();
  return sub_211A4839C();
}

uint64_t FMFDemoContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = sub_211958C38(&qword_254AC95D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  sub_211931DB4(a1, a1[3]);
  sub_21197CC00();
  sub_211A4836C();
  v10[1] = v8;
  sub_211958C38(&qword_254AC95E0);
  sub_21197CDC8(&qword_254AC95E8, (uint64_t (*)(void))sub_21197CC44, MEMORY[0x24BEE12A0]);
  sub_211A481E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_21197CC00()
{
  unint64_t result;

  result = qword_254AC95D8;
  if (!qword_254AC95D8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B258, &type metadata for FMFDemoContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC95D8);
  }
  return result;
}

unint64_t sub_21197CC44()
{
  unint64_t result;

  result = qword_254AC95F0;
  if (!qword_254AC95F0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B230, &type metadata for FMFPersonTemplate);
    atomic_store(result, (unint64_t *)&qword_254AC95F0);
  }
  return result;
}

uint64_t FMFDemoContent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v5 = sub_211958C38(&qword_254AC95F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21197CC00();
  sub_211A48360();
  if (!v2)
  {
    sub_211958C38(&qword_254AC95E0);
    sub_21197CDC8(&qword_254AC9600, (uint64_t (*)(void))sub_21197CE30, MEMORY[0x24BEE12D0]);
    sub_211A48174();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return sub_211931C34((uint64_t)a1);
}

uint64_t sub_21197CDC8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_21195E2C0(&qword_254AC95E0);
    v8 = a2();
    result = MEMORY[0x212BE47C8](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21197CE30()
{
  unint64_t result;

  result = qword_254AC9608;
  if (!qword_254AC9608)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B208, &type metadata for FMFPersonTemplate);
    atomic_store(result, (unint64_t *)&qword_254AC9608);
  }
  return result;
}

uint64_t sub_21197CE74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FMFDemoContent.init(from:)(a1, a2);
}

uint64_t sub_21197CE88(_QWORD *a1)
{
  return FMFDemoContent.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FMFDemoContent()
{
  return &type metadata for FMFDemoContent;
}

uint64_t destroy for FMFPersonTemplate()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  v6 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v6;
  v7 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v7;
  v8 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v8;
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v9;
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  v13 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v13;
  v14 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v14;
  v15 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v15;
  v25 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v25;
  v16 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v16;
  v17 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v17;
  v18 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v18;
  v19 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v19;
  v20 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v20;
  v21 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v21;
  v22 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v22;
  v23 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for FMFPersonTemplate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x198uLL);
}

uint64_t assignWithTake for FMFPersonTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFPersonTemplate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 408))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFPersonTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 408) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 408) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate()
{
  return &type metadata for FMFPersonTemplate;
}

uint64_t getEnumTagSinglePayload for FMFDemoContent.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for FMFDemoContent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21197D804 + 4 * byte_211A4B0A4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21197D824 + 4 * byte_211A4B0A9[v4]))();
}

_BYTE *sub_21197D804(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21197D824(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21197D82C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21197D834(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21197D83C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21197D844(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoContent.CodingKeys()
{
  return &type metadata for FMFDemoContent.CodingKeys;
}

unint64_t sub_21197D864()
{
  unint64_t result;

  result = qword_254AC9610;
  if (!qword_254AC9610)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B1E0, &type metadata for FMFDemoContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9610);
  }
  return result;
}

unint64_t sub_21197D8AC()
{
  unint64_t result;

  result = qword_254AC9618;
  if (!qword_254AC9618)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B150, &type metadata for FMFDemoContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9618);
  }
  return result;
}

unint64_t sub_21197D8F4()
{
  unint64_t result;

  result = qword_254AC9620;
  if (!qword_254AC9620)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B178, &type metadata for FMFDemoContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9620);
  }
  return result;
}

unint64_t sub_21197D938()
{
  unint64_t result;

  result = qword_254AC9630;
  if (!qword_254AC9630)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B46C, &type metadata for FMFPersonTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9630);
  }
  return result;
}

unint64_t sub_21197D97C()
{
  unint64_t result;

  result = qword_254AC9638;
  if (!qword_254AC9638)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B444, &type metadata for FMFPersonTemplate.RelationshipType);
    atomic_store(result, (unint64_t *)&qword_254AC9638);
  }
  return result;
}

unint64_t sub_21197D9C0()
{
  unint64_t result;

  result = qword_254AC9640;
  if (!qword_254AC9640)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EA30, &type metadata for FMDemoLocation);
    atomic_store(result, (unint64_t *)&qword_254AC9640);
  }
  return result;
}

unint64_t sub_21197DA04()
{
  unint64_t result;

  result = qword_254AC9650;
  if (!qword_254AC9650)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B41C, &type metadata for FMFPersonTemplate.RelationshipType);
    atomic_store(result, (unint64_t *)&qword_254AC9650);
  }
  return result;
}

unint64_t sub_21197DA48()
{
  unint64_t result;

  result = qword_254AC9658;
  if (!qword_254AC9658)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EA08, &type metadata for FMDemoLocation);
    atomic_store(result, (unint64_t *)&qword_254AC9658);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFPersonTemplate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21197DAD8 + 4 * byte_211A4B0B3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21197DB0C + 4 * byte_211A4B0AE[v4]))();
}

uint64_t sub_21197DB0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197DB14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21197DB1CLL);
  return result;
}

uint64_t sub_21197DB28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21197DB30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21197DB34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197DB3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate.CodingKeys()
{
  return &type metadata for FMFPersonTemplate.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FMFPersonTemplate.RelationshipType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21197DBA4 + 4 * byte_211A4B0BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21197DBD8 + 4 * byte_211A4B0B8[v4]))();
}

uint64_t sub_21197DBD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197DBE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21197DBE8);
  return result;
}

uint64_t sub_21197DBF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21197DBFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21197DC00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21197DC08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFPersonTemplate.RelationshipType()
{
  return &type metadata for FMFPersonTemplate.RelationshipType;
}

unint64_t sub_21197DC28()
{
  unint64_t result;

  result = qword_254AC9660;
  if (!qword_254AC9660)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B33C, &type metadata for FMFPersonTemplate.RelationshipType);
    atomic_store(result, (unint64_t *)&qword_254AC9660);
  }
  return result;
}

unint64_t sub_21197DC70()
{
  unint64_t result;

  result = qword_254AC9668;
  if (!qword_254AC9668)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B3F4, &type metadata for FMFPersonTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9668);
  }
  return result;
}

unint64_t sub_21197DCB8()
{
  unint64_t result;

  result = qword_254AC9670;
  if (!qword_254AC9670)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B364, &type metadata for FMFPersonTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9670);
  }
  return result;
}

unint64_t sub_21197DD00()
{
  unint64_t result;

  result = qword_254AC9678;
  if (!qword_254AC9678)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B38C, &type metadata for FMFPersonTemplate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9678);
  }
  return result;
}

uint64_t sub_21197DD44()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21197DD8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v2 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000211A529E0 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_211A48258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_21197DF34()
{
  unint64_t result;

  result = qword_254AC9680;
  if (!qword_254AC9680)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B2C4, &type metadata for FMFPersonTemplate.RelationshipType);
    atomic_store(result, (unint64_t *)&qword_254AC9680);
  }
  return result;
}

uint64_t FMFActionURLInfo.actionURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21192C6B8(v1, a1, &qword_254AC8C98);
}

uint64_t FMFActionURLInfo.firstName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FMFActionURLInfo()
{
  uint64_t result;

  result = qword_254AC96E0;
  if (!qword_254AC96E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FMFActionURLInfo.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.email.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.triggerDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFActionURLInfo();
  return sub_21192C6B8(v1 + *(int *)(v3 + 32), a1, qword_254AC8A78);
}

uint64_t FMFActionURLInfo.currentUserId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFActionURLInfo() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFActionURLInfo.locationAlert.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFActionURLInfo();
  return sub_21192C6B8(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_254ACC2D0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FMFActionURLInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  int *v38;
  uint64_t v39;
  unsigned int (*v40)(_QWORD *, uint64_t, int *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(_OWORD *, uint64_t, uint64_t);
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v107;
  char *__dst;
  void *__dsta;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t *v113;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_211A4713C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_211958C38(&qword_254AC8C98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[7];
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v113 = a1;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v27 = sub_211A47208();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112 = (unsigned int (*)(char *, uint64_t, uint64_t))v29;
    v111 = v28;
    if (v29(v26, 1, v27))
    {
      v30 = sub_211958C38(qword_254AC8A78);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v11 = v113;
    v31 = a3[9];
    v32 = a3[10];
    v33 = (uint64_t *)((char *)v113 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (uint64_t *)((char *)v113 + v32);
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = (int *)type metadata accessor for FMFLocationAlert();
    v39 = *((_QWORD *)v38 - 1);
    v40 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v39 + 48);
    swift_bridgeObjectRetain();
    if (v40(v37, 1, v38))
    {
      v41 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v107 = v39;
      v110 = v27;
      v42 = v37[1];
      *v36 = *v37;
      v36[1] = v42;
      *((_OWORD *)v36 + 1) = *((_OWORD *)v37 + 1);
      v36[4] = v37[4];
      *((_BYTE *)v36 + 40) = *((_BYTE *)v37 + 40);
      *((_BYTE *)v36 + 41) = *((_BYTE *)v37 + 41);
      *((_WORD *)v36 + 21) = *((_WORD *)v37 + 21);
      v43 = v38[12];
      v44 = (_OWORD *)((char *)v36 + v43);
      v45 = (_OWORD *)((char *)v37 + v43);
      v46 = type metadata accessor for FMFSchedule();
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v47 + 48);
      swift_bridgeObjectRetain();
      if (v48(v45, 1, v46))
      {
        v49 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v50 = v45[1];
        *v44 = *v45;
        v44[1] = v50;
        v44[2] = v45[2];
        v51 = *(int *)(v46 + 40);
        __dst = (char *)v44 + v51;
        v52 = (char *)v45 + v51;
        v53 = sub_211A47304();
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
        {
          v55 = sub_211958C38(&qword_254AC7C38);
          memcpy(__dst, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v52, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v53);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v56 = v38[13];
      v57 = (_QWORD *)((char *)v36 + v56);
      v58 = (_QWORD *)((char *)v37 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      v60 = v38[14];
      v61 = (_QWORD *)((char *)v36 + v60);
      v62 = (_QWORD *)((char *)v37 + v60);
      __dsta = (void *)v62[1];
      *v61 = *v62;
      v61[1] = __dsta;
      *((_BYTE *)v36 + v38[15]) = *((_BYTE *)v37 + v38[15]);
      *(_QWORD *)((char *)v36 + v38[16]) = *(_QWORD *)((char *)v37 + v38[16]);
      *(_QWORD *)((char *)v36 + v38[17]) = *(_QWORD *)((char *)v37 + v38[17]);
      *(_QWORD *)((char *)v36 + v38[18]) = *(_QWORD *)((char *)v37 + v38[18]);
      v63 = v38[19];
      v64 = (_QWORD *)((char *)v36 + v63);
      v65 = (_QWORD *)((char *)v37 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v38[20];
      v68 = (char *)v36 + v67;
      v69 = (char *)v37 + v67;
      v70 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v70;
      v68[16] = v69[16];
      v68[17] = v69[17];
      *((_BYTE *)v36 + v38[21]) = *((_BYTE *)v37 + v38[21]);
      v71 = v38[22];
      v72 = (_QWORD *)((char *)v36 + v71);
      v73 = (_QWORD *)((char *)v37 + v71);
      v74 = v73[1];
      *v72 = *v73;
      v72[1] = v74;
      v75 = v38[23];
      v76 = (_QWORD *)((char *)v36 + v75);
      v77 = (_QWORD *)((char *)v37 + v75);
      v78 = *(_QWORD *)((char *)v37 + v75 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v78)
      {
        v79 = v77[1];
        *v76 = *v77;
        v76[1] = v79;
        v80 = v77[3];
        v76[2] = v77[2];
        v76[3] = v80;
        v81 = v77[5];
        v76[4] = v77[4];
        v76[5] = v81;
        v82 = v77[7];
        v76[6] = v77[6];
        v76[7] = v82;
        v83 = v77[9];
        v76[8] = v77[8];
        v76[9] = v83;
        v84 = v77[11];
        v76[10] = v77[10];
        v76[11] = v84;
        v85 = v77[13];
        v76[12] = v77[12];
        v76[13] = v85;
        v86 = v77[15];
        v76[14] = v77[14];
        v76[15] = v86;
        v87 = v77[17];
        v76[16] = v77[16];
        v76[17] = v87;
        v88 = v77[19];
        v76[18] = v77[18];
        v76[19] = v88;
        v76[20] = v77[20];
        v76[21] = v78;
        v89 = v77[23];
        v76[22] = v77[22];
        v76[23] = v89;
        v90 = v77[25];
        v76[24] = v77[24];
        v76[25] = v90;
        v91 = v77[27];
        v76[26] = v77[26];
        v76[27] = v91;
        v92 = v77[29];
        v76[28] = v77[28];
        v76[29] = v92;
        v93 = v77[31];
        v76[30] = v77[30];
        v76[31] = v93;
        v94 = v77[33];
        v76[32] = v77[32];
        v76[33] = v94;
        v95 = v77[35];
        v76[34] = v77[34];
        v76[35] = v95;
        v96 = v77[36];
        v97 = v77[37];
        v76[36] = v96;
        v76[37] = v97;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v76, v77, 0x130uLL);
      }
      *((_BYTE *)v36 + v38[24]) = *((_BYTE *)v37 + v38[24]);
      *((_BYTE *)v36 + v38[25]) = *((_BYTE *)v37 + v38[25]);
      v98 = v38[26];
      v99 = (char *)v36 + v98;
      v100 = (char *)v37 + v98;
      v11 = v113;
      if (v112((char *)v37 + v98, 1, v110))
      {
        v101 = sub_211958C38(qword_254AC8A78);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v99, v100, v110);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v99, 0, 1, v110);
      }
      v102 = v38[27];
      v103 = (char *)v36 + v102;
      v104 = (char *)v37 + v102;
      if (v112(v104, 1, v110))
      {
        v105 = sub_211958C38(qword_254AC8A78);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v103, v104, v110);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v103, 0, 1, v110);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v107 + 56))(v36, 0, 1, v38);
    }
  }
  return v11;
}

uint64_t destroy for FMFActionURLInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_211A4713C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 40);
  v11 = (int *)type metadata accessor for FMFLocationAlert();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v13 = v10 + v11[12];
    v14 = type metadata accessor for FMFSchedule();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v15 = v13 + *(int *)(v14 + 40);
      v16 = sub_211A47304();
      v17 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v10 + v11[23] + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = v10 + v11[26];
    if (!v9(v18, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v7);
    v19 = v10 + v11[27];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v19, 1, v7);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v19, v7);
  }
  return result;
}

char *initializeWithCopy for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int (*v111)(char *, uint64_t, uint64_t);
  char *v112;

  v6 = sub_211A4713C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_211958C38(&qword_254AC8C98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = a3[8];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v112 = a1;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = sub_211A47208();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v111 = v26;
  v110 = v25;
  if (v26(v23, 1, v24))
  {
    v27 = sub_211958C38(qword_254AC8A78);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = v112;
  v29 = a3[9];
  v30 = a3[10];
  v31 = &v112[v29];
  v32 = &a2[v29];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = &v112[v30];
  v35 = &a2[v30];
  v36 = (int *)type metadata accessor for FMFLocationAlert();
  v37 = *((_QWORD *)v36 - 1);
  v38 = *(unsigned int (**)(char *, uint64_t, int *))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    v39 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v108 = v37;
    v109 = v24;
    v40 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v40;
    *((_OWORD *)v34 + 1) = *((_OWORD *)v35 + 1);
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    v34[40] = v35[40];
    v34[41] = v35[41];
    *((_WORD *)v34 + 21) = *((_WORD *)v35 + 21);
    v41 = v36[12];
    v42 = &v34[v41];
    v43 = &v35[v41];
    v44 = type metadata accessor for FMFSchedule();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    swift_bridgeObjectRetain();
    if (v46(v43, 1, v44))
    {
      v47 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      v48 = *((_OWORD *)v43 + 1);
      *(_OWORD *)v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v48;
      *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
      v49 = *(int *)(v44 + 40);
      v50 = &v42[v49];
      v51 = &v43[v49];
      v52 = sub_211A47304();
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      {
        v54 = sub_211958C38(&qword_254AC7C38);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v55 = v36[13];
    v56 = &v34[v55];
    v57 = &v35[v55];
    v58 = *((_QWORD *)v57 + 1);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    v59 = v36[14];
    v60 = &v34[v59];
    v61 = &v35[v59];
    v107 = *((_QWORD *)v61 + 1);
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *((_QWORD *)v60 + 1) = v107;
    v34[v36[15]] = v35[v36[15]];
    *(_QWORD *)&v34[v36[16]] = *(_QWORD *)&v35[v36[16]];
    *(_QWORD *)&v34[v36[17]] = *(_QWORD *)&v35[v36[17]];
    *(_QWORD *)&v34[v36[18]] = *(_QWORD *)&v35[v36[18]];
    v62 = v36[19];
    v63 = &v34[v62];
    v64 = &v35[v62];
    v65 = *((_QWORD *)v64 + 1);
    *(_QWORD *)v63 = *(_QWORD *)v64;
    *((_QWORD *)v63 + 1) = v65;
    v66 = v36[20];
    v67 = &v34[v66];
    v68 = &v35[v66];
    v69 = *((_QWORD *)v68 + 1);
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *((_QWORD *)v67 + 1) = v69;
    v67[16] = v68[16];
    v67[17] = v68[17];
    v34[v36[21]] = v35[v36[21]];
    v70 = v36[22];
    v71 = &v34[v70];
    v72 = &v35[v70];
    v73 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v73;
    v74 = v36[23];
    v75 = &v34[v74];
    v76 = &v35[v74];
    v77 = *(_QWORD *)&v35[v74 + 168];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77)
    {
      v78 = *((_QWORD *)v76 + 1);
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = v78;
      v79 = *((_QWORD *)v76 + 3);
      *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
      *((_QWORD *)v75 + 3) = v79;
      v80 = *((_QWORD *)v76 + 5);
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
      *((_QWORD *)v75 + 5) = v80;
      v81 = *((_QWORD *)v76 + 7);
      *((_QWORD *)v75 + 6) = *((_QWORD *)v76 + 6);
      *((_QWORD *)v75 + 7) = v81;
      v82 = *((_QWORD *)v76 + 9);
      *((_QWORD *)v75 + 8) = *((_QWORD *)v76 + 8);
      *((_QWORD *)v75 + 9) = v82;
      v83 = *((_QWORD *)v76 + 11);
      *((_QWORD *)v75 + 10) = *((_QWORD *)v76 + 10);
      *((_QWORD *)v75 + 11) = v83;
      v84 = *((_QWORD *)v76 + 13);
      *((_QWORD *)v75 + 12) = *((_QWORD *)v76 + 12);
      *((_QWORD *)v75 + 13) = v84;
      v85 = *((_QWORD *)v76 + 15);
      *((_QWORD *)v75 + 14) = *((_QWORD *)v76 + 14);
      *((_QWORD *)v75 + 15) = v85;
      v86 = *((_QWORD *)v76 + 17);
      *((_QWORD *)v75 + 16) = *((_QWORD *)v76 + 16);
      *((_QWORD *)v75 + 17) = v86;
      v87 = *((_QWORD *)v76 + 19);
      *((_QWORD *)v75 + 18) = *((_QWORD *)v76 + 18);
      *((_QWORD *)v75 + 19) = v87;
      *((_QWORD *)v75 + 20) = *((_QWORD *)v76 + 20);
      *((_QWORD *)v75 + 21) = v77;
      v88 = *((_QWORD *)v76 + 23);
      *((_QWORD *)v75 + 22) = *((_QWORD *)v76 + 22);
      *((_QWORD *)v75 + 23) = v88;
      v89 = *((_QWORD *)v76 + 25);
      *((_QWORD *)v75 + 24) = *((_QWORD *)v76 + 24);
      *((_QWORD *)v75 + 25) = v89;
      v90 = *((_QWORD *)v76 + 27);
      *((_QWORD *)v75 + 26) = *((_QWORD *)v76 + 26);
      *((_QWORD *)v75 + 27) = v90;
      v91 = *((_QWORD *)v76 + 29);
      *((_QWORD *)v75 + 28) = *((_QWORD *)v76 + 28);
      *((_QWORD *)v75 + 29) = v91;
      v92 = *((_QWORD *)v76 + 31);
      *((_QWORD *)v75 + 30) = *((_QWORD *)v76 + 30);
      *((_QWORD *)v75 + 31) = v92;
      v93 = *((_QWORD *)v76 + 33);
      *((_QWORD *)v75 + 32) = *((_QWORD *)v76 + 32);
      *((_QWORD *)v75 + 33) = v93;
      v94 = *((_QWORD *)v76 + 35);
      *((_QWORD *)v75 + 34) = *((_QWORD *)v76 + 34);
      *((_QWORD *)v75 + 35) = v94;
      v95 = *((_QWORD *)v76 + 36);
      v96 = *((_QWORD *)v76 + 37);
      *((_QWORD *)v75 + 36) = v95;
      *((_QWORD *)v75 + 37) = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v75, v76, 0x130uLL);
    }
    v97 = v111;
    v34[v36[24]] = v35[v36[24]];
    v34[v36[25]] = v35[v36[25]];
    v98 = v36[26];
    v99 = &v34[v98];
    v100 = &v35[v98];
    v28 = v112;
    if (v111(&v35[v98], 1, v109))
    {
      v101 = sub_211958C38(qword_254AC8A78);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v99, v100, v109);
      v97 = v111;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v99, 0, 1, v109);
    }
    v102 = v36[27];
    v103 = &v34[v102];
    v104 = &v35[v102];
    if (v97(v104, 1, v109))
    {
      v105 = sub_211958C38(qword_254AC8A78);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v103, v104, v109);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v103, 0, 1, v109);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v108 + 56))(v34, 0, 1, v36);
  }
  return v28;
}

char *assignWithCopy for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, int *);
  int v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  size_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  void *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  uint64_t v100;
  uint64_t v102;
  char *v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  char *v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char *v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int (*v149)(char *, uint64_t, uint64_t);
  uint64_t (*v150)(uint64_t, uint64_t, uint64_t);
  char *v151;
  char *v152;

  v6 = sub_211A4713C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_211958C38(&qword_254AC8C98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_211A47208();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    v29 = sub_211958C38(qword_254AC8A78);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_13:
  v30 = a3[9];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a3[10];
  v34 = (uint64_t)&a1[v33];
  v35 = &a2[v33];
  v36 = (int *)type metadata accessor for FMFLocationAlert();
  v37 = *((_QWORD *)v36 - 1);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38((uint64_t)v35, 1, v36);
  if (!v39)
  {
    if (v40)
    {
      sub_211934758(v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    v148 = v25;
    v150 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
    *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
    *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
    *(_BYTE *)(v34 + 40) = v35[40];
    *(_BYTE *)(v34 + 41) = v35[41];
    *(_BYTE *)(v34 + 42) = v35[42];
    *(_BYTE *)(v34 + 43) = v35[43];
    v52 = v36[12];
    v53 = (char *)(v34 + v52);
    v152 = v35;
    v54 = &v35[v52];
    v55 = type metadata accessor for FMFSchedule();
    v56 = *(_QWORD *)(v55 - 8);
    v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
    v58 = v57(v53, 1, v55);
    v59 = v57(v54, 1, v55);
    if (v58)
    {
      if (!v59)
      {
        v145 = v24;
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
        *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
        *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
        *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
        *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
        v60 = *(int *)(v55 + 40);
        v61 = &v53[v60];
        v62 = &v54[v60];
        v63 = sub_211A47304();
        v64 = *(_QWORD *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          v65 = sub_211958C38(&qword_254AC7C38);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v24 = v145;
        v73 = v152;
        goto LABEL_50;
      }
    }
    else
    {
      if (!v59)
      {
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
        *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
        *((_QWORD *)v53 + 3) = *((_QWORD *)v54 + 3);
        *((_QWORD *)v53 + 4) = *((_QWORD *)v54 + 4);
        *((_QWORD *)v53 + 5) = *((_QWORD *)v54 + 5);
        v102 = *(int *)(v55 + 40);
        v53 += v102;
        v103 = &v54[v102];
        v55 = sub_211A47304();
        v56 = *(_QWORD *)(v55 - 8);
        v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        v105 = v104(v53, 1, v55);
        v106 = v104(v103, 1, v55);
        if (v105)
        {
          v73 = v152;
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v103, v55);
LABEL_50:
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_54:
            v74 = v150;
LABEL_55:
            v108 = v36[13];
            v109 = (_QWORD *)(v34 + v108);
            v110 = &v73[v108];
            *v109 = *(_QWORD *)v110;
            v109[1] = *((_QWORD *)v110 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v111 = v36[14];
            v112 = (_QWORD *)(v34 + v111);
            v113 = &v73[v111];
            *v112 = *(_QWORD *)v113;
            v112[1] = *((_QWORD *)v113 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v34 + v36[15]) = v73[v36[15]];
            *(_QWORD *)(v34 + v36[16]) = *(_QWORD *)&v73[v36[16]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v34 + v36[17]) = *(_QWORD *)&v73[v36[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v34 + v36[18]) = *(_QWORD *)&v73[v36[18]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v114 = v36[19];
            v115 = (_QWORD *)(v34 + v114);
            v116 = &v73[v114];
            *v115 = *(_QWORD *)v116;
            v115[1] = *((_QWORD *)v116 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v117 = v36[20];
            v118 = v34 + v117;
            v119 = v73;
            v120 = &v73[v117];
            *(_QWORD *)v118 = *(_QWORD *)v120;
            *(_QWORD *)(v118 + 8) = *((_QWORD *)v120 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v118 + 16) = v120[16];
            *(_BYTE *)(v118 + 17) = v120[17];
            *(_BYTE *)(v34 + v36[21]) = v119[v36[21]];
            v121 = v36[22];
            v122 = (_QWORD *)(v34 + v121);
            v123 = &v119[v121];
            *v122 = *(_QWORD *)v123;
            v122[1] = *((_QWORD *)v123 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v124 = v36[23];
            v125 = (_QWORD *)(v34 + v124);
            v126 = &v119[v124];
            v127 = *(_QWORD *)(v34 + v124 + 168);
            v128 = *((_QWORD *)v126 + 21);
            if (v127)
            {
              if (v128)
              {
                *v125 = *(_QWORD *)v126;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[1] = *((_QWORD *)v126 + 1);
                v125[2] = *((_QWORD *)v126 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[3] = *((_QWORD *)v126 + 3);
                v125[4] = *((_QWORD *)v126 + 4);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[5] = *((_QWORD *)v126 + 5);
                v125[6] = *((_QWORD *)v126 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[7] = *((_QWORD *)v126 + 7);
                v125[8] = *((_QWORD *)v126 + 8);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[9] = *((_QWORD *)v126 + 9);
                v125[10] = *((_QWORD *)v126 + 10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[11] = *((_QWORD *)v126 + 11);
                v125[12] = *((_QWORD *)v126 + 12);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[13] = *((_QWORD *)v126 + 13);
                v125[14] = *((_QWORD *)v126 + 14);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[15] = *((_QWORD *)v126 + 15);
                v125[16] = *((_QWORD *)v126 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[17] = *((_QWORD *)v126 + 17);
                v125[18] = *((_QWORD *)v126 + 18);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[19] = *((_QWORD *)v126 + 19);
                v125[20] = *((_QWORD *)v126 + 20);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[21] = *((_QWORD *)v126 + 21);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[22] = *((_QWORD *)v126 + 22);
                v125[23] = *((_QWORD *)v126 + 23);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[24] = *((_QWORD *)v126 + 24);
                v125[25] = *((_QWORD *)v126 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[26] = *((_QWORD *)v126 + 26);
                v125[27] = *((_QWORD *)v126 + 27);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[28] = *((_QWORD *)v126 + 28);
                v125[29] = *((_QWORD *)v126 + 29);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[30] = *((_QWORD *)v126 + 30);
                v125[31] = *((_QWORD *)v126 + 31);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[32] = *((_QWORD *)v126 + 32);
                v125[33] = *((_QWORD *)v126 + 33);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[34] = *((_QWORD *)v126 + 34);
                v125[35] = *((_QWORD *)v126 + 35);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v125[36] = *((_QWORD *)v126 + 36);
                v125[37] = *((_QWORD *)v126 + 37);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_62:
                *(_BYTE *)(v34 + v36[24]) = v152[v36[24]];
                *(_BYTE *)(v34 + v36[25]) = v152[v36[25]];
                v129 = v36[26];
                v130 = (void *)(v34 + v129);
                v131 = &v152[v129];
                v132 = v74(v34 + v129, 1, v24);
                v133 = v74((uint64_t)v131, 1, v24);
                if (v132)
                {
                  if (v133)
                  {
                    v134 = sub_211958C38(qword_254AC8A78);
                    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
                    v135 = v148;
                  }
                  else
                  {
                    v135 = v148;
                    (*(void (**)(void *, char *, uint64_t))(v148 + 16))(v130, v131, v24);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v130, 0, 1, v24);
                  }
                }
                else
                {
                  v135 = v148;
                  if (v133)
                  {
                    (*(void (**)(void *, uint64_t))(v148 + 8))(v130, v24);
                    v136 = sub_211958C38(qword_254AC8A78);
                    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v148 + 24))(v130, v131, v24);
                  }
                }
                v137 = v36[27];
                v138 = (void *)(v34 + v137);
                v139 = &v152[v137];
                v140 = v74((uint64_t)v138, 1, v24);
                v141 = v74((uint64_t)v139, 1, v24);
                if (v140)
                {
                  if (!v141)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v135 + 16))(v138, v139, v24);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v138, 0, 1, v24);
                    return a1;
                  }
                }
                else
                {
                  if (!v141)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v135 + 24))(v138, v139, v24);
                    return a1;
                  }
                  (*(void (**)(void *, uint64_t))(v135 + 8))(v138, v24);
                }
                v49 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(qword_254AC8A78) - 8) + 64);
                v50 = v138;
                v51 = v139;
                goto LABEL_20;
              }
              sub_21196ECA4((uint64_t)v125);
            }
            else if (v128)
            {
              *v125 = *(_QWORD *)v126;
              v125[1] = *((_QWORD *)v126 + 1);
              v125[2] = *((_QWORD *)v126 + 2);
              v125[3] = *((_QWORD *)v126 + 3);
              v125[4] = *((_QWORD *)v126 + 4);
              v125[5] = *((_QWORD *)v126 + 5);
              v125[6] = *((_QWORD *)v126 + 6);
              v125[7] = *((_QWORD *)v126 + 7);
              v125[8] = *((_QWORD *)v126 + 8);
              v125[9] = *((_QWORD *)v126 + 9);
              v125[10] = *((_QWORD *)v126 + 10);
              v125[11] = *((_QWORD *)v126 + 11);
              v125[12] = *((_QWORD *)v126 + 12);
              v125[13] = *((_QWORD *)v126 + 13);
              v125[14] = *((_QWORD *)v126 + 14);
              v125[15] = *((_QWORD *)v126 + 15);
              v125[16] = *((_QWORD *)v126 + 16);
              v125[17] = *((_QWORD *)v126 + 17);
              v125[18] = *((_QWORD *)v126 + 18);
              v125[19] = *((_QWORD *)v126 + 19);
              v125[20] = *((_QWORD *)v126 + 20);
              v125[21] = *((_QWORD *)v126 + 21);
              v125[22] = *((_QWORD *)v126 + 22);
              v125[23] = *((_QWORD *)v126 + 23);
              v125[24] = *((_QWORD *)v126 + 24);
              v125[25] = *((_QWORD *)v126 + 25);
              v125[26] = *((_QWORD *)v126 + 26);
              v125[27] = *((_QWORD *)v126 + 27);
              v125[28] = *((_QWORD *)v126 + 28);
              v125[29] = *((_QWORD *)v126 + 29);
              v125[30] = *((_QWORD *)v126 + 30);
              v125[31] = *((_QWORD *)v126 + 31);
              v125[32] = *((_QWORD *)v126 + 32);
              v125[33] = *((_QWORD *)v126 + 33);
              v125[34] = *((_QWORD *)v126 + 34);
              v125[35] = *((_QWORD *)v126 + 35);
              v125[36] = *((_QWORD *)v126 + 36);
              v125[37] = *((_QWORD *)v126 + 37);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v74 = v150;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_62;
            }
            memcpy(v125, v126, 0x130uLL);
            goto LABEL_62;
          }
        }
        else
        {
          v73 = v152;
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v53, v103, v55);
            goto LABEL_54;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
        }
        v107 = sub_211958C38(&qword_254AC7C38);
        memcpy(v53, v103, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        goto LABEL_54;
      }
      sub_211934758((uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
    }
    v72 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    v74 = v150;
    v73 = v152;
    goto LABEL_55;
  }
  if (v40)
  {
LABEL_19:
    v49 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2D0) - 8) + 64);
    v50 = (void *)v34;
    v51 = v35;
LABEL_20:
    memcpy(v50, v51, v49);
    return a1;
  }
  v142 = v37;
  v147 = v25;
  v149 = v26;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
  *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
  *(_QWORD *)(v34 + 24) = *((_QWORD *)v35 + 3);
  *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
  *(_BYTE *)(v34 + 40) = v35[40];
  *(_BYTE *)(v34 + 41) = v35[41];
  *(_BYTE *)(v34 + 42) = v35[42];
  *(_BYTE *)(v34 + 43) = v35[43];
  v41 = v36[12];
  v42 = (_QWORD *)(v34 + v41);
  v151 = v35;
  v43 = &v35[v41];
  v44 = type metadata accessor for FMFSchedule();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  v144 = v24;
  if (v46(v43, 1, v44))
  {
    v47 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    v48 = v151;
  }
  else
  {
    *v42 = *(_QWORD *)v43;
    v42[1] = *((_QWORD *)v43 + 1);
    v42[2] = *((_QWORD *)v43 + 2);
    v42[3] = *((_QWORD *)v43 + 3);
    v42[4] = *((_QWORD *)v43 + 4);
    v42[5] = *((_QWORD *)v43 + 5);
    v66 = *(int *)(v44 + 40);
    v67 = (char *)v42 + v66;
    v68 = &v43[v66];
    v69 = sub_211A47304();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = sub_211958C38(&qword_254AC7C38);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    v48 = v151;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v75 = v36[13];
  v76 = (_QWORD *)(v34 + v75);
  v77 = &v48[v75];
  *v76 = *(_QWORD *)v77;
  v76[1] = *((_QWORD *)v77 + 1);
  v78 = v36[14];
  v79 = (_QWORD *)(v34 + v78);
  v80 = &v48[v78];
  *v79 = *(_QWORD *)v80;
  v79[1] = *((_QWORD *)v80 + 1);
  *(_BYTE *)(v34 + v36[15]) = v48[v36[15]];
  *(_QWORD *)(v34 + v36[16]) = *(_QWORD *)&v48[v36[16]];
  *(_QWORD *)(v34 + v36[17]) = *(_QWORD *)&v48[v36[17]];
  *(_QWORD *)(v34 + v36[18]) = *(_QWORD *)&v48[v36[18]];
  v81 = v36[19];
  v82 = (_QWORD *)(v34 + v81);
  v83 = &v48[v81];
  *v82 = *(_QWORD *)v83;
  v82[1] = *((_QWORD *)v83 + 1);
  v84 = v36[20];
  v85 = v34 + v84;
  v86 = &v48[v84];
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_QWORD *)(v85 + 8) = *((_QWORD *)v86 + 1);
  *(_BYTE *)(v85 + 16) = v86[16];
  *(_BYTE *)(v85 + 17) = v86[17];
  *(_BYTE *)(v34 + v36[21]) = v48[v36[21]];
  v87 = v36[22];
  v88 = (_QWORD *)(v34 + v87);
  v89 = &v48[v87];
  *v88 = *(_QWORD *)v89;
  v88[1] = *((_QWORD *)v89 + 1);
  v146 = v36;
  v90 = v36[23];
  v91 = (_QWORD *)(v34 + v90);
  v92 = &v48[v90];
  v143 = *(_QWORD *)&v48[v90 + 168];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v143)
  {
    *v91 = *(_QWORD *)v92;
    v91[1] = *((_QWORD *)v92 + 1);
    v91[2] = *((_QWORD *)v92 + 2);
    v91[3] = *((_QWORD *)v92 + 3);
    v91[4] = *((_QWORD *)v92 + 4);
    v91[5] = *((_QWORD *)v92 + 5);
    v91[6] = *((_QWORD *)v92 + 6);
    v91[7] = *((_QWORD *)v92 + 7);
    v91[8] = *((_QWORD *)v92 + 8);
    v91[9] = *((_QWORD *)v92 + 9);
    v91[10] = *((_QWORD *)v92 + 10);
    v91[11] = *((_QWORD *)v92 + 11);
    v91[12] = *((_QWORD *)v92 + 12);
    v91[13] = *((_QWORD *)v92 + 13);
    v91[14] = *((_QWORD *)v92 + 14);
    v91[15] = *((_QWORD *)v92 + 15);
    v91[16] = *((_QWORD *)v92 + 16);
    v91[17] = *((_QWORD *)v92 + 17);
    v91[18] = *((_QWORD *)v92 + 18);
    v91[19] = *((_QWORD *)v92 + 19);
    v91[20] = *((_QWORD *)v92 + 20);
    v91[21] = *((_QWORD *)v92 + 21);
    v91[22] = *((_QWORD *)v92 + 22);
    v91[23] = *((_QWORD *)v92 + 23);
    v91[24] = *((_QWORD *)v92 + 24);
    v91[25] = *((_QWORD *)v92 + 25);
    v91[26] = *((_QWORD *)v92 + 26);
    v91[27] = *((_QWORD *)v92 + 27);
    v91[28] = *((_QWORD *)v92 + 28);
    v91[29] = *((_QWORD *)v92 + 29);
    v91[30] = *((_QWORD *)v92 + 30);
    v91[31] = *((_QWORD *)v92 + 31);
    v91[32] = *((_QWORD *)v92 + 32);
    v91[33] = *((_QWORD *)v92 + 33);
    v91[34] = *((_QWORD *)v92 + 34);
    v91[35] = *((_QWORD *)v92 + 35);
    v91[36] = *((_QWORD *)v92 + 36);
    v91[37] = *((_QWORD *)v92 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v91, v92, 0x130uLL);
  }
  *(_BYTE *)(v34 + v36[24]) = v151[v36[24]];
  *(_BYTE *)(v34 + v36[25]) = v151[v36[25]];
  v93 = v36[26];
  v94 = (void *)(v34 + v93);
  v95 = &v151[v93];
  if (v149(&v151[v93], 1, v144))
  {
    v96 = sub_211958C38(qword_254AC8A78);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v147 + 16))(v94, v95, v144);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v94, 0, 1, v144);
  }
  v97 = v36[27];
  v98 = (void *)(v34 + v97);
  v99 = &v151[v97];
  if (v149(&v151[v97], 1, v144))
  {
    v100 = sub_211958C38(qword_254AC8A78);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v147 + 16))(v98, v99, v144);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v98, 0, 1, v144);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v142 + 56))(v34, 0, 1, v146);
  return a1;
}

char *initializeWithTake for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;

  v6 = sub_211A4713C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_211958C38(&qword_254AC8C98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_211A47208();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = sub_211958C38(qword_254AC8A78);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = (int *)type metadata accessor for FMFLocationAlert();
  v21 = *((_QWORD *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v52 = v14;
    v53 = v21;
    v23 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v23;
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    v18[40] = v19[40];
    v18[41] = v19[41];
    *((_WORD *)v18 + 21) = *((_WORD *)v19 + 21);
    v24 = v20[12];
    v25 = &v18[v24];
    v26 = &v19[v24];
    v27 = type metadata accessor for FMFSchedule();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v52;
    }
    else
    {
      v50 = v28;
      v51 = v15;
      v31 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v31;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      v32 = *(int *)(v27 + 40);
      v49 = &v25[v32];
      v33 = &v26[v32];
      v34 = sub_211A47304();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_211958C38(&qword_254AC7C38);
        memcpy(v49, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v49, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v49, 0, 1, v34);
      }
      v15 = v51;
      v30 = v52;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v25, 0, 1, v27);
    }
    *(_OWORD *)&v18[v20[13]] = *(_OWORD *)&v19[v20[13]];
    *(_OWORD *)&v18[v20[14]] = *(_OWORD *)&v19[v20[14]];
    v18[v20[15]] = v19[v20[15]];
    *(_QWORD *)&v18[v20[16]] = *(_QWORD *)&v19[v20[16]];
    *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
    *(_QWORD *)&v18[v20[18]] = *(_QWORD *)&v19[v20[18]];
    *(_OWORD *)&v18[v20[19]] = *(_OWORD *)&v19[v20[19]];
    v37 = v20[20];
    v38 = &v18[v37];
    v39 = &v19[v37];
    *(_OWORD *)v38 = *(_OWORD *)v39;
    *((_WORD *)v38 + 8) = *((_WORD *)v39 + 8);
    v18[v20[21]] = v19[v20[21]];
    *(_OWORD *)&v18[v20[22]] = *(_OWORD *)&v19[v20[22]];
    memcpy(&v18[v20[23]], &v19[v20[23]], 0x130uLL);
    v18[v20[24]] = v19[v20[24]];
    v18[v20[25]] = v19[v20[25]];
    v40 = v20[26];
    v41 = &v18[v40];
    v42 = &v19[v40];
    if (v15(&v19[v40], 1, v13))
    {
      v43 = sub_211958C38(qword_254AC8A78);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v41, v42, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v41, 0, 1, v13);
    }
    v44 = v20[27];
    v45 = &v18[v44];
    v46 = &v19[v44];
    if (v15(v46, 1, v13))
    {
      v47 = sub_211958C38(qword_254AC8A78);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v45, v46, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v45, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v53 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

char *assignWithTake for FMFActionURLInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, int *);
  int v47;
  int v48;
  __int128 v49;
  uint64_t v50;
  _OWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unsigned int (*v57)(char *, uint64_t, void *);
  size_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  __int128 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  __int128 v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(char *, uint64_t, uint64_t);
  int v103;
  size_t v104;
  void *v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  char *v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  char *v159;
  int v160;
  int v161;
  uint64_t v162;
  char *v163;
  char *v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  void *__src;
  _QWORD *__srca;
  uint64_t (*v170)(char *, uint64_t, uint64_t);
  uint64_t (*v171)(uint64_t, uint64_t, uint64_t);

  v6 = sub_211A4713C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_211958C38(&qword_254AC8C98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v26 = *(_QWORD *)v24;
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_211A47208();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_12:
    v35 = sub_211958C38(qword_254AC8A78);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_13:
  v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v40 = *(_QWORD *)v38;
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = a3[10];
  v42 = (uint64_t)&a1[v41];
  v43 = &a2[v41];
  v44 = (int *)type metadata accessor for FMFLocationAlert();
  v45 = *((_QWORD *)v44 - 1);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v45 + 48);
  v47 = v46(v42, 1, v44);
  v48 = v46((uint64_t)v43, 1, v44);
  if (!v47)
  {
    if (v48)
    {
      sub_211934758(v42, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    v171 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v32;
    v166 = v31;
    v61 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_QWORD *)(v42 + 8) = v61;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v42 + 16) = *((_OWORD *)v43 + 1);
    *(_QWORD *)(v42 + 32) = *((_QWORD *)v43 + 4);
    *(_BYTE *)(v42 + 40) = v43[40];
    *(_BYTE *)(v42 + 41) = v43[41];
    *(_BYTE *)(v42 + 42) = v43[42];
    *(_BYTE *)(v42 + 43) = v43[43];
    v62 = v44[12];
    v63 = (char *)(v42 + v62);
    v64 = &v43[v62];
    v65 = type metadata accessor for FMFSchedule();
    __srca = *(_QWORD **)(v65 - 8);
    v66 = (uint64_t (*)(char *, uint64_t, uint64_t))__srca[6];
    v67 = v66(v63, 1, v65);
    v68 = v66(v64, 1, v65);
    if (v67)
    {
      if (!v68)
      {
        v69 = *((_OWORD *)v64 + 1);
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_OWORD *)v63 + 1) = v69;
        *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
        v70 = *(int *)(v65 + 40);
        v164 = &v63[v70];
        v71 = &v64[v70];
        v72 = sub_211A47304();
        v73 = *(_QWORD *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          v74 = sub_211958C38(&qword_254AC7C38);
          memcpy(v164, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v164, v71, v72);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v164, 0, 1, v72);
        }
        v83 = v171;
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v63, 0, 1, v65);
        goto LABEL_51;
      }
LABEL_31:
      v81 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      v82 = v166;
      v83 = v171;
      goto LABEL_52;
    }
    if (v68)
    {
      sub_211934758((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
      goto LABEL_31;
    }
    v96 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v96;
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    v97 = *(int *)(v65 + 40);
    v98 = &v63[v97];
    v99 = &v64[v97];
    v100 = sub_211A47304();
    v101 = *(_QWORD *)(v100 - 8);
    v102 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
    v165 = v98;
    LODWORD(v98) = v102(v98, 1, v100);
    v103 = v102(v99, 1, v100);
    if ((_DWORD)v98)
    {
      v83 = v171;
      if (!v103)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 32))(v165, v99, v100);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v165, 0, 1, v100);
        goto LABEL_51;
      }
      v104 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v105 = v165;
    }
    else
    {
      v83 = v171;
      if (!v103)
      {
        (*(void (**)(void *, char *, uint64_t))(v101 + 40))(v165, v99, v100);
        goto LABEL_51;
      }
      (*(void (**)(void *, uint64_t))(v101 + 8))(v165, v100);
      v104 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v105 = v165;
    }
    memcpy(v105, v99, v104);
LABEL_51:
    v82 = v166;
LABEL_52:
    v106 = v44[13];
    v107 = (_QWORD *)(v42 + v106);
    v108 = &v43[v106];
    v110 = *(_QWORD *)v108;
    v109 = *((_QWORD *)v108 + 1);
    *v107 = v110;
    v107[1] = v109;
    swift_bridgeObjectRelease();
    v111 = v44[14];
    v112 = (_QWORD *)(v42 + v111);
    v113 = &v43[v111];
    v115 = *(_QWORD *)v113;
    v114 = *((_QWORD *)v113 + 1);
    *v112 = v115;
    v112[1] = v114;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v42 + v44[15]) = v43[v44[15]];
    *(_QWORD *)(v42 + v44[16]) = *(_QWORD *)&v43[v44[16]];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v42 + v44[17]) = *(_QWORD *)&v43[v44[17]];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v42 + v44[18]) = *(_QWORD *)&v43[v44[18]];
    swift_bridgeObjectRelease();
    v116 = v44[19];
    v117 = (_QWORD *)(v42 + v116);
    v118 = &v43[v116];
    v120 = *(_QWORD *)v118;
    v119 = *((_QWORD *)v118 + 1);
    *v117 = v120;
    v117[1] = v119;
    swift_bridgeObjectRelease();
    v121 = v44[20];
    v122 = v42 + v121;
    v123 = &v43[v121];
    v124 = *(_QWORD *)&v43[v121 + 8];
    *(_QWORD *)v122 = *(_QWORD *)&v43[v121];
    *(_QWORD *)(v122 + 8) = v124;
    swift_bridgeObjectRelease();
    *(_WORD *)(v122 + 16) = *((_WORD *)v123 + 8);
    *(_BYTE *)(v42 + v44[21]) = v43[v44[21]];
    v125 = v44[22];
    v126 = (_QWORD *)(v42 + v125);
    v127 = &v43[v125];
    v129 = *(_QWORD *)v127;
    v128 = *((_QWORD *)v127 + 1);
    *v126 = v129;
    v126[1] = v128;
    swift_bridgeObjectRelease();
    v130 = v44[23];
    v131 = (_QWORD *)(v42 + v130);
    v132 = &v43[v130];
    if (*(_QWORD *)(v42 + v130 + 168))
    {
      if (*((_QWORD *)v132 + 21))
      {
        *v131 = *(_QWORD *)v132;
        swift_bridgeObjectRelease();
        v133 = *((_QWORD *)v132 + 2);
        v131[1] = *((_QWORD *)v132 + 1);
        v131[2] = v133;
        swift_bridgeObjectRelease();
        v134 = *((_QWORD *)v132 + 4);
        v131[3] = *((_QWORD *)v132 + 3);
        v131[4] = v134;
        swift_bridgeObjectRelease();
        v135 = *((_QWORD *)v132 + 6);
        v131[5] = *((_QWORD *)v132 + 5);
        v131[6] = v135;
        swift_bridgeObjectRelease();
        v136 = *((_QWORD *)v132 + 8);
        v131[7] = *((_QWORD *)v132 + 7);
        v131[8] = v136;
        swift_bridgeObjectRelease();
        v137 = *((_QWORD *)v132 + 10);
        v131[9] = *((_QWORD *)v132 + 9);
        v131[10] = v137;
        swift_bridgeObjectRelease();
        v138 = *((_QWORD *)v132 + 12);
        v131[11] = *((_QWORD *)v132 + 11);
        v131[12] = v138;
        swift_bridgeObjectRelease();
        v139 = *((_QWORD *)v132 + 14);
        v131[13] = *((_QWORD *)v132 + 13);
        v131[14] = v139;
        swift_bridgeObjectRelease();
        v140 = *((_QWORD *)v132 + 16);
        v131[15] = *((_QWORD *)v132 + 15);
        v131[16] = v140;
        swift_bridgeObjectRelease();
        v141 = *((_QWORD *)v132 + 18);
        v131[17] = *((_QWORD *)v132 + 17);
        v131[18] = v141;
        swift_bridgeObjectRelease();
        v142 = *((_QWORD *)v132 + 20);
        v131[19] = *((_QWORD *)v132 + 19);
        v131[20] = v142;
        swift_bridgeObjectRelease();
        v131[21] = *((_QWORD *)v132 + 21);
        swift_bridgeObjectRelease();
        v143 = *((_QWORD *)v132 + 23);
        v131[22] = *((_QWORD *)v132 + 22);
        v131[23] = v143;
        swift_bridgeObjectRelease();
        v144 = *((_QWORD *)v132 + 25);
        v131[24] = *((_QWORD *)v132 + 24);
        v131[25] = v144;
        swift_bridgeObjectRelease();
        v145 = *((_QWORD *)v132 + 27);
        v131[26] = *((_QWORD *)v132 + 26);
        v131[27] = v145;
        swift_bridgeObjectRelease();
        v146 = *((_QWORD *)v132 + 29);
        v131[28] = *((_QWORD *)v132 + 28);
        v131[29] = v146;
        swift_bridgeObjectRelease();
        v147 = *((_QWORD *)v132 + 31);
        v131[30] = *((_QWORD *)v132 + 30);
        v131[31] = v147;
        swift_bridgeObjectRelease();
        v148 = *((_QWORD *)v132 + 33);
        v131[32] = *((_QWORD *)v132 + 32);
        v131[33] = v148;
        swift_bridgeObjectRelease();
        v149 = *((_QWORD *)v132 + 35);
        v131[34] = *((_QWORD *)v132 + 34);
        v131[35] = v149;
        swift_bridgeObjectRelease();
        v150 = *((_QWORD *)v132 + 37);
        v131[36] = *((_QWORD *)v132 + 36);
        v131[37] = v150;
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      sub_21196ECA4((uint64_t)v131);
    }
    memcpy(v131, v132, 0x130uLL);
LABEL_57:
    *(_BYTE *)(v42 + v44[24]) = v43[v44[24]];
    *(_BYTE *)(v42 + v44[25]) = v43[v44[25]];
    v151 = v44[26];
    v152 = (void *)(v42 + v151);
    v153 = &v43[v151];
    v154 = v83(v42 + v151, 1, v30);
    v155 = v83((uint64_t)v153, 1, v30);
    if (v154)
    {
      if (!v155)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v152, v153, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v152, 0, 1, v30);
LABEL_63:
        v157 = v44[27];
        v158 = (void *)(v42 + v157);
        v159 = &v43[v157];
        v160 = v83((uint64_t)v158, 1, v30);
        v161 = v83((uint64_t)v159, 1, v30);
        if (v160)
        {
          if (!v161)
          {
            (*(void (**)(void *, char *, uint64_t))(v82 + 32))(v158, v159, v30);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v158, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v161)
          {
            (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v158, v159, v30);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v82 + 8))(v158, v30);
        }
        v58 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(qword_254AC8A78) - 8) + 64);
        v59 = v158;
        v60 = v159;
        goto LABEL_20;
      }
    }
    else
    {
      if (!v155)
      {
        (*(void (**)(void *, char *, uint64_t))(v82 + 40))(v152, v153, v30);
        goto LABEL_63;
      }
      (*(void (**)(void *, uint64_t))(v82 + 8))(v152, v30);
    }
    v156 = sub_211958C38(qword_254AC8A78);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    goto LABEL_63;
  }
  if (v48)
  {
LABEL_19:
    v58 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2D0) - 8) + 64);
    v59 = (void *)v42;
    v60 = v43;
LABEL_20:
    memcpy(v59, v60, v58);
    return a1;
  }
  __src = (void *)v30;
  v170 = v32;
  v49 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v49;
  *(_QWORD *)(v42 + 32) = *((_QWORD *)v43 + 4);
  *(_BYTE *)(v42 + 40) = v43[40];
  *(_BYTE *)(v42 + 41) = v43[41];
  *(_WORD *)(v42 + 42) = *((_WORD *)v43 + 21);
  v50 = v44[12];
  v51 = (_OWORD *)(v42 + v50);
  v52 = &v43[v50];
  v53 = type metadata accessor for FMFSchedule();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    v55 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    v56 = __src;
    v57 = (unsigned int (*)(char *, uint64_t, void *))v170;
  }
  else
  {
    v167 = v31;
    v75 = *((_OWORD *)v52 + 1);
    *v51 = *(_OWORD *)v52;
    v51[1] = v75;
    v51[2] = *((_OWORD *)v52 + 2);
    v76 = *(int *)(v53 + 40);
    v162 = v54;
    v163 = (char *)v51 + v76;
    v77 = &v52[v76];
    v78 = sub_211A47304();
    v79 = *(_QWORD *)(v78 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
    {
      v80 = sub_211958C38(&qword_254AC7C38);
      memcpy(v163, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v163, v77, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v163, 0, 1, v78);
    }
    v31 = v167;
    v56 = __src;
    v57 = (unsigned int (*)(char *, uint64_t, void *))v170;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v51, 0, 1, v53);
  }
  *(_OWORD *)(v42 + v44[13]) = *(_OWORD *)&v43[v44[13]];
  *(_OWORD *)(v42 + v44[14]) = *(_OWORD *)&v43[v44[14]];
  *(_BYTE *)(v42 + v44[15]) = v43[v44[15]];
  *(_QWORD *)(v42 + v44[16]) = *(_QWORD *)&v43[v44[16]];
  *(_QWORD *)(v42 + v44[17]) = *(_QWORD *)&v43[v44[17]];
  *(_QWORD *)(v42 + v44[18]) = *(_QWORD *)&v43[v44[18]];
  *(_OWORD *)(v42 + v44[19]) = *(_OWORD *)&v43[v44[19]];
  v84 = v44[20];
  v85 = v42 + v84;
  v86 = &v43[v84];
  *(_OWORD *)v85 = *(_OWORD *)v86;
  *(_WORD *)(v85 + 16) = *((_WORD *)v86 + 8);
  *(_BYTE *)(v42 + v44[21]) = v43[v44[21]];
  *(_OWORD *)(v42 + v44[22]) = *(_OWORD *)&v43[v44[22]];
  memcpy((void *)(v42 + v44[23]), &v43[v44[23]], 0x130uLL);
  *(_BYTE *)(v42 + v44[24]) = v43[v44[24]];
  *(_BYTE *)(v42 + v44[25]) = v43[v44[25]];
  v87 = v44[26];
  v88 = (void *)(v42 + v87);
  v89 = &v43[v87];
  if (v57(&v43[v87], 1, v56))
  {
    v90 = sub_211958C38(qword_254AC8A78);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, void *))(v31 + 32))(v88, v89, v56);
    (*(void (**)(void *, _QWORD, uint64_t, void *))(v31 + 56))(v88, 0, 1, v56);
  }
  v91 = v44[27];
  v92 = (void *)(v42 + v91);
  v93 = &v43[v91];
  if (v57(v93, 1, v56))
  {
    v94 = sub_211958C38(qword_254AC8A78);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, void *))(v31 + 32))(v92, v93, v56);
    (*(void (**)(void *, _QWORD, uint64_t, void *))(v31 + 56))(v92, 0, 1, v56);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFActionURLInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_211981734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_211958C38(&qword_254AC8C98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_211958C38(qword_254AC8A78);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[8];
    }
    else
    {
      v13 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
      v12 = *(_QWORD *)(v13 - 8);
      v14 = a3[10];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for FMFActionURLInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_211981828(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_211958C38(&qword_254AC8C98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_211958C38(qword_254AC8A78);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v10 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[10];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_211981900()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21190F62C(319, (unint64_t *)&qword_254AC9490, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_21190F62C(319, (unint64_t *)&qword_254ACC3B0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_21190F62C(319, qword_254AC96F0, (void (*)(uint64_t))type metadata accessor for FMFLocationAlert);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for FMFSavePrefsRequest()
{
  uint64_t result;

  result = qword_254AC9750;
  if (!qword_254AC9750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211981A18()
{
  return swift_initClassMetadata2();
}

uint64_t sub_211981A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t inited;
  _OWORD *v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  id v26;
  id v27[3];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v33 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(v0 + qword_254AC9748 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + qword_254AC9748);
    v32 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v30 = v3;
    *((_QWORD *)&v30 + 1) = v2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_21193C870((uint64_t)&v30, 0x656369766544656DLL, 0xEA00000000006449);
    return swift_endAccess();
  }
  else
  {
    sub_211A46F74();
    swift_allocObject();
    sub_211A46F68();
    v5 = *(_QWORD *)(v0 + qword_254AC9738 + 8);
    v6 = *(_QWORD *)(v0 + qword_254AC9738 + 16);
    v7 = *(_QWORD *)(v0 + qword_254AC9738 + 24);
    *(_QWORD *)&v30 = *(_QWORD *)(v0 + qword_254AC9738);
    *((_QWORD *)&v30 + 1) = v5;
    v31 = v6;
    v32 = v7;
    sub_21192769C(v30, v5, v6);
    sub_211958C38(&qword_254AC97A0);
    sub_21198204C();
    v8 = sub_211A46F5C();
    v10 = v9;
    sub_21195A23C(v30, v5, v6);
    swift_release();
    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_211A47160();
    v27[0] = 0;
    v13 = objc_msgSend(v11, sel_JSONObjectWithData_options_error_, v12, 0, v27);

    v14 = v27[0];
    if (v13)
    {
      sub_211A47E8C();
      swift_unknownObjectRelease();
      sub_21193DB98(&v28, &v30);
      sub_211950B6C((uint64_t)&v30, (uint64_t)&v28);
      v15 = sub_211958C38(&qword_254AC97B8);
      if (swift_dynamicCast())
      {
        v16 = v27[0];
        v26 = v27[0];
        if ((*(_BYTE *)(v1 + qword_254AC9740) & 1) != 0)
        {
          sub_211958C38(&qword_254AC97C8);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_211A4A230;
          v22 = (_OWORD *)(inited + 48);
          strcpy((char *)(inited + 32), "hideLocation");
          *(_BYTE *)(inited + 45) = 0;
          *(_WORD *)(inited + 46) = -5120;
          if (v16[2] && (v23 = sub_21195BB68(0x61636F4C65646968, 0xEC0000006E6F6974), (v24 & 1) != 0))
          {
            sub_211950B6C(v16[7] + 32 * v23, (uint64_t)v22);
          }
          else
          {
            *v22 = 0u;
            *(_OWORD *)(inited + 64) = 0u;
          }
          swift_bridgeObjectRelease();
          v25 = sub_211A39ED0(inited);
          *((_QWORD *)&v29 + 1) = sub_211958C38(&qword_254AC97D0);
          *(_QWORD *)&v28 = v25;
          swift_beginAccess();
          v17 = 0x7366657270;
          v18 = 0xE500000000000000;
        }
        else
        {
          sub_211A40BA8(0x61636F4C65646968, 0xEC0000006E6F6974, &v28);
          sub_21193999C((uint64_t)&v28);
          sub_211A40BA8(0x657469726F766166, 0xE900000000000073, &v28);
          sub_21193999C((uint64_t)&v28);
          *((_QWORD *)&v29 + 1) = v15;
          *(_QWORD *)&v28 = v26;
          swift_beginAccess();
          sub_21193C870((uint64_t)&v28, 0x7366657270, 0xE500000000000000);
          v28 = 0u;
          v29 = 0u;
          v17 = 0x656369766544656DLL;
          v18 = 0xEA00000000006449;
        }
        sub_21193C870((uint64_t)&v28, v17, v18);
        swift_endAccess();
      }
      sub_21193B8F8(v8, v10);
      return sub_211931C34((uint64_t)&v30);
    }
    else
    {
      v19 = v14;
      v20 = (void *)sub_211A470DC();

      swift_willThrow();
      return sub_21193B8F8(v8, v10);
    }
  }
}

uint64_t sub_211981F0C()
{
  uint64_t v0;

  sub_21195A23C(*(_QWORD *)(v0 + qword_254AC9738), *(_QWORD *)(v0 + qword_254AC9738 + 8), *(_QWORD *)(v0 + qword_254AC9738 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_211981F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21195A23C(*(_QWORD *)(v0 + qword_254AC9738), *(_QWORD *)(v0 + qword_254AC9738 + 8), *(_QWORD *)(v0 + qword_254AC9738 + 16));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_211982024()
{
  sub_211981F44();
  return swift_deallocClassInstance();
}

uint64_t sub_211982044()
{
  return type metadata accessor for FMFSavePrefsRequest();
}

unint64_t sub_21198204C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254AC97A8;
  if (!qword_254AC97A8)
  {
    v1 = sub_21195E2C0(&qword_254AC97A0);
    v2 = sub_2119639D4();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC97A8);
  }
  return result;
}

uint64_t sub_2119820B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FMFLocation.address.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _OWORD v5[19];
  _BYTE v6[360];
  _BYTE v7[360];

  v3 = type metadata accessor for FMFLocation();
  sub_21192DD68(v1 + *(int *)(v3 + 44), (uint64_t)v6, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v6, (uint64_t)v7, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v7) == 1)
  {
    sub_21196F528(v5);
    return sub_21192DD68((uint64_t)v5, a1, &qword_254ACCB40);
  }
  else
  {
    sub_21192DD68((uint64_t)v7, a1, &qword_254ACCB40);
    return sub_21196F7C4((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  }
}

FMFCore::FMFLocationSource_optional __swiftcall FMFLocationSource.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (FMFCore::FMFLocationSource_optional)rawValue;
}

uint64_t FMFLocationSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

FMFCore::FMFLocationSource_optional sub_2119821A4(Swift::Int *a1)
{
  return FMFLocationSource.init(rawValue:)(*a1);
}

uint64_t FMFLocation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocation.motionActivityState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FMFLocation.motionActivityState.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*FMFLocation.motionActivityState.modify())()
{
  return nullsub_1;
}

_BYTE *FMFLocation.locationSource.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = *result;
  return result;
}

uint64_t (*FMFLocation.locationSource.modify())()
{
  return nullsub_1;
}

uint64_t FMFLocation.poiIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMFLocation() + 32);
  return sub_211982250(v3, a1);
}

uint64_t sub_211982250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FMFLocation.poiIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMFLocation() + 32);
  return sub_2119822C8(a1, v3);
}

uint64_t sub_2119822C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FMFLocation.poiIdentifier.modify())(_QWORD, double)
{
  type metadata accessor for FMFLocation();
  return nullsub_1;
}

uint64_t FMFLocation.isLivePending.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocation() + 36));
}

uint64_t FMFLocation.isLivePending.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFLocation();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*FMFLocation.isLivePending.modify())(_QWORD, double)
{
  type metadata accessor for FMFLocation();
  return nullsub_1;
}

uint64_t FMFLocation.isLivePaused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocation() + 40));
}

uint64_t FMFLocation.isLivePaused.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFLocation();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*FMFLocation.isLivePaused.modify())(_QWORD, double)
{
  type metadata accessor for FMFLocation();
  return nullsub_1;
}

uint64_t FMFLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int16 v6;
  _BYTE v7[360];
  _BYTE v8[320];
  uint64_t v9;
  __int16 v10;

  v3 = type metadata accessor for FMFLocation();
  sub_21192DD68(v1 + *(int *)(v3 + 44), (uint64_t)v7, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v7, (uint64_t)v8, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v8) == 1)
  {
    v4 = 0;
    result = 0;
    v6 = 0;
  }
  else
  {
    v4 = v9;
    v6 = v10;
    result = swift_bridgeObjectRetain();
  }
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = result;
  *(_WORD *)(a1 + 16) = v6;
  return result;
}

uint64_t FMFLocation.isInaccurate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL4 v2;
  _BYTE v4[360];
  _BYTE v5[368];

  v1 = type metadata accessor for FMFLocation();
  sub_21192DD68(v0 + *(int *)(v1 + 44), (uint64_t)v4, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v4, (uint64_t)v5, &qword_254AC8CD0);
  v2 = sub_2119724C8((uint64_t)v5) == 1;
  return (v2 | v5[352]) & 1;
}

uint64_t FMFLocation.displayLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;
  _BYTE __dst[353];
  _BYTE v5[360];
  _BYTE __src[360];

  v1 = type metadata accessor for FMFLocation();
  sub_21192DD68(v0 + *(int *)(v1 + 44), (uint64_t)v5, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v5, (uint64_t)__src, &qword_254AC8CD0);
  v2 = sub_2119724C8((uint64_t)__src);
  result = 0;
  if (v2 != 1)
  {
    memcpy(__dst, __src, sizeof(__dst));
    return sub_21196EEC4();
  }
  return result;
}

BOOL FMFLocation.isProactiveLocation.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) == 1;
}

BOOL FMFLocation.isLiveLocation.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) == 2;
}

BOOL FMFLocation.isOld.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  id v8;
  id v9;
  double v10;
  double v11;
  _BYTE v12[360];
  id v13[45];

  v1 = sub_211A47208();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for FMFLocation();
  sub_21192DD68(v0 + *(int *)(v6 + 44), (uint64_t)v12, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v12, (uint64_t)v13, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v13) == 1)
    return 0;
  v8 = v13[38];
  v9 = objc_msgSend(v8, sel_timestamp);
  sub_211A471E4();

  sub_211A471C0();
  v11 = v10;

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  return v11 < -300.0;
}

void sub_211982704(char *a1)
{
  sub_2119763D8(*a1);
}

void sub_211982710()
{
  char *v0;

  sub_2119AD300(*v0);
}

void sub_211982718()
{
  __asm { BR              X10 }
}

uint64_t sub_211982748()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119827A4(uint64_t a1)
{
  char *v1;

  sub_2119BBA3C(a1, *v1);
}

uint64_t sub_2119827AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211985E84();
  *a1 = result;
  return result;
}

uint64_t sub_2119827D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2119827FC + 4 * byte_211A4B5F4[*v0]))();
}

void sub_2119827FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461636F6CLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_21198284C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211985E84();
  *a1 = result;
  return result;
}

uint64_t sub_211982870()
{
  sub_2119321C8();
  return sub_211A4839C();
}

double sub_211982898(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 352) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_2119828D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  int v22;
  BOOL v23;
  char v24;
  int v25;
  uint64_t result;
  BOOL v27;
  _QWORD v28[2];
  _BYTE v29[368];

  v28[1] = a2;
  v7 = (int *)type metadata accessor for FMFLocation();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)v28 - v14;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
  v16 = a4 + *(int *)(v13 + 32);
  v17 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_QWORD *)(a4 + 8) = v18;
  sub_21192DD68(a1 + v7[11], (uint64_t)v29, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v29, a4 + v7[11], &qword_254AC8CD0);
  v19 = a1 + v7[8];
  swift_bridgeObjectRetain();
  sub_21198610C((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_21195C46C);
  sub_21195C8F8(v19, v16);
  *(_BYTE *)(a4 + 33) = *(_BYTE *)(a1 + 33);
  v20 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a4 + 24) = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a4 + 32) = v20;
  *(_BYTE *)(a4 + 16) = *(_BYTE *)(a1 + 16);
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
    sub_21193324C(a1, (uint64_t)v15);
LABEL_4:
    v22 = v15[33];
    sub_211933290((uint64_t)v15);
    v23 = v22 != 3;
    goto LABEL_6;
  }
  v21 = sub_211A48258();
  swift_bridgeObjectRelease();
  sub_21193324C(a1, (uint64_t)v15);
  if ((v21 & 1) != 0)
    goto LABEL_4;
  sub_211933290((uint64_t)v15);
  v23 = 0;
LABEL_6:
  *(_BYTE *)(a4 + v7[9]) = v23;
  if (a3 < 2u)
  {
    v24 = sub_211A48258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211973360(a1, (uint64_t)v11);
    if ((v24 & 1) == 0)
    {
      result = sub_211933290((uint64_t)v11);
      v27 = 0;
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211973360(a1, (uint64_t)v11);
  }
  v25 = v11[33];
  result = sub_211933290((uint64_t)v11);
  v27 = v25 != 3;
LABEL_11:
  *(_BYTE *)(a4 + v7[10]) = v27;
  return result;
}

uint64_t FMFLocation.init(from:address:label:labels:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t result;
  _BYTE v17[304];
  _QWORD __src[45];
  _BYTE __dst[360];

  sub_21192DD68(a2, (uint64_t)v17, &qword_254ACCB40);
  v9 = *a3;
  v10 = a3[1];
  v11 = *((_WORD *)a3 + 8);
  *(_QWORD *)(a5 + 24) = 0;
  *(_BYTE *)(a5 + 32) = 1;
  v12 = (int *)type metadata accessor for FMFLocation();
  v13 = a5 + v12[8];
  v14 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 0;
  sub_21192DD68((uint64_t)v17, (uint64_t)__src, &qword_254ACCB40);
  __src[38] = a1;
  LOBYTE(__src[39]) = 0;
  __src[40] = v9;
  __src[41] = v10;
  LOWORD(__src[42]) = v11;
  __src[43] = a4;
  LOBYTE(__src[44]) = 0;
  memcpy(__dst, __src, 0x161uLL);
  nullsub_1(__dst, v15);
  result = sub_21192DD68((uint64_t)__dst, a5 + v12[11], &qword_254AC8CD0);
  *(_BYTE *)(a5 + 33) = 0;
  *(_BYTE *)(a5 + v12[9]) = 0;
  *(_BYTE *)(a5 + v12[10]) = 0;
  return result;
}

uint64_t FMFLocation.init(from:shiftedLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  double v15;
  char v16;
  char v17;
  uint64_t result;
  _QWORD __src[45];
  _BYTE __dst[353];
  _BYTE v21[304];
  _BYTE v22[360];
  _BYTE v23[368];

  v6 = (int *)type metadata accessor for FMFLocation();
  v7 = a3 + v6[8];
  v8 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_QWORD *)(a3 + 8) = v9;
  *(_BYTE *)(a3 + 16) = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a3 + 33) = *(_BYTE *)(a1 + 33);
  sub_21192DD68(a1 + v6[11], (uint64_t)v22, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v22, (uint64_t)v23, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v23) == 1)
  {
    sub_21196F528(__dst);
    sub_21192DD68((uint64_t)__dst, (uint64_t)v21, &qword_254ACCB40);
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_21192DD68((uint64_t)v22, (uint64_t)__dst, &qword_254AC8CD0);
    v12 = *(_QWORD *)&__dst[320];
    v13 = *(_QWORD *)&__dst[328];
    v14 = *(_WORD *)&__dst[336];
    v11 = *(_QWORD *)&__dst[344];
    v10 = __dst[352];
    sub_21196F7C4((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21192DD68((uint64_t)v23, (uint64_t)v21, &qword_254ACCB40);
  }
  sub_21192DD68((uint64_t)v21, (uint64_t)__src, &qword_254ACCB40);
  __src[38] = a2;
  LOBYTE(__src[39]) = 0;
  __src[40] = v12;
  __src[41] = v13;
  LOWORD(__src[42]) = v14;
  __src[43] = v11;
  LOBYTE(__src[44]) = v10;
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst, v15);
  sub_21192DD68((uint64_t)__dst, a3 + v6[11], &qword_254AC8CD0);
  v16 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a3 + 24) = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a3 + 32) = v16;
  *(_BYTE *)(a3 + v6[9]) = *(_BYTE *)(a1 + v6[9]);
  v17 = *(_BYTE *)(a1 + v6[10]);
  swift_bridgeObjectRetain();
  result = sub_211933290(a1);
  *(_BYTE *)(a3 + v6[10]) = v17;
  return result;
}

uint64_t sub_211982F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  id v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  void *v81;
  Swift::String v82;
  int v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  double v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  int v138;
  char v139;
  int *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  unint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  int v169;
  void *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  id v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  int *v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD v198[13];
  __int128 v199;
  __int128 v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD v222[45];
  _BYTE v223[368];

  v195 = a2;
  v5 = sub_211A47634();
  v183 = *(_QWORD *)(v5 - 8);
  v184 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v182 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47430();
  v179 = *(_QWORD *)(v8 - 8);
  v180 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v178 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A47460();
  v176 = *(_QWORD *)(v11 - 8);
  v177 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v181 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254AC99A8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v192 = (char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v175 = (char *)&v155 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v173 = (char *)&v155 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v171 = (char *)&v155 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v168 = (char *)&v155 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v191 = (char *)&v155 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v190 = (char *)&v155 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v189 = (char *)&v155 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v188 = (char *)&v155 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v187 = (char *)&v155 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v186 = (char *)&v155 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v185 = (char *)&v155 - v50;
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)&v155 - v52;
  v165 = sub_211A47598();
  v54 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165, v55);
  v57 = (char *)&v155 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_211A47208();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v60);
  v62 = (char *)&v155 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 1;
  v193 = (int *)type metadata accessor for FMFLocation();
  v194 = (uint64_t *)a3;
  v63 = a3 + v193[8];
  v64 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 1, 1, v64);
  sub_211A47610();
  v66 = v65;
  sub_211A4761C();
  v68 = v67;
  sub_211A47604();
  v70 = v69;
  sub_211A475BC();
  v72 = v71;
  sub_211A475B0();
  v74 = v73;
  sub_211A475E0();
  v76 = v75;
  sub_211A47628();
  sub_211A471CC();
  v77 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v78 = (void *)sub_211A471A8();
  v174 = objc_msgSend(v77, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v78, v66, v68, v70, v72, v74, 0.0, 0.0, v76, 0);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v58);
  v79 = (_QWORD *)sub_211A475EC();
  if (v79[2])
  {
    v80 = v79[4];
    v81 = (void *)v79[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v172 = v80;
    v82._countAndFlagsBits = v80;
    v170 = v81;
    v82._object = v81;
    FMFDefaultLabel.init(rawValue:)(v82);
    if (v223[0] == 5)
      v83 = 259;
    else
      v83 = 3;
    v169 = v83;
  }
  else
  {
    swift_bridgeObjectRelease();
    v172 = 0;
    v170 = 0;
    v169 = 0;
  }
  v84 = sub_211A474CC();
  v85 = v194;
  *v194 = v84;
  v85[1] = v86;
  v87 = v165;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v57, *MEMORY[0x24BE323B0], v165);
  v88 = sub_211A475D4();
  v166 = v89;
  v167 = v88;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v87);
  sub_211A475F8();
  v90 = sub_211A476D0();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  v93 = v92(v53, 1, v90);
  v94 = (uint64_t)v173;
  v95 = (uint64_t)v171;
  if (v93 == 1)
  {
    sub_211923EE8((uint64_t)v53, &qword_254AC99A8);
    v165 = 0;
  }
  else
  {
    v165 = sub_211A476A0();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v53, v90);
  }
  v96 = (uint64_t)v175;
  sub_211A475F8();
  v97 = (uint64_t)v185;
  v98 = v92(v185, 1, v90);
  v99 = (uint64_t)v168;
  if (v98 == 1)
  {
    sub_211923EE8(v97, &qword_254AC99A8);
    v175 = 0;
    v164 = 0;
  }
  else
  {
    v175 = (char *)sub_211A476AC();
    v164 = v100;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v97, v90);
  }
  sub_211A475F8();
  v101 = (uint64_t)v186;
  if (v92(v186, 1, v90) == 1)
  {
    sub_211923EE8(v101, &qword_254AC99A8);
    v185 = 0;
    v163 = 0;
  }
  else
  {
    v185 = (char *)sub_211A4764C();
    v163 = v102;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v101, v90);
  }
  sub_211A475F8();
  v103 = (uint64_t)v187;
  if (v92(v187, 1, v90) == 1)
  {
    sub_211923EE8(v103, &qword_254AC99A8);
    v186 = 0;
    v162 = 0;
  }
  else
  {
    v186 = (char *)sub_211A47688();
    v162 = v104;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v103, v90);
  }
  sub_211A475F8();
  v105 = (uint64_t)v188;
  if (v92(v188, 1, v90) == 1)
  {
    sub_211923EE8(v105, &qword_254AC99A8);
    v187 = 0;
    v161 = 0;
  }
  else
  {
    v187 = (char *)sub_211A476B8();
    v161 = v106;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v105, v90);
  }
  sub_211A475F8();
  v107 = (uint64_t)v189;
  if (v92(v189, 1, v90) == 1)
  {
    sub_211923EE8(v107, &qword_254AC99A8);
    v188 = 0;
    v160 = 0;
  }
  else
  {
    v188 = (char *)sub_211A476C4();
    v160 = v108;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v107, v90);
  }
  sub_211A475F8();
  v109 = (uint64_t)v190;
  if (v92(v190, 1, v90) == 1)
  {
    sub_211923EE8(v109, &qword_254AC99A8);
    v189 = 0;
    v159 = 0;
  }
  else
  {
    v189 = (char *)sub_211A47694();
    v159 = v110;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v109, v90);
  }
  sub_211A475F8();
  v111 = (uint64_t)v191;
  if (v92(v191, 1, v90) == 1)
  {
    sub_211923EE8(v111, &qword_254AC99A8);
    v190 = 0;
    v158 = 0;
  }
  else
  {
    v190 = (char *)sub_211A47670();
    v158 = v112;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v111, v90);
  }
  sub_211A475F8();
  if (v92((char *)v99, 1, v90) == 1)
  {
    sub_211923EE8(v99, &qword_254AC99A8);
    v191 = 0;
    v157 = 0;
  }
  else
  {
    v191 = (char *)sub_211A47688();
    v157 = v113;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v99, v90);
  }
  sub_211A475F8();
  if (v92((char *)v95, 1, v90) == 1)
  {
    sub_211923EE8(v95, &qword_254AC99A8);
    v168 = 0;
    v156 = 0;
  }
  else
  {
    v168 = (char *)sub_211A47664();
    v156 = v114;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v95, v90);
  }
  sub_211A475F8();
  if (v92((char *)v94, 1, v90) == 1)
  {
    sub_211923EE8(v94, &qword_254AC99A8);
    v171 = 0;
    v115 = 0;
  }
  else
  {
    v171 = (char *)sub_211A4767C();
    v115 = v116;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v94, v90);
  }
  sub_211A475F8();
  if (v92((char *)v96, 1, v90) == 1)
  {
    sub_211923EE8(v96, &qword_254AC99A8);
    v117 = 0;
    v118 = 0;
  }
  else
  {
    v117 = sub_211A47658();
    v118 = v119;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v96, v90);
  }
  sub_211A475F8();
  v120 = v192;
  if (v92(v192, 1, v90) == 1)
  {
    sub_211923EE8((uint64_t)v120, &qword_254AC99A8);
    v121 = 0;
    v122 = 0;
  }
  else
  {
    v121 = sub_211A47640();
    v122 = v123;
    (*(void (**)(id, uint64_t))(v91 + 8))(v120, v90);
  }
  v198[0] = v165;
  v198[1] = v175;
  v198[2] = v164;
  v198[3] = 0;
  v124 = v184;
  v198[4] = 0;
  v198[5] = v185;
  v198[6] = v163;
  v198[7] = v186;
  v198[8] = v162;
  v198[9] = v187;
  v198[10] = v161;
  v198[11] = v188;
  v198[12] = v160;
  v199 = 0u;
  v200 = 0u;
  v201 = v189;
  v202 = v159;
  v203 = 0;
  v204 = 0;
  v205 = MEMORY[0x24BEE4AF8];
  v206 = 0;
  v207 = 0;
  v208 = v167;
  v209 = v166;
  v210 = v190;
  v211 = v158;
  v212 = v191;
  v213 = v157;
  v214 = v168;
  v215 = v156;
  v216 = v171;
  v217 = v115;
  v218 = v117;
  v219 = v118;
  v220 = v121;
  v221 = v122;
  nullsub_1(v198, 0.0);
  sub_21192DD68((uint64_t)v198, (uint64_t)v222, &qword_254ACCB40);
  v125 = v174;
  v222[38] = v174;
  LOBYTE(v222[39]) = 0;
  v222[40] = v172;
  v222[41] = v170;
  LOWORD(v222[42]) = v169;
  v222[43] = 0;
  LOBYTE(v222[44]) = 0;
  memcpy(v223, v222, 0x161uLL);
  nullsub_1(v223, v126);
  v127 = v194;
  sub_21192DD68((uint64_t)v223, (uint64_t)v194 + v193[11], &qword_254AC8CD0);
  *((_BYTE *)v127 + 16) = 0;
  v192 = v125;
  v128 = v181;
  sub_211A475C8();
  v130 = v176;
  v129 = v177;
  v131 = (*(uint64_t (**)(char *, uint64_t))(v176 + 88))(v128, v177);
  v132 = 0;
  v134 = v182;
  v133 = v183;
  v136 = v178;
  v135 = v179;
  if (v131 != *MEMORY[0x24BE31EF0])
  {
    if (v131 == *MEMORY[0x24BE31ED8])
    {
      v132 = 1;
    }
    else if (v131 == *MEMORY[0x24BE31EF8])
    {
      v132 = 2;
    }
    else if (v131 == *MEMORY[0x24BE31EE8])
    {
      v132 = 3;
    }
    else if (v131 == *MEMORY[0x24BE31EE0])
    {
      v132 = 4;
    }
    else if (v131 == *MEMORY[0x24BE31ED0])
    {
      v132 = 5;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v130 + 8))(v181, v129);
      v132 = 0;
    }
  }
  v127[3] = v132;
  *((_BYTE *)v127 + 32) = 0;
  sub_211A475A4();
  v137 = v180;
  v138 = (*(uint64_t (**)(char *, uint64_t))(v135 + 88))(v136, v180);
  v139 = 0;
  if (v138 != *MEMORY[0x24BE31DA8])
  {
    if (v138 == *MEMORY[0x24BE31D98])
    {
LABEL_60:
      v139 = 1;
      goto LABEL_65;
    }
    if (v138 == *MEMORY[0x24BE31DA0])
    {
      v139 = 2;
    }
    else
    {
      if (v138 != *MEMORY[0x24BE31DB0])
      {
        (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
        goto LABEL_60;
      }
      v139 = 3;
    }
  }
LABEL_65:
  *((_BYTE *)v127 + 33) = v139;
  v140 = v193;
  *((_BYTE *)v127 + v193[9]) = 0;
  *((_BYTE *)v127 + v140[10]) = 0;
  v141 = FMFLocation.debugDescription.getter();
  v143 = v142;
  if (qword_254AC7B80 != -1)
    swift_once();
  v144 = sub_211A47748();
  sub_21194F3E0(v144, (uint64_t)qword_254ADC7E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v134, a1, v124);
  swift_bridgeObjectRetain();
  v145 = sub_211A47724();
  v146 = sub_211A47D30();
  if (os_log_type_enabled(v145, v146))
  {
    v147 = swift_slowAlloc();
    v148 = swift_slowAlloc();
    v197 = v148;
    *(_DWORD *)v147 = 136315394;
    swift_bridgeObjectRetain();
    v196 = sub_211950A9C(v141, v143, &v197);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v147 + 12) = 2080;
    v149 = (_QWORD *)sub_211A475EC();
    if (v149[2])
    {
      v151 = v149[4];
      v150 = v149[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v150 = 0xE300000000000000;
      v151 = 7104878;
    }
    swift_bridgeObjectRelease();
    v196 = sub_211950A9C(v151, v150, &v197);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    v152 = *(void (**)(char *, uint64_t))(v183 + 8);
    v124 = v184;
    v152(v182, v184);
    _os_log_impl(&dword_21190D000, v145, v146, "👀 FMFLocation: created from FMLLocation %s with secure label: '%s'", (uint8_t *)v147, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v148, -1, -1);
    MEMORY[0x212BE48A0](v147, -1, -1);

  }
  else
  {

    v152 = *(void (**)(char *, uint64_t))(v133 + 8);
    v152(v134, v124);

    swift_bridgeObjectRelease_n();
  }
  v153 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 8))(v195, v153);
  return ((uint64_t (*)(uint64_t, uint64_t))v152)(a1, v124);
}

void sub_211983E70(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  __int16 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  int *v41;
  int *v42;
  uint64_t v43;
  uint64_t *v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62[5];
  _OWORD v63[19];
  _QWORD v64[45];
  _BYTE v65[368];

  v4 = sub_211A47208();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 1;
  v60 = (int *)type metadata accessor for FMFLocation();
  v9 = a2 + v60[8];
  v10 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  objc_msgSend(a1, sel_latitude);
  v12 = v11;
  objc_msgSend(a1, sel_longitude);
  v14 = v13;
  objc_msgSend(a1, sel_altitude);
  v16 = v15;
  objc_msgSend(a1, sel_horizontalAccuracy);
  v18 = v17;
  objc_msgSend(a1, sel_verticalAccuracy);
  v20 = v19;
  objc_msgSend(a1, sel_course);
  v22 = v21;
  objc_msgSend(a1, sel_speed);
  v24 = v23;
  v25 = objc_msgSend(a1, sel_timestamp);
  sub_211A471E4();

  v26 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v27 = (void *)sub_211A471A8();
  v28 = objc_msgSend(v26, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v27, v12, v14, v16, v18, v20, v22, 0.0, v24, 0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v29 = objc_msgSend(a1, sel_locationLabel);
  if (v29)
  {
    v30 = v29;
    v31 = sub_211A47910();
    v33 = v32;

    swift_bridgeObjectRetain();
    v34._countAndFlagsBits = v31;
    v34._object = v33;
    FMFDefaultLabel.init(rawValue:)(v34);
    if (v65[0] == 5)
      v35 = 259;
    else
      v35 = 3;
  }
  else
  {
    v31 = 0;
    v33 = 0;
    v35 = 0;
  }
  v36 = objc_msgSend(a1, sel_findMyId);
  v37 = sub_211A47910();
  v39 = v38;

  *(_QWORD *)a2 = v37;
  *(_QWORD *)(a2 + 8) = v39;
  sub_21196F528(v63);
  sub_21192DD68((uint64_t)v63, (uint64_t)v64, &qword_254ACCB40);
  v64[38] = v28;
  LOBYTE(v64[39]) = 0;
  v64[40] = v31;
  v64[41] = v33;
  LOWORD(v64[42]) = v35;
  v64[43] = 0;
  LOBYTE(v64[44]) = 0;
  memcpy(v65, v64, 0x161uLL);
  nullsub_1(v65, v40);
  v41 = v60;
  sub_21192DD68((uint64_t)v65, a2 + v60[11], &qword_254AC8CD0);
  *(_BYTE *)(a2 + 16) = 0;
  v42 = (int *)v28;
  *(_QWORD *)(a2 + 24) = objc_msgSend(a1, sel_motionActivityState);
  *(_BYTE *)(a2 + 32) = 0;
  v43 = sub_211A46F08();
  v62[3] = v43;
  v62[4] = sub_211985ECC();
  v44 = sub_211969B08(v62);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v44, *MEMORY[0x24BE319C0], v43);
  LOBYTE(v43) = MEMORY[0x212BE2D10](v62);
  sub_211931C34((uint64_t)v62);
  if ((v43 & 1) != 0 && objc_msgSend(a1, sel_publishReason) == (id)8)
  {
    v45 = 3;
  }
  else if (objc_msgSend(a1, sel_publishReason) == (id)7)
  {
    v45 = 2;
  }
  else
  {
    v45 = 1;
  }
  *(_BYTE *)(a2 + 33) = v45;
  *(_BYTE *)(a2 + v41[9]) = 0;
  *(_BYTE *)(a2 + v41[10]) = 0;
  v46 = FMFLocation.debugDescription.getter();
  v48 = v47;
  if (qword_254AC7B80 != -1)
    swift_once();
  v49 = sub_211A47748();
  sub_21194F3E0(v49, (uint64_t)qword_254ADC7E8);
  v50 = a1;
  swift_bridgeObjectRetain();
  v51 = sub_211A47724();
  v52 = sub_211A47D30();
  if (os_log_type_enabled(v51, v52))
  {
    v60 = v42;
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    v62[0] = v54;
    *(_DWORD *)v53 = 136315394;
    swift_bridgeObjectRetain();
    v61 = sub_211950A9C(v46, v48, v62);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v53 + 12) = 2080;
    v55 = objc_msgSend(v50, sel_locationLabel);
    if (v55)
    {
      v56 = v55;
      v57 = sub_211A47910();
      v59 = v58;

    }
    else
    {
      v59 = 0xE300000000000000;
      v57 = 7104878;
    }
    v61 = sub_211950A9C(v57, v59, v62);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v51, v52, "👀 FMFLocation: created %s with secure label: '%s'", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v54, -1, -1);
    MEMORY[0x212BE48A0](v53, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void FMFLocation.init(from:location:locationSource:locationLabel:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  __int16 v18;
  double v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[19];
  _QWORD __src[45];
  _BYTE __dst[368];

  v13 = *a4;
  v14 = (int *)type metadata accessor for FMFLocation();
  v15 = a7 + v14[8];
  v16 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  if (a6)
  {
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = a5;
    v17._object = a6;
    FMFDefaultLabel.init(rawValue:)(v17);
    if (__dst[0] == 5)
      v18 = 259;
    else
      v18 = 3;
  }
  else
  {
    a5 = 0;
    v18 = 0;
  }
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  sub_21196F528(v30);
  sub_21192DD68((uint64_t)v30, (uint64_t)__src, &qword_254ACCB40);
  __src[38] = a3;
  LOBYTE(__src[39]) = 0;
  __src[40] = a5;
  __src[41] = a6;
  LOWORD(__src[42]) = v18;
  __src[43] = 0;
  LOBYTE(__src[44]) = 0;
  memcpy(__dst, __src, 0x161uLL);
  nullsub_1(__dst, v19);
  sub_21192DD68((uint64_t)__dst, a7 + v14[11], &qword_254AC8CD0);
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = 0;
  *(_BYTE *)(a7 + 32) = 1;
  *(_BYTE *)(a7 + 33) = v13;
  *(_BYTE *)(a7 + v14[9]) = 0;
  *(_BYTE *)(a7 + v14[10]) = 0;
  v20 = a3;
  v21 = FMFLocation.debugDescription.getter();
  v23 = v22;
  if (qword_254AC7B80 != -1)
    swift_once();
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29 = v28;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain();
    sub_211950A9C(v21, v23, &v29);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v25, v26, "👀 FMFLocation: created %s'", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v28, -1, -1);
    MEMORY[0x212BE48A0](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_21198472C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _OWORD v26[19];
  _QWORD __src[45];
  uint64_t __dst[45];

  v9 = *a3;
  v10 = (int *)type metadata accessor for FMFLocation();
  v11 = a5 + v10[8];
  v12 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  if (a4)
  {
    sub_21196F528(v26);
    sub_21192DD68((uint64_t)v26, (uint64_t)__src, &qword_254ACCB40);
    __src[38] = a4;
    LOBYTE(__src[39]) = 0;
    __src[43] = 0;
    LOBYTE(__src[44]) = 0;
    memset(&__src[40], 0, 18);
    memcpy(__dst, __src, 0x161uLL);
    nullsub_1(__dst, v13);
  }
  else
  {
    sub_211982898((uint64_t)__dst);
  }
  sub_21192DD68((uint64_t)__dst, a5 + v10[11], &qword_254AC8CD0);
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0;
  *(_BYTE *)(a5 + 32) = 1;
  *(_BYTE *)(a5 + 33) = v9;
  *(_BYTE *)(a5 + v10[9]) = 0;
  *(_BYTE *)(a5 + v10[10]) = 0;
  v14 = a4;
  v15 = FMFLocation.debugDescription.getter();
  v17 = v16;
  if (qword_254AC7B80 != -1)
    swift_once();
  v18 = sub_211A47748();
  sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
  v19 = v14;
  swift_bridgeObjectRetain();
  v20 = sub_211A47724();
  v21 = sub_211A47D30();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    __dst[0] = v23;
    *(_DWORD *)v22 = 136315394;
    swift_bridgeObjectRetain();
    __src[0] = sub_211950A9C(v15, v17, __dst);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    __src[0] = a4;
    sub_211958C38(&qword_254AC99A0);
    v24 = sub_211A47E08();
    __src[0] = sub_211950A9C(v24, v25, __dst);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v20, v21, "👀 FMFLocation: created %s with location: '%s'", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v23, -1, -1);
    MEMORY[0x212BE48A0](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t FMFLocation.init(from:updatedLocation:address:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;
  BOOL v26;
  char v27;
  double v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD v45[45];
  _OWORD v46[22];
  _BYTE v47[360];
  _QWORD v48[44];
  char v49;
  _BYTE v50[304];
  uint64_t v51[42];
  unsigned __int16 v52;
  uint64_t v53;
  _BYTE v54[304];
  _BYTE v55[360];
  _QWORD v56[45];
  _BYTE v57[312];

  v8 = (int *)type metadata accessor for FMFLocation();
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v41 - v14;
  sub_21192DD68(a3, (uint64_t)v57, &qword_254ACCB40);
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
  v16 = a4 + v8[8];
  v17 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v44 = a1;
  v18 = *a1;
  v19 = a1[1];
  v20 = *(_QWORD *)(a2 + 8);
  if (!v19)
    goto LABEL_7;
  if (!v20 || (v18 != *(_QWORD *)a2 || v19 != v20) && (sub_211A48258() & 1) == 0)
  {
    do
    {
      sub_21196F7C4((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
      sub_211A4809C();
      __break(1u);
LABEL_7:
      ;
    }
    while (v20);
  }
  *(_QWORD *)a4 = v18;
  *(_QWORD *)(a4 + 8) = v19;
  *(_BYTE *)(a4 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a4 + 33) = *(_BYTE *)(a2 + 33);
  sub_21192DD68(a2 + v8[11], (uint64_t)v55, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v55, (uint64_t)v56, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v56) == 1)
  {
    swift_bridgeObjectRetain();
    sub_21196F7C4((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    sub_21192DD68((uint64_t)v55, a4 + v8[11], &qword_254AC8CD0);
  }
  else
  {
    v21 = (void *)v56[38];
    sub_21192DD68((uint64_t)v55, (uint64_t)v51, &qword_254AC8CD0);
    v43 = v51[40];
    v22 = v51[41];
    v42 = v52;
    v23 = v53;
    sub_21193324C(a2, (uint64_t)v15);
    sub_21192DD68((uint64_t)v57, (uint64_t)v54, &qword_254ACCB40);
    if (sub_21196FB8C((uint64_t)v54) == 1)
    {
      v41 = v21;
      sub_21192DD68((uint64_t)&v15[v8[11]], (uint64_t)v47, &qword_254AC8CD0);
      sub_21192DD68((uint64_t)v47, (uint64_t)v48, &qword_254AC8CD0);
      if (sub_2119724C8((uint64_t)v48) == 1)
      {
        sub_21196F528(v46);
        v24 = v46;
      }
      else
      {
        sub_21196F7C4((uint64_t)v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
        v24 = v48;
      }
      sub_21192DD68((uint64_t)v24, (uint64_t)v50, &qword_254ACCB40);
      v21 = v41;
    }
    else
    {
      sub_21192DD68((uint64_t)v57, (uint64_t)v50, &qword_254ACCB40);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v21;
    swift_bridgeObjectRetain();
    sub_211933290((uint64_t)v15);
    sub_21192DD68((uint64_t)v44 + v8[11], (uint64_t)v47, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v47, (uint64_t)v48, &qword_254AC8CD0);
    v26 = sub_2119724C8((uint64_t)v48) != 1;
    v27 = v26 & v49;
    sub_21192DD68((uint64_t)v50, (uint64_t)v45, &qword_254ACCB40);
    v45[38] = v25;
    LOBYTE(v45[39]) = 0;
    v45[40] = v43;
    v45[41] = v22;
    LOWORD(v45[42]) = v42;
    v45[43] = v23;
    LOBYTE(v45[44]) = v27;
    memcpy(v46, v45, 0x161uLL);
    nullsub_1(v46, v28);
    sub_21192DD68((uint64_t)v46, a4 + v8[11], &qword_254AC8CD0);
    v29 = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a4 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a4 + 32) = v29;
  }
  *(_BYTE *)(a4 + v8[9]) = *(_BYTE *)(a2 + v8[9]);
  *(_BYTE *)(a4 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  v30 = FMFLocation.debugDescription.getter();
  v32 = v31;
  if (qword_254AC7B80 != -1)
    swift_once();
  v33 = sub_211A47748();
  sub_21194F3E0(v33, (uint64_t)qword_254ADC7E8);
  sub_21193324C(a2, (uint64_t)v12);
  swift_bridgeObjectRetain();
  v34 = sub_211A47724();
  v35 = sub_211A47D30();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v51[0] = v37;
    *(_DWORD *)v36 = 136315394;
    swift_bridgeObjectRetain();
    v48[0] = sub_211950A9C(v30, v32, v51);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 12) = 2080;
    v38 = FMFLocation.debugDescription.getter();
    v48[0] = sub_211950A9C(v38, v39, v51);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211933290((uint64_t)v12);
    _os_log_impl(&dword_21190D000, v34, v35, "👀 FMFLocation: updated %sfrom %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v37, -1, -1);
    MEMORY[0x212BE48A0](v36, -1, -1);

  }
  else
  {

    sub_211933290((uint64_t)v12);
    swift_bridgeObjectRelease_n();
  }
  sub_211933290(a2);
  return sub_211933290((uint64_t)v44);
}

uint64_t FMFLocation.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[360];
  _BYTE v13[408];

  v3 = v1;
  v5 = sub_211958C38(&qword_254AC98B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_2119321C8();
  sub_211A4836C();
  *(_OWORD *)&v13[360] = *v3;
  v13[407] = 0;
  sub_211958C38(&qword_254AC7C58);
  sub_21192A2C0();
  sub_211A481E0();
  if (!v2)
  {
    v10 = type metadata accessor for FMFLocation();
    sub_21192DD68((uint64_t)v3 + *(int *)(v10 + 44), (uint64_t)v13, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v13, (uint64_t)v12, &qword_254AC8CD0);
    v13[406] = 1;
    sub_211958C38(&qword_254AC8CD0);
    sub_2119851E0();
    sub_211A481E0();
    v12[0] = 3;
    sub_211A481D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_2119851C8(_QWORD *a1)
{
  return FMFLocation.encode(to:)(a1);
}

unint64_t sub_2119851E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254AC98C0;
  if (!qword_254AC98C0)
  {
    v1 = sub_21195E2C0(&qword_254AC8CD0);
    v2 = sub_211985244();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC98C0);
  }
  return result;
}

unint64_t sub_211985244()
{
  unint64_t result;

  result = qword_254AC98C8;
  if (!qword_254AC98C8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4A474, &type metadata for FMFSimpleLocation);
    atomic_store(result, (unint64_t *)&qword_254AC98C8);
  }
  return result;
}

unint64_t sub_21198528C()
{
  unint64_t result;

  result = qword_254AC98D0;
  if (!qword_254AC98D0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationSource, &type metadata for FMFLocationSource);
    atomic_store(result, (unint64_t *)&qword_254AC98D0);
  }
  return result;
}

uint64_t assignWithCopy for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_211A4722C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_211958C38(&qword_254AC9898);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v16 = a3[11];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a1 + v16 + 304);
  v20 = *(_QWORD *)(v18 + 304);
  if (v19)
  {
    if (v20)
    {
      v21 = *(_QWORD *)(v18 + 168);
      if (*(_QWORD *)(v17 + 168))
      {
        if (v21)
        {
          *(_QWORD *)v17 = *(_QWORD *)v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
          *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
          *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
          *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
          *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
          *(_QWORD *)(v17 + 80) = *(_QWORD *)(v18 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
          *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
          *(_QWORD *)(v17 + 112) = *(_QWORD *)(v18 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
          *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 136) = *(_QWORD *)(v18 + 136);
          *(_QWORD *)(v17 + 144) = *(_QWORD *)(v18 + 144);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 152) = *(_QWORD *)(v18 + 152);
          *(_QWORD *)(v17 + 160) = *(_QWORD *)(v18 + 160);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 168) = *(_QWORD *)(v18 + 168);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 176) = *(_QWORD *)(v18 + 176);
          *(_QWORD *)(v17 + 184) = *(_QWORD *)(v18 + 184);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 192) = *(_QWORD *)(v18 + 192);
          *(_QWORD *)(v17 + 200) = *(_QWORD *)(v18 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 208) = *(_QWORD *)(v18 + 208);
          *(_QWORD *)(v17 + 216) = *(_QWORD *)(v18 + 216);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 224) = *(_QWORD *)(v18 + 224);
          *(_QWORD *)(v17 + 232) = *(_QWORD *)(v18 + 232);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 240) = *(_QWORD *)(v18 + 240);
          *(_QWORD *)(v17 + 248) = *(_QWORD *)(v18 + 248);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 256) = *(_QWORD *)(v18 + 256);
          *(_QWORD *)(v17 + 264) = *(_QWORD *)(v18 + 264);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 272) = *(_QWORD *)(v18 + 272);
          *(_QWORD *)(v17 + 280) = *(_QWORD *)(v18 + 280);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v17 + 288) = *(_QWORD *)(v18 + 288);
          *(_QWORD *)(v17 + 296) = *(_QWORD *)(v18 + 296);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_22:
          v22 = *(void **)(v18 + 304);
          v23 = *(void **)(v17 + 304);
          *(_QWORD *)(v17 + 304) = v22;
          v24 = v22;

          *(_BYTE *)(v17 + 312) = *(_BYTE *)(v18 + 312);
          *(_QWORD *)(v17 + 320) = *(_QWORD *)(v18 + 320);
          *(_QWORD *)(v17 + 328) = *(_QWORD *)(v18 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v17 + 336) = *(_BYTE *)(v18 + 336);
          *(_BYTE *)(v17 + 337) = *(_BYTE *)(v18 + 337);
          *(_QWORD *)(v17 + 344) = *(_QWORD *)(v18 + 344);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v17 + 352) = *(_BYTE *)(v18 + 352);
          return a1;
        }
        sub_21196ECA4(v17);
      }
      else if (v21)
      {
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
        *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
        *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
        *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
        *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
        *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
        *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
        *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
        *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
        *(_QWORD *)(v17 + 80) = *(_QWORD *)(v18 + 80);
        *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
        *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
        *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
        *(_QWORD *)(v17 + 112) = *(_QWORD *)(v18 + 112);
        *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
        *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
        *(_QWORD *)(v17 + 136) = *(_QWORD *)(v18 + 136);
        *(_QWORD *)(v17 + 144) = *(_QWORD *)(v18 + 144);
        *(_QWORD *)(v17 + 152) = *(_QWORD *)(v18 + 152);
        *(_QWORD *)(v17 + 160) = *(_QWORD *)(v18 + 160);
        *(_QWORD *)(v17 + 168) = *(_QWORD *)(v18 + 168);
        *(_QWORD *)(v17 + 176) = *(_QWORD *)(v18 + 176);
        *(_QWORD *)(v17 + 184) = *(_QWORD *)(v18 + 184);
        *(_QWORD *)(v17 + 192) = *(_QWORD *)(v18 + 192);
        *(_QWORD *)(v17 + 200) = *(_QWORD *)(v18 + 200);
        *(_QWORD *)(v17 + 208) = *(_QWORD *)(v18 + 208);
        *(_QWORD *)(v17 + 216) = *(_QWORD *)(v18 + 216);
        *(_QWORD *)(v17 + 224) = *(_QWORD *)(v18 + 224);
        *(_QWORD *)(v17 + 232) = *(_QWORD *)(v18 + 232);
        *(_QWORD *)(v17 + 240) = *(_QWORD *)(v18 + 240);
        *(_QWORD *)(v17 + 248) = *(_QWORD *)(v18 + 248);
        *(_QWORD *)(v17 + 256) = *(_QWORD *)(v18 + 256);
        *(_QWORD *)(v17 + 264) = *(_QWORD *)(v18 + 264);
        *(_QWORD *)(v17 + 272) = *(_QWORD *)(v18 + 272);
        *(_QWORD *)(v17 + 280) = *(_QWORD *)(v18 + 280);
        *(_QWORD *)(v17 + 288) = *(_QWORD *)(v18 + 288);
        *(_QWORD *)(v17 + 296) = *(_QWORD *)(v18 + 296);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
      memcpy((void *)v17, (const void *)v18, 0x130uLL);
      goto LABEL_22;
    }
    sub_211985BF8(v17);
    goto LABEL_16;
  }
  if (!v20)
  {
LABEL_16:
    memcpy((void *)v17, (const void *)v18, 0x161uLL);
    return a1;
  }
  if (*(_QWORD *)(v18 + 168))
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
    *(_QWORD *)(v17 + 64) = *(_QWORD *)(v18 + 64);
    *(_QWORD *)(v17 + 72) = *(_QWORD *)(v18 + 72);
    *(_QWORD *)(v17 + 80) = *(_QWORD *)(v18 + 80);
    *(_QWORD *)(v17 + 88) = *(_QWORD *)(v18 + 88);
    *(_QWORD *)(v17 + 96) = *(_QWORD *)(v18 + 96);
    *(_QWORD *)(v17 + 104) = *(_QWORD *)(v18 + 104);
    *(_QWORD *)(v17 + 112) = *(_QWORD *)(v18 + 112);
    *(_QWORD *)(v17 + 120) = *(_QWORD *)(v18 + 120);
    *(_QWORD *)(v17 + 128) = *(_QWORD *)(v18 + 128);
    *(_QWORD *)(v17 + 136) = *(_QWORD *)(v18 + 136);
    *(_QWORD *)(v17 + 144) = *(_QWORD *)(v18 + 144);
    *(_QWORD *)(v17 + 152) = *(_QWORD *)(v18 + 152);
    *(_QWORD *)(v17 + 160) = *(_QWORD *)(v18 + 160);
    *(_QWORD *)(v17 + 168) = *(_QWORD *)(v18 + 168);
    *(_QWORD *)(v17 + 176) = *(_QWORD *)(v18 + 176);
    *(_QWORD *)(v17 + 184) = *(_QWORD *)(v18 + 184);
    *(_QWORD *)(v17 + 192) = *(_QWORD *)(v18 + 192);
    *(_QWORD *)(v17 + 200) = *(_QWORD *)(v18 + 200);
    *(_QWORD *)(v17 + 208) = *(_QWORD *)(v18 + 208);
    *(_QWORD *)(v17 + 216) = *(_QWORD *)(v18 + 216);
    *(_QWORD *)(v17 + 224) = *(_QWORD *)(v18 + 224);
    *(_QWORD *)(v17 + 232) = *(_QWORD *)(v18 + 232);
    *(_QWORD *)(v17 + 240) = *(_QWORD *)(v18 + 240);
    *(_QWORD *)(v17 + 248) = *(_QWORD *)(v18 + 248);
    *(_QWORD *)(v17 + 256) = *(_QWORD *)(v18 + 256);
    *(_QWORD *)(v17 + 264) = *(_QWORD *)(v18 + 264);
    *(_QWORD *)(v17 + 272) = *(_QWORD *)(v18 + 272);
    *(_QWORD *)(v17 + 280) = *(_QWORD *)(v18 + 280);
    *(_QWORD *)(v17 + 288) = *(_QWORD *)(v18 + 288);
    *(_QWORD *)(v17 + 296) = *(_QWORD *)(v18 + 296);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)v17, (const void *)v18, 0x130uLL);
  }
  v25 = *(void **)(v18 + 304);
  *(_QWORD *)(v17 + 304) = v25;
  *(_BYTE *)(v17 + 312) = *(_BYTE *)(v18 + 312);
  *(_QWORD *)(v17 + 320) = *(_QWORD *)(v18 + 320);
  *(_QWORD *)(v17 + 328) = *(_QWORD *)(v18 + 328);
  *(_BYTE *)(v17 + 336) = *(_BYTE *)(v18 + 336);
  *(_BYTE *)(v17 + 337) = *(_BYTE *)(v18 + 337);
  *(_QWORD *)(v17 + 344) = *(_QWORD *)(v18 + 344);
  *(_BYTE *)(v17 + 352) = *(_BYTE *)(v18 + 352);
  v26 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_211985BF8(uint64_t a1)
{
  destroy for FMFSimpleLocation(a1);
  return a1;
}

uint64_t initializeWithTake for FMFLocation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_211A4722C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_211958C38(&qword_254AC9898);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  memcpy((void *)(a1 + a3[11]), (const void *)(a2 + a3[11]), 0x161uLL);
  return a1;
}

uint64_t sub_211985D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_211958C38(&qword_254AC9898);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t sub_211985DC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_211958C38(&qword_254AC9898);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

unint64_t sub_211985E40()
{
  unint64_t result;

  result = qword_254AC9988;
  if (!qword_254AC9988)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4B8FC, &type metadata for FMFLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9988);
  }
  return result;
}

uint64_t sub_211985E84()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_211985ECC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC81D8;
  if (!qword_254AC81D8)
  {
    v1 = sub_211A46F08();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BE319B8], v1);
    atomic_store(result, (unint64_t *)&qword_254AC81D8);
  }
  return result;
}

uint64_t sub_211985F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v2 = *(_QWORD *)(a1 + 376);
  v29 = *(_QWORD *)(a1 + 368);
  v30 = *(_QWORD *)(a1 + 360);
  v3 = *(_QWORD *)(a1 + 384);
  v4 = *(_QWORD *)(a1 + 392);
  v5 = *(_QWORD *)(a1 + 400);
  v6 = *(_QWORD *)(a1 + 408);
  v7 = *(_QWORD *)(a1 + 416);
  v27 = *(_OWORD *)(a1 + 440);
  v28 = *(_OWORD *)(a1 + 424);
  v25 = *(_OWORD *)(a1 + 472);
  v26 = *(_OWORD *)(a1 + 456);
  v23 = *(_OWORD *)(a1 + 504);
  v24 = *(_OWORD *)(a1 + 488);
  v21 = *(_OWORD *)(a1 + 536);
  v22 = *(_OWORD *)(a1 + 520);
  v20 = *(_OWORD *)(a1 + 552);
  v18 = *(_OWORD *)(a1 + 584);
  v19 = *(_OWORD *)(a1 + 568);
  v16 = *(_OWORD *)(a1 + 616);
  v17 = *(_OWORD *)(a1 + 600);
  v14 = *(_OWORD *)(a1 + 648);
  v15 = *(_OWORD *)(a1 + 632);
  v13 = *(_OWORD *)(a1 + 664);
  v11 = *(_OWORD *)(a1 + 272);
  v12 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 240);
  v10 = *(_OWORD *)(a1 + 256);
  sub_2119332CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    *(void **)(a1 + 304));
  sub_2119332CC(v30, v29, v2, v3, v4, v5, v6, v7, v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26, *((uint64_t *)&v26 + 1), v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    (void *)v13);
  return a1;
}

uint64_t sub_21198610C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;

  v11 = *(_BYTE *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    *(_QWORD *)(a1 + 336),
    *(_QWORD *)(a1 + 344),
    v11);
  return a1;
}

uint64_t FMFLocationAlertTarget.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x744F796669746F4ELL;
  else
    return 0x654D796669746F4ELL;
}

uint64_t FMFLocationAlertTriggerType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_211986218 + 4 * byte_211A4B980[*v0]))(0x7265746E65, 0xE500000000000000);
}

uint64_t sub_211986218()
{
  return 1953069157;
}

uint64_t sub_211986228()
{
  return 0x74616964656D6D69;
}

uint64_t sub_211986248()
{
  return 0x656C756465686373;
}

uint64_t FMFLocationAlertAddressType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FMFLocationAlert.location.getter@<X0>(uint64_t a1@<X8>)
{
  CLLocationDegrees *v1;
  CLLocationDegrees *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  CLLocationCoordinate2D v13;
  double v14;
  int *v15;
  id v16;
  void *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  _BYTE v28[304];
  _QWORD v29[45];
  _BYTE v30[360];

  v2 = v1;
  v4 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_211A47208();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = CLLocationCoordinate2DMake(v2[2], v2[3]);
  v14 = v2[4];
  v15 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21192C6B8((uint64_t)v2 + v15[26], (uint64_t)v7, qword_254AC8A78);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_211A47190();
    sub_211923EE8((uint64_t)v7, qword_254AC8A78);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v12, v7, v8);
  }
  v16 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v17 = (void *)sub_211A471A8();
  v18 = objc_msgSend(v16, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_, v17, v13.latitude, v13.longitude, 0.0, v14, 0.0, 0.0, 0.0);

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  sub_21192DD68((uint64_t)v2 + v15[23], (uint64_t)v28, &qword_254ACCB40);
  v19 = (char *)v2 + v15[20];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = *((_WORD *)v19 + 8);
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  v23 = (int *)type metadata accessor for FMFLocation();
  v24 = a1 + v23[8];
  v25 = sub_211A4722C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_21192DD68((uint64_t)v28, (uint64_t)v29, &qword_254ACCB40);
  v29[38] = v18;
  LOBYTE(v29[39]) = 0;
  v29[40] = v21;
  v29[41] = v20;
  LOWORD(v29[42]) = v22;
  v29[43] = 0;
  LOBYTE(v29[44]) = 0;
  memcpy(v30, v29, 0x161uLL);
  nullsub_1(v30, v26);
  sub_21192DD68((uint64_t)v30, a1 + v23[11], &qword_254AC8CD0);
  *(_BYTE *)(a1 + 33) = 0;
  *(_BYTE *)(a1 + v23[9]) = 0;
  *(_BYTE *)(a1 + v23[10]) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v23 - 1) + 56))(a1, 0, 1, v23);
  sub_21196F7C4((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlertAcceptanceStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E69646E6550;
  if (*v0 != 1)
    v1 = 0x6465747065636341;
  if (*v0)
    return v1;
  else
    return 0x6E6564646948;
}

uint64_t FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>, char a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 *a19, uint64_t a20)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  Swift::String v119;
  int v120;
  uint64_t v121;
  __int16 v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int16 v129;
  uint64_t v130;
  char v131;
  uint64_t result;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  unsigned __int8 *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE v154[304];
  _BYTE v155[304];
  _BYTE v156[312];

  v141 = a8;
  v149 = a3;
  v150 = a7;
  v134 = a6;
  v137 = a5;
  v148 = a4;
  v151 = a2;
  v153 = a12;
  v138 = a11;
  v22 = sub_211958C38(qword_254AC8A78);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v146 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v26);
  v136 = (uint64_t)&v133 - v27;
  v28 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (char *)&v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v33);
  v135 = (char *)&v133 - v34;
  v35 = (int *)type metadata accessor for FMFLocationAlert();
  v37 = MEMORY[0x24BDAC7A8](v35, v36);
  v147 = (uint64_t)&v133 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v145 = (char *)&v133 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v144 = (uint64_t)&v133 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v143 = (uint64_t)&v133 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v142 = (uint64_t)&v133 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v152 = (uint64_t)&v133 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v140 = (uint64_t)&v133 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v139 = (uint64_t)&v133 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58, v60);
  v63 = (char *)&v133 - v62;
  v65 = MEMORY[0x24BDAC7A8](v61, v64);
  v67 = (char *)&v133 - v66;
  MEMORY[0x24BDAC7A8](v65, v68);
  v70 = (char *)&v133 - v69;
  sub_21192DD68(v137, (uint64_t)v156, &qword_254ACCB40);
  LODWORD(v137) = *v141;
  LODWORD(v141) = *a19;
  v71 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a9 = *(_QWORD *)a1;
  *(_QWORD *)(a9 + 8) = v71;
  sub_211974170(a1, (uint64_t)v70);
  if (a10 == 2)
    v72 = v70[42];
  else
    v72 = a10 & 1;
  swift_bridgeObjectRetain();
  sub_211934758((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_BYTE *)(a9 + 42) = v72;
  sub_211974170(a1, (uint64_t)v67);
  if (v138 == 2)
    v73 = v67[43];
  else
    v73 = v138 & 1;
  v74 = (uint64_t)v135;
  sub_211934758((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_BYTE *)(a9 + 43) = v73;
  sub_21192C6B8(v153, (uint64_t)v32, (uint64_t *)&unk_254ACC2E0);
  sub_211974170(a1, (uint64_t)v63);
  v75 = type metadata accessor for FMFSchedule();
  v76 = *(_QWORD *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v32, 1, v75) == 1)
  {
    sub_21192C6B8((uint64_t)&v63[v35[12]], v74, (uint64_t *)&unk_254ACC2E0);
    sub_211934758((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211923EE8((uint64_t)v32, (uint64_t *)&unk_254ACC2E0);
  }
  else
  {
    sub_211934758((uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_21198AFD0((uint64_t)v32, v74);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v74, 0, 1, v75);
  }
  v77 = v137;
  v79 = a16;
  sub_21192DD68(v74, a9 + v35[12], (uint64_t *)&unk_254ACC2E0);
  *(_BYTE *)(a9 + 40) = *(_BYTE *)(a1 + 40);
  v80 = v139;
  sub_211974170(a1, v139);
  if (v77 == 4)
    LOBYTE(v77) = *(_BYTE *)(v80 + 41);
  v82 = a18;
  sub_211934758(v80, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_BYTE *)(a9 + 41) = v77;
  v83 = v140;
  sub_211974170(a1, v140);
  if (!a16)
  {
    v84 = (uint64_t *)(v83 + v35[13]);
    a15 = *v84;
    v79 = v84[1];
    swift_bridgeObjectRetain();
  }
  sub_211934758(v83, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v85 = (_QWORD *)(a9 + v35[13]);
  *v85 = a15;
  v85[1] = v79;
  v86 = v152;
  sub_211974170(a1, v152);
  if (!a18)
  {
    v87 = (uint64_t *)(v86 + v35[14]);
    a17 = *v87;
    v82 = v87[1];
    swift_bridgeObjectRetain();
  }
  v88 = a13;
  sub_211934758(v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v89 = (_QWORD *)(a9 + v35[14]);
  *v89 = a17;
  v89[1] = v82;
  v90 = v142;
  sub_211974170(a1, v142);
  v91 = (char)v141;
  v92 = (uint64_t)v145;
  if ((_DWORD)v141 == 3)
    v91 = *(_BYTE *)(v90 + v35[15]);
  v152 = a20;
  v93 = a14;
  sub_211934758(v90, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_BYTE *)(a9 + v35[15]) = v91;
  v94 = v143;
  sub_211974170(a1, v143);
  v95 = (uint64_t)v146;
  if (!a13)
  {
    v88 = *(_QWORD *)(v94 + v35[16]);
    swift_bridgeObjectRetain();
  }
  sub_211934758(v94, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_QWORD *)(a9 + v35[16]) = v88;
  v96 = v144;
  sub_211974170(a1, v144);
  if (!a14)
  {
    v93 = *(_QWORD *)(v96 + v35[17]);
    swift_bridgeObjectRetain();
  }
  sub_211934758(v96, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_QWORD *)(a9 + v35[17]) = v93;
  *(_QWORD *)(a9 + v35[18]) = *(_QWORD *)(a1 + v35[18]);
  v97 = v35[19];
  v98 = *(_QWORD *)(a1 + v97);
  v99 = *(_QWORD *)(a1 + v97 + 8);
  v100 = (_QWORD *)(a9 + v97);
  *v100 = v98;
  v100[1] = v99;
  sub_21192C6B8(v152, v95, qword_254AC8A78);
  v144 = a1;
  sub_211974170(a1, v92);
  v101 = sub_211A47208();
  v102 = *(_QWORD *)(v101 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v95, 1, v101) == 1)
  {
    v103 = v136;
    sub_21192C6B8(v92 + v35[27], v136, qword_254AC8A78);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211934758(v92, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211923EE8(v95, qword_254AC8A78);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211934758(v92, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v103 = v136;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v136, v95, v101);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56))(v103, 0, 1, v101);
  }
  v104 = v151;
  sub_21192DD68(v103, a9 + v35[27], qword_254AC8A78);
  if (v104)
  {
    v105 = v104;
    objc_msgSend(v105, sel_coordinate);
    *(_QWORD *)(a9 + 16) = v106;
    objc_msgSend(v105, sel_coordinate);
    *(_QWORD *)(a9 + 24) = v107;
    v108 = a9 + v35[26];
    v109 = objc_msgSend(v105, sel_timestamp);
    sub_211A471E4();

    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56))(v108, 0, 1, v101);
    v110 = v149;
    v111 = v150;
    v112 = v144;
  }
  else
  {
    v112 = v144;
    *(_OWORD *)(a9 + 16) = *(_OWORD *)(v144 + 16);
    sub_21192C6B8(v112 + v35[26], a9 + v35[26], qword_254AC8A78);
    v110 = v149;
    v111 = v150;
  }
  v113 = v147;
  sub_211974170(v112, v147);
  if ((v148 & 1) != 0)
    v110 = *(_QWORD *)(v113 + 32);
  sub_211934758(v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_QWORD *)(a9 + 32) = v110;
  sub_21192DD68((uint64_t)v156, (uint64_t)v155, &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)v155) != 1)
  {
    sub_21192DD68((uint64_t)v156, a9 + v35[23], &qword_254ACCB40);
    memcpy(v154, v155, sizeof(v154));
    v123 = FMFAddress.displayAddress.getter();
    v124 = (uint64_t *)(a9 + v35[22]);
    *v124 = v123;
    v124[1] = v125;
    if (v111)
      goto LABEL_32;
LABEL_35:

    sub_211923EE8(v152, qword_254AC8A78);
    sub_211923EE8(v153, (uint64_t *)&unk_254ACC2E0);
    v126 = v35[20];
    v128 = *(_QWORD *)(v112 + v126);
    v127 = *(_QWORD *)(v112 + v126 + 8);
    v129 = *(_WORD *)(v112 + v126 + 16);
    v130 = a9 + v126;
    *(_QWORD *)v130 = v128;
    *(_QWORD *)(v130 + 8) = v127;
    *(_WORD *)(v130 + 16) = v129;
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  sub_21192DD68(v112 + v35[23], (uint64_t)v154, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v154, a9 + v35[23], &qword_254ACCB40);
  v114 = v35[22];
  v115 = *(_QWORD *)(v112 + v114);
  v116 = *(_QWORD *)(v112 + v114 + 8);
  v117 = (_QWORD *)(a9 + v114);
  *v117 = v115;
  v117[1] = v116;
  sub_21196F7C4((uint64_t)v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  swift_bridgeObjectRetain();
  if (!v111)
    goto LABEL_35;
LABEL_32:
  swift_bridgeObjectRetain();
  v118 = v134;
  v119._countAndFlagsBits = v134;
  v119._object = v111;
  FMFDefaultLabel.init(rawValue:)(v119);

  v120 = v154[0];
  sub_211923EE8(v152, qword_254AC8A78);
  sub_211923EE8(v153, (uint64_t *)&unk_254ACC2E0);
  v121 = a9 + v35[20];
  *(_QWORD *)v121 = v118;
  *(_QWORD *)(v121 + 8) = v111;
  if (v120 == 5)
    v122 = 259;
  else
    v122 = 3;
  *(_WORD *)(v121 + 16) = v122;
LABEL_38:
  *(_BYTE *)(a9 + v35[21]) = *(_BYTE *)(v112 + v35[21]);
  *(_BYTE *)(a9 + v35[24]) = *(_BYTE *)(v112 + v35[24]);
  v131 = *(_BYTE *)(v112 + v35[25]);
  result = sub_211934758(v112, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  *(_BYTE *)(a9 + v35[25]) = v131;
  return result;
}

uint64_t FMFLocationAlert.init(location:address:addressType:radius:label:locationAlertTarget:triggerType:repeating:schedule:phoneNumbers:emails:followerIds:friendId:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)@<X0>(void *a1@<X0>, const void *a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, unsigned __int8 *a5@<X4>, _BYTE *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *a20,uint64_t a21)
{
  char v29;
  char v30;
  int *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE v51[304];
  _BYTE __dst[304];
  _BYTE v53[312];

  memcpy(__dst, a2, sizeof(__dst));
  v50 = *a3;
  v48 = a4[1];
  v49 = *a4;
  v47 = *((_WORD *)a4 + 8);
  LODWORD(a3) = *a5;
  LOBYTE(a4) = *a6;
  v29 = *a20;
  *(_QWORD *)a9 = 0;
  *(_QWORD *)(a9 + 8) = 0;
  v30 = 1;
  *(_BYTE *)(a9 + 42) = 1;
  *(_BYTE *)(a9 + 43) = a7;
  v31 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21192C6B8(a8, a9 + v31[12], (uint64_t *)&unk_254ACC2E0);
  *(_BYTE *)(a9 + 40) = (_BYTE)a3;
  *(_BYTE *)(a9 + 41) = (_BYTE)a4;
  v32 = (_QWORD *)(a9 + v31[13]);
  *v32 = a16;
  v32[1] = a17;
  v33 = (_QWORD *)(a9 + v31[14]);
  *v33 = a18;
  v33[1] = a19;
  *(_BYTE *)(a9 + v31[15]) = v29;
  *(_QWORD *)(a9 + v31[16]) = a11;
  *(_QWORD *)(a9 + v31[17]) = a12;
  *(_QWORD *)(a9 + v31[18]) = a13;
  v34 = (_QWORD *)(a9 + v31[19]);
  *v34 = a14;
  v34[1] = a15;
  objc_msgSend(a1, sel_coordinate);
  *(_QWORD *)(a9 + 16) = v35;
  objc_msgSend(a1, sel_coordinate);
  *(_QWORD *)(a9 + 24) = v36;
  v37 = a9 + v31[26];
  v38 = objc_msgSend(a1, sel_timestamp);
  sub_211A471E4();

  v39 = sub_211A47208();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v37, 0, 1, v39);
  *(double *)(a9 + 32) = a10;
  memcpy(v53, __dst, 0x130uLL);
  nullsub_1(v53, v40);
  sub_21192DD68((uint64_t)v53, a9 + v31[23], &qword_254ACCB40);
  memcpy(v51, __dst, sizeof(v51));
  v41 = FMFAddress.displayAddress.getter();
  v42 = (uint64_t *)(a9 + v31[22]);
  *v42 = v41;
  v42[1] = v43;
  v44 = a9 + v31[20];
  *(_QWORD *)v44 = v49;
  *(_QWORD *)(v44 + 8) = v48;
  *(_WORD *)(v44 + 16) = v47;
  *(_BYTE *)(a9 + v31[21]) = v50;
  sub_21192C6B8(a21, a9 + v31[27], qword_254AC8A78);
  *(_BYTE *)(a9 + v31[24]) = 1;
  if ((_DWORD)a3 != 1)
    v30 = sub_211A48258();

  swift_bridgeObjectRelease();
  sub_211923EE8(a21, qword_254AC8A78);
  result = sub_211923EE8(a8, (uint64_t *)&unk_254ACC2E0);
  *(_BYTE *)(a9 + v31[25]) = v30 & 1;
  return result;
}

FMFCore::FMFLocationAlertAddressType_optional __swiftcall FMFLocationAlertAddressType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (FMFCore::FMFLocationAlertAddressType_optional)rawValue;
}

FMFCore::FMFLocationAlertAddressType_optional sub_21198724C(Swift::Int *a1)
{
  return FMFLocationAlertAddressType.init(rawValue:)(*a1);
}

FMFCore::FMFLocationAlertTriggerType_optional __swiftcall FMFLocationAlertTriggerType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFLocationAlertTriggerType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2119872AC(char *a1)
{
  sub_211974858(*a1);
}

void sub_2119872B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_211987300()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_211987374()
{
  __asm { BR              X10 }
}

uint64_t sub_2119873AC()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_21198740C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_211987450()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFLocationAlertTriggerType_optional sub_2119874C4(Swift::String *a1)
{
  return FMFLocationAlertTriggerType.init(rawValue:)(*a1);
}

uint64_t sub_2119874D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2119874FC + 4 * byte_211A4B990[*v0]))();
}

void sub_2119874FC(_QWORD *a1@<X8>)
{
  *a1 = 1953069157;
  a1[1] = 0xE400000000000000;
}

void sub_211987510(_QWORD *a1@<X8>)
{
  *a1 = 0x74616964656D6D69;
  a1[1] = 0xE900000000000065;
}

void sub_211987534(_QWORD *a1@<X8>)
{
  *a1 = 0x656C756465686373;
  a1[1] = 0xE900000000000064;
}

FMFCore::FMFLocationAlertTarget_optional __swiftcall FMFLocationAlertTarget.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FMFCore::FMFLocationAlertTarget_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_2119875B4(char *a1, char *a2)
{
  return sub_211974D3C(*a1, *a2);
}

uint64_t sub_2119875C0()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211987648()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119876AC()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFLocationAlertTarget_optional sub_211987730(Swift::String *a1)
{
  return FMFLocationAlertTarget.init(rawValue:)(*a1);
}

void sub_21198773C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x654D796669746F4ELL;
  if (*v1)
    v2 = 0x744F796669746F4ELL;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xEC00000073726568;
  *a1 = v2;
  a1[1] = v3;
}

FMFCore::FMFLocationAlertAcceptanceStatus_optional __swiftcall FMFLocationAlertAcceptanceStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFLocationAlertAcceptanceStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2119877DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2119757AC(*a1, *a2);
}

uint64_t sub_2119877E8()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211987884()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119878FC()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFLocationAlertAcceptanceStatus_optional sub_211987994(Swift::String *a1)
{
  return FMFLocationAlertAcceptanceStatus.init(rawValue:)(*a1);
}

void sub_2119879A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x676E69646E6550;
  if (v2 != 1)
  {
    v5 = 0x6465747065636341;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E6564646948;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t FMFLocationAlert.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double FMFLocationAlert.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double FMFLocationAlert.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double FMFLocationAlert.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void FMFLocationAlert.locationAlertTarget.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

void FMFLocationAlert.triggerType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

uint64_t FMFLocationAlert.isOn.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t FMFLocationAlert.repeating.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t FMFLocationAlert.schedule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFLocationAlert();
  return sub_21192C6B8(v1 + *(int *)(v3 + 48), a1, (uint64_t *)&unk_254ACC2E0);
}

uint64_t FMFLocationAlert.ckRecordName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.ckRecordZoneOwnerName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.acceptanceStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFLocationAlert();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t FMFLocationAlert.phoneNumbers.getter()
{
  type metadata accessor for FMFLocationAlert();
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.emails.getter()
{
  type metadata accessor for FMFLocationAlert();
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.followerIds.getter()
{
  type metadata accessor for FMFLocationAlert();
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.friendId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FMFLocationAlert() + 80));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t FMFLocationAlert.addressType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFLocationAlert();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FMFLocationAlert.address.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLocationAlert.fullAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[304];

  v3 = type metadata accessor for FMFLocationAlert();
  sub_21192DD68(v1 + *(int *)(v3 + 92), (uint64_t)v5, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v5, a1, &qword_254ACCB40);
  return sub_21196F7C4((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
}

uint64_t FMFLocationAlert.setByMe.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 96));
}

uint64_t FMFLocationAlert.setOnMe.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFLocationAlert() + 100));
}

uint64_t FMFLocationAlert.updateTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFLocationAlert();
  return sub_21192C6B8(v1 + *(int *)(v3 + 104), a1, qword_254AC8A78);
}

uint64_t FMFLocationAlert.muteEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFLocationAlert();
  return sub_21192C6B8(v1 + *(int *)(v3 + 108), a1, qword_254AC8A78);
}

uint64_t FMFLocationAlert.displayLabel.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v24[304];
  _BYTE v25[304];
  _BYTE __src[304];

  v1 = v0;
  v2 = (int *)type metadata accessor for FMFLocationAlert();
  v3 = (uint64_t *)(v0 + v2[20]);
  v4 = v3[1];
  if (!v4)
    goto LABEL_9;
  v5 = *v3;
  v6 = sub_211A47934();
  v8 = v7;
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  FMFDefaultLabel.init(rawValue:)(v9);
  v10 = v5;
  v11 = v4;
  if (__src[0] != 5)
  {
    FMFDefaultLabel.localizedLabel.getter();
    v10 = v12;
    v11 = v13;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v14 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v14 = v10 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = sub_211A47934();
    v17 = v16;
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    FMFDefaultLabel.init(rawValue:)(v18);
    if (__src[0] != 5)
    {
      FMFDefaultLabel.localizedLabel.getter();
      v5 = v19;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_9:
    v20 = (uint64_t *)(v1 + v2[22]);
    v21 = v20[1];
    if (!v21)
      goto LABEL_14;
    v5 = *v20;
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = v5 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_14:
      sub_21192DD68(v1 + v2[23], (uint64_t)v25, &qword_254ACCB40);
      sub_21192DD68((uint64_t)v25, (uint64_t)__src, &qword_254ACCB40);
      if (sub_21196FB8C((uint64_t)__src) == 1)
      {
        return 0;
      }
      else
      {
        memcpy(v24, __src, sizeof(v24));
        return FMFAddress.displayAddress.getter();
      }
    }
  }
  return v5;
}

uint64_t sub_211987F8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_211987FB4 + 4 * byte_211A4B994[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_211987FB4()
{
  return 0x656475746974616CLL;
}

uint64_t sub_211987FCC()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_211987FE8()
{
  return 0x737569646172;
}

uint64_t sub_211987FFC()
{
  return 1701869940;
}

uint64_t sub_21198800C()
{
  return 0x72656767697274;
}

uint64_t sub_211988024()
{
  return 1850700649;
}

uint64_t sub_211988034()
{
  return 0x6F656D6974656E6FLL;
}

uint64_t sub_211988054()
{
  return 0x6D695465636E6566;
}

uint64_t sub_211988078()
{
  return 0x64726F6365526B63;
}

unint64_t sub_211988098()
{
  return 0xD000000000000015;
}

unint64_t sub_2119880BC()
{
  return 0xD000000000000010;
}

uint64_t sub_2119880D8()
{
  return 0x6954657461647075;
}

uint64_t sub_2119880FC()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_21198811C()
{
  return 0x736C69616D65;
}

uint64_t sub_211988130()
{
  return 0x7265776F6C6C6F66;
}

uint64_t sub_211988150()
{
  return 0x6449646E65697266;
}

uint64_t sub_211988168()
{
  return 0x6C6562616CLL;
}

uint64_t sub_21198817C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_21198819C()
{
  return 0x73736572646461;
}

uint64_t sub_2119881B4()
{
  return 0x726464416C6C7566;
}

uint64_t sub_2119881D8()
{
  return 0x44646E456574756DLL;
}

uint64_t sub_2119881F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_211987F8C(*a1);
  v5 = v4;
  if (v3 == sub_211987F8C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_211988280()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211987F8C(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119882E0()
{
  unsigned __int8 *v0;

  sub_211987F8C(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211988320()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_211987F8C(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_21198837C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21198FDD4();
  *a1 = result;
  return result;
}

uint64_t sub_2119883A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_211987F8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119883D0()
{
  unsigned __int8 *v0;

  return sub_211987F8C(*v0);
}

uint64_t sub_2119883D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21198FDD4();
  *a1 = result;
  return result;
}

void sub_2119883FC(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_211988408()
{
  sub_21198B014();
  return sub_211A48390();
}

uint64_t sub_211988430()
{
  sub_21198B014();
  return sub_211A4839C();
}

char FMFLocationAlert.init(from:)@<W0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  BOOL v58;
  uint64_t v59;
  Swift::String v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  double v68;
  char v69;
  double v70;
  double v71;
  char v72;
  double v73;
  char v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  Swift::String v98;
  int v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  unint64_t v105;
  int *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  char *v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[38];
  uint64_t v130[39];
  char v131;

  v118 = a2;
  v3 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v3, v4);
  v121 = (uint64_t)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_211A47208();
  v120 = *(_QWORD *)(v122 - 8);
  v7 = MEMORY[0x24BDAC7A8](v122, v6);
  v119 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v116 - v10;
  v12 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_211958C38(&qword_254AC99B0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = (int *)type metadata accessor for FMFLocationAlert();
  MEMORY[0x24BDAC7A8](v125, v19);
  v126 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v123 = a1;
  sub_211931DB4(a1, v21);
  sub_21198B014();
  v22 = v124;
  sub_211A48360();
  if (v22)
  {
    LODWORD(v124) = 0;
    LODWORD(v122) = 0;
    v23 = 0;
    v24 = 0;
    if (qword_254AC7B80 != -1)
      swift_once();
    v28 = sub_211A47748();
    sub_21194F3E0(v28, (uint64_t)qword_254ADC7E8);
    v29 = v22;
    v30 = v22;
    v31 = sub_211A47724();
    v32 = sub_211A47D24();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      LODWORD(v121) = 0;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      LODWORD(v120) = 0;
      v36 = v35;
      v130[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v119 = (char *)(v34 + 4);
      v129[0] = v22;
      v37 = v22;
      sub_211958C38(&qword_254ACC360);
      v38 = sub_211A47928();
      v129[0] = sub_211950A9C(v38, v39, v130);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v31, v32, "FMFFence: Could not decode. Error - %s", v34, 0xCu);
      swift_arrayDestroy();
      v40 = v36;
      v23 = v120;
      MEMORY[0x212BE48A0](v40, -1, -1);
      v41 = v34;
      v24 = v121;
      MEMORY[0x212BE48A0](v41, -1, -1);
    }
    else
    {

    }
    v43 = v125;
    v42 = v126;
    swift_willThrow();
    LOBYTE(v44) = sub_211931C34((uint64_t)v123);
    if ((_DWORD)v124)
    {
      LOBYTE(v44) = swift_bridgeObjectRelease();
      if (!(_DWORD)v122)
      {
LABEL_11:
        if (!v23)
          goto LABEL_12;
        goto LABEL_17;
      }
    }
    else if (!(_DWORD)v122)
    {
      goto LABEL_11;
    }
    sub_211923EE8(v42 + v43[12], (uint64_t *)&unk_254ACC2E0);
    swift_bridgeObjectRelease();
    LOBYTE(v44) = swift_bridgeObjectRelease();
    if (!v23)
    {
LABEL_12:
      if (!v24)
        goto LABEL_13;
LABEL_18:
      LOBYTE(v44) = swift_bridgeObjectRelease();
LABEL_13:
      if (v24)
      {
        sub_21192DD68(v42 + v43[23], (uint64_t)v130, &qword_254ACCB40);
        LOBYTE(v44) = sub_21196F7C4((uint64_t)v130, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
      }
      return v44;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v44) = swift_bridgeObjectRelease();
    if (!v24)
      goto LABEL_13;
    goto LABEL_18;
  }
  v124 = v11;
  LOBYTE(v130[0]) = 0;
  v25 = sub_211A48144();
  v26 = v126;
  *(_QWORD *)v126 = v25;
  *(_QWORD *)(v26 + 8) = v27;
  LOBYTE(v130[0]) = 6;
  *(_BYTE *)(v26 + 42) = sub_211A48150() & 1;
  LOBYTE(v130[0]) = 7;
  *(_BYTE *)(v26 + 43) = (sub_211A48150() & 1) == 0;
  v45 = type metadata accessor for FMFSchedule();
  LOBYTE(v130[0]) = 8;
  sub_211910908(&qword_254AC99C0, (uint64_t (*)(uint64_t))type metadata accessor for FMFSchedule, (uint64_t)&protocol conformance descriptor for FMFSchedule);
  sub_211A48174();
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(0, 0, 1, v45);
  sub_21192DD68(0, v126 + v125[12], (uint64_t *)&unk_254ACC2E0);
  LOBYTE(v130[0]) = 9;
  v46 = sub_211A48144();
  v48 = (unint64_t)v125;
  v47 = v126;
  v49 = (uint64_t *)(v126 + v125[13]);
  *v49 = v46;
  v49[1] = v50;
  LOBYTE(v130[0]) = 10;
  v51 = sub_211A48144();
  v52 = (uint64_t *)(v47 + *(int *)(v48 + 56));
  *v52 = v51;
  v52[1] = v53;
  LOBYTE(v130[0]) = 11;
  v54 = sub_211A48114();
  if (!v55
    || (FMFLocationAlertAcceptanceStatus.init(rawValue:)(*(Swift::String *)&v54), v56 = v130[0], LOBYTE(v130[0]) == 3))
  {
    v56 = 3;
  }
  *(_BYTE *)(v47 + *(int *)(v48 + 60)) = v56;
  LOBYTE(v130[0]) = 4;
  sub_211A48144();
  v57 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v57 > 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  v58 = v57 != 0;
  v59 = v126;
  *(_BYTE *)(v126 + 40) = v58;
  LOBYTE(v130[0]) = 5;
  v60._countAndFlagsBits = sub_211A48144();
  LOBYTE(v44) = FMFLocationAlertTriggerType.init(rawValue:)(v60);
  if (LOBYTE(v130[0]) == 4)
  {
    __break(1u);
LABEL_50:
    __break(1u);
    return v44;
  }
  *(_BYTE *)(v59 + 41) = v130[0];
  sub_211958C38(&qword_254AC8378);
  LOBYTE(v129[0]) = 13;
  sub_21194D07C((unint64_t *)&qword_254AC8380, &qword_254AC8378, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_211A48174();
  *(_QWORD *)(v126 + v125[16]) = v130[0];
  LOBYTE(v129[0]) = 14;
  sub_211A48174();
  *(_QWORD *)(v126 + v125[17]) = v130[0];
  LOBYTE(v129[0]) = 15;
  sub_211A48174();
  v61 = v125;
  v62 = v126;
  *(_QWORD *)(v126 + v125[18]) = v130[0];
  LOBYTE(v130[0]) = 16;
  v63 = sub_211A48144();
  v64 = (uint64_t *)(v62 + v61[19]);
  *v64 = v63;
  v64[1] = v65;
  LOBYTE(v130[0]) = 1;
  v66 = COERCE_DOUBLE(sub_211A48120());
  v67 = MEMORY[0x24BDBFB70];
  v68 = *MEMORY[0x24BDBFB70];
  if ((v69 & 1) == 0)
    v68 = v66;
  *(double *)(v62 + 16) = v68;
  LOBYTE(v130[0]) = 2;
  v70 = COERCE_DOUBLE(sub_211A48120());
  v71 = *(double *)(v67 + 8);
  if ((v72 & 1) == 0)
    v71 = v70;
  *(double *)(v62 + 24) = v71;
  LOBYTE(v130[0]) = 3;
  v73 = COERCE_DOUBLE(sub_211A48120());
  if ((v74 & 1) != 0)
    v73 = -1.0;
  *(double *)(v126 + 32) = v73;
  LOBYTE(v130[0]) = 12;
  v117 = v14;
  v14 = (uint64_t)v18;
  v75 = sub_211A48180();
  v76 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v75);
  v77 = v124;
  sub_211A471E4();

  v78 = v126 + v125[26];
  v79 = v120;
  v80 = v77;
  v81 = v122;
  (*(void (**)(uint64_t, char *, uint64_t))(v120 + 16))(v78, v80, v122);
  v82 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56);
  v82(v78, 0, 1, v81);
  LOBYTE(v130[0]) = 21;
  sub_211910908(&qword_254AC99C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_211A48174();
  v84 = v121;
  v83 = v122;
  v82(v121, 0, 1, v122);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v84, 1, v83) == 1)
  {
    sub_211923EE8(v121, qword_254AC8A78);
    v85 = (char *)(v126 + v125[27]);
    v86 = 1;
    v87 = v122;
  }
  else
  {
    v91 = v119;
    v92 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 32);
    v93 = v122;
    v92(v119, v121, v122);
    v94 = (char *)(v126 + v125[27]);
    v92(v94, (uint64_t)v91, v93);
    v85 = v94;
    v86 = 0;
    v87 = v93;
  }
  v82((uint64_t)v85, v86, 1, v87);
  LOBYTE(v130[0]) = 19;
  v88 = sub_211A48144();
  v89 = (uint64_t *)(v126 + v125[22]);
  *v89 = v88;
  v89[1] = v90;
  v131 = 20;
  sub_211964964();
  sub_211A48138();
  sub_21192DD68((uint64_t)v130, (uint64_t)v129, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v129, v126 + v125[23], &qword_254ACCB40);
  LOBYTE(v128) = 17;
  v95 = sub_211A48144();
  v97 = v96;
  swift_bridgeObjectRetain();
  v98._countAndFlagsBits = v95;
  v98._object = v97;
  FMFDefaultLabel.init(rawValue:)(v98);
  v99 = v128;
  v100 = v126 + v125[20];
  *(_QWORD *)v100 = v95;
  *(_QWORD *)(v100 + 8) = v97;
  if (v99 == 5)
    v101 = 259;
  else
    v101 = 3;
  *(_WORD *)(v100 + 16) = v101;
  LOBYTE(v128) = 18;
  v102 = sub_211A48144();
  v44 = sub_21198944C(v102, v103);
  if ((v104 & 1) != 0)
    v105 = 0;
  else
    v105 = v44;
  if (v105 > 7)
    goto LABEL_50;
  v106 = v125;
  v107 = v126;
  *(_BYTE *)(v126 + v125[21]) = v105;
  *(_BYTE *)(v107 + v106[24]) = 1;
  *(_BYTE *)(v107 + v106[25]) = 1;
  v125 = (int *)FMFLocationAlert.debugDescription.getter();
  v48 = v108;
  if (qword_254AC7B80 != -1)
LABEL_48:
    swift_once();
  v109 = sub_211A47748();
  sub_21194F3E0(v109, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v110 = sub_211A47724();
  v111 = sub_211A47D30();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)swift_slowAlloc();
    v121 = swift_slowAlloc();
    v128 = v121;
    *(_DWORD *)v112 = 136315138;
    v119 = (char *)(v112 + 4);
    swift_bridgeObjectRetain();
    v127 = sub_211950A9C((uint64_t)v125, v48, &v128);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v110, v111, "FMFFence: initialized with coder %s", v112, 0xCu);
    v113 = v121;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v113, -1, -1);
    MEMORY[0x212BE48A0](v112, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(char *, uint64_t))(v120 + 8))(v124, v122);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v117);
  v114 = v126;
  sub_211974170(v126, v118);
  sub_211931C34((uint64_t)v123);
  LOBYTE(v44) = sub_211934758(v114, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  return v44;
}

uint64_t sub_21198944C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_211A47FB8();
      v7 = (uint64_t)sub_211A3B080(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_211A3B094(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t FMFLocationAlert.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[38];
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __int16 v53;
  uint64_t v54;
  unint64_t v55;

  v1 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21192C6B8(v0 + v9[27], (uint64_t)v8, qword_254AC8A78);
  v10 = sub_211A47928();
  v45 = v11;
  v46 = v10;
  sub_21192C6B8(v0 + v9[12], (uint64_t)v4, (uint64_t *)&unk_254ACC2E0);
  v12 = sub_211A47928();
  v43 = v13;
  v44 = v12;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  v14 = *(_QWORD *)(v0 + 8);
  v48[0] = *(_QWORD *)v0;
  v48[1] = v14;
  swift_bridgeObjectRetain();
  v47 = sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47C28();
  sub_211A479B8();
  sub_211A47C28();
  sub_211A479B8();
  v15 = v52;
  v42 = v51;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_211A47F70();
  v54 = v51;
  v55 = v52;
  sub_211A479B8();
  sub_211A47C28();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v51 = *(_QWORD *)(v0 + v9[16]);
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8B68);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v51 = v42;
  v52 = v15;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v51;
  v16 = v52;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v51 = 0x203A736C69616D65;
  v52 = 0xE800000000000000;
  v48[0] = *(_QWORD *)(v0 + v9[17]);
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v18 = (_QWORD *)(v0 + v9[19]);
  v19 = v18[1];
  v48[0] = *v18;
  v48[1] = v19;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v48[0] = *(_QWORD *)(v0 + v9[18]);
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v51 = v17;
  v52 = v16;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v51;
  v20 = v52;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_211A47F70();
  v48[0] = v51;
  v48[1] = v52;
  sub_211A479B8();
  v22 = v0 + v9[20];
  v24 = *(_QWORD *)v22;
  v23 = *(_QWORD *)(v22 + 8);
  LOWORD(v22) = *(_WORD *)(v22 + 16);
  v51 = v24;
  v52 = v23;
  v53 = v22;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC99D0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v51) = *(_BYTE *)(v0 + v9[21]);
  sub_211A48054();
  sub_211A479B8();
  v25 = (uint64_t *)(v0 + v9[22]);
  v26 = v25[1];
  v51 = *v25;
  v52 = v26;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v51 = v21;
  v52 = v20;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v51;
  v27 = v52;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_211A47F70();
  v49 = v51;
  v50 = v52;
  sub_211A479B8();
  sub_21192DD68(v0 + v9[23], (uint64_t)&v51, &qword_254ACCB40);
  sub_21192DD68((uint64_t)&v51, (uint64_t)v48, &qword_254ACCB40);
  sub_21196F7C4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  sub_211958C38(&qword_254ACCB40);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  LOBYTE(v48[0]) = *(_BYTE *)(v0 + 40);
  sub_211A48054();
  sub_211A479B8();
  LOBYTE(v48[0]) = *(_BYTE *)(v0 + 41);
  sub_211A48054();
  sub_211A479B8();
  v48[0] = v28;
  v48[1] = v27;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v48[1];
  v42 = v48[0];
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v48, "setOnMe: ");
  WORD1(v48[1]) = 0;
  HIDWORD(v48[1]) = -385875968;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v48[0] = v42;
  v48[1] = v29;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v48[0];
  v30 = v48[1];
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v48, "ckRecordName: ");
  HIBYTE(v48[1]) = -18;
  v32 = (uint64_t *)(v0 + v9[13]);
  v33 = v32[1];
  v49 = *v32;
  v50 = v33;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v34 = (uint64_t *)(v0 + v9[14]);
  v35 = v34[1];
  v49 = *v34;
  v50 = v35;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v48[0] = v31;
  v48[1] = v30;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = v48[0];
  v36 = v48[1];
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v48[0] = 0xD000000000000012;
  v48[1] = 0x8000000211A54850;
  LOBYTE(v49) = *(_BYTE *)(v0 + v9[15]);
  sub_211958C38(&qword_254AC99D8);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v48[0] = v37;
  v48[1] = v36;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v48[0];
  v38 = v48[1];
  strcpy((char *)v48, "muteEndDate: ");
  HIWORD(v48[1]) = -4864;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v48[0] = v39;
  v48[1] = v38;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v48[0];
}

uint64_t sub_21198A2A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v40;
  _BYTE v41[312];

  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_QWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 42) = *(_BYTE *)(a1 + 42);
  *(_BYTE *)(a4 + 43) = *(_BYTE *)(a1 + 43);
  v7 = (int *)type metadata accessor for FMFLocationAlert();
  sub_21192C6B8(a1 + v7[12], a4 + v7[12], (uint64_t *)&unk_254ACC2E0);
  *(_BYTE *)(a4 + 40) = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a4 + 41) = *(_BYTE *)(a1 + 41);
  v8 = v7[13];
  v10 = *(_QWORD *)(a1 + v8);
  v9 = *(_QWORD *)(a1 + v8 + 8);
  v11 = (_QWORD *)(a4 + v8);
  *v11 = v10;
  v11[1] = v9;
  v12 = v7[14];
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a4 + v12);
  *v15 = v13;
  v15[1] = v14;
  *(_BYTE *)(a4 + v7[15]) = *(_BYTE *)(a1 + v7[15]);
  *(_QWORD *)(a4 + v7[16]) = *(_QWORD *)(a1 + v7[16]);
  *(_QWORD *)(a4 + v7[17]) = *(_QWORD *)(a1 + v7[17]);
  *(_QWORD *)(a4 + v7[18]) = *(_QWORD *)(a1 + v7[18]);
  v16 = v7[19];
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a1 + v16 + 8);
  v19 = (_QWORD *)(a4 + v16);
  *v19 = v17;
  v19[1] = v18;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a4 + 32) = *(_QWORD *)(a1 + 32);
  sub_21192C6B8(a1 + v7[26], a4 + v7[26], qword_254AC8A78);
  sub_21192C6B8(a1 + v7[27], a4 + v7[27], qword_254AC8A78);
  v20 = v7[22];
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a4 + v20);
  *v23 = v21;
  v23[1] = v22;
  sub_21192DD68(a1 + v7[23], (uint64_t)v41, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v41, a4 + v7[23], &qword_254ACCB40);
  v24 = v7[20];
  v25 = *(_QWORD *)(a1 + v24);
  v26 = *(_QWORD *)(a1 + v24 + 8);
  v27 = *(_WORD *)(a1 + v24 + 16);
  v28 = a4 + v24;
  *(_QWORD *)v28 = v25;
  *(_QWORD *)(v28 + 8) = v26;
  *(_WORD *)(v28 + 16) = v27;
  *(_BYTE *)(a4 + v7[21]) = *(_BYTE *)(a1 + v7[21]);
  *(_BYTE *)(a4 + v7[24]) = a2;
  *(_BYTE *)(a4 + v7[25]) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21196F7C4((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  swift_bridgeObjectRetain();
  v29 = FMFLocationAlert.debugDescription.getter();
  v31 = v30;
  if (qword_254AC7B80 != -1)
    swift_once();
  v32 = sub_211A47748();
  sub_21194F3E0(v32, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v33 = sub_211A47724();
  v34 = sub_211A47D30();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v40 = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain();
    sub_211950A9C(v29, v31, &v40);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v33, v34, "FMFFence: initialized from fence %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v36, -1, -1);
    MEMORY[0x212BE48A0](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return sub_211934758(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
}

uint64_t FMFLocationAlert.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[10];
  char v24;
  __int128 v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_211A47208();
  v23[7] = *(_QWORD *)(v4 - 8);
  v23[8] = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v23[5] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(qword_254AC8A78);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v23[6] = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v23 - v12;
  v14 = sub_211958C38(&qword_254AC99E0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21198B014();
  sub_211A4836C();
  v25 = *v2;
  v24 = 0;
  v19 = sub_211958C38(&qword_254AC7C58);
  v20 = sub_21194D07C((unint64_t *)&qword_254AC7C60, &qword_254AC7C58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
  v21 = v26;
  sub_211A481E0();
  if (!v21)
  {
    v23[4] = v13;
    v26 = v20;
    LOBYTE(v25) = 6;
    sub_211A481BC();
    LOBYTE(v25) = 7;
    sub_211A481BC();
    v23[2] = v19;
    v23[3] = v15;
    type metadata accessor for FMFLocationAlert();
    LOBYTE(v25) = 8;
    sub_211958C38((uint64_t *)&unk_254ACC2E0);
    sub_21198B058();
    sub_211A481E0();
    LOBYTE(v25) = 4;
    sub_211A481B0();
    v23[0] = v18;
    v23[1] = v14;
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

void sub_21198AADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, _QWORD);
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)(v0 + 384) = 11;
  sub_211A481B0();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_BYTE *)(v0 + 384) = 1;
    sub_211A481C8();
    v7 = v2;
    *(_BYTE *)(v0 + 384) = 2;
    sub_211A481C8();
    *(_BYTE *)(v0 + 384) = 3;
    sub_211A481C8();
    v8 = *(_QWORD *)(v0 + 32);
    sub_21192C6B8(v2 + v3[26], v8, qword_254AC8A78);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 48);
    if (v9(v8, 1, *(_QWORD *)(v0 + 64)) != 1)
    {
      v10 = *(_QWORD *)(v0 + 32);
      v11 = (void *)sub_211A471A8();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(v10, *(_QWORD *)(v0 + 64));
      objc_msgSend(v11, sel_fm_epoch);
      *(_BYTE *)(v0 + 384) = 12;
      sub_211A481EC();

    }
    v12 = *(_QWORD *)(v0 + 48);
    sub_21192C6B8(v7 + v3[27], v12, qword_254AC8A78);
    if (v9(v12, 1, *(_QWORD *)(v0 + 64)) == 1)
    {
      sub_211923EE8(*(_QWORD *)(v0 + 48), qword_254AC8A78);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
      *(_BYTE *)(v0 + 384) = 21;
      sub_211910908(&qword_254AC8B88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
      sub_211A481E0();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
    }
    *(_QWORD *)v4 = *(_QWORD *)(v7 + v3[16]);
    *(_BYTE *)(v0 + 80) = 13;
    sub_211958C38(&qword_254AC8B68);
    sub_21194D11C();
    sub_211A481E0();
    *(_QWORD *)v4 = *(_QWORD *)(v7 + v3[17]);
    *(_BYTE *)(v0 + 80) = 14;
    sub_211A481E0();
    *(_QWORD *)v4 = *(_QWORD *)(v7 + v3[18]);
    *(_BYTE *)(v0 + 80) = 15;
    sub_211A481E0();
    *(_OWORD *)v4 = *(_OWORD *)(v7 + v3[19]);
    *(_BYTE *)(v0 + 80) = 16;
    sub_211A481E0();
    *(_OWORD *)(v4 + 320) = *(_OWORD *)(v7 + v3[22]);
    *(_BYTE *)(v6 - 113) = 19;
    sub_211A481E0();
    sub_21192DD68(v7 + v3[23], v0 + 384, &qword_254ACCB40);
    sub_21192DD68(v0 + 384, v0 + 80, &qword_254ACCB40);
    *(_BYTE *)(v0 + 79) = 20;
    sub_211958C38(&qword_254ACCB40);
    sub_21196F848();
    sub_211A481E0();
    v13 = *(unsigned __int8 *)(v7 + v3[21]);
    *(_BYTE *)(v0 + 80) = v13;
    sub_211A47928();
    *(_BYTE *)(v0 + 80) = 18;
    sub_211A481B0();
    swift_bridgeObjectRelease();
    v14 = (uint64_t *)(v7 + v3[20]);
    v15 = v14[1];
    if (v15)
      v16 = *v14;
    else
      v16 = 0;
    *(_QWORD *)(v0 + 80) = v16;
    *(_QWORD *)(v0 + 88) = v15;
    *(_BYTE *)(v0 + 79) = 17;
    sub_211A481E0();
    *(_QWORD *)(v0 + 80) = v13;
    sub_211A4821C();
    *(_BYTE *)(v0 + 80) = 18;
    sub_211A481B0();
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
    JUMPOUT(0x21198AA14);
  }
  JUMPOUT(0x21198A9FCLL);
}

uint64_t sub_21198AFA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLocationAlert.init(from:)(a1, a2);
}

uint64_t sub_21198AFB4(_QWORD *a1)
{
  return FMFLocationAlert.encode(to:)(a1);
}

uint64_t sub_21198AFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21198B014()
{
  unint64_t result;

  result = qword_254AC99B8;
  if (!qword_254AC99B8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C034, &type metadata for FMFLocationAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC99B8);
  }
  return result;
}

unint64_t sub_21198B058()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254AC99E8;
  if (!qword_254AC99E8)
  {
    v1 = sub_21195E2C0((uint64_t *)&unk_254ACC2E0);
    v2 = sub_211910908(&qword_254AC99F0, (uint64_t (*)(uint64_t))type metadata accessor for FMFSchedule, (uint64_t)&protocol conformance descriptor for FMFSchedule);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254AC99E8);
  }
  return result;
}

uint64_t _s7FMFCore16FMFLocationAlertV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  double *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  double *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  double *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  double *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  double *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  _QWORD *v161;
  _QWORD *v162;
  double v163;
  double v164;
  double v165;
  double v166;
  uint64_t v167;
  double v168;
  double v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  int v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  BOOL v177;
  uint64_t v178;
  int v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  uint64_t v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  _QWORD *v230;
  _QWORD *v231;
  char v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;
  char v244;
  uint64_t v245;
  int v246;
  int v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  int *v253;
  char v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  int v259;
  uint64_t v260;
  uint64_t v261;
  int *v262;
  int v263;
  int *v264;
  int v265;
  uint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  int v279;
  int v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int (*v290)(uint64_t, uint64_t, uint64_t);
  char v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char v296;
  void (*v297)(char *, uint64_t);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int (*v303)(uint64_t, uint64_t, uint64_t);
  uint64_t v304;
  uint64_t *v305;
  uint64_t *v306;
  char *v307;
  int *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  _QWORD *v358;
  _QWORD *v359;
  _BYTE v360[304];
  _BYTE v361[304];
  _BYTE v362[304];
  _BYTE v363[304];
  _BYTE v364[608];
  _BYTE v365[304];
  _BYTE v366[608];
  _BYTE v367[304];
  _BYTE v368[304];
  _BYTE v369[312];

  v314 = type metadata accessor for FMFSchedule();
  v312 = *(_QWORD *)(v314 - 8);
  MEMORY[0x24BDAC7A8](v314, v4);
  v313 = (uint64_t *)((char *)&v307 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v315 = (uint64_t *)((char *)&v307 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v311 = sub_211958C38(&qword_254AC9B20);
  MEMORY[0x24BDAC7A8](v311, v9);
  v11 = (char *)&v307 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v319 = sub_211A47208();
  v317 = *(_QWORD *)(v319 - 8);
  MEMORY[0x24BDAC7A8](v319, v12);
  v309 = (char *)&v307 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v14, v15);
  v310 = (uint64_t)&v307 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v316 = sub_211958C38(&qword_254AC8B40);
  MEMORY[0x24BDAC7A8](v316, v17);
  v318 = (uint64_t)&v307 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMFLocationAlert();
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v332 = (uint64_t)&v307 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v333 = (uint64_t)&v307 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v334 = (uint64_t)&v307 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v331 = (uint64_t)&v307 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v338 = (uint64_t)&v307 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v337 = (uint64_t)&v307 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v335 = (uint64_t)&v307 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v347 = (uint64_t)&v307 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v336 = (uint64_t)&v307 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v339 = (uint64_t)&v307 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48, v50);
  v340 = (char *)&v307 - v52;
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v56 = MEMORY[0x24BDAC7A8](v54, v55);
  v329 = (uint64_t)&v307 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v346 = (char *)&v307 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v64 = MEMORY[0x24BDAC7A8](v62, v63);
  v328 = (uint64_t)&v307 - v65;
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v341 = (uint64_t)&v307 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67, v69);
  v357 = (uint64_t)&v307 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70, v72);
  v342 = (uint64_t)&v307 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73, v75);
  v343 = (uint64_t)&v307 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76, v78);
  v345 = (uint64_t)&v307 - v80;
  v82 = MEMORY[0x24BDAC7A8](v79, v81);
  v344 = (uint64_t)&v307 - v83;
  v85 = MEMORY[0x24BDAC7A8](v82, v84);
  v325 = (uint64_t)&v307 - v86;
  v88 = MEMORY[0x24BDAC7A8](v85, v87);
  v326 = (uint64_t)&v307 - v89;
  v91 = MEMORY[0x24BDAC7A8](v88, v90);
  v348 = (uint64_t)&v307 - v92;
  v94 = MEMORY[0x24BDAC7A8](v91, v93);
  v350 = (uint64_t)&v307 - v95;
  v97 = MEMORY[0x24BDAC7A8](v94, v96);
  v349 = (uint64_t)&v307 - v98;
  v100 = MEMORY[0x24BDAC7A8](v97, v99);
  v351 = (uint64_t)&v307 - v101;
  v103 = MEMORY[0x24BDAC7A8](v100, v102);
  v352 = (uint64_t)&v307 - v104;
  v106 = MEMORY[0x24BDAC7A8](v103, v105);
  v324 = (char *)&v307 - v107;
  v109 = MEMORY[0x24BDAC7A8](v106, v108);
  v353 = (uint64_t)&v307 - v110;
  v112 = MEMORY[0x24BDAC7A8](v109, v111);
  v354 = (uint64_t)&v307 - v113;
  v115 = MEMORY[0x24BDAC7A8](v112, v114);
  v355 = (uint64_t)&v307 - v116;
  v118 = MEMORY[0x24BDAC7A8](v115, v117);
  v356 = (uint64_t)&v307 - v119;
  v121 = MEMORY[0x24BDAC7A8](v118, v120);
  v323 = (uint64_t)&v307 - v122;
  MEMORY[0x24BDAC7A8](v121, v123);
  v126 = MEMORY[0x24BDAC7A8]((char *)&v307 - v124, v125);
  v321 = (uint64_t)&v307 - v127;
  v129 = MEMORY[0x24BDAC7A8](v126, v128);
  v320 = (char *)&v307 - v130;
  v132 = MEMORY[0x24BDAC7A8](v129, v131);
  v134 = (double *)((char *)&v307 - v133);
  v136 = MEMORY[0x24BDAC7A8](v132, v135);
  v138 = (double *)((char *)&v307 - v137);
  v140 = MEMORY[0x24BDAC7A8](v136, v139);
  v142 = (double *)((char *)&v307 - v141);
  v144 = MEMORY[0x24BDAC7A8](v140, v143);
  v146 = (double *)((char *)&v307 - v145);
  v148 = MEMORY[0x24BDAC7A8](v144, v147);
  v150 = (double *)((char *)&v307 - v149);
  v152 = MEMORY[0x24BDAC7A8](v148, v151);
  v155 = (double *)((char *)&v307 - v153);
  v358 = a1;
  v359 = a2;
  v156 = a1[1];
  v157 = a2[1];
  v330 = v158;
  v327 = v159;
  v322 = v152;
  if (!v156)
  {
    if (!v157)
    {
LABEL_10:
      v307 = v11;
      v308 = v154;
      v161 = v358;
      sub_211974170((uint64_t)v358, (uint64_t)&v307 - v153);
      v162 = v359;
      sub_211974170((uint64_t)v359, (uint64_t)v150);
      goto LABEL_11;
    }
LABEL_8:
    v161 = v358;
    sub_211974170((uint64_t)v358, (uint64_t)&v307 - v153);
    v162 = v359;
    sub_211974170((uint64_t)v359, (uint64_t)v150);
    goto LABEL_9;
  }
  if (!v157)
    goto LABEL_8;
  if (*v358 == *v359 && v156 == v157)
    goto LABEL_10;
  v307 = v11;
  v308 = v154;
  v160 = sub_211A48258();
  v161 = v358;
  sub_211974170((uint64_t)v358, (uint64_t)v155);
  v162 = v359;
  sub_211974170((uint64_t)v359, (uint64_t)v150);
  if ((v160 & 1) == 0)
  {
LABEL_9:
    sub_211934758((uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211974170((uint64_t)v161, (uint64_t)v146);
    sub_211974170((uint64_t)v162, (uint64_t)v142);
LABEL_22:
    sub_211934758((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211974170((uint64_t)v161, (uint64_t)v138);
    sub_211974170((uint64_t)v162, (uint64_t)v134);
    v167 = (uint64_t)v320;
    goto LABEL_23;
  }
LABEL_11:
  v163 = v155[2];
  sub_211934758((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v164 = v150[2];
  sub_211934758((uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211974170((uint64_t)v161, (uint64_t)v146);
  sub_211974170((uint64_t)v162, (uint64_t)v142);
  if (v163 != v164)
    goto LABEL_22;
  v165 = v146[3];
  sub_211934758((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v166 = v142[3];
  sub_211934758((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211974170((uint64_t)v161, (uint64_t)v138);
  sub_211974170((uint64_t)v162, (uint64_t)v134);
  v167 = (uint64_t)v320;
  if (v165 != v166)
  {
LABEL_23:
    sub_211934758((uint64_t)v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211974170((uint64_t)v161, v167);
    v170 = v321;
    sub_211974170((uint64_t)v162, v321);
    v171 = v346;
    v172 = v357;
    goto LABEL_24;
  }
  v168 = v138[4];
  sub_211934758((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v169 = v134[4];
  sub_211934758((uint64_t)v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211974170((uint64_t)v161, v167);
  v170 = v321;
  sub_211974170((uint64_t)v162, v321);
  v171 = v346;
  v172 = v357;
  if (v168 != v169)
  {
LABEL_24:
    sub_211934758(v170, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v175 = v322;
    sub_211974170((uint64_t)v161, v322);
    v178 = v323;
    sub_211974170((uint64_t)v162, v323);
LABEL_25:
    sub_211934758(v178, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v175, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v183 = v356;
    sub_211974170((uint64_t)v161, v356);
    v182 = v355;
    sub_211974170((uint64_t)v162, v355);
    v184 = v172;
LABEL_26:
    sub_211934758(v182, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v183, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_27:
    v190 = v354;
    v192 = (uint64_t)v324;
    sub_211974170((uint64_t)v161, v354);
    v191 = v353;
    sub_211974170((uint64_t)v162, v353);
LABEL_28:
    sub_211934758(v191, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v190, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_29:
    sub_211974170((uint64_t)v161, v192);
    v193 = v352;
    sub_211974170((uint64_t)v162, v352);
LABEL_30:
    sub_211934758(v193, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v192, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_31:
    v194 = v351;
    sub_211974170((uint64_t)v161, v351);
    v195 = v349;
    sub_211974170((uint64_t)v162, v349);
LABEL_32:
    v196 = v184;
    v197 = (uint64_t)v171;
    v198 = v347;
    sub_211934758(v195, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v194, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_33:
    v199 = v350;
    sub_211974170((uint64_t)v161, v350);
    v200 = v348;
    sub_211974170((uint64_t)v162, v348);
LABEL_34:
    sub_211934758(v200, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v199, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v201 = v325;
LABEL_35:
    v202 = v198;
    v203 = v326;
    sub_211974170((uint64_t)v161, v326);
    sub_211974170((uint64_t)v162, v201);
    v204 = v197;
LABEL_36:
    sub_211934758(v201, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v203, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v205 = v344;
    sub_211974170((uint64_t)v161, v344);
    v206 = v345;
    sub_211974170((uint64_t)v162, v345);
LABEL_37:
    sub_211934758(v206, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v205, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_38:
    v207 = v343;
    sub_211974170((uint64_t)v161, v343);
    v208 = v342;
    sub_211974170((uint64_t)v162, v342);
    v209 = (uint64_t)v340;
LABEL_39:
    sub_211934758(v208, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v207, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_40:
    sub_211974170((uint64_t)v161, v196);
    v210 = v341;
    sub_211974170((uint64_t)v162, v341);
    v211 = v338;
LABEL_41:
    sub_211934758(v210, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v196, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v212 = v328;
    sub_211974170((uint64_t)v161, v328);
    v213 = v327;
    sub_211974170((uint64_t)v162, v327);
LABEL_42:
    sub_211934758(v213, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v212, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211974170((uint64_t)v161, v204);
    v214 = v329;
    sub_211974170((uint64_t)v162, v329);
    v215 = v339;
LABEL_43:
    sub_211934758(v214, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v204, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v216 = v330;
    sub_211974170((uint64_t)v161, v330);
    sub_211974170((uint64_t)v162, v209);
    v217 = v337;
LABEL_44:
    sub_211934758(v209, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v216, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211974170((uint64_t)v161, v215);
    v218 = v336;
    sub_211974170((uint64_t)v162, v336);
LABEL_45:
    sub_211934758(v218, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v215, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v219 = v334;
LABEL_46:
    sub_211974170((uint64_t)v161, v202);
    v220 = v335;
    sub_211974170((uint64_t)v162, v335);
LABEL_47:
    sub_211934758(v220, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v202, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_48:
    sub_211974170((uint64_t)v161, v217);
    sub_211974170((uint64_t)v162, v211);
LABEL_49:
    sub_211934758(v211, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v217, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_50:
    v221 = v331;
    sub_211974170((uint64_t)v161, v331);
    sub_211974170((uint64_t)v162, v219);
LABEL_51:
    sub_211934758(v219, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v221, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_52:
    v222 = v333;
    sub_211974170((uint64_t)v161, v333);
    v223 = v332;
    sub_211974170((uint64_t)v162, v332);
LABEL_53:
    sub_211934758(v223, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v222, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_54;
  }
  v173 = *(unsigned __int8 *)(v167 + 42);
  sub_211934758(v167, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v174 = *(unsigned __int8 *)(v170 + 42);
  sub_211934758(v170, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v175 = v322;
  sub_211974170((uint64_t)v161, v322);
  v176 = v323;
  sub_211974170((uint64_t)v162, v323);
  v177 = v173 == v174;
  v178 = v176;
  v172 = v357;
  if (!v177)
    goto LABEL_25;
  v179 = *(unsigned __int8 *)(v175 + 43);
  sub_211934758(v175, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v180 = *(unsigned __int8 *)(v176 + 43);
  sub_211934758(v176, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v181 = v356;
  sub_211974170((uint64_t)v161, v356);
  v182 = v355;
  sub_211974170((uint64_t)v162, v355);
  v177 = v179 == v180;
  v183 = v181;
  v184 = v357;
  if (!v177)
    goto LABEL_26;
  v185 = v308[16];
  v186 = *(_QWORD **)(v181 + v185);
  v187 = v183;
  v188 = *(_QWORD **)(v182 + v185);
  if (!v186)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v182, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v187, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v188)
    {
      v190 = v354;
      sub_211974170((uint64_t)v161, v354);
      v191 = v353;
      sub_211974170((uint64_t)v162, v353);
      v192 = (uint64_t)v324;
      goto LABEL_61;
    }
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!v188)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v355, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v356, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_59;
  }
  v189 = sub_21194E8E8(v186, v188);
  swift_bridgeObjectRetain();
  sub_211934758(v355, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v184 = v357;
  sub_211934758(v356, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  v190 = v354;
  sub_211974170((uint64_t)v161, v354);
  v191 = v353;
  sub_211974170((uint64_t)v162, v353);
  v192 = (uint64_t)v324;
  if ((v189 & 1) == 0)
    goto LABEL_28;
LABEL_61:
  v226 = v308[17];
  v227 = *(_QWORD *)(v191 + v226);
  if (!*(_QWORD *)(v190 + v226))
  {
    swift_bridgeObjectRetain();
    sub_211934758(v191, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v190, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v227)
    {
      sub_211974170((uint64_t)v161, v192);
      v193 = v352;
      sub_211974170((uint64_t)v162, v352);
      goto LABEL_70;
    }
LABEL_68:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!v227)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v353, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v354, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_68;
  }
  v228 = sub_21194E8E8(*(_QWORD **)(v190 + v226), *(_QWORD **)(v191 + v226));
  swift_bridgeObjectRetain();
  sub_211934758(v353, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v184 = v357;
  sub_211934758(v354, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  sub_211974170((uint64_t)v161, v192);
  v193 = v352;
  sub_211974170((uint64_t)v162, v352);
  if ((v228 & 1) == 0)
    goto LABEL_30;
LABEL_70:
  v229 = v308[18];
  v230 = *(_QWORD **)(v192 + v229);
  v231 = *(_QWORD **)(v193 + v229);
  if (v230)
  {
    if (!v231)
    {
      swift_bridgeObjectRetain();
      sub_211934758(v352, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      sub_211934758(v192, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v232 = sub_21194E8E8(v230, v231);
    swift_bridgeObjectRetain();
    sub_211934758(v352, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v184 = v357;
    sub_211934758(v192, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    v194 = v351;
    sub_211974170((uint64_t)v161, v351);
    v195 = v349;
    sub_211974170((uint64_t)v162, v349);
    if ((v232 & 1) == 0)
      goto LABEL_32;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_211934758(v193, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v192, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (v231)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v194 = v351;
    sub_211974170((uint64_t)v161, v351);
    v195 = v349;
    sub_211974170((uint64_t)v162, v349);
  }
  v233 = v308[19];
  v234 = (_QWORD *)(v194 + v233);
  v235 = *(_QWORD *)(v194 + v233 + 8);
  v236 = (_QWORD *)(v195 + v233);
  v237 = v236[1];
  v196 = v184;
  if (!v235)
  {
    v197 = (uint64_t)v171;
    swift_bridgeObjectRetain();
    sub_211934758(v195, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v194, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v198 = v347;
    if (v237)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    goto LABEL_85;
  }
  if (!v237)
  {
    v197 = (uint64_t)v171;
    v198 = v347;
    swift_bridgeObjectRetain();
    sub_211934758(v195, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v351, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (*v234 == *v236 && v235 == v237)
  {
    v197 = (uint64_t)v171;
    swift_bridgeObjectRetain();
    sub_211934758(v349, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v351, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    v198 = v347;
LABEL_85:
    v199 = v350;
    sub_211974170((uint64_t)v161, v350);
    v200 = v348;
    sub_211974170((uint64_t)v162, v348);
    goto LABEL_88;
  }
  v197 = (uint64_t)v171;
  v198 = v347;
  v238 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_211934758(v349, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v196 = v357;
  sub_211934758(v351, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  v199 = v350;
  sub_211974170((uint64_t)v161, v350);
  v200 = v348;
  sub_211974170((uint64_t)v162, v348);
  if ((v238 & 1) == 0)
    goto LABEL_34;
LABEL_88:
  v239 = v308[20];
  v240 = (_QWORD *)(v199 + v239);
  v241 = *(_QWORD *)(v199 + v239 + 8);
  v242 = (_QWORD *)(v200 + v239);
  v243 = v242[1];
  if (!v241)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v200, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v350, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v243)
    {
      swift_bridgeObjectRelease();
      v202 = v198;
      goto LABEL_100;
    }
LABEL_96:
    v201 = v325;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (!v243)
  {
    swift_bridgeObjectRetain_n();
    sub_211934758(v200, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v350, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
    goto LABEL_96;
  }
  v202 = v198;
  if (*v240 == *v242 && v241 == v243)
  {
    swift_bridgeObjectRetain_n();
    sub_211934758(v348, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v350, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease_n();
LABEL_100:
    v203 = v326;
    sub_211974170((uint64_t)v161, v326);
    v201 = v325;
    sub_211974170((uint64_t)v162, v325);
    v204 = v197;
    goto LABEL_101;
  }
  v244 = sub_211A48258();
  swift_bridgeObjectRetain_n();
  sub_211934758(v348, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v196 = v357;
  sub_211934758(v350, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease_n();
  v203 = v326;
  sub_211974170((uint64_t)v161, v326);
  v201 = v325;
  sub_211974170((uint64_t)v162, v325);
  v204 = v197;
  if ((v244 & 1) == 0)
    goto LABEL_36;
LABEL_101:
  v245 = v308[21];
  v246 = *(unsigned __int8 *)(v203 + v245);
  v247 = *(unsigned __int8 *)(v201 + v245);
  sub_211934758(v201, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v203, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v205 = v344;
  sub_211974170((uint64_t)v161, v344);
  v206 = v345;
  sub_211974170((uint64_t)v162, v345);
  v177 = v246 == v247;
  v196 = v357;
  if (!v177)
    goto LABEL_37;
  v248 = v308[22];
  v249 = (_QWORD *)(v205 + v248);
  v250 = *(_QWORD *)(v205 + v248 + 8);
  v251 = (_QWORD *)(v206 + v248);
  v252 = v251[1];
  if (!v250)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v345, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v205, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v252)
      goto LABEL_109;
LABEL_111:
    swift_bridgeObjectRelease();
    v161 = v358;
    v162 = v359;
    v204 = (uint64_t)v346;
    v202 = v347;
    v196 = v357;
    goto LABEL_38;
  }
  if (!v252)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v345, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v344, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_111;
  }
  if (*v249 == *v251 && v250 == v252)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v345, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v344, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_109:
    v207 = v343;
    sub_211974170((uint64_t)v358, v343);
    v208 = v342;
    sub_211974170((uint64_t)v359, v342);
    goto LABEL_113;
  }
  LODWORD(v356) = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_211934758(v345, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v344, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  v161 = v358;
  v207 = v343;
  sub_211974170((uint64_t)v358, v343);
  v162 = v359;
  v208 = v342;
  sub_211974170((uint64_t)v359, v342);
  v204 = (uint64_t)v346;
  v202 = v347;
  v209 = (uint64_t)v340;
  v196 = v357;
  if ((v356 & 1) == 0)
    goto LABEL_39;
LABEL_113:
  v253 = v308;
  sub_21192DD68(v207 + v308[23], (uint64_t)v367, &qword_254ACCB40);
  sub_21192DD68(v208 + v253[23], (uint64_t)v368, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v367, (uint64_t)v366, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v368, (uint64_t)&v366[304], &qword_254ACCB40);
  sub_21192DD68((uint64_t)v367, (uint64_t)v369, &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)v369) == 1)
  {
    sub_21196F7C4((uint64_t)v368, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
    sub_211934758(v342, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v343, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_21192DD68((uint64_t)&v366[304], (uint64_t)v365, &qword_254ACCB40);
    sub_21192DD68((uint64_t)v365, (uint64_t)v364, &qword_254ACCB40);
    if (sub_21196FB8C((uint64_t)v364) == 1)
    {
      sub_21192DD68((uint64_t)v366, (uint64_t)v363, &qword_254ACCB40);
      sub_21196F7C4((uint64_t)v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
      v196 = v357;
      sub_211974170((uint64_t)v358, v357);
      v210 = v341;
      sub_211974170((uint64_t)v359, v341);
      goto LABEL_120;
    }
LABEL_118:
    memcpy(v364, v366, sizeof(v364));
    sub_21196FBA4((uint64_t)v364);
    v161 = v358;
    v162 = v359;
    v204 = (uint64_t)v346;
    v202 = v347;
    v209 = (uint64_t)v340;
    v196 = v357;
    goto LABEL_40;
  }
  sub_21192DD68((uint64_t)v367, (uint64_t)v365, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v368, (uint64_t)v364, &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)v364) == 1)
  {
    sub_21192DD68((uint64_t)v367, (uint64_t)v362, &qword_254ACCB40);
    sub_21196FD88((uint64_t)v362);
    sub_21196FD88((uint64_t)v362);
    sub_211934758(v342, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v343, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    memcpy(v363, v365, sizeof(v363));
    sub_21196FED0((uint64_t)v363);
    goto LABEL_118;
  }
  sub_21192DD68((uint64_t)v368, (uint64_t)v360, &qword_254ACCB40);
  memcpy(v363, v360, sizeof(v363));
  v254 = _s7FMFCore10FMFAddressV2eeoiySbAC_ACtFZ_0((uint64_t)v365, (uint64_t)v363);
  sub_21192DD68((uint64_t)v367, (uint64_t)v361, &qword_254ACCB40);
  sub_21196F7C4((uint64_t)v367, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  sub_21196FD88((uint64_t)v361);
  sub_211934758(v342, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v343, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  memcpy(v362, v365, sizeof(v362));
  sub_21196FED0((uint64_t)v362);
  sub_21192DD68((uint64_t)v366, (uint64_t)v363, &qword_254ACCB40);
  sub_21196F7C4((uint64_t)v363, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
  v196 = v357;
  v161 = v358;
  sub_211974170((uint64_t)v358, v357);
  v162 = v359;
  v210 = v341;
  sub_211974170((uint64_t)v359, v341);
  v211 = v338;
  v204 = (uint64_t)v346;
  v202 = v347;
  v209 = (uint64_t)v340;
  if ((v254 & 1) == 0)
    goto LABEL_41;
LABEL_120:
  if (*(_BYTE *)(v196 + 40))
    v255 = 0x744F796669746F4ELL;
  else
    v255 = 0x654D796669746F4ELL;
  if (*(_BYTE *)(v196 + 40))
    v256 = 0xEC00000073726568;
  else
    v256 = 0xE800000000000000;
  if (*(_BYTE *)(v210 + 40))
    v257 = 0x744F796669746F4ELL;
  else
    v257 = 0x654D796669746F4ELL;
  if (*(_BYTE *)(v210 + 40))
    v258 = 0xEC00000073726568;
  else
    v258 = 0xE800000000000000;
  if (v255 == v257 && v256 == v258)
  {
    swift_bridgeObjectRelease_n();
    sub_211934758(v341, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v357, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v161 = v358;
    v212 = v328;
    sub_211974170((uint64_t)v358, v328);
    v162 = v359;
    v213 = v327;
    sub_211974170((uint64_t)v359, v327);
    v211 = v338;
    v204 = (uint64_t)v346;
    v202 = v347;
    v209 = (uint64_t)v340;
  }
  else
  {
    LODWORD(v356) = sub_211A48258();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_211934758(v341, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v357, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v161 = v358;
    v212 = v328;
    sub_211974170((uint64_t)v358, v328);
    v162 = v359;
    v213 = v327;
    sub_211974170((uint64_t)v359, v327);
    v211 = v338;
    v204 = (uint64_t)v346;
    v202 = v347;
    v209 = (uint64_t)v340;
    if ((v356 & 1) == 0)
      goto LABEL_42;
  }
  sub_211974858(*(_BYTE *)(v212 + 41));
  LODWORD(v357) = v259;
  sub_211934758(v213, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v212, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211974170((uint64_t)v161, v204);
  v214 = v329;
  sub_211974170((uint64_t)v162, v329);
  v215 = v339;
  if ((v357 & 1) == 0)
    goto LABEL_43;
  v260 = v204;
  v261 = v214;
  v262 = v308;
  v263 = *(unsigned __int8 *)(v260 + v308[25]);
  sub_211934758(v260, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  LODWORD(v262) = *(unsigned __int8 *)(v261 + v262[25]);
  sub_211934758(v261, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v216 = v330;
  sub_211974170((uint64_t)v161, v330);
  sub_211974170((uint64_t)v162, v209);
  v177 = v263 == (_DWORD)v262;
  v215 = v339;
  v217 = v337;
  if (!v177)
    goto LABEL_44;
  v264 = v308;
  v265 = *(unsigned __int8 *)(v216 + v308[24]);
  sub_211934758(v216, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  LODWORD(v264) = *(unsigned __int8 *)(v209 + v264[24]);
  sub_211934758(v209, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211974170((uint64_t)v161, v339);
  v218 = v336;
  sub_211974170((uint64_t)v162, v336);
  v177 = v265 == (_DWORD)v264;
  v215 = v339;
  v217 = v337;
  if (!v177)
    goto LABEL_45;
  v266 = v308[13];
  v267 = (_QWORD *)(v339 + v266);
  v268 = *(_QWORD *)(v339 + v266 + 8);
  v269 = (_QWORD *)(v218 + v266);
  v270 = v269[1];
  if (!v268)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v336, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v339, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v270)
      goto LABEL_147;
LABEL_149:
    swift_bridgeObjectRelease();
    v161 = v358;
    v162 = v359;
    v219 = v334;
    v217 = v337;
    v211 = v338;
    v202 = v347;
    goto LABEL_46;
  }
  if (!v270)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v336, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v339, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_149;
  }
  if (*v267 == *v269 && v268 == v270)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v336, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v339, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_147:
    v202 = v347;
    sub_211974170((uint64_t)v358, v347);
    v220 = v335;
    sub_211974170((uint64_t)v359, v335);
    goto LABEL_151;
  }
  v271 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_211934758(v336, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v339, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  v161 = v358;
  v202 = v347;
  sub_211974170((uint64_t)v358, v347);
  v162 = v359;
  v220 = v335;
  sub_211974170((uint64_t)v359, v335);
  v219 = v334;
  v217 = v337;
  v211 = v338;
  if ((v271 & 1) == 0)
    goto LABEL_47;
LABEL_151:
  v272 = v308[14];
  v273 = (_QWORD *)(v202 + v272);
  v274 = *(_QWORD *)(v202 + v272 + 8);
  v275 = (_QWORD *)(v220 + v272);
  v276 = v275[1];
  if (!v274)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v335, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v347, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (!v276)
      goto LABEL_157;
LABEL_159:
    swift_bridgeObjectRelease();
    v161 = v358;
    v162 = v359;
    v219 = v334;
    v217 = v337;
    v211 = v338;
    goto LABEL_48;
  }
  if (!v276)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v335, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v347, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    goto LABEL_159;
  }
  if (*v273 == *v275 && v274 == v276)
  {
    swift_bridgeObjectRetain();
    sub_211934758(v335, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v347, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    swift_bridgeObjectRelease();
LABEL_157:
    v217 = v337;
    sub_211974170((uint64_t)v358, v337);
    v211 = v338;
    sub_211974170((uint64_t)v359, v338);
    goto LABEL_161;
  }
  v277 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_211934758(v335, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v347, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  swift_bridgeObjectRelease();
  v161 = v358;
  v217 = v337;
  sub_211974170((uint64_t)v358, v337);
  v162 = v359;
  v211 = v338;
  sub_211974170((uint64_t)v359, v338);
  v219 = v334;
  if ((v277 & 1) == 0)
    goto LABEL_49;
LABEL_161:
  v278 = v308[15];
  v279 = *(unsigned __int8 *)(v217 + v278);
  v280 = *(unsigned __int8 *)(v211 + v278);
  if (v279 == 3)
  {
    sub_211934758(v338, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v337, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v161 = v358;
    v162 = v359;
    v219 = v334;
    if (v280 != 3)
      goto LABEL_50;
    goto LABEL_178;
  }
  v161 = v358;
  v162 = v359;
  v219 = v334;
  v217 = v337;
  v211 = v338;
  if (v280 == 3)
    goto LABEL_49;
  v281 = 0x6E6564646948;
  if (v279)
  {
    if (v279 == 1)
    {
      v282 = 0xE700000000000000;
      v283 = 0x676E69646E6550;
    }
    else
    {
      v282 = 0xE800000000000000;
      v283 = 0x6465747065636341;
    }
  }
  else
  {
    v282 = 0xE600000000000000;
    v283 = 0x6E6564646948;
  }
  if (v280)
  {
    if (v280 == 1)
    {
      v284 = 0xE700000000000000;
      v281 = 0x676E69646E6550;
    }
    else
    {
      v284 = 0xE800000000000000;
      v281 = 0x6465747065636341;
    }
  }
  else
  {
    v284 = 0xE600000000000000;
  }
  if (v283 == v281 && v282 == v284)
  {
    swift_bridgeObjectRelease_n();
    sub_211934758(v338, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v337, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v161 = v358;
    v162 = v359;
    v219 = v334;
LABEL_178:
    v221 = v331;
    sub_211974170((uint64_t)v161, v331);
    sub_211974170((uint64_t)v162, v219);
    goto LABEL_179;
  }
  v291 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211934758(v338, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v337, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v161 = v358;
  v221 = v331;
  sub_211974170((uint64_t)v358, v331);
  v162 = v359;
  v219 = v334;
  sub_211974170((uint64_t)v359, v334);
  if ((v291 & 1) == 0)
    goto LABEL_51;
LABEL_179:
  v285 = v308[27];
  v286 = v221 + v285;
  v287 = v219 + v285;
  v288 = v318;
  v289 = v318 + *(int *)(v316 + 48);
  sub_21192C6B8(v286, v318, qword_254AC8A78);
  sub_21192C6B8(v287, v289, qword_254AC8A78);
  v290 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v317 + 48);
  if (v290(v288, 1, v319) == 1)
  {
    sub_211934758(v334, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v331, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (v290(v289, 1, v319) == 1)
    {
      sub_211923EE8(v318, qword_254AC8A78);
      v222 = v333;
      sub_211974170((uint64_t)v358, v333);
      v223 = v332;
      sub_211974170((uint64_t)v359, v332);
      goto LABEL_188;
    }
LABEL_184:
    sub_211923EE8(v318, &qword_254AC8B40);
    v161 = v358;
    v162 = v359;
    goto LABEL_52;
  }
  sub_21192C6B8(v318, v310, qword_254AC8A78);
  if (v290(v289, 1, v319) == 1)
  {
    sub_211934758(v334, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v331, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    (*(void (**)(uint64_t, uint64_t))(v317 + 8))(v310, v319);
    goto LABEL_184;
  }
  v292 = v317;
  v293 = v309;
  v294 = v319;
  (*(void (**)(char *, uint64_t, uint64_t))(v317 + 32))(v309, v289, v319);
  sub_211910908((unint64_t *)&qword_254AC8B48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v295 = v310;
  v296 = sub_211A478E0();
  v297 = *(void (**)(char *, uint64_t))(v292 + 8);
  v297(v293, v294);
  sub_211934758(v334, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  sub_211934758(v331, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
  v297((char *)v295, v294);
  sub_211923EE8(v318, qword_254AC8A78);
  v222 = v333;
  sub_211974170((uint64_t)v358, v333);
  v223 = v332;
  sub_211974170((uint64_t)v359, v332);
  if ((v296 & 1) == 0)
    goto LABEL_53;
LABEL_188:
  v298 = (uint64_t)v307;
  v299 = v308[12];
  v300 = v222 + v299;
  v301 = v223 + v299;
  v302 = (uint64_t)&v307[*(int *)(v311 + 48)];
  sub_21192C6B8(v300, (uint64_t)v307, (uint64_t *)&unk_254ACC2E0);
  sub_21192C6B8(v301, v302, (uint64_t *)&unk_254ACC2E0);
  v303 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v312 + 48);
  v304 = v298;
  if (v303(v298, 1, v314) == 1)
  {
    sub_211934758(v332, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v333, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (v303(v302, 1, v314) == 1)
    {
      sub_211923EE8(v298, (uint64_t *)&unk_254ACC2E0);
      v224 = 1;
      return v224 & 1;
    }
  }
  else
  {
    sub_21192C6B8(v298, (uint64_t)v315, (uint64_t *)&unk_254ACC2E0);
    if (v303(v302, 1, v314) != 1)
    {
      v305 = v313;
      sub_21198AFD0(v302, (uint64_t)v313);
      v306 = v315;
      v224 = static FMFSchedule.== infix(_:_:)(v315, v305);
      sub_211934758((uint64_t)v305, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
      sub_211934758(v332, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      sub_211934758(v333, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      sub_211934758((uint64_t)v306, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
      sub_211923EE8(v304, (uint64_t *)&unk_254ACC2E0);
      return v224 & 1;
    }
    sub_211934758(v332, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758(v333, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    sub_211934758((uint64_t)v315, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
  }
  sub_211923EE8(v298, &qword_254AC9B20);
LABEL_54:
  v224 = 0;
  return v224 & 1;
}

unint64_t sub_21198D570()
{
  unint64_t result;

  result = qword_254AC99F8;
  if (!qword_254AC99F8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationAlertAddressType, &type metadata for FMFLocationAlertAddressType);
    atomic_store(result, (unint64_t *)&qword_254AC99F8);
  }
  return result;
}

unint64_t sub_21198D5B8()
{
  unint64_t result;

  result = qword_254AC9A00;
  if (!qword_254AC9A00)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationAlertTriggerType, &type metadata for FMFLocationAlertTriggerType);
    atomic_store(result, (unint64_t *)&qword_254AC9A00);
  }
  return result;
}

unint64_t sub_21198D600()
{
  unint64_t result;

  result = qword_254AC9A08;
  if (!qword_254AC9A08)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationAlertTarget, &type metadata for FMFLocationAlertTarget);
    atomic_store(result, (unint64_t *)&qword_254AC9A08);
  }
  return result;
}

unint64_t sub_21198D648()
{
  unint64_t result;

  result = qword_254AC9A10;
  if (!qword_254AC9A10)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationAlertAcceptanceStatus, &type metadata for FMFLocationAlertAcceptanceStatus);
    atomic_store(result, (unint64_t *)&qword_254AC9A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlertAddressType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_21198D6D8 + 4 * byte_211A4B9B7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_21198D70C + 4 * byte_211A4B9B2[v4]))();
}

uint64_t sub_21198D70C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21198D71CLL);
  return result;
}

uint64_t sub_21198D728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21198D730);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_21198D734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D73C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertAddressType()
{
  return &type metadata for FMFLocationAlertAddressType;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlertTriggerType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21198D7A4 + 4 * byte_211A4B9C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21198D7D8 + 4 * byte_211A4B9BC[v4]))();
}

uint64_t sub_21198D7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21198D7E8);
  return result;
}

uint64_t sub_21198D7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21198D7FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21198D800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertTriggerType()
{
  return &type metadata for FMFLocationAlertTriggerType;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlertTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21198D870 + 4 * byte_211A4B9CB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21198D8A4 + 4 * byte_211A4B9C6[v4]))();
}

uint64_t sub_21198D8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21198D8B4);
  return result;
}

uint64_t sub_21198D8C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21198D8C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21198D8CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D8D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertTarget()
{
  return &type metadata for FMFLocationAlertTarget;
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlertAcceptanceStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21198D93C + 4 * byte_211A4B9D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21198D970 + 4 * byte_211A4B9D0[v4]))();
}

uint64_t sub_21198D970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21198D980);
  return result;
}

uint64_t sub_21198D98C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21198D994);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21198D998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198D9A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlertAcceptanceStatus()
{
  return &type metadata for FMFLocationAlertAcceptanceStatus;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMFLocationAlert(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_OWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
    *(_WORD *)(a1 + 42) = *((_WORD *)a2 + 21);
    v9 = a3[12];
    v10 = (_OWORD *)(a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    *(_OWORD *)(a1 + 16) = v8;
    v12 = type metadata accessor for FMFSchedule();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v10[2] = v11[2];
      v18 = *(int *)(v12 + 40);
      v19 = (char *)v10 + v18;
      v20 = (char *)v11 + v18;
      v21 = sub_211A47304();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = sub_211958C38(&qword_254AC7C38);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v24 = a3[13];
    v25 = a3[14];
    v26 = (_QWORD *)((char *)v4 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)((char *)v4 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    v80 = v30[1];
    *v29 = *v30;
    v29[1] = v80;
    v31 = a3[16];
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *(_QWORD *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    v32 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(_QWORD *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
    v33 = a3[19];
    v34 = a3[20];
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)v4 + v34;
    v39 = (uint64_t)a2 + v34;
    v40 = *(_QWORD *)(v39 + 8);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v38[16] = *(_BYTE *)(v39 + 16);
    v38[17] = *(_BYTE *)(v39 + 17);
    v41 = a3[22];
    *((_BYTE *)v4 + a3[21]) = *((_BYTE *)a2 + a3[21]);
    v42 = (_QWORD *)((char *)v4 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = a3[23];
    v46 = (_QWORD *)((char *)v4 + v45);
    v47 = (uint64_t *)((char *)a2 + v45);
    v48 = *(uint64_t *)((char *)a2 + v45 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48)
    {
      v49 = v47[1];
      *v46 = *v47;
      v46[1] = v49;
      v50 = v47[3];
      v46[2] = v47[2];
      v46[3] = v50;
      v51 = v47[5];
      v46[4] = v47[4];
      v46[5] = v51;
      v52 = v47[7];
      v46[6] = v47[6];
      v46[7] = v52;
      v53 = v47[9];
      v46[8] = v47[8];
      v46[9] = v53;
      v54 = v47[11];
      v46[10] = v47[10];
      v46[11] = v54;
      v55 = v47[13];
      v46[12] = v47[12];
      v46[13] = v55;
      v56 = v47[15];
      v46[14] = v47[14];
      v46[15] = v56;
      v57 = v47[17];
      v46[16] = v47[16];
      v46[17] = v57;
      v58 = v47[19];
      v46[18] = v47[18];
      v46[19] = v58;
      v46[20] = v47[20];
      v46[21] = v48;
      v81 = v47[23];
      v46[22] = v47[22];
      v46[23] = v81;
      v59 = v47[25];
      v46[24] = v47[24];
      v46[25] = v59;
      v60 = v47[27];
      v46[26] = v47[26];
      v46[27] = v60;
      v61 = v47[29];
      v46[28] = v47[28];
      v46[29] = v61;
      v62 = v47[31];
      v46[30] = v47[30];
      v46[31] = v62;
      v63 = v47[33];
      v46[32] = v47[32];
      v46[33] = v63;
      v64 = v47[35];
      v46[34] = v47[34];
      v46[35] = v64;
      v65 = v47[36];
      v66 = v47[37];
      v46[36] = v65;
      v46[37] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v46, v47, 0x130uLL);
    }
    v67 = a3[25];
    *((_BYTE *)v4 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    *((_BYTE *)v4 + v67) = *((_BYTE *)a2 + v67);
    v68 = a3[26];
    v69 = (char *)v4 + v68;
    v70 = (char *)a2 + v68;
    v71 = sub_211A47208();
    v72 = *(_QWORD *)(v71 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    if (v73(v70, 1, v71))
    {
      v74 = sub_211958C38(qword_254AC8A78);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v75 = a3[27];
    v76 = (char *)v4 + v75;
    v77 = (char *)a2 + v75;
    if (v73(v77, 1, v71))
    {
      v78 = sub_211958C38(qword_254AC8A78);
      memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v76, v77, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v76, 0, 1, v71);
    }
  }
  return v4;
}

uint64_t destroy for FMFLocationAlert(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[12];
  v5 = type metadata accessor for FMFSchedule();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 40);
    v7 = sub_211A47304();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[23] + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[26];
  v10 = sub_211A47208();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = a1 + a2[27];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v13, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  return result;
}

uint64_t initializeWithCopy for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_OWORD *, uint64_t, uint64_t);
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v80;
  int *v81;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_WORD *)(a1 + 42) = *(_WORD *)(a2 + 42);
  v8 = a3[12];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + 16) = v7;
  v11 = type metadata accessor for FMFSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v9[2] = v10[2];
    v16 = *(int *)(v11 + 40);
    v17 = (char *)v9 + v16;
    v18 = (char *)v10 + v16;
    v19 = sub_211A47304();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_211958C38(&qword_254AC7C38);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v22 = a3[13];
  v23 = a3[14];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v80 = v28[1];
  *v27 = *v28;
  v27[1] = v80;
  v29 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  v31 = a3[19];
  v32 = a3[20];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = a3;
  v36 = v34[1];
  *v33 = *v34;
  v33[1] = v36;
  v37 = a1 + v32;
  v38 = a2 + v32;
  v39 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = v39;
  *(_BYTE *)(v37 + 16) = *(_BYTE *)(v38 + 16);
  *(_BYTE *)(v37 + 17) = *(_BYTE *)(v38 + 17);
  v40 = v35[22];
  *(_BYTE *)(a1 + v35[21]) = *(_BYTE *)(a2 + v35[21]);
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v81 = v35;
  v44 = v35[23];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = *(_QWORD *)(a2 + v44 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47)
  {
    v48 = v46[1];
    *v45 = *v46;
    v45[1] = v48;
    v49 = v46[3];
    v45[2] = v46[2];
    v45[3] = v49;
    v50 = v46[5];
    v45[4] = v46[4];
    v45[5] = v50;
    v51 = v46[7];
    v45[6] = v46[6];
    v45[7] = v51;
    v52 = v46[9];
    v45[8] = v46[8];
    v45[9] = v52;
    v53 = v46[11];
    v45[10] = v46[10];
    v45[11] = v53;
    v54 = v46[13];
    v45[12] = v46[12];
    v45[13] = v54;
    v55 = v46[15];
    v45[14] = v46[14];
    v45[15] = v55;
    v56 = v46[17];
    v45[16] = v46[16];
    v45[17] = v56;
    v57 = v46[19];
    v45[18] = v46[18];
    v45[19] = v57;
    v45[20] = v46[20];
    v45[21] = v47;
    v58 = v46[23];
    v45[22] = v46[22];
    v45[23] = v58;
    v59 = v46[25];
    v45[24] = v46[24];
    v45[25] = v59;
    v60 = v46[27];
    v45[26] = v46[26];
    v45[27] = v60;
    v61 = v46[29];
    v45[28] = v46[28];
    v45[29] = v61;
    v62 = v46[31];
    v45[30] = v46[30];
    v45[31] = v62;
    v63 = v46[33];
    v45[32] = v46[32];
    v45[33] = v63;
    v64 = v46[35];
    v45[34] = v46[34];
    v45[35] = v64;
    v65 = v46[36];
    v66 = v46[37];
    v45[36] = v65;
    v45[37] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v45, v46, 0x130uLL);
  }
  v67 = v81[25];
  *(_BYTE *)(a1 + v81[24]) = *(_BYTE *)(a2 + v81[24]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = v81[26];
  v69 = (void *)(a1 + v68);
  v70 = (const void *)(a2 + v68);
  v71 = sub_211A47208();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v72 + 48);
  if (v73(v70, 1, v71))
  {
    v74 = sub_211958C38(qword_254AC8A78);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  v75 = v81[27];
  v76 = (void *)(a1 + v75);
  v77 = (const void *)(a2 + v75);
  if (v73(v77, 1, v71))
  {
    v78 = sub_211958C38(qword_254AC8A78);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(v76, v77, v71);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v76, 0, 1, v71);
  }
  return a1;
}

uint64_t assignWithCopy for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  int v63;
  int v64;
  uint64_t v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  v6 = a3[12];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for FMFSchedule();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
      v23 = *(int *)(v9 + 40);
      v24 = &v7[v23];
      v25 = &v8[v23];
      v26 = sub_211A47304();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v29 = v28(v24, 1, v26);
      v30 = v28(v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v21 = v24;
      v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_211934758((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2E0) - 8) + 64);
    v21 = v7;
    v22 = v8;
    goto LABEL_8;
  }
  if (v13)
    goto LABEL_7;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  v14 = *(int *)(v9 + 40);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_211A47304();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_211958C38(&qword_254AC7C38);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  v31 = a3[13];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[14];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[19];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[20];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 16) = *(_BYTE *)(v42 + 16);
  *(_BYTE *)(v41 + 17) = *(_BYTE *)(v42 + 17);
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v43 = a3[22];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[23];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = *(_QWORD *)(a1 + v46 + 168);
  v50 = *(_QWORD *)(a2 + v46 + 168);
  if (v49)
  {
    if (v50)
    {
      *v47 = *v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[1] = v48[1];
      v47[2] = v48[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[3] = v48[3];
      v47[4] = v48[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[5] = v48[5];
      v47[6] = v48[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[7] = v48[7];
      v47[8] = v48[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[9] = v48[9];
      v47[10] = v48[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[11] = v48[11];
      v47[12] = v48[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[13] = v48[13];
      v47[14] = v48[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[15] = v48[15];
      v47[16] = v48[16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[17] = v48[17];
      v47[18] = v48[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[19] = v48[19];
      v47[20] = v48[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[21] = v48[21];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[22] = v48[22];
      v47[23] = v48[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[24] = v48[24];
      v47[25] = v48[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[26] = v48[26];
      v47[27] = v48[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[28] = v48[28];
      v47[29] = v48[29];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[30] = v48[30];
      v47[31] = v48[31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[32] = v48[32];
      v47[33] = v48[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[34] = v48[34];
      v47[35] = v48[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47[36] = v48[36];
      v47[37] = v48[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_21196ECA4((uint64_t)v47);
  }
  else if (v50)
  {
    *v47 = *v48;
    v47[1] = v48[1];
    v47[2] = v48[2];
    v47[3] = v48[3];
    v47[4] = v48[4];
    v47[5] = v48[5];
    v47[6] = v48[6];
    v47[7] = v48[7];
    v47[8] = v48[8];
    v47[9] = v48[9];
    v47[10] = v48[10];
    v47[11] = v48[11];
    v47[12] = v48[12];
    v47[13] = v48[13];
    v47[14] = v48[14];
    v47[15] = v48[15];
    v47[16] = v48[16];
    v47[17] = v48[17];
    v47[18] = v48[18];
    v47[19] = v48[19];
    v47[20] = v48[20];
    v47[21] = v48[21];
    v47[22] = v48[22];
    v47[23] = v48[23];
    v47[24] = v48[24];
    v47[25] = v48[25];
    v47[26] = v48[26];
    v47[27] = v48[27];
    v47[28] = v48[28];
    v47[29] = v48[29];
    v47[30] = v48[30];
    v47[31] = v48[31];
    v47[32] = v48[32];
    v47[33] = v48[33];
    v47[34] = v48[34];
    v47[35] = v48[35];
    v47[36] = v48[36];
    v47[37] = v48[37];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  memcpy(v47, v48, 0x130uLL);
LABEL_21:
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  v51 = a3[26];
  v52 = (void *)(a1 + v51);
  v53 = (void *)(a2 + v51);
  v54 = sub_211A47208();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
  v57 = v56(v52, 1, v54);
  v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
LABEL_26:
    v59 = sub_211958C38(qword_254AC8A78);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_27:
  v60 = a3[27];
  v61 = (void *)(a1 + v60);
  v62 = (void *)(a2 + v60);
  v63 = v56((void *)(a1 + v60), 1, v54);
  v64 = v56(v62, 1, v54);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v61, v62, v54);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v55 + 8))(v61, v54);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    v65 = sub_211958C38(qword_254AC8A78);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v61, v62, v54);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v61, 0, 1, v54);
  return a1;
}

uint64_t initializeWithTake for FMFLocationAlert(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_WORD *)(a1 + 42) = *((_WORD *)a2 + 21);
  v8 = a3[12];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (__int128 *)((char *)a2 + v8);
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  v11 = type metadata accessor for FMFSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    v9[2] = v10[2];
    v15 = *(int *)(v11 + 40);
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_211A47304();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_211958C38(&qword_254AC7C38);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v21 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(__int128 *)((char *)a2 + a3[13]);
  *(_OWORD *)(a1 + v21) = *(__int128 *)((char *)a2 + v21);
  v22 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v24 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(__int128 *)((char *)a2 + a3[19]);
  v25 = a1 + v24;
  v26 = (uint64_t)a2 + v24;
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_WORD *)(v25 + 16) = *(_WORD *)(v26 + 16);
  v27 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  *(_OWORD *)(a1 + v27) = *(__int128 *)((char *)a2 + v27);
  memcpy((void *)(a1 + a3[23]), (char *)a2 + a3[23], 0x130uLL);
  v28 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
  *(_BYTE *)(a1 + v28) = *((_BYTE *)a2 + v28);
  v29 = a3[26];
  v30 = (void *)(a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = sub_211A47208();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v34(v31, 1, v32))
  {
    v35 = sub_211958C38(qword_254AC8A78);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v36 = a3[27];
  v37 = (void *)(a1 + v36);
  v38 = (char *)a2 + v36;
  if (v34(v38, 1, v32))
  {
    v39 = sub_211958C38(qword_254AC8A78);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 32))(v37, v38, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
  }
  return a1;
}

uint64_t assignWithTake for FMFLocationAlert(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(void *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  int v94;
  int v95;
  uint64_t v96;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  v8 = a3[12];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  *(_QWORD *)(a1 + 32) = v7;
  v11 = type metadata accessor for FMFSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v26 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v26;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      v27 = *(int *)(v11 + 40);
      v28 = &v9[v27];
      v29 = &v10[v27];
      v30 = sub_211A47304();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
      v33 = v32(v28, 1, v30);
      v34 = v32(v29, 1, v30);
      if (v33)
      {
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v34)
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v24 = v28;
      v25 = v29;
LABEL_8:
      memcpy(v24, v25, v23);
      goto LABEL_14;
    }
    sub_211934758((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2E0) - 8) + 64);
    v24 = v9;
    v25 = v10;
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  v17 = *(int *)(v11 + 40);
  v18 = &v9[v17];
  v19 = &v10[v17];
  v20 = sub_211A47304();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_211958C38(&qword_254AC7C38);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v35 = a3[13];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[14];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v45) = *(_QWORD *)(a2 + v45);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRelease();
  v46 = a3[19];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v51 = a3[20];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = *(_QWORD *)(a2 + v51 + 8);
  *(_QWORD *)v52 = *(_QWORD *)(a2 + v51);
  *(_QWORD *)(v52 + 8) = v54;
  swift_bridgeObjectRelease();
  *(_WORD *)(v52 + 16) = *(_WORD *)(v53 + 16);
  v55 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = a3[23];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  if (*(_QWORD *)(a1 + v60 + 168))
  {
    if (v62[21])
    {
      *v61 = *v62;
      swift_bridgeObjectRelease();
      v63 = v62[2];
      v61[1] = v62[1];
      v61[2] = v63;
      swift_bridgeObjectRelease();
      v64 = v62[4];
      v61[3] = v62[3];
      v61[4] = v64;
      swift_bridgeObjectRelease();
      v65 = v62[6];
      v61[5] = v62[5];
      v61[6] = v65;
      swift_bridgeObjectRelease();
      v66 = v62[8];
      v61[7] = v62[7];
      v61[8] = v66;
      swift_bridgeObjectRelease();
      v67 = v62[10];
      v61[9] = v62[9];
      v61[10] = v67;
      swift_bridgeObjectRelease();
      v68 = v62[12];
      v61[11] = v62[11];
      v61[12] = v68;
      swift_bridgeObjectRelease();
      v69 = v62[14];
      v61[13] = v62[13];
      v61[14] = v69;
      swift_bridgeObjectRelease();
      v70 = v62[16];
      v61[15] = v62[15];
      v61[16] = v70;
      swift_bridgeObjectRelease();
      v71 = v62[18];
      v61[17] = v62[17];
      v61[18] = v71;
      swift_bridgeObjectRelease();
      v72 = v62[20];
      v61[19] = v62[19];
      v61[20] = v72;
      swift_bridgeObjectRelease();
      v61[21] = v62[21];
      swift_bridgeObjectRelease();
      v73 = v62[23];
      v61[22] = v62[22];
      v61[23] = v73;
      swift_bridgeObjectRelease();
      v74 = v62[25];
      v61[24] = v62[24];
      v61[25] = v74;
      swift_bridgeObjectRelease();
      v75 = v62[27];
      v61[26] = v62[26];
      v61[27] = v75;
      swift_bridgeObjectRelease();
      v76 = v62[29];
      v61[28] = v62[28];
      v61[29] = v76;
      swift_bridgeObjectRelease();
      v77 = v62[31];
      v61[30] = v62[30];
      v61[31] = v77;
      swift_bridgeObjectRelease();
      v78 = v62[33];
      v61[32] = v62[32];
      v61[33] = v78;
      swift_bridgeObjectRelease();
      v79 = v62[35];
      v61[34] = v62[34];
      v61[35] = v79;
      swift_bridgeObjectRelease();
      v80 = v62[37];
      v61[36] = v62[36];
      v61[37] = v80;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_21196ECA4((uint64_t)v61);
  }
  memcpy(v61, v62, 0x130uLL);
LABEL_19:
  v81 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v81) = *(_BYTE *)(a2 + v81);
  v82 = a3[26];
  v83 = (void *)(a1 + v82);
  v84 = (void *)(a2 + v82);
  v85 = sub_211A47208();
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 32))(v83, v84, v85);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v89)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v83, v85);
LABEL_24:
    v90 = sub_211958C38(qword_254AC8A78);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v86 + 40))(v83, v84, v85);
LABEL_25:
  v91 = a3[27];
  v92 = (void *)(a1 + v91);
  v93 = (void *)(a2 + v91);
  v94 = v87((void *)(a1 + v91), 1, v85);
  v95 = v87(v93, 1, v85);
  if (!v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, void *, uint64_t))(v86 + 40))(v92, v93, v85);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v86 + 8))(v92, v85);
    goto LABEL_30;
  }
  if (v95)
  {
LABEL_30:
    v96 = sub_211958C38(qword_254AC8A78);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v86 + 32))(v92, v93, v85);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v92, 0, 1, v85);
  return a1;
}

uint64_t sub_21198FA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 48);
    }
    else
    {
      v11 = sub_211958C38(qword_254AC8A78);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 104);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_21198FAFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = sub_211958C38(qword_254AC8A78);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 104);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLocationAlert.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLocationAlert.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_21198FC7C + 4 * byte_211A4B9DF[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_21198FCB0 + 4 * byte_211A4B9DA[v4]))();
}

uint64_t sub_21198FCB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198FCB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21198FCC0);
  return result;
}

uint64_t sub_21198FCCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21198FCD4);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_21198FCD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21198FCE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationAlert.CodingKeys()
{
  return &type metadata for FMFLocationAlert.CodingKeys;
}

unint64_t sub_21198FD00()
{
  unint64_t result;

  result = qword_254AC9B08;
  if (!qword_254AC9B08)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C00C, &type metadata for FMFLocationAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9B08);
  }
  return result;
}

unint64_t sub_21198FD48()
{
  unint64_t result;

  result = qword_254AC9B10;
  if (!qword_254AC9B10)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4BF44, &type metadata for FMFLocationAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9B10);
  }
  return result;
}

unint64_t sub_21198FD90()
{
  unint64_t result;

  result = qword_254AC9B18;
  if (!qword_254AC9B18)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4BF6C, &type metadata for FMFLocationAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254AC9B18);
  }
  return result;
}

uint64_t sub_21198FDD4()
{
  unint64_t v0;

  v0 = sub_211A4827C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16)
    return 22;
  else
    return v0;
}

__n128 FMFUpdatePrefsAction.__allocating_init(prefs:)(uint64_t a1)
{
  __n128 *v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;
  unint64_t v7;

  v2 = (__n128 *)swift_allocObject();
  v3 = *(_BYTE *)(a1 + 1);
  v4 = *(_BYTE *)(a1 + 2);
  v5 = *(_BYTE *)(a1 + 3);
  result = *(__n128 *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 24);
  v2[1].n128_u8[8] = *(_BYTE *)a1;
  v2[1].n128_u8[9] = v3;
  v2[1].n128_u8[10] = v4;
  v2[1].n128_u8[11] = v5;
  v2[2] = result;
  v2[3].n128_u64[0] = v7;
  v2[1].n128_u8[0] = 0;
  return result;
}

uint64_t FMFUpdatePrefsAction.init(prefs:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  __int128 v5;
  uint64_t v6;

  v2 = *(_BYTE *)(a1 + 1);
  v3 = *(_BYTE *)(a1 + 2);
  v4 = *(_BYTE *)(a1 + 3);
  v5 = *(_OWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(v1 + 24) = *(_BYTE *)a1;
  *(_BYTE *)(v1 + 25) = v2;
  *(_BYTE *)(v1 + 26) = v3;
  *(_BYTE *)(v1 + 27) = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v6;
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_21198FEC0()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A48054();
  return 0;
}

void FMFUpdatePrefsAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFUpdatePrefsAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211990050()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FMFUpdatePrefsAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFUpdatePrefsAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdatePrefsAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFUpdatePrefsAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFUpdatePrefsAction.__allocating_init(prefs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_211990108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_211990110()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211990168()
{
  swift_bridgeObjectRetain();
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119901AC()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_211990200(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_211A48258();
}

uint64_t sub_211990230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[7] = a4;
  v5[8] = a5;
  v5[9] = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v5[10] = swift_task_alloc();
  v6 = sub_211A47400();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v7 = sub_211A48030();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119902DC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 136) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 48) = 0x403E000000000000;
    if (qword_254AC7B90 != -1)
      swift_once();
    v2 = swift_task_alloc();
    *(_BYTE *)(v2 + 16) = 4;
    *(_QWORD *)(v2 + 24) = v0 + 48;
    sub_211A47DA8();
    swift_task_dealloc();
    v3 = sub_211A48378();
    v5 = v4;
    sub_211A48024();
    v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))&aQ_0[*(int *)aQ_0];
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v6;
    *v6 = v0;
    v6[1] = sub_211990464;
    return v8(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211990464()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
  return swift_task_switch();
}

uint64_t sub_2119904D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 152);
  sub_211A47BC8();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = sub_211A47748();
    sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
    v4 = sub_211A47724();
    v5 = sub_211A47D30();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_21190D000, v4, v5, "FMFSecureLocationCtrl: Stop remaining locating spinners", v6, 2u);
      MEMORY[0x212BE48A0](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 64);

    v8 = *(_QWORD *)(v7 + 16);
    v9 = MEMORY[0x24BEE4AF8];
    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 72);
      v20 = *(_QWORD *)(v0 + 80);
      v21 = MEMORY[0x24BEE4AF8];
      v11 = *(_QWORD *)(v0 + 64);
      sub_211948C10(0, v8, 0);
      v12 = v11 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v13 = *(_QWORD *)(v10 + 72);
      v9 = v21;
      do
      {
        v14 = *(uint64_t **)(v0 + 80);
        sub_211934794(v12, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v15 = *v14;
        v16 = *(_QWORD *)(v20 + 8);
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_211948C10(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v21;
        }
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_211948C10(v17 > 1, v18 + 1, 1);
          v9 = v21;
        }
        *(_QWORD *)(v9 + 16) = v18 + 1;
        v19 = v9 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v15;
        *(_QWORD *)(v19 + 40) = v16;
        v12 += v13;
        --v8;
      }
      while (v8);
    }
    *(_QWORD *)(v0 + 160) = v9;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 104))(*(_QWORD *)(v0 + 104), *MEMORY[0x24BE31D08], *(_QWORD *)(v0 + 88));
    return swift_task_switch();
  }
}

uint64_t sub_211990754()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  v4 = os_log_type_enabled(v2, v3);
  v5 = (void *)v0[19];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFSecureLocationCtrl: Shallow loading task cancelled", v6, 2u);
    MEMORY[0x212BE48A0](v6, -1, -1);
  }

  sub_211A47BC8();
  if (qword_254AC7B80 != -1)
    swift_once();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21190D000, v7, v8, "FMFSecureLocationCtrl: Stop remaining locating spinners", v9, 2u);
    MEMORY[0x212BE48A0](v9, -1, -1);
  }
  v10 = v0[8];

  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v13 = v0[9];
    v25 = v0[10];
    v26 = MEMORY[0x24BEE4AF8];
    v14 = v0[8];
    sub_211948C10(0, v11, 0);
    v15 = v14 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v24 = *(_QWORD *)(v13 + 72);
    v12 = v26;
    v16 = v0;
    do
    {
      v17 = (uint64_t *)v0[10];
      sub_211934794(v15, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v18 = *v17;
      v19 = *(_QWORD *)(v25 + 8);
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211948C10(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v26;
      }
      v21 = *(_QWORD *)(v12 + 16);
      v20 = *(_QWORD *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_211948C10(v20 > 1, v21 + 1, 1);
        v12 = v26;
      }
      *(_QWORD *)(v12 + 16) = v21 + 1;
      v22 = v12 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v19;
      v15 += v24;
      --v11;
      v0 = v16;
    }
    while (v11);
  }
  v0[20] = v12;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[12] + 104))(v0[13], *MEMORY[0x24BE31D08], v0[11]);
  return swift_task_switch();
}

uint64_t sub_211990A94()
{
  _QWORD *v0;

  if (*(_QWORD *)(v0[20] + 16)
    && MEMORY[0x212BE496C](v0[17] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(0, v0[13], v0[20]);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[13], v0[11]);
  return swift_task_switch();
}

uint64_t sub_211990B24()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211990B78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  sub_211958C38(qword_254AC8A78);
  *(_QWORD *)(v1 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211990BD4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  *(_QWORD *)(v0 + 168) = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFSecureLocationCtrl: stop refreshing", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 152);

  swift_beginAccess();
  v6 = MEMORY[0x24BEE4B00];
  v5[15] = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[16] = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[19] = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5[20] = v6;
  swift_bridgeObjectRelease();
  if (v5[17])
  {
    swift_retain();
    sub_211958C38(&qword_254ACC360);
    sub_211A47BB0();
    swift_release();
  }
  v7 = *(_QWORD *)(v0 + 152);
  if (*(_QWORD *)(v7 + 144))
  {
    swift_retain();
    sub_211958C38(&qword_254ACC360);
    sub_211A47BB0();
    swift_release();
    v7 = *(_QWORD *)(v0 + 152);
  }
  v8 = *(_QWORD *)(v7 + 112);
  *(_QWORD *)(v0 + 176) = v8;
  if (v8)
  {
    swift_retain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v9;
    *v9 = v0;
    v9[1] = sub_211990EB4;
    return sub_211A47550();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 160);
    v12 = sub_211A47208();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = v7 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_2119A17AC(v11, v13, qword_254AC8A78);
    swift_endAccess();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211990EB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_211990F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 200) = v2;
  if (v2)
  {
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v3;
    *v3 = v0;
    v3[1] = sub_211991020;
    return sub_211A47520();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 160);
    v6 = sub_211A47208();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = v1 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_2119A17AC(v5, v7, qword_254AC8A78);
    swift_endAccess();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211991020()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_211991094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_2119A17AC(v1, v4, qword_254AC8A78);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211991138()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 192);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 192);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFSecureLocationCtrl: Stop refreshing location failed with error: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 192);

  }
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v12 + 112);
  *(_QWORD *)(v0 + 200) = v13;
  if (v13)
  {
    swift_retain();
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v14;
    *v14 = v0;
    v14[1] = sub_211991020;
    return sub_211A47520();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 160);
    v17 = sub_211A47208();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = v12 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
    swift_beginAccess();
    sub_2119A17AC(v16, v18, qword_254AC8A78);
    swift_endAccess();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211991390()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 216);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 136) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFSecureLocationCtrl: Stop updating friends failed with error: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 216);

  }
  v13 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 160);
  v14 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  v15 = v13 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_2119A17AC(v12, v15, qword_254AC8A78);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211991590()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119915EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[18] = a4;
  v5[19] = a5;
  v6 = sub_211A47400();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v7 = sub_211A47418();
  v5[23] = v7;
  v5[24] = *(_QWORD *)(v7 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v8 = sub_211A474D8();
  v5[27] = v8;
  v5[28] = *(_QWORD *)(v8 - 8);
  v5[29] = swift_task_alloc();
  v9 = sub_211A474A8();
  v5[30] = v9;
  v5[31] = *(_QWORD *)(v9 - 8);
  v5[32] = swift_task_alloc();
  v10 = sub_211A47454();
  v5[33] = v10;
  v5[34] = *(_QWORD *)(v10 - 8);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  sub_211958C38(&qword_254ACA1F0);
  v5[40] = swift_task_alloc();
  v11 = sub_211958C38(&qword_254ACA1F8);
  v5[41] = v11;
  v5[42] = *(_QWORD *)(v11 - 8);
  v5[43] = swift_task_alloc();
  sub_211958C38(&qword_254ACA1D0);
  v5[44] = swift_task_alloc();
  v12 = sub_211958C38(&qword_254ACA1D8);
  v5[45] = v12;
  v5[46] = *(_QWORD *)(v12 - 8);
  v5[47] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119917D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 352);
  sub_21192C6B8(*(_QWORD *)(v0 + 144), v3, &qword_254ACA1D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_211923EE8(*(_QWORD *)(v0 + 352), &qword_254ACA1D0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
    sub_211A47B98();
    *(_QWORD *)(v0 + 384) = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
    swift_beginAccess();
    *(_DWORD *)(v0 + 440) = *MEMORY[0x24BE31EA8];
    *(_DWORD *)(v0 + 444) = *MEMORY[0x24BE31D48];
    *(_DWORD *)(v0 + 448) = *MEMORY[0x24BE31D08];
    *(_QWORD *)(v0 + 392) = 0;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v5;
    *v5 = v0;
    v5[1] = sub_2119919FC;
    return sub_211A47BA4();
  }
}

uint64_t sub_2119919FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211991A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t inited;
  _QWORD *v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[2];

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 376);
    v6 = *(_QWORD *)(v0 + 360);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  v8 = *(_QWORD *)(v0 + 392);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 312), v1, v2);
  sub_211A47BC8();
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 368);
    v9 = *(_QWORD *)(v0 + 376);
    v11 = *(_QWORD *)(v0 + 360);
    v13 = *(_QWORD *)(v0 + 336);
    v12 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 328);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 264));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 272);
  v20 = sub_211A47748();
  sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  v21(v16, v17, v18);
  v22 = sub_211A47724();
  v23 = sub_211A47D18();
  v24 = os_log_type_enabled(v22, v23);
  v25 = *(_QWORD *)(v0 + 304);
  if (v24)
  {
    v26 = *(_QWORD *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 272);
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v98[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v21(v26, v25, v28);
    v31 = sub_211A47928();
    *(_QWORD *)(v29 + 4) = sub_211950A9C(v31, v32, v98);
    swift_bridgeObjectRelease();
    v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v33(v25, v28);
    _os_log_impl(&dword_21190D000, v22, v23, "FMFSecureLocationCtrl: friendship stream update - %s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v30, -1, -1);
    MEMORY[0x212BE48A0](v29, -1, -1);
  }
  else
  {
    v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 272) + 8);
    v33(v25, *(_QWORD *)(v0 + 264));
  }

  *(_QWORD *)(v0 + 408) = v33;
  v34 = *(_DWORD *)(v0 + 440);
  v35 = *(_QWORD *)(v0 + 288);
  v36 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 272);
  v21(v35, *(_QWORD *)(v0 + 312), v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v37 + 88))(v35, v36) != v34)
  {
    v38 = (_QWORD *)(v0 + 288);
    v33(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 264));
LABEL_22:
    (*(void (**)(_QWORD, _QWORD))(v0 + 408))(*v38, *(_QWORD *)(v0 + 264));
    *(_QWORD *)(v0 + 392) = 0;
    v72 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v72;
    *v72 = v0;
    v72[1] = sub_2119919FC;
    return sub_211A47BA4();
  }
  v95 = v21;
  v38 = (_QWORD *)(v0 + 312);
  v39 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 248);
  v40 = *(_QWORD *)(v0 + 256);
  v43 = *(_QWORD *)(v0 + 232);
  v42 = *(_QWORD *)(v0 + 240);
  v44 = *(_QWORD *)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 96))(v39, *(_QWORD *)(v0 + 264));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v39, v42);
  sub_211A4749C();
  v46 = sub_211A474CC();
  v48 = v47;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
  if (!v48)
  {
LABEL_21:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    goto LABEL_22;
  }
  v94 = v46;
  v49 = *(unsigned int *)(v0 + 444);
  v51 = *(_QWORD *)(v0 + 200);
  v50 = *(_QWORD *)(v0 + 208);
  v52 = *(_QWORD *)(v0 + 184);
  v53 = *(_QWORD *)(v0 + 192);
  sub_211A47490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 104))(v51, v49, v52);
  v54 = sub_211A4740C();
  v55 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v55(v51, v52);
  v55(v50, v52);
  if ((v54 & 1) == 0 || (v56 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 120), !*(_QWORD *)(v56 + 16)))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_21195BB68(v94, v48);
  if ((v58 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v59 = *(_QWORD *)(v0 + 312);
  v60 = *(_QWORD *)(v0 + 280);
  v61 = *(_QWORD *)(v0 + 264);
  v62 = *(_QWORD *)(v56 + 56) + 32 * v57;
  v91 = *(_QWORD *)v62;
  v63 = *(_QWORD *)(v62 + 16);
  v89 = *(_BYTE *)(v62 + 25);
  v90 = *(_BYTE *)(v62 + 24);
  v88 = *(_BYTE *)(v62 + 26);
  v93 = *(_QWORD *)(v62 + 8);
  swift_bridgeObjectRetain();
  v92 = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v95(v60, v59, v61);
  v64 = sub_211A47724();
  v65 = sub_211A47D30();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = *(_QWORD *)(v0 + 296);
    v67 = *(_QWORD *)(v0 + 280);
    v68 = *(_QWORD *)(v0 + 264);
    v69 = (uint8_t *)swift_slowAlloc();
    v96 = swift_slowAlloc();
    v98[0] = v96;
    *(_DWORD *)v69 = 136315138;
    v95(v66, v67, v68);
    v70 = sub_211A47928();
    *(_QWORD *)(v0 + 136) = sub_211950A9C(v70, v71, v98);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    v33(v67, v68);
    _os_log_impl(&dword_21190D000, v64, v65, "FMFSecureLocationCtrl: stream friend added but we already started locating them. Restart. - %s", v69, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v96, -1, -1);
    MEMORY[0x212BE48A0](v69, -1, -1);
  }
  else
  {
    v33(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v73 = sub_21195BB68(v94, v48);
  v75 = v74;
  swift_bridgeObjectRelease();
  if ((v75 & 1) != 0)
  {
    v76 = *(_QWORD *)(v0 + 152);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v78 = *(_QWORD *)(v76 + 120);
    *(_QWORD *)(v0 + 128) = v78;
    *(_QWORD *)(v76 + 120) = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_211A44EF0();
      v78 = *(_QWORD *)(v0 + 128);
    }
    v79 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    v80 = (uint64_t *)(*(_QWORD *)(v78 + 56) + 32 * v73);
    v81 = v80[1];
    v97 = *v80;
    sub_211A43354(v73, v78);
    *(_QWORD *)(v79 + 120) = v78;
    swift_bridgeObjectRelease();
  }
  else
  {
    v97 = 0;
    v81 = 0;
  }
  v82 = *(unsigned int *)(v0 + 448);
  v83 = *(_QWORD *)(v0 + 168);
  v84 = *(_QWORD *)(v0 + 176);
  v85 = *(_QWORD *)(v0 + 160);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_2119A177C(v97, v81);
  sub_211958C38(&qword_254ACA200);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 416) = inited;
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_QWORD *)(inited + 32) = v91;
  *(_QWORD *)(inited + 40) = v93;
  *(_QWORD *)(inited + 48) = v92;
  *(_BYTE *)(inited + 56) = v90;
  *(_BYTE *)(inited + 57) = v89;
  *(_BYTE *)(inited + 58) = v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 104))(v84, v82, v85);
  v87 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v87;
  *v87 = v0;
  v87[1] = sub_211992380;
  return sub_21199A93C(inited, *(_QWORD *)(v0 + 176));
}

uint64_t sub_211992380()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[21] + 8))(v2[22], v2[20]);
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return swift_task_switch();
}

uint64_t sub_211992430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 432);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  (*(void (**)(_QWORD, _QWORD))(v0 + 408))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 264));
  *(_QWORD *)(v0 + 392) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v2;
  *v2 = v0;
  v2[1] = sub_2119919FC;
  return sub_211A47BA4();
}

uint64_t sub_2119924C4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
  v3 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v1(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211992608()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119926A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_211A474D8();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  result = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v24[0] = a2;
    v24[1] = v2;
    v29 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211947C68(0, v11, 0);
    v13 = v29;
    result = sub_2119483E8(v10);
    v14 = result;
    v16 = v15;
    v18 = v17 & 1;
    v25 = v10;
    v26 = v10 + 56;
    while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v10 + 32))
    {
      if (((*(_QWORD *)(v26 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v10 + 36) != v16)
        goto LABEL_15;
      swift_bridgeObjectRetain_n();
      sub_211A264C0(v12);
      sub_211A474C0();
      swift_bridgeObjectRelease();
      v29 = v13;
      v19 = v9;
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_211947C68(v20 > 1, v21 + 1, 1);
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v13+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v21, v19, v28);
      v10 = v25;
      result = sub_211947D78(v14, v16, v18 & 1, v25);
      v14 = result;
      v16 = v22;
      v18 = v23 & 1;
      --v11;
      v9 = v19;
      v12 = MEMORY[0x24BEE4AF8];
      if (!v11)
      {
        sub_2119A0BB0(result, v22, v23 & 1);
        result = swift_bridgeObjectRelease();
        a2 = (_QWORD *)v24[0];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
LABEL_12:
    *a2 = v13;
  }
  return result;
}

uint64_t sub_2119928E0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for FMFLocation();
  v2[4] = swift_task_alloc();
  v3 = sub_211A474D8();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v4 = sub_211A47634();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v5 = sub_211A47478();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119929DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE31F40])
  {
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 48);
    v36 = *(_QWORD *)(v0 + 96);
    v37 = *(_QWORD *)(v0 + 32);
    v38 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 96))(v5, *(_QWORD *)(v0 + 112));
    v13 = v5 + *(int *)(sub_211958C38(&qword_254ACA1C8) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v9);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v14(v8, v13, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v36, v6, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v8, v11);
    sub_211982F20(v36, v10, v37);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v9);
    v15 = sub_211958C38(&qword_254ACA028);
    v16 = v38 + *(int *)(v15 + 48);
    sub_211942810(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v14(v16, v8, v11);
    v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v18 = v38;
LABEL_6:
    v17(v18, 0, 1, v15);
    goto LABEL_9;
  }
  v20 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 112);
  if (v4 == *MEMORY[0x24BE31F38])
  {
    v23 = *(_QWORD *)(v0 + 48);
    v22 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD))(v20 + 96))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
    v25(v22, v19, v24);
    v26 = sub_211A474CC();
    v28 = *(_QWORD *)(v0 + 56);
    if (v27)
    {
      v29 = *(_QWORD *)(v0 + 40);
      v30 = *(_QWORD *)(v0 + 16);
      v39 = 1;
      sub_21198472C(v26, v27, &v39, 0, v30);
      v15 = sub_211958C38(&qword_254ACA028);
      v25(v30 + *(int *)(v15 + 48), v28, v29);
      v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
      v18 = v30;
      goto LABEL_6;
    }
    v34 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    v35 = sub_211958C38(&qword_254ACA028);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 16);
    v32 = sub_211958C38(&qword_254ACA028);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211992CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[280] = a5;
  v5[279] = a4;
  sub_211958C38(qword_254AC8A78);
  v5[281] = swift_task_alloc();
  v5[282] = swift_task_alloc();
  v6 = type metadata accessor for FMFLocation();
  v5[283] = v6;
  v5[284] = *(_QWORD *)(v6 - 8);
  v5[285] = swift_task_alloc();
  v7 = sub_211958C38(&qword_254ACA028);
  v5[286] = v7;
  v5[287] = *(_QWORD *)(v7 - 8);
  v5[288] = swift_task_alloc();
  v5[289] = swift_task_alloc();
  v5[290] = swift_task_alloc();
  v5[291] = swift_task_alloc();
  v5[292] = swift_task_alloc();
  v5[293] = swift_task_alloc();
  v5[294] = swift_task_alloc();
  v5[295] = swift_task_alloc();
  v5[296] = swift_task_alloc();
  v5[297] = swift_task_alloc();
  v5[298] = swift_task_alloc();
  v5[299] = swift_task_alloc();
  v5[300] = swift_task_alloc();
  v5[301] = swift_task_alloc();
  v5[302] = swift_task_alloc();
  v5[303] = swift_task_alloc();
  v5[304] = swift_task_alloc();
  v5[305] = sub_211958C38(&qword_254ACA058);
  v5[306] = swift_task_alloc();
  v8 = sub_211958C38(&qword_254ACA060);
  v5[307] = v8;
  v5[308] = *(_QWORD *)(v8 - 8);
  v5[309] = swift_task_alloc();
  v5[310] = swift_task_alloc();
  v9 = sub_211A48030();
  v5[311] = v9;
  v5[312] = *(_QWORD *)(v9 - 8);
  v5[313] = swift_task_alloc();
  v5[314] = sub_211958C38(&qword_254ACA068);
  v5[315] = swift_task_alloc();
  v5[316] = sub_211958C38(&qword_254ACA070);
  v5[317] = swift_task_alloc();
  sub_211958C38(&qword_254ACA018);
  v5[318] = swift_task_alloc();
  v10 = sub_211958C38(&qword_254ACA038);
  v5[319] = v10;
  v5[320] = *(_QWORD *)(v10 - 8);
  v5[321] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211992FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 2560);
  v2 = *(_QWORD *)(v0 + 2552);
  v3 = *(_QWORD *)(v0 + 2544);
  sub_21192C6B8(*(_QWORD *)(v0 + 2232), v3, &qword_254ACA018);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_211923EE8(*(_QWORD *)(v0 + 2544), &qword_254ACA018);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 2568);
    v6 = *(_QWORD *)(v0 + 2560);
    v7 = *(_QWORD *)(v0 + 2552);
    v8 = *(_QWORD *)(v0 + 2536);
    v19 = *(_QWORD *)(v0 + 2528);
    v9 = *(_QWORD *)(v0 + 2520);
    v10 = *(_QWORD *)(v0 + 2512);
    v11 = *(_QWORD *)(v0 + 2504);
    v12 = *(_QWORD *)(v0 + 2496);
    v13 = *(_QWORD *)(v0 + 2488);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 2544), v7);
    sub_211A482B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v11, v13);
    *(_OWORD *)(v9 + *(int *)(v10 + 36)) = xmmword_211A4C0E0;
    v14 = v9 + *(int *)(v10 + 40);
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0;
    *(_BYTE *)(v14 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v5, v7);
    sub_21192C6B8(v9, v8 + *(int *)(v19 + 68), &qword_254ACA068);
    v15 = v8 + *(int *)(v19 + 72);
    *(_QWORD *)v15 = 0;
    *(_BYTE *)(v15 + 8) = 1;
    sub_211923EE8(v9, &qword_254ACA068);
    *(_QWORD *)(v0 + 2576) = sub_21191ADE8();
    *(_BYTE *)(v0 + 369) = v16;
    *(_QWORD *)(v0 + 2584) = v17;
    *(_BYTE *)(v0 + 370) = v18 & 1;
    *(_QWORD *)(v0 + 2592) = sub_211910908(&qword_254ACA048, type metadata accessor for FMFSecureLocationController, (uint64_t)&unk_211A4C29C);
    *(_QWORD *)(v0 + 2600) = OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate;
    return swift_task_switch();
  }
}

uint64_t sub_211993304()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(v0 + 370) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2608) = v2;
  *v2 = v0;
  v2[1] = sub_2119933A8;
  return sub_211A48264();
}

uint64_t sub_2119933A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 2648) = v0;
    *(_QWORD *)(v2 + 2640) = 0;
  }
  else
  {
    *(_OWORD *)(v2 + 2624) = 0u;
  }
  return swift_task_switch();
}

uint64_t sub_211993418()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFSecureLocationCtrl: location stream - ending", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 2568);
  v6 = *(_QWORD *)(v0 + 2560);
  v7 = *(_QWORD *)(v0 + 2552);
  v8 = *(_QWORD *)(v0 + 2536);

  sub_211923EE8(v8, &qword_254ACA070);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119936B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  unint64_t v67;
  unint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  id v97;
  _BOOL4 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  os_log_type_t type;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  os_log_t log;
  os_log_t loga;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t i;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  int64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169[3];

  v1 = *(_QWORD *)(v0 + 2616);
  if (!v1)
  {
    swift_release();
    if (qword_254AC7B80 != -1)
      swift_once();
    v8 = sub_211A47748();
    sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
    v9 = sub_211A47724();
    v10 = sub_211A47D30();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21190D000, v9, v10, "FMFSecureLocationCtrl: location stream - ending", v11, 2u);
      MEMORY[0x212BE48A0](v11, -1, -1);
    }
    v12 = *(_QWORD *)(v168 + 2568);
    v13 = *(_QWORD *)(v168 + 2560);
    v14 = *(_QWORD *)(v168 + 2552);
    v15 = *(_QWORD *)(v168 + 2536);

    sub_211923EE8(v15, &qword_254ACA070);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v168 + 8);
    return v7();
  }
  *(_BYTE *)(v168 + 372) = *(_BYTE *)(v168 + 371);
  v2 = *(_QWORD *)(v168 + 2624);
  sub_211A47BC8();
  if (v2)
  {
    v3 = *(_QWORD *)(v168 + 2568);
    v4 = *(_QWORD *)(v168 + 2560);
    v5 = *(_QWORD *)(v168 + 2552);
    v6 = *(_QWORD *)(v168 + 2536);
    swift_release();
    swift_bridgeObjectRelease();
    sub_211923EE8(v6, &qword_254ACA070);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v168 + 8);
    return v7();
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v17 = sub_211A47748();
  sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v18 = sub_211A47724();
  v19 = v1;
  v20 = sub_211A47D30();
  if (os_log_type_enabled(v18, v20))
  {
    v21 = swift_slowAlloc();
    *(_DWORD *)v21 = 134217984;
    *(_QWORD *)(v21 + 4) = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v18, v20, "FMFSecureLocationCtrl: location stream update - updating %ld locations", (uint8_t *)v21, 0xCu);
    MEMORY[0x212BE48A0](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v137 = v19;
  if (MEMORY[0x212BE496C](*(_QWORD *)(v168 + 2240) + *(_QWORD *)(v168 + 2600)))
  {
    v22 = *(_QWORD *)(v19 + 16);
    v23 = MEMORY[0x24BEE4AF8];
    if (v22)
    {
      v24 = *(_QWORD *)(v168 + 2296);
      *(_QWORD *)(v168 + 2208) = MEMORY[0x24BEE4AF8];
      v161 = (uint64_t *)(v168 + 2208);
      sub_211942004(0, v22, 0);
      v25 = v19 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      v163 = *(_QWORD *)(v24 + 72);
      do
      {
        v165 = v22;
        v26 = *(_QWORD *)(v168 + 2416);
        v27 = *(_QWORD *)(v168 + 2408);
        v28 = *(_QWORD *)(v168 + 2288);
        v29 = *(_QWORD *)(v168 + 2280);
        sub_21192C6B8(v25, v26, &qword_254ACA028);
        v30 = *(int *)(v28 + 48);
        v31 = v27 + v30;
        v32 = v26 + v30;
        sub_211934794(v26, v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v33 = sub_211A474D8();
        v34 = *(_QWORD *)(v33 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v31, v32, v33);
        sub_211942810(v27, v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v31, v33);
        sub_211923EE8(v26, &qword_254ACA028);
        v23 = *(_QWORD *)(v168 + 2208);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_211942004(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = *v161;
        }
        v36 = *(_QWORD *)(v23 + 16);
        v35 = *(_QWORD *)(v23 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_211942004(v35 > 1, v36 + 1, 1);
          v23 = *v161;
        }
        v37 = *(_QWORD *)(v168 + 2280);
        v38 = *(_QWORD *)(v168 + 2272);
        *(_QWORD *)(v23 + 16) = v36 + 1;
        sub_211942810(v37, v23+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v36, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v25 += v163;
        --v22;
      }
      while (v165 != 1);
    }
    sub_2119EA0B0(v23);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v19 = v137;
  }
  v39 = *(_QWORD *)(v19 + 16);
  if (v39)
  {
    v146 = v168 + 736;
    v147 = v168 + 16;
    v144 = v168 + 1456;
    v145 = v168 + 1096;
    v138 = v168 + 1816;
    v139 = v168 + 376;
    v40 = *(_QWORD *)(v168 + 2296);
    v143 = *(_QWORD *)(v168 + 2400) + *(int *)(*(_QWORD *)(v168 + 2288) + 48);
    v41 = v19 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    swift_beginAccess();
    v142 = *(_QWORD *)(v40 + 72);
    for (i = v39 - 1; ; --i)
    {
      v42 = *(_QWORD *)(v168 + 2400);
      v43 = *(_QWORD *)(v168 + 2392);
      v44 = *(_QWORD *)(v168 + 2384);
      v153 = *(_QWORD *)(v168 + 2376);
      v157 = v41;
      v45 = *(_QWORD *)(v168 + 2368);
      v166 = *(_QWORD *)(v168 + 2360);
      v46 = *(_QWORD *)(v168 + 2288);
      sub_21192C6B8(v41, v42, &qword_254ACA028);
      v47 = v43 + *(int *)(v46 + 48);
      sub_211942810(v42, v43, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v48 = sub_211A474D8();
      v49 = *(_QWORD *)(v48 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v47, v143, v48);
      v50 = v44 + *(int *)(v46 + 48);
      sub_211934794(v43, v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v159 = v49;
      v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
      v52 = v50;
      v53 = v48;
      v54 = v47;
      v51(v52, v47, v53);
      sub_21192DD68(v44, v153, &qword_254ACA028);
      v55 = v45 + *(int *)(v46 + 48);
      sub_211934794(v43, v45, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v51(v55, v47, v53);
      sub_21192DD68(v45, v166, &qword_254ACA028);
      v56 = sub_211A47724();
      v57 = sub_211A47D30();
      v164 = v51;
      v167 = v53;
      v162 = v47;
      if (os_log_type_enabled(v56, v57))
      {
        v58 = *(_QWORD *)(v168 + 2416);
        v59 = *(_QWORD *)(v168 + 2376);
        v154 = *(_QWORD *)(v168 + 2360);
        v60 = *(_QWORD *)(v168 + 2288);
        v140 = v60;
        v61 = swift_slowAlloc();
        v148 = swift_slowAlloc();
        v169[0] = v148;
        *(_DWORD *)v61 = 136315394;
        v62 = *(int *)(v60 + 48);
        type = v57;
        v63 = v58 + v62;
        v64 = v59 + v62;
        sub_211934794(v59, v58, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v51(v63, v64, v53);
        v65 = sub_211A474B4();
        v66 = v51;
        v68 = v67;
        v69 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v69(v63, v167);
        sub_211934758(v58, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        *(_QWORD *)(v168 + 2216) = sub_211950A9C(v65, v68, v169);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211923EE8(v59, &qword_254ACA028);
        *(_WORD *)(v61 + 12) = 2080;
        v70 = *(int *)(v140 + 48);
        v71 = v58 + v70;
        v72 = v154 + v70;
        sub_211934794(v154, v58, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v66(v71, v72, v167);
        v73 = FMFLocation.debugDescription.getter();
        v75 = v74;
        sub_211934758(v58, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v69(v71, v167);
        v53 = v167;
        *(_QWORD *)(v168 + 2224) = sub_211950A9C(v73, v75, v169);
        sub_211A47E2C();
        v54 = v162;
        swift_bridgeObjectRelease();
        sub_211923EE8(v154, &qword_254ACA028);
        _os_log_impl(&dword_21190D000, v56, type, "FMFSecureLocationCtrl: location stream update - %s: %s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v148, -1, -1);
        MEMORY[0x212BE48A0](v61, -1, -1);
      }
      else
      {
        v76 = *(_QWORD *)(v168 + 2360);
        sub_211923EE8(*(_QWORD *)(v168 + 2376), &qword_254ACA028);
        sub_211923EE8(v76, &qword_254ACA028);
      }

      v77 = *(_QWORD *)(v168 + 2392);
      v78 = *(_QWORD *)(v168 + 2352);
      v79 = *(_QWORD *)(v168 + 2344);
      v80 = *(_QWORD *)(v168 + 2288);
      v149 = *(_QWORD *)(v168 + 2264);
      v81 = v78 + *(int *)(v80 + 48);
      sub_211934794(v77, v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v164(v81, v54, v53);
      log = (os_log_t)sub_211A474CC();
      v155 = v82;
      v83 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
      v83(v81, v53);
      v84 = v79 + *(int *)(v80 + 48);
      sub_211934794(v77, v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v164(v84, v54, v53);
      sub_21192DD68(v79 + *(int *)(v149 + 44), v144, &qword_254AC8CD0);
      sub_21192DD68(v144, v145, &qword_254AC8CD0);
      v85 = sub_2119724C8(v145);
      v86 = *(_QWORD *)(v168 + 2344);
      v87 = *(_QWORD *)(v168 + 2256);
      v160 = v83;
      if (v85 == 1)
      {
        sub_211934758(v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v83(v84, v53);
        v88 = sub_211A47208();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 1, 1, v88);
      }
      else
      {
        v89 = v84;
        v90 = *(id *)(v168 + 1400);
        sub_211934758(v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v91 = objc_msgSend(v90, sel_timestamp);

        sub_211A471E4();
        v92 = sub_211A47208();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v87, 0, 1, v92);
        v83(v89, v53);
      }
      v93 = *(_QWORD *)(v168 + 2336);
      v94 = *(_QWORD *)(v168 + 2264);
      v95 = v93 + *(int *)(*(_QWORD *)(v168 + 2288) + 48);
      sub_211934794(*(_QWORD *)(v168 + 2392), v93, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v164(v95, v162, v53);
      sub_21192DD68(v93 + *(int *)(v94 + 44), v146, &qword_254AC8CD0);
      sub_21192DD68(v146, v147, &qword_254AC8CD0);
      v96 = sub_2119724C8(v147);
      if (v96 == 1)
        v97 = 0;
      else
        v97 = *(id *)(v168 + 320);
      v98 = v96 != 1;
      v99 = *(_QWORD *)(v168 + 2416);
      v150 = *(_QWORD *)(v168 + 2392);
      v100 = *(_QWORD *)(v168 + 2352);
      v101 = *(_QWORD *)(v168 + 2288);
      v102 = *(_QWORD *)(v168 + 2256);
      sub_211934758(*(_QWORD *)(v168 + 2336), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

      v83(v95, v167);
      sub_211945344((uint64_t)log, v155, v102, v98);
      swift_bridgeObjectRelease();
      sub_211923EE8(v102, qword_254AC8A78);
      sub_211934758(v100, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v103 = v167;
      v104 = v99 + *(int *)(v101 + 48);
      sub_211934794(v150, v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v105 = v164;
      v164(v104, v162, v167);
      v106 = *(unsigned __int8 *)(v99 + 33);
      sub_211934758(v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v83(v104, v167);
      if (v106 == 2)
      {
        v107 = *(_QWORD *)(v168 + 2392);
        v108 = *(_QWORD *)(v168 + 2328);
        v109 = *(_QWORD *)(v168 + 2320);
        v110 = *(_QWORD *)(v168 + 2288);
        v111 = *(_QWORD *)(v168 + 2264);
        v112 = v108 + *(int *)(v110 + 48);
        sub_211934794(v107, v108, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v164(v112, v162, v167);
        loga = (os_log_t)sub_211A474CC();
        v156 = v113;
        v160(v112, v167);
        v114 = v109 + *(int *)(v110 + 48);
        sub_211934794(v107, v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v164(v114, v162, v167);
        sub_21192DD68(v109 + *(int *)(v111 + 44), v139, &qword_254AC8CD0);
        sub_21192DD68(v139, v138, &qword_254AC8CD0);
        v115 = sub_2119724C8(v138);
        v116 = *(_QWORD *)(v168 + 2320);
        v117 = *(_QWORD *)(v168 + 2248);
        if (v115 == 1)
        {
          sub_211934758(*(_QWORD *)(v168 + 2320), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v160(v114, v167);
          v118 = sub_211A47208();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v117, 1, 1, v118);
        }
        else
        {
          v119 = *(id *)(v168 + 2120);
          sub_211934758(v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v120 = objc_msgSend(v119, sel_timestamp);

          sub_211A471E4();
          v121 = sub_211A47208();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v117, 0, 1, v121);
          v160(v114, v167);
        }
        v122 = *(_QWORD *)(v168 + 2328);
        v123 = *(_QWORD *)(v168 + 2248);
        swift_bridgeObjectRetain();
        sub_2119D53D0((uint64_t)loga, v156, v123);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_211923EE8(v123, qword_254AC8A78);
        sub_211934758(v122, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v105 = v164;
        v103 = v167;
      }
      v124 = *(_QWORD *)(v168 + 2312);
      v125 = v124 + *(int *)(*(_QWORD *)(v168 + 2288) + 48);
      sub_211934794(*(_QWORD *)(v168 + 2392), v124, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v105(v125, v162, v103);
      v126 = *(unsigned __int8 *)(v124 + 33);
      sub_211934758(v124, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v127 = *(_QWORD *)(v168 + 2392);
      if (v126 == 2)
      {
        v128 = *(_QWORD *)(v168 + 2304);
        v129 = v103;
        v130 = v128 + *(int *)(*(_QWORD *)(v168 + 2288) + 48);
        sub_211934794(v127, v128, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v105(v130, v162, v129);
        v131 = sub_211A474CC();
        v133 = *(_QWORD *)(v168 + 2392);
        v134 = *(_QWORD *)(v168 + 2304);
        if (v132)
        {
          v135 = v131;
          v136 = v132;
          v160(v130, v129);
          sub_211934758(v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          sub_211997084(v135, v136);
          swift_bridgeObjectRelease();
          sub_211923EE8(v133, &qword_254ACA028);
        }
        else
        {
          sub_211923EE8(*(_QWORD *)(v168 + 2392), &qword_254ACA028);
          v160(v130, v129);
          sub_211934758(v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        }
        v160(v125, v129);
      }
      else
      {
        sub_211923EE8(v127, &qword_254ACA028);
        v160(v125, v103);
      }
      if (!i)
        break;
      v41 = v157 + v142;
    }
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_211994920()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 2448);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2464) + 48))(v1, 1, *(_QWORD *)(v0 + 2456));
  v3 = v2 != 1;
  if (v2 == 1)
  {
    v10 = &qword_254ACA058;
    v9 = v1;
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v0 + 2480);
  v5 = *(_QWORD *)(v0 + 2472);
  v6 = *(_QWORD *)(v0 + 2296);
  v7 = *(_QWORD *)(v0 + 2288);
  sub_21192DD68(v1, v4, &qword_254ACA060);
  sub_21192C6B8(v4, v5, &qword_254ACA060);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 2, v7);
  if (v8)
  {
    if (v8 == 1)
    {
      v9 = *(_QWORD *)(v0 + 2480);
      v10 = &qword_254ACA060;
LABEL_6:
      sub_211923EE8(v9, v10);
      v11 = *(_QWORD *)(v0 + 2632);
LABEL_7:
      *(_BYTE *)(v0 + 371) = v3;
      *(_QWORD *)(v0 + 2616) = v11;
      return swift_task_switch();
    }
    v11 = *(_QWORD *)(v0 + 2632);
    sub_211923EE8(*(_QWORD *)(v0 + 2480), &qword_254ACA060);
    if (v11)
      return swift_task_switch();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 2632);
    v13 = *(_QWORD *)(v0 + 2432);
    v14 = *(_QWORD *)(v0 + 2424);
    sub_21192DD68(*(_QWORD *)(v0 + 2472), v13, &qword_254ACA028);
    if (!v11)
      v11 = MEMORY[0x24BEE4AF8];
    sub_21192C6B8(v13, v14, &qword_254ACA028);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_2119B03FC(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    v17 = v16 + 1;
    if (v16 >= v15 >> 1)
    {
      v26 = sub_2119B03FC(v15 > 1, v16 + 1, 1, v11);
      v17 = v16 + 1;
      v11 = v26;
    }
    v18 = *(_BYTE *)(v0 + 369);
    v19 = *(_QWORD *)(v0 + 2576);
    v20 = *(_QWORD *)(v0 + 2480);
    v21 = *(_QWORD *)(v0 + 2432);
    v22 = *(_QWORD *)(v0 + 2424);
    v23 = *(_QWORD *)(v0 + 2296);
    *(_QWORD *)(v11 + 16) = v17;
    sub_21192DD68(v22, v11+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v16, &qword_254ACA028);
    v24 = *(_QWORD *)(v11 + 16);
    sub_211923EE8(v21, &qword_254ACA028);
    sub_211923EE8(v20, &qword_254ACA060);
    if ((v18 & 1) == 0 && v24 == v19)
    {
      v3 = 0;
      goto LABEL_7;
    }
  }
  *(_QWORD *)(v0 + 2656) = v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2664) = v25;
  *v25 = v0;
  v25[1] = sub_211994CA8;
  return sub_211A48264();
}

uint64_t sub_211994BD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2240);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_getObjectType();
    sub_211A47B50();
  }
  return swift_task_switch();
}

uint64_t sub_211994C44()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 2200) = *(_QWORD *)(v0 + 2648);
  sub_211958C38(&qword_254ACC360);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_211994CA8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v3 = v2[332];
  if (v0)
  {
    v2[331] = v0;
    v2[330] = v3;
  }
  else
  {
    v2[329] = v3;
    v2[328] = 0;
  }
  return swift_task_switch();
}

uint64_t sub_211994D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  unint64_t v58;
  unint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  id v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  os_log_type_t type;
  os_log_type_t typea[8];
  NSObject *log;
  os_log_t loga;
  os_log_t logb;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t i;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t);
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t, uint64_t, uint64_t);
  int64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160[3];

  v1 = *(_QWORD *)(v0 + 2632);
  *(_BYTE *)(v0 + 372) = 0;
  v2 = *(_QWORD *)(v0 + 2624);
  sub_211A47BC8();
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 2568);
    v4 = *(_QWORD *)(v0 + 2560);
    v5 = *(_QWORD *)(v0 + 2552);
    v6 = *(_QWORD *)(v0 + 2536);
    swift_release();
    swift_bridgeObjectRelease();
    sub_211923EE8(v6, &qword_254ACA070);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v8 = sub_211A47748();
    sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v9 = sub_211A47724();
    v10 = v1;
    v11 = sub_211A47D30();
    if (os_log_type_enabled(v9, v11))
    {
      v12 = swift_slowAlloc();
      *(_DWORD *)v12 = 134217984;
      *(_QWORD *)(v12 + 4) = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v9, v11, "FMFSecureLocationCtrl: location stream update - updating %ld locations", (uint8_t *)v12, 0xCu);
      MEMORY[0x212BE48A0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    v127 = v10;
    if (MEMORY[0x212BE496C](*(_QWORD *)(v0 + 2240) + *(_QWORD *)(v0 + 2600)))
    {
      v13 = *(_QWORD *)(v10 + 16);
      v14 = MEMORY[0x24BEE4AF8];
      if (v13)
      {
        v15 = *(_QWORD *)(v0 + 2296);
        *(_QWORD *)(v0 + 2208) = MEMORY[0x24BEE4AF8];
        v153 = (uint64_t *)(v0 + 2208);
        sub_211942004(0, v13, 0);
        v16 = v10 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v155 = *(_QWORD *)(v15 + 72);
        do
        {
          v157 = v13;
          v17 = *(_QWORD *)(v0 + 2416);
          v18 = *(_QWORD *)(v0 + 2408);
          v19 = *(_QWORD *)(v0 + 2288);
          v20 = *(_QWORD *)(v0 + 2280);
          sub_21192C6B8(v16, v17, &qword_254ACA028);
          v21 = *(int *)(v19 + 48);
          v22 = v18 + v21;
          v23 = v17 + v21;
          sub_211934794(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v24 = sub_211A474D8();
          v25 = *(_QWORD *)(v24 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, v23, v24);
          sub_211942810(v18, v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
          sub_211923EE8(v17, &qword_254ACA028);
          v14 = *(_QWORD *)(v0 + 2208);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_211942004(0, *(_QWORD *)(v14 + 16) + 1, 1);
            v14 = *v153;
          }
          v27 = *(_QWORD *)(v14 + 16);
          v26 = *(_QWORD *)(v14 + 24);
          if (v27 >= v26 >> 1)
          {
            sub_211942004(v26 > 1, v27 + 1, 1);
            v14 = *v153;
          }
          v28 = *(_QWORD *)(v0 + 2280);
          v29 = *(_QWORD *)(v0 + 2272);
          *(_QWORD *)(v14 + 16) = v27 + 1;
          sub_211942810(v28, v14+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v16 += v155;
          v13 = v157 - 1;
        }
        while (v157 != 1);
      }
      sub_2119EA0B0(v14);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v10 = v127;
    }
    v30 = *(_QWORD *)(v10 + 16);
    if (v30)
    {
      v135 = v0 + 736;
      v136 = v0 + 16;
      v133 = v0 + 1456;
      v134 = v0 + 1096;
      v128 = v0 + 1816;
      v129 = v0 + 376;
      v31 = *(_QWORD *)(v0 + 2296);
      v132 = *(_QWORD *)(v0 + 2400) + *(int *)(*(_QWORD *)(v0 + 2288) + 48);
      v32 = v10 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      swift_beginAccess();
      v131 = *(_QWORD *)(v31 + 72);
      for (i = v30 - 1; ; --i)
      {
        v33 = *(_QWORD *)(v0 + 2400);
        v34 = *(_QWORD *)(v0 + 2392);
        v35 = *(_QWORD *)(v0 + 2384);
        v145 = *(_QWORD *)(v0 + 2376);
        v36 = *(_QWORD *)(v0 + 2368);
        v158 = *(_QWORD *)(v0 + 2360);
        v37 = *(_QWORD *)(v0 + 2288);
        v150 = v32;
        sub_21192C6B8(v32, v33, &qword_254ACA028);
        v38 = v34 + *(int *)(v37 + 48);
        sub_211942810(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v39 = sub_211A474D8();
        v40 = *(_QWORD *)(v39 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v132, v39);
        v41 = v35 + *(int *)(v37 + 48);
        sub_211934794(v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v151 = v40;
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
        v43 = v41;
        v44 = v39;
        v45 = v38;
        v42(v43, v38, v44);
        sub_21192DD68(v35, v145, &qword_254ACA028);
        v46 = v36 + *(int *)(v37 + 48);
        sub_211934794(v34, v36, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v42(v46, v38, v44);
        sub_21192DD68(v36, v158, &qword_254ACA028);
        v47 = sub_211A47724();
        v48 = sub_211A47D30();
        v156 = v42;
        v159 = v44;
        v154 = v38;
        if (os_log_type_enabled(v47, v48))
        {
          v49 = *(_QWORD *)(v0 + 2416);
          v50 = *(_QWORD *)(v0 + 2376);
          v146 = *(_QWORD *)(v0 + 2360);
          v51 = *(_QWORD *)(v0 + 2288);
          v130 = v51;
          log = v47;
          v52 = swift_slowAlloc();
          v142 = swift_slowAlloc();
          v160[0] = v142;
          *(_DWORD *)v52 = 136315394;
          v53 = *(int *)(v51 + 48);
          type = v48;
          v54 = v49 + v53;
          v55 = v50 + v53;
          sub_211934794(v50, v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v42(v54, v55, v44);
          v56 = sub_211A474B4();
          v57 = v42;
          v59 = v58;
          v60 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
          v60(v54, v159);
          sub_211934758(v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          *(_QWORD *)(v0 + 2216) = sub_211950A9C(v56, v59, v160);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          sub_211923EE8(v50, &qword_254ACA028);
          *(_WORD *)(v52 + 12) = 2080;
          v61 = *(int *)(v130 + 48);
          v62 = v49 + v61;
          v63 = v146 + v61;
          sub_211934794(v146, v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v57(v62, v63, v159);
          v64 = FMFLocation.debugDescription.getter();
          v66 = v65;
          sub_211934758(v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v60(v62, v159);
          v44 = v159;
          *(_QWORD *)(v0 + 2224) = sub_211950A9C(v64, v66, v160);
          sub_211A47E2C();
          v45 = v154;
          swift_bridgeObjectRelease();
          sub_211923EE8(v146, &qword_254ACA028);
          _os_log_impl(&dword_21190D000, log, type, "FMFSecureLocationCtrl: location stream update - %s: %s", (uint8_t *)v52, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v142, -1, -1);
          MEMORY[0x212BE48A0](v52, -1, -1);

        }
        else
        {
          v67 = *(_QWORD *)(v0 + 2360);
          sub_211923EE8(*(_QWORD *)(v0 + 2376), &qword_254ACA028);
          sub_211923EE8(v67, &qword_254ACA028);

        }
        v68 = *(_QWORD *)(v0 + 2392);
        v69 = *(_QWORD *)(v0 + 2352);
        v70 = *(_QWORD *)(v0 + 2344);
        v71 = *(_QWORD *)(v0 + 2288);
        loga = *(os_log_t *)(v0 + 2264);
        v72 = v69 + *(int *)(v71 + 48);
        sub_211934794(v68, v69, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v156(v72, v45, v44);
        v143 = sub_211A474CC();
        v147 = v73;
        v74 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
        v74(v72, v44);
        v75 = v70 + *(int *)(v71 + 48);
        sub_211934794(v68, v70, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v156(v75, v45, v44);
        sub_21192DD68(v70 + SHIDWORD(loga[5].isa), v133, &qword_254AC8CD0);
        sub_21192DD68(v133, v134, &qword_254AC8CD0);
        v76 = sub_2119724C8(v134);
        v77 = *(_QWORD *)(v0 + 2344);
        v78 = *(_QWORD *)(v0 + 2256);
        v152 = v74;
        if (v76 == 1)
        {
          sub_211934758(v77, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v74(v75, v44);
          v79 = sub_211A47208();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 1, 1, v79);
        }
        else
        {
          v80 = v75;
          v81 = *(id *)(v0 + 1400);
          sub_211934758(v77, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v82 = objc_msgSend(v81, sel_timestamp);

          sub_211A471E4();
          v83 = sub_211A47208();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v78, 0, 1, v83);
          v74(v80, v44);
        }
        v84 = *(_QWORD *)(v0 + 2336);
        v85 = *(_QWORD *)(v0 + 2264);
        v86 = v84 + *(int *)(*(_QWORD *)(v0 + 2288) + 48);
        sub_211934794(*(_QWORD *)(v0 + 2392), v84, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v156(v86, v154, v44);
        sub_21192DD68(v84 + *(int *)(v85 + 44), v135, &qword_254AC8CD0);
        sub_21192DD68(v135, v136, &qword_254AC8CD0);
        v87 = sub_2119724C8(v136);
        if (v87 == 1)
          v88 = 0;
        else
          v88 = *(id *)(v0 + 320);
        v89 = v87 != 1;
        v90 = *(_QWORD *)(v0 + 2416);
        v91 = *(_QWORD *)(v0 + 2352);
        *(_QWORD *)typea = *(_QWORD *)(v0 + 2288);
        logb = *(os_log_t *)(v0 + 2392);
        v92 = *(_QWORD *)(v0 + 2256);
        sub_211934758(*(_QWORD *)(v0 + 2336), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

        v74(v86, v159);
        sub_211945344(v143, v147, v92, v89);
        swift_bridgeObjectRelease();
        sub_211923EE8(v92, qword_254AC8A78);
        sub_211934758(v91, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v93 = v159;
        v94 = v90 + *(int *)(*(_QWORD *)typea + 48);
        sub_211934794((uint64_t)logb, v90, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v95 = v156;
        v156(v94, v154, v159);
        v96 = *(unsigned __int8 *)(v90 + 33);
        sub_211934758(v90, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v74(v94, v159);
        if (v96 == 2)
        {
          v97 = *(_QWORD *)(v0 + 2392);
          v98 = *(_QWORD *)(v0 + 2328);
          v99 = *(_QWORD *)(v0 + 2320);
          v100 = *(_QWORD *)(v0 + 2288);
          v101 = *(_QWORD *)(v0 + 2264);
          v102 = v98 + *(int *)(v100 + 48);
          sub_211934794(v97, v98, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v156(v102, v154, v159);
          v144 = sub_211A474CC();
          v148 = v103;
          v152(v102, v159);
          v104 = v99 + *(int *)(v100 + 48);
          sub_211934794(v97, v99, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v156(v104, v154, v159);
          sub_21192DD68(v99 + *(int *)(v101 + 44), v129, &qword_254AC8CD0);
          sub_21192DD68(v129, v128, &qword_254AC8CD0);
          v105 = sub_2119724C8(v128);
          v106 = *(_QWORD *)(v0 + 2320);
          v107 = *(_QWORD *)(v0 + 2248);
          if (v105 == 1)
          {
            sub_211934758(*(_QWORD *)(v0 + 2320), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v152(v104, v159);
            v108 = sub_211A47208();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v107, 1, 1, v108);
          }
          else
          {
            v109 = *(id *)(v0 + 2120);
            sub_211934758(v106, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v110 = objc_msgSend(v109, sel_timestamp);

            sub_211A471E4();
            v111 = sub_211A47208();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v107, 0, 1, v111);
            v152(v104, v159);
          }
          v112 = *(_QWORD *)(v0 + 2328);
          v113 = *(_QWORD *)(v0 + 2248);
          swift_bridgeObjectRetain();
          sub_2119D53D0(v144, v148, v113);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_211923EE8(v113, qword_254AC8A78);
          sub_211934758(v112, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v95 = v156;
          v93 = v159;
        }
        v114 = *(_QWORD *)(v0 + 2312);
        v115 = v114 + *(int *)(*(_QWORD *)(v0 + 2288) + 48);
        sub_211934794(*(_QWORD *)(v0 + 2392), v114, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v95(v115, v154, v93);
        v116 = *(unsigned __int8 *)(v114 + 33);
        sub_211934758(v114, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v117 = *(_QWORD *)(v0 + 2392);
        if (v116 == 2)
        {
          v118 = *(_QWORD *)(v0 + 2304);
          v119 = v93;
          v120 = v118 + *(int *)(*(_QWORD *)(v0 + 2288) + 48);
          sub_211934794(v117, v118, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v95(v120, v154, v119);
          v121 = sub_211A474CC();
          v123 = *(_QWORD *)(v0 + 2392);
          v124 = *(_QWORD *)(v0 + 2304);
          if (v122)
          {
            v125 = v121;
            v126 = v122;
            v152(v120, v119);
            sub_211934758(v124, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            sub_211997084(v125, v126);
            swift_bridgeObjectRelease();
            sub_211923EE8(v123, &qword_254ACA028);
          }
          else
          {
            sub_211923EE8(*(_QWORD *)(v0 + 2392), &qword_254ACA028);
            v152(v120, v119);
            sub_211934758(v124, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          }
          v152(v115, v119);
        }
        else
        {
          sub_211923EE8(v117, &qword_254ACA028);
          v152(v115, v93);
        }
        if (!i)
          break;
        v32 = v150 + v131;
      }
    }
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
}

uint64_t sub_211995CA8()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(v0 + 372) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2608) = v2;
  *v2 = v0;
  v2[1] = sub_2119933A8;
  return sub_211A48264();
}

uint64_t sub_211995D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = type metadata accessor for FMFFriend();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v5 = sub_211A47400();
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211995E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = v0 + 72;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 16);
  if (v2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 160);
    v61 = (uint64_t *)v0;
    v4 = *(_QWORD *)(v0 + 144);
    v5 = v61[17];
    v6 = v61[10];
    v7 = sub_211A47748();
    sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v9 = v61;
    v60 = v8;
    v8(v3, v6, v5);
    v10 = sub_211A47724();
    v11 = sub_211A47D30();
    v12 = os_log_type_enabled(v10, v11);
    v13 = v61[20];
    v14 = v61[17];
    if (v12)
    {
      v58 = v61[18];
      v15 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v64 = v62;
      *(_DWORD *)v15 = 136315138;
      v9 = v61;
      sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
      v16 = sub_211A4821C();
      *(_QWORD *)(v1 - 8) = sub_211950A9C(v16, v17, &v64);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      v59 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v59(v13, v14);
      _os_log_impl(&dword_21190D000, v10, v11, "FMFSecureLocationCtrl: startLocating called, with priority: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v62, -1, -1);
      MEMORY[0x212BE48A0](v15, -1, -1);
    }
    else
    {
      v59 = *(void (**)(uint64_t, uint64_t))(v61[18] + 8);
      v59(v13, v14);
    }

    v20 = v9[12];
    v19 = v9[13];
    v21 = v9[9];
    v22 = MEMORY[0x24BEE4AF8];
    v64 = MEMORY[0x24BEE4AF8];
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v25 = v21 + v23;
    swift_bridgeObjectRetain();
    v63 = v24;
    do
    {
      v26 = v9[16];
      sub_211934794(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v27 = v9[16];
      if ((*(_BYTE *)(v26 + *(int *)(v20 + 36)) & 2) != 0)
      {
        sub_211942810(v27, v9[15], (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21194B0AC(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v64;
        }
        v29 = *(_QWORD *)(v22 + 16);
        v28 = *(_QWORD *)(v22 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_21194B0AC(v28 > 1, v29 + 1, 1);
          v22 = v64;
        }
        v30 = v9[15];
        *(_QWORD *)(v22 + 16) = v29 + 1;
        v24 = v63;
        sub_211942810(v30, v22 + v23 + v29 * v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934758(v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v25 += v24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v22 + 16);
    if (v31)
    {
      v32 = v9[14];
      v64 = MEMORY[0x24BEE4AF8];
      sub_21192F2B0(0, v31, 0);
      v33 = v22 + v23;
      v34 = v64;
      do
      {
        v35 = (uint64_t *)v9[14];
        sub_211934794(v33, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v36 = *v35;
        v37 = *(_QWORD *)(v32 + 8);
        v38 = *(_QWORD *)(v32 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21192F2B0(0, *(_QWORD *)(v34 + 16) + 1, 1);
          v34 = v64;
        }
        v40 = *(_QWORD *)(v34 + 16);
        v39 = *(_QWORD *)(v34 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_21192F2B0(v39 > 1, v40 + 1, 1);
          v34 = v64;
        }
        *(_QWORD *)(v34 + 16) = v40 + 1;
        v41 = v34 + 32 * v40;
        *(_QWORD *)(v41 + 32) = v36;
        *(_QWORD *)(v41 + 40) = v37;
        *(_QWORD *)(v41 + 48) = v38;
        *(_WORD *)(v41 + 56) = 0;
        *(_BYTE *)(v41 + 58) = 0;
        v9 = v61;
        v33 += v63;
        --v31;
      }
      while (v31);
      swift_release();
    }
    else
    {
      swift_release();
      v34 = MEMORY[0x24BEE4AF8];
    }
    v42 = v9;
    v45 = v9 + 18;
    v44 = v9[18];
    v43 = v45[1];
    v46 = v42[17];
    v60(v43, v42[10], v46);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v43, v46);
    if (v47 == *MEMORY[0x24BE31D08])
    {
      swift_beginAccess();
      v48 = swift_bridgeObjectRetain();
      v49 = sub_2119A5574(v48);
      swift_bridgeObjectRelease();
      v50 = sub_211A1A6A0((uint64_t)v49);
      swift_release();
      v51 = v42;
    }
    else if (v47 == *MEMORY[0x24BE31D00])
    {
      swift_beginAccess();
      v51 = v61;
      v52 = swift_bridgeObjectRetain();
      v53 = sub_2119A5574(v52);
      swift_bridgeObjectRelease();
      v50 = sub_211A1A6A0((uint64_t)v53);
      swift_release();
    }
    else
    {
      v51 = v61;
      v59(v61[19], v61[17]);
      v50 = MEMORY[0x24BEE4B08];
    }
    v54 = sub_211A1A6A0(v34);
    swift_bridgeObjectRelease();
    v55 = sub_211996558(v54, v50);
    v56 = sub_2119A5490(v55);
    v51[21] = (uint64_t)v56;
    swift_bridgeObjectRelease();
    v57 = (_QWORD *)swift_task_alloc();
    v51[22] = (uint64_t)v57;
    *v57 = v51;
    v57[1] = sub_21199642C;
    return sub_211924638((uint64_t)v56, v51[10]);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21199642C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119964E0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211996558(uint64_t result, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _BYTE v26[8];
  uint64_t v27;

  v3 = result;
  v4 = 0;
  v27 = a2;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v23 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v9)
      goto LABEL_29;
    v24 = *(_QWORD *)(v5 + 8 * v23);
    ++v4;
    if (!v24)
    {
      v4 = v23 + 1;
      if (v23 + 1 >= v9)
        goto LABEL_29;
      v24 = *(_QWORD *)(v5 + 8 * v4);
      if (!v24)
      {
        v4 = v23 + 2;
        if (v23 + 2 >= v9)
          goto LABEL_29;
        v24 = *(_QWORD *)(v5 + 8 * v4);
        if (!v24)
        {
          v4 = v23 + 3;
          if (v23 + 3 >= v9)
            goto LABEL_29;
          v24 = *(_QWORD *)(v5 + 8 * v4);
          if (!v24)
            break;
        }
      }
    }
LABEL_28:
    v8 = (v24 - 1) & v24;
    v11 = __clz(__rbit64(v24)) + (v4 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v3 + 48) + 32 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(unsigned __int8 *)(v12 + 24);
    v17 = *(unsigned __int8 *)(v12 + 25);
    v18 = *(unsigned __int8 *)(v12 + 26);
    v19 = v2 & 0xFF000000 | v16;
    if (v17)
      v20 = 256;
    else
      v20 = 0;
    v21 = v19 | v20;
    if (v18)
      v22 = 0x10000;
    else
      v22 = 0;
    v2 = v21 | v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211A26EE4((uint64_t)v26, v13, v14, v15, v2);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v25 = v23 + 4;
  if (v25 >= v9)
  {
LABEL_29:
    swift_release();
    return v27;
  }
  v24 = *(_QWORD *)(v5 + 8 * v25);
  if (v24)
  {
    v4 = v25;
    goto LABEL_28;
  }
  while (1)
  {
    v4 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v4 >= v9)
      goto LABEL_29;
    v24 = *(_QWORD *)(v5 + 8 * v4);
    ++v25;
    if (v24)
      goto LABEL_28;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21199672C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v4 = sub_211A47400();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119967E0()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0 + 48;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  *(_QWORD *)(v0 + 136) = v2;
  if (v2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = (uint64_t *)v0;
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = v3[12];
    v7 = v3[7];
    v8 = sub_211A47748();
    sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v3[18] = (uint64_t)v9;
    v9(v4, v7, v6);
    v10 = sub_211A47724();
    v11 = sub_211A47D30();
    v12 = os_log_type_enabled(v10, v11);
    v13 = v3[16];
    v37 = v3;
    v16 = v3 + 12;
    v15 = v3[12];
    v14 = v16[1];
    if (v12)
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v17 = 136315138;
      sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
      v18 = sub_211A4821C();
      *(_QWORD *)(v1 - 8) = sub_211950A9C(v18, v19, &v40);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v20(v13, v15);
      _os_log_impl(&dword_21190D000, v10, v11, "FMFSecureLocationCtrl: stopLocating called, with priority: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v38, -1, -1);
      MEMORY[0x212BE48A0](v17, -1, -1);
    }
    else
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v20(v13, v15);
    }

    v37[19] = (uint64_t)v20;
    v22 = v37[11];
    v23 = v37[9];
    v24 = v37[6];
    v40 = MEMORY[0x24BEE4AF8];
    sub_21192F2B0(0, v2, 0);
    v25 = v37;
    v26 = *(_DWORD *)(v23 + 80);
    *((_DWORD *)v37 + 50) = v26;
    v27 = v24 + ((v26 + 32) & ~(unint64_t)v26);
    v39 = *(_QWORD *)(v23 + 72);
    v37[20] = v39;
    v28 = v40;
    do
    {
      v29 = (uint64_t *)v25[11];
      sub_211934794(v27, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v30 = *v29;
      v31 = *(_QWORD *)(v22 + 8);
      v32 = *(_QWORD *)(v22 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21192F2B0(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v25 = v37;
        v28 = v40;
      }
      v34 = *(_QWORD *)(v28 + 16);
      v33 = *(_QWORD *)(v28 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_21192F2B0(v33 > 1, v34 + 1, 1);
        v25 = v37;
        v28 = v40;
      }
      v25[21] = v28;
      *(_QWORD *)(v28 + 16) = v34 + 1;
      v35 = v28 + 32 * v34;
      *(_QWORD *)(v35 + 32) = v30;
      *(_QWORD *)(v35 + 40) = v31;
      *(_QWORD *)(v35 + 48) = v32;
      *(_WORD *)(v35 + 56) = 0;
      v27 += v39;
      *(_BYTE *)(v35 + 58) = 0;
      --v2;
    }
    while (v2);
    v36 = (_QWORD *)swift_task_alloc();
    v25[22] = (uint64_t)v36;
    *v36 = v25;
    v36[1] = sub_211996BB0;
    return sub_211998E4C(v28, v25[7]);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_211996BB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  swift_release();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_211996C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unsigned int v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 144))(v1, *(_QWORD *)(v0 + 56), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == *MEMORY[0x24BE31D08])
    goto LABEL_11;
  if (v4 != *MEMORY[0x24BE31D00])
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 152))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = *MEMORY[0x24BE31D08];
  v5 = *(_QWORD *)(v0 + 80);
  v6 = (uint64_t *)(*(_QWORD *)(v0 + 64) + 120);
  swift_bridgeObjectRetain();
  v7 = 0;
  do
  {
    v9 = *(uint64_t **)(v0 + 80);
    sub_211934794(*(_QWORD *)(v0 + 48)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ *(_QWORD *)(v0 + 160) * v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v10 = *v9;
    v11 = *(_QWORD *)(v5 + 8);
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v12 = sub_21195BB68(v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = *v6;
      v23 = *v6;
      *v6 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_211A44EF0();
        v16 = v23;
      }
      swift_bridgeObjectRelease();
      sub_211A43354(v12, v16);
      *v6 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v7;
    v8 = *(_QWORD *)(v0 + 136);
    swift_endAccess();
  }
  while (v7 != v8);
  v18 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v19, v22, v20);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v21;
  *v21 = v0;
  v21[1] = sub_211996F28;
  return sub_211995D4C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 112));
}

uint64_t sub_211996F28()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_211996FB4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211997018()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211997084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(_BYTE *);
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  uint64_t inited;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  unsigned int v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v6 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_211A47400();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = &v45[-v17];
  swift_beginAccess();
  v19 = *(_QWORD *)(v2 + 128);
  if (!*(_QWORD *)(v19 + 16))
  {
LABEL_13:
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v31 = 0;
    if (!*(_QWORD *)(v3 + 144))
      goto LABEL_15;
LABEL_14:
    swift_retain();
    sub_211958C38(&qword_254ACC360);
    sub_211A47BB0();
    swift_release();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_21195BB68(a1, a2);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v47 = v15;
  v50 = v9;
  v51 = a1;
  v22 = *(_QWORD *)(v19 + 56) + 32 * v20;
  v23 = *(_QWORD *)v22;
  v48 = *(_QWORD *)(v22 + 8);
  v49 = v23;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = *(unsigned __int8 *)(v22 + 24);
  v26 = *(unsigned __int8 *)(v22 + 25);
  v27 = *(unsigned __int8 *)(v22 + 26);
  if (v26)
    v28 = 256;
  else
    v28 = 0;
  v29 = v28 | v25;
  if (v27)
    v30 = 0x10000;
  else
    v30 = 0;
  v31 = v29 | v30;
  swift_bridgeObjectRetain();
  v52 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0 || (v26 & 1) != 0)
  {
    v46 = *MEMORY[0x24BE31D00];
    v39 = *(void (**)(_BYTE *))(v11 + 104);
    v39(v18);
    swift_bridgeObjectRetain();
    v40 = v52;
    swift_bridgeObjectRetain();
    a1 = v51;
    sub_211997A20(v51, a2, v40, 0x10000, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v41(v18, v10);
    sub_211958C38((uint64_t *)&unk_254ACC540);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_211A4A230;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    v43 = (uint64_t)v47;
    ((void (*)(_BYTE *, _QWORD, uint64_t))v39)(v47, v46, v10);
    v44 = MEMORY[0x212BE496C](v3 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate);
    swift_bridgeObjectRetain();
    if (v44)
    {
      sub_21191F7D8(0, v43, inited);
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    v41((_BYTE *)v43, v10);
  }
  else
  {
    a1 = v51;
  }
  v32 = v49;
  v9 = v50;
  v33 = v48;
  v34 = v52;
  if (*(_QWORD *)(v3 + 144))
    goto LABEL_14;
LABEL_15:
  v35 = sub_211A47B8C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v9, 1, 1, v35);
  v36 = swift_allocObject();
  swift_weakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(v37 + 24) = 0;
  *(_QWORD *)(v37 + 32) = v36;
  *(_QWORD *)(v37 + 40) = a1;
  *(_QWORD *)(v37 + 48) = a2;
  *(_QWORD *)(v37 + 56) = v32;
  *(_QWORD *)(v37 + 64) = v33;
  *(_QWORD *)(v37 + 72) = v34;
  *(_BYTE *)(v37 + 82) = BYTE2(v31);
  *(_WORD *)(v37 + 80) = v31;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v3 + 144) = sub_2119E1B00((uint64_t)v9, (uint64_t)&unk_254ACA008, v37);
  return swift_release();
}

uint64_t sub_211997434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[16] = a8;
  v8[17] = v12;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  v9 = sub_211A47400();
  v8[18] = v9;
  v8[19] = *(_QWORD *)(v9 - 8);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v10 = sub_211A48030();
  v8[22] = v10;
  v8[23] = *(_QWORD *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119974D8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 200) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 96) = 0x403E000000000000;
    if (qword_254AC7B90 != -1)
      swift_once();
    v2 = swift_task_alloc();
    *(_BYTE *)(v2 + 16) = 3;
    *(_QWORD *)(v2 + 24) = v0 + 96;
    sub_211A47DA8();
    swift_task_dealloc();
    v3 = sub_211A48378();
    v5 = v4;
    sub_211A48024();
    v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))&aQ_0[*(int *)aQ_0];
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v6;
    *v6 = v0;
    v6[1] = sub_21199765C;
    return v8(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21199765C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[23] + 8))(v2[24], v2[22]);
  return swift_task_switch();
}

uint64_t sub_2119976D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0 + 216);
  sub_211A47BC8();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (*(_QWORD *)(v0 + 128))
      v3 = swift_bridgeObjectRetain();
    else
      v3 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(v0 + 224) = v3;
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 152);
    *(_DWORD *)(v0 + 256) = *MEMORY[0x24BE31D00];
    v6 = *(void (**)(uint64_t))(v5 + 104);
    *(_QWORD *)(v0 + 232) = v6;
    v6(v4);
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
}

uint64_t sub_2119977AC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211997804()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0[21];
  v2 = v0[18];
  v3 = v0[19];
  sub_211997A20(v0[14], v0[15], v0[28], 65792, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[30] = (uint64_t)v4;
  v4(v1, v2);
  return swift_task_switch();
}

uint64_t sub_211997898()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v2 = *(unsigned int *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  sub_211958C38((uint64_t *)&unk_254ACC540);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 248) = inited;
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v5;
  v1(v3, v2, v4);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_211997940()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 248) + 16)
    && MEMORY[0x212BE496C](*(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(2, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 248));
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  return swift_task_switch();
}

uint64_t sub_2119979D0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211997A20(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  uint64_t v21;

  v6 = v5;
  v12 = sub_211A47400();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a5, v12);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x24BE31D08])
  {
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *(_QWORD *)(v6 + 120);
    *(_QWORD *)(v6 + 120) = 0x8000000000000000;
    sub_211A43FCC(a1, a2, a3, a4 & 0x10101, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v6 + 120) = v21;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  if (v17 == *MEMORY[0x24BE31D00])
  {
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v21 = *(_QWORD *)(v6 + 128);
    *(_QWORD *)(v6 + 128) = 0x8000000000000000;
    sub_211A43FCC(a1, a2, a3, a4 & 0x10101, a1, a2, v19);
    *(_QWORD *)(v6 + 128) = v21;
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_211997C1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_211997CA4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  int isUniquelyReferenced_nonNull_native;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v62 = (uint64_t *)(v0 + 144);
  v64 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_211948C10(0, v2, 0);
  v3 = 0;
  v4 = v64;
  v5 = *(_QWORD *)(v64 + 16);
  v6 = 16 * v5;
  do
  {
    v8 = *(_QWORD *)(v1 + v3 + 32);
    v7 = *(_QWORD *)(v1 + v3 + 40);
    v64 = v4;
    v9 = *(_QWORD *)(v4 + 24);
    v10 = v5 + 1;
    swift_bridgeObjectRetain();
    if (v5 >= v9 >> 1)
    {
      sub_211948C10(v9 > 1, v10, 1);
      v4 = v64;
    }
    *(_QWORD *)(v4 + 16) = v10;
    v11 = v4 + v6;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v7;
    v6 += 16;
    v3 += 32;
    ++v5;
    --v2;
  }
  while (v2);
  v12 = *(unsigned int *)(v63 + 400);
  v13 = *(_QWORD *)(v63 + 288);
  v15 = *(_QWORD *)(v63 + 264);
  v14 = *(_QWORD *)(v63 + 272);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v13, v12, v15);
  if (*(_QWORD *)(v4 + 16)
    && MEMORY[0x212BE496C](*(_QWORD *)(v63 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(1, *(_QWORD *)(v63 + 288), v4);
    swift_unknownObjectRelease();
  }
  swift_release();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 336);
  v17 = *(_QWORD *)(v63 + 280);
  v18 = *(_QWORD *)(v63 + 264);
  v19 = *(_QWORD *)(v63 + 184);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 + 272) + 8);
  v20(*(_QWORD *)(v63 + 288), v18);
  v21 = *(_QWORD *)(v63 + 144);
  v16(v17, v19, v18);
  swift_bridgeObjectRetain();
  v22 = sub_211A47724();
  v23 = sub_211A47D30();
  v24 = os_log_type_enabled(v22, v23);
  v25 = *(_QWORD *)(v63 + 280);
  v26 = *(_QWORD *)(v63 + 264);
  if (v24)
  {
    v27 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v64 = v61;
    *(_DWORD *)v27 = 134218242;
    *(_QWORD *)(v63 + 160) = *(_QWORD *)(v21 + 16);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
    v28 = sub_211A4821C();
    *(_QWORD *)(v63 + 152) = sub_211950A9C(v28, v29, &v64);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    v20(v25, v26);
    _os_log_impl(&dword_21190D000, v22, v23, "FMFSecureLocationCtrl: add handles to location stream: %ld friends, mode: %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v61, -1, -1);
    MEMORY[0x212BE48A0](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v20(v25, v26);
  }

  swift_beginAccess();
  v30 = *v62;
  v31 = *(_QWORD *)(*v62 + 16);
  if (!v31)
  {
    v0 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x24BEE4AF8];
LABEL_37:
    *(_QWORD *)(v0 + 368) = v33;
    v58 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 112);
    *(_QWORD *)(v0 + 376) = v58;
    if (v58)
    {
      swift_retain();
      v59 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v59;
      *v59 = v0;
      v59[1] = sub_2119982E4;
      return sub_211A47568();
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRetain_n();
  v32 = (char *)(v30 + 58);
  v33 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v34 = *v32;
    v35 = *(v32 - 1);
    v36 = *(v32 - 2);
    v64 = *(_QWORD *)(v32 - 26);
    v65 = *(_OWORD *)(v32 - 18);
    v66 = v36;
    v67 = v35;
    v68 = v34;
    sub_21199A700((uint64_t)&v64, &v69);
    v37 = v69;
    v38 = *(_QWORD *)(v69 + 16);
    v39 = *(_QWORD *)(v33 + 16);
    v40 = v39 + v38;
    if (__OFADD__(v39, v38))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v40 <= *(_QWORD *)(v33 + 24) >> 1)
    {
      if (*(_QWORD *)(v37 + 16))
        goto LABEL_26;
    }
    else
    {
      if (v39 <= v40)
        v42 = v39 + v38;
      else
        v42 = v39;
      v33 = sub_211947D7C(isUniquelyReferenced_nonNull_native, v42, 1, v33);
      if (*(_QWORD *)(v37 + 16))
      {
LABEL_26:
        v43 = *(_QWORD *)(v33 + 16);
        v44 = (*(_QWORD *)(v33 + 24) >> 1) - v43;
        v45 = sub_211A474D8();
        if (v44 < v38)
          goto LABEL_42;
        v46 = *(_QWORD *)(v45 - 8);
        v47 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        v48 = *(_QWORD *)(v46 + 72);
        v49 = v33 + v47 + v48 * v43;
        v50 = v37 + v47;
        v51 = v48 * v38;
        v52 = v49 + v51;
        v53 = v50 + v51;
        if (v50 < v52 && v49 < v53)
          return sub_211A480D8();
        swift_arrayInitWithCopy();
        if (v38)
        {
          v55 = *(_QWORD *)(v33 + 16);
          v56 = __OFADD__(v55, v38);
          v57 = v55 + v38;
          if (v56)
            goto LABEL_43;
          *(_QWORD *)(v33 + 16) = v57;
        }
        goto LABEL_16;
      }
    }
    if (v38)
    {
      __break(1u);
      break;
    }
LABEL_16:
    v32 += 32;
    swift_bridgeObjectRelease();
    if (!--v31)
    {
      v0 = v63;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return sub_211A480D8();
}

