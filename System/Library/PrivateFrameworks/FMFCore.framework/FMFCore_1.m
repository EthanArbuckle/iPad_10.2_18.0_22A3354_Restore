uint64_t sub_2119982E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_211998364()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199842C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119984FC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119985CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v8 = sub_211A47400();
  v7[17] = v8;
  v7[18] = *(_QWORD *)(v8 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  v9 = sub_211A48030();
  v7[21] = v9;
  v7[22] = *(_QWORD *)(v9 - 8);
  v7[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211998668()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 192) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 96) = 0x403E000000000000;
    if (qword_254AC7B90 != -1)
      swift_once();
    v2 = swift_task_alloc();
    *(_BYTE *)(v2 + 16) = 3;
    *(_QWORD *)(v2 + 24) = v0 + 96;
    sub_211A47DA8();
    swift_task_dealloc();
    v3 = sub_211A48378();
    v5 = v4;
    sub_211A48024();
    v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))&aQ_0[*(int *)aQ_0];
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v6;
    *v6 = v0;
    v6[1] = sub_2119987EC;
    return v8(v3, v5, 0, 0, 1);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119987EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[22] + 8))(v2[23], v2[21]);
  return swift_task_switch();
}

uint64_t sub_211998860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 208);
  sub_211A47BC8();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = sub_211A47748();
    sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
    v4 = sub_211A47724();
    v5 = sub_211A47D30();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_21190D000, v4, v5, "FMFSecureLocationCtrl: Stop initial live locating spinners", v6, 2u);
      MEMORY[0x212BE48A0](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 144);

    *(_DWORD *)(v0 + 240) = *MEMORY[0x24BE31D00];
    v9 = *(void (**)(uint64_t))(v8 + 104);
    *(_QWORD *)(v0 + 216) = v9;
    v9(v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
}

uint64_t sub_2119989F0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  void *v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 208);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFSecureLocationCtrl: Live loading task cancelled", v6, 2u);
    MEMORY[0x212BE48A0](v6, -1, -1);
  }

  sub_211A47BC8();
  if (qword_254AC7B80 != -1)
    swift_once();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21190D000, v7, v8, "FMFSecureLocationCtrl: Stop initial live locating spinners", v9, 2u);
    MEMORY[0x212BE48A0](v9, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(_QWORD *)(v0 + 144);

  *(_DWORD *)(v0 + 240) = *MEMORY[0x24BE31D00];
  v12 = *(void (**)(uint64_t))(v11 + 104);
  *(_QWORD *)(v0 + 216) = v12;
  v12(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_211998C34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0[20];
  v2 = v0[17];
  v3 = v0[18];
  sub_211997A20(v0[14], v0[15], v0[16], 0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[28] = (uint64_t)v4;
  v4(v1, v2);
  return swift_task_switch();
}

uint64_t sub_211998CC4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  v2 = *(unsigned int *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  sub_211958C38((uint64_t *)&unk_254ACC540);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 232) = inited;
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v5;
  v1(v3, v2, v4);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_211998D6C()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 232) + 16)
    && MEMORY[0x212BE496C](*(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(0, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 232));
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  return swift_task_switch();
}

uint64_t sub_211998DFC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211998E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_211A47400();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211998EE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  int v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  os_log_type_t typea;
  uint64_t type;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  __int128 v110;
  char v111;
  char v112;
  char v113;
  uint64_t v114;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = v0[21];
  v4 = v0[15];
  v3 = v0[16];
  v5 = v0[13];
  v6 = sub_211A47748();
  v0[22] = sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[23] = (uint64_t)v7;
  v7(v2, v5, v4);
  swift_bridgeObjectRetain();
  v8 = sub_211A47724();
  v9 = sub_211A47D30();
  v10 = os_log_type_enabled(v8, v9);
  v11 = v0[21];
  v13 = v0[15];
  v12 = v0[16];
  v14 = v0[12];
  v104 = v0 + 12;
  if (v10)
  {
    typea = v9;
    v15 = swift_slowAlloc();
    v107 = swift_slowAlloc();
    v109 = v107;
    *(_DWORD *)v15 = 134218242;
    v0[10] = *(_QWORD *)(v14 + 16);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
    v16 = sub_211A4821C();
    v0[11] = sub_211950A9C(v16, v17, &v109);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v11, v13);
    _os_log_impl(&dword_21190D000, v8, typea, "FMFSecureLocationCtrl: stop refreshing location: %ld friends, mode: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v107, -1, -1);
    MEMORY[0x212BE48A0](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v11, v13);
  }

  v1[24] = (uint64_t)v18;
  v19 = *(_QWORD *)(v1[12] + 16);
  v1[25] = v19;
  v20 = v1;
  if (!v19)
  {
    v22 = MEMORY[0x24BEE4AF8];
    v47 = v104;
LABEL_30:
    v20[26] = v22;
    v48 = *(_QWORD *)(v20[14] + 112);
    v20[27] = v48;
    if (v48)
    {
      swift_retain();
      v49 = (_QWORD *)swift_task_alloc();
      v20[28] = (uint64_t)v49;
      *v49 = v20;
      v49[1] = sub_2119998E4;
      return sub_211A47544();
    }
    swift_bridgeObjectRelease();
    v52 = v20 + 20;
    v51 = v20[20];
    v54 = v20[15];
    v53 = v20[16];
    ((void (*)(uint64_t, uint64_t, uint64_t))v20[23])(v51, v20[13], v54);
    v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 88))(v51, v54);
    v56 = v55;
    v108 = v20;
    if ((_DWORD)v55 == *MEMORY[0x24BE31D08])
    {
      v57 = MEMORY[0x24BEE4AF8];
      if (v20[25])
      {
        v100 = v55;
        v58 = (uint64_t *)(v20[14] + 120);
        v59 = 0;
        type = swift_bridgeObjectRetain();
        v60 = type + 48;
        do
        {
          v63 = *(_QWORD *)(v60 - 16);
          v62 = *(_QWORD *)(v60 - 8);
          swift_beginAccess();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v64 = sub_21195BB68(v63, v62);
          v66 = v65;
          swift_bridgeObjectRelease();
          if ((v66 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v68 = *v58;
            v109 = *v58;
            *v58 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_211A44EF0();
              v68 = v109;
            }
            swift_bridgeObjectRelease();
            sub_211A43354(v64, v68);
            *v58 = v68;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          ++v59;
          v61 = v108[25];
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 += 32;
        }
        while (v59 != v61);
        v79 = v108[25];
        swift_bridgeObjectRelease();
        v109 = v57;
        sub_211948C10(0, v79, 0);
        v80 = 0;
        v20 = v108;
        v57 = v109;
        v105 = *(_QWORD *)(v109 + 16);
        v81 = 16 * v105;
        v82 = (uint64_t *)(type + 40);
        do
        {
          v84 = *(v82 - 1);
          v83 = *v82;
          v109 = v57;
          v85 = *(_QWORD *)(v57 + 24);
          v86 = v105 + v80 + 1;
          swift_bridgeObjectRetain();
          if (v105 + v80 >= v85 >> 1)
          {
            sub_211948C10(v85 > 1, v86, 1);
            v57 = v109;
          }
          v87 = v108[25];
          ++v80;
          *(_QWORD *)(v57 + 16) = v86;
          v88 = v57 + v81;
          *(_QWORD *)(v88 + 32) = v84;
          *(_QWORD *)(v88 + 40) = v83;
          v81 += 16;
          v82 += 4;
        }
        while (v80 != v87);
        v56 = v100;
      }
      v52 = v20 + 19;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20[16] + 104))(v20[19], v56, v20[15]);
    }
    else
    {
      if ((_DWORD)v55 != *MEMORY[0x24BE31D00])
      {
LABEL_69:
        ((void (*)(uint64_t, uint64_t))v20[24])(*v52, v20[15]);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return ((uint64_t (*)(void))v20[1])();
      }
      v101 = v55;
      if (v20[25])
      {
        v69 = (uint64_t *)(v20[14] + 128);
        v70 = 0;
        v71 = swift_bridgeObjectRetain() + 48;
        do
        {
          v73 = *(_QWORD *)(v71 - 16);
          v74 = *(_QWORD *)(v71 - 8);
          swift_beginAccess();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v75 = sub_21195BB68(v73, v74);
          LOBYTE(v73) = v76;
          swift_bridgeObjectRelease();
          if ((v73 & 1) != 0)
          {
            v77 = swift_isUniquelyReferenced_nonNull_native();
            v78 = *v69;
            v109 = *v69;
            *v69 = 0x8000000000000000;
            if ((v77 & 1) == 0)
            {
              sub_211A44EF0();
              v78 = v109;
            }
            swift_bridgeObjectRelease();
            sub_211A43354(v75, v78);
            *v69 = v78;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v20 = v108;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          ++v70;
          v72 = v20[25];
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v71 += 32;
        }
        while (v70 != v72);
        v47 = v104;
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v20[14] + 144))
      {
        swift_retain();
        sub_211958C38(&qword_254ACC360);
        sub_211A47BB0();
        swift_release();
      }
      v89 = v20[25];
      v57 = MEMORY[0x24BEE4AF8];
      if (v89)
      {
        v90 = *v47;
        v109 = MEMORY[0x24BEE4AF8];
        sub_211948C10(0, v89, 0);
        v91 = 0;
        v20 = v108;
        v57 = v109;
        v106 = *(_QWORD *)(v109 + 16);
        v92 = 16 * v106;
        v93 = (uint64_t *)(v90 + 40);
        do
        {
          v95 = *(v93 - 1);
          v94 = *v93;
          v109 = v57;
          v96 = *(_QWORD *)(v57 + 24);
          v97 = v106 + v91 + 1;
          swift_bridgeObjectRetain();
          if (v106 + v91 >= v96 >> 1)
          {
            sub_211948C10(v96 > 1, v97, 1);
            v57 = v109;
          }
          v98 = v108[25];
          ++v91;
          *(_QWORD *)(v57 + 16) = v97;
          v99 = v57 + v92;
          *(_QWORD *)(v99 + 32) = v95;
          *(_QWORD *)(v99 + 40) = v94;
          v92 += 16;
          v93 += 4;
        }
        while (v91 != v98);
      }
      v52 = v20 + 18;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v20[16] + 104))(v20[18], v101, v20[15]);
    }
    if (*(_QWORD *)(v57 + 16))
    {
      if (MEMORY[0x212BE496C](v20[14] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
      {
        sub_21191F7D8(0, *v52, v57);
        swift_unknownObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_69;
  }
  v21 = (char *)(swift_bridgeObjectRetain() + 58);
  v22 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v23 = *v21;
    v24 = *(v21 - 1);
    v25 = *(v21 - 2);
    v109 = *(_QWORD *)(v21 - 26);
    v110 = *(_OWORD *)(v21 - 18);
    v111 = v25;
    v112 = v24;
    v113 = v23;
    sub_21199A700((uint64_t)&v109, &v114);
    v26 = v114;
    v27 = *(_QWORD *)(v114 + 16);
    v28 = *(_QWORD *)(v22 + 16);
    v29 = v28 + v27;
    if (__OFADD__(v28, v27))
      break;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    if (v30 && v29 <= *(_QWORD *)(v22 + 24) >> 1)
    {
      if (*(_QWORD *)(v26 + 16))
        goto LABEL_19;
    }
    else
    {
      if (v28 <= v29)
        v31 = v28 + v27;
      else
        v31 = v28;
      v22 = sub_211947D7C(v30, v31, 1, v22);
      if (*(_QWORD *)(v26 + 16))
      {
LABEL_19:
        v32 = *(_QWORD *)(v22 + 16);
        v33 = (*(_QWORD *)(v22 + 24) >> 1) - v32;
        v34 = sub_211A474D8();
        if (v33 < v27)
          goto LABEL_72;
        v35 = *(_QWORD *)(v34 - 8);
        v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        v37 = *(_QWORD *)(v35 + 72);
        v38 = v22 + v36 + v37 * v32;
        v39 = v26 + v36;
        v40 = v37 * v27;
        v41 = v38 + v40;
        v42 = v39 + v40;
        if (v39 < v41 && v38 < v42)
          return sub_211A480D8();
        swift_arrayInitWithCopy();
        if (v27)
        {
          v44 = *(_QWORD *)(v22 + 16);
          v45 = __OFADD__(v44, v27);
          v46 = v44 + v27;
          if (v45)
            goto LABEL_73;
          *(_QWORD *)(v22 + 16) = v46;
        }
        goto LABEL_9;
      }
    }
    if (v27)
    {
      __break(1u);
      break;
    }
LABEL_9:
    v21 += 32;
    swift_bridgeObjectRelease();
    if (!--v19)
    {
      v47 = v104;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
  return sub_211A480D8();
}

uint64_t sub_2119998E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_211999964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = (uint64_t *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 184))(v1, *(_QWORD *)(v0 + 104), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  v6 = v5;
  v56 = v0;
  if ((_DWORD)v5 == *MEMORY[0x24BE31D08])
  {
    v7 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v0 + 200))
    {
      v54 = v5;
      v8 = (uint64_t *)(*(_QWORD *)(v0 + 112) + 120);
      v9 = 0;
      v53 = swift_bridgeObjectRetain();
      v10 = v53 + 48;
      do
      {
        v13 = *(_QWORD *)(v10 - 16);
        v12 = *(_QWORD *)(v10 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = sub_21195BB68(v13, v12);
        v16 = v15;
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v18 = *v8;
          v57 = *v8;
          *v8 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_211A44EF0();
            v18 = v57;
          }
          swift_bridgeObjectRelease();
          sub_211A43354(v14, v18);
          *v8 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v9;
        v11 = *(_QWORD *)(v56 + 200);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 += 32;
      }
      while (v9 != v11);
      v29 = *(_QWORD *)(v56 + 200);
      swift_bridgeObjectRelease();
      sub_211948C10(0, v29, 0);
      v30 = 0;
      v31 = *(_QWORD *)(v7 + 16);
      v32 = 16 * v31;
      v33 = (uint64_t *)(v53 + 40);
      do
      {
        v35 = *(v33 - 1);
        v34 = *v33;
        v36 = *(_QWORD *)(v7 + 24);
        v37 = v31 + v30 + 1;
        swift_bridgeObjectRetain();
        if (v31 + v30 >= v36 >> 1)
          sub_211948C10(v36 > 1, v31 + v30 + 1, 1);
        v38 = *(_QWORD *)(v56 + 200);
        ++v30;
        *(_QWORD *)(v7 + 16) = v37;
        v39 = v7 + v32;
        *(_QWORD *)(v39 + 32) = v35;
        *(_QWORD *)(v39 + 40) = v34;
        v32 += 16;
        v33 += 4;
      }
      while (v30 != v38);
      v0 = v56;
      v6 = v54;
    }
    v2 = (uint64_t *)(v0 + 152);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 104))(*(_QWORD *)(v0 + 152), v6, *(_QWORD *)(v0 + 120));
  }
  else
  {
    if ((_DWORD)v5 != *MEMORY[0x24BE31D00])
      goto LABEL_39;
    v55 = v5;
    if (*(_QWORD *)(v0 + 200))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v0 + 112) + 128);
      v20 = 0;
      v21 = swift_bridgeObjectRetain() + 48;
      do
      {
        v23 = *(_QWORD *)(v21 - 16);
        v24 = *(_QWORD *)(v21 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = sub_21195BB68(v23, v24);
        LOBYTE(v23) = v26;
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          v27 = swift_isUniquelyReferenced_nonNull_native();
          v28 = *v19;
          v58 = *v19;
          *v19 = 0x8000000000000000;
          if ((v27 & 1) == 0)
          {
            sub_211A44EF0();
            v28 = v58;
          }
          swift_bridgeObjectRelease();
          sub_211A43354(v25, v28);
          *v19 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0 = v56;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v20;
        v22 = *(_QWORD *)(v0 + 200);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 += 32;
      }
      while (v20 != v22);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(*(_QWORD *)(v0 + 112) + 144))
    {
      swift_retain();
      sub_211958C38(&qword_254ACC360);
      sub_211A47BB0();
      swift_release();
    }
    v40 = *(_QWORD *)(v0 + 200);
    v7 = MEMORY[0x24BEE4AF8];
    if (v40)
    {
      v41 = *(_QWORD *)(v0 + 96);
      v59 = MEMORY[0x24BEE4AF8];
      sub_211948C10(0, v40, 0);
      v42 = 0;
      v7 = v59;
      v43 = *(_QWORD *)(v59 + 16);
      v44 = 16 * v43;
      v45 = (uint64_t *)(v41 + 40);
      do
      {
        v47 = *(v45 - 1);
        v46 = *v45;
        v48 = *(_QWORD *)(v59 + 24);
        v49 = v43 + v42 + 1;
        swift_bridgeObjectRetain();
        if (v43 + v42 >= v48 >> 1)
          sub_211948C10(v48 > 1, v43 + v42 + 1, 1);
        v50 = *(_QWORD *)(v56 + 200);
        ++v42;
        *(_QWORD *)(v59 + 16) = v49;
        v51 = v59 + v44;
        *(_QWORD *)(v51 + 32) = v47;
        *(_QWORD *)(v51 + 40) = v46;
        v44 += 16;
        v45 += 4;
      }
      while (v42 != v50);
      v0 = v56;
    }
    v2 = (uint64_t *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 104))(*(_QWORD *)(v0 + 144), v55, *(_QWORD *)(v0 + 120));
  }
  if (*(_QWORD *)(v7 + 16)
    && MEMORY[0x212BE496C](*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(0, *v2, v7);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_39:
  (*(void (**)(uint64_t, _QWORD))(v0 + 192))(*v2, *(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211999F10()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v72;
  id v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t);
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;

  v1 = (void *)v0[29];
  ((void (*)(_QWORD, _QWORD, _QWORD))v0[23])(v0[17], v0[13], v0[15]);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  v79 = v0;
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[29];
    v75 = (void (*)(uint64_t, uint64_t))v0[24];
    v7 = v0[17];
    v8 = v0[15];
    v9 = swift_slowAlloc();
    v72 = (_QWORD *)swift_slowAlloc();
    v78 = swift_slowAlloc();
    v80 = v78;
    *(_DWORD *)v9 = 138412546;
    v10 = v6;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    v79[8] = v11;
    sub_211A47E2C();
    *v72 = v11;
    v73 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
    v12 = v4;
    v13 = v8;
    v14 = sub_211A4821C();
    v79[9] = sub_211950A9C(v14, v15, &v80);
    v0 = v79;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    v75(v7, v13);
    _os_log_impl(&dword_21190D000, v12, v5, "FMFSecureLocationCtrl: Error when trying to stop refreshing locations: %@ mode: %s", (uint8_t *)v9, 0x16u);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v72, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v78, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {
    v16 = (void *)v0[29];
    v17 = (void (*)(uint64_t, uint64_t))v0[24];
    v18 = v0[17];
    v19 = v0[15];

    v17(v18, v19);
  }
  v21 = v0 + 20;
  v20 = v0[20];
  v22 = v0[15];
  v23 = v0[16];
  ((void (*)(uint64_t, _QWORD, uint64_t))v0[23])(v20, v0[13], v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v20, v22);
  v25 = v24;
  if ((_DWORD)v24 == *MEMORY[0x24BE31D08])
  {
    v26 = MEMORY[0x24BEE4AF8];
    if (v0[25])
    {
      v76 = v24;
      v27 = (uint64_t *)(v0[14] + 120);
      v28 = 0;
      v74 = (char *)swift_bridgeObjectRetain();
      v29 = v74 + 48;
      do
      {
        v32 = *((_QWORD *)v29 - 2);
        v31 = *((_QWORD *)v29 - 1);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v33 = sub_21195BB68(v32, v31);
        v35 = v34;
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v37 = *v27;
          v80 = *v27;
          *v27 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_211A44EF0();
            v37 = v80;
          }
          swift_bridgeObjectRelease();
          sub_211A43354(v33, v37);
          *v27 = v37;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v28;
        v30 = v79[25];
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 += 32;
      }
      while (v28 != v30);
      v48 = v79[25];
      swift_bridgeObjectRelease();
      v80 = v26;
      sub_211948C10(0, v48, 0);
      v49 = 0;
      v26 = v80;
      v50 = *(_QWORD *)(v80 + 16);
      v51 = 16 * v50;
      v52 = (uint64_t *)(v74 + 40);
      do
      {
        v54 = *(v52 - 1);
        v53 = *v52;
        v80 = v26;
        v55 = *(_QWORD *)(v26 + 24);
        v56 = v50 + v49 + 1;
        swift_bridgeObjectRetain();
        if (v50 + v49 >= v55 >> 1)
        {
          sub_211948C10(v55 > 1, v50 + v49 + 1, 1);
          v26 = v80;
        }
        v57 = v79[25];
        ++v49;
        *(_QWORD *)(v26 + 16) = v56;
        v58 = v26 + v51;
        *(_QWORD *)(v58 + 32) = v54;
        *(_QWORD *)(v58 + 40) = v53;
        v51 += 16;
        v52 += 4;
      }
      while (v49 != v57);
      v0 = v79;
      v25 = v76;
    }
    v21 = v0 + 19;
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[16] + 104))(v0[19], v25, v0[15]);
  }
  else
  {
    if ((_DWORD)v24 != *MEMORY[0x24BE31D00])
      goto LABEL_42;
    v77 = v24;
    if (v0[25])
    {
      v38 = (uint64_t *)(v0[14] + 128);
      v39 = 0;
      v40 = swift_bridgeObjectRetain() + 48;
      do
      {
        v42 = *(_QWORD *)(v40 - 16);
        v43 = *(_QWORD *)(v40 - 8);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44 = sub_21195BB68(v42, v43);
        LOBYTE(v42) = v45;
        swift_bridgeObjectRelease();
        if ((v42 & 1) != 0)
        {
          v46 = swift_isUniquelyReferenced_nonNull_native();
          v47 = *v38;
          v80 = *v38;
          *v38 = 0x8000000000000000;
          if ((v46 & 1) == 0)
          {
            sub_211A44EF0();
            v47 = v80;
          }
          swift_bridgeObjectRelease();
          sub_211A43354(v44, v47);
          *v38 = v47;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v0 = v79;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v39;
        v41 = v0[25];
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 += 32;
      }
      while (v39 != v41);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v0[14] + 144))
    {
      swift_retain();
      sub_211958C38(&qword_254ACC360);
      sub_211A47BB0();
      swift_release();
    }
    v59 = v0[25];
    v26 = MEMORY[0x24BEE4AF8];
    if (v59)
    {
      v60 = v0[12];
      v80 = MEMORY[0x24BEE4AF8];
      sub_211948C10(0, v59, 0);
      v61 = 0;
      v26 = v80;
      v62 = *(_QWORD *)(v80 + 16);
      v63 = 16 * v62;
      v64 = (uint64_t *)(v60 + 40);
      do
      {
        v66 = *(v64 - 1);
        v65 = *v64;
        v80 = v26;
        v67 = *(_QWORD *)(v26 + 24);
        v68 = v62 + v61 + 1;
        swift_bridgeObjectRetain();
        if (v62 + v61 >= v67 >> 1)
        {
          sub_211948C10(v67 > 1, v62 + v61 + 1, 1);
          v26 = v80;
        }
        v69 = v79[25];
        ++v61;
        *(_QWORD *)(v26 + 16) = v68;
        v70 = v26 + v63;
        *(_QWORD *)(v70 + 32) = v66;
        *(_QWORD *)(v70 + 40) = v65;
        v63 += 16;
        v64 += 4;
      }
      while (v61 != v69);
      v0 = v79;
    }
    v21 = v0 + 18;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 104))(v0[18], v77, v0[15]);
  }
  if (*(_QWORD *)(v26 + 16)
    && MEMORY[0x212BE496C](v0[14] + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate))
  {
    sub_21191F7D8(0, *v21, v26);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_42:
  ((void (*)(uint64_t, _QWORD))v0[24])(*v21, v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_21199A700@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_211A474D8();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  result = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v24[0] = a2;
    v24[1] = v2;
    v29 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211947C68(0, v11, 0);
    v13 = v29;
    result = sub_2119483E8(v10);
    v14 = result;
    v16 = v15;
    v18 = v17 & 1;
    v25 = v10;
    v26 = v10 + 56;
    while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v10 + 32))
    {
      if (((*(_QWORD *)(v26 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v10 + 36) != v16)
        goto LABEL_15;
      swift_bridgeObjectRetain_n();
      sub_211A264C0(v12);
      sub_211A474C0();
      swift_bridgeObjectRelease();
      v29 = v13;
      v19 = v9;
      v21 = *(_QWORD *)(v13 + 16);
      v20 = *(_QWORD *)(v13 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_211947C68(v20 > 1, v21 + 1, 1);
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v13+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v21, v19, v28);
      v10 = v25;
      result = sub_211947D78(v14, v16, v18 & 1, v25);
      v14 = result;
      v16 = v22;
      v18 = v23 & 1;
      --v11;
      v9 = v19;
      v12 = MEMORY[0x24BEE4AF8];
      if (!v11)
      {
        sub_2119A0BB0(result, v22, v23 & 1);
        result = swift_bridgeObjectRelease();
        a2 = (_QWORD *)v24[0];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
LABEL_12:
    *a2 = v13;
  }
  return result;
}

uint64_t sub_21199A93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v4 = sub_211A47400();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21199A9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 72) + 16))
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v1 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = sub_211A47748();
    sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v6(v1, v4, v2);
    v7 = sub_211A47724();
    v8 = sub_211A47D30();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    if (v9)
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v31 = v30;
      *(_DWORD *)v13 = 136315138;
      sub_211910908(&qword_254AC9FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE31D10], MEMORY[0x24BE31D18]);
      v14 = sub_211A4821C();
      *(_QWORD *)(v0 + 64) = sub_211950A9C(v14, v15, &v31);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v10, v11);
      _os_log_impl(&dword_21190D000, v7, v8, "FMFSecureLocationCtrl: startLocating secure friends called, with priority: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v30, -1, -1);
      MEMORY[0x212BE48A0](v13, -1, -1);
    }
    else
    {
      v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    }

    v19 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 96);
    v6(v18, *(_QWORD *)(v0 + 80), v20);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v18, v20);
    if (v21 == *MEMORY[0x24BE31D08] || v21 == *MEMORY[0x24BE31D00])
    {
      swift_beginAccess();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_2119A5574(v22);
      swift_bridgeObjectRelease();
      v24 = sub_211A1A6A0((uint64_t)v23);
      swift_release();
    }
    else
    {
      v16(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
      v24 = MEMORY[0x24BEE4B08];
    }
    v25 = swift_bridgeObjectRetain();
    v26 = sub_211A1A6A0(v25);
    swift_bridgeObjectRelease();
    v27 = sub_211996558(v26, v24);
    v28 = sub_2119A5490(v27);
    *(_QWORD *)(v0 + 128) = v28;
    swift_bridgeObjectRelease();
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v29;
    *v29 = v0;
    v29[1] = sub_21199AD28;
    return sub_211924638((uint64_t)v28, *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21199AD28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21199ADB0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199ADF8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211923EE8(v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp, qword_254AC8A78);
  sub_211962AB8(v0 + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_21199AE74()
{
  sub_21199ADF8();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21199AE8C()
{
  return type metadata accessor for FMFSecureLocationController(0);
}

_QWORD *sub_21199AE94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_211A47208();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_21199AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_211A47208();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_21199AF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_21199AFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_21199B024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_21199B088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_21199B0EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21199B0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_211A47208();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_21199B174()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21199B180(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v7 = sub_211A47208();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LiveRelabilityStats(uint64_t a1)
{
  return sub_21195A1F4(a1, qword_254AC9EE0);
}

uint64_t sub_21199B204()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A47208();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21199B284(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v5 = *(int *)(a3 + 32);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_211A47208();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = sub_211958C38(qword_254AC8A78);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_21199B37C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_211A47208();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t sub_21199B3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_211958C38(qword_254AC8A78);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_21199B4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = sub_211958C38(qword_254AC8A78);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_21199B5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_211958C38(qword_254AC8A78);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_21199B6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_211A47208();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = sub_211958C38(qword_254AC8A78);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_21199B7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v10);
  }
}

uint64_t sub_21199B838(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v7 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SecureFriend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureFriend(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

__n128 initializeWithTake for SecureFriend(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SecureFriend(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureFriend(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 27))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureFriend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 27) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_21199BA78()
{
  unint64_t result;

  result = qword_254AC9FC0;
  if (!qword_254AC9FC0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C234, &type metadata for SecureFriend);
    atomic_store(result, (unint64_t *)&qword_254AC9FC0);
  }
  return result;
}

uint64_t sub_21199BABC()
{
  uint64_t v0;

  return v0;
}

void sub_21199BAC8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;

  v2 = v1;
  v4 = sub_211958C38(&qword_254ACA0B8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (void **)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_21192C6B8(v2, (uint64_t)v7, &qword_254ACA0B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v7;
    v8 = v11;
    sub_211958C38(&qword_254ACC360);
    swift_willThrowTypedImpl();
    v11 = v8;
    if (sub_211A48234())
    {

    }
    else
    {
      swift_allocError();
      *v9 = v11;
    }
  }
  else
  {
    sub_21192DD68((uint64_t)v7, a1, &qword_254ACA060);
  }
}

uint64_t sub_21199BC4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[15] = v0[28];
  v0[10] = v0;
  v0[11] = sub_21199BCA4;
  v2 = swift_continuation_init();
  sub_21192D86C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_21199BCA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 368) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_21192DD68(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 192), &qword_254ACA058);
  return swift_task_switch();
}

uint64_t sub_21199BD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  sub_211923EE8(*(_QWORD *)(v0 + 264), &qword_254ACA0A0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_211923EE8(v2, &qword_254ACA0B0);
  sub_211923EE8(v1, &qword_254ACA0C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199BE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  sub_211923EE8(*(_QWORD *)(v0 + 264), &qword_254ACA0A0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_211923EE8(v1, &qword_254ACA0B0);
  sub_211923EE8(*(_QWORD *)(v0 + 360), &qword_254ACA0C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199BF5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[25];
  v0[7] = v0[27];
  v0[2] = v0;
  v0[3] = sub_21199BFB4;
  v2 = swift_continuation_init();
  sub_21192D86C(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_21199BFB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 376) = v2;
  if (v2)
    swift_willThrow();
  else
    sub_21192DD68(*(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 192), &qword_254ACA058);
  return swift_task_switch();
}

uint64_t sub_21199C034()
{
  uint64_t v0;

  sub_211923EE8(*(_QWORD *)(v0 + 360), &qword_254ACA0C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199C10C()
{
  uint64_t v0;

  sub_211923EE8(*(_QWORD *)(v0 + 360), &qword_254ACA0C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21199C1F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = sub_211958C38(&qword_254ACA058);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v6);
  sub_21199C534(a1);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  os_unfair_lock_unlock(v6);
  if (v8 >> 62)
  {
    if (v8 >> 62 == 1)
    {
      v13 = *(_QWORD *)(v10 + 16);
      if (v13)
      {
        v24 = v8;
        sub_211A47B5C();
        sub_211910908((unint64_t *)&qword_254ACA088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        v23 = v8 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        v14 = 0;
        do
        {
          ++v14;
          v15 = swift_allocError();
          sub_211A4782C();
          sub_211958C38(&qword_254ACC360);
          swift_allocError();
          *v16 = v15;
          swift_continuation_throwingResumeWithError();
        }
        while (v13 != v14);
        swift_bridgeObjectRelease();
        v8 = v24;
      }
      else
      {
        swift_retain();
      }
      sub_211A47BB0();
      sub_2119A0E98(v8);
      swift_release();
    }
  }
  else
  {
    v17 = *(_QWORD *)(v12 + 16);
    if (v17)
    {
      v23 = (uint64_t)v5;
      v24 = v8;
      sub_211A47B5C();
      sub_211910908((unint64_t *)&qword_254ACA088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v18 = 0;
      do
      {
        ++v18;
        v19 = swift_allocError();
        sub_211A4782C();
        sub_211958C38(&qword_254ACC360);
        swift_allocError();
        *v20 = v19;
        swift_continuation_throwingResumeWithError();
      }
      while (v17 != v18);
      swift_bridgeObjectRelease();
      v5 = (char *)v23;
      v8 = v24;
    }
    else
    {
      swift_retain();
    }
    sub_211A47BB0();
    v21 = sub_211958C38(&qword_254ACA060);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
    sub_21192DD68((uint64_t)v5, *(_QWORD *)(*(_QWORD *)(v8 + 64) + 40), &qword_254ACA058);
    swift_continuation_throwingResume();
    swift_release();
    sub_2119A0E98(v8);
  }
}

void sub_21199C534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = sub_211958C38(&qword_254ACA090);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 136);
  swift_beginAccess();
  sub_21192C6B8(v6, (uint64_t)v5, &qword_254ACA090);
  v7 = (char *)&loc_21199C5DC + *((int *)qword_21199C728 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

unint64_t sub_21199C5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_211958C38(&qword_254ACA098);
  v3 = v1 + *(int *)(v2 + 48);
  v4 = v1 + *(int *)(v2 + 64);
  sub_211923EE8(v0, &qword_254ACA090);
  swift_storeEnumTagMultiPayload();
  sub_211923EE8(v4, &qword_254ACA0A0);
  v5 = sub_211958C38(&qword_254ACA0A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  sub_211923EE8(v1, &qword_254ACA0B0);
  swift_endAccess();
  return 0x8000000000000000;
}

void sub_21199C6E0()
{
  uint64_t v0;

  swift_release();
  sub_211923EE8(v0, &qword_254ACA090);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x21199C6B0);
}

uint64_t sub_21199C73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21199C75C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_21199C7F4;
  return sub_211A480FC();
}

uint64_t sub_21199C7F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21199C844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[5] = a2;
  v6[10] = sub_211958C38(&qword_254ACA090);
  v6[11] = swift_task_alloc();
  sub_211958C38(&qword_254ACA0A0);
  v6[12] = swift_task_alloc();
  v7 = sub_211958C38(&qword_254ACA0A8);
  v6[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 + 64);
  v6[16] = swift_task_alloc();
  v9 = sub_211958C38(&qword_254ACA0B0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = *(_QWORD *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  sub_211958C38(&qword_254AC9FD0);
  v6[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21199C964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v29 = v3;
  v32 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 64);
  v8 = sub_211A47B8C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v2, 1, 1, v8);
  sub_21192C6B8(v6, v1, &qword_254ACA0B0);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_21192DD68(v1, v11 + v10, &qword_254ACA0B0);
  v24 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v11 + v24) = v7;
  swift_retain();
  sub_2119C641C(v2, (uint64_t)&unk_254ACA100, v11);
  sub_211923EE8(v2, &qword_254AC9FD0);
  v23 = v8;
  v9(v2, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v25, v26);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v13 + v12, v27, v26);
  *(_QWORD *)(v13 + ((v28 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_retain();
  sub_2119C641C(v2, (uint64_t)&unk_254ACA110, v13);
  sub_211923EE8(v2, &qword_254AC9FD0);
  sub_21192C6B8(v30, v31, &qword_254ACA0A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v32) == 1)
  {
    v14 = *(_QWORD *)(v0 + 96);
    v15 = &qword_254ACA0A0;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 48);
    sub_21192DD68(*(_QWORD *)(v0 + 96), v18, &qword_254ACA0B0);
    v9(v16, 1, 1, v23);
    sub_21192C6B8(v18, v17, &qword_254ACA0B0);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    sub_21192DD68(v17, v20 + v10, &qword_254ACA0B0);
    *(_QWORD *)(v20 + v24) = v19;
    swift_retain();
    sub_2119C641C(v16, (uint64_t)&unk_254ACA120, v20);
    sub_211923EE8(v16, &qword_254AC9FD0);
    v14 = v18;
    v15 = &qword_254ACA0B0;
  }
  sub_211923EE8(v14, v15);
  *(_QWORD *)(v0 + 184) = sub_211958C38(&qword_254ACC360);
  if ((sub_211A47BEC() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(**(_QWORD **)(v0 + 48) + 136);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v22;
    sub_211958C38(&qword_254ACA118);
    *v22 = v0;
    v22[1] = sub_21199CD54;
    return sub_211A47BE0();
  }
}

uint64_t sub_21199CD54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21199CDB8()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_211A47BEC() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v2;
    sub_211958C38(&qword_254ACA118);
    *v2 = v0;
    v2[1] = sub_21199CD54;
    return sub_211A47BE0();
  }
}

void sub_21199CEBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = v0[11];
  v2 = v0[6];
  v3 = v2 + v0[24];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  swift_beginAccess();
  sub_21192C6B8(v3, v1, &qword_254ACA090);
  v4 = (char *)&loc_21199CF44 + *((int *)qword_21199D400 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_21199CF5C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  void *v28;
  _QWORD *v30;
  void *v31;
  int v32;
  int v33;

  v2 = *(uint64_t **)(v0 + 88);
  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)v2[2];
  v6 = v2[4];
  if (v6)
  {
    v32 = v6;
    v7 = *(_QWORD *)(v3 + 24);
    swift_release();
    if (v7)
    {
      __break(1u);
      JUMPOUT(0x21199D3F8);
    }
    v8 = *(void **)(v0 + 208);
    sub_211923EE8(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 192), &qword_254ACA090);
    swift_storeEnumTagMultiPayload();
    v9 = v8;
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    v10 = v5[2];
    v11 = *(void **)(v0 + 208);
    if (v10)
    {
      v31 = v8;
      v12 = v11;
      sub_211A47B5C();
      sub_211910908((unint64_t *)&qword_254ACA088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v13 = 0;
      do
      {
        ++v13;
        v14 = swift_allocError();
        sub_211A4782C();
        swift_allocError();
        *v15 = v14;
        swift_continuation_throwingResumeWithError();
      }
      while (v10 != v13);
      swift_bridgeObjectRelease();
      v8 = v31;
    }
    else
    {
      v24 = v11;
      swift_retain();
    }
    v25 = *(_QWORD *)(v0 + 208);
    sub_211A47BB0();
    swift_allocError();
    *v26 = v25;
    v23 = v32;
    swift_continuation_throwingResumeWithError();
    swift_release();
    v27 = v4 | 0x4000000000000000;
  }
  else
  {
    v33 = v4;
    v16 = *(void **)(v0 + 208);
    v17 = (_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 192));
    sub_211923EE8((uint64_t)v17, &qword_254ACA090);
    *v17 = v3;
    v17[1] = v16;
    swift_storeEnumTagMultiPayload();
    v18 = v16;
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    v19 = v5[2];
    if (v19)
    {
      sub_211A47B5C();
      sub_211910908((unint64_t *)&qword_254ACA088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v20 = 0;
      do
      {
        ++v20;
        v21 = swift_allocError();
        sub_211A4782C();
        swift_allocError();
        *v22 = v21;
        swift_continuation_throwingResumeWithError();
      }
      while (v19 != v20);
      swift_bridgeObjectRelease();
      v23 = v33;
    }
    else
    {
      v23 = v33;
      swift_retain();
    }
    v8 = v5;
    sub_211A47BB0();
    swift_release();
    v27 = 0;
  }
  v28 = *(void **)(v0 + 208);
  sub_211A47BF8();
  sub_2119A13EC(v23, v8, v27);

  if ((sub_211A47BEC() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v30;
    sub_211958C38(&qword_254ACA118);
    *v30 = v0;
    v30[1] = sub_21199CD54;
    return sub_211A47BE0();
  }
}

uint64_t sub_21199D414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[17] = a4;
  v5[18] = a5;
  v5[19] = sub_211958C38(&qword_254ACA090);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_211958C38(&qword_254ACA128);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_211958C38(&qword_254ACA058);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v6 = sub_211958C38(&qword_254ACA060);
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v7 = sub_211958C38(&qword_254ACA0A8);
  v5[30] = v7;
  v5[31] = *(_QWORD *)(v7 - 8);
  v5[32] = swift_task_alloc();
  v8 = sub_211958C38(&qword_254ACA130);
  v5[33] = v8;
  v5[34] = *(_QWORD *)(v8 - 8);
  v5[35] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21199D580()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[18];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[31] + 16))(v0[32], v0[17], v0[30]);
  sub_21193AC74(&qword_254ACA138, &qword_254ACA0A8, MEMORY[0x24BEE6F08]);
  sub_211A47C04();
  v0[36] = *(_QWORD *)(*v1 + 136);
  v0[37] = v1[2];
  return swift_task_switch();
}

uint64_t sub_21199D620()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = (os_unfair_lock_s *)v0[37];
  v0[2] = v0;
  v0[3] = sub_21199D718;
  swift_continuation_init();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  sub_21191A134();
  v3 = v2;
  swift_endAccess();
  os_unfair_lock_unlock(v1);
  if (v3 >> 62)
  {
    if (v3 >> 62 == 1)
    {
      sub_211958C38(&qword_254ACC360);
      swift_allocError();
      *v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return swift_continuation_await();
}

uint64_t sub_21199D718()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[38] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_21193AC74(&qword_254ACA140, &qword_254ACA130, MEMORY[0x24BEE6EE0]);
    v4 = (_QWORD *)swift_task_alloc();
    v1[39] = v4;
    *v4 = v1;
    v4[1] = sub_21199D7F0;
    return sub_211A47B68();
  }
}

uint64_t sub_21199D7F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21199D854()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21199D91C()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  v1 = v0[25];
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0[27] + 48))(v1, 1, v0[26]);
  v3 = v0[36];
  v4 = (os_unfair_lock_s *)v0[37];
  if (v2 == 1)
  {
    v5 = v0[20];
    v6 = v0[18] + v3;
    sub_211923EE8(v1, &qword_254ACA058);
    os_unfair_lock_lock(v4);
    sub_21192C6B8(v6, v5, &qword_254ACA090);
    v7 = (char *)&loc_21199D9B4 + dword_21199E23C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v8 = v0[21];
  v9 = v0[18] + v3;
  sub_21192DD68(v1, v0[29], &qword_254ACA060);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_21192C6B8(v9, v8, &qword_254ACA090);
  v10 = (char *)&loc_21199DAB4 + *((int *)qword_21199E228 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_21199DAC4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v2 = (uint64_t *)v1[21];
  v4 = *v2;
  v3 = (_QWORD *)v2[1];
  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  if (!v7)
  {
    v13 = v1[18] + v1[36];
    v1[16] = v3;
    sub_211923EE8(v13, &qword_254ACA090);
    swift_storeEnumTagMultiPayload();
    v14 = v3[3];
    v15 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v3[2] < v15 || (isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2119A032C(v15);
        v3 = (_QWORD *)*v0;
      }
      v18 = v3[3];
      v17 = v3[4];
      v21 = __OFADD__(v17, v18);
      v19 = v17 + v18;
      if (!v21)
      {
        if (v18 < 0)
        {
          if ((v19 & 0x8000000000000000) == 0 || (v23 = v3[2], v21 = __OFADD__(v19, v23), v19 += v23, !v21))
          {
LABEL_16:
            sub_21192C6B8(v1[29], (uint64_t)v3+ ((*(unsigned __int8 *)(v1[27] + 80) + 40) & -(*(unsigned __int8 *)(v1[27] + 80) + 1))+ *(_QWORD *)(v1[27] + 72) * v19, &qword_254ACA060);
            v24 = v3[3];
            v21 = __OFADD__(v24, 1);
            v25 = v24 + 1;
            if (!v21)
            {
              v26 = v1[23];
              v27 = (_QWORD *)(v1[18] + v1[36]);
              v3[3] = v25;
              sub_211923EE8((uint64_t)v27, &qword_254ACA090);
              *v27 = v4;
              v27[1] = v3;
              v27[2] = v6;
              v27[3] = v5;
              v27[4] = 0;
              swift_storeEnumTagMultiPayload();
              v28 = sub_211958C38(&qword_254ACA150);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
              goto LABEL_18;
            }
            goto LABEL_24;
          }
        }
        else
        {
          v20 = v3[2];
          v21 = __OFSUB__(v19, v20);
          v22 = v19 - v20;
          if (v22 < 0 != v21)
            goto LABEL_16;
          v19 = v22;
          if (!v21)
            goto LABEL_16;
        }
LABEL_25:
        __break(1u);
        JUMPOUT(0x21199DDB4);
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v3[3])
  {
    __break(1u);
    JUMPOUT(0x21199E200);
  }
  v8 = v2[3];
  v41 = v1[29];
  v9 = (_QWORD *)v1[23];
  v10 = (_QWORD *)(v1[18] + v1[36]);
  sub_211923EE8((uint64_t)v10, &qword_254ACA090);
  *v10 = v4;
  v10[1] = v3;
  v10[2] = v6;
  v10[3] = v8;
  v10[4] = 0;
  swift_storeEnumTagMultiPayload();
  v11 = sub_211958C38(&qword_254ACA150);
  v12 = (uint64_t)v9 + *(int *)(v11 + 48);
  *v9 = v7;
  sub_21192C6B8(v41, v12, &qword_254ACA060);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
LABEL_18:
  v29 = (os_unfair_lock_s *)v1[37];
  v31 = v1[22];
  v30 = v1[23];
  swift_endAccess();
  os_unfair_lock_unlock(v29);
  sub_21192C6B8(v30, v31, &qword_254ACA128);
  v32 = sub_211958C38(&qword_254ACA150);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32) != 1)
  {
    v34 = v1[27];
    v33 = v1[28];
    v35 = v1[26];
    v36 = v1[24];
    v37 = (uint64_t *)v1[22];
    v38 = *v37;
    sub_21192DD68((uint64_t)v37 + *(int *)(v32 + 48), v33, &qword_254ACA060);
    sub_21192C6B8(v33, v36, &qword_254ACA060);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
    sub_21192DD68(v36, *(_QWORD *)(*(_QWORD *)(v38 + 64) + 40), &qword_254ACA058);
    swift_continuation_throwingResume();
    sub_211923EE8(v33, &qword_254ACA060);
  }
  v39 = v1[29];
  sub_211923EE8(v1[23], &qword_254ACA128);
  sub_211923EE8(v39, &qword_254ACA060);
  return swift_task_switch();
}

void sub_21199DB70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 160) + 8);
  swift_release();

  JUMPOUT(0x21199DDE0);
}

void sub_21199DB88()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 168) + 8);
  swift_release();

  JUMPOUT(0x21199DFE0);
}

void sub_21199DBA4()
{
  JUMPOUT(0x21199DFE0);
}

uint64_t sub_21199E250()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21199E318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[17] = a4;
  v5[18] = a5;
  v5[19] = sub_211958C38(&qword_254ACA090);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_211958C38(&qword_254ACA128);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  sub_211958C38(&qword_254ACA058);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v6 = sub_211958C38(&qword_254ACA060);
  v5[27] = v6;
  v5[28] = *(_QWORD *)(v6 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v7 = sub_211958C38(&qword_254ACA0D8);
  v5[33] = v7;
  v5[34] = *(_QWORD *)(v7 - 8);
  v5[35] = swift_task_alloc();
  v8 = sub_211958C38(&qword_254ACA160);
  v5[36] = v8;
  v5[37] = *(_QWORD *)(v8 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = sub_211958C38(&qword_254ACA0B0);
  v5[40] = swift_task_alloc();
  v5[41] = sub_211958C38(&qword_254ACA168);
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21199E508()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = v0[42];
  v2 = v0[40];
  v14 = v0[41];
  v3 = v0[38];
  v4 = v0[39];
  v6 = v0[36];
  v5 = v0[37];
  v8 = v0[34];
  v7 = v0[35];
  v9 = v0[33];
  v15 = (_QWORD *)v0[18];
  v16 = v0[43];
  sub_21192C6B8(v0[17], v2, &qword_254ACA0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v2, v9);
  sub_21193AC74(&qword_254ACA170, &qword_254ACA0D8, MEMORY[0x24BEE6F08]);
  sub_211A47C04();
  v10 = *(_QWORD *)(v2 + *(int *)(v4 + 52));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v0[44] = (uint64_t)v11;
  v11(v1, 1, 1, v6);
  v12 = (uint64_t *)(v1 + *(int *)(v14 + 52));
  *v12 = 1;
  v12[1] = 0;
  swift_bridgeObjectRetain();
  sub_211923EE8(v1, &qword_254ACA178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v6);
  v11(v1, 0, 1, v6);
  sub_211963710(*v12);
  *v12 = v10;
  v12[1] = 0;
  sub_21192DD68(v1, v16, &qword_254ACA168);
  sub_211923EE8(v2, &qword_254ACA0B0);
  v0[45] = *(_QWORD *)(*v15 + 136);
  v0[46] = v15[2];
  return swift_task_switch();
}

uint64_t sub_21199E690()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = (os_unfair_lock_s *)v0[46];
  v0[2] = v0;
  v0[3] = sub_21199E788;
  swift_continuation_init();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  sub_21191A134();
  v3 = v2;
  swift_endAccess();
  os_unfair_lock_unlock(v1);
  if (v3 >> 62)
  {
    if (v3 >> 62 == 1)
    {
      sub_211958C38(&qword_254ACC360);
      swift_allocError();
      *v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return swift_continuation_await();
}

uint64_t sub_21199E788()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 376) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_21199E7F4()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(v0[37] + 48))(v0[43], 1, v0[36]))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[28] + 56))(v0[25], 1, 1, v0[27]);
    v1 = v0[43];
    v2 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[44];
    v3 = v0[41];
    v4 = v0[36];
    sub_211923EE8(v0[25], &qword_254ACA058);
    sub_211923EE8(v1, &qword_254ACA178);
    v2(v1, 1, 1, v4);
    v5 = (uint64_t *)(v1 + *(int *)(v3 + 52));
    if (*v5 == 1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[28] + 56))(v0[26], 1, 1, v0[27]);
    }
    else
    {
      v8 = sub_211A47BBC();
      v9 = *v5;
      if ((v8 & 1) != 0 || !v9 || (v10 = v5[1], v11 = *(_QWORD *)(v9 + 16), v10 == v11))
      {
        v12 = v0[27];
        v13 = v0[28];
        v14 = v0[26];
        swift_bridgeObjectRelease();
        *v5 = 0;
        v5[1] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v14, 1, 1, v12);
      }
      else
      {
        if (v10 >= v11)
        {
          __break(1u);
          JUMPOUT(0x21199F330);
        }
        v25 = v0[30];
        v26 = v0[27];
        v27 = v0[28];
        v28 = v0[26];
        sub_21192C6B8(v9+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v10, v25, &qword_254ACA060);
        v5[1] = v10 + 1;
        sub_21192DD68(v25, v28, &qword_254ACA060);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
      }
    }
    v15 = v0[26];
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0[28] + 48))(v15, 1, v0[27]);
    v17 = v0[45];
    v18 = (os_unfair_lock_s *)v0[46];
    if (v16 == 1)
    {
      v19 = v0[20];
      v20 = v0[18] + v17;
      sub_211923EE8(v15, &qword_254ACA058);
      os_unfair_lock_lock(v18);
      sub_21192C6B8(v20, v19, &qword_254ACA090);
      v21 = (char *)&loc_21199E9EC + *((int *)qword_21199F368 + swift_getEnumCaseMultiPayload());
      __asm { BR              X10 }
    }
    v22 = v0[21];
    v23 = v0[18] + v17;
    sub_21192DD68(v15, v0[32], &qword_254ACA060);
    os_unfair_lock_lock(v18);
    swift_beginAccess();
    sub_21192C6B8(v23, v22, &qword_254ACA090);
    v24 = (char *)&loc_21199EAEC + dword_21199F354[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_21193AC74(&qword_254ACA180, &qword_254ACA160, MEMORY[0x24BEE6EE0]);
  v6 = (_QWORD *)swift_task_alloc();
  v0[48] = v6;
  *v6 = v0;
  v6[1] = sub_21199F37C;
  return sub_211A47B68();
}

uint64_t sub_21199F37C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_21199F3E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0[27];
  v2 = v0[28];
  v3 = v0[25];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[43];
    v5 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[44];
    v6 = v0[41];
    v7 = v0[36];
    sub_211923EE8(v3, &qword_254ACA058);
    sub_211923EE8(v4, &qword_254ACA178);
    v5(v4, 1, 1, v7);
    v8 = (uint64_t *)(v4 + *(int *)(v6 + 52));
    if (*v8 == 1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[28] + 56))(v0[26], 1, 1, v0[27]);
      goto LABEL_10;
    }
    v14 = sub_211A47BBC();
    v15 = *v8;
    if ((v14 & 1) == 0)
    {
      if (v15)
      {
        v16 = v8[1];
        v17 = *(_QWORD *)(v15 + 16);
        if (v16 != v17)
        {
          if (v16 >= v17)
          {
            __break(1u);
            JUMPOUT(0x21199FEE8);
          }
          v30 = v0[30];
          v31 = v0[27];
          v32 = v0[28];
          v33 = v0[26];
          sub_21192C6B8(v15+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v16, v30, &qword_254ACA060);
          v8[1] = v16 + 1;
          sub_21192DD68(v30, v33, &qword_254ACA060);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v31);
LABEL_10:
          v20 = v0[26];
          v21 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0[28] + 48))(v20, 1, v0[27]);
          v22 = v0[45];
          v23 = (os_unfair_lock_s *)v0[46];
          if (v21 == 1)
          {
            v24 = v0[20];
            v25 = v0[18] + v22;
            sub_211923EE8(v20, &qword_254ACA058);
            os_unfair_lock_lock(v23);
            sub_21192C6B8(v25, v24, &qword_254ACA090);
            v26 = (char *)&loc_21199F594 + *((int *)qword_21199FF10 + swift_getEnumCaseMultiPayload());
            __asm { BR              X10 }
          }
          v27 = v0[21];
          v28 = v0[18] + v22;
          sub_21192DD68(v20, v0[32], &qword_254ACA060);
          os_unfair_lock_lock(v23);
          swift_beginAccess();
          sub_21192C6B8(v28, v27, &qword_254ACA090);
          v29 = (char *)&loc_21199F694 + dword_21199FEFC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
      }
    }
    v1 = v0[27];
    v18 = v0[28];
    v19 = v0[26];
    swift_bridgeObjectRelease();
    *v8 = 0;
    v8[1] = 0;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v12 = v19;
    v13 = 1;
  }
  else
  {
    v9 = v0[31];
    v10 = v0[26];
    sub_21192DD68(v3, v9, &qword_254ACA060);
    sub_21192DD68(v9, v10, &qword_254ACA060);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v12 = v10;
    v13 = 0;
  }
  v11(v12, v13, 1, v1);
  goto LABEL_10;
}

uint64_t sub_21199FF24()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 288);
  sub_211923EE8(v1, &qword_254ACA178);
  v2(v1, 1, 1, v4);
  v5 = (uint64_t *)(v1 + *(int *)(v3 + 52));
  sub_211963710(*v5);
  *(_OWORD *)v5 = xmmword_211A4C0F0;
  swift_willThrow();
  sub_211923EE8(*(_QWORD *)(v0 + 344), &qword_254ACA168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119A00A0()
{
  uint64_t v0;

  sub_211923EE8(*(_QWORD *)(v0 + 344), &qword_254ACA168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119A01C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2119A01E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  sub_21192C6B8(*(_QWORD *)(v0 + 24), v1, &qword_254ACA028);
  v2 = sub_211958C38(&qword_254ACA028);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 2, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119A0244()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2119A02F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

size_t sub_2119A032C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t result;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 80);
    sub_211958C38(&qword_254ACA158);
    v13 = swift_allocObject();
    v17 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v13 + 16) = v4;
    *(_OWORD *)(v13 + 24) = v17;
    if ((uint64_t)v17 >= 1)
      sub_2119A08D0(v13 + 16, v13 + ((v16 + 40) & ~v16), v3, v2 + ((v16 + 40) & ~v16));
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  v7 = sub_211958C38(&qword_254ACA060);
  sub_211A476F4();
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v6 + 24);
    sub_211958C38(&qword_254ACA158);
    v11 = *(_QWORD *)(v8 + 72);
    v12 = (v9 + 40) & ~v9;
    v13 = swift_allocObject();
    result = j__malloc_size((const void *)v13);
    if (v11)
    {
      if (result - v12 != 0x8000000000000000 || v11 != -1)
      {
        *(_QWORD *)(v13 + 16) = (uint64_t)(result - v12) / v11;
        *(_QWORD *)(v13 + 24) = v10;
        *(_QWORD *)(v13 + 32) = 0;
        if (v10 >= 1)
        {
          swift_retain();
          sub_2119A0568(v13 + 16, v13 + v12, (_QWORD *)(v6 + 16), v6 + v12);
          *(_QWORD *)(v6 + 24) = 0;
          swift_release();
        }
LABEL_19:
        result = swift_release();
        *v1 = v13;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = *(_QWORD *)(v7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  sub_211958C38(&qword_254ACA158);
  v20 = *(_QWORD *)(v18 + 72);
  v21 = (v19 + 40) & ~v19;
  v13 = swift_allocObject();
  result = j__malloc_size((const void *)v13);
  if (!v20)
    goto LABEL_21;
  if (result - v21 != 0x8000000000000000 || v20 != -1)
  {
    v23 = *(_QWORD *)(v6 + 24);
    *(_QWORD *)(v13 + 16) = (uint64_t)(result - v21) / v20;
    *(_QWORD *)(v13 + 24) = v23;
    *(_QWORD *)(v13 + 32) = 0;
    if (v23 >= 1)
      sub_2119A0720(v13 + 16, v13 + v21, (_QWORD *)(v6 + 16), v6 + v21);
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_2119A0568(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BOOL4 v13;
  _BOOL4 v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  v8 = a3[1];
  if (v5 < v8)
  {
    v9 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v10 = sub_211958C38(&qword_254ACA060);
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v10 = sub_211958C38(&qword_254ACA060);
  v12 = 0;
  v9 = 0;
  v11 = v8;
LABEL_6:
  v13 = v5 < v8;
  v14 = v9 != 0;
  v15 = v13 && v14;
  if (v13 && v14)
    v16 = v12;
  else
    v16 = 0;
  if (v13 && v14)
    v17 = v9;
  else
    v17 = 0;
  if (v11 < 1)
  {
    v11 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v18 = a4 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v4;
  if (v18 > a2 || v18 + *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72) * v11 <= a2)
  {
    sub_211958C38(&qword_254ACA060);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v18 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
LABEL_20:
  if (!v15 || v17 <= 0)
    return;
  if (!v16)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72);
  v20 = a2 + v19 * v11;
  v21 = v16 + v19 * v17;
  if (v20 < v16 || v20 >= v21)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v16)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_2119A0720(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  if (v5 >= v8)
  {
    result = sub_211958C38(&qword_254ACA060);
    v12 = 0;
    v9 = 0;
    v11 = v8;
    if (v8 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v9 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = sub_211958C38(&qword_254ACA060);
  v11 = v5;
  v12 = a4;
  if (v5 < 1)
  {
LABEL_5:
    v11 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v4;
  v14 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72) * v11;
  v15 = a2 + v14;
  v16 = v13 + v14;
  if (v13 < v15 && v16 > a2)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v8 || v9 < 1)
    return result;
  if (!v12)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_211A480D8();
    __break(1u);
    return result;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72);
  v20 = a2 + v19 * v11;
  v21 = v19 * v9;
  v22 = v20 + v21;
  v23 = v12 + v21;
  if (v22 > v12 && v20 < v23)
    goto LABEL_29;
  return swift_arrayInitWithCopy();
}

uint64_t sub_2119A08D0(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  if (v5 >= v8)
  {
    result = sub_211958C38(&qword_254ACA060);
    v12 = 0;
    v9 = 0;
    v11 = v8;
    if (v8 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v9 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = sub_211958C38(&qword_254ACA060);
  v11 = v5;
  v12 = a4;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v4;
  v14 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72);
  v15 = a2 + v14 * v4;
  v16 = v14 * v11;
  v17 = v15 + v16;
  v18 = v13 + v16;
  if (v13 < v17 && v15 < v18)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v9 >= 1)
  {
    if (v12)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254ACA060) - 8) + 72) * v9;
      v22 = a2 + v21;
      v23 = v12 + v21;
      if (v22 <= v12 || v23 <= a2)
        return swift_arrayInitWithCopy();
LABEL_29:
      result = sub_211A480D8();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_2119A0A7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;

  v1 = *v0;
  v2 = sub_211958C38(&qword_254ACA060);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_211958C38(&qword_254ACA158);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1)
    sub_2119A08D0(v5 + 16, v5 + ((v4 + 40) & ~v4), (_QWORD *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_2119A0B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      swift_bridgeObjectRetain();
      sub_211959264(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_2119A0BB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2119A0BBC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2119A0BE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119A0C1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_2119985CC(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2119A0CD8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119A0D20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_211997434(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2119A0DD4()
{
  return sub_2119A161C(&qword_254ACA018, &qword_254ACA038);
}

uint64_t sub_2119A0DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA018) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_211992CF0(a1, v6, v7, v8, v9);
}

void sub_2119A0E90()
{
  uint64_t v0;

  sub_21199C1F0(v0);
}

unint64_t sub_2119A0E98(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119A0EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t);

  v1 = sub_211958C38(&qword_254ACA0B0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_211958C38(&qword_254ACA0A8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_211958C38(&qword_254ACA0A0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v11 = v0 + v3;
  v12 = sub_211958C38(&qword_254ACA0D8);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v10, 1, v1))
  {
    v14(v0 + v10, v12);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119A1050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA0B0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_211958C38(&qword_254ACA0A8) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_211958C38(&qword_254ACA0A0) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v1 + v5;
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_2119A113C;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2119A113C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119A1184(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_211963DB0;
  return sub_21199C844(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_2119A1208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA0B0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_21199E318(a1, v6, v7, v8, v9);
}

uint64_t sub_2119A12B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_211958C38(&qword_254ACA0A8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119A1344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA0A8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_21199D414(a1, v6, v7, v8, v9);
}

uint64_t sub_2119A13EC(int a1, id a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 1)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else if (!(a3 >> 62))
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119A1468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_211958C38(&qword_254ACA0B0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = sub_211958C38(&qword_254ACA0D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119A1514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA0B0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_2119A113C;
  return sub_21199E318(a1, v6, v7, v8, v9);
}

unint64_t sub_2119A15BC(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119A1608()
{
  return sub_2119A161C(&qword_254ACA1D0, &qword_254ACA1D8);
}

uint64_t sub_2119A161C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(sub_211958C38(a1) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  v6 = sub_211958C38(a2);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v2 + v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v2 + v5, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119A16D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_211958C38(&qword_254ACA1D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_211963DB0;
  return sub_2119915EC(a1, v6, v7, v8, v9);
}

uint64_t sub_2119A177C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119A17AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_211958C38(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2119A17F0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119A1824(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_211963DB0;
  return sub_211990230(a1, v4, v5, v7, v6);
}

uint64_t sub_2119A189C@<X0>(_QWORD *a1@<X8>)
{
  return sub_211963814(a1);
}

uint64_t sub_2119A18B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_2119A18DC(uint64_t *a1)
{
  sub_21195DA00(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t FMFContact.storeUUID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFContact.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFContact.storeHasImage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FMFContact.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_2119A19E8(char *a1)
{
  sub_211976540(*a1);
}

void sub_2119A19F4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_2119A1A44()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119A1AC8()
{
  __asm { BR              X10 }
}

uint64_t sub_2119A1B08()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119A1B78()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_2119A1BC4()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119A1C48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119A2738();
  *a1 = result;
  return result;
}

uint64_t sub_2119A1C74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2119A1CA8 + 4 * byte_211A4C2D0[*v0]))();
}

void sub_2119A1CA8(_QWORD *a1@<X8>)
{
  *a1 = 0x4E79616C70736964;
  a1[1] = 0xEB00000000656D61;
}

void sub_2119A1CCC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "storeHasImage");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_2119A1CF4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6D614E74726F6873;
  a1[1] = v1 + 33;
}

uint64_t sub_2119A1D10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119A1D44 + 4 * byte_211A4C2D4[*v0]))(0x49555565726F7473, 0xE900000000000044);
}

uint64_t sub_2119A1D44()
{
  return 0x4E79616C70736964;
}

uint64_t sub_2119A1D64()
{
  return 0x73614865726F7473;
}

uint64_t sub_2119A1D88()
{
  return 0x6D614E74726F6873;
}

uint64_t sub_2119A1DA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119A2738();
  *a1 = result;
  return result;
}

uint64_t sub_2119A1DC4()
{
  sub_2119A2084();
  return sub_211A48390();
}

uint64_t sub_2119A1DEC()
{
  sub_2119A2084();
  return sub_211A4839C();
}

uint64_t FMFContact.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = sub_211958C38(&qword_254ACA220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119A2084();
  sub_211A48360();
  if (v2)
    return sub_211931C34((uint64_t)a1);
  v32 = 0;
  v10 = sub_211A48144();
  v12 = v11;
  v27 = v10;
  v31 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_211A48144();
  v15 = v14;
  v25 = v13;
  v30 = 2;
  swift_bridgeObjectRetain();
  v26 = v15;
  v28 = sub_211A48150();
  v29 = 3;
  v16 = sub_211A48144();
  v19 = v18;
  v20 = v28 & 1;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v16;
  v21(v9, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v26;
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v23;
  *(_BYTE *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v19;
  sub_211931C34((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2119A2084()
{
  unint64_t result;

  result = qword_254ACA228;
  if (!qword_254ACA228)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C47C, &type metadata for FMFContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA228);
  }
  return result;
}

uint64_t FMFContact.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v4 = sub_211958C38(&qword_254ACA230);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  v16[2] = *(_QWORD *)(v1 + 24);
  v16[3] = v9;
  v17 = *(unsigned __int8 *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  v16[0] = *(_QWORD *)(v1 + 48);
  v16[1] = v10;
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  sub_211931DB4(v12, v11);
  sub_2119A2084();
  sub_211A4836C();
  v21 = 0;
  sub_211A481B0();
  if (!v2)
  {
    v20 = 1;
    sub_211A481B0();
    v19 = 2;
    sub_211A481BC();
    v18 = 3;
    sub_211A481B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v14);
}

uint64_t sub_2119A226C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFContact.init(from:)(a1, a2);
}

uint64_t sub_2119A2280(_QWORD *a1)
{
  return FMFContact.encode(to:)(a1);
}

uint64_t _s7FMFCore10FMFContactV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_211A48258(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v9)
        return 0;
    }
    else
    {
      v14 = sub_211A48258();
      result = 0;
      if ((v14 & 1) == 0 || ((v4 ^ v9) & 1) != 0)
        return result;
    }
    if (v5 == v10 && v6 == v11)
      return 1;
    else
      return sub_211A48258();
  }
  return result;
}

uint64_t destroy for FMFContact()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFContact(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFContact(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMFContact(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMFContact(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FMFContact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFContact.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2119A25E0 + 4 * byte_211A4C2DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2119A2614 + 4 * byte_211A4C2D8[v4]))();
}

uint64_t sub_2119A2614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119A261C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119A2624);
  return result;
}

uint64_t sub_2119A2630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119A2638);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2119A263C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119A2644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFContact.CodingKeys()
{
  return &type metadata for FMFContact.CodingKeys;
}

unint64_t sub_2119A2664()
{
  unint64_t result;

  result = qword_254ACA238;
  if (!qword_254ACA238)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C454, &type metadata for FMFContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA238);
  }
  return result;
}

unint64_t sub_2119A26AC()
{
  unint64_t result;

  result = qword_254ACA240;
  if (!qword_254ACA240)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C38C, &type metadata for FMFContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA240);
  }
  return result;
}

unint64_t sub_2119A26F4()
{
  unint64_t result;

  result = qword_254ACA248;
  if (!qword_254ACA248)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C3B4, &type metadata for FMFContact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA248);
  }
  return result;
}

uint64_t sub_2119A2738()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t FMFFriend.personIdHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFriend.pushIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FMFFriend.supportsProactiveLocations.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 44));
}

uint64_t FMFFriend.supportsShallowOrLiveLocations.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 48));
}

uint64_t FMFFriend.fallbackToLegacy.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 52));
}

uint64_t FMFFriend.fallbackToLegacy.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFFriend();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*FMFFriend.fallbackToLegacy.modify())(_QWORD, double)
{
  type metadata accessor for FMFFriend();
  return nullsub_1;
}

uint64_t FMFFriend.fallbackToLegacyAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 56));
}

uint64_t FMFFriend.fallbackToLegacyAllowed.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFFriend();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*FMFFriend.fallbackToLegacyAllowed.modify())(_QWORD, double)
{
  type metadata accessor for FMFFriend();
  return nullsub_1;
}

uint64_t FMFFriend.locationAlertsOnMe.getter()
{
  type metadata accessor for FMFFriend();
  return swift_bridgeObjectRetain();
}

uint64_t FMFFriend.isWaitingForShallowLocation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFFriend();
  *(_BYTE *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*FMFFriend.isWaitingForShallowLocation.modify())(_QWORD, double)
{
  type metadata accessor for FMFFriend();
  return nullsub_1;
}

uint64_t FMFFriend.properName.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for FMFFriend() + 76));
  if (!v1[1])
    return 0;
  v2 = v1[2];
  v3 = v1[3];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FMFFriend.pendingUpdateReason.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FMFFriend();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FMFFriend.pendingUpdateReason.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for FMFFriend();
  *(_BYTE *)(v1 + *(int *)(result + 84)) = v2;
  return result;
}

uint64_t (*FMFFriend.pendingUpdateReason.modify())(_QWORD, double)
{
  type metadata accessor for FMFFriend();
  return nullsub_1;
}

uint64_t sub_2119A2A38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119A2A70 + 4 * byte_211A4C4D0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_2119A2A70()
{
  return 0x64496E6F73726570;
}

uint64_t sub_2119A2A90()
{
  return 0x48746361746E6F63;
}

uint64_t sub_2119A2AB4()
{
  return 0x7078456572616873;
}

unint64_t sub_2119A2AD4()
{
  return 0xD000000000000010;
}

unint64_t sub_2119A2B70()
{
  return 0xD000000000000017;
}

uint64_t sub_2119A2B88()
{
  return 0x657469726F766166;
}

uint64_t sub_2119A2BAC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_2119A2BC4()
{
  return 0x746361746E6F63;
}

unint64_t sub_2119A2BDC()
{
  return 0xD000000000000012;
}

void sub_2119A2BF4()
{
  JUMPOUT(0x2119A2C08);
}

uint64_t sub_2119A2C14()
{
  return 0x6E65644968737570;
}

uint64_t sub_2119A2C38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119A2C70 + 4 * byte_211A4C4E1[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_2119A2C70()
{
  return 0x64496E6F73726570;
}

uint64_t sub_2119A2C90()
{
  return 0x48746361746E6F63;
}

uint64_t sub_2119A2CB4()
{
  return 0x7078456572616873;
}

unint64_t sub_2119A2CD4()
{
  return 0xD000000000000010;
}

unint64_t sub_2119A2D70()
{
  return 0xD000000000000017;
}

uint64_t sub_2119A2D88()
{
  return 0x657469726F766166;
}

uint64_t sub_2119A2DAC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_2119A2DC4()
{
  return 0x746361746E6F63;
}

unint64_t sub_2119A2DDC()
{
  return 0xD000000000000012;
}

void sub_2119A2DF4()
{
  JUMPOUT(0x2119A2E08);
}

uint64_t sub_2119A2E14()
{
  return 0x6E65644968737570;
}

uint64_t sub_2119A2E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2119A2A38(*a1);
  v5 = v4;
  if (v3 == sub_2119A2A38(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2119A2EC0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119A2A38(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119A2F20()
{
  unsigned __int8 *v0;

  sub_2119A2A38(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119A2F60()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119A2A38(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119A2FBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119A957C();
  *a1 = result;
  return result;
}

uint64_t sub_2119A2FE8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2119A2A38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119A3010()
{
  unsigned __int8 *v0;

  return sub_2119A2C38(*v0);
}

uint64_t sub_2119A3018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119A957C();
  *a1 = result;
  return result;
}

void sub_2119A303C(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_2119A3048()
{
  sub_2119A76F4();
  return sub_211A48390();
}

uint64_t sub_2119A3070()
{
  sub_2119A76F4();
  return sub_211A4839C();
}

uint64_t FMFFriend.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v49 = a2;
  v3 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v6, v7);
  v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_211958C38(&qword_254ACA250);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFFriend();
  v14 = (int *)MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (_BYTE *)v14[13];
  v17[(_QWORD)v16] = 0;
  v18 = (_BYTE *)v14[14];
  v18[(_QWORD)v16] = 2;
  v19 = (_BYTE *)v14[18];
  v19[(_QWORD)v16] = 1;
  *((_BYTE *)v16 + v14[21]) = 7;
  v20 = a1[3];
  v54 = a1;
  sub_211931DB4(a1, v20);
  sub_2119A76F4();
  v21 = v55;
  sub_211A48360();
  if (v21)
    return sub_211931C34((uint64_t)v54);
  v46 = v17;
  v47 = v19;
  v48 = v18;
  LOBYTE(v56) = 0;
  v22 = v53;
  v23 = v11;
  v24 = (uint64_t)v16;
  *v16 = sub_211A48144();
  v16[1] = v25;
  LOBYTE(v56) = 1;
  v26 = sub_211A48144();
  v55 = v23;
  v27 = (int *)v12;
  v16[2] = v26;
  v16[3] = v28;
  sub_211958C38(&qword_254ACA260);
  v63 = 2;
  sub_21194D07C(&qword_254ACA268, &qword_254ACA260, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
  sub_211A48174();
  v16[4] = v56;
  v29 = sub_211A47208();
  LOBYTE(v56) = 3;
  sub_211910908(&qword_254AC99C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_211A48174();
  v30 = (uint64_t)v54;
  (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(0, 0, 1, v29);
  sub_21192DD68(0, v27[8], qword_254AC8A78);
  LOBYTE(v56) = 5;
  v31 = sub_211A48150() & 1;
  v32 = v48;
  *(_BYTE *)v27[10] = v31;
  LOBYTE(v56) = 6;
  *(_BYTE *)v27[11] = sub_211A48150() & 1;
  LOBYTE(v56) = 7;
  *(_BYTE *)v27[12] = sub_211A48150() & 1;
  LOBYTE(v56) = 8;
  *v47 = sub_211A48150() & 1;
  LOBYTE(v56) = 9;
  *v46 = sub_211A48150() & 1;
  LOBYTE(v56) = 10;
  *v32 = sub_211A48150() & 1;
  LOBYTE(v56) = 11;
  *(_QWORD *)v27[15] = sub_211A48168();
  v33 = type metadata accessor for FMFLocation();
  LOBYTE(v56) = 12;
  sub_211910908(&qword_254AC83E8, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
  v34 = (uint64_t)v50;
  sub_211A48174();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
  sub_21192DD68(v34, v27[20], (uint64_t *)&unk_254AC8CB0);
  v63 = 13;
  sub_211964884();
  sub_211A48174();
  v35 = v57;
  v36 = v58;
  v37 = v59;
  v38 = v60;
  v39 = v61;
  v40 = v62;
  v41 = (uint64_t *)v27[19];
  *v41 = v56;
  v41[1] = v35;
  v41[2] = v36;
  v41[3] = v37;
  v41[4] = v38;
  v41[5] = v39;
  v41[6] = v40;
  LOBYTE(v56) = 4;
  *(_QWORD *)v27[9] = sub_211A48168();
  sub_211958C38(&qword_254AC8420);
  v63 = 14;
  sub_2119A7874((unint64_t *)&qword_254AC8428, (unint64_t *)&qword_254AC8430, (uint64_t)&protocol conformance descriptor for FMFLocationAlert, MEMORY[0x24BEE12D0]);
  sub_211A48174();
  *(_QWORD *)v27[17] = v56;
  v63 = 15;
  sub_211A48174();
  *(_QWORD *)v27[16] = v56;
  sub_211958C38(&qword_254AC8378);
  v63 = 16;
  sub_21194D07C((unint64_t *)&qword_254AC8380, &qword_254AC8378, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_211A48174();
  v42 = v56;
  v43 = v49;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v55, v22);
  *(_QWORD *)(v24 + 40) = v42;
  sub_211934794(v24, v43, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211931C34(v30);
  return sub_211934758(v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
}

uint64_t FMFFriend.init(friend:updatedLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  v6 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACA278);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211934794(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v18 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  v19 = type metadata accessor for FMFIntermediateFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  v25 = 0;
  v26 = 1;
  v23 = 0;
  v24 = 1;
  sub_21192C6B8(a2, (uint64_t)v9, (uint64_t *)&unk_254AC8CB0);
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  sub_211956D54((uint64_t)v17, (uint64_t)v13, (unint64_t)&v25, (uint64_t)&v23, (uint64_t)v9, 0, 1, (uint64_t *)v21, a3, 0, 0, 2u, 2u, 2);
  sub_211923EE8(a2, (uint64_t *)&unk_254AC8CB0);
  return sub_211934758(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
}

Swift::Bool __swiftcall FMFFriend.isBlocked()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  int64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t String;
  uint64_t v40;
  int IsItemBlocked;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v1 = sub_211A46FBC();
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  LOBYTE(v3) = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
  {
LABEL_29:
    if (v8 >> 62)
      goto LABEL_52;
    v40 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v40)
      goto LABEL_31;
LABEL_45:
    swift_bridgeObjectRelease();
    LOBYTE(v3) = v40;
    return v3;
  }
  v56 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v8 = (unint64_t)&v56;
  sub_211A47FF4();
  v9 = sub_211948348(v6);
  v11 = v10;
  v13 = v12 & 1;
  v52 = v6 + 56;
  v51 = *MEMORY[0x24BDBD240];
  v47 = v5;
  v48 = v6;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
  {
    if (((*(_QWORD *)(v52 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_47;
    if (*(_DWORD *)(v6 + 36) != v11)
      goto LABEL_48;
    v53 = v13;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v9);
    v21 = *v20;
    v22 = v20[1];
    v23 = qword_254AC7B58;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = (void *)qword_254ADC738;
    v25 = (void *)sub_211A478EC();
    LODWORD(v24) = objc_msgSend(v24, sel_evaluateWithObject_, v25);

    if ((_DWORD)v24)
    {
      v15 = (void *)sub_211A478EC();
      v3 = CMFItemCreateWithEmailAddress();
      if (!v3)
        goto LABEL_57;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_211A46F8C();
    sub_211A46F98();
    v54 = v21;
    v55 = v22;
    sub_21194FDB4();
    sub_211A47E50();
    if ((v26 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v31 = v21;
      v33 = v22;
    }
    else
    {
      v54 = v21;
      v55 = v22;
      v8 = sub_211A47988();
      v27 = sub_211A47994();
      v28 = v27 - v8;
      if (__OFSUB__(v27, v8))
        goto LABEL_49;
      v29 = (void *)sub_211A478EC();
      v30 = objc_msgSend(v29, sel_substringWithRange_, v8, v28);

      v31 = sub_211A47910();
      v33 = v32;

    }
    v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0)
      v34 = v31 & 0xFFFFFFFFFFFFLL;
    if (v34)
    {
      sub_211A039B4();
      v35 = (void *)sub_211A478EC();
      v36 = (void *)sub_211A478EC();
      swift_bridgeObjectRelease();
      v37 = (void *)CFPhoneNumberCreate();

      if (!v37)
      {
        v5 = v47;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v50);
        v6 = v48;
        goto LABEL_5;
      }
      v38 = v37;
      String = CFPhoneNumberCreateString();
      v5 = v47;
      v6 = v48;
      if (!String)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v50);

        goto LABEL_5;
      }
      v14 = (void *)String;
      swift_bridgeObjectRelease();
      sub_211A47910();

    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v50);
LABEL_5:
    v15 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
    v16 = (void *)CFPhoneNumberCreate();
    v3 = CMFItemCreateWithPhoneNumber();
    if (!v3)
      goto LABEL_56;
    swift_bridgeObjectRelease();

LABEL_7:
    v8 = (unint64_t)&v56;
    sub_211A47FDC();
    sub_211A48000();
    sub_211A4800C();
    sub_211A47FE8();
    v17 = sub_211947C94(v9, v11, v53 & 1, v6);
    v9 = v17;
    v11 = v18;
    v13 = v19 & 1;
    if (!--v7)
    {
      sub_2119A0BB0(v17, v18, v13);
      LOBYTE(v3) = swift_bridgeObjectRelease();
      v8 = v56;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  swift_bridgeObjectRetain();
  v40 = sub_211A480A8();
  LOBYTE(v3) = swift_bridgeObjectRelease();
  if (!v40)
    goto LABEL_45;
LABEL_31:
  if ((v8 & 0xC000000000000001) != 0)
  {
    MEMORY[0x212BE3DA8](0, v8);
LABEL_34:
    IsItemBlocked = CMFBlockListIsItemBlocked();
    swift_unknownObjectRelease();
    if (IsItemBlocked)
    {
      LOBYTE(v40) = 1;
    }
    else
    {
      v42 = 0;
      v43 = v40 - 1;
      while (1)
      {
        LOBYTE(v40) = v43 != v42;
        if (v43 == v42)
          break;
        v44 = v42 + 1;
        if ((v8 & 0xC000000000000001) != 0)
        {
          MEMORY[0x212BE3DA8](v42 + 1, v8);
          if (__OFADD__(v44, 1))
            goto LABEL_50;
        }
        else
        {
          if (v44 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          swift_unknownObjectRetain();
          if (__OFADD__(v44, 1))
            goto LABEL_50;
        }
        v45 = CMFBlockListIsItemBlocked();
        swift_unknownObjectRelease();
        ++v42;
        if (v45)
          goto LABEL_45;
      }
    }
    goto LABEL_45;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_34;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return v3;
}

uint64_t FMFFriend.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 v12;
  char v13;

  v3 = v1;
  v5 = sub_211958C38(&qword_254ACA280);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119A76F4();
  sub_211A4836C();
  LOBYTE(v12) = 0;
  sub_211A481B0();
  if (!v2)
  {
    v12 = *(_OWORD *)(v3 + 16);
    v13 = 1;
    sub_211958C38(&qword_254AC7C58);
    sub_21194D07C((unint64_t *)&qword_254AC7C60, &qword_254AC7C58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 32);
    v13 = 2;
    sub_211958C38(&qword_254ACA260);
    sub_21194D07C(&qword_254ACA288, &qword_254ACA260, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    sub_211A481E0();
    v10 = (int *)type metadata accessor for FMFFriend();
    LOBYTE(v12) = 3;
    sub_211958C38(qword_254AC8A78);
    sub_21194D1A0();
    sub_211A481E0();
    LOBYTE(v12) = *(_BYTE *)(v3 + v10[10]);
    v13 = 5;
    sub_211958C38(&qword_254AC8B90);
    sub_21194D07C(&qword_254AC8B98, &qword_254AC8B90, MEMORY[0x24BEE1330], MEMORY[0x24BEE4AA8]);
    sub_211A481E0();
    LOBYTE(v12) = *(_BYTE *)(v3 + v10[11]);
    v13 = 6;
    sub_211A481E0();
    LOBYTE(v12) = *(_BYTE *)(v3 + v10[12]);
    v13 = 7;
    sub_211A481E0();
    LOBYTE(v12) = 8;
    sub_211A481BC();
    LOBYTE(v12) = 9;
    sub_211A481BC();
    LOBYTE(v12) = *(_BYTE *)(v3 + v10[14]);
    v13 = 10;
    sub_211A481E0();
    LOBYTE(v12) = 11;
    sub_211A481D4();
    LOBYTE(v12) = 4;
    sub_211A481D4();
    LOBYTE(v12) = 12;
    sub_211958C38((uint64_t *)&unk_254AC8CB0);
    sub_2119A7774();
    sub_211A481E0();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[17]);
    v13 = 14;
    sub_211958C38(&qword_254ACA2A0);
    sub_2119A77F0();
    sub_211A481E0();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + v10[16]);
    v13 = 15;
    sub_211A481E0();
    *(_QWORD *)&v12 = *(_QWORD *)(v3 + 40);
    v13 = 16;
    sub_211958C38(&qword_254AC8B68);
    sub_21194D11C();
    sub_211A481E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t FMFFriend.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t FMFFriend.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char v73;
  _QWORD v74[45];
  _QWORD v75[46];

  v1 = v0;
  v2 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v61 - v12;
  v71 = (int *)type metadata accessor for FMFFriend();
  v65 = v1 + v71[20];
  sub_21192C6B8(v65, (uint64_t)v13, (uint64_t *)&unk_254AC8CB0);
  v14 = type metadata accessor for FMFLocation();
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  v69 = v5;
  v70 = v2;
  v66 = v10;
  v67 = v6;
  if (v15 == 1)
  {
    sub_211923EE8((uint64_t)v13, (uint64_t *)&unk_254AC8CB0);
LABEL_9:
    v61 = 0;
    v62 = 0xE000000000000000;
    goto LABEL_10;
  }
  sub_21192DD68((uint64_t)&v13[*(int *)(v14 + 44)], (uint64_t)v74, &qword_254AC8CD0);
  sub_21192DD68((uint64_t)v74, (uint64_t)v75, &qword_254AC8CD0);
  if (sub_2119724C8((uint64_t)v75) == 1)
  {
    sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    goto LABEL_9;
  }
  v17 = v75[40];
  v16 = v75[41];
  swift_bridgeObjectRetain();
  sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  if (!v16)
    goto LABEL_9;
  v18._countAndFlagsBits = sub_211A47934();
  FMFDefaultLabel.init(rawValue:)(v18);
  if (v73 != 5)
  {
    FMFDefaultLabel.localizedLabel.getter();
    v17 = v19;
    v21 = v20;
    swift_bridgeObjectRelease();
    v16 = v21;
  }
  v61 = v17;
  v62 = v16;
LABEL_10:
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v68 = 0xD000000000000018;
  v75[0] = 0xD000000000000018;
  v75[1] = 0x8000000211A549D0;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v22 = v1;
  v23 = v75[0];
  v24 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v75, "personIdHash: ");
  HIBYTE(v75[1]) = -18;
  v25 = *(_QWORD *)(v22 + 24);
  v26 = v22;
  v74[0] = *(_QWORD *)(v22 + 16);
  v74[1] = v25;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v23;
  v75[1] = v24;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = v75[0];
  v28 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD00000000000001CLL;
  v75[1] = 0x8000000211A549F0;
  v29 = v71;
  LOBYTE(v74[0]) = *(_BYTE *)(v26 + v71[11]);
  v72 = sub_211958C38(&qword_254AC8B90);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v27;
  v75[1] = v28;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v75[0];
  v31 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000020;
  v75[1] = 0x8000000211A54A10;
  LOBYTE(v74[0]) = *(_BYTE *)(v26 + v29[12]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v30;
  v75[1] = v31;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v75[0];
  v33 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD00000000000001DLL;
  v75[1] = 0x8000000211A54A40;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v32;
  v75[1] = v33;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v75[0];
  v35 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v63 = v26;
  v64 = 0xD000000000000012;
  v75[0] = 0xD000000000000012;
  v75[1] = 0x8000000211A54A60;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v75[0] = v34;
  v75[1] = v35;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v75[0];
  v37 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000019;
  v75[1] = 0x8000000211A54A80;
  LOBYTE(v74[0]) = *(_BYTE *)(v26 + v29[14]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v75[0] = v36;
  v75[1] = v37;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v75[0];
  v39 = v75[1];
  strcpy((char *)v75, "label: '");
  BYTE1(v75[1]) = 0;
  WORD1(v75[1]) = 0;
  HIDWORD(v75[1]) = -402653184;
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v38;
  v75[1] = v39;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = v75[0];
  v41 = v75[1];
  strcpy((char *)v75, "location: ");
  BYTE3(v75[1]) = 0;
  HIDWORD(v75[1]) = -369098752;
  sub_21192C6B8(v65, (uint64_t)v66, (uint64_t *)&unk_254AC8CB0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v40;
  v75[1] = v41;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = v75[0];
  v43 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000010;
  v75[1] = 0x8000000211A54AA0;
  v44 = v63;
  swift_bridgeObjectRetain();
  sub_211A47C4C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v42;
  v75[1] = v43;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = v75[0];
  v46 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0x657469726F766166;
  v75[1] = 0xEF203A726564724FLL;
  v47 = v71;
  v74[0] = *(_QWORD *)(v44 + v71[15]);
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v45;
  v75[1] = v46;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48 = v75[0];
  v49 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  strcpy((char *)v75, "shareExpires: ");
  HIBYTE(v75[1]) = -18;
  sub_21192C6B8(v44 + v47[8], (uint64_t)v69, qword_254AC8A78);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v48;
  v75[1] = v49;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = v75[0];
  v51 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  v74[0] = *(_QWORD *)(v44 + v47[9]);
  sub_211A48054();
  sub_211A479B8();
  v75[0] = v50;
  v75[1] = v51;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = v75[0];
  v53 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000011;
  v75[1] = 0x8000000211A54AE0;
  LOBYTE(v74[0]) = *(_BYTE *)(v44 + v47[10]);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v75[0] = v52;
  v75[1] = v53;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = v75[0];
  v55 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = v68;
  v75[1] = 0x8000000211A54B00;
  v74[0] = *(_QWORD *)(v44 + v47[16]);
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254ACA2A0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v75[0] = v54;
  v75[1] = v55;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = v75[0];
  v57 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000014;
  v75[1] = 0x8000000211A54B20;
  v74[0] = *(_QWORD *)(v44 + v47[17]);
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v75[0] = v56;
  v75[1] = v57;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v59 = v75[0];
  v58 = v75[1];
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v75[0] = 0xD000000000000011;
  v75[1] = 0x8000000211A54B40;
  v74[0] = *(_QWORD *)(v44 + 40);
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8B68);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v75[0] = v59;
  v75[1] = v58;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v75[0];
}

uint64_t FMFFriend.hashValue.getter()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119A53B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFFriend.init(from:)(a1, a2);
}

uint64_t sub_2119A53C8(_QWORD *a1)
{
  return FMFFriend.encode(to:)(a1);
}

uint64_t sub_2119A53E0()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119A5438()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

_QWORD *sub_2119A5490(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_211958C38(&qword_254ACA200);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_211A19758((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_211973358();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2119A5574(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_211958C38(&qword_254ACA200);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_211A19988((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_211973358();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_2119A5658(uint64_t a1)
{
  return sub_211950FCC(a1, &qword_254ACA3B8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_2119510B4);
}

size_t sub_2119A566C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_211958C38(&qword_254ACA3B0);
  v3 = *(_QWORD *)(sub_211A474D8() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_211A19E24(&v11, (char *)v6 + v5, v1, a1);
      v10 = v9;
      swift_bridgeObjectRetain();
      sub_211973358();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2119A5784(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_211A48258() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_211A48258() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_2119BA1C4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t _s7FMFCore9FMFFriendV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  _BYTE *v137;
  _BYTE *v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  _BYTE *v150;
  _BYTE *v151;
  _BYTE *v152;
  _BYTE *v153;
  _BYTE *v154;
  _BYTE *v155;
  uint64_t v156;
  _BYTE *v157;
  char v158;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  int v168;
  _BYTE *v169;
  uint64_t v170;
  void (*v171)(_BYTE *, uint64_t);
  _BYTE *v172;
  uint64_t v173;
  _BYTE *v174;
  int *v175;
  int v176;
  uint64_t v177;
  int v178;
  char v179;
  uint64_t v180;
  int *v181;
  int v182;
  int v183;
  char v184;
  char v185;
  uint64_t v186;
  int *v187;
  int v188;
  char v189;
  int *v190;
  int *v191;
  int *v192;
  int v193;
  uint64_t v194;
  int v195;
  char v196;
  int *v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;
  unsigned int (*v202)(uint64_t, uint64_t, uint64_t);
  _BYTE *v203;
  uint64_t v204;
  _BYTE *v205;
  _BYTE *v206;
  char v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  _BYTE *v217;
  uint64_t v218;
  _BYTE *v219;
  uint64_t v220;
  _BYTE *v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _BYTE v234[12];
  int v235;
  _BYTE *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  _BYTE *v241;
  _BYTE *v242;
  uint64_t v243;
  _BYTE *v244;
  uint64_t v245;
  _BYTE *v246;
  uint64_t v247;
  int *v248;
  _BYTE *v249;
  _BYTE *v250;
  uint64_t v251;
  _BYTE *v252;
  _BYTE *v253;
  _BYTE *v254;
  _BYTE *v255;
  uint64_t v256;
  _BYTE *v257;
  uint64_t v258;
  _BYTE *v259;
  uint64_t v260;
  _BYTE *v261;
  _BYTE *v262;
  _BYTE *v263;
  _BYTE *v264;
  _BYTE *v265;
  _BYTE *v266;
  _BYTE *v267;
  _BYTE *v268;
  _BYTE *v269;
  _BYTE *v270;
  _BYTE *v271;
  _BYTE *v272;
  _BYTE *v273;
  uint64_t v274;

  v239 = type metadata accessor for FMFLocation();
  v238 = *(_QWORD *)(v239 - 8);
  MEMORY[0x24BDAC7A8](v239, v4);
  v236 = &v234[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v240 = &v234[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v237 = sub_211958C38(&qword_254ACA3C8);
  MEMORY[0x24BDAC7A8](v237, v9);
  v241 = &v234[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v247 = sub_211A47208();
  v245 = *(_QWORD *)(v247 - 8);
  MEMORY[0x24BDAC7A8](v247, v11);
  v242 = &v234[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = &v234[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v243 = sub_211958C38(&qword_254AC8B40);
  MEMORY[0x24BDAC7A8](v243, v17);
  v19 = &v234[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v248 = (int *)type metadata accessor for FMFFriend();
  v21 = MEMORY[0x24BDAC7A8](v248, v20);
  v264 = &v234[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v263 = &v234[-v25];
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v268 = &v234[-v28];
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v269 = &v234[-v31];
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v270 = &v234[-v34];
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v271 = &v234[-v37];
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v272 = &v234[-v40];
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v265 = &v234[-v43];
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v266 = &v234[-v46];
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v267 = &v234[-v49];
  v51 = MEMORY[0x24BDAC7A8](v48, v50);
  v262 = &v234[-v52];
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v261 = &v234[-v55];
  v57 = MEMORY[0x24BDAC7A8](v54, v56);
  v273 = &v234[-v58];
  v60 = MEMORY[0x24BDAC7A8](v57, v59);
  v62 = MEMORY[0x24BDAC7A8](v60, v61);
  v259 = &v234[-v63];
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v67 = MEMORY[0x24BDAC7A8](v65, v66);
  v257 = &v234[-v68];
  v70 = MEMORY[0x24BDAC7A8](v67, v69);
  v72 = MEMORY[0x24BDAC7A8](v70, v71);
  v255 = &v234[-v73];
  v75 = MEMORY[0x24BDAC7A8](v72, v74);
  v254 = &v234[-v76];
  v78 = MEMORY[0x24BDAC7A8](v75, v77);
  v253 = &v234[-v79];
  v81 = MEMORY[0x24BDAC7A8](v78, v80);
  v252 = &v234[-v82];
  v84 = MEMORY[0x24BDAC7A8](v81, v83);
  v274 = (uint64_t)&v234[-v85];
  v87 = MEMORY[0x24BDAC7A8](v84, v86);
  v89 = MEMORY[0x24BDAC7A8](v87, v88);
  v249 = &v234[-v90];
  v92 = MEMORY[0x24BDAC7A8](v89, v91);
  v250 = &v234[-v93];
  v95 = MEMORY[0x24BDAC7A8](v92, v94);
  v97 = &v234[-v96];
  v99 = MEMORY[0x24BDAC7A8](v95, v98);
  v101 = &v234[-v100];
  v103 = MEMORY[0x24BDAC7A8](v99, v102);
  v105 = &v234[-v104];
  v107 = MEMORY[0x24BDAC7A8](v103, v106);
  v109 = &v234[-v108];
  v111 = MEMORY[0x24BDAC7A8](v107, v110);
  v113 = &v234[-v112];
  MEMORY[0x24BDAC7A8](v111, v114);
  v116 = &v234[-v115];
  v117 = a1[1];
  v118 = a2[1];
  v119 = *a1 == *a2;
  v260 = v120;
  v258 = v121;
  v256 = v122;
  v251 = v123;
  v246 = v19;
  v244 = v16;
  if (v119 && v117 == v118)
  {
    sub_211934794((uint64_t)a1, (uint64_t)&v234[-v115], (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  else
  {
    v124 = sub_211A48258();
    sub_211934794((uint64_t)a1, (uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if ((v124 & 1) == 0)
    {
      sub_211934758((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934758((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_16:
      sub_211934794((uint64_t)a1, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934794((uint64_t)a2, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_17;
    }
  }
  v125 = *((_QWORD *)v116 + 3);
  v126 = *((_QWORD *)v113 + 3);
  if (!v125)
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (!v126)
      goto LABEL_12;
    goto LABEL_15;
  }
  if (!v126)
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (*((_QWORD *)v116 + 2) == *((_QWORD *)v113 + 2) && v125 == v126)
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_bridgeObjectRelease();
LABEL_12:
    sub_211934794((uint64_t)a1, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    goto LABEL_44;
  }
  v235 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_211934758((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  sub_211934794((uint64_t)a1, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934794((uint64_t)a2, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  if ((v235 & 1) == 0)
  {
LABEL_17:
    sub_211934758((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a1, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_18:
    sub_211934758((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v127 = v268;
    v129 = v270;
    v128 = v271;
    v130 = v272;
    v131 = v274;
LABEL_19:
    v132 = v250;
    sub_211934794((uint64_t)a1, (uint64_t)v250, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v133 = v249;
    sub_211934794((uint64_t)a2, (uint64_t)v249, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_20:
    sub_211934758((uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v134 = v251;
    sub_211934794((uint64_t)a1, v251, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, v131, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_21:
    sub_211934758(v131, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758(v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v135 = v252;
    v136 = v127;
    v137 = v128;
LABEL_22:
    sub_211934794((uint64_t)a1, (uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v138 = v253;
    sub_211934794((uint64_t)a2, (uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v139 = v129;
LABEL_23:
    sub_211934758((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v140 = v254;
    v141 = v130;
    v142 = (uint64_t)v257;
LABEL_24:
    sub_211934794((uint64_t)a1, (uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v143 = v255;
    sub_211934794((uint64_t)a2, (uint64_t)v255, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_25:
    sub_211934758((uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_26:
    v144 = v256;
    sub_211934794((uint64_t)a1, v256, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v145 = v273;
LABEL_27:
    sub_211934758(v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758(v144, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v146 = v258;
    sub_211934794((uint64_t)a1, v258, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v147 = v259;
    sub_211934794((uint64_t)a2, (uint64_t)v259, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_28:
    sub_211934758((uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758(v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v148 = v260;
    sub_211934794((uint64_t)a1, v260, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_29:
    sub_211934758((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758(v148, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v149 = v261;
    v150 = v269;
LABEL_30:
    sub_211934794((uint64_t)a1, (uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v151 = v262;
    sub_211934794((uint64_t)a2, (uint64_t)v262, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_31:
    sub_211934758((uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v152 = v267;
    sub_211934794((uint64_t)a1, (uint64_t)v267, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v153 = v266;
    sub_211934794((uint64_t)a2, (uint64_t)v266, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_32:
    sub_211934758((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v152, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_33:
    v154 = v265;
    sub_211934794((uint64_t)a1, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_34:
    sub_211934758((uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_35:
    sub_211934794((uint64_t)a1, (uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v139, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_36:
    sub_211934758((uint64_t)v139, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_37:
    sub_211934794((uint64_t)a1, (uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v155 = v264;
LABEL_38:
    sub_211934758((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_39:
    v156 = (uint64_t)a1;
    v157 = v263;
    sub_211934794(v156, (uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_40:
    sub_211934758((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    goto LABEL_41;
  }
LABEL_44:
  v160 = sub_211A0906C(*((_QWORD *)v109 + 4), *((_QWORD *)v105 + 4));
  sub_211934758((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934794((uint64_t)a1, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934794((uint64_t)a2, (uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  if ((v160 & 1) == 0)
    goto LABEL_18;
  v161 = v248[8];
  v162 = (uint64_t)&v97[v161];
  v163 = (uint64_t)v246;
  v164 = (uint64_t)&v246[*(int *)(v243 + 48)];
  sub_21192C6B8((uint64_t)&v101[v161], (uint64_t)v246, qword_254AC8A78);
  sub_21192C6B8(v162, v164, qword_254AC8A78);
  v165 = v245;
  v166 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v245 + 48);
  v167 = v247;
  if (v166(v163, 1, v247) == 1)
  {
    sub_211934758((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v168 = v166(v164, 1, v167);
    v131 = v274;
    if (v168 == 1)
    {
      sub_211923EE8(v163, qword_254AC8A78);
      v132 = v250;
      sub_211934794((uint64_t)a1, (uint64_t)v250, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v133 = v249;
      sub_211934794((uint64_t)a2, (uint64_t)v249, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v127 = v268;
      v129 = v270;
      v128 = v271;
      v130 = v272;
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  sub_21192C6B8(v163, (uint64_t)v244, qword_254AC8A78);
  if (v166(v164, 1, v167) == 1)
  {
    sub_211934758((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    (*(void (**)(_BYTE *, uint64_t))(v165 + 8))(v244, v167);
    v131 = v274;
LABEL_50:
    sub_211923EE8(v163, &qword_254AC8B40);
    v127 = v268;
    v129 = v270;
    v128 = v271;
    v130 = v272;
    goto LABEL_19;
  }
  v169 = v242;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v165 + 32))(v242, v164, v167);
  sub_211910908((unint64_t *)&qword_254AC8B48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v170 = (uint64_t)v244;
  LODWORD(v243) = sub_211A478E0();
  v171 = *(void (**)(_BYTE *, uint64_t))(v165 + 8);
  v171(v169, v167);
  sub_211934758((uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v171((_BYTE *)v170, v167);
  sub_211923EE8(v163, qword_254AC8A78);
  v172 = v250;
  sub_211934794((uint64_t)a1, (uint64_t)v250, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v133 = v249;
  v132 = v172;
  sub_211934794((uint64_t)a2, (uint64_t)v249, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v127 = v268;
  v129 = v270;
  v128 = v271;
  v130 = v272;
  v131 = v274;
  if ((v243 & 1) == 0)
    goto LABEL_20;
LABEL_52:
  v173 = v248[9];
  v250 = *(_BYTE **)&v132[v173];
  v174 = *(_BYTE **)&v133[v173];
  sub_211934758((uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v134 = v251;
  sub_211934794((uint64_t)a1, v251, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934794((uint64_t)a2, v274, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v119 = v250 == v174;
  v131 = v274;
  if (!v119)
    goto LABEL_21;
  v175 = v248;
  v176 = *(unsigned __int8 *)(v134 + v248[10]);
  sub_211934758(v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v177 = v131;
  v178 = *(unsigned __int8 *)(v131 + v175[10]);
  sub_211934758(v177, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v136 = v127;
  if (v176 == 2)
  {
    v135 = v252;
    v137 = v128;
    if (v178 != 2)
      goto LABEL_22;
    sub_211934794((uint64_t)a1, (uint64_t)v252, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v138 = v253;
    sub_211934794((uint64_t)a2, (uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v139 = v129;
  }
  else
  {
    v135 = v252;
    v137 = v128;
    if (v178 == 2)
      goto LABEL_22;
    v179 = ((v176 & 1) == 0) ^ v178;
    sub_211934794((uint64_t)a1, (uint64_t)v252, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v138 = v253;
    sub_211934794((uint64_t)a2, (uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v139 = v129;
    if ((v179 & 1) == 0)
      goto LABEL_23;
  }
  v180 = (uint64_t)v138;
  v181 = v248;
  v182 = v135[v248[11]];
  sub_211934758((uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v183 = *(unsigned __int8 *)(v180 + v181[11]);
  sub_211934758(v180, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v184 = v182;
  v119 = v182 == 2;
  v141 = v130;
  if (v119)
  {
    v140 = v254;
    v142 = (uint64_t)v257;
    if (v183 != 2)
      goto LABEL_24;
    sub_211934794((uint64_t)a1, (uint64_t)v254, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v143 = v255;
    sub_211934794((uint64_t)a2, (uint64_t)v255, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  else
  {
    v140 = v254;
    v142 = (uint64_t)v257;
    if (v183 == 2)
      goto LABEL_24;
    v185 = ((v184 & 1) == 0) ^ v183;
    sub_211934794((uint64_t)a1, (uint64_t)v254, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v143 = v255;
    sub_211934794((uint64_t)a2, (uint64_t)v255, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if ((v185 & 1) == 0)
      goto LABEL_25;
  }
  v186 = (uint64_t)v143;
  v187 = v248;
  LODWORD(v274) = v140[v248[12]];
  sub_211934758((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v188 = *(unsigned __int8 *)(v186 + v187[12]);
  sub_211934758(v186, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  if ((_DWORD)v274 == 2)
  {
    if (v188 != 2)
      goto LABEL_26;
    v144 = v256;
    sub_211934794((uint64_t)a1, v256, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  else
  {
    if (v188 == 2)
      goto LABEL_26;
    v189 = ((v274 & 1) == 0) ^ v188;
    v144 = v256;
    sub_211934794((uint64_t)a1, v256, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934794((uint64_t)a2, v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v145 = v273;
    if ((v189 & 1) == 0)
      goto LABEL_27;
  }
  v190 = v248;
  LODWORD(v274) = *(unsigned __int8 *)(v144 + v248[18]);
  sub_211934758(v144, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  LODWORD(v190) = *(unsigned __int8 *)(v142 + v190[18]);
  sub_211934758(v142, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v146 = v258;
  sub_211934794((uint64_t)a1, v258, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v147 = v259;
  sub_211934794((uint64_t)a2, (uint64_t)v259, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v119 = (_DWORD)v274 == (_DWORD)v190;
  v145 = v273;
  if (!v119)
    goto LABEL_28;
  v191 = v248;
  LODWORD(v274) = *(unsigned __int8 *)(v146 + v248[13]);
  sub_211934758(v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  LODWORD(v191) = v147[v191[13]];
  sub_211934758((uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v148 = v260;
  sub_211934794((uint64_t)a1, v260, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934794((uint64_t)a2, (uint64_t)v273, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v119 = (_DWORD)v274 == (_DWORD)v191;
  v145 = v273;
  if (!v119)
    goto LABEL_29;
  v192 = v248;
  v193 = *(unsigned __int8 *)(v148 + v248[14]);
  sub_211934758(v148, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v194 = (uint64_t)v145;
  v195 = v145[v192[14]];
  sub_211934758(v194, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v150 = v269;
  if (v193 == 2)
  {
    v149 = v261;
    if (v195 != 2)
      goto LABEL_30;
    sub_211934794((uint64_t)a1, (uint64_t)v261, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v151 = v262;
    sub_211934794((uint64_t)a2, (uint64_t)v262, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  else
  {
    v149 = v261;
    if (v195 == 2)
      goto LABEL_30;
    v196 = ((v193 & 1) == 0) ^ v195;
    sub_211934794((uint64_t)a1, (uint64_t)v261, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v151 = v262;
    sub_211934794((uint64_t)a2, (uint64_t)v262, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if ((v196 & 1) == 0)
      goto LABEL_31;
  }
  v197 = v248;
  v274 = *(_QWORD *)&v149[v248[15]];
  sub_211934758((uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v273 = *(_BYTE **)&v151[v197[15]];
  sub_211934758((uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v152 = v267;
  sub_211934794((uint64_t)a1, (uint64_t)v267, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v153 = v266;
  sub_211934794((uint64_t)a2, (uint64_t)v266, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  if ((_BYTE *)v274 != v273)
    goto LABEL_32;
  v198 = v197[20];
  v199 = (uint64_t)&v153[v198];
  v200 = v241;
  v201 = (uint64_t)&v241[*(int *)(v237 + 48)];
  sub_21192C6B8((uint64_t)&v152[v198], (uint64_t)v241, (uint64_t *)&unk_254AC8CB0);
  sub_21192C6B8(v199, v201, (uint64_t *)&unk_254AC8CB0);
  v202 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v238 + 48);
  v203 = v200;
  v204 = v239;
  if (v202((uint64_t)v203, 1, v239) == 1)
  {
    sub_211934758((uint64_t)v266, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v267, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (v202(v201, 1, v204) == 1)
    {
      sub_211923EE8((uint64_t)v241, (uint64_t *)&unk_254AC8CB0);
      v154 = v265;
      sub_211934794((uint64_t)a1, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v141 = v272;
      sub_211934794((uint64_t)a2, (uint64_t)v272, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_87;
    }
LABEL_85:
    sub_211923EE8((uint64_t)v241, &qword_254ACA3C8);
    v136 = v268;
    v150 = v269;
    v139 = v270;
    v137 = v271;
    v141 = v272;
    goto LABEL_33;
  }
  sub_21192C6B8((uint64_t)v241, (uint64_t)v240, (uint64_t *)&unk_254AC8CB0);
  if (v202(v201, 1, v204) == 1)
  {
    sub_211934758((uint64_t)v266, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v267, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v240, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    goto LABEL_85;
  }
  v205 = v236;
  sub_211942810(v201, (uint64_t)v236, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v206 = v240;
  v207 = static FMFLocation.== infix(_:_:)((uint64_t)v240, (uint64_t)v205);
  sub_211934758((uint64_t)v205, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934758((uint64_t)v266, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v267, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211923EE8((uint64_t)v241, (uint64_t *)&unk_254AC8CB0);
  v154 = v265;
  sub_211934794((uint64_t)a1, (uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v141 = v272;
  sub_211934794((uint64_t)a2, (uint64_t)v272, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v136 = v268;
  v150 = v269;
  v139 = v270;
  v137 = v271;
  if ((v207 & 1) == 0)
    goto LABEL_34;
LABEL_87:
  v208 = v248[19];
  v209 = *(_QWORD *)&v154[v208];
  v210 = *(_QWORD *)&v154[v208 + 8];
  v211 = *(_QWORD *)&v154[v208 + 24];
  v273 = *(_BYTE **)&v154[v208 + 16];
  v274 = v209;
  v212 = *(_BYTE **)&v154[v208 + 32];
  v213 = *(_QWORD *)&v154[v208 + 48];
  v266 = *(_BYTE **)&v154[v208 + 40];
  v267 = v212;
  v214 = (uint64_t *)&v141[v208];
  v215 = *v214;
  v216 = v214[1];
  v217 = (_BYTE *)v214[2];
  v218 = v214[3];
  v219 = (_BYTE *)v214[4];
  v221 = (_BYTE *)v214[5];
  v220 = v214[6];
  v261 = v221;
  v262 = v219;
  v260 = v220;
  if (!v210)
  {
    sub_211958FFC(v215, v216);
    sub_211934758((uint64_t)v272, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (!v216)
    {
      sub_2119A7738(v274, 0);
      v137 = v271;
      sub_211934794((uint64_t)a1, (uint64_t)v271, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v139 = v270;
      sub_211934794((uint64_t)a2, (uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_107;
    }
LABEL_99:
    sub_2119A7738(v274, v210);
    sub_2119A7738(v215, v216);
    v136 = v268;
    v150 = v269;
    v139 = v270;
    v137 = v271;
    goto LABEL_35;
  }
  if (!v216)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_211934758((uint64_t)v272, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_99;
  }
  if (v274 == v215 && v210 == v216 || (v222 = 0, (sub_211A48258() & 1) != 0))
  {
    if (v273 == v217 && v211 == v218)
    {
      if (((v262 ^ v267) & 1) != 0)
      {
        v222 = 0;
        goto LABEL_106;
      }
    }
    else
    {
      v222 = 0;
      if ((sub_211A48258() & 1) == 0 || ((v262 ^ v267) & 1) != 0)
        goto LABEL_106;
    }
    if (v266 == v261 && v213 == v260)
      v222 = 1;
    else
      v222 = sub_211A48258();
  }
LABEL_106:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_211934758((uint64_t)v272, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v265, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2119A7738(v274, v210);
  v137 = v271;
  sub_211934794((uint64_t)a1, (uint64_t)v271, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v139 = v270;
  sub_211934794((uint64_t)a2, (uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v136 = v268;
  v150 = v269;
  if ((v222 & 1) == 0)
    goto LABEL_36;
LABEL_107:
  v223 = v248[16];
  v224 = *(_QWORD *)&v139[v223];
  if (!*(_QWORD *)&v137[v223])
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v271, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (!v224)
    {
      v150 = v269;
      sub_211934794((uint64_t)a1, (uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v136 = v268;
      sub_211934794((uint64_t)a2, (uint64_t)v268, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_116;
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v136 = v268;
    v150 = v269;
    goto LABEL_37;
  }
  if (!v224)
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v271, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    goto LABEL_114;
  }
  swift_bridgeObjectRetain();
  v225 = swift_bridgeObjectRetain();
  v226 = sub_2119131B8(v225, v224);
  swift_bridgeObjectRelease();
  sub_211934758((uint64_t)v270, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v271, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  v150 = v269;
  sub_211934794((uint64_t)a1, (uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v136 = v268;
  sub_211934794((uint64_t)a2, (uint64_t)v268, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v155 = v264;
  if ((v226 & 1) == 0)
    goto LABEL_38;
LABEL_116:
  v227 = v248[17];
  v228 = *(_QWORD *)&v136[v227];
  if (!*(_QWORD *)&v150[v227])
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v268, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (!v228)
    {
      v232 = (uint64_t)a1;
      v157 = v263;
      sub_211934794(v232, (uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v155 = v264;
      sub_211934794((uint64_t)a2, (uint64_t)v264, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_125;
    }
LABEL_123:
    swift_bridgeObjectRelease();
    v155 = v264;
    goto LABEL_39;
  }
  if (!v228)
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v268, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    goto LABEL_123;
  }
  swift_bridgeObjectRetain();
  v229 = swift_bridgeObjectRetain();
  v230 = sub_2119131B8(v229, v228);
  swift_bridgeObjectRelease();
  sub_211934758((uint64_t)v268, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  sub_211934758((uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  swift_bridgeObjectRelease();
  v231 = (uint64_t)a1;
  v157 = v263;
  sub_211934794(v231, (uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v155 = v264;
  sub_211934794((uint64_t)a2, (uint64_t)v264, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  if ((v230 & 1) == 0)
    goto LABEL_40;
LABEL_125:
  v233 = *((_QWORD *)v155 + 5);
  if (*((_QWORD *)v157 + 5))
  {
    if (v233)
    {
      v158 = sub_21194E8E8(*((_QWORD **)v157 + 5), *((_QWORD **)v155 + 5));
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v264, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934758((uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      swift_bridgeObjectRelease();
      return v158 & 1;
    }
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v264, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v264, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_211934758((uint64_t)v263, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    if (!v233)
    {
      v158 = 1;
      return v158 & 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_41:
  v158 = 0;
  return v158 & 1;
}

unint64_t sub_2119A76F4()
{
  unint64_t result;

  result = qword_254ACA258;
  if (!qword_254ACA258)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C81C, &type metadata for FMFFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA258);
  }
  return result;
}

uint64_t sub_2119A7738(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2119A7774()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACA290;
  if (!qword_254ACA290)
  {
    v1 = sub_21195E2C0((uint64_t *)&unk_254AC8CB0);
    v2 = sub_211910908(&qword_254ACA298, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACA290);
  }
  return result;
}

unint64_t sub_2119A77F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACA2A8;
  if (!qword_254ACA2A8)
  {
    v1 = sub_21195E2C0(&qword_254ACA2A0);
    v2 = sub_2119A7874((unint64_t *)&qword_254ACA2B0, (unint64_t *)&qword_254ACA2B8, (uint64_t)&protocol conformance descriptor for FMFLocationAlert, MEMORY[0x24BEE12A0]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACA2A8);
  }
  return result;
}

uint64_t sub_2119A7874(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_21195E2C0(&qword_254AC8420);
    v10 = sub_211910908(a2, (uint64_t (*)(uint64_t))type metadata accessor for FMFLocationAlert, a3);
    result = MEMORY[0x212BE47C8](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2119A78F8()
{
  return sub_211910908(&qword_254ACA2C0, (uint64_t (*)(uint64_t))type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
}

_QWORD *initializeBufferWithCopyOfBuffer for FMFFriend(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    v9 = a3[8];
    v69 = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    v11 = sub_211A47208();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_211958C38(qword_254AC8A78);
      memcpy(v69, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v69, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v69, 0, 1, v11);
    }
    v16 = a3;
    v17 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)v4 + v18) = *((_BYTE *)a2 + v18);
    v19 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)v4 + v19) = *((_BYTE *)a2 + v19);
    v20 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
    *(_QWORD *)((char *)v4 + v20) = *(_QWORD *)((char *)a2 + v20);
    v21 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    *((_BYTE *)v4 + v21) = *((_BYTE *)a2 + v21);
    v22 = a3[19];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(_QWORD *)((char *)a2 + v22 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v25;
      v26 = *((_QWORD *)v24 + 3);
      *((_QWORD *)v23 + 2) = *((_QWORD *)v24 + 2);
      *((_QWORD *)v23 + 3) = v26;
      v23[32] = v24[32];
      v27 = *((_QWORD *)v24 + 5);
      v28 = *((_QWORD *)v24 + 6);
      *((_QWORD *)v23 + 5) = v27;
      *((_QWORD *)v23 + 6) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v29;
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_QWORD *)v23 + 6) = *((_QWORD *)v24 + 6);
    }
    v30 = a3[20];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = (int *)type metadata accessor for FMFLocation();
    v34 = *((_QWORD *)v33 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
    {
      v35 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v36 = v32[1];
      *v31 = *v32;
      v31[1] = v36;
      *((_BYTE *)v31 + 16) = *((_BYTE *)v32 + 16);
      v31[3] = v32[3];
      *((_WORD *)v31 + 16) = *((_WORD *)v32 + 16);
      v37 = v33[8];
      v67 = (char *)v31 + v37;
      v70 = v34;
      v38 = (char *)v32 + v37;
      v39 = sub_211A4722C();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      if (v41(v38, 1, v39))
      {
        v42 = sub_211958C38(&qword_254AC9898);
        memcpy(v67, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v67, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v67, 0, 1, v39);
      }
      v16 = a3;
      *((_BYTE *)v31 + v33[9]) = *((_BYTE *)v32 + v33[9]);
      *((_BYTE *)v31 + v33[10]) = *((_BYTE *)v32 + v33[10]);
      v43 = v33[11];
      v44 = (char *)v31 + v43;
      v45 = (_QWORD *)((char *)v32 + v43);
      v46 = (void *)v45[38];
      if (v46)
      {
        v47 = v45[21];
        if (v47)
        {
          v48 = v45[1];
          *(_QWORD *)v44 = *v45;
          *((_QWORD *)v44 + 1) = v48;
          v49 = v45[3];
          *((_QWORD *)v44 + 2) = v45[2];
          *((_QWORD *)v44 + 3) = v49;
          v50 = v45[5];
          *((_QWORD *)v44 + 4) = v45[4];
          *((_QWORD *)v44 + 5) = v50;
          v51 = v45[7];
          *((_QWORD *)v44 + 6) = v45[6];
          *((_QWORD *)v44 + 7) = v51;
          v52 = v45[9];
          *((_QWORD *)v44 + 8) = v45[8];
          *((_QWORD *)v44 + 9) = v52;
          v53 = v45[11];
          *((_QWORD *)v44 + 10) = v45[10];
          *((_QWORD *)v44 + 11) = v53;
          v54 = v45[13];
          *((_QWORD *)v44 + 12) = v45[12];
          *((_QWORD *)v44 + 13) = v54;
          v55 = v45[15];
          *((_QWORD *)v44 + 14) = v45[14];
          *((_QWORD *)v44 + 15) = v55;
          v56 = v45[17];
          *((_QWORD *)v44 + 16) = v45[16];
          *((_QWORD *)v44 + 17) = v56;
          v57 = v45[19];
          *((_QWORD *)v44 + 18) = v45[18];
          *((_QWORD *)v44 + 19) = v57;
          *((_QWORD *)v44 + 20) = v45[20];
          *((_QWORD *)v44 + 21) = v47;
          v72 = v45[23];
          *((_QWORD *)v44 + 22) = v45[22];
          *((_QWORD *)v44 + 23) = v72;
          v68 = v45[25];
          *((_QWORD *)v44 + 24) = v45[24];
          *((_QWORD *)v44 + 25) = v68;
          v58 = v45[27];
          *((_QWORD *)v44 + 26) = v45[26];
          *((_QWORD *)v44 + 27) = v58;
          v59 = v45[29];
          *((_QWORD *)v44 + 28) = v45[28];
          *((_QWORD *)v44 + 29) = v59;
          v60 = v45[31];
          *((_QWORD *)v44 + 30) = v45[30];
          *((_QWORD *)v44 + 31) = v60;
          v61 = v45[33];
          *((_QWORD *)v44 + 32) = v45[32];
          *((_QWORD *)v44 + 33) = v61;
          v62 = v45[35];
          *((_QWORD *)v44 + 34) = v45[34];
          *((_QWORD *)v44 + 35) = v62;
          v63 = v45[37];
          *((_QWORD *)v44 + 36) = v45[36];
          *((_QWORD *)v44 + 37) = v63;
          v46 = (void *)v45[38];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((char *)v31 + v43, v45, 0x130uLL);
        }
        *((_QWORD *)v44 + 38) = v46;
        v44[312] = *((_BYTE *)v45 + 312);
        v64 = v45[41];
        *((_QWORD *)v44 + 40) = v45[40];
        *((_QWORD *)v44 + 41) = v64;
        *((_WORD *)v44 + 168) = *((_WORD *)v45 + 168);
        *((_QWORD *)v44 + 43) = v45[43];
        v44[352] = *((_BYTE *)v45 + 352);
        v65 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((char *)v31 + v43, v45, 0x161uLL);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v70 + 56))(v31, 0, 1, v33);
    }
    *((_BYTE *)v4 + v16[21]) = *((_BYTE *)a2 + v16[21]);
  }
  return v4;
}

_QWORD *assignWithCopy for FMFFriend(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, int *);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  size_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  void *v74;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_211A47208();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_211958C38(qword_254AC8A78);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  v15 = a3[19];
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a1 + v15 + 8);
  v19 = *(_QWORD *)((char *)a2 + v15 + 8);
  if (v18)
  {
    if (v19)
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v16 + 32) = v17[32];
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2119A8F10(v16);
      v21 = *((_OWORD *)v17 + 1);
      v20 = *((_OWORD *)v17 + 2);
      v22 = *(_OWORD *)v17;
      *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
      *(_OWORD *)v16 = v22;
    }
  }
  else if (v19)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
    *(_BYTE *)(v16 + 32) = v17[32];
    *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
    *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)v17;
    v24 = *((_OWORD *)v17 + 1);
    v25 = *((_OWORD *)v17 + 2);
    *(_QWORD *)(v16 + 48) = *((_QWORD *)v17 + 6);
    *(_OWORD *)(v16 + 16) = v24;
    *(_OWORD *)(v16 + 32) = v25;
    *(_OWORD *)v16 = v23;
  }
  v26 = a3[20];
  v27 = (uint64_t)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = (int *)type metadata accessor for FMFLocation();
  v30 = *((_QWORD *)v29 - 1);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31((uint64_t)v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      v72 = a3;
      v73 = v30;
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
      *(_BYTE *)(v27 + 16) = v28[16];
      v34 = *((_QWORD *)v28 + 3);
      *(_BYTE *)(v27 + 32) = v28[32];
      *(_QWORD *)(v27 + 24) = v34;
      *(_BYTE *)(v27 + 33) = v28[33];
      v35 = v29[8];
      v70 = (void *)(v27 + v35);
      v36 = &v28[v35];
      v37 = sub_211A4722C();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      if (v39(v36, 1, v37))
      {
        v40 = sub_211958C38(&qword_254AC9898);
        memcpy(v70, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v70, v36, v37);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v70, 0, 1, v37);
      }
      *(_BYTE *)(v27 + v29[9]) = v28[v29[9]];
      *(_BYTE *)(v27 + v29[10]) = v28[v29[10]];
      v53 = v29[11];
      v54 = (_QWORD *)(v27 + v53);
      v55 = &v28[v53];
      a3 = v72;
      v56 = v73;
      if (*((_QWORD *)v55 + 38))
      {
        if (*((_QWORD *)v55 + 21))
        {
          *v54 = *(_QWORD *)v55;
          v54[1] = *((_QWORD *)v55 + 1);
          v54[2] = *((_QWORD *)v55 + 2);
          v54[3] = *((_QWORD *)v55 + 3);
          v54[4] = *((_QWORD *)v55 + 4);
          v54[5] = *((_QWORD *)v55 + 5);
          v54[6] = *((_QWORD *)v55 + 6);
          v54[7] = *((_QWORD *)v55 + 7);
          v54[8] = *((_QWORD *)v55 + 8);
          v54[9] = *((_QWORD *)v55 + 9);
          v54[10] = *((_QWORD *)v55 + 10);
          v54[11] = *((_QWORD *)v55 + 11);
          v54[12] = *((_QWORD *)v55 + 12);
          v54[13] = *((_QWORD *)v55 + 13);
          v54[14] = *((_QWORD *)v55 + 14);
          v54[15] = *((_QWORD *)v55 + 15);
          v54[16] = *((_QWORD *)v55 + 16);
          v54[17] = *((_QWORD *)v55 + 17);
          v54[18] = *((_QWORD *)v55 + 18);
          v54[19] = *((_QWORD *)v55 + 19);
          v54[20] = *((_QWORD *)v55 + 20);
          v54[21] = *((_QWORD *)v55 + 21);
          v54[22] = *((_QWORD *)v55 + 22);
          v54[23] = *((_QWORD *)v55 + 23);
          v54[24] = *((_QWORD *)v55 + 24);
          v54[25] = *((_QWORD *)v55 + 25);
          v54[26] = *((_QWORD *)v55 + 26);
          v54[27] = *((_QWORD *)v55 + 27);
          v54[28] = *((_QWORD *)v55 + 28);
          v54[29] = *((_QWORD *)v55 + 29);
          v54[30] = *((_QWORD *)v55 + 30);
          v54[31] = *((_QWORD *)v55 + 31);
          v54[32] = *((_QWORD *)v55 + 32);
          v54[33] = *((_QWORD *)v55 + 33);
          v54[34] = *((_QWORD *)v55 + 34);
          v54[35] = *((_QWORD *)v55 + 35);
          v54[36] = *((_QWORD *)v55 + 36);
          v54[37] = *((_QWORD *)v55 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v56 = v73;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy(v54, v55, 0x130uLL);
        }
        v57 = (void *)*((_QWORD *)v55 + 38);
        v54[38] = v57;
        *((_BYTE *)v54 + 312) = v55[312];
        v54[40] = *((_QWORD *)v55 + 40);
        v54[41] = *((_QWORD *)v55 + 41);
        *((_BYTE *)v54 + 336) = v55[336];
        *((_BYTE *)v54 + 337) = v55[337];
        v54[43] = *((_QWORD *)v55 + 43);
        *((_BYTE *)v54 + 352) = v55[352];
        v58 = v57;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v54, v55, 0x161uLL);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v56 + 56))(v27, 0, 1, v29);
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v33)
  {
    sub_211934758(v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
LABEL_21:
    v41 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254AC8CB0) - 8) + 64);
    v42 = (void *)v27;
    v43 = v28;
LABEL_22:
    memcpy(v42, v43, v41);
    goto LABEL_34;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 16) = v28[16];
  v44 = *((_QWORD *)v28 + 3);
  *(_BYTE *)(v27 + 32) = v28[32];
  *(_QWORD *)(v27 + 24) = v44;
  *(_BYTE *)(v27 + 33) = v28[33];
  v45 = v29[8];
  v46 = (void *)(v27 + v45);
  v47 = &v28[v45];
  v48 = sub_211A4722C();
  v71 = *(_QWORD *)(v48 - 8);
  v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
  v74 = v46;
  LODWORD(v46) = v49(v46, 1, v48);
  v50 = v49(v47, 1, v48);
  if ((_DWORD)v46)
  {
    if (v50)
    {
      v51 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC9898) - 8) + 64);
      v52 = v74;
LABEL_37:
      memcpy(v52, v47, v51);
      goto LABEL_40;
    }
    (*(void (**)(void *, char *, uint64_t))(v71 + 16))(v74, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v48);
  }
  else
  {
    if (v50)
    {
      (*(void (**)(void *, uint64_t))(v71 + 8))(v74, v48);
      v51 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC9898) - 8) + 64);
      v52 = v74;
      goto LABEL_37;
    }
    (*(void (**)(void *, char *, uint64_t))(v71 + 24))(v74, v47, v48);
  }
LABEL_40:
  *(_BYTE *)(v27 + v29[9]) = v28[v29[9]];
  *(_BYTE *)(v27 + v29[10]) = v28[v29[10]];
  v60 = v29[11];
  v61 = v27 + v60;
  v62 = &v28[v60];
  v63 = *(_QWORD *)&v28[v60 + 304];
  if (*(_QWORD *)(v61 + 304))
  {
    if (v63)
    {
      v64 = *((_QWORD *)v62 + 21);
      if (*(_QWORD *)(v61 + 168))
      {
        if (v64)
        {
          *(_QWORD *)v61 = *(_QWORD *)v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
          *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
          *(_QWORD *)(v61 + 32) = *((_QWORD *)v62 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 40) = *((_QWORD *)v62 + 5);
          *(_QWORD *)(v61 + 48) = *((_QWORD *)v62 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 56) = *((_QWORD *)v62 + 7);
          *(_QWORD *)(v61 + 64) = *((_QWORD *)v62 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 72) = *((_QWORD *)v62 + 9);
          *(_QWORD *)(v61 + 80) = *((_QWORD *)v62 + 10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 88) = *((_QWORD *)v62 + 11);
          *(_QWORD *)(v61 + 96) = *((_QWORD *)v62 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 104) = *((_QWORD *)v62 + 13);
          *(_QWORD *)(v61 + 112) = *((_QWORD *)v62 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 120) = *((_QWORD *)v62 + 15);
          *(_QWORD *)(v61 + 128) = *((_QWORD *)v62 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 136) = *((_QWORD *)v62 + 17);
          *(_QWORD *)(v61 + 144) = *((_QWORD *)v62 + 18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 152) = *((_QWORD *)v62 + 19);
          *(_QWORD *)(v61 + 160) = *((_QWORD *)v62 + 20);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 168) = *((_QWORD *)v62 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 176) = *((_QWORD *)v62 + 22);
          *(_QWORD *)(v61 + 184) = *((_QWORD *)v62 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 192) = *((_QWORD *)v62 + 24);
          *(_QWORD *)(v61 + 200) = *((_QWORD *)v62 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 208) = *((_QWORD *)v62 + 26);
          *(_QWORD *)(v61 + 216) = *((_QWORD *)v62 + 27);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 224) = *((_QWORD *)v62 + 28);
          *(_QWORD *)(v61 + 232) = *((_QWORD *)v62 + 29);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 240) = *((_QWORD *)v62 + 30);
          *(_QWORD *)(v61 + 248) = *((_QWORD *)v62 + 31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 256) = *((_QWORD *)v62 + 32);
          *(_QWORD *)(v61 + 264) = *((_QWORD *)v62 + 33);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 272) = *((_QWORD *)v62 + 34);
          *(_QWORD *)(v61 + 280) = *((_QWORD *)v62 + 35);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v61 + 288) = *((_QWORD *)v62 + 36);
          *(_QWORD *)(v61 + 296) = *((_QWORD *)v62 + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_54:
          v65 = (void *)*((_QWORD *)v62 + 38);
          v66 = *(void **)(v61 + 304);
          *(_QWORD *)(v61 + 304) = v65;
          v67 = v65;

          *(_BYTE *)(v61 + 312) = v62[312];
          *(_QWORD *)(v61 + 320) = *((_QWORD *)v62 + 40);
          *(_QWORD *)(v61 + 328) = *((_QWORD *)v62 + 41);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v61 + 336) = v62[336];
          *(_BYTE *)(v61 + 337) = v62[337];
          *(_QWORD *)(v61 + 344) = *((_QWORD *)v62 + 43);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v61 + 352) = v62[352];
          goto LABEL_34;
        }
        sub_21196ECA4(v61);
      }
      else if (v64)
      {
        *(_QWORD *)v61 = *(_QWORD *)v62;
        *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
        *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
        *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
        *(_QWORD *)(v61 + 32) = *((_QWORD *)v62 + 4);
        *(_QWORD *)(v61 + 40) = *((_QWORD *)v62 + 5);
        *(_QWORD *)(v61 + 48) = *((_QWORD *)v62 + 6);
        *(_QWORD *)(v61 + 56) = *((_QWORD *)v62 + 7);
        *(_QWORD *)(v61 + 64) = *((_QWORD *)v62 + 8);
        *(_QWORD *)(v61 + 72) = *((_QWORD *)v62 + 9);
        *(_QWORD *)(v61 + 80) = *((_QWORD *)v62 + 10);
        *(_QWORD *)(v61 + 88) = *((_QWORD *)v62 + 11);
        *(_QWORD *)(v61 + 96) = *((_QWORD *)v62 + 12);
        *(_QWORD *)(v61 + 104) = *((_QWORD *)v62 + 13);
        *(_QWORD *)(v61 + 112) = *((_QWORD *)v62 + 14);
        *(_QWORD *)(v61 + 120) = *((_QWORD *)v62 + 15);
        *(_QWORD *)(v61 + 128) = *((_QWORD *)v62 + 16);
        *(_QWORD *)(v61 + 136) = *((_QWORD *)v62 + 17);
        *(_QWORD *)(v61 + 144) = *((_QWORD *)v62 + 18);
        *(_QWORD *)(v61 + 152) = *((_QWORD *)v62 + 19);
        *(_QWORD *)(v61 + 160) = *((_QWORD *)v62 + 20);
        *(_QWORD *)(v61 + 168) = *((_QWORD *)v62 + 21);
        *(_QWORD *)(v61 + 176) = *((_QWORD *)v62 + 22);
        *(_QWORD *)(v61 + 184) = *((_QWORD *)v62 + 23);
        *(_QWORD *)(v61 + 192) = *((_QWORD *)v62 + 24);
        *(_QWORD *)(v61 + 200) = *((_QWORD *)v62 + 25);
        *(_QWORD *)(v61 + 208) = *((_QWORD *)v62 + 26);
        *(_QWORD *)(v61 + 216) = *((_QWORD *)v62 + 27);
        *(_QWORD *)(v61 + 224) = *((_QWORD *)v62 + 28);
        *(_QWORD *)(v61 + 232) = *((_QWORD *)v62 + 29);
        *(_QWORD *)(v61 + 240) = *((_QWORD *)v62 + 30);
        *(_QWORD *)(v61 + 248) = *((_QWORD *)v62 + 31);
        *(_QWORD *)(v61 + 256) = *((_QWORD *)v62 + 32);
        *(_QWORD *)(v61 + 264) = *((_QWORD *)v62 + 33);
        *(_QWORD *)(v61 + 272) = *((_QWORD *)v62 + 34);
        *(_QWORD *)(v61 + 280) = *((_QWORD *)v62 + 35);
        *(_QWORD *)(v61 + 288) = *((_QWORD *)v62 + 36);
        *(_QWORD *)(v61 + 296) = *((_QWORD *)v62 + 37);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_54;
      }
      memcpy((void *)v61, v62, 0x130uLL);
      goto LABEL_54;
    }
    sub_211985BF8(v61);
LABEL_49:
    v42 = (void *)v61;
    v43 = v62;
    v41 = 353;
    goto LABEL_22;
  }
  if (!v63)
    goto LABEL_49;
  if (*((_QWORD *)v62 + 21))
  {
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *(_QWORD *)(v61 + 8) = *((_QWORD *)v62 + 1);
    *(_QWORD *)(v61 + 16) = *((_QWORD *)v62 + 2);
    *(_QWORD *)(v61 + 24) = *((_QWORD *)v62 + 3);
    *(_QWORD *)(v61 + 32) = *((_QWORD *)v62 + 4);
    *(_QWORD *)(v61 + 40) = *((_QWORD *)v62 + 5);
    *(_QWORD *)(v61 + 48) = *((_QWORD *)v62 + 6);
    *(_QWORD *)(v61 + 56) = *((_QWORD *)v62 + 7);
    *(_QWORD *)(v61 + 64) = *((_QWORD *)v62 + 8);
    *(_QWORD *)(v61 + 72) = *((_QWORD *)v62 + 9);
    *(_QWORD *)(v61 + 80) = *((_QWORD *)v62 + 10);
    *(_QWORD *)(v61 + 88) = *((_QWORD *)v62 + 11);
    *(_QWORD *)(v61 + 96) = *((_QWORD *)v62 + 12);
    *(_QWORD *)(v61 + 104) = *((_QWORD *)v62 + 13);
    *(_QWORD *)(v61 + 112) = *((_QWORD *)v62 + 14);
    *(_QWORD *)(v61 + 120) = *((_QWORD *)v62 + 15);
    *(_QWORD *)(v61 + 128) = *((_QWORD *)v62 + 16);
    *(_QWORD *)(v61 + 136) = *((_QWORD *)v62 + 17);
    *(_QWORD *)(v61 + 144) = *((_QWORD *)v62 + 18);
    *(_QWORD *)(v61 + 152) = *((_QWORD *)v62 + 19);
    *(_QWORD *)(v61 + 160) = *((_QWORD *)v62 + 20);
    *(_QWORD *)(v61 + 168) = *((_QWORD *)v62 + 21);
    *(_QWORD *)(v61 + 176) = *((_QWORD *)v62 + 22);
    *(_QWORD *)(v61 + 184) = *((_QWORD *)v62 + 23);
    *(_QWORD *)(v61 + 192) = *((_QWORD *)v62 + 24);
    *(_QWORD *)(v61 + 200) = *((_QWORD *)v62 + 25);
    *(_QWORD *)(v61 + 208) = *((_QWORD *)v62 + 26);
    *(_QWORD *)(v61 + 216) = *((_QWORD *)v62 + 27);
    *(_QWORD *)(v61 + 224) = *((_QWORD *)v62 + 28);
    *(_QWORD *)(v61 + 232) = *((_QWORD *)v62 + 29);
    *(_QWORD *)(v61 + 240) = *((_QWORD *)v62 + 30);
    *(_QWORD *)(v61 + 248) = *((_QWORD *)v62 + 31);
    *(_QWORD *)(v61 + 256) = *((_QWORD *)v62 + 32);
    *(_QWORD *)(v61 + 264) = *((_QWORD *)v62 + 33);
    *(_QWORD *)(v61 + 272) = *((_QWORD *)v62 + 34);
    *(_QWORD *)(v61 + 280) = *((_QWORD *)v62 + 35);
    *(_QWORD *)(v61 + 288) = *((_QWORD *)v62 + 36);
    *(_QWORD *)(v61 + 296) = *((_QWORD *)v62 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)v61, v62, 0x130uLL);
  }
  v68 = (void *)*((_QWORD *)v62 + 38);
  *(_QWORD *)(v61 + 304) = v68;
  *(_BYTE *)(v61 + 312) = v62[312];
  *(_QWORD *)(v61 + 320) = *((_QWORD *)v62 + 40);
  *(_QWORD *)(v61 + 328) = *((_QWORD *)v62 + 41);
  *(_BYTE *)(v61 + 336) = v62[336];
  *(_BYTE *)(v61 + 337) = v62[337];
  *(_QWORD *)(v61 + 344) = *((_QWORD *)v62 + 43);
  *(_BYTE *)(v61 + 352) = v62[352];
  v69 = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_34:
  *((_BYTE *)a1 + a3[21]) = *((_BYTE *)a2 + a3[21]);
  return a1;
}

uint64_t sub_2119A8F10(uint64_t a1)
{
  destroy for FMFContact();
  return a1;
}

uint64_t initializeWithTake for FMFFriend(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_211958C38(qword_254AC8A78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[19];
  v20 = a3[20];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  v24 = *(_OWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
  *(_OWORD *)(v21 + 32) = v24;
  v25 = (_OWORD *)(a1 + v20);
  v26 = (_OWORD *)(a2 + v20);
  v27 = (int *)type metadata accessor for FMFLocation();
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    *((_BYTE *)v25 + 16) = *((_BYTE *)v26 + 16);
    *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
    *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
    v30 = v27[8];
    __dst = (char *)v25 + v30;
    v31 = (char *)v26 + v30;
    v32 = sub_211A4722C();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_211958C38(&qword_254AC9898);
      memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(__dst, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v32);
    }
    *((_BYTE *)v25 + v27[9]) = *((_BYTE *)v26 + v27[9]);
    *((_BYTE *)v25 + v27[10]) = *((_BYTE *)v26 + v27[10]);
    memcpy((char *)v25 + v27[11], (char *)v26 + v27[11], 0x161uLL);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_2119A91FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_211958C38(qword_254AC8A78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 80);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2119A92A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_211958C38(qword_254AC8A78);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 80);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFFriend.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFFriend.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_2119A9424 + 4 * byte_211A4C4F7[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_2119A9458 + 4 * byte_211A4C4F2[v4]))();
}

uint64_t sub_2119A9458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119A9460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119A9468);
  return result;
}

uint64_t sub_2119A9474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119A947CLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_2119A9480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119A9488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFFriend.CodingKeys()
{
  return &type metadata for FMFFriend.CodingKeys;
}

unint64_t sub_2119A94A8()
{
  unint64_t result;

  result = qword_254ACA398;
  if (!qword_254ACA398)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C7F4, &type metadata for FMFFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA398);
  }
  return result;
}

unint64_t sub_2119A94F0()
{
  unint64_t result;

  result = qword_254ACA3A0;
  if (!qword_254ACA3A0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C72C, &type metadata for FMFFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA3A0);
  }
  return result;
}

unint64_t sub_2119A9538()
{
  unint64_t result;

  result = qword_254ACA3A8;
  if (!qword_254ACA3A8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C754, &type metadata for FMFFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA3A8);
  }
  return result;
}

uint64_t sub_2119A957C()
{
  unint64_t v0;

  v0 = sub_211A4827C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

FMFCore::FMFRelationshipType __swiftcall FMFRelationshipType.init(rawValue:)(FMFCore::FMFRelationshipType rawValue)
{
  FMFCore::FMFRelationshipType *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t FMFRelationshipType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static FMFRelationshipType.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

unint64_t FMFRelationshipType.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000020;
}

unint64_t sub_2119A9688()
{
  unint64_t result;

  result = qword_254ACA3D0;
  if (!qword_254ACA3D0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFRelationshipType, &type metadata for FMFRelationshipType);
    atomic_store(result, (unint64_t *)&qword_254ACA3D0);
  }
  return result;
}

unint64_t sub_2119A96D0()
{
  unint64_t result;

  result = qword_254ACA3D8;
  if (!qword_254ACA3D8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFRelationshipType, &type metadata for FMFRelationshipType);
    atomic_store(result, (unint64_t *)&qword_254ACA3D8);
  }
  return result;
}

uint64_t static FMFDemoError.== infix(_:_:)()
{
  return 1;
}

uint64_t FMFDemoError.hash(into:)()
{
  return sub_211A48324();
}

uint64_t FMFDemoError.hashValue.getter()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

unint64_t sub_2119A9788()
{
  unint64_t result;

  result = qword_254ACA3F0;
  if (!qword_254ACA3F0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDemoError, &type metadata for FMFDemoError);
    atomic_store(result, (unint64_t *)&qword_254ACA3F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFDemoError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2119A980C + 4 * asc_211A4CA60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2119A982C + 4 * byte_211A4CA65[v4]))();
}

_BYTE *sub_2119A980C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2119A982C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2119A9834(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2119A983C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2119A9844(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2119A984C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFDemoError()
{
  return &type metadata for FMFDemoError;
}

_QWORD *sub_2119A9868(uint64_t a1, uint64_t a2, __int128 *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v18 = a1;
  v17 = sub_211A47D90();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A47D60();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8, v10);
  v11 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v11, v12);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  sub_211920E14();
  sub_211A477B4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v9, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE5750], v17);
  v3[6] = sub_211A47DC0();
  v13 = v18;
  v14 = v20;
  v3[12] = v19;
  v3[13] = v13;
  sub_2119622B4(v14, (uint64_t)(v3 + 7));
  return v3;
}

uint64_t sub_2119A9A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v9 = sub_211A4779C();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211A477D8();
  v13 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v4 + 48);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a1;
  v18[4] = a2;
  v18[5] = a3;
  v18[6] = v17;
  aBlock[4] = sub_2119AACC0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC8630;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v12, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v22);
  swift_release();
  return swift_release();
}

void sub_2119A9CA0(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  _QWORD *v25;
  void (*v26)(uint64_t *, uint64_t *);
  uint64_t Strong;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  void (*v41)(_QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD v47[2];
  void (*v48)(_QWORD, _QWORD);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t *);
  uint64_t v57[3];

  v52 = a5;
  v9 = sub_211A47208();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v49 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v12 = a4 + 16;
  v13 = sub_211A47748();
  v14 = sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v51 = a4 + 16;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v48 = a2;
    v20 = v19;
    v57[0] = v19;
    v47[1] = v14;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_211A483A8();
    v55 = sub_211950A9C(v21, v22, v57);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v15, v16, "FMFDemoInteractionController: Handling %s.", v18, 0xCu);
    swift_arrayDestroy();
    v23 = v20;
    a2 = v48;
    MEMORY[0x212BE48A0](v23, -1, -1);
    v24 = v18;
    v12 = v51;
    MEMORY[0x212BE48A0](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v52;
  v25[3] = a2;
  v25[4] = a3;
  v57[0] = a1;
  v57[1] = (uint64_t)sub_2119AACF4;
  v57[2] = (uint64_t)v25;
  type metadata accessor for FMFBaseRequest();
  sub_211A47E14();
  swift_retain_n();
  swift_retain_n();
  sub_21195E2C0(&qword_254ACDE90);
  swift_getFunctionTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_211958C38(&qword_254ACA518);
  if (swift_dynamicCast())
  {
    v26 = v56;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v28 = *(_QWORD **)(Strong + 104);
      v29 = (uint64_t)v49;
      sub_211A471FC();
      sub_2119798D4(v29);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v29, v9);
      v30 = v28[4];
      v31 = v28[5];
      v33 = v28[6];
      v32 = v28[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = sub_2119AAD60(v30, v31, v33, v32);
      v53 = 0;
      v54 = v34;
      swift_retain();
      v26(&v54, &v53);
      swift_release();
      type metadata accessor for FMFInitRefreshClientResponse();
      v35 = swift_dynamicCastClass();
      if (v35)
      {
        v36 = v35;
        swift_retain();
        sub_21192B82C(v36);
        swift_release();
      }
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_retain_n();
    v37 = sub_211A47724();
    v38 = sub_211A47D30();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v51 = v12;
      v40 = (uint8_t *)v39;
      v41 = a2;
      v42 = swift_slowAlloc();
      v57[0] = v42;
      *(_DWORD *)v40 = 136315138;
      v43 = sub_211A483A8();
      v55 = sub_211950A9C(v43, v44, v57);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v37, v38, "FMFDemoInteractionController: Received %s, which is unsupported in demo mode.", v40, 0xCu);
      swift_arrayDestroy();
      v45 = v42;
      a2 = v41;
      MEMORY[0x212BE48A0](v45, -1, -1);
      MEMORY[0x212BE48A0](v40, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_2119AA734();
      swift_release();
    }
    sub_2119AAD1C();
    v46 = (void *)swift_allocError();
    a2(0, v46);
    swift_release();
    swift_release();

  }
}

uint64_t sub_2119AA2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  if (qword_254AC7B80 != -1)
    swift_once();
  v8 = sub_211A47748();
  sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v9 = sub_211A47724();
  v10 = sub_211A47D30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v22 = a2;
    v12 = swift_slowAlloc();
    v23 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_211A483A8();
    sub_211950A9C(v13, v14, &v23);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v9, v10, "FMFDemoInteractionController: Forwarding %s to real server interaction controller.", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    a2 = v22;
    MEMORY[0x212BE48A0](v15, -1, -1);
    MEMORY[0x212BE48A0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v16 = v4 + 7;
  v17 = v4[10];
  v18 = v4[11];
  sub_211931DB4(v16, v17);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  v20 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))(v18 + 72);
  swift_retain();
  v20(a1, sub_2119AAC60, v19, v17, v18);
  return swift_release();
}

uint64_t sub_2119AA4D4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;

  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  v7 = a2;
  v8 = a2;
  swift_retain();
  v9 = sub_211A47724();
  v10 = sub_211A47D30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136315394;
    sub_211950A9C(0xD00000000000001FLL, 0x8000000211A54D30, &v17);
    sub_211A47E2C();
    swift_release();
    *(_WORD *)(v11 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      v13 = sub_211A482DC();
      v15 = v14;
    }
    else
    {
      v15 = 0xE400000000000000;
      v13 = 1701736302;
    }
    sub_211950A9C(v13, v15, &v17);
    sub_211A47E2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21190D000, v9, v10, "FMFDemoInteractionController: Received %s, (error: %s) from real server interaction controller.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v12, -1, -1);
    MEMORY[0x212BE48A0](v11, -1, -1);

  }
  else
  {
    swift_release();

  }
  return a3(a1, a2);
}

uint64_t sub_2119AA734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v32;

  v0 = sub_211958C38(&qword_254AC8C98);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v32 - v6;
  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_211A46FE0();
  v13 = v12;

  v14 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_211A46FE0();
  v17 = v16;

  v18 = sub_211A4713C();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v7, 1, 1, v18);
  v19(v4, 1, 1, v18);
  type metadata accessor for FMFAlert();
  v20 = (_QWORD *)swift_allocObject();
  v20[3] = 0;
  swift_unknownObjectWeakInit();
  v20[4] = 0xD00000000000001CLL;
  v20[5] = 0x8000000211A54CC0;
  v20[6] = v11;
  v20[7] = v13;
  v21 = v32;
  v20[8] = 0;
  v20[9] = 0;
  v20[10] = v15;
  v20[11] = v17;
  v20[12] = 0;
  v20[13] = 0;
  sub_21192DD68((uint64_t)v7, (uint64_t)v20 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL, &qword_254AC8C98);
  sub_21192DD68((uint64_t)v4, (uint64_t)v20 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL, &qword_254AC8C98);
  *((_BYTE *)v20 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = 5;
  v22 = MEMORY[0x212BE496C](v21 + 16);
  if (!v22)
    return swift_release();
  v23 = v22;
  v24 = qword_254AC7B80;
  swift_retain();
  if (v24 != -1)
    swift_once();
  v25 = sub_211A47748();
  sub_21194F3E0(v25, (uint64_t)qword_254ADC7E8);
  v26 = sub_211A47724();
  v27 = sub_211A47D30();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_21190D000, v26, v27, "FMFManager: didReceive serverAlert", v28, 2u);
    MEMORY[0x212BE48A0](v28, -1, -1);
  }

  swift_beginAccess();
  if (MEMORY[0x212BE496C](v23 + 32))
  {
    v29 = *(_QWORD *)(v23 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v29 + 104))(v23, v20, ObjectType, v29);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_2119AAAE0()
{
  uint64_t v0;

  sub_211962AB8(v0 + 16);
  sub_211962AB8(v0 + 32);

  sub_211931C34(v0 + 56);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoInteractionController()
{
  return objc_opt_self();
}

uint64_t sub_2119AAB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_2119AAB80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_2119AABB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  sub_211931DB4((_QWORD *)(*(_QWORD *)v0 + 56), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_2119AABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2119A9A64(a1, a2, a3, a4);
}

uint64_t sub_2119AAC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2119AA2B8(a1, a2, a3);
}

uint64_t sub_2119AAC3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119AAC60(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2119AA4D4(a1, a2, *(uint64_t (**)(uint64_t, void *))(v2 + 16));
}

uint64_t sub_2119AAC68()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2119AAC8C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2119AACC0()
{
  uint64_t v0;

  sub_2119A9CA0(*(_QWORD *)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_2119AACD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119AACF4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 24))(*a1, *a2);
}

unint64_t sub_2119AAD1C()
{
  unint64_t result;

  result = qword_254ACA520;
  if (!qword_254ACA520)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDemoError, &type metadata for FMFDemoError);
    atomic_store(result, (unint64_t *)&qword_254ACA520);
  }
  return result;
}

uint64_t sub_2119AAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[240];
  __int128 v18[4];
  uint64_t v19;
  char v20;
  __int128 v21[2];
  _BYTE v22[248];

  v8 = sub_211958C38(&qword_254AC8360);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BEE4AF8];
  v13 = sub_211A3A004(MEMORY[0x24BEE4AF8]);
  v14 = sub_211A3A004(v12);
  v15 = type metadata accessor for FMFCommandResponseFragment();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v11, 1, 1, v15);
  memset(v21, 0, sizeof(v21));
  v19 = 0;
  v20 = 1;
  memset(v18, 0, 57);
  sub_21196A450((uint64_t)v22);
  sub_21192DD68((uint64_t)v22, (uint64_t)v17, (uint64_t *)&unk_254ACC2F0);
  type metadata accessor for FMFInitRefreshClientResponse();
  swift_allocObject();
  return sub_21196A078(v13, v14, (uint64_t)v11, 0, 200, 0, 0, 0, v21, &v19, v18, (uint64_t)v17, a3, a4, a2, a1, v12, v12, v12,
           v12,
           v12,
           v12,
           v12);
}

void sub_2119AAEE8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119AAF14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119AAF54 + 4 * byte_211A4CBA0[a1]))(0x54746E6572727563, 0xEB00000000656D69);
}

uint64_t sub_2119AAF54()
{
  return 0x656D614E707061;
}

uint64_t sub_2119AAF6C()
{
  return 0x6973726556707061;
}

uint64_t sub_2119AAF8C()
{
  return 0x54746375646F7270;
}

uint64_t sub_2119AAFA4()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_2119AAFC4()
{
  return 0x646C697542736FLL;
}

uint64_t sub_2119AAFDC()
{
  return 0x6C43656369766564;
}

uint64_t sub_2119AAFFC()
{
  return 0x4455656369766564;
}

uint64_t sub_2119AB018()
{
  return 0x7365527070417369;
}

unint64_t sub_2119AB03C()
{
  return 0xD000000000000011;
}

uint64_t sub_2119AB0BC()
{
  return 0x6956776F646E6977;
}

uint64_t sub_2119AB0E0()
{
  return 0x736F4D746E6F7266;
}

uint64_t sub_2119AB104()
{
  return 0x4B53656369766564;
}

uint64_t sub_2119AB120()
{
  return 0x437972746E756F63;
}

uint64_t sub_2119AB140()
{
  return 0x6F436E6F69676572;
}

unint64_t sub_2119AB15C()
{
  return 0xD000000000000010;
}

uint64_t sub_2119AB178()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_2119AB18C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2119AB1C8 + 4 * byte_211A4CBB5[a1]))(0xD000000000000015, 0x8000000211A54F30);
}

uint64_t sub_2119AB1C8()
{
  uint64_t v0;

  return v0 + 3;
}

unint64_t sub_2119AB220()
{
  return 0xD000000000000011;
}

uint64_t sub_2119AB23C()
{
  void *v0;
  void *v1;

  v0 = (void *)sub_211A478EC();
  v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    sub_211A47904();

  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2119AB2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_2119AB34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2119AB3F4()
{
  return type metadata accessor for FMFBaseRequest();
}

uint64_t sub_2119AB3FC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*v1 + qword_254ACA540);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2119AB450())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FMFAddUpdateLabelAction.__allocating_init(locationToLabel:label:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  Swift::String v7;
  __int16 v8;
  uint64_t v9;
  char v11;

  v6 = swift_allocObject();
  sub_21193324C(a1, v6 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  if (a3)
  {
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = a2;
    v7._object = a3;
    FMFDefaultLabel.init(rawValue:)(v7);
    if (v11 == 5)
      v8 = 259;
    else
      v8 = 3;
  }
  else
  {
    a2 = 0;
    v8 = 0;
  }
  swift_retain();
  sub_211933290(a1);
  v9 = v6 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label;
  *(_QWORD *)v9 = a2;
  *(_QWORD *)(v9 + 8) = a3;
  *(_WORD *)(v9 + 16) = v8;
  swift_release();
  *(_BYTE *)(v6 + 16) = 1;
  return v6;
}

uint64_t FMFAddUpdateLabelAction.init(locationToLabel:label:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  Swift::String v7;
  __int16 v8;
  uint64_t v9;
  char v11;

  sub_21193324C(a1, v3 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  if (a3)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = a2;
    v7._object = a3;
    FMFDefaultLabel.init(rawValue:)(v7);
    if (v11 == 5)
      v8 = 259;
    else
      v8 = 3;
  }
  else
  {
    swift_retain();
    a2 = 0;
    v8 = 0;
  }
  sub_211933290(a1);
  v9 = v3 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label;
  *(_QWORD *)v9 = a2;
  *(_QWORD *)(v9 + 8) = a3;
  *(_WORD *)(v9 + 16) = v8;
  swift_release();
  *(_BYTE *)(v3 + 16) = 1;
  return v3;
}

uint64_t sub_2119AB638()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47F70();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC99D0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211958C38(&qword_254ACA5B0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMFLocation();
  sub_211A48054();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFAddUpdateLabelAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFAddUpdateLabelAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119AB8C4()
{
  uint64_t v0;

  sub_211933290(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  return swift_bridgeObjectRelease();
}

uint64_t FMFAddUpdateLabelAction.deinit()
{
  uint64_t v0;

  sub_211933290(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFAddUpdateLabelAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_211933290(v0 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2119AB970()
{
  return type metadata accessor for FMFAddUpdateLabelAction();
}

uint64_t type metadata accessor for FMFAddUpdateLabelAction()
{
  uint64_t result;

  result = qword_254ACA5E0;
  if (!qword_254ACA5E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119AB9B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFLocation();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFAddUpdateLabelAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFAddUpdateLabelAction.__allocating_init(locationToLabel:label:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_2119ABA3C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFDemoDataGenerator()
{
  return objc_opt_self();
}

void sub_2119ABA6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v48 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  v10 = *a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_21195BB68(v7, v6);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (*(_QWORD *)(v10 + 24) >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_211A44EE4();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = a3;
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v23 = (uint64_t *)(v22[6] + 16 * v12);
    *v23 = v7;
    v23[1] = v6;
    v24 = v22[7] + 24 * v12;
    *(_QWORD *)v24 = v9;
    *(_QWORD *)(v24 + 8) = v8;
    *(_BYTE *)(v24 + 16) = v48;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v22[2] = v27;
    v28 = v3 - 1;
    if (v3 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v29 = (_BYTE *)(a1 + 104);
    while (1)
    {
      v31 = *((_QWORD *)v29 - 4);
      v30 = *((_QWORD *)v29 - 3);
      v32 = *((_QWORD *)v29 - 2);
      v33 = *((_QWORD *)v29 - 1);
      v34 = *v29;
      v35 = *v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = sub_21195BB68(v31, v30);
      v38 = *(_QWORD *)(v35 + 16);
      v39 = (v37 & 1) == 0;
      v26 = __OFADD__(v38, v39);
      v40 = v38 + v39;
      if (v26)
        break;
      v41 = v37;
      if (*(_QWORD *)(v35 + 24) < v40)
      {
        sub_211940B4C(v40, 1);
        v36 = sub_21195BB68(v31, v30);
        if ((v41 & 1) != (v42 & 1))
          goto LABEL_25;
      }
      if ((v41 & 1) != 0)
        goto LABEL_10;
      v21 = a3;
      v43 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      v44 = (uint64_t *)(v43[6] + 16 * v36);
      *v44 = v31;
      v44[1] = v30;
      v45 = v43[7] + 24 * v36;
      *(_QWORD *)v45 = v32;
      *(_QWORD *)(v45 + 8) = v33;
      *(_BYTE *)(v45 + 16) = v34;
      v46 = v43[2];
      v26 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v26)
        goto LABEL_24;
      v29 += 40;
      v43[2] = v47;
      if (!--v28)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_211940B4C(v15, a2 & 1);
  v17 = sub_21195BB68(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    sub_211958C38(&qword_254ACC360);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_211A48294();
  __break(1u);
LABEL_26:
  sub_211A47F70();
  sub_211A479B8();
  sub_211A48054();
  sub_211A479B8();
  sub_211A4809C();
  __break(1u);
}

uint64_t sub_2119ABE28(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  int v50;
  double v51;
  id v52;
  char *v53;
  double v54;
  double v55;
  uint64_t i;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD v98[45];
  _BYTE v99[353];
  _BYTE v100[304];
  _BYTE v101[360];
  uint64_t v102[45];
  id v103[45];
  _BYTE v104[360];
  uint64_t v105[47];

  v85 = a5;
  v81 = a3;
  v78 = a1;
  v79 = a2;
  v6 = sub_211A47208();
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v82 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for FMFLocation();
  v10 = *((_QWORD *)v9 - 1);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v93 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v86 = (char *)&v77 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v20 = (char *)&v77 - v19;
  v21 = *(_QWORD *)(a4 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  v87 = (int *)v18;
  v91 = (char *)&v77 - v19;
  if (v21)
  {
    v97 = v10;
    v105[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_211A267EC(0, v21, 0);
    v22 = v105[0];
    v96 = a4;
    v23 = (_BYTE *)(a4 + 48);
    do
    {
      v24 = *((_QWORD *)v23 - 2);
      v25 = *((_QWORD *)v23 - 1);
      v26 = *v23;
      v105[0] = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      swift_bridgeObjectRetain_n();
      if (v28 >= v27 >> 1)
      {
        sub_211A267EC(v27 > 1, v28 + 1, 1);
        v22 = v105[0];
      }
      v23 += 24;
      *(_QWORD *)(v22 + 16) = v28 + 1;
      v29 = v22 + 40 * v28;
      *(_QWORD *)(v29 + 32) = v24;
      *(_QWORD *)(v29 + 40) = v25;
      *(_QWORD *)(v29 + 48) = v24;
      *(_QWORD *)(v29 + 56) = v25;
      *(_BYTE *)(v29 + 64) = v26;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v9 = v87;
    v20 = v91;
    v10 = v97;
  }
  if (*(_QWORD *)(v22 + 16))
  {
    sub_211958C38(&qword_254ACA760);
    v30 = sub_211A480CC();
  }
  else
  {
    v30 = MEMORY[0x24BEE4B00];
  }
  v31 = v81;
  v105[0] = v30;
  v32 = swift_bridgeObjectRetain();
  sub_2119ABA6C(v32, 1, v105);
  swift_bridgeObjectRelease();
  v33 = v105[0];
  v34 = *(_QWORD *)(v31 + 16);
  if (!v34)
  {
    swift_release();
    goto LABEL_53;
  }
  v80 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v35 = v31 + v80;
  v97 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v36 = 0;
  v95 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v96 = MEMORY[0x24BEE4AF8];
  v89 = v35;
  v90 = v34;
  do
  {
    sub_21193324C(v35 + v97 * v36, (uint64_t)v20);
    v37 = *((_QWORD *)v20 + 1);
    if (!v37)
    {
      sub_211933290((uint64_t)v20);
      goto LABEL_13;
    }
    v38 = *(_QWORD *)v20;
    v39 = v33;
    v40 = *(_QWORD *)(v33 + 16);
    swift_bridgeObjectRetain();
    if (v40)
    {
      swift_bridgeObjectRetain();
      v41 = sub_21195BB68(v38, v37);
      if ((v42 & 1) != 0)
      {
        v43 = *(_QWORD *)(v39 + 56) + 24 * v41;
        v44 = *(_QWORD *)(v43 + 8);
        v92 = *(_QWORD *)v43;
        v94 = *(unsigned __int8 *)(v43 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v45 = (uint64_t)&v20[v9[11]];
        sub_21192DD68(v45, (uint64_t)v104, &qword_254AC8CD0);
        sub_21192DD68((uint64_t)v104, (uint64_t)v105, &qword_254AC8CD0);
        if (sub_2119724C8((uint64_t)v105) == 1)
        {
          sub_211933290((uint64_t)v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_47:
          v35 = v89;
          v34 = v90;
          goto LABEL_48;
        }
        objc_msgSend((id)v105[38], sel_coordinate);
        v47 = v46;
        v49 = v48;
        sub_21192DD68((uint64_t)v104, (uint64_t)v103, &qword_254AC8CD0);
        v50 = v20[16];
        if (v20[16])
          v51 = 10.0;
        else
          v51 = 120.0;
        v88 = v103[38];
        v52 = objc_msgSend(v88, sel_timestamp);
        v53 = v82;
        sub_211A471E4();

        sub_211A4719C();
        v55 = v54;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v53, v84);
        v102[0] = 0;
        MEMORY[0x212BE48B8](v102, 8);
        for (i = v102[0]; (unint64_t)(0x20000000000001 * v102[0]) < 0x1FFFFFFFFFF801; i = v102[0])
        {
          v102[0] = 0;
          MEMORY[0x212BE48B8](v102, 8);
        }
        v57 = (uint64_t)v86;
        if ((double)(((unint64_t)i * (unsigned __int128)0x20000000000001uLL) >> 64) * 1.11022302e-16 + 0.0 <= pow(v55 / v51, 10.0))
        {
          v58 = v50;
          if ((v50 & 1) == 0)
          {
LABEL_28:
            if ((v58 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              sub_21192DD68(v45, (uint64_t)v102, &qword_254AC8CD0);
              *(_QWORD *)(v57 + 24) = 0;
              *(_BYTE *)(v57 + 32) = 1;
              v9 = v87;
              v59 = v57 + v87[8];
              v60 = sub_211A4722C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
              *(_QWORD *)v57 = v38;
              *(_QWORD *)(v57 + 8) = v37;
              v94 = 1;
              *(_BYTE *)(v57 + 16) = 1;
              sub_21192DD68((uint64_t)v102, v57 + v9[11], &qword_254AC8CD0);
              *(_BYTE *)(v57 + 33) = 0;
              *(_BYTE *)(v57 + v9[9]) = 0;
              *(_BYTE *)(v57 + v9[10]) = 0;
              swift_bridgeObjectRetain();
              sub_2119AC6F0((uint64_t)v102);
LABEL_37:
              v44 = v37;
              goto LABEL_38;
            }
            goto LABEL_34;
          }
        }
        else
        {
          v58 = v50 ^ 1;
          if ((v50 & 1) == 0)
            goto LABEL_28;
        }
        if (v58)
        {
          swift_bridgeObjectRelease();
          v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v47, v49);
          sub_21192DD68(v45, (uint64_t)v101, &qword_254AC8CD0);
          sub_21192DD68((uint64_t)v101, (uint64_t)v102, &qword_254AC8CD0);
          if (sub_2119724C8((uint64_t)v102) == 1)
          {
            sub_21196F528(v99);
            sub_21192DD68((uint64_t)v99, (uint64_t)v100, &qword_254ACCB40);
            v62 = 0;
            v63 = 0;
            v64 = 0;
          }
          else
          {
            sub_21192DD68((uint64_t)v101, (uint64_t)v99, &qword_254AC8CD0);
            v62 = *(_QWORD *)&v99[320];
            v63 = *(_QWORD *)&v99[328];
            v64 = *(_WORD *)&v99[336];
            sub_2119A18DC(v102);
            swift_bridgeObjectRetain();
            sub_21192DD68((uint64_t)v102, (uint64_t)v100, &qword_254ACCB40);
          }
          sub_21192DD68((uint64_t)v100, (uint64_t)v98, &qword_254ACCB40);
          v98[38] = v61;
          LOBYTE(v98[39]) = 0;
          v98[40] = v62;
          v98[41] = v63;
          LOWORD(v98[42]) = v64;
          v98[43] = 0;
          LOBYTE(v98[44]) = 0;
          memcpy(v99, v98, sizeof(v99));
          nullsub_1(v99, v65);
          v57 = (uint64_t)v86;
          v9 = v87;
          *((_QWORD *)v86 + 3) = 0;
          *(_BYTE *)(v57 + 32) = 1;
          v66 = v57 + v9[8];
          v67 = sub_211A4722C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 1, 1, v67);
          *(_QWORD *)v57 = v38;
          *(_QWORD *)(v57 + 8) = v37;
          *(_BYTE *)(v57 + 16) = 0;
          sub_21192DD68((uint64_t)v99, v57 + v9[11], &qword_254AC8CD0);
          *(_BYTE *)(v57 + 33) = 0;
          *(_BYTE *)(v57 + v9[9]) = 0;
          *(_BYTE *)(v57 + v9[10]) = 0;
          swift_bridgeObjectRetain();
          v94 = 0;
          goto LABEL_37;
        }
LABEL_34:
        swift_bridgeObjectRelease();
        sub_21193324C((uint64_t)v91, v57);
        v38 = v92;
        v9 = v87;
LABEL_38:
        sub_21193324C(v57, v93);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v68 = v96;
        else
          v68 = sub_21194B098(0, *(_QWORD *)(v96 + 16) + 1, 1, v96);
        v70 = *(_QWORD *)(v68 + 16);
        v69 = *(_QWORD *)(v68 + 24);
        if (v70 >= v69 >> 1)
          v68 = sub_21194B098(v69 > 1, v70 + 1, 1, v68);
        *(_QWORD *)(v68 + 16) = v70 + 1;
        v96 = v68;
        sub_211973360(v93, v68 + v80 + v70 * v97);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v71 = v95;
        else
          v71 = sub_211943DD8(0, v95[2] + 1, 1, v95);
        v73 = v71[2];
        v72 = v71[3];
        if (v73 >= v72 >> 1)
          v71 = sub_211943DD8((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
        v71[2] = v73 + 1;
        v95 = v71;
        v74 = &v71[3 * v73];
        v74[4] = v38;
        v74[5] = v44;
        *((_BYTE *)v74 + 48) = v94;

        sub_211933290(v57);
        v20 = v91;
        sub_211933290((uint64_t)v91);
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
    }
    sub_211933290((uint64_t)v20);
    swift_bridgeObjectRelease();
LABEL_48:
    v33 = v39;
LABEL_13:
    ++v36;
  }
  while (v36 != v34);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_53:
  v75 = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v75;
}

uint64_t sub_2119AC6F0(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v3 = *(_OWORD *)(a1 + 240);
  v4 = *(_OWORD *)(a1 + 256);
  sub_21195C46C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    *(void **)(a1 + 304));
  return a1;
}

uint64_t sub_2119AC788(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2119AC7C4
                                                                     + 4 * asc_211A4CCE0[a1]))(0xD000000000000014, 0x8000000211A552A0);
}

uint64_t sub_2119AC7C4()
{
  return 0x6E6F697461636F6CLL;
}

unint64_t sub_2119AC7E8()
{
  return 0xD000000000000021;
}

uint64_t sub_2119AC810()
{
  return 0x6E657053656D6974;
}

double FMFShallowLocationEvent.firstLocationLatency.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FMFShallowLocationEvent.firstLocationLatency.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FMFShallowLocationEvent.firstLocationLatency.modify())()
{
  return nullsub_1;
}

uint64_t FMFShallowLocationEvent.locationFound.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FMFShallowLocationEvent.locationFound.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFShallowLocationEvent.locationFound.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*FMFShallowLocationEvent.longestAgeDisplayedIncludingCache.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*FMFShallowLocationEvent.longestAgeDisplayedExcludingCache.modify())()
{
  return nullsub_1;
}

double FMFShallowLocationEvent.timeSpentInApp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void FMFShallowLocationEvent.timeSpentInApp.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*FMFShallowLocationEvent.timeSpentInApp.modify())()
{
  return nullsub_1;
}

void __swiftcall FMFShallowLocationEvent.init(firstLocationLatency:locationFound:longestAgeDisplayedIncludingCache:longestAgeDisplayedExcludingCache:timeSpentInApp:)(FMFCore::FMFShallowLocationEvent *__return_ptr retstr, Swift::Double firstLocationLatency, Swift::Bool locationFound, Swift::Double longestAgeDisplayedIncludingCache, Swift::Double longestAgeDisplayedExcludingCache, Swift::Double timeSpentInApp)
{
  retstr->firstLocationLatency = firstLocationLatency;
  retstr->locationFound = locationFound;
  retstr->longestAgeDisplayedIncludingCache = longestAgeDisplayedIncludingCache;
  retstr->longestAgeDisplayedExcludingCache = longestAgeDisplayedExcludingCache;
  retstr->timeSpentInApp = timeSpentInApp;
}

Swift::Void __swiftcall FMFManager.enqueue(event:)(FMFCore::FMFShallowLocationEvent *event)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  _QWORD v6[6];

  v2 = (void *)sub_211A478EC();
  v3 = swift_allocObject();
  v4 = *(_OWORD *)&event->longestAgeDisplayedIncludingCache;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)&event->firstLocationLatency;
  *(_OWORD *)(v3 + 32) = v4;
  *(Swift::Double *)(v3 + 48) = event->timeSpentInApp;
  v6[4] = sub_2119ACCCC;
  v6[5] = v3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_2119ACCD4;
  v6[3] = &unk_24CCC8778;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

void static FMFAnalytics.sendShallowLocationEventAnalytics(event:)(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  _QWORD v6[6];

  v2 = (void *)sub_211A478EC();
  v3 = swift_allocObject();
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a1 + 32);
  v6[4] = sub_2119AD20C;
  v6[5] = v3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_2119ACCD4;
  v6[3] = &unk_24CCC87C8;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

unint64_t sub_2119ACA80(uint64_t a1)
{
  unint64_t v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  id v5;
  char v6;
  id v7;
  char v8;
  id v9;
  char v10;
  id v11;
  char v12;

  v2 = sub_211A3A138(MEMORY[0x24BEE4AF8]);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v3, 0xD000000000000014, 0x8000000211A552A0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *(unsigned __int8 *)(a1 + 8));
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v5, 0x6E6F697461636F6CLL, 0xED0000646E756F46, v6);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(a1 + 16));
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v7, 0xD000000000000021, 0x8000000211A552C0, v8);
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(a1 + 24));
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v9, 0xD000000000000021, 0x8000000211A552F0, v10);
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)(a1 + 32));
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v11, 0x6E657053656D6974, 0xEE007070416E4974, v12);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2119ACCBC()
{
  return swift_deallocObject();
}

unint64_t sub_2119ACCCC()
{
  uint64_t v0;

  return sub_2119ACA80(v0 + 16);
}

id sub_2119ACCD4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_21196FD4C();
    v4 = (void *)sub_211A47844();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_2119ACD48()
{
  return swift_deallocObject();
}

double FMFLiveLocationEvent.firstLiveLocationLatency.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FMFLiveLocationEvent.firstLiveLocationLatency.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FMFLiveLocationEvent.firstLiveLocationLatency.modify())()
{
  return nullsub_1;
}

uint64_t FMFLiveLocationEvent.liveSessionSuccessful.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FMFLiveLocationEvent.liveSessionSuccessful.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*FMFLiveLocationEvent.liveSessionSuccessful.modify())()
{
  return nullsub_1;
}

Swift::Void __swiftcall FMFManager.enqueue(event:)(FMFCore::FMFLiveLocationEvent event)
{
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v1 = **(_QWORD **)&event.liveSessionSuccessful;
  v2 = *(_BYTE *)(*(_QWORD *)&event.liveSessionSuccessful + 8);
  v3 = (void *)sub_211A478EC();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v2;
  v6[4] = sub_2119AD054;
  v6[5] = v4;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_2119ACCD4;
  v6[3] = &unk_24CCC8818;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

void static FMFAnalytics.sendLiveLocationEventAnalytics(event:)(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v1 = *a1;
  v2 = *((_BYTE *)a1 + 8);
  v3 = (void *)sub_211A478EC();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_BYTE *)(v4 + 24) = v2;
  v6[4] = sub_2119AD1F0;
  v6[5] = v4;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_2119ACCD4;
  v6[3] = &unk_24CCC8868;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

unint64_t sub_2119ACF38(char a1, double a2)
{
  unint64_t v4;
  id v5;
  char isUniquelyReferenced_nonNull_native;
  id v7;
  char v8;

  v4 = sub_211A3A138(MEMORY[0x24BEE4AF8]);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v5, 0xD000000000000018, 0x8000000211A55260, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_211A44158((uint64_t)v7, 0xD000000000000015, 0x8000000211A55280, v8);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2119AD044()
{
  return swift_deallocObject();
}

unint64_t sub_2119AD054()
{
  uint64_t v0;

  return sub_2119ACF38(*(_BYTE *)(v0 + 24), *(double *)(v0 + 16));
}

uint64_t sub_2119AD060()
{
  return swift_deallocObject();
}

__n128 initializeWithCopy for FMFShallowLocationEvent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFShallowLocationEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFShallowLocationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFShallowLocationEvent()
{
  return &type metadata for FMFShallowLocationEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for FMFLiveLocationEvent(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFLiveLocationEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLiveLocationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFLiveLocationEvent()
{
  return &type metadata for FMFLiveLocationEvent;
}

void sub_2119AD210(char a1)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119AD25C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119AD300(char a1)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119AD344()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119AD3B4(char a1)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119AD40C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AD4BC()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t FMFFavoriteFriend.friendIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFFavoriteFriend.order.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2119AD598(char *a1, char *a2)
{
  return sub_211975684(*a1, *a2);
}

uint64_t sub_2119AD5A4()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AD614()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119AD660()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AD6CC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2119AD728(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x726564726FLL;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2119AD758()
{
  _BYTE *v0;

  if (*v0)
    return 0x726564726FLL;
  else
    return 25705;
}

uint64_t sub_2119AD784@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2119AD7E4()
{
  sub_2119AD9A0();
  return sub_211A48390();
}

uint64_t sub_2119AD80C()
{
  sub_2119AD9A0();
  return sub_211A4839C();
}

uint64_t FMFFavoriteFriend.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  char v17;

  v5 = sub_211958C38(&qword_254ACA768);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119AD9A0();
  sub_211A48360();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_211A48144();
    v12 = v11;
    v16 = 1;
    v13 = sub_211A48168();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v13;
  }
  return sub_211931C34((uint64_t)a1);
}

unint64_t sub_2119AD9A0()
{
  unint64_t result;

  result = qword_254ACA770;
  if (!qword_254ACA770)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D21C, &type metadata for FMFFavoriteFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA770);
  }
  return result;
}

uint64_t FMFFavoriteFriend.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v4 = sub_211958C38(&qword_254ACA778);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  sub_211931DB4(a1, a1[3]);
  sub_2119AD9A0();
  sub_211A4836C();
  v12 = 0;
  sub_211A481B0();
  if (!v2)
  {
    v11 = 1;
    sub_211A481D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v4);
}

BOOL static FMFFavoriteFriend.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_211A48258();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

unint64_t FMFFavoriteFriend.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

uint64_t sub_2119ADC44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FMFFavoriteFriend.init(from:)(a1, a2);
}

uint64_t sub_2119ADC58(_QWORD *a1)
{
  return FMFFavoriteFriend.encode(to:)(a1);
}

BOOL sub_2119ADC6C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_211A48258();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

FMFCore::FMFGeofenceAlertsFrom_optional __swiftcall FMFGeofenceAlertsFrom.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FMFCore::FMFGeofenceAlertsFrom_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FMFGeofenceAlertsFrom.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x454E4F5952455645;
  else
    return 0x53444E45495246;
}

uint64_t sub_2119ADD64(char *a1, char *a2)
{
  return sub_211975D0C(*a1, *a2);
}

uint64_t sub_2119ADD70()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119ADDF0()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119ADE4C()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFGeofenceAlertsFrom_optional sub_2119ADEC8(Swift::String *a1)
{
  return FMFGeofenceAlertsFrom.init(rawValue:)(*a1);
}

void sub_2119ADED4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x53444E45495246;
  if (*v1)
    v2 = 0x454E4F5952455645;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t FMFPreferences.allowFriendRequests.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FMFPreferences.shouldReceiveEmails.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

void FMFPreferences.allowLocationAlertsFrom.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

uint64_t FMFPreferences.primaryEmail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFPreferences.favorites.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119ADF64(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2119ADF9C + 4 * byte_211A4CD65[a1]))(0xD000000000000013, 0x8000000211A52B10);
}

uint64_t sub_2119ADF9C(uint64_t a1)
{
  return a1 - 2;
}

uint64_t sub_2119ADFE0()
{
  return 0x457972616D697270;
}

uint64_t sub_2119AE000()
{
  return 0x657469726F766166;
}

void sub_2119AE01C(char *a1)
{
  sub_211975DB0(*a1);
}

void sub_2119AE028()
{
  char *v0;

  sub_2119AD3B4(*v0);
}

void sub_2119AE030(uint64_t a1)
{
  char *v1;

  sub_2119BB964(a1, *v1);
}

void sub_2119AE038(uint64_t a1)
{
  char *v1;

  sub_2119BBCE0(a1, *v1);
}

uint64_t sub_2119AE040@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119AE638();
  *a1 = result;
  return result;
}

uint64_t sub_2119AE06C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2119ADF64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119AE094@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119AE638();
  *a1 = result;
  return result;
}

void sub_2119AE0B8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2119AE0C4()
{
  sub_21192A27C();
  return sub_211A48390();
}

uint64_t sub_2119AE0EC()
{
  sub_21192A27C();
  return sub_211A4839C();
}

__n128 FMFPreferences.init(prefs:hideLocation:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  __n128 result;
  uint64_t v6;

  v3 = *(_BYTE *)(a1 + 2);
  v4 = *(_BYTE *)(a1 + 3);
  result = *(__n128 *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a3 = *(_BYTE *)a1;
  *(_BYTE *)(a3 + 1) = a2;
  *(_BYTE *)(a3 + 2) = v3;
  *(_BYTE *)(a3 + 3) = v4;
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 24) = v6;
  return result;
}

__n128 FMFPreferences.init(prefs:allowFriendRequests:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  char v5;
  __n128 result;
  uint64_t v7;

  v3 = *(_BYTE *)(a1 + 1);
  v4 = *(_BYTE *)(a1 + 2);
  v5 = *(_BYTE *)(a1 + 3);
  result = *(__n128 *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)a3 = a2;
  *(_BYTE *)(a3 + 1) = v3;
  *(_BYTE *)(a3 + 2) = v4;
  *(_BYTE *)(a3 + 3) = v5;
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 24) = v7;
  return result;
}

__n128 FMFPreferences.init(prefs:allowLocationAlertsFrom:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  __n128 result;
  uint64_t v6;
  char v7;

  v3 = *(_BYTE *)(a1 + 1);
  v4 = *(_BYTE *)(a1 + 2);
  result = *(__n128 *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *a2;
  *(_BYTE *)a3 = *(_BYTE *)a1;
  *(_BYTE *)(a3 + 1) = v3;
  *(_BYTE *)(a3 + 2) = v4;
  *(_BYTE *)(a3 + 3) = v7;
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 24) = v6;
  return result;
}

unint64_t sub_2119AE1B8()
{
  unint64_t result;

  result = qword_254ACA7D8;
  if (!qword_254ACA7D8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFGeofenceAlertsFrom, &type metadata for FMFGeofenceAlertsFrom);
    atomic_store(result, (unint64_t *)&qword_254ACA7D8);
  }
  return result;
}

_QWORD *sub_2119AE200(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FMFFavoriteFriend(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for FMFFavoriteFriend(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for FMFFavoriteFriend(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFFavoriteFriend(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFFavoriteFriend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for FMFPreferences(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FMFPreferences(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7FMFCore21FMFGeofenceAlertsFromOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2119AE498 + 4 * byte_211A4CD7A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2119AE4CC + 4 * byte_211A4CD75[v4]))();
}

uint64_t sub_2119AE4CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119AE4D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119AE4DCLL);
  return result;
}

uint64_t sub_2119AE4E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119AE4F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2119AE4F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119AE4FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFFavoriteFriend.CodingKeys()
{
  return &type metadata for FMFFavoriteFriend.CodingKeys;
}

unint64_t sub_2119AE51C()
{
  unint64_t result;

  result = qword_254ACA7E0;
  if (!qword_254ACA7E0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D0B4, &type metadata for FMFFavoriteFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA7E0);
  }
  return result;
}

unint64_t sub_2119AE564()
{
  unint64_t result;

  result = qword_254ACA7E8;
  if (!qword_254ACA7E8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D1A4, &type metadata for FMFPreferences.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA7E8);
  }
  return result;
}

unint64_t sub_2119AE5AC()
{
  unint64_t result;

  result = qword_254ACA800;
  if (!qword_254ACA800)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4CFEC, &type metadata for FMFFavoriteFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA800);
  }
  return result;
}

unint64_t sub_2119AE5F4()
{
  unint64_t result;

  result = qword_254ACA808;
  if (!qword_254ACA808)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D014, &type metadata for FMFFavoriteFriend.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA808);
  }
  return result;
}

uint64_t sub_2119AE638()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t FMFMuteFencesAction.__allocating_init(friendId:endDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  sub_21194D214(a3, v6 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  *(_BYTE *)(v6 + 16) = 0;
  return v6;
}

uint64_t FMFMuteFencesAction.init(friendId:endDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  sub_21194D214(a3, v3 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  *(_BYTE *)(v3 + 16) = 0;
  return v3;
}

uint64_t sub_2119AE714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[2];

  v1 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 60;
  v12[1] = 0xE100000000000000;
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v11[0] = v0;
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v6 = v12[0];
  v5 = v12[1];
  strcpy((char *)v12, "friendId: ");
  BYTE3(v12[1]) = 0;
  HIDWORD(v12[1]) = -369098752;
  v7 = *(_QWORD *)(v0 + 32);
  v11[0] = *(_QWORD *)(v0 + 24);
  v11[1] = v7;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v12[0] = v6;
  v12[1] = v5;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v12[0];
  v8 = v12[1];
  strcpy((char *)v12, "muteEndDate: ");
  HIWORD(v12[1]) = -4864;
  sub_21194E8A0(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate, (uint64_t)v4);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  v12[0] = v9;
  v12[1] = v8;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12[0];
}

void FMFMuteFencesAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFMuteFencesAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119AE974()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_2119AE9C4(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
}

uint64_t FMFMuteFencesAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2119AE9C4(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  return v0;
}

uint64_t sub_2119AE9C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(qword_254AC8A78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMFMuteFencesAction.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2119AE9C4(v0 + OBJC_IVAR____TtC7FMFCore19FMFMuteFencesAction_muteEndDate);
  return swift_deallocClassInstance();
}

uint64_t sub_2119AEA3C()
{
  return type metadata accessor for FMFMuteFencesAction();
}

uint64_t type metadata accessor for FMFMuteFencesAction()
{
  uint64_t result;

  result = qword_254ACA838;
  if (!qword_254ACA838)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2119AEA80()
{
  unint64_t v0;

  sub_211964B44();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for FMFMuteFencesAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFMuteFencesAction.__allocating_init(friendId:endDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

FMFCore::FMFLabel_optional __swiftcall FMFLabel.init(value:labelSaveType:labelSourceType:)(Swift::String_optional value, FMFCore::FMFLabelSaveType_optional labelSaveType, FMFCore::FMFLabelSourceType_optional labelSourceType)
{
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  int v7;
  __int16 v8;
  Swift::String v9;
  __int16 v10;
  char v11;
  FMFCore::FMFLabel_optional result;

  v4 = v3;
  if (value.value._object)
  {
    object = value.value._object;
    countAndFlagsBits = value.value._countAndFlagsBits;
    v7 = *(unsigned __int8 *)labelSaveType.value;
    v8 = *(unsigned __int8 *)labelSourceType.value;
    if (v7 == 2)
    {
      swift_bridgeObjectRetain();
      v9._countAndFlagsBits = countAndFlagsBits;
      v9._object = object;
      LOBYTE(value.value._countAndFlagsBits) = FMFDefaultLabel.init(rawValue:)(v9);
      if (v11 != 5)
      {
        *(_QWORD *)v4 = countAndFlagsBits;
        *(_QWORD *)(v4 + 8) = object;
        *(_WORD *)(v4 + 16) = v8;
        goto LABEL_9;
      }
      v10 = v8 | 0x100;
    }
    else
    {
      v10 = v8 | ((_WORD)v7 << 8);
    }
    *(_QWORD *)v4 = countAndFlagsBits;
    *(_QWORD *)(v4 + 8) = object;
    *(_WORD *)(v4 + 16) = v10;
  }
  else
  {
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_WORD *)(v3 + 16) = 0;
  }
LABEL_9:
  result.value.value = value.value;
  result.value.labelSourceType.value = labelSaveType.value;
  return result;
}

uint64_t FMFLabel.localizedValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  char v5;

  v1 = *v0;
  v2._countAndFlagsBits = sub_211A47934();
  FMFDefaultLabel.init(rawValue:)(v2);
  if (v5 == 5)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    FMFDefaultLabel.localizedLabel.getter();
    return v3;
  }
  return v1;
}

FMFCore::FMFLabelSourceType_optional __swiftcall FMFLabelSourceType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFLabelSourceType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FMFLabelSourceType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646E65697266;
  if (*v0 != 1)
    v1 = 0x736573696D657270;
  if (*v0)
    return v1;
  else
    return 0x6C61636F6CLL;
}

uint64_t sub_2119AECBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21197521C(*a1, *a2);
}

uint64_t sub_2119AECC8()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AED60()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119AEDD4()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFLabelSourceType_optional sub_2119AEE68(Swift::String *a1)
{
  return FMFLabelSourceType.init(rawValue:)(*a1);
}

void sub_2119AEE74(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x646E65697266;
  if (v2 != 1)
  {
    v5 = 0x736573696D657270;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6C61636F6CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

FMFCore::FMFLabelSaveType_optional __swiftcall FMFLabelSaveType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FMFCore::FMFLabelSaveType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FMFLabelSaveType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D6F74737563;
  else
    return 0x746C7561666564;
}

uint64_t sub_2119AEF64(char *a1, char *a2)
{
  return sub_2119758BC(*a1, *a2);
}

uint64_t sub_2119AEF70()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AEFEC()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119AF044()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFLabelSaveType_optional sub_2119AF0BC(Swift::String *a1)
{
  return FMFLabelSaveType.init(rawValue:)(*a1);
}

void sub_2119AF0C8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746C7561666564;
  if (*v1)
    v2 = 0x6D6F74737563;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void FMFDefaultLabel.localizedLabel.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2119AF134()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_211A46FE0();

  return v2;
}

FMFCore::FMFDefaultLabel_optional __swiftcall FMFDefaultLabel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFDefaultLabel_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FMFDefaultLabel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119AF3D0 + 4 * byte_211A4D2C0[*v0]))(0x656D6F683C21245FLL, 0xEC0000005F24213ELL);
}

uint64_t sub_2119AF3D0()
{
  return 0x6B726F773C21245FLL;
}

uint64_t sub_2119AF3E4()
{
  return 0x6F6863733C21245FLL;
}

uint64_t sub_2119AF408()
{
  return 0x3E6D79673C21245FLL;
}

uint64_t sub_2119AF428()
{
  return 0x6568746F3C21245FLL;
}

void sub_2119AF44C(char *a1)
{
  sub_21197595C(*a1);
}

void sub_2119AF458()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_2119AF4AC()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119AF550()
{
  __asm { BR              X10 }
}

uint64_t sub_2119AF594()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119AF624()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_211A48318();
  __asm { BR              X9 }
}

uint64_t sub_2119AF674()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFDefaultLabel_optional sub_2119AF718(Swift::String *a1)
{
  return FMFDefaultLabel.init(rawValue:)(*a1);
}

uint64_t sub_2119AF724()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2119AF75C + 4 * byte_211A4D2D4[*v0]))();
}

void sub_2119AF75C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6B726F773C21245FLL;
  a1[1] = v1;
}

void sub_2119AF774(char *a1@<X8>)
{
  strcpy(a1, "_$!<school>!$_");
  a1[15] = -18;
}

void sub_2119AF79C(_QWORD *a1@<X8>)
{
  *a1 = 0x3E6D79673C21245FLL;
  a1[1] = 0xEB000000005F2421;
}

void sub_2119AF7C0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "_$!<other>!$_");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t FMFLabel.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FMFLabel.labelSourceType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void FMFLabel.labelSaveType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

FMFCore::FMFDefaultLabel_optional FMFLabel.defaultLabel.getter()
{
  Swift::String v0;

  v0._countAndFlagsBits = sub_211A47934();
  return FMFDefaultLabel.init(rawValue:)(v0);
}

uint64_t sub_2119AF854(char *a1, char *a2)
{
  return sub_211974544(*a1, *a2);
}

uint64_t sub_2119AF860()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AF8D4()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119AF924()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119AF994@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2119AF9F0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701869940;
  if (!*v1)
    v2 = 0x65756C6176;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2119AFA24()
{
  _BYTE *v0;

  if (*v0)
    return 1701869940;
  else
    return 0x65756C6176;
}

uint64_t sub_2119AFA54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2119AFAB4()
{
  sub_2119AFC88();
  return sub_211A48390();
}

uint64_t sub_2119AFADC()
{
  sub_2119AFC88();
  return sub_211A4839C();
}

uint64_t FMFLabel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  char v14;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v5 = sub_211958C38(&qword_254ACA8F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119AFC88();
  sub_211A48360();
  if (!v2)
  {
    v19 = 0;
    v10 = sub_211A48144();
    v12 = v11;
    v18 = 1;
    v13._countAndFlagsBits = sub_211A48144();
    FMFLabelSourceType.init(rawValue:)(v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v14 = v17;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 17) = 2;
  }
  return sub_211931C34((uint64_t)a1);
}

unint64_t sub_2119AFC88()
{
  unint64_t result;

  result = qword_254ACA900;
  if (!qword_254ACA900)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D6F4, &type metadata for FMFLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA900);
  }
  return result;
}

uint64_t FMFLabel.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[32];

  v2 = sub_211958C38(&qword_254ACA908);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_2119AFC88();
  sub_211A4836C();
  v8[31] = 0;
  sub_211A481B0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t static FMFLabel.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_211A48258();
}

unint64_t FMFLabel.debugDescription.getter()
{
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000012;
}

void *static FMFLabel.defaultLabels(includingOther:)(char a1)
{
  void *v1;

  if ((a1 & 1) != 0)
    v1 = &unk_24CCC4A90;
  else
    v1 = (void *)MEMORY[0x24BEE4AF8];
  sub_211972698((uint64_t)v1);
  return &unk_24CCC4A68;
}

uint64_t static FMFLabel.defaultLabelFor(localizedLabel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t inited;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_211958C38(&qword_254ACA910);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4D750;
  *(_DWORD *)(inited + 32) = 50462976;
  v7 = sub_2119B0410((char *)1, 5, 1, (char *)inited);
  *((_QWORD *)v7 + 2) = 5;
  v7[36] = 4;
  v8 = v7[32];
  swift_bridgeObjectRetain();
  FMFDefaultLabel.localizedLabel.getter();
  if (v10 == a1 && v9 == a2)
    goto LABEL_3;
  v12 = sub_211A48258();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_17;
  v8 = v7[33];
  FMFDefaultLabel.localizedLabel.getter();
  if (v14 == a1 && v13 == a2)
    goto LABEL_3;
  v15 = sub_211A48258();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_17;
  v8 = v7[34];
  FMFDefaultLabel.localizedLabel.getter();
  if (v17 == a1 && v16 == a2)
    goto LABEL_3;
  v18 = sub_211A48258();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_17;
  v8 = v7[35];
  FMFDefaultLabel.localizedLabel.getter();
  if (v20 == a1 && v19 == a2)
    goto LABEL_3;
  v21 = sub_211A48258();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
LABEL_17:
    result = swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v8 = v7[36];
  FMFDefaultLabel.localizedLabel.getter();
  if (v23 != a1 || v22 != a2)
  {
    v24 = sub_211A48258();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      result = swift_bridgeObjectRelease_n();
      v8 = 5;
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_3:
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease();
LABEL_18:
  *a3 = v8;
  return result;
}

uint64_t sub_2119B0140@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLabel.init(from:)(a1, a2);
}

uint64_t sub_2119B0154(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[32];

  v2 = sub_211958C38(&qword_254ACA908);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_2119AFC88();
  sub_211A4836C();
  v8[31] = 0;
  sub_211A481B0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_2119B024C()
{
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000012;
}

_QWORD *sub_2119B02C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21190FC18(a1, a2, a3, a4, &qword_254ACA9A8, &qword_254AC97B8);
}

_QWORD *sub_2119B02DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_211958C38((uint64_t *)&unk_254ACC540);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2119B0BFC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2119B03E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21194B2B8(a1, a2, a3, a4, &qword_254ACA9A0, (uint64_t (*)(_QWORD))type metadata accessor for FMFIntermediateFriend);
}

uint64_t sub_2119B03FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_211933420(a1, a2, a3, a4, &qword_254ACA998, &qword_254ACA028);
}

char *sub_2119B0410(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_211958C38(&qword_254ACA910);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2119B0CEC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2119B050C()
{
  unint64_t result;

  result = qword_254ACA918;
  if (!qword_254ACA918)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLabelSourceType, &type metadata for FMFLabelSourceType);
    atomic_store(result, (unint64_t *)&qword_254ACA918);
  }
  return result;
}

unint64_t sub_2119B0554()
{
  unint64_t result;

  result = qword_254ACA920;
  if (!qword_254ACA920)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLabelSaveType, &type metadata for FMFLabelSaveType);
    atomic_store(result, (unint64_t *)&qword_254ACA920);
  }
  return result;
}

unint64_t sub_2119B059C()
{
  unint64_t result;

  result = qword_254ACA928;
  if (!qword_254ACA928)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFDefaultLabel, &type metadata for FMFDefaultLabel);
    atomic_store(result, (unint64_t *)&qword_254ACA928);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLabelSourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2119B062C + 4 * byte_211A4D2DE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2119B0660 + 4 * byte_211A4D2D9[v4]))();
}

uint64_t sub_2119B0660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B0668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119B0670);
  return result;
}

uint64_t sub_2119B067C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119B0684);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2119B0688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B0690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLabelSourceType()
{
  return &type metadata for FMFLabelSourceType;
}

ValueMetadata *type metadata accessor for FMFLabelSaveType()
{
  return &type metadata for FMFLabelSaveType;
}

uint64_t storeEnumTagSinglePayload for FMFDefaultLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2119B070C + 4 * byte_211A4D2E8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2119B0740 + 4 * byte_211A4D2E3[v4]))();
}

uint64_t sub_2119B0740(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B0748(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119B0750);
  return result;
}

uint64_t sub_2119B075C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119B0764);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2119B0768(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B0770(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFDefaultLabel()
{
  return &type metadata for FMFDefaultLabel;
}

uint64_t sub_2119B0790(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFLabel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for FMFLabel(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FMFLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFLabel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFLabel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s7FMFCore16FMFLabelSaveTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2119B0944 + 4 * byte_211A4D2F2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2119B0978 + 4 * byte_211A4D2ED[v4]))();
}

uint64_t sub_2119B0978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B0980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119B0988);
  return result;
}

uint64_t sub_2119B0994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119B099CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2119B09A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B09A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLabel.CodingKeys()
{
  return &type metadata for FMFLabel.CodingKeys;
}

unint64_t sub_2119B09C8()
{
  unint64_t result;

  result = qword_254ACA930;
  if (!qword_254ACA930)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D6CC, &type metadata for FMFLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA930);
  }
  return result;
}

unint64_t sub_2119B0A10()
{
  unint64_t result;

  result = qword_254ACA938;
  if (!qword_254ACA938)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D604, &type metadata for FMFLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA938);
  }
  return result;
}

unint64_t sub_2119B0A58()
{
  unint64_t result;

  result = qword_254ACA940;
  if (!qword_254ACA940)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D62C, &type metadata for FMFLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACA940);
  }
  return result;
}

uint64_t sub_2119B0A9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21194B2B8(a1, a2, a3, a4, &qword_254ACA988, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
}

_QWORD *sub_2119B0AB0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21194193C(a1, a2, a3, a4, &qword_254ACA980);
}

_QWORD *sub_2119B0AC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_211958C38(&qword_254ACA9B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2119B0DD0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2119B0BE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21194193C(a1, a2, a3, a4, &qword_254ACA960);
}

uint64_t sub_2119B0BFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

char *sub_2119B0CEC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_2119B0DD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t assignWithCopy for FriendCacheData(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD *v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 72);
  v5 = (_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
      *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
      *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2119B12B0(a1 + 72);
      v7 = *(_OWORD *)(a2 + 88);
      *v4 = *v5;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
    *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
    *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 88);
    *v4 = *v5;
    *(_OWORD *)(a1 + 88) = v8;
  }
  v9 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_OWORD *)(a2 + 184);
  v11 = *(_OWORD *)(a2 + 200);
  v12 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 216) = v12;
  *(_OWORD *)(a1 + 200) = v11;
  *(_OWORD *)(a1 + 184) = v10;
  v13 = *(_OWORD *)(a2 + 248);
  v14 = *(_OWORD *)(a2 + 264);
  v15 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 264) = v14;
  *(_OWORD *)(a1 + 280) = v15;
  *(_OWORD *)(a1 + 248) = v13;
  v16 = *(_OWORD *)(a2 + 344);
  v18 = *(_OWORD *)(a2 + 296);
  v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v16;
  *(_OWORD *)(a1 + 296) = v18;
  *(_OWORD *)(a1 + 312) = v17;
  v19 = *(_OWORD *)(a2 + 120);
  v20 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v20;
  *(_OWORD *)(a1 + 120) = v19;
  v21 = (_OWORD *)(a1 + 360);
  v22 = (__int128 *)(a2 + 360);
  v23 = *(_QWORD *)(a2 + 360);
  if (*(_QWORD *)(a1 + 360))
  {
    if (v23)
    {
      *(_QWORD *)(a1 + 360) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
    }
    else
    {
      sub_2119B12E4(a1 + 360);
      v25 = *(_OWORD *)(a2 + 376);
      v24 = *(_OWORD *)(a2 + 392);
      v26 = *v22;
      *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
      *(_OWORD *)(a1 + 376) = v25;
      *(_OWORD *)(a1 + 392) = v24;
      *v21 = v26;
    }
  }
  else if (v23)
  {
    *(_QWORD *)(a1 + 360) = v23;
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *v22;
    v28 = *(_OWORD *)(a2 + 376);
    v29 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
    *(_OWORD *)(a1 + 376) = v28;
    *(_OWORD *)(a1 + 392) = v29;
    *v21 = v27;
  }
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2119B12B0(uint64_t a1)
{
  destroy for FMFPreferences();
  return a1;
}

uint64_t sub_2119B12E4(uint64_t a1)
{
  destroy for FMFMyInfo();
  return a1;
}

uint64_t assignWithTake for FriendCacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    v4 = *(_QWORD *)(a2 + 88);
    if (v4)
    {
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
      *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
      *(_BYTE *)(a1 + 75) = *(_BYTE *)(a2 + 75);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2119B12B0(a1 + 72);
  }
  v5 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v5;
LABEL_6:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v6 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v6;
  v7 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v7;
  v8 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v8;
  if (!*(_QWORD *)(a1 + 360))
  {
LABEL_10:
    v13 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v13;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 401) = *(_OWORD *)(a2 + 401);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a2 + 360);
  if (!v9)
  {
    sub_2119B12E4(a1 + 360);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 360) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
LABEL_11:
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2119B1570(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119B15A8 + 4 * byte_211A4D768[a1]))(0x6E69776F6C6C6F66, 0xE900000000000067);
}

uint64_t sub_2119B15A8()
{
  return 0x7265776F6C6C6F66;
}

unint64_t sub_2119B15C0()
{
  return 0xD000000000000010;
}

uint64_t sub_2119B1714()
{
  return 0x73746361746E6F63;
}

uint64_t sub_2119B172C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2119B1570(*a1);
  v5 = v4;
  if (v3 == sub_2119B1570(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2119B17B4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119B1570(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119B1814()
{
  unsigned __int8 *v0;

  sub_2119B1570(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119B1854()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119B1570(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119B18B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119B20A4();
  *a1 = result;
  return result;
}

uint64_t sub_2119B18DC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2119B1570(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119B1904@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119B20A4();
  *a1 = result;
  return result;
}

uint64_t sub_2119B1928()
{
  sub_21195E4EC();
  return sub_211A48390();
}

uint64_t sub_2119B1950()
{
  sub_21195E4EC();
  return sub_211A4839C();
}

uint64_t sub_2119B1978(uint64_t a1, uint64_t a2)
{
  return sub_21193461C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation, (uint64_t (*)(char *, char *))_s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2119B198C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_211A48258();
        result = 0;
        if ((v8 & 1) == 0 || v5 != v6)
          return result;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_2119B1A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v5;
  int v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *i;
  int v13;
  int v14;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(unsigned __int8 *)(a1 + 48);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    if (v5 == v6)
      goto LABEL_13;
    return 0;
  }
  v8 = sub_211A48258();
  result = 0;
  if ((v8 & 1) != 0 && ((v5 ^ v6) & 1) == 0)
  {
LABEL_13:
    v10 = v2 - 1;
    if (v10)
    {
      v11 = (unsigned __int8 *)(a2 + 72);
      for (i = (unsigned __int8 *)(a1 + 72); ; i += 24)
      {
        v13 = *i;
        v14 = *v11;
        if (*((_QWORD *)i - 2) == *((_QWORD *)v11 - 2) && *((_QWORD *)i - 1) == *((_QWORD *)v11 - 1))
        {
          if (v13 != v14)
            return 0;
        }
        else
        {
          v16 = sub_211A48258();
          result = 0;
          if ((v16 & 1) == 0 || ((v13 ^ v14) & 1) != 0)
            return result;
        }
        v11 += 24;
        result = 1;
        if (!--v10)
          return result;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_2119B1B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38((uint64_t *)&unk_254ACC2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_2119B1B98(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[10];
  v4 = a1[11];
  v5 = a1[9];
  v6 = a1[45];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21195A23C(v5, v2, v4);
  sub_211933F60(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2119B1CE4(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_2119B1D04(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_211A48318();
  sub_211A48324();
  v2 = sub_211A48348();
  return sub_2119B1D90(v1, v2);
}

unint64_t sub_2119B1D60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211A47F04();
  return sub_2119B1E4C(a1, v2);
}

unint64_t sub_2119B1D90(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2119B1E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_21196D954(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x212BE3D24](v9, a1);
      sub_21196D990((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t *sub_2119B1F10(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[8];
  sub_211933F60(*a1);
  sub_211933F60(v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FriendCacheData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_2119B1FEC + 4 * byte_211A4D7A9[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_2119B2020 + 4 * byte_211A4D7A4[v4]))();
}

uint64_t sub_2119B2020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B2028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119B2030);
  return result;
}

uint64_t sub_2119B203C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119B2044);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_2119B2048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119B2050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_2119B2060()
{
  unint64_t result;

  result = qword_254ACAA78;
  if (!qword_254ACAA78)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4D914, &type metadata for FriendCacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACAA78);
  }
  return result;
}

uint64_t sub_2119B20A4()
{
  unint64_t v0;

  v0 = sub_211A4827C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

void sub_2119B20F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v42 = a1;
  v43 = a2;
  v41 = sub_211A47D90();
  v3 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v12 = objc_msgSend(v11, sel_bundleIdentifier);

  if (v12)
  {
    v13 = sub_211A47910();
    v15 = v14;

    v2[3] = v13;
    v2[4] = v15;
    v40 = sub_211911824(0, (unint64_t *)&qword_254ACC300);
    sub_211A477B4();
    v44 = MEMORY[0x24BEE4AF8];
    v39[2] = sub_211910908((unint64_t *)&qword_254AC8880, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    v39[1] = sub_211958C38((uint64_t *)&unk_254ACC310);
    v16 = v2;
    v39[0] = sub_21193AC74((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    v17 = *MEMORY[0x24BEE5750];
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v19 = v41;
    v18(v6, v17, v41);
    v2[5] = sub_211A47DC0();
    sub_211A477C0();
    v44 = MEMORY[0x24BEE4AF8];
    sub_211A47EA4();
    v18(v6, v17, v19);
    v2[6] = sub_211A47DC0();
    v2[7] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C00]), sel_init);
    type metadata accessor for FMLocationShifter();
    swift_allocObject();
    v20 = FMLocationShifter.init()();
    v21 = MEMORY[0x24BEE4AF8];
    v2[9] = v20;
    v2[10] = v21;
    v22 = v43;
    v2[2] = v42;
    v2[8] = v22;
    v23 = qword_254AC7B80;
    swift_retain();
    swift_retain();
    v24 = (uint64_t)v16;
    if (v23 != -1)
      swift_once();
    v25 = sub_211A47748();
    sub_21194F3E0(v25, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v26 = sub_211A47724();
    v27 = sub_211A47D30();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v46 = v41;
      *(_DWORD *)v28 = 136315138;
      v40 = (uint64_t)(v28 + 4);
      v44 = v24;
      swift_retain();
      v29 = sub_211A48384();
      v31 = sub_21193707C(9uLL, v29, v30);
      v33 = v32;
      v35 = v34;
      v37 = v36;
      swift_bridgeObjectRelease();
      MEMORY[0x212BE376C](v31, v33, v35, v37);
      swift_bridgeObjectRelease();
      v44 = 30768;
      v45 = 0xE200000000000000;
      sub_211A479B8();
      swift_release();
      swift_bridgeObjectRelease();
      v44 = sub_211950A9C(v44, v45, &v46);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v26, v27, "👀 FMFProactiveLocationController<%s>: init", v28, 0xCu);
      v38 = v41;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v38, -1, -1);
      MEMORY[0x212BE48A0](v28, -1, -1);

      swift_release();
      swift_release();
    }
    else
    {

      swift_release();
      swift_release();
      swift_release_n();
    }
  }
  else
  {
    __break(1u);
  }
}

id *sub_2119B2658()
{
  id *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v16 = v15;
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    v5 = sub_211A48384();
    v7 = sub_21193707C(9uLL, v5, v6);
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    sub_211950A9C(30768, 0xE200000000000000, &v16);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v2, v3, "👀 FMFProactiveLocationController<%s>: deinit", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v15, -1, -1);
    MEMORY[0x212BE48A0](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2119B28E4()
{
  sub_2119B2658();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFProactiveLocationController()
{
  return objc_opt_self();
}

uint64_t sub_2119B2924(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  void (*v87)(_QWORD, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  void (*v111)(_QWORD, _QWORD);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE v123[304];
  _OWORD v124[19];

  v111 = a4;
  v112 = a5;
  v113 = a3;
  v106 = a2;
  v6 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v6, v7);
  v109 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211958C38(&qword_254ACABC8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v110 = (uint64_t *)((char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for FMReverseGeocodingRequest();
  v107 = *(_QWORD *)(v12 - 8);
  v108 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v98 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_211958C38(&qword_254ACA218);
  v15 = *(_QWORD *)(v121 - 8);
  v17 = MEMORY[0x24BDAC7A8](v121, v16);
  v120 = (uint64_t)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v119 = (char *)&v98 - v20;
  v101 = type metadata accessor for FMFLocation();
  v122 = *(_QWORD *)(v101 - 8);
  v22 = MEMORY[0x24BDAC7A8](v101, v21);
  v105 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v116 = (uint64_t)&v98 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = (uint64_t *)((char *)&v98 - v29);
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v103 = (uint64_t)&v98 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v102 = (uint64_t)&v98 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v100 = (uint64_t)&v98 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v117 = (uint64_t)&v98 - v42;
  v104 = v43;
  MEMORY[0x24BDAC7A8](v41, v44);
  v46 = (char *)&v98 - v45;
  v47 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v99 = (char *)&v98 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)&v98 - v52;
  v54 = a1;
  v55 = *(_QWORD *)(a1 + 16);
  v56 = MEMORY[0x24BEE4AF8];
  v114 = (char *)&v98 - v52;
  v115 = v30;
  if (v55)
  {
    *(_QWORD *)&v124[0] = MEMORY[0x24BEE4AF8];
    sub_211942004(0, v55, 0);
    v57 = v54 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v118 = *(_QWORD *)(v15 + 72);
    v56 = *(_QWORD *)&v124[0];
    v58 = (uint64_t)v119;
    do
    {
      v59 = (uint64_t)v46;
      sub_21192C6B8(v57, v58, &qword_254ACA218);
      v60 = v120;
      v61 = *(int *)(v121 + 48);
      v62 = v120 + v61;
      v63 = v58 + v61;
      sub_211934794(v58, v120, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192C6B8(v63, v62, (uint64_t *)&unk_254AC8CB0);
      v64 = v60;
      v46 = (char *)v59;
      sub_211942810(v64, v59, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211923EE8(v62, (uint64_t *)&unk_254AC8CB0);
      sub_211923EE8(v58, &qword_254ACA218);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211942004(0, *(_QWORD *)(v56 + 16) + 1, 1);
        v56 = *(_QWORD *)&v124[0];
      }
      v66 = *(_QWORD *)(v56 + 16);
      v65 = *(_QWORD *)(v56 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_211942004(v65 > 1, v66 + 1, 1);
        v56 = *(_QWORD *)&v124[0];
      }
      *(_QWORD *)(v56 + 16) = v66 + 1;
      sub_211942810(v59, v56+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))+ *(_QWORD *)(v122 + 72) * v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v57 += v118;
      --v55;
    }
    while (v55);
    v67 = v113;
    v53 = v114;
    v30 = v115;
  }
  else
  {
    v67 = v113;
  }
  v68 = v117;
  v69 = v106;
  v70 = v122;
  v71 = (uint64_t)v99;
  if (*(_QWORD *)(v56 + 16))
  {
    sub_211934794(v56 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80)), (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v72 = 0;
  }
  else
  {
    v72 = 1;
  }
  v73 = v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v53, v72, 1, v101);
  swift_bridgeObjectRelease();
  sub_21192C6B8((uint64_t)v53, v71, (uint64_t *)&unk_254AC8CB0);
  v74 = v100;
  sub_211934794(v69, v100, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, 1, v73) == 1)
  {
    sub_211942810(v74, v68, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211923EE8(v71, (uint64_t *)&unk_254AC8CB0);
  }
  else
  {
    sub_211934758(v74, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211942810(v71, v68, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  }
  v121 = *(_QWORD *)(v67 + 64);
  v75 = v102;
  sub_211934794(v68, v102, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v76 = v103;
  sub_211934794(v69, v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794(v75, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794(v76, v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v77 = *(unsigned __int8 *)(v70 + 80);
  v78 = (v77 + 16) & ~v77;
  v79 = (v104 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  v80 = (v79 + 15) & 0xFFFFFFFFFFFFFFF8;
  v81 = (v77 + 16 + v80) & ~v77;
  v82 = swift_allocObject();
  v83 = v75;
  v84 = v121;
  sub_211942810(v83, v82 + v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  *(_QWORD *)(v82 + v79) = v67;
  v85 = (_QWORD *)(v82 + v80);
  v87 = v111;
  v86 = v112;
  *v85 = v111;
  v85[1] = v86;
  sub_211942810(v76, v82 + v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v88 = v67;
  v89 = v105;
  sub_211934794(v117, v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v90 = v109;
  sub_21192C6B8(v84 + qword_254ADC718, v109, &qword_254AC9200);
  swift_retain_n();
  swift_retain_n();
  v91 = v110;
  sub_2119F1380(v89, v90, v110);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v107 + 48))(v91, 1, v108) == 1)
  {
    sub_211923EE8((uint64_t)v91, &qword_254ACABC8);
    sub_21196F528(v124);
    sub_21192DD68((uint64_t)v124, (uint64_t)v123, &qword_254ACCB40);
    v92 = v115;
    v93 = v116;
    sub_2119B30C0((uint64_t)v123, v115, v88, v87, v86, v116);
    swift_release();
    v94 = v92;
    v95 = (uint64_t)v114;
  }
  else
  {
    v96 = v98;
    sub_211942810((uint64_t)v91, v98, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_2119ECE88(v96, (uint64_t)sub_2119BAB3C, v82);
    sub_211934758(v96, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    swift_release();
    v95 = (uint64_t)v114;
    v94 = v115;
    v93 = v116;
  }
  sub_211934758((uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_release();
  swift_release();
  sub_211934758(v93, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934758(v117, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  return sub_211923EE8(v95, (uint64_t *)&unk_254AC8CB0);
}

uint64_t sub_2119B30C0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52[39];

  v47 = a6;
  v48 = a5;
  v10 = type metadata accessor for FMFLocation();
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (uint64_t *)((char *)&v41 - v17);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v41 - v20;
  sub_21192DD68(a1, (uint64_t)v52, &qword_254ACCB40);
  v22 = a2[1];
  if (v22)
  {
    v45 = *a2;
    v23 = v22;
  }
  else
  {
    v23 = 0xE300000000000000;
    v45 = 7104878;
  }
  sub_211934794((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794((uint64_t)a2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_21192DD68((uint64_t)v52, (uint64_t)&v50, &qword_254ACCB40);
  swift_bridgeObjectRetain();
  sub_2119A18DC(v52);
  v46 = v21;
  FMFLocation.init(from:updatedLocation:address:)(v18, (uint64_t)v14, (uint64_t)&v50, (uint64_t)v21);
  if (qword_254AC7B80 != -1)
    swift_once();
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49 = v43;
    v50 = a3;
    *(_DWORD *)v28 = 136315394;
    v41 = v28 + 4;
    swift_retain();
    v42 = v27;
    v29 = sub_211A48384();
    v31 = sub_21193707C(9uLL, v29, v30);
    v33 = v32;
    v35 = v34;
    v44 = a4;
    v37 = v36;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v31, v33, v35, v37);
    swift_bridgeObjectRelease();
    v50 = 30768;
    v51 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    v50 = sub_211950A9C(v50, v51, &v49);
    a4 = v44;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    v50 = sub_211950A9C(v45, v23, &v49);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v25, (os_log_type_t)v42, "👀 FMFProactiveLocationController<%s>: did reverse geocode proactive location for %s", (uint8_t *)v28, 0x16u);
    v38 = v43;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v38, -1, -1);
    MEMORY[0x212BE48A0](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v39 = (uint64_t)v46;
  a4(v47, v46);
  return sub_211934758(v39, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
}

uint64_t sub_2119B34AC(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  NSObject *v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t isa;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  uint64_t v94;
  uint64_t v95[3];
  uint64_t aBlock;
  unint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  uint64_t (*v100)();
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v4 = v3;
  v89 = a3;
  v88 = a2;
  v92 = sub_211A4779C();
  v6 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v7);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_211A477D8();
  v10 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91, v11);
  v90 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = MEMORY[0x24BEE4AF8];
  v103 = MEMORY[0x24BEE4AF8];
  v13 = *(NSObject **)(v3 + 40);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = &v103;
  v14[5] = &v102;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_2119B4840;
  *(_QWORD *)(v15 + 24) = v14;
  v100 = sub_2119213A8;
  v101 = (_QWORD *)v15;
  aBlock = MEMORY[0x24BDAC760];
  v97 = 1107296256;
  v98 = sub_211921368;
  v99 = &unk_24CCC9350;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  v93 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v84 = (uint64_t)v13;
  dispatch_sync(v13, v16);
  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v17 = *(_QWORD *)(v102 + 16);
  v85 = v14;
  v87 = v9;
  v86 = v10;
  if (v17 || *(_QWORD *)(v103 + 16))
  {
    if (qword_254AC7B80 == -1)
    {
LABEL_5:
      v18 = sub_211A47748();
      sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
      swift_retain_n();
      v19 = sub_211A47724();
      v20 = sub_211A47D30();
      v21 = os_log_type_enabled(v19, v20);
      v83 = v6;
      if (v21)
      {
        v22 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v95[0] = v23;
        *(_DWORD *)v22 = 136315650;
        v82 = v22 + 4;
        aBlock = v3;
        swift_retain();
        v24 = sub_211A48384();
        v26 = sub_21193707C(9uLL, v24, v25);
        v28 = v27;
        v30 = v29;
        v32 = v31;
        swift_bridgeObjectRelease();
        MEMORY[0x212BE376C](v26, v28, v30, v32);
        swift_bridgeObjectRelease();
        aBlock = 30768;
        v97 = 0xE200000000000000;
        sub_211A479B8();
        swift_release();
        swift_bridgeObjectRelease();
        aBlock = sub_211950A9C(aBlock, v97, v95);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2048;
        swift_beginAccess();
        aBlock = *(_QWORD *)(v102 + 16);
        sub_211A47E2C();
        *(_WORD *)(v22 + 22) = 2048;
        swift_beginAccess();
        aBlock = *(_QWORD *)(v103 + 16);
        sub_211A47E2C();
        _os_log_impl(&dword_21190D000, v19, v20, "👀 FMFProactiveLocationController<%s>: updated subscriptions: %ld added, %ld removed", (uint8_t *)v22, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v23, -1, -1);
        MEMORY[0x212BE48A0](v22, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      swift_beginAccess();
      v33 = v103;
      v34 = *(_QWORD *)(v103 + 16);
      if (v34)
      {
        swift_bridgeObjectRetain();
        v35 = (unint64_t *)(v33 + 40);
        do
        {
          v36 = *v35;
          aBlock = *(v35 - 1);
          v97 = v36;
          swift_bridgeObjectRetain();
          sub_2119B4924(&aBlock, v4);
          swift_bridgeObjectRelease();
          v35 += 2;
          --v34;
        }
        while (v34);
        swift_bridgeObjectRelease();
      }
      v37 = swift_allocObject();
      v38 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v37 + 16) = MEMORY[0x24BEE4AF8];
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = v38;
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v38;
      v41 = dispatch_group_create();
      v42 = dispatch_group_create();
      swift_beginAccess();
      v43 = *(_QWORD *)(v102 + 16);
      if (v43)
      {
        v82 = swift_bridgeObjectRetain();
        v44 = (unint64_t *)(v82 + 40);
        do
        {
          v45 = *v44;
          aBlock = *(v44 - 1);
          v97 = v45;
          swift_bridgeObjectRetain();
          sub_2119B5050(&aBlock, v41, v42, v4, v39, v40, v37);
          swift_bridgeObjectRelease();
          v44 += 2;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
      }
      v46 = (_QWORD *)swift_allocObject();
      v46[2] = v37;
      v46[3] = v4;
      v46[4] = v39;
      v46[5] = v40;
      v47 = v88;
      v46[6] = v42;
      v46[7] = v47;
      v48 = v93;
      v46[8] = v89;
      v46[9] = v48;
      v100 = sub_2119B8DEC;
      v101 = v46;
      aBlock = MEMORY[0x24BDAC760];
      v97 = 1107296256;
      v98 = sub_21192382C;
      v99 = &unk_24CCC93F0;
      v49 = _Block_copy(&aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      v93 = v42;
      sub_2119B8E00(v47);
      v50 = v90;
      sub_211A477B4();
      v94 = MEMORY[0x24BEE4AF8];
      sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_211958C38((uint64_t *)&unk_254ACC1D0);
      sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
      v51 = v87;
      v52 = v92;
      sub_211A47EA4();
      sub_211A47D48();

      _Block_release(v49);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v51, v52);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v91);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_25:
    swift_once();
    goto LABEL_5;
  }
  v54 = v93;
  v55 = v6;
  v56 = v92;
  if (qword_254AC7B80 != -1)
    swift_once();
  v57 = sub_211A47748();
  sub_21194F3E0(v57, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v58 = sub_211A47724();
  v59 = sub_211A47D30();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = swift_slowAlloc();
    v84 = swift_slowAlloc();
    v95[0] = v84;
    *(_DWORD *)v60 = 136315394;
    v82 = v60 + 4;
    aBlock = v3;
    swift_retain();
    v61 = sub_211A48384();
    v63 = sub_21193707C(9uLL, v61, v62);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    swift_bridgeObjectRelease();
    v70 = v67;
    v55 = v6;
    MEMORY[0x212BE376C](v63, v65, v70, v69);
    swift_bridgeObjectRelease();
    aBlock = 30768;
    v97 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    aBlock = sub_211950A9C(aBlock, v97, v95);
    v71 = v91;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2048;
    isa = (uint64_t)v93[2].isa;
    swift_bridgeObjectRelease();
    aBlock = isa;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v58, v59, "👀 FMFProactiveLocationController<%s>: no subscriptions to update for %ld friends", (uint8_t *)v60, 0x16u);
    v73 = v84;
    swift_arrayDestroy();
    v56 = v92;
    MEMORY[0x212BE48A0](v73, -1, -1);
    v74 = v60;
    v54 = v93;
    MEMORY[0x212BE48A0](v74, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    v71 = v91;
  }
  v93 = *(NSObject **)(v4 + 48);
  v75 = (_QWORD *)swift_allocObject();
  v76 = v88;
  v77 = v89;
  v75[2] = v88;
  v75[3] = v77;
  v75[4] = v4;
  v75[5] = v54;
  v100 = sub_2119BA4C0;
  v101 = v75;
  aBlock = MEMORY[0x24BDAC760];
  v97 = 1107296256;
  v98 = sub_21192382C;
  v99 = &unk_24CCC9440;
  v78 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2119B8E00(v76);
  v79 = v90;
  sub_211A477B4();
  v95[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v80 = v87;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v79, v80, v78);
  _Block_release(v78);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v80, v56);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v79, v71);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119B4104(uint64_t a1, uint64_t a2, _QWORD **a3, _QWORD **a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  _QWORD *v50;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(_QWORD **, _QWORD);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD v79[2];
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  _QWORD **v85;
  _QWORD **v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97[7];

  v85 = a3;
  v86 = a4;
  v93 = sub_211958C38(&qword_254ACABD0);
  v7 = MEMORY[0x24BDAC7A8](v93, v6);
  v92 = (uint64_t)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v91 = (uint64_t)v79 - v10;
  v11 = sub_211958C38(&qword_254ACABD8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)v79 - v17;
  v19 = sub_211958C38(&qword_254ACABE0);
  v95 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v90 = (char *)v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v84 = (char *)v79 - v24;
  v96 = (_QWORD *)type metadata accessor for FMFFriend();
  v25 = *(v96 - 1);
  v27 = MEMORY[0x24BDAC7A8](v96, v26);
  v89 = (_QWORD *)((char *)v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v88 = (_QWORD *)((char *)v79 - v31);
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)v79 - v34;
  MEMORY[0x24BDAC7A8](v33, v36);
  v38 = (char *)v79 - v37;
  v83 = a1;
  v39 = *(_QWORD **)(a1 + 80);
  v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v97[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
  v41 = *(_QWORD *)(a2 + 16);
  v82 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v94 = v18;
  if (v41)
  {
    v80 = v15;
    v81 = v11;
    v42 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v43 = *(_QWORD *)(v25 + 72);
    v79[1] = a2;
    v87 = v42;
    v44 = a2 + v42;
    do
    {
      sub_211934794(v44, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v38[*((int *)v96 + 11)] & 1) != 0)
      {
        sub_211942810((uint64_t)v38, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21194B0AC(0, v40[2] + 1, 1);
        v40 = v97[0];
        v46 = v97[0][2];
        v45 = v97[0][3];
        if (v46 >= v45 >> 1)
        {
          sub_21194B0AC(v45 > 1, v46 + 1, 1);
          v40 = v97[0];
        }
        v40[2] = v46 + 1;
        sub_211942810((uint64_t)v35, (uint64_t)v40 + v87 + v46 * v43, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934758((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v44 += v43;
      --v41;
    }
    while (v41);
    v40 = v97[0];
    v18 = v94;
    v11 = v81;
    v15 = v80;
  }
  swift_bridgeObjectRelease();
  v97[0] = v40;
  swift_bridgeObjectRetain();
  sub_2119B8E10(v97);
  swift_release();
  v96 = v97[0];
  v97[4] = v82;
  sub_211958C38(&qword_254ACABB8);
  sub_21193AC74(&qword_254ACABE8, &qword_254ACABB8, MEMORY[0x24BEE12B0]);
  v47 = v84;
  sub_211A478BC();
  swift_bridgeObjectRelease();
  v48 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v48(v15, v47, v19);
  sub_21193AC74(&qword_254ACABF0, &qword_254ACABE0, MEMORY[0x24BEE3150]);
  sub_211A47CA0();
  *(_QWORD **)&v15[*(int *)(v11 + 36)] = v97[0];
  sub_21192DD68((uint64_t)v15, (uint64_t)v18, &qword_254ACABD8);
  v49 = &v18[*(int *)(v11 + 36)];
  v50 = *(_QWORD **)v49;
  sub_211A47CB8();
  if (v50 != v97[0])
  {
    do
    {
      v56 = (void (*)(_QWORD **, _QWORD))sub_211A47CDC();
      v57 = v91;
      sub_21192C6B8(v58, v91, &qword_254ACABD0);
      v56(v97, 0);
      v59 = v90;
      v48(v90, v18, v19);
      sub_211A47CC4();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v59, v19);
      v60 = v57;
      v61 = v92;
      sub_21192DD68(v60, v92, &qword_254ACABD0);
      LODWORD(v59) = swift_getEnumCaseMultiPayload();
      v62 = v61 + *(int *)(sub_211958C38(&qword_254ACABF8) + 48);
      if ((_DWORD)v59 == 1)
      {
        v63 = v88;
        sub_211942810(v62, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v64 = *v63;
        v65 = v63[1];
        v66 = v85;
        v67 = *v85;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v66 = v67;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v67 = sub_2119B02DC(0, v67[2] + 1, 1, v67);
          *v85 = v67;
        }
        v70 = v67[2];
        v69 = v67[3];
        if (v70 >= v69 >> 1)
        {
          v67 = sub_2119B02DC((_QWORD *)(v69 > 1), v70 + 1, 1, v67);
          *v85 = v67;
        }
        v67[2] = v70 + 1;
        v71 = &v67[2 * v70];
        v71[4] = v64;
        v53 = v71 + 4;
        v54 = (uint64_t)v88;
      }
      else
      {
        v72 = v89;
        sub_211942810(v62, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v73 = *v72;
        v65 = v72[1];
        v74 = v86;
        v75 = *v86;
        swift_bridgeObjectRetain();
        v76 = swift_isUniquelyReferenced_nonNull_native();
        *v74 = v75;
        if ((v76 & 1) == 0)
        {
          v75 = sub_2119B02DC(0, v75[2] + 1, 1, v75);
          *v86 = v75;
        }
        v78 = v75[2];
        v77 = v75[3];
        if (v78 >= v77 >> 1)
        {
          v75 = sub_2119B02DC((_QWORD *)(v77 > 1), v78 + 1, 1, v75);
          *v86 = v75;
        }
        v75[2] = v78 + 1;
        v52 = &v75[2 * v78];
        v52[4] = v73;
        v53 = v52 + 4;
        v54 = (uint64_t)v89;
      }
      v53[1] = v65;
      sub_211934758(v54, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v55 = *(_QWORD **)v49;
      v18 = v94;
      sub_211A47CB8();
    }
    while (v55 != v97[0]);
  }
  sub_211923EE8((uint64_t)v18, &qword_254ACABD8);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v84, v19);
  *(_QWORD *)(v83 + 80) = v96;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119B4814()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119B4840()
{
  uint64_t v0;

  return sub_2119B4104(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD ***)(v0 + 32), *(_QWORD ***)(v0 + 40));
}

uint64_t sub_2119B484C()
{
  return swift_deallocObject();
}

uint64_t sub_2119B485C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;

  if (result)
  {
    v5 = (void (*)(uint64_t))result;
    sub_2119B8E00(result);
    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRetain();
    v6 = sub_2119BA5B0(v7, a4);
    swift_bridgeObjectRelease();
    v5(v6);
    swift_bridgeObjectRelease();
    return sub_2119BA4CC((uint64_t)v5);
  }
  return result;
}

void sub_2119B4924(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;
  uint64_t aBlock;
  unint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  void (*v32)(void *);
  _QWORD *v33;
  uint64_t v34;

  v4 = *a1;
  v3 = a1[1];
  v5 = qword_254AC7B80;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34 = v26;
    *(_DWORD *)v9 = 136315394;
    swift_retain();
    v10 = sub_211A48384();
    type = v8;
    v12 = sub_21193707C(9uLL, v10, v11);
    v14 = v13;
    v16 = v15;
    v27 = v4;
    v18 = v17;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v12, v14, v16, v18);
    swift_bridgeObjectRelease();
    v29 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    sub_211950A9C(30768, 0xE200000000000000, &v34);
    v4 = v27;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    aBlock = sub_211950A9C(v27, v3, &v34);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v7, type, "👀 FMFProactiveLocationController<%s>: will unsubscribe for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v26, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v19 = *(void **)(a2 + 56);
  v20 = (void *)sub_211A478EC();
  v21 = (void *)sub_211A478EC();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v4;
  v23[4] = v3;
  v32 = sub_2119BB5FC;
  v33 = v23;
  aBlock = MEMORY[0x24BDAC760];
  v29 = 1107296256;
  v30 = sub_211A1BAB4;
  v31 = &unk_24CCC97B0;
  v24 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v19, sel_unsubscribeForId_clientApp_completion_, v20, v21, v24);
  _Block_release(v24);

}

void sub_2119B4CCC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v7 = sub_211A47748();
    sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = a1;
    v10 = sub_211A47724();
    v11 = sub_211A47D30();
    if (os_log_type_enabled(v10, v11))
    {
      v25 = v11;
      v26 = a3;
      v12 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v28 = v27;
      *(_DWORD *)v12 = 136315650;
      swift_retain();
      v13 = sub_211A48384();
      v15 = sub_21193707C(9uLL, v13, v14);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      swift_bridgeObjectRelease();
      MEMORY[0x212BE376C](v15, v17, v19, v21);
      swift_bridgeObjectRelease();
      sub_211A479B8();
      swift_release();
      swift_bridgeObjectRelease();
      sub_211950A9C(30768, 0xE200000000000000, &v28);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(v26, a4, &v28);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 22) = 2080;
      if (a1)
      {
        swift_getErrorValue();
        v22 = sub_211A482DC();
        v24 = v23;
      }
      else
      {
        v22 = 0;
        v24 = 0xE000000000000000;
      }
      sub_211950A9C(v22, v24, &v28);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v10, v25, "👀 FMFProactiveLocationController<%s>: did unsubscribe for %s (error=%s)", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v27, -1, -1);
      MEMORY[0x212BE48A0](v12, -1, -1);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();

    }
  }
}

void sub_2119B5050(uint64_t *a1, dispatch_group_t group, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  id v30;
  NSObject *v31;
  NSObject *v32;
  os_log_type_t type;
  id v34;
  id v35;
  NSObject *v36;
  uint64_t aBlock;
  unint64_t v42;
  void (*v43)(uint64_t, void *, void *);
  void *v44;
  uint64_t (*v45)(void *, uint64_t);
  _QWORD *v46;
  id v47;

  v9 = *a1;
  v10 = a1[1];
  dispatch_group_enter(group);
  v36 = a3;
  dispatch_group_enter(a3);
  v11 = qword_254AC7B80;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = sub_211A47748();
  sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v13 = sub_211A47724();
  v14 = sub_211A47D30();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v34 = (id)swift_slowAlloc();
    v47 = v34;
    *(_DWORD *)v15 = 136315394;
    swift_retain();
    v16 = sub_211A48384();
    type = v14;
    v18 = sub_21193707C(9uLL, v16, v17);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v18, v20, v22, v24);
    swift_bridgeObjectRelease();
    v42 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    sub_211950A9C(30768, 0xE200000000000000, (uint64_t *)&v47);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    aBlock = sub_211950A9C(v9, v10, (uint64_t *)&v47);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v13, type, "👀 FMFProactiveLocationController<%s>: cache-fetching for %s…", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v34, -1, -1);
    MEMORY[0x212BE48A0](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v35 = *(id *)(a4 + 56);
  v25 = (void *)sub_211A478EC();
  v26 = swift_allocObject();
  swift_weakInit();
  v27 = *(void **)(a4 + 40);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v9;
  v28[4] = v10;
  v28[5] = v27;
  v28[6] = a5;
  v28[7] = a6;
  v28[8] = group;
  v28[9] = v36;
  v28[10] = a7;
  v45 = sub_2119BAF3C;
  v46 = v28;
  aBlock = MEMORY[0x24BDAC760];
  v42 = 1107296256;
  v43 = sub_211968F2C;
  v44 = &unk_24CCC9670;
  v29 = _Block_copy(&aBlock);
  v30 = v27;
  swift_retain();
  swift_retain();
  v31 = group;
  v32 = v36;
  swift_retain();
  swift_release();
  objc_msgSend(v35, sel_latestLocationFromCacheForId_completion_, v25, v29);
  _Block_release(v29);

}

uint64_t sub_2119B5444(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void (**a10)(char *, uint64_t), uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  id v32;
  unint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void (**v44)(char *, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  void (**v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t (**v79)(uint64_t, uint64_t);
  _QWORD v80[2];
  int v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void (**v91)(char *, uint64_t);
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t aBlock;
  unint64_t v96;
  uint64_t (*v97)(uint64_t);
  void *v98;
  void (*v99)();
  _QWORD *v100;

  v85 = a7;
  v86 = a8;
  v92 = a5;
  v93 = a4;
  v14 = sub_211A4779C();
  v91 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_211A477D8();
  v18 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90, v19);
  v21 = (char *)v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FMFLocation();
  v84 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v84 + 64);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v87 = (uint64_t)v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v88 = (uint64_t)v80 - v27;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v29 = result;
    v89 = a6;
    v30 = a9;
    if (!a1 || a2)
      goto LABEL_4;
    v83 = a9;
    v82 = a1;
    v37 = objc_msgSend(v82, sel_findMyId);
    v38 = (id)sub_211A47910();
    v40 = v39;

    v41 = v92;
    if (v38 == v93 && v40 == v92)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = sub_211A48258();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
      {

        v30 = v83;
LABEL_4:
        v31 = (_QWORD *)swift_allocObject();
        v33 = v92;
        v32 = v93;
        v31[2] = v29;
        v31[3] = v32;
        v31[4] = v33;
        v31[5] = a11;
        v31[6] = v30;
        v99 = sub_2119BAFB0;
        v100 = v31;
        aBlock = MEMORY[0x24BDAC760];
        v96 = 1107296256;
        v97 = sub_21192382C;
        v98 = &unk_24CCC96C0;
        v34 = v30;
        v35 = _Block_copy(&aBlock);
        swift_retain();
        swift_bridgeObjectRetain();
        v36 = v34;
        swift_retain();
        sub_211A477B4();
        v94 = MEMORY[0x24BEE4AF8];
        sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        sub_211958C38((uint64_t *)&unk_254ACC1D0);
        sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
        sub_211A47EA4();
        MEMORY[0x212BE3BC8](0, v21, v17, v35);
        _Block_release(v35);
        swift_release();
        v91[1](v17, v14);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v90);
        return swift_release();
      }
    }
    v43 = v29;
    if (qword_254AC7B80 != -1)
      swift_once();
    v44 = a10;
    v45 = sub_211A47748();
    sub_21194F3E0(v45, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v46 = sub_211A47724();
    v47 = sub_211A47D30();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v91 = a10;
      v50 = v49;
      v90 = swift_slowAlloc();
      v94 = v90;
      aBlock = v43;
      *(_DWORD *)v50 = 136315394;
      v80[1] = v50 + 4;
      swift_retain();
      v81 = v48;
      v51 = sub_211A48384();
      v53 = sub_21193707C(9uLL, v51, v52);
      v55 = v54;
      v57 = v56;
      v59 = v58;
      swift_bridgeObjectRelease();
      MEMORY[0x212BE376C](v53, v55, v57, v59);
      swift_bridgeObjectRelease();
      aBlock = 30768;
      v96 = 0xE200000000000000;
      sub_211A479B8();
      swift_release();
      v41 = v92;
      swift_bridgeObjectRelease();
      aBlock = sub_211950A9C(aBlock, v96, &v94);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      v60 = v43;
      v61 = v93;
      aBlock = sub_211950A9C((uint64_t)v93, v41, &v94);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v46, (os_log_type_t)v81, "👀 FMFProactiveLocationController<%s>: did cache-fetch for %s", (uint8_t *)v50, 0x16u);
      v62 = v90;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v62, -1, -1);
      v63 = v50;
      v44 = v91;
      MEMORY[0x212BE48A0](v63, -1, -1);

      v64 = v89;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      v64 = v89;
      v60 = v43;
      v61 = v93;
    }
    v65 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
    *((_QWORD *)v65 + 2) = v64;
    *((_QWORD *)v65 + 3) = v60;
    *((_QWORD *)v65 + 4) = v61;
    *((_QWORD *)v65 + 5) = v41;
    v66 = v86;
    *((_QWORD *)v65 + 6) = v85;
    *((_QWORD *)v65 + 7) = v66;
    v67 = v83;
    *((_QWORD *)v65 + 8) = v83;
    *((_QWORD *)v65 + 9) = v44;
    v68 = v82;
    v93 = v68;
    swift_retain();
    swift_bridgeObjectRetain();
    v69 = v64;
    swift_retain();
    swift_retain();
    v70 = v67;
    v71 = v44;
    v72 = v88;
    sub_211983E70(v68, v88);
    v92 = *(_QWORD *)(v60 + 72);
    sub_211958C38(&qword_254ACA970);
    v73 = *(unsigned __int8 *)(v84 + 80);
    v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_211A4A230;
    sub_211934794(v72, v74 + ((v73 + 32) & ~v73), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v75 = v87;
    sub_211934794(v72, v87, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v76 = (v73 + 16) & ~v73;
    v77 = (v23 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    v78 = swift_allocObject();
    sub_211942810(v75, v78 + v76, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    *(_QWORD *)(v78 + v77) = v60;
    v79 = (uint64_t (**)(uint64_t, uint64_t))(v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v79 = sub_2119BB014;
    v79[1] = v65;
    swift_retain();
    swift_retain();
    sub_21193220C(v74, (uint64_t)sub_2119BA864, v78);
    swift_bridgeObjectRelease();
    swift_release();
    sub_211934758(v72, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2119B5BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v47 = a5;
  v48 = a7;
  v46[1] = a6;
  v58 = a3;
  v50 = a8;
  v51 = a10;
  v49 = a9;
  v54 = sub_211A4779C();
  v57 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v14);
  v53 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A477D8();
  v55 = *(_QWORD *)(v16 - 8);
  v56 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v52 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMFLocation();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v46 - v26;
  sub_211934794(a1, (uint64_t)v46 - v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794(a2, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v28 = *(unsigned __int8 *)(v20 + 80);
  v29 = (v28 + 48) & ~v28;
  v30 = v21 + 7;
  v31 = (v21 + 7 + v29) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v28 + v31 + 8) & ~v28;
  v33 = (v30 + v32) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = (_QWORD *)swift_allocObject();
  v36 = v47;
  v35[2] = a4;
  v35[3] = v36;
  v35[4] = a6;
  v35[5] = v48;
  sub_211942810((uint64_t)v27, (uint64_t)v35 + v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  *(_QWORD *)((char *)v35 + v31) = v50;
  sub_211942810((uint64_t)v24, (uint64_t)v35 + v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v37 = v49;
  *(_QWORD *)((char *)v35 + v33) = v49;
  v38 = v51;
  *(_QWORD *)((char *)v35 + v34) = v51;
  aBlock[4] = sub_2119BB550;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCC9760;
  v39 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v40 = v37;
  v41 = v38;
  v42 = v52;
  sub_211A477B4();
  v59 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v44 = v53;
  v43 = v54;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v42, v44, v39);
  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v43);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
  return swift_release();
}

void sub_2119B5F24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8, NSObject *a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54[2];
  os_log_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  dispatch_group_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v62 = a7;
  v63 = a8;
  v61 = a6;
  v14 = type metadata accessor for FMFLocation();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v64 = (uint64_t)v54 - v21;
  if (qword_254AC7B80 != -1)
    swift_once();
  v22 = (unint64_t *)(a4 + 16);
  v23 = sub_211A47748();
  sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v60 = v15;
    v28 = v27;
    v57 = swift_slowAlloc();
    v65 = v57;
    v66 = a1;
    *(_DWORD *)v28 = 136315394;
    v54[1] = v28 + 4;
    swift_retain();
    v55 = v24;
    v56 = v26;
    v29 = sub_211A48384();
    v31 = sub_21193707C(9uLL, v29, v30);
    v58 = a5;
    v59 = v22;
    v32 = v31;
    v33 = a3;
    v35 = v34;
    v37 = v36;
    v54[0] = a2;
    v39 = v38;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v32, v35, v37, v39);
    swift_bridgeObjectRelease();
    v66 = 30768;
    v67 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    v66 = sub_211950A9C(v66, v67, &v65);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    v66 = sub_211950A9C(v54[0], v33, &v65);
    a5 = v58;
    v22 = v59;
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    v40 = v55;
    _os_log_impl(&dword_21190D000, v55, (os_log_type_t)v56, "👀 FMFProactiveLocationController<%s>: did reverse-geo for %s", (uint8_t *)v28, 0x16u);
    v41 = v57;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v41, -1, -1);
    v42 = v28;
    v15 = v60;
    MEMORY[0x212BE48A0](v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_211934794(a5, v64, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_beginAccess();
  v43 = *v22;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v22 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v43 = sub_21194B098(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
    *v22 = v43;
  }
  v45 = (unint64_t *)(v61 + 16);
  v47 = *(_QWORD *)(v43 + 16);
  v46 = *(_QWORD *)(v43 + 24);
  if (v47 >= v46 >> 1)
  {
    v43 = sub_21194B098(v46 > 1, v47 + 1, 1, v43);
    *v22 = v43;
  }
  *(_QWORD *)(v43 + 16) = v47 + 1;
  v48 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v49 = *(_QWORD *)(v15 + 72);
  sub_211942810(v64, v43 + v48 + v49 * v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_endAccess();
  sub_211934794(v62, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_beginAccess();
  v50 = *v45;
  v51 = swift_isUniquelyReferenced_nonNull_native();
  *v45 = v50;
  if ((v51 & 1) == 0)
  {
    v50 = sub_21194B098(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
    *v45 = v50;
  }
  v53 = *(_QWORD *)(v50 + 16);
  v52 = *(_QWORD *)(v50 + 24);
  if (v53 >= v52 >> 1)
  {
    v50 = sub_21194B098(v52 > 1, v53 + 1, 1, v50);
    *v45 = v50;
  }
  *(_QWORD *)(v50 + 16) = v53 + 1;
  sub_211942810((uint64_t)v19, v50 + v48 + v53 * v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_endAccess();
  dispatch_group_leave(v63);
  dispatch_group_leave(a9);
}

void sub_2119B63F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, NSObject *a5)
{
  _QWORD **v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  os_log_type_t type;
  uint64_t v30;
  _QWORD **v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  if (qword_254AC7B80 != -1)
    swift_once();
  v9 = (_QWORD **)(a4 + 16);
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  if (os_log_type_enabled(v11, v12))
  {
    v31 = v9;
    v13 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v33 = v30;
    *(_DWORD *)v13 = 136315394;
    swift_retain();
    v14 = sub_211A48384();
    v16 = sub_21193707C(9uLL, v14, v15);
    type = v12;
    v18 = v17;
    v20 = v19;
    v32 = a5;
    v22 = v21;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v16, v18, v20, v22);
    swift_bridgeObjectRelease();
    v34 = 30768;
    v35 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    v34 = sub_211950A9C(30768, 0xE200000000000000, &v33);
    a5 = v32;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    v34 = sub_211950A9C(a2, a3, &v33);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v11, type, "👀 FMFProactiveLocationController<%s>: failed cache-fetch for %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v30, -1, -1);
    v23 = v13;
    v9 = v31;
    MEMORY[0x212BE48A0](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_beginAccess();
  v24 = *v9;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v9 = v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_2119B02DC(0, v24[2] + 1, 1, v24);
    *v9 = v24;
  }
  v27 = v24[2];
  v26 = v24[3];
  if (v27 >= v26 >> 1)
  {
    v24 = sub_2119B02DC((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
    *v9 = v24;
  }
  v24[2] = v27 + 1;
  v28 = &v24[2 * v27];
  v28[4] = a2;
  v28[5] = a3;
  swift_endAccess();
  dispatch_group_leave(a5);
}

uint64_t sub_2119B6768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  _QWORD *v61;

  v47 = a7;
  v46 = a6;
  v53 = a4;
  v54 = a5;
  v12 = sub_211A4779C();
  v52 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v51 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211A477D8();
  v49 = *(_QWORD *)(v15 - 8);
  v50 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v48 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v45 = a1;
  v18 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(v18 + 16);
  v20 = MEMORY[0x24BDAC760];
  v21 = (_QWORD *)&protocol conformance descriptor for FMFSchedule;
  if (v19)
  {
    v22 = v53;
    v43 = a8;
    v44 = v12;
    swift_bridgeObjectRetain();
    v23 = (uint64_t *)(v18 + 40);
    do
    {
      v24 = *v23;
      aBlock = *(v23 - 1);
      v57 = v24;
      swift_bridgeObjectRetain();
      sub_2119B6BA8(&aBlock);
      swift_bridgeObjectRelease();
      v23 += 2;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    v42 = *(id *)(a2 + 56);
    swift_beginAccess();
    v25 = v45;
    swift_bridgeObjectRetain();
    v41 = sub_211A47A90();
    swift_bridgeObjectRelease();
    v26 = (void *)sub_211A478EC();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v27;
    v28[3] = v25;
    v28[4] = a3;
    v28[5] = v22;
    v29 = v54;
    v28[6] = v54;
    v60 = sub_2119BA544;
    v61 = v28;
    v20 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v21 = &protocol conformance descriptor for FMFSchedule;
    v57 = 1107296256;
    v58 = sub_2119B8628;
    v59 = &unk_24CCC94B8;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    v31 = v29;
    swift_release();
    v32 = (void *)v41;
    objc_msgSend(v42, sel_subscribeAndFetchLocationForIds_clientApp_completion_, v41, v26, v30);
    _Block_release(v30);

    v12 = v44;
    a8 = v43;
  }
  v33 = (_QWORD *)swift_allocObject();
  v34 = v53;
  v33[2] = a2;
  v33[3] = v34;
  v35 = v46;
  v33[4] = a3;
  v33[5] = v35;
  v33[6] = v47;
  v33[7] = a8;
  v60 = sub_2119BA5A0;
  v61 = v33;
  aBlock = v20;
  v57 = v21[335];
  v58 = sub_21192382C;
  v59 = &unk_24CCC9508;
  v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2119B8E00(v35);
  swift_bridgeObjectRetain();
  v37 = v48;
  sub_211A477B4();
  v55 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v38 = v51;
  sub_211A47EA4();
  sub_211A47D48();
  _Block_release(v36);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v12);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
  return swift_release();
}

void sub_2119B6BA8(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *a1;
  v1 = a1[1];
  if (qword_254AC7B80 != -1)
    swift_once();
  v3 = sub_211A47748();
  sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v6 = 136315394;
    swift_retain();
    v7 = sub_211A48384();
    v16 = v2;
    v9 = sub_21193707C(9uLL, v7, v8);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v9, v11, v13, v15);
    swift_bridgeObjectRelease();
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    sub_211950A9C(30768, 0xE200000000000000, &v18);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v16, v1, &v18);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v4, v5, "👀 FMFProactiveLocationController<%s>: subscribing for %s…", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v17, -1, -1);
    MEMORY[0x212BE48A0](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_2119B6E6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  const void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v32 = a7;
  v12 = sub_211A4779C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_211A477D8();
  v33 = *(_QWORD *)(v17 - 8);
  v34 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = result;
    v31 = *(_QWORD *)(result + 40);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a2;
    v23[3] = v22;
    v23[4] = a4;
    v23[5] = a1;
    v23[6] = a5;
    v23[7] = a6;
    v29 = a6;
    v24 = v32;
    v23[8] = v32;
    aBlock[4] = sub_2119BA804;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCC9558;
    v25 = _Block_copy(aBlock);
    v30 = v13;
    v26 = v25;
    v27 = a2;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v28 = v24;
    sub_211A477B4();
    v35 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v20, v16, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v12);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2119B70E4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, NSObject *a7)
{
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _DWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _DWORD *v42;
  void *v43;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[2];
  void *v48[5];

  v46 = a3 + 16;
  if (a1)
  {
    v11 = a1;
    if (qword_254AC7B80 != -1)
      swift_once();
    v12 = sub_211A47748();
    sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
    v13 = a1;
    swift_retain();
    swift_retain();
    v14 = a1;
    swift_retain();
    swift_retain();
    v15 = sub_211A47724();
    v16 = sub_211A47D30();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (_DWORD *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v47[0] = v45;
      *v17 = 136315650;
      v42 = v17;
      swift_retain();
      v18 = sub_211A48384();
      v20 = sub_21193707C(9uLL, v18, v19);
      v22 = v21;
      v24 = v23;
      type = v16;
      v26 = v25;
      swift_bridgeObjectRelease();
      MEMORY[0x212BE376C](v20, v22, v24, v26);
      swift_bridgeObjectRelease();
      v48[0] = (void *)30768;
      v48[1] = (void *)0xE200000000000000;
      v43 = a1;
      sub_211A479B8();
      swift_release();
      swift_bridgeObjectRelease();
      v48[0] = (void *)sub_211950A9C(30768, 0xE200000000000000, v47);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v42 + 6) = 2048;
      swift_beginAccess();
      v27 = *(void **)(*(_QWORD *)(a3 + 16) + 16);
      swift_release();
      v48[0] = v27;
      sub_211A47E2C();
      swift_release();
      *((_WORD *)v42 + 11) = 2080;
      swift_getErrorValue();
      v28 = sub_211A482DC();
      v48[0] = (void *)sub_211950A9C(v28, v29, v47);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v15, type, "👀 FMFProactiveLocationController<%s>: failed subscribing for %ld ids (error=%s)", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v45, -1, -1);
      MEMORY[0x212BE48A0](v42, -1, -1);

    }
    else
    {
      swift_release();

      swift_release();
      swift_release_n();

    }
    goto LABEL_17;
  }
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_211A480A8();
    v33 = result;
    if (result)
      goto LABEL_8;
  }
  else
  {
    v33 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v33)
    {
LABEL_8:
      if (v33 < 1)
      {
        __break(1u);
        return result;
      }
      v35 = 0;
      do
      {
        if ((a4 & 0xC000000000000001) != 0)
          v36 = (id)MEMORY[0x212BE3DA8](v35, a4);
        else
          v36 = *(id *)(a4 + 8 * v35 + 32);
        v37 = v36;
        ++v35;
        v48[0] = v36;
        sub_2119B759C(v48, v46, a2, a5, a6, a7);

      }
      while (v33 != v35);
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  result = swift_beginAccess();
  v38 = *(_QWORD *)v46;
  v39 = *(_QWORD *)(*(_QWORD *)v46 + 16);
  if (v39)
  {
    swift_bridgeObjectRetain();
    v40 = (uint64_t *)(v38 + 40);
    do
    {
      v41 = *v40;
      v47[0] = *(v40 - 1);
      v47[1] = v41;
      swift_bridgeObjectRetain();
      sub_2119B8348(v47, a2, a7);
      swift_bridgeObjectRelease();
      v40 += 2;
      --v39;
    }
    while (v39);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2119B759C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t *i;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  id v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t, uint64_t);
  NSObject *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;

  v87 = a5;
  v88 = a6;
  v89 = a4;
  v10 = type metadata accessor for FMFLocation();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v78 - v16;
  v18 = *a1;
  swift_beginAccess();
  v19 = *(_QWORD *)a2;
  v20 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v20)
  {
    v79 = a2;
    v80 = v11;
    v81 = v12;
    v82 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v85 = v6;
    v86 = a3;
    v83 = v17;
    v21 = v19;
    v22 = v18;
    swift_bridgeObjectRetain();
    v23 = 0;
    v84 = v21;
    for (i = (uint64_t *)(v21 + 40); ; i += 2)
    {
      v26 = *(i - 1);
      v25 = *i;
      swift_bridgeObjectRetain();
      v27 = objc_msgSend(v22, sel_findMyId);
      v28 = sub_211A47910();
      v30 = v29;

      if (v26 == v28 && v25 == v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
      v32 = sub_211A48258();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
        break;
      if (v20 == ++v23)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_beginAccess();
    sub_2119B7D18(v23);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v33 = v86;
    if (qword_254AC7B80 != -1)
      swift_once();
    v34 = sub_211A47748();
    sub_21194F3E0(v34, (uint64_t)qword_254ADC7E8);
    v35 = v22;
    swift_retain_n();
    v36 = v35;
    v37 = sub_211A47724();
    v38 = sub_211A47D30();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      LODWORD(v84) = v38;
      v78 = v37;
      v39 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v92 = v79;
      *(_DWORD *)v39 = 136316163;
      v90 = v33;
      swift_retain();
      v40 = sub_211A48384();
      v42 = sub_21193707C(9uLL, v40, v41);
      v44 = v43;
      v46 = v45;
      v48 = v47;
      swift_bridgeObjectRelease();
      MEMORY[0x212BE376C](v42, v44, v46, v48);
      swift_bridgeObjectRelease();
      v90 = 30768;
      v91 = 0xE200000000000000;
      sub_211A479B8();
      swift_release();
      swift_bridgeObjectRelease();
      v90 = sub_211950A9C(v90, v91, &v92);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      v49 = objc_msgSend(v36, sel_findMyId);
      v50 = sub_211A47910();
      v52 = v51;

      v90 = sub_211950A9C(v50, v52, &v92);
      sub_211A47E2C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2049;
      objc_msgSend(v36, sel_latitude);
      v90 = v53;
      sub_211A47E2C();

      *(_WORD *)(v39 + 32) = 2049;
      objc_msgSend(v36, sel_longitude);
      v90 = v54;
      sub_211A47E2C();

      *(_WORD *)(v39 + 42) = 2081;
      v55 = objc_msgSend(v36, sel_locationLabel);
      if (v55)
      {
        v56 = v55;
        v57 = sub_211A47910();
        v59 = v58;

      }
      else
      {
        v59 = 0xE300000000000000;
        v57 = 7104878;
      }
      v61 = v87;
      v60 = v88;
      v62 = v78;
      v90 = sub_211950A9C(v57, v59, &v92);
      sub_211A47E2C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v62, (os_log_type_t)v84, "👀 FMFProactiveLocationController<%s>: did subscribe and fetch for %s: {%{private}f,%{private}f}, label='%{private}s'", (uint8_t *)v39, 0x34u);
      v63 = v79;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v63, -1, -1);
      MEMORY[0x212BE48A0](v39, -1, -1);

      v33 = v86;
    }
    else
    {

      swift_release_n();
      v61 = v87;
      v60 = v88;
    }
    v64 = swift_allocObject();
    v88 = (void *)v64;
    swift_weakInit();
    v65 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
    v66 = v89;
    *((_QWORD *)v65 + 2) = v64;
    *((_QWORD *)v65 + 3) = v66;
    *((_QWORD *)v65 + 4) = v61;
    *((_QWORD *)v65 + 5) = v60;
    v67 = v36;
    v87 = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    v68 = v60;
    v69 = (uint64_t)v83;
    sub_211983E70(v67, (uint64_t)v83);
    v89 = *(_QWORD *)(v33 + 72);
    sub_211958C38(&qword_254ACA970);
    v70 = *(unsigned __int8 *)(v80 + 80);
    v71 = v33;
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_211A4A230;
    sub_211934794(v69, v72 + ((v70 + 32) & ~v70), (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v73 = v82;
    sub_211934794(v69, v82, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v74 = (v70 + 16) & ~v70;
    v75 = (v81 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    v76 = swift_allocObject();
    sub_211942810(v73, v76 + v74, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    *(_QWORD *)(v76 + v75) = v71;
    v77 = (uint64_t (**)(uint64_t, uint64_t))(v76 + ((v75 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v77 = sub_2119BA854;
    v77[1] = v65;
    swift_retain();
    swift_retain();
    sub_21193220C(v72, (uint64_t)sub_2119BA864, v76);
    swift_bridgeObjectRelease();
    swift_release();
    sub_211934758(v69, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    swift_release();
    swift_release();

  }
}

uint64_t sub_2119B7D18(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_211A18C98(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_2119B7DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[6];

  v45 = a5;
  v46 = a6;
  v43 = a2;
  v44 = a4;
  v7 = sub_211A4779C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477D8();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMFLocation();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v38 - v23;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v26 = *(_QWORD *)(result + 40);
    v40 = v11;
    v41 = v26;
    v42 = result;
    sub_211934794(a1, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934794(v43, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v27 = *(unsigned __int8 *)(v17 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = (v18 + 7 + v28) & 0xFFFFFFFFFFFFFFF8;
    v39 = v7;
    v30 = (v27 + v29 + 8) & ~v27;
    v43 = v8;
    v31 = (v18 + 7 + v30) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v44;
    sub_211942810((uint64_t)v24, v32 + v28, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    *(_QWORD *)(v32 + v29) = v45;
    sub_211942810((uint64_t)v21, v32 + v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v33 = v46;
    *(_QWORD *)(v32 + v31) = v46;
    aBlock[4] = sub_2119BAE80;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCC9620;
    v34 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v35 = v33;
    sub_211A477B4();
    v49 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    v37 = v39;
    v36 = v40;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v15, v36, v34);
    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_2119B8114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t *v19;
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v10 = type metadata accessor for FMFLocation();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v33 - v17;
  v19 = (unint64_t *)(a1 + 16);
  sub_211934794(a2, (uint64_t)&v33 - v17, v20);
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 16) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_21194B098(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    *v19 = v21;
  }
  v23 = (unint64_t *)(a3 + 16);
  v25 = *(_QWORD *)(v21 + 16);
  v24 = *(_QWORD *)(v21 + 24);
  if (v25 >= v24 >> 1)
  {
    v21 = sub_21194B098(v24 > 1, v25 + 1, 1, v21);
    *v19 = v21;
  }
  *(_QWORD *)(v21 + 16) = v25 + 1;
  v26 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v27 = v21 + v26;
  v28 = *(_QWORD *)(v11 + 72);
  sub_211942810((uint64_t)v18, v27 + v28 * v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_endAccess();
  sub_211934794(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_beginAccess();
  v29 = *v23;
  v30 = swift_isUniquelyReferenced_nonNull_native();
  *v23 = v29;
  if ((v30 & 1) == 0)
  {
    v29 = sub_21194B098(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    *v23 = v29;
  }
  v32 = *(_QWORD *)(v29 + 16);
  v31 = *(_QWORD *)(v29 + 24);
  if (v32 >= v31 >> 1)
  {
    v29 = sub_21194B098(v31 > 1, v32 + 1, 1, v29);
    *v23 = v29;
  }
  *(_QWORD *)(v29 + 16) = v32 + 1;
  sub_211942810((uint64_t)v15, v29 + v26 + v32 * v28, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_endAccess();
  dispatch_group_leave(a5);
}

void sub_2119B8348(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t type;
  uint64_t v22;
  uint64_t v23;

  v5 = *a1;
  v4 = a1[1];
  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23 = v22;
    *(_DWORD *)v9 = 136315394;
    swift_retain();
    v10 = sub_211A48384();
    type = v8;
    v12 = sub_21193707C(9uLL, v10, v11);
    v20 = v5;
    v13 = a3;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v12, v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_211A479B8();
    swift_release();
    a3 = v13;
    swift_bridgeObjectRelease();
    sub_211950A9C(30768, 0xE200000000000000, &v23);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v20, v4, &v23);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v7, type, "👀 FMFProactiveLocationController<%s>: failed subscribe and fetch for %s: no location found", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v22, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  dispatch_group_leave(a3);
}

void sub_2119B8628(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_211911824(0, &qword_254ACABC0);
  v5 = sub_211A47AA8();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_2119B86C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32[4];
  uint64_t v33;
  unint64_t v34;

  if (qword_254AC7B80 != -1)
    swift_once();
  v30 = a4;
  v8 = sub_211A47748();
  sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  swift_retain_n();
  v9 = sub_211A47724();
  v10 = sub_211A47D30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v32[0] = v28;
    *(_DWORD *)v11 = 136315394;
    swift_retain();
    v12 = sub_211A48384();
    v14 = sub_21193707C(9uLL, v12, v13);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_bridgeObjectRelease();
    MEMORY[0x212BE376C](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
    v33 = 30768;
    v34 = 0xE200000000000000;
    sub_211A479B8();
    swift_release();
    swift_bridgeObjectRelease();
    v33 = sub_211950A9C(30768, 0xE200000000000000, v32);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    swift_beginAccess();
    v21 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
    swift_release();
    v33 = v21;
    sub_211A47E2C();
    swift_release();
    _os_log_impl(&dword_21190D000, v9, v10, "👀 FMFProactiveLocationController<%s>: updating client subscribers with %ld resolved locations", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v28, -1, -1);
    MEMORY[0x212BE48A0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  v22 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v22, v23);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A47DA8();
  swift_release();
  swift_bridgeObjectRelease();
  v24 = swift_beginAccess();
  MEMORY[0x24BDAC7A8](v24, v25);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A47DA8();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (v30)
  {
    sub_2119B8E00((uint64_t)v30);
    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    swift_bridgeObjectRetain();
    v27 = sub_2119BA5B0(v31, a6);
    swift_bridgeObjectRelease();
    v30(v27);
    swift_bridgeObjectRelease();
    return sub_2119BA4CC((uint64_t)v30);
  }
  return result;
}

uint64_t sub_2119B8B48(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = type metadata accessor for FMFFriend();
  MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (_QWORD *)((char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v28 = a1;
    v29 = v2;
    v11 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v30 = *(_QWORD *)(v7 + 72);
    v27[1] = a2;
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_211934794(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v13 = *v9;
      v14 = v9[1];
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_2119B02DC(0, v12[2] + 1, 1, v12);
      v16 = v12[2];
      v15 = v12[3];
      if (v16 >= v15 >> 1)
        v12 = sub_2119B02DC((_QWORD *)(v15 > 1), v16 + 1, 1, v12);
      v12[2] = v16 + 1;
      v17 = &v12[2 * v16];
      v17[4] = v13;
      v17[5] = v14;
      v11 += v30;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a1 = v28;
    v18 = v12[2];
    if (!v18)
      goto LABEL_26;
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v18)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v20 = *a1;
  v19 = a1[1];
  v21 = v12[4] == v20 && v12[5] == v19;
  if (v21 || (result = sub_211A48258(), (result & 1) != 0))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v18 == 1)
    goto LABEL_26;
  v23 = v12 + 7;
  v24 = 1;
  while (1)
  {
    v25 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (*(v23 - 1) == v20 && *v23 == v19)
      goto LABEL_16;
    result = sub_211A48258();
    if ((result & 1) != 0)
      goto LABEL_16;
    v23 += 2;
    ++v24;
    if (v25 == v18)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_2119B8D6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119B8D90()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  if (*(_QWORD *)(v0 + 56))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119B8DEC()
{
  uint64_t v0;

  return sub_2119B6768(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_2119B8E00(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2119B8E10(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2119BA45C(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2119B8E90(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_2119B8E90(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  BOOL v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;

  v2 = v1;
  v4 = type metadata accessor for FMFFriend();
  v153 = *(_QWORD *)(v4 - 8);
  v154 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v148 = (uint64_t)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v159 = (uint64_t)&v140 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v140 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v140 - v17;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v151 = (uint64_t *)((char *)&v140 - v21);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v150 = (uint64_t *)((char *)&v140 - v24);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v146 = (uint64_t *)((char *)&v140 - v27);
  MEMORY[0x24BDAC7A8](v26, v28);
  v145 = (uint64_t *)((char *)&v140 - v29);
  v161 = a1;
  v30 = a1[1];
  result = sub_211A48204();
  if (result >= v30)
  {
    if (v30 < 0)
      goto LABEL_157;
    if (v30)
      return sub_2119B993C(0, v30, 1, v161);
    return result;
  }
  if (v30 >= 0)
    v32 = v30;
  else
    v32 = v30 + 1;
  if (v30 < -1)
    goto LABEL_165;
  v155 = v18;
  v156 = v14;
  v144 = result;
  if (v30 < 2)
  {
    v36 = (char *)MEMORY[0x24BEE4AF8];
    v152 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    v143 = MEMORY[0x24BEE4AF8];
    if (v30 != 1)
    {
      v38 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_123:
      if (v38 >= 2)
      {
        v133 = *v161;
        do
        {
          v134 = v38 - 2;
          if (v38 < 2)
            goto LABEL_152;
          if (!v133)
            goto LABEL_164;
          v135 = v36;
          v136 = *(_QWORD *)&v36[16 * v134 + 32];
          v137 = *(_QWORD *)&v36[16 * v38 + 24];
          sub_2119B9BA8(v133 + *(_QWORD *)(v153 + 72) * v136, v133 + *(_QWORD *)(v153 + 72) * *(_QWORD *)&v36[16 * v38 + 16], v133 + *(_QWORD *)(v153 + 72) * v137, v152);
          if (v2)
            break;
          if (v137 < v136)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v135 = sub_2119BA434((uint64_t)v36);
          if (v134 >= *((_QWORD *)v135 + 2))
            goto LABEL_154;
          v138 = &v135[16 * v134 + 32];
          *(_QWORD *)v138 = v136;
          *((_QWORD *)v138 + 1) = v137;
          v139 = *((_QWORD *)v135 + 2);
          if (v38 > v139)
            goto LABEL_155;
          memmove(&v135[16 * v38 + 16], &v135[16 * v38 + 32], 16 * (v139 - v38));
          *((_QWORD *)v135 + 2) = v139 - 1;
          v38 = v139 - 1;
          v36 = v135;
        }
        while (v139 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v143 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v33 = v32 >> 1;
    v34 = sub_211A47AFC();
    *(_QWORD *)(v34 + 16) = v33;
    v35 = *(unsigned __int8 *)(v153 + 80);
    v143 = v34;
    v152 = v34 + ((v35 + 32) & ~v35);
  }
  v37 = 0;
  v36 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v39 = v37;
    v40 = v37 + 1;
    if (v37 + 1 >= v30)
    {
      v47 = v37 + 1;
      v48 = (uint64_t)v156;
    }
    else
    {
      v41 = *v161;
      v42 = *(_QWORD *)(v153 + 72);
      v43 = v145;
      sub_211934794(*v161 + v42 * v40, (uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v149 = v39;
      v160 = v42;
      v44 = v41 + v42 * v39;
      v45 = v146;
      sub_211934794(v44, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v46 = *v43 == *v45 && v43[1] == v45[1];
      LODWORD(v158) = v46 ? 0 : sub_211A48258();
      sub_211934758((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934758((uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v39 = v149;
      v147 = v41;
      if (v149 + 2 >= v30)
      {
        v50 = v149 + 2;
        if ((v158 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        v157 = v160 * v40;
        v49 = v41;
        v50 = v149 + 2;
        v51 = v160 * (v149 + 2);
        while (1)
        {
          v52 = v30;
          v53 = v150;
          sub_211934794(v49 + v51, (uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v54 = v151;
          sub_211934794(v49 + v157, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v55 = *v53 == *v54 && v53[1] == v54[1];
          v56 = v55 ? 0 : sub_211A48258();
          sub_211934758((uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211934758((uint64_t)v150, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v30 = v52;
          if (((v158 ^ v56) & 1) != 0)
            break;
          v49 += v160;
          if (v52 == ++v50)
          {
            v50 = v52;
            break;
          }
        }
        v39 = v149;
        if ((v158 & 1) == 0)
        {
LABEL_35:
          v48 = (uint64_t)v156;
          v47 = v50;
          goto LABEL_51;
        }
      }
      if (v50 < v39)
        goto LABEL_158;
      v47 = v50;
      if (v39 >= v50)
      {
        v48 = (uint64_t)v156;
      }
      else
      {
        v157 = v30;
        v142 = v36;
        v57 = 0;
        v58 = v39;
        v59 = v160 * (v47 - 1);
        v60 = v47 * v160;
        v61 = v58;
        v62 = v58 * v160;
        v48 = (uint64_t)v156;
        do
        {
          if (v61 != v47 + v57 - 1)
          {
            v64 = v2;
            v65 = v147;
            if (!v147)
              goto LABEL_163;
            v66 = v147 + v62;
            v158 = v147 + v59;
            sub_211942810(v147 + v62, v148, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            if (v62 < v59 || v66 >= v65 + v60)
            {
              v63 = v158;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v63 = v158;
              if (v62 != v59)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_211942810(v148, v63, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v48 = (uint64_t)v156;
            v2 = v64;
          }
          ++v61;
          --v57;
          v59 -= v160;
          v60 -= v160;
          v62 += v160;
        }
        while (v61 < v47 + v57);
        v36 = v142;
        v39 = v149;
        v30 = v157;
      }
    }
LABEL_51:
    v158 = v47;
    if (v47 >= v30)
      goto LABEL_75;
    if (__OFSUB__(v47, v39))
      goto LABEL_156;
    if (v47 - v39 >= v144)
      goto LABEL_75;
    if (__OFADD__(v39, v144))
      goto LABEL_159;
    v67 = v39 + v144 >= v30 ? v30 : v39 + v144;
    if (v67 < v39)
      break;
    v149 = v39;
    v68 = v158;
    if (v158 != v67)
    {
      v141 = v2;
      v142 = v36;
      v69 = *(_QWORD *)(v153 + 72);
      v160 = v69 * (v158 - 1);
      v157 = v69;
      v70 = v158 * v69;
      v147 = v67;
      do
      {
        v71 = 0;
        v72 = v149;
        v158 = v70;
        while (1)
        {
          v73 = (_QWORD *)v48;
          v74 = *v161;
          v75 = v70 + v71 + *v161;
          v76 = v155;
          sub_211934794(v75, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v77 = v160 + v71 + v74;
          v48 = (uint64_t)v73;
          sub_211934794(v77, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if (*v76 == *v73 && v76[1] == v73[1])
            break;
          v79 = sub_211A48258();
          sub_211934758(v48, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211934758((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if ((v79 & 1) == 0)
            goto LABEL_62;
          v80 = *v161;
          v70 = v158;
          if (!*v161)
            goto LABEL_161;
          v81 = v80 + v160 + v71;
          sub_211942810(v80 + v158 + v71, v159, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          swift_arrayInitWithTakeFrontToBack();
          sub_211942810(v159, v81, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v48 = (uint64_t)v156;
          v71 -= v157;
          if (v68 == ++v72)
            goto LABEL_63;
        }
        sub_211934758((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211934758((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_62:
        v70 = v158;
LABEL_63:
        ++v68;
        v160 += v157;
        v70 += v157;
      }
      while (v68 != v147);
      v158 = v147;
      v2 = v141;
      v36 = v142;
    }
    v39 = v149;
LABEL_75:
    if (v158 < v39)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v36 = sub_2119BA0CC(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
    v83 = *((_QWORD *)v36 + 2);
    v82 = *((_QWORD *)v36 + 3);
    v38 = v83 + 1;
    if (v83 >= v82 >> 1)
      v36 = sub_2119BA0CC((char *)(v82 > 1), v83 + 1, 1, v36);
    *((_QWORD *)v36 + 2) = v38;
    v84 = v36 + 32;
    v85 = &v36[16 * v83 + 32];
    v86 = v158;
    *(_QWORD *)v85 = v39;
    *((_QWORD *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        v87 = v38 - 1;
        if (v38 >= 4)
        {
          v92 = &v84[16 * v38];
          v93 = *((_QWORD *)v92 - 8);
          v94 = *((_QWORD *)v92 - 7);
          v98 = __OFSUB__(v94, v93);
          v95 = v94 - v93;
          if (v98)
            goto LABEL_140;
          v97 = *((_QWORD *)v92 - 6);
          v96 = *((_QWORD *)v92 - 5);
          v98 = __OFSUB__(v96, v97);
          v90 = v96 - v97;
          v91 = v98;
          if (v98)
            goto LABEL_141;
          v99 = v38 - 2;
          v100 = &v84[16 * v38 - 32];
          v102 = *(_QWORD *)v100;
          v101 = *((_QWORD *)v100 + 1);
          v98 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v98)
            goto LABEL_143;
          v98 = __OFADD__(v90, v103);
          v104 = v90 + v103;
          if (v98)
            goto LABEL_146;
          if (v104 >= v95)
          {
            v122 = &v84[16 * v87];
            v124 = *(_QWORD *)v122;
            v123 = *((_QWORD *)v122 + 1);
            v98 = __OFSUB__(v123, v124);
            v125 = v123 - v124;
            if (v98)
              goto LABEL_150;
            v115 = v90 < v125;
            goto LABEL_112;
          }
        }
        else
        {
          if (v38 != 3)
          {
            v116 = *((_QWORD *)v36 + 4);
            v117 = *((_QWORD *)v36 + 5);
            v98 = __OFSUB__(v117, v116);
            v109 = v117 - v116;
            v110 = v98;
            goto LABEL_106;
          }
          v89 = *((_QWORD *)v36 + 4);
          v88 = *((_QWORD *)v36 + 5);
          v98 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          v91 = v98;
        }
        if ((v91 & 1) != 0)
          goto LABEL_142;
        v99 = v38 - 2;
        v105 = &v84[16 * v38 - 32];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v108 = __OFSUB__(v106, v107);
        v109 = v106 - v107;
        v110 = v108;
        if (v108)
          goto LABEL_145;
        v111 = &v84[16 * v87];
        v113 = *(_QWORD *)v111;
        v112 = *((_QWORD *)v111 + 1);
        v98 = __OFSUB__(v112, v113);
        v114 = v112 - v113;
        if (v98)
          goto LABEL_148;
        if (__OFADD__(v109, v114))
          goto LABEL_149;
        if (v109 + v114 >= v90)
        {
          v115 = v90 < v114;
LABEL_112:
          if (v115)
            v87 = v99;
          goto LABEL_114;
        }
LABEL_106:
        if ((v110 & 1) != 0)
          goto LABEL_144;
        v118 = &v84[16 * v87];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v98 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v98)
          goto LABEL_147;
        if (v121 < v109)
          goto LABEL_14;
LABEL_114:
        v126 = v87 - 1;
        if (v87 - 1 >= v38)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v161)
          goto LABEL_162;
        v127 = v36;
        v128 = &v84[16 * v126];
        v129 = *(_QWORD *)v128;
        v130 = &v84[16 * v87];
        v131 = *((_QWORD *)v130 + 1);
        sub_2119B9BA8(*v161 + *(_QWORD *)(v153 + 72) * *(_QWORD *)v128, *v161 + *(_QWORD *)(v153 + 72) * *(_QWORD *)v130, *v161 + *(_QWORD *)(v153 + 72) * v131, v152);
        if (v2)
          goto LABEL_134;
        if (v131 < v129)
          goto LABEL_137;
        if (v87 > *((_QWORD *)v127 + 2))
          goto LABEL_138;
        *(_QWORD *)v128 = v129;
        *(_QWORD *)&v84[16 * v126 + 8] = v131;
        v132 = *((_QWORD *)v127 + 2);
        if (v87 >= v132)
          goto LABEL_139;
        v36 = v127;
        v38 = v132 - 1;
        memmove(&v84[16 * v87], v130 + 16, 16 * (v132 - 1 - v87));
        *((_QWORD *)v127 + 2) = v132 - 1;
        if (v132 <= 2)
          goto LABEL_14;
      }
    }
    v38 = 1;
LABEL_14:
    v30 = v161[1];
    v37 = v158;
    if (v158 >= v30)
      goto LABEL_123;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_211A48090();
  __break(1u);
  return result;
}

uint64_t sub_2119B993C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v28)();
  _QWORD *v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a1;
  v35 = type metadata accessor for FMFFriend();
  v8 = MEMORY[0x24BDAC7A8](v35, v7);
  v39 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (uint64_t *)((char *)&v32 - v12);
  result = MEMORY[0x24BDAC7A8](v11, v14);
  v18 = (uint64_t *)((char *)&v32 - v17);
  v38 = a3;
  v33 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v16 + 72);
    v41 = v19 * (v38 - 1);
    v37 = v19;
    v40 = v19 * v38;
    v20 = type metadata accessor for FMFFriend;
    v36 = (char *)&v32 - v17;
LABEL_6:
    v21 = 0;
    v22 = v34;
    while (1)
    {
      v23 = *a4;
      sub_211934794(v40 + v21 + *a4, (uint64_t)v18, (uint64_t (*)(_QWORD))v20);
      sub_211934794(v41 + v21 + v23, (uint64_t)v13, (uint64_t (*)(_QWORD))v20);
      if (*v18 == *v13 && v18[1] == v13[1])
      {
        sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))v20);
        result = sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))v20);
LABEL_5:
        v41 += v37;
        v40 += v37;
        if (++v38 == v33)
          return result;
        goto LABEL_6;
      }
      v25 = sub_211A48258();
      sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))v20);
      result = sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))v20);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v13;
      v28 = v20;
      v29 = a4;
      v30 = v26 + v41 + v21;
      v31 = v28;
      sub_211942810(v26 + v40 + v21, v39, (uint64_t (*)(_QWORD))v28);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_211942810(v39, v30, (uint64_t (*)(_QWORD))v31);
      v21 -= v37;
      ++v22;
      a4 = v29;
      v20 = v31;
      v13 = v27;
      v18 = v36;
      if (v38 == v22)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2119B9BA8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v48 = type metadata accessor for FMFFriend();
  v9 = MEMORY[0x24BDAC7A8](v48, v8);
  v50 = (unint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v49 = (uint64_t *)((char *)&v47 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (uint64_t *)((char *)&v47 - v16);
  MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (uint64_t *)((char *)&v47 - v20);
  v22 = *(_QWORD *)(v19 + 72);
  if (!v22)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v23 = *(_QWORD *)(v19 + 72);
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_72;
  v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v22 == -1)
    goto LABEL_73;
  v25 = (uint64_t)(a2 - a1) / v22;
  v53 = a1;
  v52 = a4;
  v26 = v24 / v22;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      v28 = v26 * v23;
      if (a4 < a2 || a2 + v28 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v35 = a4 + v28;
      v51 = a4 + v28;
      v53 = a2;
      if (v28 >= 1 && a1 < a2)
      {
        v37 = -v23;
        do
        {
          v38 = a1;
          v39 = v49;
          sub_211934794(v35 + v37, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v40 = a2 + v37;
          v41 = (_QWORD *)v50;
          sub_211934794(a2 + v37, v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if (*v39 == *v41 && v39[1] == v41[1])
            v43 = 0;
          else
            v43 = sub_211A48258();
          v44 = a3 + v37;
          sub_211934758(v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          sub_211934758((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          if ((v43 & 1) != 0)
          {
            if (a3 < a2 || v44 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v53 += v37;
          }
          else
          {
            v45 = v51;
            v51 += v37;
            if (a3 < v45 || v44 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              v40 = a2;
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != v45)
                swift_arrayInitWithTakeBackToFront();
              v40 = a2;
            }
          }
          v35 = v51;
          if (v51 <= a4)
            break;
          a2 = v40;
          a3 += v37;
        }
        while (v40 > a1);
      }
LABEL_70:
      sub_2119BA26C(&v53, &v52, (uint64_t *)&v51);
      return 1;
    }
  }
  else if ((v25 & 0x8000000000000000) == 0)
  {
    v27 = v25 * v23;
    if (a4 < a1 || a1 + v27 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v50 = a4 + v27;
    v51 = a4 + v27;
    if (v27 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_211934794(a2, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211934794(a4, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if (*v21 == *v17 && v21[1] == v17[1])
          break;
        v31 = sub_211A48258();
        sub_211934758((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((v31 & 1) == 0)
          goto LABEL_32;
        v32 = v53;
        v33 = a2 + v23;
        if (v53 < a2 || v53 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 == a2)
        {
          v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v53 = v32 + v23;
        a4 = v52;
        if (v52 < v50)
        {
          a2 = v33;
          if (v33 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_211934758((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_32:
      v32 = v53;
      v34 = v52 + v23;
      if (v53 < v52 || v53 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v53 != v52)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v52 = v34;
      v33 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

char *sub_2119BA0CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_211958C38(&qword_254ACAC00);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2119BA1C4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_211A480D8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_2119BA26C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for FMFFriend();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_211A480D8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2119BA378(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_211A480D8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_2119BA434(uint64_t a1)
{
  return sub_2119BA0CC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2119BA448(uint64_t a1)
{
  return sub_211948C2C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2119BA45C(_QWORD *a1)
{
  return sub_211A268A8(0, a1[2], 0, a1);
}

uint64_t sub_2119BA470(uint64_t a1)
{
  return sub_211A26BD8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2119BA484()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119BA4C0()
{
  uint64_t *v0;

  return sub_2119B485C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_2119BA4CC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2119BA4DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2119BA500()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119BA544(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2119B6E6C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_2119BA554()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119BA5A0()
{
  uint64_t v0;

  return sub_2119B86C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_2119BA5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for FMFFriend();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v24 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (uint64_t *)((char *)&v21 - v12);
  v14 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v15 = 0;
    v21 = a2;
    v22 = a1;
    while (v15 < *(_QWORD *)(a1 + 16))
    {
      v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v17 = *(_QWORD *)(v6 + 72);
      sub_211934794(a1 + v16 + v17 * v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v18 = sub_2119B8B48(v13, a2);
      if (v2)
      {
        sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        swift_release();
        swift_bridgeObjectRelease();
        return v14;
      }
      if ((v18 & 1) != 0)
      {
        sub_211942810((uint64_t)v13, v24, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21194B0AC(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v25;
        v20 = *(_QWORD *)(v25 + 16);
        v19 = *(_QWORD *)(v25 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_21194B0AC(v19 > 1, v20 + 1, 1);
          v14 = v25;
        }
        *(_QWORD *)(v14 + 16) = v20 + 1;
        result = sub_211942810(v24, v14 + v16 + v20 * v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        a2 = v21;
        a1 = v22;
      }
      else
      {
        result = sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      if (v23 == ++v15)
      {
        v14 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_2119BA7B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119BA804()
{
  uint64_t v0;

  return sub_2119B70E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(NSObject **)(v0 + 64));
}

uint64_t sub_2119BA818()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119BA854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2119B7DF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_2119BA868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v1 = type metadata accessor for FMFLocation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(v1 + 32);
  v8 = sub_211A4722C();
  v17 = *(_QWORD *)(v8 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v9(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v8);
  v10 = (v3 + 16 + v5) & ~v3;
  v11 = v6 + *(int *)(v1 + 44);
  v12 = *(void **)(v11 + 304);
  if (v12)
  {
    if (*(_QWORD *)(v11 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(void **)(v11 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v13 = v0 + v10 + *(int *)(v1 + 32);
  if (!v9(v13, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v8);
  v14 = v0 + v10 + *(int *)(v1 + 44);
  v15 = *(void **)(v14 + 304);
  if (v15)
  {
    if (*(_QWORD *)(v14 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(void **)(v14 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119BAB3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2119B30C0(a1, (uint64_t *)(v1 + v5), *(_QWORD *)(v1 + v6), *(void (**)(_QWORD, _QWORD))(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((v4 + 16 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v4));
}

uint64_t sub_2119BABA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v1 = type metadata accessor for FMFLocation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v18 = *(_QWORD *)(v2 + 64) + 7;
  v5 = (v18 + v4) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = v0 + v4 + *(int *)(v1 + 32);
  v8 = sub_211A4722C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = (v3 + v5 + 8) & ~v3;
  v12 = v6 + *(int *)(v1 + 44);
  v13 = *(void **)(v12 + 304);
  if (v13)
  {
    if (*(_QWORD *)(v12 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(void **)(v12 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  v14 = v0 + v11 + *(int *)(v1 + 32);
  if (!v10(v14, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  v15 = v0 + v11 + *(int *)(v1 + 44);
  v16 = *(void **)(v15 + 304);
  if (v16)
  {
    if (*(_QWORD *)(v15 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = *(void **)(v15 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void sub_2119BAE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + 7;
  sub_2119B8114(*(_QWORD *)(v0 + 16), v0 + v3, *(_QWORD *)(v0 + ((v4 + v3) & 0xFFFFFFFFFFFFFFF8)), v0 + ((v2 + ((v4 + v3) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2), *(NSObject **)(v0 + ((v4 + ((v2 + ((v4 + v3) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2)) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2119BAEE0()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119BAF3C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2119B5444(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64), *(void (***)(char *, uint64_t))(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_2119BAF74()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_2119BAFB0()
{
  uint64_t v0;

  sub_2119B63F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(NSObject **)(v0 + 48));
}

uint64_t sub_2119BAFC0()
{
  id *v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119BB014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2119B5BE4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(void **)(v2 + 64), *(void **)(v2 + 72));
}

uint64_t sub_2119BB048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v1 = type metadata accessor for FMFLocation();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 32);
  v4 = sub_211A4722C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = v2 + *(int *)(v1 + 44);
  v7 = *(void **)(v6 + 304);
  if (v7)
  {
    if (*(_QWORD *)(v6 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = *(void **)(v6 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119BB1F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2119B2924(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(_QWORD, _QWORD))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_2119BB258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v1 = type metadata accessor for FMFLocation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v20 = *(_QWORD *)(v2 + 64) + 7;
  v5 = (v20 + v4) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = v0 + v4 + *(int *)(v1 + 32);
  v8 = sub_211A4722C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = (v3 + v5 + 8) & ~v3;
  v12 = v6 + *(int *)(v1 + 44);
  v13 = *(void **)(v12 + 304);
  if (v13)
  {
    if (*(_QWORD *)(v12 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(void **)(v12 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  v14 = v0 + v11 + *(int *)(v1 + 32);
  if (!v10(v14, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  v15 = v0 + v11 + *(int *)(v1 + 44);
  v16 = *(void **)(v15 + 304);
  if (v16)
  {
    if (*(_QWORD *)(v15 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = *(void **)(v15 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = (v20 + v11) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;

  return swift_deallocObject();
}

void sub_2119BB550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + 7;
  v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  sub_2119B5F24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + v3, *(_QWORD *)(v0 + v5), v0 + ((v2 + v5 + 8) & ~v2), *(NSObject **)(v0 + ((v4 + ((v2 + v5 + 8) & ~v2)) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v0 + ((((v4 + ((v2 + v5 + 8) & ~v2)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2119BB5D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2119BB5FC(void *a1)
{
  uint64_t v1;

  sub_2119B4CCC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_2119BB63C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2119BB67C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119BB748(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2119BB78C()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119BB86C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2119BB8AC()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119BB964(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2119BB9A8()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119BBA3C(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBA7C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BBAEC(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBB3C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BBBF4(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBC3C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BBCE0(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBD34()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BBDE4(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBE30()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BBEFC(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BBF3C()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119BBFEC()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

void sub_2119BC090(uint64_t a1, char a2)
{
  sub_211A48318();
  __asm { BR              X10 }
}

uint64_t sub_2119BC0DC()
{
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t FMFLabelledLocation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLabelledLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_WORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t FMFLabelledLocation.userId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFLabelledLocation.latitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FMFLabelledLocation.longitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t FMFLabelledLocation.updatedAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FMFLabelledLocation();
  return sub_21192C6B8(v1 + *(int *)(v3 + 36), a1, qword_254AC8A78);
}

void sub_2119BC27C(char *a1)
{
  sub_211975038(*a1);
}

void sub_2119BC288()
{
  char *v0;

  sub_2119BBEFC(0, *v0);
}

void sub_2119BC294()
{
  __asm { BR              X10 }
}

uint64_t sub_2119BC2C4()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

void sub_2119BC360(uint64_t a1)
{
  char *v1;

  sub_2119BBEFC(a1, *v1);
}

uint64_t sub_2119BC368@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119BEAA8();
  *a1 = result;
  return result;
}

uint64_t sub_2119BC394()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2119BC3B8 + 4 * byte_211A4DA61[*v0]))();
}

void sub_2119BC3B8(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6562616CLL;
  a1[1] = 0xE500000000000000;
}

void sub_2119BC3D0(_QWORD *a1@<X8>)
{
  *a1 = 0x7079546C6562616CLL;
  a1[1] = 0xE900000000000065;
}

void sub_2119BC438(_QWORD *a1@<X8>)
{
  *a1 = 0x7354657461647075;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_2119BC454()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119BC478 + 4 * byte_211A4DA68[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_2119BC478()
{
  return 0x6C6562616CLL;
}

uint64_t sub_2119BC48C()
{
  return 0x7079546C6562616CLL;
}

uint64_t sub_2119BC4E8()
{
  return 0x7354657461647075;
}

uint64_t sub_2119BC500@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119BEAA8();
  *a1 = result;
  return result;
}

uint64_t sub_2119BC524()
{
  sub_2119BCAD8();
  return sub_211A48390();
}

uint64_t sub_2119BC54C()
{
  sub_2119BCAD8();
  return sub_211A4839C();
}

uint64_t FMFLabelledLocation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  __int16 v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v45 = a2;
  v4 = sub_211958C38(&qword_254ACAC08);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFLabelledLocation();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v46 = a1;
  sub_211931DB4(a1, v13);
  sub_2119BCAD8();
  sub_211A48360();
  if (!v2)
  {
    v44 = v5;
    LOBYTE(v48) = 0;
    *(_QWORD *)v12 = sub_211A48144();
    *((_QWORD *)v12 + 1) = v14;
    LOBYTE(v48) = 3;
    *((_QWORD *)v12 + 5) = sub_211A48144();
    *((_QWORD *)v12 + 6) = v15;
    LOBYTE(v48) = 4;
    sub_211A4815C();
    *((_QWORD *)v12 + 7) = v16;
    v12[64] = 0;
    LOBYTE(v48) = 5;
    sub_211A4815C();
    *((_QWORD *)v12 + 9) = v17;
    v12[80] = 0;
    LOBYTE(v48) = 6;
    v18 = sub_211A48180();
    v19 = v4;
    v20 = &v12[*(int *)(v9 + 36)];
    v21 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v18);
    sub_211A471E4();

    v22 = sub_211A47208();
    v23 = v20;
    v24 = v19;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v23, 0, 1, v22);
    LOBYTE(v48) = 1;
    v25 = sub_211A48144();
    v27 = v26;
    LOBYTE(v48) = 2;
    v28._countAndFlagsBits = sub_211A48144();
    FMFLabelSourceType.init(rawValue:)(v28);
    v29 = v48;
    swift_bridgeObjectRetain();
    v30._countAndFlagsBits = v25;
    v30._object = v27;
    FMFDefaultLabel.init(rawValue:)(v30);
    if (v47 == 5)
    {
      *((_QWORD *)v12 + 2) = v25;
      *((_QWORD *)v12 + 3) = v27;
      *((_WORD *)v12 + 16) = v29 | 0x100;
    }
    else
    {
      *((_QWORD *)v12 + 2) = v25;
      *((_QWORD *)v12 + 3) = v27;
      *((_WORD *)v12 + 16) = v29;
    }
    v31 = FMFLabelledLocation.debugDescription.getter();
    v33 = v32;
    if (qword_254AC7B80 != -1)
      swift_once();
    v34 = sub_211A47748();
    sub_21194F3E0(v34, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v35 = sub_211A47724();
    v36 = sub_211A47D30();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v42 = v31;
      v38 = (uint8_t *)v37;
      v39 = swift_slowAlloc();
      v48 = v39;
      v43 = v24;
      *(_DWORD *)v38 = 136315138;
      v41[1] = v38 + 4;
      swift_bridgeObjectRetain();
      v47 = sub_211950A9C(v42, v33, &v48);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v35, v36, "FMFLabelledLocation: initialized with coder %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v39, -1, -1);
      MEMORY[0x212BE48A0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v43);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v24);
    }
    sub_21196F780((uint64_t)v12, v45);
  }
  return sub_211931C34((uint64_t)v46);
}

unint64_t sub_2119BCAD8()
{
  unint64_t result;

  result = qword_254ACAC10;
  if (!qword_254ACAC10)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DCAC, &type metadata for FMFLabelledLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACAC10);
  }
  return result;
}

uint64_t FMFLabelledLocation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int16 v20;
  unint64_t v21;
  unint64_t v22;

  v1 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v21 = 0xD000000000000022;
  v22 = 0x8000000211A55700;
  v5 = *(_QWORD *)(v0 + 8);
  v18 = *(_QWORD *)v0;
  v19 = v5;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC7C58);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_WORD *)(v0 + 32);
  v18 = *(_QWORD *)(v0 + 16);
  v19 = v6;
  v20 = v7;
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC99D0);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v8 = v21;
  v9 = v22;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v18 = 0x203A644972657375;
  v19 = 0xE800000000000000;
  v10 = *(_QWORD *)(v0 + 48);
  v21 = *(_QWORD *)(v0 + 40);
  v22 = v10;
  swift_bridgeObjectRetain();
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v11 = *(_BYTE *)(v0 + 64);
  v21 = *(_QWORD *)(v0 + 56);
  LOBYTE(v22) = v11;
  sub_211958C38(&qword_254ACAC18);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v18 = v8;
  v19 = v9;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v18;
  v12 = v19;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v18 = 0x64757469676E6F6CLL;
  v19 = 0xEB00000000203A65;
  v14 = *(_BYTE *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 72);
  LOBYTE(v22) = v14;
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v15 = type metadata accessor for FMFLabelledLocation();
  sub_21192C6B8(v0 + *(int *)(v15 + 36), (uint64_t)v4, qword_254AC8A78);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v18 = v13;
  v19 = v12;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t FMFLabelledLocation.init(labelledLocation:label:userId:latitude:longitude:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  char *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v82 = a8;
  v77 = a7;
  v78 = a3;
  v80 = a6;
  v75 = a5;
  v83 = a4;
  v12 = sub_211958C38(&qword_254AC89F8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v76 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v81 = (char *)&v72 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v74 = (uint64_t)&v72 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v79 = (char *)&v72 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v73 = (uint64_t)&v72 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = (char *)&v72 - v30;
  MEMORY[0x24BDAC7A8](v29, v32);
  v34 = (char *)&v72 - v33;
  v35 = type metadata accessor for FMFLabelledLocation();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (uint64_t *)((char *)&v72 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = *a2;
  v41 = a2[1];
  v42 = *((_WORD *)a2 + 8);
  v84 = a1;
  v44 = v43;
  sub_21192C6B8(a1, (uint64_t)v34, &qword_254AC89F8);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v85 = v44;
  v46 = v45;
  if (v45((uint64_t)v34, 1, v44) == 1)
  {
    sub_211923EE8((uint64_t)v34, &qword_254AC89F8);
    v47 = 0;
    v48 = 0;
  }
  else
  {
    sub_21196F780((uint64_t)v34, (uint64_t)v39);
    v47 = *v39;
    v48 = v39[1];
    swift_bridgeObjectRetain();
    sub_21196F5E4((uint64_t)v39);
  }
  *(_QWORD *)a9 = v47;
  *(_QWORD *)(a9 + 8) = v48;
  *(_QWORD *)(a9 + 16) = v40;
  *(_QWORD *)(a9 + 24) = v41;
  *(_WORD *)(a9 + 32) = v42;
  v49 = v84;
  sub_21192C6B8(v84, (uint64_t)v31, &qword_254AC89F8);
  v50 = v83;
  if (v83)
  {
    sub_211923EE8((uint64_t)v31, &qword_254AC89F8);
    v51 = v82;
    v52 = (uint64_t)v81;
    v53 = v80;
    v54 = v46;
    v56 = v78;
    v55 = (uint64_t)v79;
  }
  else
  {
    v57 = v73;
    sub_2119BD854((uint64_t)v31, v73);
    v54 = v46;
    v58 = v46(v57, 1, v85);
    v51 = v82;
    v52 = (uint64_t)v81;
    v53 = v80;
    v55 = (uint64_t)v79;
    if (v58 == 1)
    {
      sub_211923EE8(v57, &qword_254AC89F8);
      v56 = 0;
      v50 = 0;
    }
    else
    {
      v56 = *(_QWORD *)(v57 + 40);
      v50 = *(_QWORD *)(v57 + 48);
      swift_bridgeObjectRetain();
      sub_21196F5E4(v57);
    }
  }
  *(_QWORD *)(a9 + 40) = v56;
  *(_QWORD *)(a9 + 48) = v50;
  sub_21192C6B8(v49, v55, &qword_254AC89F8);
  if ((v53 & 1) != 0)
  {
    v61 = v74;
    sub_2119BD854(v55, v74);
    if (v54(v61, 1, v85) == 1)
    {
      sub_211923EE8(v61, &qword_254AC89F8);
      v60 = 0;
      v59 = 1;
    }
    else
    {
      v62 = *(_QWORD *)(v61 + 56);
      v63 = v61;
      v59 = *(_BYTE *)(v61 + 64);
      sub_21196F5E4(v63);
      v60 = v62;
    }
  }
  else
  {
    sub_211923EE8(v55, &qword_254AC89F8);
    v59 = 0;
    v60 = v75;
  }
  *(_QWORD *)(a9 + 56) = v60;
  *(_BYTE *)(a9 + 64) = v59;
  sub_2119BD854(v49, v52);
  if ((v51 & 1) != 0)
  {
    v66 = v76;
    sub_2119BD854(v52, v76);
    if (v54(v66, 1, v85) == 1)
    {
      sub_211923EE8(v66, &qword_254AC89F8);
      v65 = 0;
      v64 = 1;
    }
    else
    {
      v67 = *(_QWORD *)(v66 + 72);
      v68 = v66;
      v64 = *(_BYTE *)(v66 + 80);
      sub_21196F5E4(v68);
      v65 = v67;
    }
  }
  else
  {
    sub_211923EE8(v52, &qword_254AC89F8);
    v64 = 0;
    v65 = v77;
  }
  *(_QWORD *)(a9 + 72) = v65;
  *(_BYTE *)(a9 + 80) = v64;
  v69 = a9 + *(int *)(v85 + 36);
  v70 = sub_211A47208();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 1, 1, v70);
}

uint64_t FMFLabelledLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;

  v2 = v1;
  v4 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v4, v5);
  v47 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for FMFLabelledLocation();
  MEMORY[0x24BDAC7A8](v46, v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACAC20);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119BCAD8();
  sub_211A4836C();
  v50 = *(_OWORD *)v2;
  v49 = 0;
  sub_211958C38(&qword_254AC7C58);
  sub_2119BD89C((unint64_t *)&qword_254AC7C60, &qword_254AC7C58, MEMORY[0x24BEE0D08]);
  v15 = v48;
  sub_211A481E0();
  if (v15)
  {
    v16 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    v17 = v14;
    v18 = v10;
    return v16(v17, v18);
  }
  v45 = v9;
  v20 = *(_QWORD *)(v2 + 24);
  v48 = v11;
  if (v20)
    v21 = *(_QWORD *)(v2 + 16);
  else
    v21 = 0;
  v22 = *(_WORD *)(v2 + 32);
  *(_QWORD *)&v50 = v21;
  *((_QWORD *)&v50 + 1) = v20;
  v49 = 1;
  sub_211A481E0();
  v43 = v2;
  v44 = v10;
  if ((v22 & 0x100) != 0)
    v23 = 0x6D6F74737563;
  else
    v23 = 0x746C7561666564;
  if ((v22 & 0x100) != 0)
    v24 = 0xE600000000000000;
  else
    v24 = 0xE700000000000000;
  sub_21196F5A0(v2, (uint64_t)v45);
  if (!v20 || (v22 & 0xFF00) == 0x200)
  {
    v23 = 0;
    v26 = (uint64_t)v45;
    if (*((_QWORD *)v45 + 3))
    {
      v28 = *((_WORD *)v45 + 16);
      v25 = 0;
      v27 = v44;
      if (v28 != 3)
      {
        v29 = 8 * (char)v28;
        v23 = *(_QWORD *)&aLocal_1[v29];
        v25 = *(_QWORD *)&aPremises_1[v29 + 8];
      }
    }
    else
    {
      v25 = 0;
      v27 = v44;
    }
  }
  else
  {
    v25 = v24;
    v27 = v44;
    v26 = (uint64_t)v45;
  }
  sub_21196F5E4(v26);
  *(_QWORD *)&v50 = v23;
  *((_QWORD *)&v50 + 1) = v25;
  v49 = 2;
  sub_211A481E0();
  swift_bridgeObjectRelease();
  v30 = v43;
  v50 = *(_OWORD *)(v43 + 40);
  v49 = 3;
  sub_211A481E0();
  v31 = *(_BYTE *)(v30 + 64);
  *(_QWORD *)&v50 = *(_QWORD *)(v30 + 56);
  BYTE8(v50) = v31;
  v49 = 4;
  sub_211958C38(&qword_254ACAC18);
  sub_2119BD89C(&qword_254ACAC28, &qword_254ACAC18, MEMORY[0x24BEE13D8]);
  sub_211A481E0();
  v32 = *(_BYTE *)(v30 + 80);
  *(_QWORD *)&v50 = *(_QWORD *)(v30 + 72);
  BYTE8(v50) = v32;
  v49 = 5;
  sub_211A481E0();
  v33 = v47;
  sub_21192C6B8(v30 + *(int *)(v46 + 36), v47, qword_254AC8A78);
  v34 = sub_211A47208();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) != 1)
  {
    sub_211A471D8();
    v37 = v36;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    v38 = v37 * 1000.0;
    v39 = v37 * 1000.0 > -9.22337204e18;
    if (v37 * 1000.0 >= 9.22337204e18)
      v39 = 0;
    v40 = v39 & (v38 == trunc(v38));
    if (v40)
      v41 = (uint64_t)v38;
    else
      v41 = 0;
    *(_QWORD *)&v50 = v41;
    BYTE8(v50) = (v40 & 1) == 0;
    v49 = 6;
    sub_211958C38(&qword_254AC8BA0);
    sub_2119BD89C(&qword_254AC8BA8, &qword_254AC8BA0, MEMORY[0x24BEE4010]);
    sub_211A481E0();
    v16 = *(uint64_t (**)(char *, uint64_t))(v48 + 8);
    v17 = v14;
    v18 = v27;
    return v16(v17, v18);
  }
  sub_211923EE8(v33, qword_254AC8A78);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v14, v27);
}

uint64_t sub_2119BD824@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFLabelledLocation.init(from:)(a1, a2);
}

uint64_t sub_2119BD838(_QWORD *a1)
{
  return FMFLabelledLocation.encode(to:)(a1);
}

uint64_t sub_2119BD854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC89F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119BD89C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = sub_21195E2C0(a2);
    v7 = a3;
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s7FMFCore19FMFLabelledLocationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  double v66;
  char v67;
  double v68;
  char v69;
  double v70;
  char v71;
  double v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;

  v4 = sub_211A47208();
  v90 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v87 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v7, v8);
  v88 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_211958C38(&qword_254AC8B40);
  MEMORY[0x24BDAC7A8](v89, v10);
  v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMFLabelledLocation();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v94 = (char *)&v83 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v93 = (uint64_t)&v83 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (double *)((char *)&v83 - v26);
  v29 = MEMORY[0x24BDAC7A8](v25, v28);
  v31 = (double *)((char *)&v83 - v30);
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)&v83 - v34;
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v39 = (char *)&v83 - v38;
  v41 = MEMORY[0x24BDAC7A8](v37, v40);
  v43 = (char *)&v83 - v42;
  MEMORY[0x24BDAC7A8](v41, v44);
  v47 = (char *)&v83 - v45;
  v48 = a1[1];
  v49 = a2[1];
  v91 = v51;
  v92 = v50;
  if (!v48)
  {
    if (!v49)
    {
LABEL_10:
      v85 = v46;
      v86 = v12;
      sub_21196F5A0((uint64_t)a1, (uint64_t)&v83 - v45);
      sub_21196F5A0((uint64_t)a2, (uint64_t)v43);
      goto LABEL_11;
    }
LABEL_8:
    sub_21196F5A0((uint64_t)a1, (uint64_t)&v83 - v45);
    sub_21196F5A0((uint64_t)a2, (uint64_t)v43);
    goto LABEL_9;
  }
  if (!v49)
    goto LABEL_8;
  if (*a1 == *a2 && v48 == v49)
    goto LABEL_10;
  v85 = v46;
  v86 = v12;
  v52 = sub_211A48258();
  sub_21196F5A0((uint64_t)a1, (uint64_t)v47);
  sub_21196F5A0((uint64_t)a2, (uint64_t)v43);
  if ((v52 & 1) == 0)
  {
LABEL_9:
    sub_21196F5E4((uint64_t)v43);
    sub_21196F5E4((uint64_t)v47);
LABEL_20:
    sub_21196F5A0((uint64_t)a1, (uint64_t)v39);
    sub_21196F5A0((uint64_t)a2, (uint64_t)v35);
    goto LABEL_21;
  }
LABEL_11:
  v84 = v4;
  v53 = *((_QWORD *)v47 + 3);
  v54 = *((_QWORD *)v43 + 3);
  if (!v53)
  {
    swift_bridgeObjectRetain();
    sub_21196F5E4((uint64_t)v43);
    sub_21196F5E4((uint64_t)v47);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    goto LABEL_19;
  }
  if (!v54)
  {
    swift_bridgeObjectRetain_n();
    sub_21196F5E4((uint64_t)v43);
    sub_21196F5E4((uint64_t)v47);
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*((_QWORD *)v47 + 2) == *((_QWORD *)v43 + 2) && v53 == v54)
  {
    swift_bridgeObjectRetain_n();
    sub_21196F5E4((uint64_t)v43);
    sub_21196F5E4((uint64_t)v47);
    swift_bridgeObjectRelease_n();
LABEL_34:
    sub_21196F5A0((uint64_t)a1, (uint64_t)v39);
    sub_21196F5A0((uint64_t)a2, (uint64_t)v35);
    v62 = (uint64_t)v86;
    goto LABEL_35;
  }
  v61 = sub_211A48258();
  swift_bridgeObjectRetain_n();
  sub_21196F5E4((uint64_t)v43);
  sub_21196F5E4((uint64_t)v47);
  swift_bridgeObjectRelease_n();
  sub_21196F5A0((uint64_t)a1, (uint64_t)v39);
  sub_21196F5A0((uint64_t)a2, (uint64_t)v35);
  v62 = (uint64_t)v86;
  if ((v61 & 1) == 0)
  {
LABEL_21:
    sub_21196F5E4((uint64_t)v35);
    sub_21196F5E4((uint64_t)v39);
LABEL_22:
    v56 = v91;
    v55 = v92;
LABEL_23:
    sub_21196F5A0((uint64_t)a1, (uint64_t)v31);
    sub_21196F5A0((uint64_t)a2, (uint64_t)v27);
    goto LABEL_24;
  }
LABEL_35:
  v63 = *((_QWORD *)v39 + 6);
  v64 = *((_QWORD *)v35 + 6);
  if (!v63)
  {
    swift_bridgeObjectRetain();
    sub_21196F5E4((uint64_t)v35);
    sub_21196F5E4((uint64_t)v39);
    v56 = v91;
    v55 = v92;
    if (!v64)
      goto LABEL_42;
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v64)
  {
    swift_bridgeObjectRetain();
    sub_21196F5E4((uint64_t)v35);
    sub_21196F5E4((uint64_t)v39);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (*((_QWORD *)v39 + 5) == *((_QWORD *)v35 + 5) && v63 == v64)
  {
    swift_bridgeObjectRetain();
    sub_21196F5E4((uint64_t)v35);
    sub_21196F5E4((uint64_t)v39);
    swift_bridgeObjectRelease();
    v56 = v91;
    v55 = v92;
LABEL_42:
    sub_21196F5A0((uint64_t)a1, (uint64_t)v31);
    sub_21196F5A0((uint64_t)a2, (uint64_t)v27);
    goto LABEL_45;
  }
  v65 = sub_211A48258();
  swift_bridgeObjectRetain();
  sub_21196F5E4((uint64_t)v35);
  sub_21196F5E4((uint64_t)v39);
  swift_bridgeObjectRelease();
  sub_21196F5A0((uint64_t)a1, (uint64_t)v31);
  sub_21196F5A0((uint64_t)a2, (uint64_t)v27);
  v56 = v91;
  v55 = v92;
  if ((v65 & 1) == 0)
  {
LABEL_24:
    sub_21196F5E4((uint64_t)v27);
    sub_21196F5E4((uint64_t)v31);
    v58 = v93;
    v57 = (uint64_t)v94;
    goto LABEL_25;
  }
LABEL_45:
  v66 = v31[7];
  v67 = *((_BYTE *)v31 + 64);
  sub_21196F5E4((uint64_t)v31);
  v68 = v27[7];
  v69 = *((_BYTE *)v27 + 64);
  sub_21196F5E4((uint64_t)v27);
  if ((v67 & 1) != 0)
  {
    v58 = v93;
    v57 = (uint64_t)v94;
    if ((v69 & 1) != 0)
    {
      sub_21196F5A0((uint64_t)a1, v93);
      sub_21196F5A0((uint64_t)a2, v57);
      goto LABEL_50;
    }
    goto LABEL_25;
  }
  v58 = v93;
  v57 = (uint64_t)v94;
  if ((v69 & 1) != 0)
  {
LABEL_25:
    sub_21196F5A0((uint64_t)a1, v58);
    sub_21196F5A0((uint64_t)a2, v57);
LABEL_26:
    sub_21196F5E4(v57);
    sub_21196F5E4(v58);
    goto LABEL_27;
  }
  sub_21196F5A0((uint64_t)a1, v93);
  sub_21196F5A0((uint64_t)a2, v57);
  if (v66 != v68)
    goto LABEL_26;
LABEL_50:
  v70 = *(double *)(v58 + 72);
  v71 = *(_BYTE *)(v58 + 80);
  sub_21196F5E4(v58);
  v72 = *(double *)(v57 + 72);
  v73 = *(_BYTE *)(v57 + 80);
  sub_21196F5E4(v57);
  if ((v71 & 1) == 0)
  {
    v74 = v84;
    if ((v73 & 1) == 0)
    {
      sub_21196F5A0((uint64_t)a1, v55);
      sub_21196F5A0((uint64_t)a2, v56);
      if (v70 == v72)
        goto LABEL_55;
LABEL_28:
      sub_21196F5E4(v56);
      sub_21196F5E4(v55);
      goto LABEL_29;
    }
LABEL_27:
    sub_21196F5A0((uint64_t)a1, v55);
    sub_21196F5A0((uint64_t)a2, v56);
    goto LABEL_28;
  }
  v74 = v84;
  if ((v73 & 1) == 0)
    goto LABEL_27;
  sub_21196F5A0((uint64_t)a1, v55);
  sub_21196F5A0((uint64_t)a2, v56);
LABEL_55:
  v75 = *(int *)(v85 + 36);
  v76 = v56 + v75;
  v77 = v62 + *(int *)(v89 + 48);
  sub_21192C6B8(v55 + v75, v62, qword_254AC8A78);
  sub_21192C6B8(v76, v77, qword_254AC8A78);
  v78 = v90;
  v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  if (v79(v62, 1, v74) == 1)
  {
    sub_21196F5E4(v56);
    sub_21196F5E4(v55);
    if (v79(v77, 1, v74) == 1)
    {
      sub_211923EE8(v62, qword_254AC8A78);
      v59 = 1;
      return v59 & 1;
    }
  }
  else
  {
    v80 = v88;
    sub_21192C6B8(v62, v88, qword_254AC8A78);
    if (v79(v77, 1, v74) != 1)
    {
      v81 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v87, v77, v74);
      sub_2119BEAF0();
      v59 = sub_211A478E0();
      v82 = *(void (**)(char *, uint64_t))(v78 + 8);
      v82(v81, v74);
      sub_21196F5E4(v56);
      sub_21196F5E4(v55);
      v82((char *)v80, v74);
      sub_211923EE8(v62, qword_254AC8A78);
      return v59 & 1;
    }
    sub_21196F5E4(v56);
    sub_21196F5E4(v55);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v80, v74);
  }
  sub_211923EE8(v62, &qword_254AC8B40);
LABEL_29:
  v59 = 0;
  return v59 & 1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FMFLabelledLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v8 = *(int *)(a3 + 36);
    v9 = (char *)a2 + v8;
    v10 = (void *)(a1 + v8);
    *(_QWORD *)(a1 + 72) = a2[9];
    v11 = sub_211A47208();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      v14 = sub_211958C38(qword_254AC8A78);
      memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v10, v9, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for FMFLabelledLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(int *)(a3 + 36);
  v8 = (const void *)(a2 + v7);
  v9 = (void *)(a1 + v7);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = sub_211A47208();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    v13 = sub_211958C38(qword_254AC8A78);
    memcpy(v9, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v9, v8, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(int *)(a3 + 36);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_211958C38(qword_254AC8A78);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t initializeWithTake for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v5 = *(int *)(a3 + 36);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = sub_211A47208();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = sub_211958C38(qword_254AC8A78);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for FMFLabelledLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_211A47208();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_211958C38(qword_254AC8A78);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_2119BE800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t sub_2119BE88C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_211958C38(qword_254AC8A78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFLabelledLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2119BE950 + 4 * byte_211A4DA74[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2119BE984 + 4 * byte_211A4DA6F[v4]))();
}

uint64_t sub_2119BE984(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119BE98C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119BE994);
  return result;
}

uint64_t sub_2119BE9A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119BE9A8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2119BE9AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119BE9B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLabelledLocation.CodingKeys()
{
  return &type metadata for FMFLabelledLocation.CodingKeys;
}

unint64_t sub_2119BE9D4()
{
  unint64_t result;

  result = qword_254ACACD0;
  if (!qword_254ACACD0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DC84, &type metadata for FMFLabelledLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACACD0);
  }
  return result;
}

unint64_t sub_2119BEA1C()
{
  unint64_t result;

  result = qword_254ACACD8;
  if (!qword_254ACACD8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DBBC, &type metadata for FMFLabelledLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACACD8);
  }
  return result;
}

unint64_t sub_2119BEA64()
{
  unint64_t result;

  result = qword_254ACACE0;
  if (!qword_254ACACE0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DBE4, &type metadata for FMFLabelledLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACACE0);
  }
  return result;
}

uint64_t sub_2119BEAA8()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_2119BEAF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC8B48;
  if (!qword_254AC8B48)
  {
    v1 = sub_211A47208();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BDCE958], v1);
    atomic_store(result, (unint64_t *)&qword_254AC8B48);
  }
  return result;
}

uint64_t FMFRemoveLocationAlertAction.__allocating_init(locationAlert:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  v3 = sub_2119BEDDC(a1, v2);
  swift_release();
  return v3;
}

uint64_t FMFRemoveLocationAlertAction.init(locationAlert:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2119BEDDC(a1, v1);
  swift_release();
  return v2;
}

uint64_t sub_2119BEBB4()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47F70();
  sub_211A479B8();
  type metadata accessor for FMFLocationAlert();
  sub_211A48054();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFRemoveLocationAlertAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFRemoveLocationAlertAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119BED78()
{
  uint64_t v0;

  return sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
}

uint64_t FMFRemoveLocationAlertAction.deinit()
{
  uint64_t v0;

  sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
  return v0;
}

uint64_t FMFRemoveLocationAlertAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21197403C(v0 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
  return swift_deallocClassInstance();
}

uint64_t sub_2119BEDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[14];
  unsigned __int8 v24;
  unsigned __int8 v25;
  _BYTE v26[304];
  _OWORD v27[19];

  v4 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for FMFLocationAlert();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = &v23[-v18];
  sub_211974170(a1, (uint64_t)v16);
  sub_21196F528(v27);
  sub_21196F558((uint64_t)v27, (uint64_t)v26);
  v25 = 4;
  v20 = type metadata accessor for FMFSchedule();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
  v24 = 3;
  v21 = sub_211A47208();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
  swift_retain();
  FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)((uint64_t)v16, 0, 0, 1, (uint64_t)v26, 0, 0, &v25, (uint64_t)v19, 0, 2u, (uint64_t)v11, 0, 0, 0, 0, 0, 0, &v24,
    (uint64_t)v7);
  sub_21197403C(a1);
  sub_21197423C((uint64_t)v19, a2 + OBJC_IVAR____TtC7FMFCore28FMFRemoveLocationAlertAction_locationAlert);
  *(_BYTE *)(a2 + 16) = 1;
  return a2;
}

uint64_t sub_2119BEFE0()
{
  return type metadata accessor for FMFRemoveLocationAlertAction();
}

uint64_t type metadata accessor for FMFRemoveLocationAlertAction()
{
  uint64_t result;

  result = qword_254ACAD10;
  if (!qword_254ACAD10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for FMFRemoveLocationAlertAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFRemoveLocationAlertAction.__allocating_init(locationAlert:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FMFConfig.maxFollowers.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FMFConfig.maxCharLimitForInviteText.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FMFConfig.sessionLifeSpan.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double FMFConfig.distanceForNearbyInMeters.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t FMFConfig.myLocationMaxIntervalMS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FMFConfig.maxInvites.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FMFConfig.allowMigrationV2.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FMFConfig.maxLabels.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t FMFConfig.maxMyLabelledLocations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t FMFConfig.maxWaitTimeForRegisterMS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t FMFConfig.myLocationMinIntervalMS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t FMFConfig.locationShareExpiryDefaultInSec.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t FMFConfig.barONOverride.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FMFConfig.locationTTL.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t FMFConfig.accuracyThresholdForLabeling.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t FMFConfig.deepLocateMinGapMs.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t FMFConfig.maxNotifyOtherFences.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t FMFConfig.maxNotifyMeFences.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t FMFConfig.userLocateWaitIntervalInMS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t FMFConfig.maxLocatingIntervalInMS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t FMFConfig.maxFriends.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t FMFConfig.minAccuracyForMyLocation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t FMFConfig.maxCharLimitForLabelName.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t FMFConfig.familyPhotoCheckIntervalInSecs.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t FMFConfig.maxPeopleInNotifyOtherFence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t FMFConfig.barLocEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 200);
}

uint64_t FMFConfig.allowMigration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 201);
}

uint64_t FMFConfig.maxFriendsLabelledLocations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 208);
}

uint64_t FMFConfig.maxTriesToRegisterDevice.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

uint64_t FMFConfig.maxPeopleInOfferLocation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

uint64_t FMFConfig.notifyMeFenceStaleAfterMinutes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 232);
}

uint64_t sub_2119BF130(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_21195EA64(*a1);
  v5 = v4;
  if (v3 == sub_21195EA64(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2119BF1B8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_21195EA64(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119BF218()
{
  unsigned __int8 *v0;

  sub_21195EA64(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119BF258()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_21195EA64(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119BF2B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119BFE74();
  *a1 = result;
  return result;
}

uint64_t sub_2119BF2E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21195EA64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119BF308@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119BFE74();
  *a1 = result;
  return result;
}

void sub_2119BF32C(_BYTE *a1@<X8>)
{
  *a1 = 31;
}

uint64_t sub_2119BF338()
{
  sub_211926030();
  return sub_211A48390();
}

uint64_t sub_2119BF360()
{
  sub_211926030();
  return sub_211A4839C();
}

uint64_t FMFConfig.debugDescription.getter()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A47C28();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0;
}

uint64_t getEnumTagSinglePayload for FMFConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE2)
    goto LABEL_17;
  if (a2 + 30 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 30) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 30;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 30;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 30;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v8 = v6 - 31;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_2119BFE30()
{
  unint64_t result;

  result = qword_254ACADE0;
  if (!qword_254ACADE0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4DFA4, &type metadata for FMFConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACADE0);
  }
  return result;
}

uint64_t sub_2119BFE74()
{
  unint64_t v0;

  v0 = sub_211A4827C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1F)
    return 31;
  else
    return v0;
}

uint64_t type metadata accessor for FMFNotNowRequest()
{
  uint64_t result;

  result = qword_254ACADF8;
  if (!qword_254ACADF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119BFF00()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2119BFF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v1 = *(_QWORD *)(v0 + qword_254ADC6B0);
  v2 = *(_QWORD *)(v0 + qword_254ADC6B0 + 8);
  v4[3] = MEMORY[0x24BEE0D00];
  v4[0] = v1;
  v4[1] = v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v4, 25705, 0xE200000000000000);
  return swift_endAccess();
}

uint64_t sub_2119BFFCC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119BFFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2119C00A8()
{
  sub_2119BFFE0();
  return swift_deallocClassInstance();
}

uint64_t sub_2119C00C8()
{
  return type metadata accessor for FMFNotNowRequest();
}

ValueMetadata *type metadata accessor for FMFAnalytics()
{
  return &type metadata for FMFAnalytics;
}

uint64_t FMFSetFavoriteAction.__allocating_init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  sub_2119C01B0(a1, v6 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  v7 = v6 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_order;
  *(_QWORD *)v7 = a2;
  *(_BYTE *)(v7 + 8) = a3 & 1;
  *(_BYTE *)(v6 + 16) = 0;
  return v6;
}

uint64_t FMFSetFavoriteAction.init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;

  sub_2119C01B0(a1, v3 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  v6 = v3 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_order;
  *(_QWORD *)v6 = a2;
  *(_BYTE *)(v6 + 8) = a3 & 1;
  *(_BYTE *)(v3 + 16) = 0;
  return v3;
}

uint64_t sub_2119C01B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFFriend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119C01F4()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  type metadata accessor for FMFFriend();
  sub_211A48054();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211958C38(&qword_254AC8358);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFSetFavoriteAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFSetFavoriteAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119C043C()
{
  uint64_t v0;

  return sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
}

uint64_t FMFSetFavoriteAction.deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  return v0;
}

uint64_t FMFSetFavoriteAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFSetFavoriteAction_friend);
  return swift_deallocClassInstance();
}

uint64_t sub_2119C04A0()
{
  return type metadata accessor for FMFSetFavoriteAction();
}

uint64_t type metadata accessor for FMFSetFavoriteAction()
{
  uint64_t result;

  result = qword_254ACAE70;
  if (!qword_254ACAE70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119C04E4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFFriend();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFSetFavoriteAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFSetFavoriteAction.__allocating_init(friend:order:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 144))(a1, a2, a3 & 1);
}

_QWORD *sub_2119C0574(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = sub_211958C38(&qword_254AC8C98);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v52 - v8;
  v56 = *a1;
  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v59 = sub_211A46FE0();
  v14 = v13;

  v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v57 = sub_211A46FE0();
  v58 = v16;

  v17 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v18 = sub_211A46FE0();
  v20 = v19;

  v21 = sub_211A4713C();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v55 = v9;
  v22(v9, 1, 1, v21);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE04788]), sel_init);
  objc_msgSend(v23, sel_refresh);
  LODWORD(v9) = objc_msgSend(v23, sel_airplaneMode);

  if ((_DWORD)v9)
  {
    v54 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_254AC7B80 != -1)
      swift_once();
    v52 = v6;
    v24 = sub_211A47748();
    sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
    v25 = sub_211A47724();
    v26 = sub_211A47D30();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_21190D000, v25, v26, "FMNetworkUtil: Airplane mode is enabled", v27, 2u);
      MEMORY[0x212BE48A0](v27, -1, -1);
    }

    v59 = sub_2119FF25C();
    v53 = v28;
    v29 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    v18 = sub_211A46FE0();
    v20 = v30;

    v31 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    v32 = sub_211A46FE0();
    v34 = v33;

    v6 = v52;
  }
  else
  {
    if ((sub_211969110() & 1) != 0 || (v35 = (void *)sub_211A478EC(), v36 = MGGetBoolAnswer(), v35, !v36))
    {
      v32 = 0;
      v34 = 0;
      v48 = (uint64_t)v55;
      v22(v6, 1, 1, v21);
      goto LABEL_16;
    }
    v54 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_254AC7B80 != -1)
      swift_once();
    v37 = sub_211A47748();
    sub_21194F3E0(v37, (uint64_t)qword_254ADC7E8);
    v38 = sub_211A47724();
    v39 = sub_211A47D30();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_21190D000, v38, v39, "FMNetworkUtil: Cellular is disabled", v40, 2u);
      MEMORY[0x212BE48A0](v40, -1, -1);
    }

    v41 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    v59 = sub_211A46FE0();
    v53 = v42;

    v57 = sub_2119FF25C();
    v58 = v43;
    v44 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    v18 = sub_211A46FE0();
    v20 = v45;

    v46 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
    v32 = sub_211A46FE0();
    v34 = v47;

  }
  sub_211A47130();
  v48 = (uint64_t)v55;
  sub_2119132F0((uint64_t)v55);
  sub_211964BF4((uint64_t)v6, v48);
  v14 = v53;
  v54(v6, 1, 1, v21);
LABEL_16:
  type metadata accessor for FMFAlert();
  v49 = (_QWORD *)swift_allocObject();
  v49[3] = 0;
  swift_unknownObjectWeakInit();
  v49[4] = 0;
  v49[5] = 0;
  v49[6] = v59;
  v49[7] = v14;
  v50 = v58;
  v49[8] = v57;
  v49[9] = v50;
  v49[10] = v18;
  v49[11] = v20;
  v49[12] = v32;
  v49[13] = v34;
  sub_211964BF4(v48, (uint64_t)v49 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
  sub_211964BF4((uint64_t)v6, (uint64_t)v49 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
  *((_BYTE *)v49 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v56;
  return v49;
}

void sub_2119C0CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[21];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 32);
  v9[17] = *(_QWORD *)(v2 - 8);
  v3 = (_QWORD *)MEMORY[0x24BDAC7A8](a1, a2);
  v9[16] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[12] = v3;
  v5 = v3[2];
  v7 = v3[5];
  v6 = v3[6];
  v10 = v3[3];
  v11 = v6;
  v8 = v3[7];
  v12 = v5;
  v13 = v10;
  v14 = v2;
  v15 = v7;
  v16 = v6;
  v17 = v8;
  v9[20] = v8;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
}

void sub_2119C0D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = sub_211A48060();
  *(_QWORD *)(v9 - 208) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 - 200) = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  *(_QWORD *)(v9 - 232) = (char *)&a9 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v15 = sub_211A48060();
  *(_QWORD *)(v9 - 248) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  *(_QWORD *)(v9 - 344) = (char *)&a9 - v17;
  v18 = sub_211A47B44();
  *(_QWORD *)(v9 - 296) = v18;
  v19 = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v18);
  v21 = type metadata accessor for AsyncSyncSequence(255, v18, v19, v20);
  *(_QWORD *)(v9 - 304) = v21;
  v22 = MEMORY[0x212BE47C8](MEMORY[0x24BEE6F08], v15);
  *(_QWORD *)(v9 - 312) = v22;
  v23 = MEMORY[0x212BE47C8](&unk_211A4E868, v21);
  *(_QWORD *)(v9 - 320) = v23;
  *(_QWORD *)(v9 - 144) = v15;
  *(_QWORD *)(v9 - 136) = v21;
  *(_QWORD *)(v9 - 128) = v22;
  *(_QWORD *)(v9 - 120) = v23;
  type metadata accessor for AsyncChain2Sequence();
}

void sub_2119C0EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 - 240) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v10 - 336) = (char *)&a9 - v12;
  v13 = MEMORY[0x212BE47C8](&unk_211A4E428, a1);
  *(_QWORD *)(v10 - 280) = v13;
  v14 = v9;
  v15 = *(_QWORD *)(v10 - 200);
  v16 = MEMORY[0x212BE47C8](v14, v15);
  *(_QWORD *)(v10 - 288) = v16;
  *(_QWORD *)(v10 - 144) = a1;
  *(_QWORD *)(v10 - 136) = v15;
  *(_QWORD *)(v10 - 128) = v13;
  *(_QWORD *)(v10 - 120) = v16;
  type metadata accessor for AsyncMerge2Sequence();
}

void sub_2119C0F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v16 - 272) = a1;
  *(_QWORD *)(v16 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v16 - 328) = (char *)&a9 - v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v9, *(_QWORD *)(v16 - 168), v14);
  v18 = (_QWORD *)swift_allocObject();
  v19 = *(_QWORD *)(v16 - 184);
  v18[2] = v14;
  v18[3] = v19;
  v18[4] = v10;
  v18[5] = v13;
  v20 = v13;
  v21 = *(_QWORD *)(v16 - 192);
  v18[6] = *(_QWORD *)(v16 - 176);
  v18[7] = v21;
  v22 = *(_QWORD *)(v16 - 344);
  *(_QWORD *)(v16 - 352) = v20;
  sub_211A47C10();
  swift_release();
  sub_211A48228();
  swift_allocObject();
  v23 = sub_211A47ACC();
  v25 = v24;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v25, 1, 2, AssociatedTypeWitness);
  sub_211A47B44();
  *(_QWORD *)(v16 - 152) = v23;
  sub_2119C1520(*(_QWORD *)(v16 - 296), v16 - 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 - 152) = *(_QWORD *)(v16 - 144);
  v27 = *(_QWORD *)(v16 - 336);
  sub_2119CA81C(v22, v16 - 152, v15, *(_QWORD *)(v16 - 304), *(_QWORD *)(v16 - 312), *(_QWORD *)(v16 - 320), (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncChain2Sequence, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 248) + 8))(v22, v15);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v16 - 216) + 16))(*(_QWORD *)(v16 - 224), *(_QWORD *)(v16 - 168) + *(int *)(*(_QWORD *)(v16 - 256) + 68), v10);
  v28 = (_QWORD *)swift_allocObject();
  v29 = *(_QWORD *)(v16 - 192);
  v30 = *(_QWORD *)(v16 - 184);
  v28[2] = v14;
  v28[3] = v30;
  v31 = *(_QWORD *)(v16 - 352);
  v28[4] = v10;
  v28[5] = v31;
  v28[6] = *(_QWORD *)(v16 - 176);
  v28[7] = v29;
  v32 = *(_QWORD *)(v16 - 232);
  sub_211A47C10();
  swift_release();
  v33 = *(_QWORD *)(v16 - 200);
  sub_2119CA81C(v27, v32, v11, v33, *(_QWORD *)(v16 - 280), *(_QWORD *)(v16 - 288), (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncMerge2Sequence, *(_QWORD *)(v16 - 328));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 208) + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 240) + 8))(v27, v11);
  sub_2119C65B4();
}

uint64_t sub_2119C11F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 264) + 8))(v0, v1);
  return *(_QWORD *)(v3 + *(int *)(v2 + 72));
}

uint64_t sub_2119C124C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2119C1264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v5 = v2;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1, v5);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v22 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  (*(void (**)(char *))(v18 + 16))((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_2119C1400(a1, (uint64_t)v15, a2);
  if (v3)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v11, v15, v7);
    if (sub_211A48234())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v21, v11, v7);
    }
  }
  return result;
}

uint64_t sub_2119C13C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2119C1400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

void sub_2119C1494(void (*a1)(void), int a2, os_unfair_lock_t lock)
{
  os_unfair_lock_lock(lock);
  a1();
  os_unfair_lock_unlock(lock);
}

uint64_t sub_2119C14F4()
{
  MEMORY[0x212BE3DC0]();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState.LockedBuffer);
}

uint64_t sub_2119C1520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_2119C15A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_2119C15B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v8(a2, 1, 1, AssociatedTypeWitness);
  v6 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_2119C167C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(_QWORD *)(a2 + 24);
  v3[5] = *(_QWORD *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  v4 = sub_211A47E14();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119C1710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if ((sub_211A47BBC() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 48);
    if (v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 8) + 56))(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 48));
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_211A47E20();
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v13 = *(_QWORD *)(v0 + 48);
        v14 = *(_QWORD *)(v0 + 16);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v14, *(_QWORD *)(v0 + 72), v13);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v13);
        goto LABEL_7;
      }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v9, 1, 1, v7);
LABEL_7:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119C18D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2119636C4;
  return sub_2119C167C(a1, a2);
}

uint64_t sub_2119C1934()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2119C19B8;
  return sub_211A47B74();
}

uint64_t sub_2119C19B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119C1A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
  sub_211A47A54();
  return sub_2119C15B8((uint64_t)v12, a3);
}

uint64_t sub_2119C1AF8(uint64_t a1, uint64_t a2)
{
  return sub_211963694(a1, a2, (void (*)(void))sub_2119C1A08);
}

void sub_2119C1B04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;

  v10 = sub_211A47E14();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = a6 + *(int *)(TupleTypeMetadata3 + 48);
  v13 = a6 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v12, a2, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v13, a3, v10);
  type metadata accessor for MergeStateMachine.State();
}

void sub_2119C1BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  swift_storeEnumTagMultiPayload();
  v4 = v0;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v0, 1, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  if (v5 == 1)
    type metadata accessor for MergeStateMachine();
  type metadata accessor for MergeStateMachine();
}

void sub_2119C1CAC()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C1CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C1D44 + *((int *)qword_2119C1E70 + EnumCaseMultiPayload)))();
}

uint64_t sub_2119C1D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata3;
  uint64_t v5;

  v3 = sub_211A47E14();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v5 = v2 + *(int *)(TupleTypeMetadata3 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + *(int *)(TupleTypeMetadata3 + 64), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v2, v0);
  return 0;
}

void sub_2119C1E84()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C1EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = &v23[-v12];
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v5 - 136) = v4;
  v14(&v23[-v12], v4, a1);
  if (swift_getEnumCaseMultiPayload())
    __asm { BR              X10 }
  v16 = sub_211A47E14();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v5 - 168) = &v13[*(int *)(TupleTypeMetadata3 + 48)];
  v18 = &v13[*(int *)(TupleTypeMetadata3 + 64)];
  swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v5 - 144);
  swift_retain();
  v20 = sub_211A4770C();
  *v10 = v19;
  v10[1] = v20;
  v21 = MEMORY[0x24BEE4AF8];
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v21;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD, _QWORD *, uint64_t))(v7 + 40))(*(_QWORD *)(v5 - 136), v10, a1);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v18, v16);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(*(_QWORD *)(v5 - 168), v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v13, v2);
}

void sub_2119C2080()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __break(1u);
}

void sub_2119C20A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 8);
  swift_release();

  __break(1u);
  JUMPOUT(0x2119C20B4);
}

void sub_2119C20C8()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C2108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C2160 + *((int *)qword_2119C22D8 + EnumCaseMultiPayload)))();
}

uint64_t sub_2119C2170()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t);
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;

  v6 = *v3;
  v5 = v3[1];
  v7 = (_QWORD *)v3[2];
  if (v3[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v3[3];
    v10 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
    v10(v1, v2);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_21190FD60(0, v7[2] + 1, 1, v7);
    v11 = v7[2];
    v12 = v7[3];
    v13 = v11 + 1;
    if (v11 >= v12 >> 1)
    {
      v14 = v7;
      v15 = v7[2];
      v16 = sub_21190FD60((_QWORD *)(v12 > 1), v11 + 1, 1, v14);
      v11 = v15;
      v7 = v16;
    }
    v7[2] = v13;
    v7[v11 + 4] = v0;
    v10(v1, v2);
    *v1 = v6;
    v1[1] = v5;
    v1[2] = v7;
    v1[3] = v9;
    v1[4] = 0;
    swift_storeEnumTagMultiPayload();
    return 0;
  }
  return v0;
}

void sub_2119C22EC()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C2348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C23A0 + *((int *)qword_2119C26A8 + EnumCaseMultiPayload)))();
}

uint64_t sub_2119C23B0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  char *v16;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t);
  uint64_t v20;

  *(_QWORD *)(v6 - 168) = v2;
  v7 = *v1;
  v8 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  if (v11)
  {
    *(_QWORD *)(v6 - 184) = v7;
    *(_QWORD *)(v6 - 176) = v10;
    *(_QWORD *)(v6 - 128) = v8;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v13 = sub_211A47718();
    MEMORY[0x212BE47C8](MEMORY[0x24BE18D68], v13);
    if ((sub_211A47CD0() & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x2119C26A0);
    }
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v3, v4);
    *v3 = *(_QWORD *)(v6 - 184);
    v3[1] = v8;
    v14 = *(_QWORD *)(v6 - 176);
    v3[2] = v9;
    v3[3] = v14;
    v3[4] = 0;
    swift_storeEnumTagMultiPayload();
    sub_211A47E14();
    sub_21195E2C0(&qword_254ACC360);
    sub_211A47BD4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v16 = (char *)v0 + *(int *)(TupleTypeMetadata2 + 48);
    *v0 = v11;
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v16, *(_QWORD *)(v6 - 168), AssociatedTypeWitness);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v0, 0, 1, TupleTypeMetadata2);
  }
  else
  {
    *(_QWORD *)(v6 - 128) = v8;
    v19 = *(void (**)(_QWORD *, uint64_t))(v5 + 8);
    v19(v3, v4);
    swift_storeEnumTagMultiPayload();
    swift_getAssociatedTypeWitness();
    sub_211A47718();
    sub_211A476E8();
    v19(v3, v4);
    v20 = *(_QWORD *)(v6 - 128);
    *v3 = v7;
    v3[1] = v20;
    v3[2] = v9;
    v3[3] = v10;
    v3[4] = 0;
    swift_storeEnumTagMultiPayload();
    sub_211A47E14();
    sub_21195E2C0(&qword_254ACC360);
    sub_211A47BD4();
    v18 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v0, 1, 1, v18);
  }
}

void sub_2119C26BC()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C2714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(unint64_t))((char *)&loc_2119C2778 + dword_2119C293C[EnumCaseMultiPayload]))(0x8000000000000000);
}

uint64_t sub_2119C278C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *v0;
  v7 = v0[1];
  v8 = v0[2];
  v9 = v0[3];
  v10 = v0[4];
  if (v10)
  {
    *(_QWORD *)(v5 - 168) = v10;
    *(_QWORD *)(v5 - 128) = v7;
    swift_getAssociatedTypeWitness();
    v11 = sub_211A47718();
    MEMORY[0x212BE47C8](MEMORY[0x24BE18D68], v11);
    if ((sub_211A47CD0() & 1) != 0)
    {
      v12 = v9 + 1;
      if (!__OFADD__(v9, 1))
      {
        if (v12 == *(_QWORD *)((char *)v1 + *(int *)(v3 + 68)))
        {
          swift_release();
          (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
          swift_storeEnumTagMultiPayload();
          return *(_QWORD *)(v5 - 168) | 0x4000000000000000;
        }
        (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
        *v1 = v6;
        v1[1] = v7;
        v1[2] = v8;
        v1[3] = v12;
        v1[4] = *(_QWORD *)(v5 - 168);
        swift_storeEnumTagMultiPayload();
        return 0x8000000000000000;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    JUMPOUT(0x2119C2934);
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
    goto LABEL_13;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
  *v1 = v6;
  v1[1] = v7;
  v1[2] = v8;
  v1[3] = v14;
  v1[4] = 0;
  swift_storeEnumTagMultiPayload();
  if (v14 == *(_QWORD *)((char *)v1 + *(int *)(v3 + 68)))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return v6;
  }
  return 0x8000000000000000;
}

void sub_2119C2950()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C29A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C2A08 + *((int *)qword_2119C2B60 + EnumCaseMultiPayload)))();
}

uint64_t sub_2119C2A20()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;

  v7 = *v3;
  v6 = v3[1];
  v8 = v3[4];
  if (v8)
  {
    *(_QWORD *)(v5 - 128) = v6;
    swift_getAssociatedTypeWitness();
    v9 = sub_211A47718();
    MEMORY[0x212BE47C8](MEMORY[0x24BE18D68], v9);
    v10 = sub_211A47CD0();
    swift_release();
    if ((v10 & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x2119C2B58);
    }
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
    swift_storeEnumTagMultiPayload();
    v11 = v0;
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
    *v1 = v6;
    v1[1] = v0;
    swift_storeEnumTagMultiPayload();
    v12 = v0;
    return v7;
  }
  return v8;
}

void sub_2119C2B74()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C2BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C2C0C + *((int *)qword_2119C2D80 + EnumCaseMultiPayload)))();
}

unint64_t sub_2119C2C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_211A47E14();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = v4 + *(int *)(TupleTypeMetadata3 + 48);
  v9 = v4 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v8, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4, v2);
  return 0x8000000000000000;
}

void sub_2119C2D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2119C2D0CLL);
}

void sub_2119C2D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  v0 = sub_211A47E14();
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  MEMORY[0x24BDAC7A8](v6, v7);
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C2EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_2119C2F10 + *((int *)qword_2119C3360 + EnumCaseMultiPayload)))();
}

void sub_2119C2F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v1 - 184);
  v3 = sub_211A47E14();
  v4 = *(_QWORD *)(v1 - 160);
  v5 = *(_QWORD *)(v1 - 192);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v7 = v0 + *(int *)(TupleTypeMetadata3 + 48);
  v8 = v0 + *(int *)(TupleTypeMetadata3 + 64);
  v9 = *(_QWORD *)(v1 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v9, v0, v4);
  v10 = swift_getTupleTypeMetadata3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v9 + *(int *)(v10 + 48), v7, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v9 + *(int *)(v10 + 64), v8, v3);
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v5;
  v11 = *(_QWORD *)(v1 - 152);
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v11;
  v12 = *(_QWORD *)(v1 - 168);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v1 - 176);
  *(_QWORD *)(v1 - 88) = v12;
  type metadata accessor for MergeStateMachine.NextAction();
}

uint64_t sub_2119C3004()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_2119C3374()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_2119C33B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[80];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (uint64_t *)&v14[-v6];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v5 + 16))(&v14[-v6], v2, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
    __asm { BR              X10 }
  v10 = *v7;
  v9 = v7[1];
  v11 = v7[2];
  if (v7[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x2119C3544);
  }
  v12 = v7[3];
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v2, a1);
  *v2 = v10;
  v2[1] = v9;
  v2[2] = MEMORY[0x24BEE4AF8];
  v2[3] = v12;
  v2[4] = v3;
  swift_storeEnumTagMultiPayload();
  return v11;
}

void sub_2119C3558()
{
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_2119C3590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v2;
}

void sub_2119C35B8()
{
  sub_2119C3558();
}

uint64_t sub_2119C35C4()
{
  return swift_deallocClassInstance();
}

void sub_2119C35DC()
{
  type metadata accessor for MergeStateMachine.IteratorDeinitializedAction();
}

void sub_2119C3774()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_2119C37D0(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t sub_2119C37EC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_2119C380C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  sub_211A47E14();
  *v1 = v0;
  v1[1] = sub_2119C38AC;
  return sub_211A48264();
}

uint64_t sub_2119C38AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119C3918()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119C3924(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[20] = a1;
  v2[21] = a2;
  v3 = *(_QWORD **)a2;
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v2[22] = v4;
  v5 = v3[10];
  v2[23] = v5;
  v2[24] = swift_getAssociatedTypeWitness();
  sub_21195E2C0(&qword_254ACC360);
  v6 = sub_211A48354();
  v2[25] = v6;
  v2[26] = *(_QWORD *)(v6 - 8);
  v2[27] = swift_task_alloc();
  v7 = v3[12];
  v2[28] = v7;
  v8 = sub_211A47E14();
  v2[29] = v8;
  v2[30] = *(_QWORD *)(v8 - 8);
  v2[31] = swift_task_alloc();
  v9 = v3[11];
  v2[32] = v9;
  v2[33] = *(_QWORD *)(v9 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = *(_QWORD *)(v5 - 8);
  v2[36] = swift_task_alloc();
  v10 = v3[14];
  v2[37] = v10;
  v11 = v3[15];
  v2[2] = v5;
  v2[38] = v11;
  v2[3] = v9;
  v2[4] = v7;
  v2[5] = v4;
  v2[6] = v10;
  v2[7] = v11;
  type metadata accessor for MergeStateMachine.NextAction();
}

uint64_t sub_2119C3A64(uint64_t a1)
{
  _QWORD *v1;

  v1[39] = a1;
  v1[40] = *(_QWORD *)(a1 - 8);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

void sub_2119C3ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_OWORD *)(v0 + 296);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v0 + 168) + 16));
  swift_beginAccess();
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  *(_OWORD *)(v0 + 96) = v5;
  type metadata accessor for MergeStateMachine();
}

void sub_2119C3B54()
{
  sub_2119C2D94();
}

uint64_t sub_2119C3B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;

  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a18 + 16))(v18, v20, v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_2119C3BA8 + 4 * byte_211A4E0F0[EnumCaseMultiPayload]))();
}

void sub_2119C3BA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata3;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v0[41];
  v3 = v0[35];
  v4 = v0[36];
  v12 = v0[33];
  v13 = v0[34];
  v5 = v1;
  v6 = v0[32];
  v7 = v0[29];
  v14 = v0[30];
  v15 = v0[31];
  v8 = v0[23];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v10 = v2 + *(int *)(TupleTypeMetadata3 + 48);
  v11 = v2 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v11, v7);
  swift_beginAccess();
  sub_2119C42DC(v5, v4, v13, v15);
}

uint64_t sub_2119C3C80(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_unfair_lock_t lock, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  _QWORD *v31;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_endAccess();
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254ACB220 + dword_254ACB220);
  v31 = (_QWORD *)swift_task_alloc();
  v30[43] = v31;
  sub_211A47E14();
  *v31 = v30;
  v31[1] = sub_2119C3F3C;
  return v33(v30[20], 0, 0, (uint64_t)sub_2119CB7E0, v30[21]);
}

uint64_t sub_2119C3F3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119C3FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119C4080()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119C40E4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119C4170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119C4244()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119C42DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v50 = a4;
  v46 = a2;
  v47 = a3;
  v52 = a1;
  v5 = *(_QWORD **)v4;
  v55 = *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = sub_211A47E14();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  v49 = *(_QWORD *)(v53 + 64);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v41 - v9;
  v45 = (char *)&v41 - v9;
  v11 = v5[11];
  v42 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v42 + 64);
  v14 = MEMORY[0x24BDAC7A8](v8, v13);
  v44 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v5[10];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v14, v18);
  v43 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v22;
  v23 = sub_211A47B8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v41 = v16;
  v25 = v15;
  v24((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v15);
  v26 = v42;
  v27 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v11);
  v28 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v10, v50, v54);
  v29 = (*(unsigned __int8 *)(v16 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v30 = (v17 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (v12 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v32 = (char *)swift_allocObject();
  *((_QWORD *)v32 + 2) = 0;
  *((_QWORD *)v32 + 3) = 0;
  v33 = v25;
  *((_QWORD *)v32 + 4) = v25;
  *((_QWORD *)v32 + 5) = v27;
  v34 = v27;
  *((_QWORD *)v32 + 6) = v55;
  v35 = v5[13];
  *((_QWORD *)v32 + 7) = v35;
  v36 = v5[14];
  *((_QWORD *)v32 + 8) = v36;
  v37 = v5[15];
  v38 = v51;
  *((_QWORD *)v32 + 9) = v37;
  *((_QWORD *)v32 + 10) = v38;
  v39 = &v32[v29];
  v40 = v33;
  (*(void (**)(char *, char *))(v41 + 32))(v39, v43);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v32[v30], v44, v34);
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v32[v31], v45, v54);
  swift_retain();
  sub_2119E2088((uint64_t)v48, (uint64_t)&unk_254ACB230, (uint64_t)v32);
  v56 = v40;
  v57 = v34;
  v58 = v55;
  v59 = v35;
  v60 = v36;
  v61 = v37;
  type metadata accessor for MergeStateMachine();
}

void sub_2119C4568()
{
  sub_2119C1E84();
}

uint64_t sub_2119C4578()
{
  return swift_release();
}

uint64_t sub_2119C45A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_211A47B50();
  }
  return swift_task_switch();
}

uint64_t sub_2119C4608()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_2119C4664;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_2119C4664()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_2119C46B8()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_2119C4778()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v0 = sub_211A47E14();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for MergeStateMachine.CancelledAction();
}

void sub_2119C4AE4()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_2119C4B40(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  *v3 = result;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t sub_2119C4B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2119C4B80()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_21199C7F4;
  return sub_211A480FC();
}

uint64_t sub_2119C4C18(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[13] = a2;
  v7 = *a3;
  v6[18] = *a3;
  v8 = *(_QWORD *)(v7 + 96);
  v6[19] = v8;
  v9 = sub_211A47E14();
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = *(_QWORD *)(v8 - 8);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119C4CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD **)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = v5[10];
  *(_QWORD *)(v0 + 200) = v10;
  v11 = v5[13];
  *(_QWORD *)(v0 + 208) = v11;
  sub_2119C5428(v8, v9, v10, v11);
  v12 = v5[11];
  *(_QWORD *)(v0 + 216) = v12;
  v13 = v5[14];
  *(_QWORD *)(v0 + 224) = v13;
  sub_2119C5428(v7, v9, v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v21) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 32))(v14, *(_QWORD *)(v0 + 176), v16);
    sub_2119C5428(v14, v18, v16, *(_QWORD *)(v17 + 120));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  *(_QWORD *)(v0 + 232) = sub_211958C38(&qword_254ACC360);
  if ((sub_211A47BEC() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v20;
    sub_211958C38(&qword_254ACA118);
    *v20 = v0;
    v20[1] = sub_2119C4E8C;
    return sub_211A47BE0();
  }
}

uint64_t sub_2119C4E8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119C4EF0()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_211A47BEC() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v2;
    sub_211958C38(&qword_254ACA118);
    *v2 = v0;
    v2[1] = sub_2119C4E8C;
    return sub_211A47BE0();
  }
}

void sub_2119C4FC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[31];
  v2 = v0[27];
  v10 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v6 = v0[18];
  v5 = v0[19];
  v7 = v0[14];
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  v0[2] = v3;
  v9 = *(_QWORD *)(v6 + 120);
  v0[3] = v2;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v10;
  v0[7] = v9;
  type metadata accessor for MergeStateMachine.UpstreamThrewAction();
}

uint64_t sub_2119C5428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v5 = v4;
  v20[1] = a2;
  v9 = *v4;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v12 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A47B8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v9 + 80);
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v18 + 56) = a3;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v9 + 104);
  *(_QWORD *)(v18 + 80) = *(_QWORD *)(v9 + 120);
  *(_QWORD *)(v18 + 88) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_2119C641C((uint64_t)v15, (uint64_t)&unk_254ACB250, v18);
  return sub_2119CBBB8((uint64_t)v15);
}

void sub_2119C55B0()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_2119C5610()
{
  sub_2119C2950();
}

uint64_t sub_2119C5620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  result = swift_endAccess();
  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

void sub_2119C565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v8 = *(_QWORD **)a5;
  v9 = *(_QWORD *)(*(_QWORD *)a5 + 80);
  v7[26] = v9;
  v10 = v8[11];
  v7[27] = v10;
  v11 = v8[12];
  v7[28] = v11;
  v12 = v8[13];
  v7[29] = v12;
  v13 = v8[14];
  v7[30] = v13;
  v14 = v8[15];
  v7[10] = v9;
  v7[31] = v14;
  v7[11] = v10;
  v7[12] = v11;
  v7[13] = v12;
  v7[14] = v13;
  v7[15] = v14;
  type metadata accessor for MergeStateMachine.ElementProducedAction();
}

uint64_t sub_2119C56D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v2[32] = a1;
  v2[33] = *(_QWORD *)(a1 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[36] = AssociatedTypeWitness;
  v4 = sub_211A47E14();
  v2[37] = v4;
  v2[38] = *(_QWORD *)(v4 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = *(_QWORD *)(v1 - 8);
  v2[45] = swift_task_alloc();
  v5 = swift_getAssociatedTypeWitness();
  v2[46] = v5;
  v2[47] = *(_QWORD *)(v5 - 8);
  v2[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119C581C()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[44] + 16))(v0[45], v0[22], v0[24]);
  sub_211A47C04();
  return swift_task_switch();
}

void sub_2119C588C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_2119C58F0;
  swift_continuation_init();
  sub_2119C6140();
}

uint64_t sub_2119C58D8()
{
  return swift_continuation_await();
}

uint64_t sub_2119C58F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[49] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    v1[50] = v4;
    *v4 = v1;
    v4[1] = sub_2119C59C8;
    return sub_211A47B68();
  }
}

uint64_t sub_2119C59C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119C5A2C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119C5AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v13 = *(_OWORD *)(v0 + 224);
    v14 = *(_OWORD *)(v0 + 208);
    v10 = *(_OWORD *)(v0 + 192);
    v11 = *(_OWORD *)(v0 + 240);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(v1, *(_QWORD *)(v0 + 296));
    v5 = swift_task_alloc();
    *(_OWORD *)(v5 + 16) = v10;
    *(_QWORD *)(v5 + 32) = v4;
    *(_OWORD *)(v0 + 128) = v14;
    *(_OWORD *)(v0 + 144) = v13;
    *(_OWORD *)(v0 + 160) = v11;
    type metadata accessor for MergeStateMachine.UpstreamFinishedAction();
  }
  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 184);
  v12 = *(_OWORD *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  v9 = swift_task_alloc();
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v6;
  os_unfair_lock_lock(v8);
  sub_2119C62EC();
}

uint64_t sub_2119C6094()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119C6140()
{
  type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction();
}

void sub_2119C618C()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
  sub_2119C624C();
}

void sub_2119C61B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  os_unfair_lock_s *v24;
  uint64_t *v25;
  unint64_t v26;

  os_unfair_lock_unlock(v24);
  if (v26 >> 62)
  {
    if (v26 >> 62 == 1)
    {
      sub_211958C38(&qword_254ACC360);
      swift_allocError();
      *v25 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
}

void sub_2119C624C()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_2119C62AC()
{
  sub_2119C20C8();
}

uint64_t sub_2119C62BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_endAccess();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void sub_2119C62EC()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_2119C634C()
{
  sub_2119C22EC();
}

uint64_t sub_2119C6360()
{
  return swift_endAccess();
}

void sub_2119C6384()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_2119C63E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;

  result = swift_endAccess();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t sub_2119C641C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];
  _QWORD v20[4];

  v4 = v3;
  v7 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2119CBBF8(a1, (uint64_t)v10);
  v11 = sub_211A47B8C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2119CBBB8((uint64_t)v10);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_211A47B50();
      v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_211A47B80();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v16 = *v4;
  v17 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_2119C659C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_2119CA81C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncMerge2Sequence, a7);
}

void sub_2119C65A8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  sub_2119CA944(a1, a2, a3, a4, a5, (void (*)(_QWORD, _QWORD *))type metadata accessor for AsyncMerge2Sequence, a6);
}

void sub_2119C65B4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_211A47E14();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for MergeStorage();
}

void sub_2119C6634()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v1, 1, 1, v0);
  swift_allocObject();
  sub_2119CCB74();
}

void sub_2119C6684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_2119C66BC();
}

void sub_2119C66BC()
{
  type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass();
}

uint64_t sub_2119C66EC()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

void sub_2119C670C()
{
  sub_2119C65B4();
}

uint64_t sub_2119C6728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2, v1);
  *v3 = a1;
  return result;
}

uint64_t sub_2119C6754(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_2119C6784()
{
  sub_2119C35DC();
}

uint64_t sub_2119C679C()
{
  uint64_t v0;

  swift_release();
  return v0;
}

void sub_2119C67B4()
{
  sub_2119C35DC();
}

uint64_t sub_2119C67CC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for Lock(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Lock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lock()
{
  return &type metadata for Lock;
}

_QWORD *sub_2119C687C(char *__dst, char *__src, _QWORD *a3)
{
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  void *v29;
  id v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  BOOL v37;
  size_t __n;
  char *v40;
  uint64_t v41;

  v3 = __src;
  v4 = __dst;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  if (*(_DWORD *)(v11 + 84))
    v13 = *(_QWORD *)(v11 + 64);
  else
    v13 = *(_QWORD *)(v11 + 64) + 1;
  if (v13 + ((v10 + v12 + (v9 & ~v8)) & (unint64_t)~v12) <= 0x28)
    v14 = 40;
  else
    v14 = v13 + ((v10 + v12 + (v9 & ~v8)) & ~v12);
  if (v14 > 3)
    goto LABEL_11;
  v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  v16 = 2;
  if (v15 > 0xFFFC)
    v16 = 4;
  if (v15 <= 0xFC)
LABEL_11:
    v16 = 1;
  v17 = *(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v11 + 80);
  if (((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18 && (v17 & 0x1000F8) == 0)
  {
    if (v14 <= 3)
    {
      v20 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v20 > 0xFFFC)
      {
        v21 = *(_DWORD *)&__src[v14];
        if (v21 < 3)
        {
LABEL_29:
          if (v21 != 2)
          {
            if (v21 != 1)
            {
              __n = v13;
              v23 = ~v8;
              v41 = a3[4];
              (*(void (**)(char *, char *))(v6 + 16))(__dst, __src);
              v24 = v3;
              v25 = ((unint64_t)v4 + v9) & v23;
              v40 = v24;
              v26 = (unint64_t)&v24[v9] & v23;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v5);
              v27 = (void *)((v25 + v10 + v12) & ~v12);
              v28 = (const void *)((v26 + v10 + v12) & ~v12);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v28, 1, v41))
              {
                memcpy(v27, v28, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v41);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v41);
              }
              v3 = v40;
              if (v14 > 3)
              {
LABEL_45:
                *((_BYTE *)v4 + v14) = 0;
                if (v14 <= 3)
                {
LABEL_46:
                  v35 = ((1 << (8 * v14)) + 1) >> (8 * v14);
                  v36 = 2;
                  if (v35 > 0xFFFC)
                    v36 = 4;
                  if (v35 > 0xFC)
                    goto LABEL_60;
                }
LABEL_49:
                v36 = 1;
LABEL_60:
                *(_QWORD *)(((unint64_t)v4 + v36 + v14 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v3[v36 + 7 + v14] & 0xFFFFFFFFFFFFF8);
                return v4;
              }
              v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
              if (v31 > 0xFFFC)
              {
                *(_DWORD *)((char *)v4 + v14) = 0;
              }
              else
              {
                if (v31 <= 0xFC)
                  goto LABEL_45;
                *(_WORD *)((char *)v4 + v14) = 0;
              }
LABEL_58:
              v37 = v31 > 0xFFFC;
              v36 = 2;
              if (v37)
                v36 = 4;
              goto LABEL_60;
            }
            v33 = *((_QWORD *)__src + 1);
            *(_QWORD *)__dst = *(_QWORD *)__src;
            *((_QWORD *)__dst + 1) = v33;
            *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
            *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            if (v14 > 3)
              goto LABEL_40;
            v34 = 1;
            v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
            if (v31 <= 0xFFFC)
            {
              if (v31 <= 0xFC)
              {
LABEL_40:
                v32 = 1;
LABEL_41:
                *((_BYTE *)v4 + v14) = v32;
                if (v14 <= 3)
                  goto LABEL_46;
                goto LABEL_49;
              }
LABEL_57:
              *(_WORD *)((char *)v4 + v14) = v34;
              goto LABEL_58;
            }
LABEL_54:
            *(_DWORD *)((char *)v4 + v14) = v34;
            goto LABEL_58;
          }
          v29 = (void *)*((_QWORD *)__src + 1);
          *(_QWORD *)__dst = *(_QWORD *)__src;
          swift_retain();
          v30 = v29;
          v4[1] = v29;
          if (v14 <= 3)
          {
            v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
            if (v31 > 0xFFFC)
            {
              v34 = 2;
              goto LABEL_54;
            }
            if (v31 > 0xFC)
            {
              LOWORD(v34) = 2;
              goto LABEL_57;
            }
          }
          v32 = 2;
          goto LABEL_41;
        }
LABEL_25:
        if (v14 <= 3)
          v22 = v14;
        else
          v22 = 4;
        __asm { BR              X14 }
      }
      if (v20 > 0xFC)
      {
        v21 = *(unsigned __int16 *)&__src[v14];
        if (v21 < 3)
          goto LABEL_29;
        goto LABEL_25;
      }
    }
    v21 = __src[v14];
    if (v21 < 3)
      goto LABEL_29;
    goto LABEL_25;
  }
  v19 = *(_QWORD *)__src;
  *v4 = *(_QWORD *)__src;
  v4 = (_QWORD *)(v19 + (((v17 & 0xF8 | 7u) + 16) & ~(unint64_t)(v17 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

char *sub_2119C6D48(char *__dst, char *__src, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  BOOL v30;
  size_t __n;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)&__src[v13];
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = __src[v13];
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)&__src[v13];
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    v22 = (void *)*((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    swift_retain();
    v23 = v22;
    *((_QWORD *)__dst + 1) = v22;
    if (v13 <= 3)
    {
      v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v24 > 0xFFFC)
      {
        v27 = 2;
        goto LABEL_43;
      }
      if (v24 > 0xFC)
      {
        LOWORD(v27) = 2;
        goto LABEL_46;
      }
    }
    v25 = 2;
    goto LABEL_32;
  }
  if (v15 == 1)
  {
    v26 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    *((_QWORD *)__dst + 1) = v26;
    *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13 > 3)
    {
LABEL_31:
      v25 = 1;
LABEL_32:
      __dst[v13] = v25;
      if (v13 <= 3)
        goto LABEL_38;
LABEL_41:
      v29 = 1;
      goto LABEL_50;
    }
    v27 = 1;
    v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v24 <= 0xFFFC)
    {
      if (v24 <= 0xFC)
        goto LABEL_31;
LABEL_46:
      *(_WORD *)&__dst[v13] = v27;
      goto LABEL_48;
    }
LABEL_43:
    *(_DWORD *)&__dst[v13] = v27;
    goto LABEL_48;
  }
  __n = v12;
  v33 = a3[3];
  v17 = ~v7;
  v34 = *(_QWORD *)(v6 + 64);
  v35 = a3[4];
  (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
  v18 = (unint64_t)&__dst[v8] & v17;
  v19 = (unint64_t)&__src[v8] & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v18, v19, v33);
  v20 = (void *)((v18 + v34 + v11) & ~v11);
  v21 = (const void *)((v19 + v34 + v11) & ~v11);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v35))
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v35);
    if (v13 > 3)
      goto LABEL_37;
LABEL_35:
    v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v24 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v13] = 0;
    }
    else
    {
      if (v24 <= 0xFC)
        goto LABEL_37;
      *(_WORD *)&__dst[v13] = 0;
    }
LABEL_48:
    v30 = v24 > 0xFFFC;
    v29 = 2;
    if (v30)
      v29 = 4;
    goto LABEL_50;
  }
  memcpy(v20, v21, __n);
  if (v13 <= 3)
    goto LABEL_35;
LABEL_37:
  __dst[v13] = 0;
  if (v13 > 3)
    goto LABEL_41;
LABEL_38:
  v28 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  v29 = 2;
  if (v28 > 0xFFFC)
    v29 = 4;
  if (v28 <= 0xFC)
    goto LABEL_41;
LABEL_50:
  *(_QWORD *)((unint64_t)&__dst[v29 + 7 + v13] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v29 + 7 + v13] & 0xFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_2119C717C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  void *v33;
  id v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  size_t __n;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  if ((_QWORD *)a1 == a2)
  {
    v20 = *(_QWORD *)(v9 + 64);
    v21 = *(_QWORD *)(a3[4] - 8);
    v14 = *(unsigned __int8 *)(v21 + 80);
    v22 = *(_DWORD *)(v21 + 84);
    v23 = *(_QWORD *)(v21 + 64);
    v24 = (v8 + v10) & ~v10;
    v25 = ~v14;
    goto LABEL_64;
  }
  v46 = v8 + *(unsigned __int8 *)(v9 + 80);
  v12 = a3[4];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v53 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v13 + 84))
    v15 = *(_QWORD *)(v13 + 64);
  else
    v15 = *(_QWORD *)(v13 + 64) + 1;
  v11 = v46 & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  if (v15 + ((v53 + v14 + v11) & ~v14) <= 0x28)
    v16 = 40;
  else
    v16 = v15 + ((v53 + v14 + v11) & ~v14);
  v17 = 8 * v16;
  if (v16 > 3)
    goto LABEL_11;
  v18 = ((1 << v17) + 1) >> v17;
  if (v18 <= 0xFFFC)
  {
    if (v18 > 0xFC)
    {
      v19 = *(unsigned __int16 *)(a1 + v16);
      if (v19 < 3)
        goto LABEL_21;
      goto LABEL_17;
    }
LABEL_11:
    v19 = *(unsigned __int8 *)(a1 + v16);
    if (v19 < 3)
      goto LABEL_21;
LABEL_17:
    if (v16 <= 3)
      v26 = v16;
    else
      v26 = 4;
    __asm { BR              X13 }
  }
  v19 = *(_DWORD *)(a1 + v16);
  if (v19 >= 3)
    goto LABEL_17;
LABEL_21:
  v51 = v46 & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v52 = ~v14;
  __n = v15;
  v45 = ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v50 = *(_DWORD *)(v13 + 84);
  v48 = v12;
  v49 = *(_QWORD *)(v13 + 64);
  v47 = v5;
  if (v19 == 2)
  {
    swift_release();

  }
  else
  {
    if (v19 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v16 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))((v46 + a1) & v45, v47);
    v27 = (((v46 + a1) & v45) + v53 + v14) & v52;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v27, 1, v48))
    {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v27, v48);
      if (v16 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
  }
  if (v16 > 3)
    goto LABEL_32;
LABEL_30:
  v28 = ((1 << v17) + 1) >> v17;
  if (v28 <= 0xFFFC)
  {
    if (v28 > 0xFC)
    {
      v29 = *(unsigned __int16 *)((char *)a2 + v16);
      if (v29 < 3)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v29 = *((unsigned __int8 *)a2 + v16);
    if (v29 < 3)
      goto LABEL_41;
LABEL_37:
    if (v16 <= 3)
      v30 = v16;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  v29 = *(_DWORD *)((char *)a2 + v16);
  if (v29 >= 3)
    goto LABEL_37;
LABEL_41:
  if (v29 == 2)
  {
    *(_QWORD *)a1 = *a2;
    v33 = (void *)a2[1];
    swift_retain();
    v34 = v33;
    *(_QWORD *)(a1 + 8) = v33;
    v25 = ~v14;
    v20 = v53;
    v24 = v51;
    v22 = v50;
    v23 = v49;
    if (v16 <= 3)
    {
      v35 = ((1 << v17) + 1) >> v17;
      if (v35 > 0xFFFC)
      {
        v36 = 2;
        goto LABEL_60;
      }
      if (v35 > 0xFC)
      {
        LOWORD(v36) = 2;
        goto LABEL_63;
      }
    }
    *(_BYTE *)(a1 + v16) = 2;
    goto LABEL_64;
  }
  if (v29 == 1)
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v25 = ~v14;
    v20 = v53;
    v24 = v51;
    v22 = v50;
    v23 = v49;
    if (v16 > 3)
    {
LABEL_52:
      *(_BYTE *)(a1 + v16) = 1;
      goto LABEL_64;
    }
    v36 = 1;
    v37 = ((1 << v17) + 1) >> v17;
    if (v37 <= 0xFFFC)
    {
      if (v37 <= 0xFC)
        goto LABEL_52;
LABEL_63:
      *(_WORD *)(a1 + v16) = v36;
      goto LABEL_64;
    }
LABEL_60:
    *(_DWORD *)(a1 + v16) = v36;
    goto LABEL_64;
  }
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v46 + a1) & v45, ((unint64_t)a2 + v46) & v45, v47);
  v25 = ~v14;
  v20 = v53;
  v31 = (void *)((((v46 + a1) & v45) + v53 + v14) & v52);
  v32 = (const void *)(((((unint64_t)a2 + v46) & v45) + v53 + v14) & v52);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v32, 1, v48))
  {
    memcpy(v31, v32, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v31, v32, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v31, 0, 1, v48);
  }
  v24 = v51;
  v22 = v50;
  v23 = v49;
  if (v16 > 3)
    goto LABEL_55;
  v38 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  if (v38 > 0xFFFC)
  {
    *(_DWORD *)(a1 + v16) = 0;
  }
  else
  {
    if (v38 <= 0xFC)
    {
LABEL_55:
      *(_BYTE *)(a1 + v16) = 0;
      goto LABEL_64;
    }
    *(_WORD *)(a1 + v16) = 0;
  }
LABEL_64:
  if (v22)
    v39 = v23;
  else
    v39 = v23 + 1;
  v40 = v39 + ((v24 + v20 + v14) & v25);
  if (v40 <= 0x28)
    v40 = 40;
  if (v40 > 3)
    goto LABEL_73;
  v41 = ((1 << (8 * v40)) + 1) >> (8 * v40);
  v42 = 2;
  if (v41 > 0xFFFC)
    v42 = 4;
  if (v41 <= 0xFC)
LABEL_73:
    v42 = 1;
  *(_QWORD *)((v42 + v40 + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v42 + v40 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_2119C77C0(_OWORD *__dst, _OWORD *__src, _QWORD *a3)
{
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  const void *v22;
  unsigned int v23;
  char v24;
  __int128 v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  BOOL v29;
  size_t __n;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v3 = __src;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)((char *)__src + v13);
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = *((unsigned __int8 *)__src + v13);
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)((char *)__src + v13);
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    *__dst = *__src;
    if (v13 <= 3)
    {
      v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v23 > 0xFFFC)
      {
        v26 = 2;
        goto LABEL_44;
      }
      if (v23 > 0xFC)
      {
        LOWORD(v26) = 2;
        goto LABEL_47;
      }
    }
    v24 = 2;
    goto LABEL_31;
  }
  if (v15 == 1)
  {
    v25 = __src[1];
    *__dst = *__src;
    __dst[1] = v25;
    *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
    if (v13 > 3)
    {
LABEL_30:
      v24 = 1;
LABEL_31:
      *((_BYTE *)__dst + v13) = v24;
      if (v13 <= 3)
        goto LABEL_36;
LABEL_39:
      v28 = 1;
      goto LABEL_50;
    }
    v26 = 1;
    v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v23 <= 0xFFFC)
    {
      if (v23 <= 0xFC)
        goto LABEL_30;
LABEL_47:
      *(_WORD *)((char *)__dst + v13) = v26;
      goto LABEL_48;
    }
LABEL_44:
    *(_DWORD *)((char *)__dst + v13) = v26;
    goto LABEL_48;
  }
  __n = v12;
  v17 = ~v7;
  v33 = a3[3];
  v34 = a3[4];
  (*(void (**)(_OWORD *, _OWORD *))(v5 + 32))(__dst, __src);
  v18 = v3;
  v19 = ((unint64_t)__dst + v8) & v17;
  v32 = v18;
  v20 = ((unint64_t)v18 + v8) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v19, v20, v33);
  v21 = (void *)((v19 + v9 + v11) & ~v11);
  v22 = (const void *)((v20 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v22, 1, v34))
  {
    memcpy(v21, v22, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v21, v22, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v34);
  }
  v3 = v32;
  if (v13 <= 3)
  {
    v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)((char *)__dst + v13) = 0;
    }
    else
    {
      if (v23 <= 0xFC)
        goto LABEL_35;
      *(_WORD *)((char *)__dst + v13) = 0;
    }
LABEL_48:
    v29 = v23 > 0xFFFC;
    v28 = 2;
    if (v29)
      v28 = 4;
    goto LABEL_50;
  }
LABEL_35:
  *((_BYTE *)__dst + v13) = 0;
  if (v13 > 3)
    goto LABEL_39;
LABEL_36:
  v27 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  v28 = 2;
  if (v27 > 0xFFFC)
    v28 = 4;
  if (v27 <= 0xFC)
    goto LABEL_39;
LABEL_50:
  *(_QWORD *)(((unint64_t)__dst + v28 + v13 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v3
                                                                                           + v28
                                                                                           + v13
                                                                                           + 7) & 0xFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_2119C7BC8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int v30;
  char v31;
  __int128 v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  size_t __n;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3[3] - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  if (a1 == a2)
  {
    v17 = *(_QWORD *)(v8 + 64);
    v18 = *(_QWORD *)(a3[4] - 8);
    v11 = *(unsigned __int8 *)(v18 + 80);
    v19 = *(_DWORD *)(v18 + 84);
    v20 = *(_QWORD *)(v18 + 64);
    v21 = (v7 + v9) & ~v9;
    v22 = ~v11;
    goto LABEL_66;
  }
  v43 = v7 + *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = *(_QWORD *)(v8 + 64);
  v46 = v43 & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v48 = *(_DWORD *)(v10 + 84);
  v47 = *(_QWORD *)(v10 + 64);
  if (v48)
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v49 + v11 + v46) & ~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v49 + v11 + v46) & ~v11);
  v14 = 8 * v13;
  if (v13 > 3)
    goto LABEL_11;
  v15 = ((1 << v14) + 1) >> v14;
  if (v15 <= 0xFFFC)
  {
    if (v15 > 0xFC)
    {
      v16 = *(unsigned __int16 *)(a1 + v13);
      if (v16 < 3)
        goto LABEL_21;
      goto LABEL_17;
    }
LABEL_11:
    v16 = *(unsigned __int8 *)(a1 + v13);
    if (v16 < 3)
      goto LABEL_21;
LABEL_17:
    if (v13 <= 3)
      v23 = v13;
    else
      v23 = 4;
    __asm { BR              X13 }
  }
  v16 = *(_DWORD *)(a1 + v13);
  if (v16 >= 3)
    goto LABEL_17;
LABEL_21:
  v50 = ~v11;
  __n = v12;
  v42 = ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v44 = a3[3];
  v45 = a3[4];
  if (v16 == 2)
  {
    swift_release();

  }
  else
  {
    if (v16 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v13 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))((v43 + a1) & v42, v44);
    v24 = (((v43 + a1) & v42) + v49 + v11) & v50;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v24, 1, v45))
    {
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v45);
      if (v13 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
  }
  if (v13 > 3)
    goto LABEL_32;
LABEL_30:
  v25 = ((1 << v14) + 1) >> v14;
  if (v25 <= 0xFFFC)
  {
    if (v25 > 0xFC)
    {
      v26 = *(unsigned __int16 *)(a2 + v13);
      if (v26 < 3)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v26 = *(unsigned __int8 *)(a2 + v13);
    if (v26 < 3)
      goto LABEL_41;
LABEL_37:
    if (v13 <= 3)
      v27 = v13;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(_DWORD *)(a2 + v13);
  if (v26 >= 3)
    goto LABEL_37;
LABEL_41:
  if (v26 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v17 = v49;
    v22 = ~v11;
    if (v13 <= 3)
    {
      v30 = ((1 << v14) + 1) >> v14;
      if (v30 > 0xFFFC)
      {
        v33 = 2;
        goto LABEL_61;
      }
      if (v30 > 0xFC)
      {
        LOWORD(v33) = 2;
        goto LABEL_64;
      }
    }
    v31 = 2;
LABEL_53:
    *(_BYTE *)(a1 + v13) = v31;
    goto LABEL_65;
  }
  if (v26 == 1)
  {
    v32 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v32;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v17 = v49;
    v22 = ~v11;
    if (v13 > 3)
    {
LABEL_52:
      v31 = 1;
      goto LABEL_53;
    }
    v33 = 1;
    v34 = ((1 << v14) + 1) >> v14;
    if (v34 <= 0xFFFC)
    {
      if (v34 <= 0xFC)
        goto LABEL_52;
LABEL_64:
      *(_WORD *)(a1 + v13) = v33;
      goto LABEL_65;
    }
LABEL_61:
    *(_DWORD *)(a1 + v13) = v33;
    goto LABEL_65;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v43 + a1) & v42, (v43 + a2) & v42, v44);
  v17 = v49;
  v28 = (void *)((((v43 + a1) & v42) + v49 + v11) & v50);
  v29 = (const void *)((((v43 + a2) & v42) + v49 + v11) & v50);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v45))
  {
    memcpy(v28, v29, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v28, v29, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v45);
  }
  v22 = ~v11;
  if (v13 > 3)
    goto LABEL_56;
  v35 = ((1 << v14) + 1) >> v14;
  if (v35 > 0xFFFC)
  {
    *(_DWORD *)(a1 + v13) = 0;
    goto LABEL_65;
  }
  if (v35 <= 0xFC)
LABEL_56:
    *(_BYTE *)(a1 + v13) = 0;
  else
    *(_WORD *)(a1 + v13) = 0;
LABEL_65:
  v21 = v46;
  v19 = v48;
  v20 = v47;
LABEL_66:
  if (v19)
    v36 = v20;
  else
    v36 = v20 + 1;
  v37 = v36 + ((v21 + v17 + v11) & v22);
  if (v37 <= 0x28)
    v37 = 40;
  if (v37 > 3)
    goto LABEL_75;
  v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  v39 = 2;
  if (v38 > 0xFFFC)
    v39 = 4;
  if (v38 <= 0xFC)
LABEL_75:
    v39 = 1;
  *(_QWORD *)((v39 + v37 + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v39 + v37 + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2119C81A8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v20;
  char v21;
  unsigned int v22;
  int v23;
  char v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  char v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  char v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7
     + ((((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + v4) & ~v4);
  if (v8 <= 0x28)
    v8 = 40;
  v9 = 8 * v8;
  if (v8 > 3)
  {
    v10 = 4;
LABEL_8:
    v11 = 8;
    goto LABEL_9;
  }
  v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC)
    goto LABEL_15;
  v10 = v13 + 3;
  if (v13 <= 0xFC)
    goto LABEL_8;
  v11 = 16;
LABEL_9:
  v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_19;
LABEL_16:
    v14 = ((1 << v9) + 1) >> v9;
    v15 = 2;
    if (v14 > 0xFFFC)
      v15 = 4;
    if (v14 > 0xFC)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_15:
  v12 = 0x7FFFFFFF;
  if (v8 <= 3)
    goto LABEL_16;
LABEL_19:
  v15 = 1;
LABEL_20:
  if (!a2)
    return 0;
  if (v12 < a2)
  {
    if (((((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v12 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2119C82FC + 4 * byte_211A4E118[v18]))();
  }
  if (!v12)
    return 0;
  if (v8 > 3)
  {
    v20 = 4;
LABEL_37:
    v21 = 8;
    goto LABEL_38;
  }
  v26 = ((1 << v9) + 1) >> v9;
  if (v26 > 0xFFFC)
  {
LABEL_48:
    v22 = 0x7FFFFFFF;
    if (v8 > 3)
      goto LABEL_40;
    goto LABEL_49;
  }
  v20 = v26 + 3;
  if (v26 <= 0xFC)
    goto LABEL_37;
  v21 = 16;
LABEL_38:
  v22 = (1 << v21) - v20;
  if ((v22 & 0x80000000) != 0)
    goto LABEL_48;
  if (v8 > 3)
  {
LABEL_40:
    v23 = 4;
LABEL_41:
    v24 = 8;
    goto LABEL_42;
  }
LABEL_49:
  v27 = ((1 << v9) + 1) >> v9;
  if (v27 > 0xFFFC)
  {
LABEL_52:
    if (v22 != 0x7FFFFFFF)
      return 0;
    goto LABEL_53;
  }
  v23 = v27 + 3;
  if (v27 <= 0xFC)
    goto LABEL_41;
  v24 = 16;
LABEL_42:
  v25 = (1 << v24) - v23;
  if (v25 < 0)
    goto LABEL_52;
  if (v25 != v22)
    return 0;
LABEL_53:
  if (v8 > 3)
  {
    v28 = 4;
LABEL_55:
    v29 = 8;
    goto LABEL_56;
  }
  v31 = ((1 << v9) + 1) >> v9;
  if (v31 > 0xFFFC)
    goto LABEL_62;
  v28 = v31 + 3;
  if (v31 <= 0xFC)
    goto LABEL_55;
  v29 = 16;
LABEL_56:
  v30 = (1 << v29) - v28;
  if ((v30 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_66;
    goto LABEL_63;
  }
LABEL_62:
  v30 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_66:
    v33 = 1;
    goto LABEL_67;
  }
LABEL_63:
  v32 = ((1 << v9) + 1) >> v9;
  v33 = 2;
  if (v32 > 0xFFFC)
    v33 = 4;
  if (v32 <= 0xFC)
    goto LABEL_66;
LABEL_67:
  if (!v22)
    return 0;
  v34 = v22 - v30;
  if (v22 <= v30)
    goto LABEL_85;
  v35 = v33 + v8;
  v36 = 8 * (v33 + v8);
  if (v35 > 3)
  {
LABEL_70:
    v37 = *(unsigned __int8 *)(a1 + v35);
    goto LABEL_77;
  }
  v38 = ((v34 + ~(-1 << v36)) >> v36) + 1;
  if (HIWORD(v38))
  {
    v37 = *(_DWORD *)(a1 + v35);
  }
  else
  {
    if (v38 <= 0xFF)
    {
      if (v38 < 2)
      {
LABEL_85:
        if (v30)
        {
          if (v8 <= 3)
          {
            v47 = ((1 << v9) + 1) >> v9;
            if (v47 > 0xFFFC)
            {
              v42 = *(_DWORD *)(a1 + v8);
              v43 = ~v42;
LABEL_95:
              v46 = 0x7FFFFFFF;
LABEL_96:
              if (v46 > v43)
                return -v42;
              else
                return 0;
            }
            v45 = v47 + 3;
            if (v47 > 0xFC)
            {
              v49 = *(unsigned __int16 *)(a1 + v8);
              v42 = v49 | 0xFFFF0000;
              v43 = v49 ^ 0xFFFF;
              v44 = 16;
            }
            else
            {
              v48 = *(unsigned __int8 *)(a1 + v8);
              v42 = v48 | 0xFFFFFF00;
              v43 = v48 ^ 0xFF;
              v44 = 8;
            }
          }
          else
          {
            v41 = *(unsigned __int8 *)(a1 + v8);
            v42 = v41 | 0xFFFFFF00;
            v43 = v41 ^ 0xFF;
            v44 = 8;
            v45 = 4;
          }
          v46 = (1 << v44) - v45;
          if ((v46 & 0x80000000) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        return 0;
      }
      goto LABEL_70;
    }
    v37 = *(unsigned __int16 *)(a1 + v35);
  }
LABEL_77:
  if (!v37)
    goto LABEL_85;
  v39 = (v37 - 1) << v36;
  if (v35 > 3)
    v39 = 0;
  if (!(_DWORD)v35)
    return v30 + v39 + 1;
  if (v35 <= 3)
    v40 = v35;
  else
    v40 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2119C8548 + 4 * byte_211A4E11D[v40 - 1]))();
}

void sub_2119C862C(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;

  v5 = *(_QWORD *)(a4[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  if (v10 <= 0x28)
    v10 = 40;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v15 = ((1 << v11) + 1) >> v11;
    if (v15 > 0xFFFC)
      goto LABEL_15;
    v12 = v15 + 3;
    if (v15 > 0xFC)
    {
      v13 = 16;
LABEL_9:
      v14 = (1 << v13) - v12;
      if ((v14 & 0x80000000) == 0)
      {
        if (v10 > 3)
          goto LABEL_19;
LABEL_16:
        v16 = ((1 << v11) + 1) >> v11;
        v17 = 2;
        if (v16 > 0xFFFC)
          v17 = 4;
        if (v16 > 0xFC)
        {
LABEL_20:
          v18 = ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
          if (v14 >= a3)
          {
            v21 = 0;
            if (a2 <= v14)
              goto LABEL_33;
          }
          else
          {
            if ((((_DWORD)v10 + (_DWORD)v17 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
              v19 = a3 - v14 + 1;
            else
              v19 = 2;
            if (v19 >= 0x10000)
              v20 = 4;
            else
              v20 = 2;
            if (v19 < 0x100)
              v20 = 1;
            if (v19 >= 2)
              v21 = v20;
            else
              v21 = 0;
            if (a2 <= v14)
LABEL_33:
              __asm { BR              X12 }
          }
          if ((_DWORD)v18)
          {
            v22 = ~v14 + a2;
            bzero(a1, v18);
            *a1 = v22;
          }
          __asm { BR              X10 }
        }
LABEL_19:
        v17 = 1;
        goto LABEL_20;
      }
LABEL_15:
      v14 = 0x7FFFFFFF;
      if (v10 > 3)
        goto LABEL_19;
      goto LABEL_16;
    }
  }
  else
  {
    v12 = 4;
  }
  v13 = 8;
  goto LABEL_9;
}

void sub_2119C87F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2119C8800(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2119C8808);
}

void sub_2119C8948(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  int v4;
  int v5;
  char v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_WORD *)(v13 + v14) = 0;
  if (!a1)
    return;
  if (a2 > 3)
  {
    v2 = 4;
LABEL_4:
    v3 = 8;
    goto LABEL_5;
  }
  v8 = ((1 << v12) + 1) >> v12;
  if (v8 > 0xFFFC)
  {
LABEL_16:
    v4 = 0x7FFFFFFF;
    if (a2 > 3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v2 = v8 + 3;
  if (v8 <= 0xFC)
    goto LABEL_4;
  v3 = 16;
LABEL_5:
  v4 = (1 << v3) - v2;
  if (v4 < 0)
    goto LABEL_16;
  if (a2 > 3)
  {
LABEL_7:
    v5 = 4;
LABEL_8:
    v6 = 8;
    goto LABEL_9;
  }
LABEL_17:
  v9 = ((1 << v12) + 1) >> v12;
  if (v9 > 0xFFFC)
  {
LABEL_20:
    if (v4 == 0x7FFFFFFF)
    {
LABEL_11:
      if (a2 > 3)
        JUMPOUT(0x2119C89BCLL);
      JUMPOUT(0x2119C8954);
    }
    goto LABEL_21;
  }
  v5 = v9 + 3;
  if (v9 <= 0xFC)
    goto LABEL_8;
  v6 = 16;
LABEL_9:
  v7 = (1 << v6) - v5;
  if (v7 < 0)
    goto LABEL_20;
  if (v7 == v4)
    goto LABEL_11;
LABEL_21:
  if (a2 > 3)
    goto LABEL_25;
  v10 = ((1 << v12) + 1) >> v12;
  v11 = 2;
  if (v10 > 0xFFFC)
    v11 = 4;
  if (v10 <= 0xFC)
LABEL_25:
    v11 = 1;
  *(_QWORD *)((v13 + a2 + v11 + 7) & 0xFFFFFFFFFFFFF8) = (a1 - 1);
}

void sub_2119C8AB0(int a1@<W1>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_WORD *)(v3 + v4) = 0;
  v5 = -a1;
  if (a2 > 3)
    goto LABEL_4;
  v6 = ((1 << v2) + 1) >> v2;
  if (v6 > 0xFFFC)
  {
    *(_DWORD *)(v3 + a2) = v5;
  }
  else
  {
    if (v6 <= 0xFC)
    {
LABEL_4:
      *(_BYTE *)(v3 + a2) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a2) = v5;
  }
LABEL_7:
  JUMPOUT(0x2119C8B48);
}

void sub_2119C8B3C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

_QWORD *sub_2119C8B60(char *__dst, char *__src, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  void *v29;
  id v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  size_t __n;
  uint64_t v37;
  uint64_t v38;

  v4 = __dst;
  v5 = a3[3];
  v6 = a3[4];
  v7 = *(_QWORD *)(a3[2] - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v6 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  if (*(_DWORD *)(v12 + 84))
    v14 = *(_QWORD *)(v12 + 64);
  else
    v14 = *(_QWORD *)(v12 + 64) + 1;
  if (v14 + ((v11 + v13 + (v10 & ~v9)) & (unint64_t)~v13) <= 0x28)
    v15 = 40;
  else
    v15 = v14 + ((v11 + v13 + (v10 & ~v9)) & ~v13);
  if (v15 > 3)
    goto LABEL_11;
  v16 = ((1 << (8 * v15)) + 1) >> (8 * v15);
  v17 = 2;
  if (v16 > 0xFFFC)
    v17 = 4;
  if (v16 <= 0xFC)
LABEL_11:
    v17 = 1;
  v18 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v12 + 80);
  if ((unint64_t)(v17 + v15) <= 0x18 && (v18 & 0x1000F8) == 0)
  {
    if (v15 <= 3)
    {
      v22 = ((1 << (8 * v15)) + 1) >> (8 * v15);
      if (v22 > 0xFFFC)
      {
        v23 = *(_DWORD *)&__src[v15];
        if (v23 < 3)
        {
LABEL_30:
          if (v23 != 2)
          {
            if (v23 != 1)
            {
              __n = v14;
              v37 = ~v9;
              (*(void (**)(char *, char *))(v7 + 16))(__dst, __src);
              v38 = v6;
              v25 = ((unint64_t)v4 + v10) & v37;
              v26 = (unint64_t)&__src[v10] & v37;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v25, v26, v5);
              v27 = (void *)((v25 + v11 + v13) & ~v13);
              v28 = (const void *)((v26 + v11 + v13) & ~v13);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v28, 1, v38))
              {
                memcpy(v27, v28, __n);
                if (v15 > 3)
                  goto LABEL_46;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v27, v28, v38);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v38);
                if (v15 > 3)
                {
LABEL_46:
                  *((_BYTE *)v4 + v15) = 0;
                  return v4;
                }
              }
              v35 = ((1 << (8 * v15)) + 1) >> (8 * v15);
              if (v35 > 0xFFFC)
              {
                *(_DWORD *)((char *)v4 + v15) = 0;
                return v4;
              }
              if (v35 > 0xFC)
              {
                *(_WORD *)((char *)v4 + v15) = 0;
                return v4;
              }
              goto LABEL_46;
            }
            v32 = *((_QWORD *)__src + 1);
            *(_QWORD *)__dst = *(_QWORD *)__src;
            *((_QWORD *)__dst + 1) = v32;
            *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
            *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            if (v15 > 3)
            {
LABEL_42:
              *((_BYTE *)v4 + v15) = 1;
              return v4;
            }
            v33 = 1;
            v34 = ((1 << (8 * v15)) + 1) >> (8 * v15);
            if (v34 <= 0xFFFC)
            {
              if (v34 <= 0xFC)
                goto LABEL_42;
LABEL_51:
              *(_WORD *)((char *)v4 + v15) = v33;
              return v4;
            }
LABEL_48:
            *(_DWORD *)((char *)v4 + v15) = v33;
            return v4;
          }
          v29 = (void *)*((_QWORD *)__src + 1);
          *(_QWORD *)__dst = *(_QWORD *)__src;
          swift_retain();
          v30 = v29;
          v4[1] = v29;
          if (v15 <= 3)
          {
            v31 = ((1 << (8 * v15)) + 1) >> (8 * v15);
            if (v31 > 0xFFFC)
            {
              v33 = 2;
              goto LABEL_48;
            }
            if (v31 > 0xFC)
            {
              LOWORD(v33) = 2;
              goto LABEL_51;
            }
          }
          *((_BYTE *)v4 + v15) = 2;
          return v4;
        }
LABEL_26:
        if (v15 <= 3)
          v24 = v15;
        else
          v24 = 4;
        __asm { BR              X14 }
      }
      if (v22 > 0xFC)
      {
        v23 = *(unsigned __int16 *)&__src[v15];
        if (v23 < 3)
          goto LABEL_30;
        goto LABEL_26;
      }
    }
    v23 = __src[v15];
    if (v23 < 3)
      goto LABEL_30;
    goto LABEL_26;
  }
  v20 = *(_QWORD *)__src;
  *v4 = *(_QWORD *)__src;
  v4 = (_QWORD *)(v20 + (((v18 & 0xF8 | 7u) + 16) & ~(unint64_t)(v18 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

uint64_t sub_2119C8FA4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  const void *v26;
  void *v27;
  id v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  size_t __n;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if ((_QWORD *)a1 == a2)
    return a1;
  v37 = a3[2];
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v39 = a3[3];
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v38 = *(_QWORD *)(v7 + 64);
  v12 = (v38 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  if (v14 <= 0x28)
    v15 = 40;
  else
    v15 = v14;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_11;
  v17 = ((1 << v16) + 1) >> v16;
  if (v17 <= 0xFFFC)
  {
    if (v17 > 0xFC)
    {
      v18 = *(unsigned __int16 *)(a1 + v15);
      if (v18 < 3)
        goto LABEL_20;
      goto LABEL_16;
    }
LABEL_11:
    v18 = *(unsigned __int8 *)(a1 + v15);
    if (v18 < 3)
      goto LABEL_20;
LABEL_16:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v18 = *(_DWORD *)(a1 + v15);
  if (v18 >= 3)
    goto LABEL_16;
LABEL_20:
  __n = v13;
  v35 = ~v8;
  v36 = ~v11;
  v40 = a3[4];
  if (v18 == 2)
  {
    swift_release();

  }
  else
  {
    if (v18 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v37);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))((v9 + a1) & v35, v39);
    v20 = (((v9 + a1) & v35) + v38 + v11) & v36;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v20, 1, v40))
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v40);
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
  }
  if (v15 > 3)
    goto LABEL_31;
LABEL_29:
  v21 = ((1 << v16) + 1) >> v16;
  if (v21 > 0xFFFC)
  {
    v22 = *(_DWORD *)((char *)a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
    goto LABEL_36;
  }
  if (v21 <= 0xFC)
  {
LABEL_31:
    v22 = *((unsigned __int8 *)a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
LABEL_36:
    if (v15 <= 3)
      v23 = v15;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  v22 = *(unsigned __int16 *)((char *)a2 + v15);
  if (v22 >= 3)
    goto LABEL_36;
LABEL_40:
  if (v22 != 2)
  {
    if (v22 != 1)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v37);
      v24 = ((unint64_t)a2 + v9) & v35;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))((v9 + a1) & v35, v24, v39);
      v25 = (void *)((((v9 + a1) & v35) + v38 + v11) & v36);
      v26 = (const void *)((v24 + v38 + v11) & v36);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v26, 1, v40))
      {
        memcpy(v25, v26, __n);
        if (v15 > 3)
          goto LABEL_56;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v25, v26, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v40);
        if (v15 > 3)
        {
LABEL_56:
          *(_BYTE *)(a1 + v15) = 0;
          return a1;
        }
      }
      v32 = ((1 << v16) + 1) >> v16;
      if (v32 > 0xFFFC)
      {
        *(_DWORD *)(a1 + v15) = 0;
        return a1;
      }
      if (v32 > 0xFC)
      {
        *(_WORD *)(a1 + v15) = 0;
        return a1;
      }
      goto LABEL_56;
    }
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v15 > 3)
      goto LABEL_52;
    v30 = 1;
    v31 = ((1 << v16) + 1) >> v16;
    if (v31 <= 0xFFFC)
    {
      if (v31 <= 0xFC)
      {
LABEL_52:
        *(_BYTE *)(a1 + v15) = 1;
        return a1;
      }
LABEL_61:
      *(_WORD *)(a1 + v15) = v30;
      return a1;
    }
LABEL_58:
    *(_DWORD *)(a1 + v15) = v30;
    return a1;
  }
  *(_QWORD *)a1 = *a2;
  v27 = (void *)a2[1];
  swift_retain();
  v28 = v27;
  *(_QWORD *)(a1 + 8) = v27;
  if (v15 <= 3)
  {
    v29 = ((1 << v16) + 1) >> v16;
    if (v29 > 0xFFFC)
    {
      v30 = 2;
      goto LABEL_58;
    }
    if (v29 > 0xFC)
    {
      LOWORD(v30) = 2;
      goto LABEL_61;
    }
  }
  *(_BYTE *)(a1 + v15) = 2;
  return a1;
}

char *sub_2119C9504(char *__dst, _OWORD *__src, _QWORD *a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  unsigned int v22;
  __int128 v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  size_t __n;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = __dst;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)((char *)__src + v13);
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = *((unsigned __int8 *)__src + v13);
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)((char *)__src + v13);
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    *(_OWORD *)__dst = *__src;
    if (v13 <= 3)
    {
      v22 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v22 > 0xFFFC)
      {
        v24 = 2;
        goto LABEL_38;
      }
      if (v22 > 0xFC)
      {
        LOWORD(v24) = 2;
        goto LABEL_41;
      }
    }
    __dst[v13] = 2;
    return v4;
  }
  if (v15 == 1)
  {
    v23 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v23;
    *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
    if (v13 > 3)
    {
LABEL_30:
      __dst[v13] = 1;
      return v4;
    }
    v24 = 1;
    v25 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v25 <= 0xFFFC)
    {
      if (v25 <= 0xFC)
        goto LABEL_30;
LABEL_41:
      *(_WORD *)&__dst[v13] = v24;
      return v4;
    }
LABEL_38:
    *(_DWORD *)&__dst[v13] = v24;
    return v4;
  }
  __n = v12;
  v30 = a3[3];
  v31 = a3[4];
  v17 = ~v7;
  (*(void (**)(char *, _OWORD *))(v5 + 32))(__dst, __src);
  v29 = v4;
  v18 = (unint64_t)&v4[v8] & v17;
  v19 = ((unint64_t)__src + v8) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v18, v19, v30);
  v20 = (void *)((v18 + v9 + v11) & ~v11);
  v21 = (const void *)((v19 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v31))
  {
    memcpy(v20, v21, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v31);
  }
  v4 = v29;
  if (v13 > 3)
    goto LABEL_33;
  v26 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v26 > 0xFFFC)
  {
    *(_DWORD *)&v29[v13] = 0;
    return v4;
  }
  if (v26 <= 0xFC)
LABEL_33:
    v29[v13] = 0;
  else
    *(_WORD *)&v29[v13] = 0;
  return v4;
}

uint64_t sub_2119C9874(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  unsigned int v27;
  __int128 v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  size_t __n;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a1 == a2)
    return a1;
  v36 = a3[2];
  v5 = *(_QWORD *)(v36 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v38 = a3[3];
  v7 = *(_QWORD *)(v38 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v37 = *(_QWORD *)(v7 + 64);
  v12 = (v37 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  if (v14 <= 0x28)
    v15 = 40;
  else
    v15 = v14;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_11;
  v17 = ((1 << v16) + 1) >> v16;
  if (v17 <= 0xFFFC)
  {
    if (v17 > 0xFC)
    {
      v18 = *(unsigned __int16 *)(a1 + v15);
      if (v18 < 3)
        goto LABEL_20;
      goto LABEL_16;
    }
LABEL_11:
    v18 = *(unsigned __int8 *)(a1 + v15);
    if (v18 < 3)
      goto LABEL_20;
LABEL_16:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v18 = *(_DWORD *)(a1 + v15);
  if (v18 >= 3)
    goto LABEL_16;
LABEL_20:
  __n = v13;
  v34 = ~v8;
  v35 = ~v11;
  v39 = a3[4];
  if (v18 == 2)
  {
    swift_release();

  }
  else
  {
    if (v18 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v36);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))((v9 + a1) & v34, v38);
    v20 = (((v9 + a1) & v34) + v37 + v11) & v35;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v20, 1, v39))
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v39);
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
  }
  if (v15 > 3)
    goto LABEL_31;
LABEL_29:
  v21 = ((1 << v16) + 1) >> v16;
  if (v21 > 0xFFFC)
  {
    v22 = *(_DWORD *)(a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
    goto LABEL_36;
  }
  if (v21 <= 0xFC)
  {
LABEL_31:
    v22 = *(unsigned __int8 *)(a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
LABEL_36:
    if (v15 <= 3)
      v23 = v15;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  v22 = *(unsigned __int16 *)(a2 + v15);
  if (v22 >= 3)
    goto LABEL_36;
LABEL_40:
  if (v22 != 2)
  {
    if (v22 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, v36);
      v24 = (v9 + a2) & v34;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))((v9 + a1) & v34, v24, v38);
      v25 = (void *)((((v9 + a1) & v34) + v37 + v11) & v35);
      v26 = (const void *)((v24 + v37 + v11) & v35);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v26, 1, v39))
      {
        memcpy(v25, v26, __n);
        if (v15 > 3)
          goto LABEL_56;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v39);
        if (v15 > 3)
        {
LABEL_56:
          *(_BYTE *)(a1 + v15) = 0;
          return a1;
        }
      }
      v31 = ((1 << v16) + 1) >> v16;
      if (v31 > 0xFFFC)
      {
        *(_DWORD *)(a1 + v15) = 0;
        return a1;
      }
      if (v31 > 0xFC)
      {
        *(_WORD *)(a1 + v15) = 0;
        return a1;
      }
      goto LABEL_56;
    }
    v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    if (v15 > 3)
      goto LABEL_52;
    v29 = 1;
    v30 = ((1 << v16) + 1) >> v16;
    if (v30 <= 0xFFFC)
    {
      if (v30 <= 0xFC)
      {
LABEL_52:
        *(_BYTE *)(a1 + v15) = 1;
        return a1;
      }
LABEL_61:
      *(_WORD *)(a1 + v15) = v29;
      return a1;
    }
LABEL_58:
    *(_DWORD *)(a1 + v15) = v29;
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (v15 <= 3)
  {
    v27 = ((1 << v16) + 1) >> v16;
    if (v27 > 0xFFFC)
    {
      v29 = 2;
      goto LABEL_58;
    }
    if (v27 > 0xFC)
    {
      LOWORD(v29) = 2;
      goto LABEL_61;
    }
  }
  *(_BYTE *)(a1 + v15) = 2;
  return a1;
}

uint64_t sub_2119C9D94(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v21;
  unsigned int v22;
  unsigned int v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7
     + ((((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + v4) & ~v4);
  if (v8 <= 0x28)
    v8 = 40;
  if (v8 > 3)
  {
    v9 = 4;
LABEL_10:
    v11 = 8;
    goto LABEL_11;
  }
  v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
    goto LABEL_14;
  v9 = v10 + 3;
  if (v10 <= 0xFC)
    goto LABEL_10;
  v11 = 16;
LABEL_11:
  v12 = (1 << v11) - v9;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_18;
LABEL_15:
    v13 = ((1 << (8 * v8)) + 1) >> (8 * v8);
    v14 = 2;
    if (v13 > 0xFFFC)
      v14 = 4;
    if (v13 > 0xFC)
      goto LABEL_19;
    goto LABEL_18;
  }
LABEL_14:
  v12 = 0x7FFFFFFF;
  if (v8 <= 3)
    goto LABEL_15;
LABEL_18:
  v14 = 1;
LABEL_19:
  if (!a2)
    return 0;
  if (a2 <= v12)
    goto LABEL_37;
  v15 = v14 + v8;
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v18 < 2)
    {
LABEL_37:
      if (v12)
      {
        if (v8 <= 3)
        {
          v26 = ((1 << (8 * v8)) + 1) >> (8 * v8);
          if (v26 > 0xFFFC)
          {
            v22 = *(_DWORD *)(a1 + v8);
            v23 = ~v22;
LABEL_47:
            v29 = 0x7FFFFFFF;
LABEL_48:
            if (v29 > v23)
              return -v22;
            else
              return 0;
          }
          v25 = v26 + 3;
          if (v26 > 0xFC)
          {
            v28 = *(unsigned __int16 *)(a1 + v8);
            v22 = v28 | 0xFFFF0000;
            v23 = v28 ^ 0xFFFF;
            v24 = 16;
          }
          else
          {
            v27 = *(unsigned __int8 *)(a1 + v8);
            v22 = v27 | 0xFFFFFF00;
            v23 = v27 ^ 0xFF;
            v24 = 8;
          }
        }
        else
        {
          v21 = *(unsigned __int8 *)(a1 + v8);
          v22 = v21 | 0xFFFFFF00;
          v23 = v21 ^ 0xFF;
          v24 = 8;
          v25 = 4;
        }
        v29 = (1 << v24) - v25;
        if ((v29 & 0x80000000) == 0)
          goto LABEL_48;
        goto LABEL_47;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_37;
LABEL_30:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if (!(_DWORD)v15)
    return v12 + v19 + 1;
  if (v15 > 3)
    LODWORD(v15) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2119C9F30 + 4 * byte_211A4E15D[(v15 - 1)]))();
}

void sub_2119CA014(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;

  v5 = *(_QWORD *)(a4[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  if (v10 <= 0x28)
    v10 = 40;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v15 = ((1 << v11) + 1) >> v11;
    if (v15 > 0xFFFC)
      goto LABEL_15;
    v12 = v15 + 3;
    if (v15 > 0xFC)
    {
      v13 = 16;
LABEL_9:
      v14 = (1 << v13) - v12;
      if ((v14 & 0x80000000) == 0)
      {
        if (v10 > 3)
          goto LABEL_19;
LABEL_16:
        v16 = ((1 << v11) + 1) >> v11;
        v17 = 2;
        if (v16 > 0xFFFC)
          v17 = 4;
        if (v16 > 0xFC)
        {
LABEL_20:
          v18 = v17 + v10;
          if (a3 <= v14)
          {
            v19 = 0;
          }
          else if (v18 <= 3)
          {
            v21 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
            if (HIWORD(v21))
            {
              v19 = 4u;
            }
            else if (v21 >= 0x100)
            {
              v19 = 2;
            }
            else
            {
              v19 = v21 > 1;
            }
          }
          else
          {
            v19 = 1u;
          }
          if (v14 < a2)
          {
            v20 = ~v14 + a2;
            if (v18 < 4)
            {
              if ((_DWORD)v18)
              {
                v22 = v20 & ~(-1 << (8 * v18));
                bzero(a1, v18);
                if ((_DWORD)v18 == 3)
                {
                  *a1 = v22;
                  *((_BYTE *)a1 + 2) = BYTE2(v22);
                }
                else if ((_DWORD)v18 == 2)
                {
                  *a1 = v22;
                }
                else
                {
                  *(_BYTE *)a1 = v22;
                }
              }
            }
            else
            {
              bzero(a1, v18);
              *(_DWORD *)a1 = v20;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_19:
        v17 = 1;
        goto LABEL_20;
      }
LABEL_15:
      v14 = 0x7FFFFFFF;
      if (v10 > 3)
        goto LABEL_19;
      goto LABEL_16;
    }
  }
  else
  {
    v12 = 4;
  }
  v13 = 8;
  goto LABEL_9;
}

uint64_t sub_2119CA2D4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2[4] - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v7 = v6
     + ((((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
       + v3) & ~v3);
  v8 = 40;
  if (v7 > 0x28)
    v8 = v7;
  if (v8 > 3)
    goto LABEL_7;
  v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
  {
    v9 = *(unsigned int *)(a1 + v8);
  }
  else
  {
    if (v10 <= 0xFC)
    {
LABEL_7:
      v9 = *(unsigned __int8 *)(a1 + v8);
      goto LABEL_12;
    }
    v9 = *(unsigned __int16 *)(a1 + v8);
  }
LABEL_12:
  if (v9 < 3)
    return v9;
  if (v8 <= 3)
    v11 = v8;
  else
    v11 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2119CA39C + 4 * byte_211A4E16B[v11]))();
}

_BYTE *sub_2119CA3E4(_BYTE *result, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  int v15;

  v4 = *(_QWORD *)(a3[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v9 = v8 + v5;
  if (v9 <= 0x28)
    v10 = 40;
  else
    v10 = v9;
  if (a2 > 2)
  {
    if (v10 < 4)
    {
      v12 = ((a2 - 3) >> (8 * v10)) + 3;
      v13 = (unsigned int *)&result[v10];
      v14 = ((1 << (8 * v10)) + 1) >> (8 * v10);
      if (v14 > 0xFFFC)
      {
        *v13 = v12;
      }
      else if (v14 > 0xFC)
      {
        *(_WORD *)v13 = v12;
      }
      else
      {
        *(_BYTE *)v13 = v12;
      }
    }
    else
    {
      result[v10] = 3;
    }
    if (v10 >= 4)
      v15 = 4;
    else
      v15 = v10;
    bzero(result, v10);
    __asm { BR              X10 }
  }
  if (v10 > 3)
    goto LABEL_9;
  v11 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v11 > 0xFFFC)
  {
    *(_DWORD *)&result[v10] = a2;
  }
  else
  {
    if (v11 <= 0xFC)
    {
LABEL_9:
      result[v10] = a2;
      return result;
    }
    *(_WORD *)&result[v10] = a2;
  }
  return result;
}

void sub_2119CA578()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_2119CA588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2119CA5A0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = *(_QWORD **)(v0[3] + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2119CA610;
  v2[2] = v0[2];
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_2119CA610()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119CA658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2119CA670()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = **(_QWORD **)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2119D53C0;
  v2[2] = *(_QWORD *)(v0 + 16);
  v2[3] = v1;
  return swift_task_switch();
}

uint64_t sub_2119CA6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_211963DB0;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_2119CA738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_2119D53CC;
  return sub_211A47B74();
}

uint64_t sub_2119CA810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_2119CA81C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncChain2Sequence, a7);
}

uint64_t sub_2119CA81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD, _QWORD *)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD *);
  _QWORD v27[4];

  v26 = a7;
  v14 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1, a1);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v15, v20);
  v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a8, v22, a3);
  v27[0] = a3;
  v27[1] = a4;
  v27[2] = a5;
  v27[3] = a6;
  v23 = v26(0, v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a8 + *(int *)(v23 + 52), v17, a4);
}

void sub_2119CA938(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  sub_2119CA944(a1, a2, a3, a4, a5, (void (*)(_QWORD, _QWORD *))type metadata accessor for AsyncChain2Sequence, a6);
}

void sub_2119CA944(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void (*a6)(_QWORD, _QWORD *)@<X6>, uint64_t a7@<X8>)
{
  _QWORD v12[4];

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a7, a1);
  v12[0] = a2;
  v12[1] = a3;
  v12[2] = a4;
  v12[3] = a5;
  a6(0, v12);
  JUMPOUT(0x2119CA9A4);
}

void sub_2119CA9DC(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  type metadata accessor for AsyncChain2Sequence.Iterator();
}

uint64_t sub_2119CAA6C(uint64_t a1)
{
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v5 = v2 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v5, 1, 1, AssociatedTypeWitness);
  v9 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v2, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v12, v4);
  v1(v2, 0, 1, v4);
  v10 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v13, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(v5, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_2119CAB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 32);
  v3[6] = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v5 = sub_211A47E14();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119CAC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 104) = AssociatedTypeWitness;
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v0 + 112) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 56));
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    v8 = sub_211A47E14();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    v9 = v6 + *(int *)(v7 + 52);
    v10 = swift_getAssociatedTypeWitness();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    swift_getAssociatedConformanceWitness();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    *v13 = v0;
    v13[1] = sub_2119CB078;
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v12;
    *v12 = v0;
    v12[1] = sub_2119CAE40;
  }
  return sub_211A47B68();
}

uint64_t sub_2119CAE40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119CAEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    v8 = sub_211A47E14();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v10 = 1;
    v9(v6, 1, 1, v4);
    v11 = v6 + *(int *)(v7 + 52);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v11, 1, AssociatedTypeWitness))
    {
      swift_getAssociatedConformanceWitness();
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v13;
      *v13 = v0;
      v13[1] = sub_2119CB078;
      return sub_211A47B68();
    }
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 16);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v17(v15, v1, v3);
    v17(v16, v15, v3);
    v10 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 16), v10, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119CB078()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119CB0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  v6 = v3 + *(int *)(v4 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119CB208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  v6 = v3 + *(int *)(v4 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_211A47E14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119CB314(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2119A113C;
  return sub_2119CAB5C(a1, a2);
}

uint64_t sub_2119CB374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_2119CB44C;
  return sub_211A47B74();
}

uint64_t sub_2119CB44C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return ((uint64_t (*)(void))v3[1])();
}

void sub_2119CB4C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v4 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18 = v20;
  v17(v14, v20, v10);
  sub_211A47C04();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v6, v18 + *(int *)(a1 + 52), v4);
  sub_211A47C04();
  sub_2119CA9DC(v22);
}

uint64_t sub_2119CB680(uint64_t a1, uint64_t a2)
{
  return sub_211963694(a1, a2, (void (*)(void))sub_2119CB4C4);
}

void sub_2119CB690()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_2119CB6A0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_2119CB730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_211963DB0;
  sub_2119C3924(a1, v1);
}

void sub_2119CB784()
{
  sub_2119C4778();
}

void type metadata accessor for MergeStateMachine.CancelledAction()
{
  JUMPOUT(0x212BE4744);
}

unint64_t sub_2119CB798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254ACA088;
  if (!qword_254ACA088)
  {
    v1 = sub_211A47B5C();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE6848], v1);
    atomic_store(result, (unint64_t *)&qword_254ACA088);
  }
  return result;
}

void sub_2119CB7E0()
{
  sub_2119C46B8();
}

uint64_t sub_2119CB7F8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *((_QWORD *)v0 + 4);
  v12 = *((_QWORD *)v0 + 5);
  v2 = *((_QWORD *)v0 + 6);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v12 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_211A47E14() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(&v0[v4], v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v12);
  v10 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&v0[v9], 1, v2))
    (*(void (**)(char *, uint64_t))(v10 + 8))(&v0[v9], v2);
  return swift_deallocObject();
}

uint64_t sub_2119CB918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(v1[4] - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1[5] - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_211A47E14() - 8) + 80);
  v10 = v7 + v8 + v9;
  v11 = v1[10];
  v12 = (char *)v1 + v5;
  v13 = (char *)v1 + v7;
  v14 = (char *)v1 + (v10 & ~v9);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_2119A113C;
  v15[5] = v13;
  v15[6] = v14;
  v15[3] = v11;
  v15[4] = v12;
  v15[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2119CB9F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_211963DB0;
  return sub_2119C4C18(a1, a2, v6, v7, v9, v8);
}

void type metadata accessor for MergeStateMachine.UpstreamThrewAction()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_2119CBA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_2119CBB04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[7];
  v5 = v1[11];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v7;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_2119A113C;
  sub_2119C565C(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_2119CBBB8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_211958C38(&qword_254AC9FD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2119CBBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for MergeStateMachine.UpstreamFinishedAction()
{
  JUMPOUT(0x212BE4744);
}

void type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_2119CBC58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v7);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v6 + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119CBD34()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2119D53BC;
  return sub_211A47B74();
}

uint64_t sub_2119CBDB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_2119CBDDC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[16] = a1;
  v3[17] = v2;
  v5 = a2[3];
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v6 = a2[5];
  v3[21] = v6;
  v7 = a2[2];
  v3[22] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[23] = AssociatedTypeWitness;
  v3[24] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v9 = a2[4];
  v3[27] = v9;
  v10 = a2[6];
  v3[28] = v10;
  v11 = a2[7];
  v3[2] = v7;
  v3[29] = v11;
  v3[3] = v5;
  v3[4] = v9;
  v3[5] = v6;
  v3[6] = v10;
  v3[7] = v11;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
}

uint64_t sub_2119CBEB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v1[30] = a1;
  v3 = sub_211A47E14();
  v1[31] = v3;
  v1[32] = *(_QWORD *)(v3 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = *(_QWORD *)(a1 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v4 = sub_211A47E14();
  v1[37] = v4;
  v1[38] = *(_QWORD *)(v4 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119CBF94()
{
  uint64_t v0;
  char v1;
  void (*v2)(_QWORD, uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_BYTE *)(*(_QWORD *)(v0 + 136) + 24);
  v2 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 56);
  *(_QWORD *)(v0 + 344) = v2;
  if ((v1 & 1) == 0)
  {
    v2(*(_QWORD *)(v0 + 336), 1, 1, *(_QWORD *)(v0 + 144));
    *(_QWORD *)(v0 + 352) = swift_task_alloc();
    v4 = sub_211A48060();
    v5 = sub_211A47B44();
    v6 = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v5);
    v8 = type metadata accessor for AsyncSyncSequence(255, v5, v6, v7);
    v9 = MEMORY[0x212BE47C8](MEMORY[0x24BEE6F08], v4);
    v10 = MEMORY[0x212BE47C8](&unk_211A4E868, v8);
    *(_QWORD *)(v0 + 64) = v4;
    *(_QWORD *)(v0 + 72) = v8;
    *(_QWORD *)(v0 + 80) = v9;
    *(_QWORD *)(v0 + 88) = v10;
    type metadata accessor for AsyncChain2Sequence();
  }
  v2(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119CC134(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_211A48060();
  v5 = MEMORY[0x212BE47C8](&unk_211A4E428, a1);
  v6 = MEMORY[0x212BE47C8](v2, v4);
  v1[12] = a1;
  v1[13] = v4;
  v1[14] = v5;
  v1[15] = v6;
  type metadata accessor for AsyncMerge2Sequence.Iterator();
}

uint64_t sub_2119CC188()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = sub_2119CC1D4;
  v0[2] = *(_QWORD *)(v1 + 264);
  v0[3] = v2 + 16;
  return swift_task_switch();
}

uint64_t sub_2119CC1D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2119CC238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 336);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 304);
    v7 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(v1, *(_QWORD *)(v0 + 248));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v4, v5);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10);
  if (v12)
  {
    if (v12 == 1)
    {
      v13 = *(_QWORD *)(v0 + 336);
      v14 = *(_QWORD *)(v0 + 296);
      v15 = *(_QWORD *)(v0 + 304);
      v16 = *(_QWORD *)(v0 + 128);
      v17 = *(_QWORD *)(v0 + 136);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
      *(_BYTE *)(v17 + 24) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v13, v14);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      goto LABEL_18;
    }
    v42 = *(_QWORD *)(v0 + 336);
    v44 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 312);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 144);
    v47 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    v48(v43, v42, v45);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v43, 1, v46) != 1)
    {
      v49 = *(_QWORD *)(v0 + 336);
      v50 = *(_QWORD *)(v0 + 296);
      v51 = *(_QWORD *)(v0 + 128);
      v52 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
      v52(*(_QWORD *)(v0 + 312), v50);
      v48(v51, v49, v50);
      v52(v49, v50);
      goto LABEL_18;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
LABEL_19:
    *(_QWORD *)(v0 + 352) = swift_task_alloc();
    v65 = sub_211A48060();
    v66 = sub_211A47B44();
    v67 = MEMORY[0x212BE47C8](MEMORY[0x24BEE12C8], v66);
    v69 = type metadata accessor for AsyncSyncSequence(255, v66, v67, v68);
    v70 = MEMORY[0x212BE47C8](MEMORY[0x24BEE6F08], v65);
    v71 = MEMORY[0x212BE47C8](&unk_211A4E868, v69);
    *(_QWORD *)(v0 + 64) = v65;
    *(_QWORD *)(v0 + 72) = v69;
    *(_QWORD *)(v0 + 80) = v70;
    *(_QWORD *)(v0 + 88) = v71;
    type metadata accessor for AsyncChain2Sequence();
  }
  v18 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  v22 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 184));
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v24(v18, v19, v20);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v19) = v25(v18, 1, v22);
  v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v26(v18, v20);
  if ((_DWORD)v19 == 1)
  {
    v27 = *(_QWORD *)(v0 + 336);
    v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 344);
    v29 = *(_QWORD *)(v0 + 320);
    v30 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 144);
    sub_211A47CF4();
    v28(v29, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v27, v29, v30);
  }
  v33 = *(_QWORD *)(v0 + 336);
  v34 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 16))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  result = v25(v33, 1, v34);
  if ((_DWORD)result != 1)
  {
    v36 = *(_QWORD *)(v0 + 336);
    v37 = *(_QWORD *)(v0 + 144);
    sub_211A47CE8();
    if (v25(v36, 1, v37))
    {
      v38 = *(_QWORD *)(v0 + 288);
      v39 = *(_QWORD *)(v0 + 272);
      v40 = *(_QWORD *)(v0 + 240);
      v41 = *(_QWORD *)(v0 + 136);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      if ((*(_BYTE *)(v41 + 8) & 1) == 0)
        goto LABEL_19;
    }
    else
    {
      v74 = *(_QWORD *)(v0 + 288);
      v75 = v24;
      v72 = *(_QWORD *)(v0 + 272);
      v73 = *(_QWORD *)(v0 + 240);
      v53 = *(_QWORD *)(v0 + 208);
      v55 = *(_QWORD *)(v0 + 184);
      v54 = *(_QWORD *)(v0 + 192);
      v56 = v26;
      v58 = *(_QWORD *)(v0 + 152);
      v57 = *(_QWORD *)(v0 + 160);
      v59 = *(_QWORD *)(v0 + 136);
      v60 = *(_QWORD *)(v0 + 144);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 16))(v57, *(_QWORD *)(v0 + 336), v60);
      v61 = sub_211A47CAC();
      v62 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v26 = v56;
      v62(v57, v60);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
      v24 = v75;
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v73);
      if ((*(_BYTE *)(v59 + 8) & 1) != 0 || v61 != **(_QWORD **)(v0 + 136))
        goto LABEL_19;
    }
    v63 = *(_QWORD *)(v0 + 336);
    v64 = *(_QWORD *)(v0 + 296);
    v24(*(_QWORD *)(v0 + 128), v63, v64);
    v26(v63, v64);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2119CC7DC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 296));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119CC8A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211963DB0;
  sub_2119CBDDC(a1, a2);
}

uint64_t sub_2119CC904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_2119D53CC;
  return sub_211A47B74();
}

uint64_t sub_2119CC9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a3;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2119CC9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 2, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119CCA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a3;
  v6[4] = a6;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2119CCA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v1, 2, 2, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119CCAFC(uint64_t a1, uint64_t a2)
{
  sub_2119C0CE0(a1, a2);
}

uint64_t sub_2119CCB20(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  *(_QWORD *)(v6 + 16) = a3;
  *(_BYTE *)(v6 + 24) = a4 & 1;
  return result;
}

void sub_2119CCB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_211A47E14();
  v1 = MEMORY[0x24BDAC7A8](v5, v0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  MEMORY[0x24BDAC7A8](v3, v4);
  type metadata accessor for MergeStateMachine();
}

void sub_2119CCC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _DWORD *v19;

  *(_QWORD *)(v16 - 184) = a1;
  MEMORY[0x24BDAC7A8](a1, a2);
  v18 = (char *)&a9 - v17;
  v19 = (_DWORD *)swift_slowAlloc();
  *v19 = 0;
  *(_QWORD *)(v9 + 16) = v19;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v16 - 160), v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 176) + 16))(v14, *(_QWORD *)(v16 - 144), v12);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v16 - 168) + 16))(v11, *(_QWORD *)(v16 - 136), *(_QWORD *)(v16 - 152));
  sub_2119C1B04(v13, v14, v11, v15, v12, (uint64_t)v18);
}

uint64_t sub_2119CCD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(v2 + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), v0, *(_QWORD *)(v3 - 184));
  return v1;
}

void type metadata accessor for MergeStateMachine.IteratorDeinitializedAction()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_2119CCD68(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119CCD94()
{
  return swift_deallocObject();
}

uint64_t sub_2119CCDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_211963DB0;
  v8[4] = v6;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2119CCE1C()
{
  return swift_deallocObject();
}

uint64_t sub_2119CCE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_211963DB0;
  v6[3] = v4;
  v6[4] = v5;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t *sub_2119CCEA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2119CCF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_2119CCF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2119CCF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2119CCFA0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2119CD050 + 4 * byte_211A4E174[(v7 - 1)]))();
}

void sub_2119CD0A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t *sub_2119CD250(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  void *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v13 + v10;
  v15 = (v13 + v11 + ((v7 + v11) & ~v11)) & ~v11;
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = v13 + 1;
  v17 = v15 + v16;
  v18 = *(_DWORD *)(v6 + 80) | v10;
  v19 = (*(_BYTE *)(v6 + 80) | v10);
  v20 = v18 & 0x100000;
  if (v19 > 7 || v20 != 0 || v17 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  else
  {
    v24 = AssociatedTypeWitness;
    v25 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v26 = ((unint64_t)a1 + v12) & v25;
    v27 = ((unint64_t)a2 + v12) & v25;
    v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v28(v26, v27, v24);
    v29 = (void *)((v14 + v26) & v25);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v14 + v27) & v25, 1, v24))
    {
      memcpy(v29, (const void *)((v14 + v27) & v25), v16);
    }
    else
    {
      v28((unint64_t)v29, (v14 + v27) & v25, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v29, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t sub_2119CD3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7) & ~v7;
  v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v8, AssociatedTypeWitness);
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, AssociatedTypeWitness);
  return result;
}

uint64_t sub_2119CD4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v13 + v9 + v11) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84))
      v15 = v13;
    else
      v15 = v13 + 1;
    memcpy(v14, (const void *)((v13 + v9 + v11) & ~v9), v15);
  }
  else
  {
    v12((uint64_t)v14, (v13 + v9 + v11) & ~v9, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_2119CD5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  v15 = (void *)((v13 + v9 + v11) & ~v9);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v11) = v16(v14, 1, AssociatedTypeWitness);
  v17 = v16(v15, 1, AssociatedTypeWitness);
  if ((_DWORD)v11)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v14, v15, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v17)
    {
      v12((uint64_t)v14, (uint64_t)v15, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v14, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v18 = v13;
  else
    v18 = v13 + 1;
  memcpy(v14, v15, v18);
  return a1;
}

uint64_t sub_2119CD73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v13 + v9 + v11) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84))
      v15 = v13;
    else
      v15 = v13 + 1;
    memcpy(v14, (const void *)((v13 + v9 + v11) & ~v9), v15);
  }
  else
  {
    v12((uint64_t)v14, (v13 + v9 + v11) & ~v9, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_2119CD864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  v15 = (void *)((v13 + v9 + v11) & ~v9);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v11) = v16(v14, 1, AssociatedTypeWitness);
  v17 = v16(v15, 1, AssociatedTypeWitness);
  if ((_DWORD)v11)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v14, v15, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v17)
    {
      v12((uint64_t)v14, (uint64_t)v15, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v14, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v18 = v13;
  else
    v18 = v13 + 1;
  memcpy(v14, v15, v18);
  return a1;
}

uint64_t sub_2119CD9D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = v10 - 1;
  if (!(_DWORD)v10)
    v12 = 0;
  if (v12 > v11)
    v11 = v12;
  v13 = *(_QWORD *)(v9 + 64);
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = v13 + 1;
  if (!a2)
    return 0;
  v15 = AssociatedTypeWitness;
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = *(_QWORD *)(v6 + 64) + v16;
  v18 = v13 + v16;
  if (a2 <= v11)
    goto LABEL_30;
  v19 = v14 + ((v18 + (v17 & ~v16)) & ~v16);
  v20 = 8 * v19;
  if (v19 > 3)
    goto LABEL_14;
  v22 = ((a2 - v11 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v22))
  {
    v21 = *(_DWORD *)(a1 + v19);
    if (!v21)
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v22 > 0xFF)
  {
    v21 = *(unsigned __int16 *)(a1 + v19);
    if (!*(_WORD *)(a1 + v19))
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v22 >= 2)
  {
LABEL_14:
    v21 = *(unsigned __int8 *)(a1 + v19);
    if (!*(_BYTE *)(a1 + v19))
      goto LABEL_30;
LABEL_21:
    v23 = (v21 - 1) << v20;
    if (v19 > 3)
      v23 = 0;
    if ((_DWORD)v19)
    {
      if (v19 <= 3)
        v24 = v19;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    return v11 + v23 + 1;
  }
LABEL_30:
  if (!v11)
    return 0;
  if ((_DWORD)v7 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v26 = a1;
    v10 = v7;
    v15 = v5;
    return v25(v26, v10, v15);
  }
  v27 = ~v16;
  v26 = (v17 + a1) & v27;
  if ((_DWORD)v10 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v25(v26, v10, v15);
  }
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v18 + v26) & v27, v10, v15);
  if (v28 >= 2)
    return v28 - 1;
  else
    return 0;
}

void sub_2119CDBC8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = v11 - 1;
  if (!v11)
    v13 = 0;
  if (v13 > v12)
    v12 = v13;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  v16 = v15
      + ((v14
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  if (a3 > v12)
  {
    if (v16 > 3)
    {
      v9 = 1u;
      if (v12 >= a2)
LABEL_27:
        __asm { BR              X17 }
LABEL_20:
      v18 = ~v12 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v9 = 4u;
      if (v12 >= a2)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v17 >= 0x100)
      v9 = 2;
    else
      v9 = v17 > 1;
  }
  if (v12 >= a2)
    goto LABEL_27;
  goto LABEL_20;
}

void sub_2119CDE5C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_2119CDE64()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_2119CDEAC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2119CDEBC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2119CDEC4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t *sub_2119CDED0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v6);
    v17 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_BYTE *)(v17 + 8);
    v19 = (v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v19 = *(_QWORD *)v17;
    *(_BYTE *)(v19 + 8) = v18;
  }
  return v4;
}

uint64_t sub_2119CDFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_2119CE03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_2119CE0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_2119CE174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_2119CE210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_2119CE2AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v5)
    v9 = *(_DWORD *)(v4 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v4 + 64) + v10;
  if (v9 >= a2)
  {
    if (v9)
    {
      if (v5 >= v8)
        return (*(uint64_t (**)(void))(v4 + 48))();
      else
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))((v11 + a1) & ~v10, *(unsigned int *)(v7 + 84), v6);
    }
    return 0;
  }
  v12 = ((*(_QWORD *)(v7 + 64) + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v13 = (a2 - v9 + 255) >> (8 * v12);
  if (v12 < 4)
    v14 = v13 + 1;
  else
    v14 = 2;
  if (v14 >= 0x10000)
    v15 = 4;
  else
    v15 = 2;
  if (v14 < 0x100)
    v15 = 1;
  if (v14 >= 2)
    v16 = v15;
  else
    v16 = 0;
  return ((uint64_t (*)(void))((char *)&loc_2119CE354 + 4 * byte_211A4E194[v16]))();
}

void sub_2119CE3E0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v7 >= a3)
  {
    v11 = 0;
    if (v7 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_17:
      __asm { BR              X16 }
  }
  if (v8 >= 4)
    v12 = ~v7 + a2;
  else
    v12 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v12;
  else
    *(_DWORD *)a1 = v12;
  __asm { BR              X10 }
}

void sub_2119CE520()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2119CE528(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2119CE530);
}

void sub_2119CE56C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_2119CE574()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_2119CE57C(uint64_t a1, int a2, unsigned int a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!a2)
    JUMPOUT(0x2119CE584);
  if (a3 >= v4)
    return (*(uint64_t (**)(uint64_t))(v6 + 56))(v9);
  else
    return (*(uint64_t (**)(uint64_t))(v7 + 56))((v8 + v9) & v5);
}

uint64_t *sub_2119CE59C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _BOOL8 v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        v9 = 4;
      }
      else
      {
        v11 = v10 != 0;
        v12 = v10 >= 0xFF;
        v9 = 2;
        if (!v12)
          v9 = v11;
      }
    }
    else
    {
      v9 = 1;
    }
    v8 = v9 + v7;
  }
  v13 = *(_DWORD *)(v5 + 80);
  if (v13 <= 7 && v8 <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
    {
      if (v6 <= 1)
      {
        if (v7 <= 3)
        {
          v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v18 > 0xFFFE)
          {
            v17 = 4;
          }
          else
          {
            v19 = v18 != 0;
            v12 = v18 >= 0xFF;
            v17 = 2;
            if (!v12)
              v17 = v19;
          }
        }
        else
        {
          v17 = 1;
        }
        v7 += v17;
      }
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
    }
  }
  else
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return a1;
}

void *sub_2119CE754(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 2, AssociatedTypeWitness);
  v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v12 > 0xFFFE)
        {
          v11 = 4;
        }
        else
        {
          v13 = v12 != 0;
          v14 = v12 >= 0xFF;
          v11 = 2;
          if (!v14)
            v11 = v13;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_2119CE8C8(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          v8 = 4;
        }
        else
        {
          v10 = v9 != 0;
          v11 = v9 >= 0xFF;
          v8 = 2;
          if (!v11)
            v8 = v10;
        }
      }
      else
      {
        v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_2119CE9D8(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 2, AssociatedTypeWitness);
  v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v12 > 0xFFFE)
        {
          v11 = 4;
        }
        else
        {
          v13 = v12 != 0;
          v14 = v12 >= 0xFF;
          v11 = 2;
          if (!v14)
            v11 = v13;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_2119CEB4C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(a1, 2, AssociatedTypeWitness);
}

uint64_t sub_2119CEBA0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, a2, 2, AssociatedTypeWitness);
}

unint64_t sub_2119CEBFC(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119CEC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_2119CEC8C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMUserDefaults(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *sub_2119CED50(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_release();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2119CEDC4(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_2119CEE14(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_2119CEE68(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2119CEE80(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

uint64_t *sub_2119CEEA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_2119CEEDC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_2119CEEDC(uint64_t a1, unint64_t a2)
{
  id result;

  if (a2 >> 62 == 1)
    return (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

void sub_2119CEEF4(uint64_t a1)
{
  sub_2119CEF00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_2119CEF00(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1)

}

uint64_t *sub_2119CEF18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_2119CEEDC(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2119CEF00(v5, v6);
  return a1;
}

uint64_t *sub_2119CEF5C(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2119CEF00(v3, v4);
  return a1;
}

uint64_t sub_2119CEF94(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 32766);
  v3 = (((*(_QWORD *)(a1 + 8) >> 49) >> 13) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 49) & 0x1800 | ((*(_QWORD *)(a1 + 8) & 7) << 8) | HIBYTE(*(_QWORD *)a1) & 0xF0 | *(_QWORD *)a1 & 0xF))) ^ 0x7FFF;
  if (v3 >= 0x7FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_2119CF00C(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x7FFD)
  {
    *(_QWORD *)result = a2 - 32766;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1FFF | ((-a2 & 0x7FFF) << 13);
      *(_QWORD *)result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(_QWORD *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2119CF078(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[1] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 4) + 2;
}

uint64_t sub_2119CF094(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_2119CF0A4(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF0uLL;
    result[1] = v2;
  }
  else
  {
    *result = 16 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

_QWORD *sub_2119CF0D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_2119D204C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2119CF0E0);
}

unint64_t sub_2119CF0E0(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2119CF12C(unint64_t *a1)
{
  return sub_2119A15BC(*a1);
}

unint64_t *sub_2119CF14C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_2119CF0E0(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_2119A15BC(v6);
  return a1;
}

unint64_t *sub_2119CF1A0(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_2119A15BC(v4);
  return a1;
}

uint64_t *sub_2119CF1EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  if (v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0 && v7 <= 0x18)
  {
    v11 = AssociatedTypeWitness;
    v12 = ~v6;
    if ((*(_DWORD *)(v5 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v12))
      {
LABEL_14:
        memcpy(a1, a2, v7);
        return a1;
      }
    }
    else
    {
      v13 = *a2;
      if ((unint64_t)*a2 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      if ((_DWORD)v13 != -1)
        goto LABEL_14;
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v11);
    return a1;
  }
  v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  swift_retain();
  return a1;
}

_QWORD *sub_2119CF320(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t);
  int v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ~v7;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    v13 = v12(((unint64_t)a1 + v7 + 8) & v8, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL)
      LODWORD(v10) = -1;
    v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t *sub_2119CF498(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    if ((_DWORD)v9 != -1)
      goto LABEL_5;
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7))
    goto LABEL_7;
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

_QWORD *sub_2119CF58C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t);
  int v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ~v7;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    v13 = v12(((unint64_t)a1 + v7 + 8) & v8, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL)
      LODWORD(v10) = -1;
    v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_2119CF704(_QWORD *a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 - 1 >= a2)
    goto LABEL_24;
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 > 3)
    goto LABEL_7;
  v12 = (((1 << v9) + a2 - v6) >> v9) + 1;
  if (HIWORD(v12))
  {
    v10 = *(_DWORD *)((char *)a1 + v8);
    if (v10)
      goto LABEL_15;
LABEL_24:
    if ((v5 & 0x80000000) != 0)
    {
      v16 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      v16 = v15 + 1;
    }
    if (v16 >= 2)
      return v16 - 1;
    else
      return 0;
  }
  if (v12 > 0xFF)
  {
    v10 = *(unsigned __int16 *)((char *)a1 + v8);
    if (*(_WORD *)((char *)a1 + v8))
      goto LABEL_15;
    goto LABEL_24;
  }
  if (v12 < 2)
    goto LABEL_24;
LABEL_7:
  v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((_BYTE *)a1 + v8))
    goto LABEL_24;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return (v13 + v6);
}

void sub_2119CF898(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = ((v9 + 8) & ~v9) + *(_QWORD *)(v6 + 64);
  if (v7 - 1 >= a3)
  {
    v11 = 0;
  }
  else
  {
    v11 = 1u;
    if (v10 <= 3)
    {
      v12 = (((v11 << (8 * v10)) + a3 - v7) >> (8 * v10)) + 1;
      if (HIWORD(v12))
      {
        v11 = 4u;
        if (v8 >= a2)
          goto LABEL_21;
      }
      else
      {
        if (v12 >= 0x100)
          v11 = 2;
        else
          v11 = v12 > 1;
        if (v8 >= a2)
LABEL_21:
          __asm { BR              X14 }
      }
LABEL_14:
      v13 = a2 - v7;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v14 = v13 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v14;
            a1[2] = BYTE2(v14);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v14;
          }
          else
          {
            *a1 = v14;
          }
        }
      }
      else
      {
        bzero(a1, ((v9 + 8) & ~v9) + *(_QWORD *)(v6 + 64));
        *(_DWORD *)a1 = v13;
      }
      __asm { BR              X10 }
    }
  }
  if (v8 >= a2)
    goto LABEL_21;
  goto LABEL_14;
}

void sub_2119CFAC4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2119CFB2CLL);
}

void sub_2119CFACC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2119CFB2CLL);
}

void sub_2119CFAD4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2119CFB2CLL);
}

void sub_2119CFB00()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2119CFB2CLL);
}

void sub_2119CFB10()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2119CFB2CLL);
}

void sub_2119CFB18()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2119CFB2CLL);
}

uint64_t sub_2119CFB44(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t))(v2 + 48))(((unint64_t)a1
                                                                  + *(unsigned __int8 *)(v2 + 80)
                                                                  + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  return (v3 + 1);
}

uint64_t sub_2119CFBC8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  int v11;
  uint64_t v12;

  result = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(result - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = ~v8;
  if (v7 >= a2)
  {
    if ((_DWORD)a2)
    {
      if ((v6 & 0x80000000) != 0)
      {
        return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 56))(((unint64_t)a1 + v8 + 8) & v9, a2);
      }
      else
      {
        if ((a2 & 0x80000000) != 0)
          v12 = a2 ^ 0x80000000;
        else
          v12 = (a2 - 1);
        *a1 = v12;
      }
    }
  }
  else
  {
    v10 = (((_DWORD)v8 + 8) & v9) + *(_DWORD *)(v5 + 64);
    if ((_DWORD)v10)
    {
      if (v10 <= 3)
        v11 = ((v8 + 8) & v9) + *(_DWORD *)(v5 + 64);
      else
        v11 = 4;
      bzero(a1, v10);
      __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t sub_2119CFD04(int a1, id a2, unint64_t a3)
{
  id v3;
  uint64_t result;

  if (a3 >> 62)
  {
    if (a3 >> 62 != 1)
      return result;
    v3 = a2;
  }
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119CFD60(uint64_t a1)
{
  return sub_2119A13EC(*(_QWORD *)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *sub_2119CFD70(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_2119CFD04(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_2119CFDC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_2119CFD04(*a2, v4, v5);
  v7 = *a1;
  v8 = (void *)a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_2119A13EC(v7, v8, v9);
  return a1;
}

_QWORD *sub_2119CFE24(_QWORD *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  __int128 v6;

  v3 = *a1;
  v5 = (void *)a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_2119A13EC(v3, v5, v4);
  return a1;
}

uint64_t sub_2119CFE60(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 16382);
  v3 = (((*(_QWORD *)(a1 + 16) >> 50) >> 12) | (4
                                                            * ((*(_QWORD *)(a1 + 16) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 16) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_2119CFEDC(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_2119CFF50(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[2] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

uint64_t sub_2119CFF70(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2119CFF80(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(_QWORD *)(result + 16) = v2;
  }
  else
  {
    *(_QWORD *)result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_211A4E9D0;
    *(_QWORD *)(result + 24) = 0;
  }
  return result;
}

id *sub_2119CFFC4(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char *v22;
  id *v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  void (*v27)(id *, id *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  void *v30;
  const void *v31;
  unsigned int v32;
  uint64_t v33;
  id v34;
  id v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  unsigned int v43;
  size_t __n;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v48 = a3[3];
  v6 = *(_QWORD *)(v48 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v46 = *(_QWORD *)(v5 + 64) + v7;
  v49 = a3[4];
  v8 = *(_QWORD *)(v49 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v47 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  __n = v10;
  v11 = v10
      + ((v47 + v9 + (v46 & ~(unint64_t)v7)) & ~(unint64_t)v9);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v13 + 64);
  if (v14 + 1 > v11)
    v15 = v14 + 1;
  else
    v15 = v11;
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = v15;
  if (v16 > 3)
    goto LABEL_17;
  v17 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  v18 = 2;
  if (v17 > 0xFFFC)
    v18 = 4;
  if (v17 <= 0xFC)
LABEL_17:
    v18 = 1;
  v19 = v18 + v16;
  v20 = *(_DWORD *)(v5 + 80) | v7 | v9 | *(_DWORD *)(v13 + 80);
  if (v19 <= 0x18 && (v20 & 0x1000F8) == 0)
  {
    if (v16 <= 3)
    {
      v24 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v24 > 0xFFFC)
      {
        v25 = *(_DWORD *)((char *)a2 + v16);
        if (v25 < 3)
        {
LABEL_35:
          if (v25 != 2)
          {
            if (v25 != 1)
            {
              v27 = *(void (**)(id *, id *, uint64_t))(v5 + 16);
              v23 = a1;
              v27(a1, a2, v4);
              v28 = ((unint64_t)a1 + v46) & ~(unint64_t)v7;
              v29 = ((unint64_t)a2 + v46) & ~(unint64_t)v7;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v28, v29, v48);
              v30 = (void *)((v28 + v47 + v9) & ~(unint64_t)v9);
              v31 = (const void *)((v29 + v47 + v9) & ~(unint64_t)v9);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v31, 1, v49))
              {
                memcpy(v30, v31, __n);
                if (v16 > 3)
                  goto LABEL_53;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v30, v31, v49);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v30, 0, 1, v49);
                if (v16 > 3)
                {
LABEL_53:
                  *((_BYTE *)a1 + v16) = 0;
                  return v23;
                }
              }
              v37 = ((1 << (8 * v16)) + 1) >> (8 * v16);
              if (v37 > 0xFFFC)
              {
                *(_DWORD *)((char *)a1 + v16) = 0;
                return v23;
              }
              if (v37 > 0xFC)
              {
                *(_WORD *)((char *)a1 + v16) = 0;
                return v23;
              }
              goto LABEL_53;
            }
            v32 = *((unsigned __int8 *)a2 + v14);
            if (v32 >= 2)
            {
              if (v14 <= 3)
                v33 = v14;
              else
                v33 = 4;
              __asm { BR              X13 }
            }
            v23 = a1;
            v39 = v14;
            if (v32 == 1)
            {
              v40 = *a2;
              v41 = *a2;
              *a1 = v40;
              v42 = 1;
            }
            else
            {
              (*(void (**)(id *, id *, uint64_t))(v13 + 16))(a1, a2, AssociatedTypeWitness);
              v42 = 0;
            }
            *((_BYTE *)a1 + v39) = v42;
            if (v16 > 3)
            {
LABEL_62:
              *((_BYTE *)a1 + v16) = 1;
              return v23;
            }
            v38 = 1;
            v43 = ((1 << (8 * v16)) + 1) >> (8 * v16);
            if (v43 <= 0xFFFC)
            {
              if (v43 > 0xFC)
              {
                *(_WORD *)((char *)a1 + v16) = 1;
                return v23;
              }
              goto LABEL_62;
            }
LABEL_66:
            *(_DWORD *)((char *)v23 + v16) = v38;
            return v23;
          }
          v34 = *a2;
          v35 = *a2;
          v23 = a1;
          *a1 = v34;
          if (v16 <= 3)
          {
            v36 = ((1 << (8 * v16)) + 1) >> (8 * v16);
            if (v36 > 0xFFFC)
            {
              v38 = 2;
              goto LABEL_66;
            }
            if (v36 > 0xFC)
            {
              *(_WORD *)((char *)a1 + v16) = 2;
              return v23;
            }
          }
          *((_BYTE *)a1 + v16) = 2;
          return v23;
        }
LABEL_31:
        if (v16 <= 3)
          v26 = v16;
        else
          v26 = 4;
        __asm { BR              X13 }
      }
      if (v24 > 0xFC)
      {
        v25 = *(unsigned __int16 *)((char *)a2 + v16);
        if (v25 < 3)
          goto LABEL_35;
        goto LABEL_31;
      }
    }
    v25 = *((unsigned __int8 *)a2 + v16);
    if (v25 < 3)
      goto LABEL_35;
    goto LABEL_31;
  }
  v22 = (char *)*a2;
  *a1 = *a2;
  v23 = (id *)&v22[((v20 & 0xF8 | 7u) + 16) & ~(unint64_t)(v20 & 0xF8 | 7u)];
  swift_retain();
  return v23;
}

id *sub_2119D04F8(id *a1, void **a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  const void *v30;
  unsigned int v31;
  uint64_t v32;
  void *v33;
  id v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  void *v38;
  id v39;
  char v40;
  unsigned int v41;
  size_t __n;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v50 = a3[3];
  v8 = *(_QWORD *)(v50 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v48 = v7 + v9;
  v51 = a3[4];
  v10 = *(_QWORD *)(v51 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = *(_QWORD *)(v8 + 64);
  v12 = (v49 + v11 + ((v7 + v9) & ~v9)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v45 = AssociatedTypeWitness;
  if (*(_QWORD *)(v44 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v44 + 64);
  if (v16 + 1 > v14)
    v17 = v16 + 1;
  else
    v17 = v14;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v18 > 3)
    goto LABEL_17;
  v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
    goto LABEL_22;
  }
  if (v19 <= 0xFC)
  {
LABEL_17:
    v20 = *((unsigned __int8 *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
LABEL_22:
    if (v18 <= 3)
      v21 = v18;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  v20 = *(unsigned __int16 *)((char *)a1 + v18);
  if (v20 >= 3)
    goto LABEL_22;
LABEL_26:
  v46 = ~v9;
  v47 = ~v11;
  if (v20 == 2)
    goto LABEL_38;
  if (v20 != 1)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)a1 + v48) & v46, v50);
    v22 = ((((unint64_t)a1 + v48) & v46) + v49 + v11) & v47;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v22, 1, v51))
    {
      if (v18 > 3)
        goto LABEL_44;
      goto LABEL_42;
    }
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v22, v51);
    goto LABEL_41;
  }
  v23 = *((unsigned __int8 *)a1 + v16);
  if (v23 >= 2)
  {
    if (v16 <= 3)
      v24 = v16;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
LABEL_38:

    if (v18 > 3)
      goto LABEL_44;
    goto LABEL_42;
  }
  (*(void (**)(id *, uint64_t))(v44 + 8))(a1, AssociatedTypeWitness);
LABEL_41:
  if (v18 > 3)
    goto LABEL_44;
LABEL_42:
  v25 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v25 > 0xFFFC)
  {
    v26 = *(_DWORD *)((char *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v25 <= 0xFC)
  {
LABEL_44:
    v26 = *((unsigned __int8 *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
LABEL_49:
    if (v18 <= 3)
      v27 = v18;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(unsigned __int16 *)((char *)a2 + v18);
  if (v26 >= 3)
    goto LABEL_49;
LABEL_53:
  if (v26 != 2)
  {
    if (v26 != 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v28 = ((unint64_t)a2 + v48) & v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v48) & v46, v28, v50);
      v29 = (void *)(((((unint64_t)a1 + v48) & v46) + v49 + v11) & v47);
      v30 = (const void *)((v28 + v49 + v11) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v30, 1, v51))
      {
        memcpy(v29, v30, __n);
        if (v18 > 3)
          goto LABEL_70;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v29, v30, v51);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v51);
        if (v18 > 3)
        {
LABEL_70:
          *((_BYTE *)a1 + v18) = 0;
          return a1;
        }
      }
      v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      goto LABEL_70;
    }
    v31 = *((unsigned __int8 *)a2 + v16);
    if (v31 >= 2)
    {
      if (v16 <= 3)
        v32 = v16;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      v38 = *a2;
      v39 = v38;
      *a1 = v38;
      v40 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v44 + 16))(a1, a2, v45);
      v40 = 0;
    }
    *((_BYTE *)a1 + v16) = v40;
    if (v18 > 3)
    {
LABEL_79:
      *((_BYTE *)a1 + v18) = 1;
      return a1;
    }
    v37 = 1;
    v41 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v41 <= 0xFFFC)
    {
      if (v41 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_79;
    }
LABEL_83:
    *(_DWORD *)((char *)a1 + v18) = v37;
    return a1;
  }
  v33 = *a2;
  v34 = v33;
  *a1 = v33;
  if (v18 <= 3)
  {
    v35 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v35 > 0xFFFC)
    {
      v37 = 2;
      goto LABEL_83;
    }
    if (v35 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v18) = 2;
      return a1;
    }
  }
  *((_BYTE *)a1 + v18) = 2;
  return a1;
}

_QWORD *sub_2119D0BA4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  char v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  size_t __n;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v39 = a3[3];
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v40 = a3[4];
  v10 = *(_QWORD *)(v40 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v38 = *(_QWORD *)(v7 + 64);
  v12 = (v38 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v16 + 64) <= 8uLL)
    v17 = 8;
  else
    v17 = *(_QWORD *)(v16 + 64);
  if (v17 + 1 > v14)
    v18 = v17 + 1;
  else
    v18 = v14;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  if (v19 > 3)
    goto LABEL_16;
  v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a2 + v19);
      if (v21 < 3)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v21 = *((unsigned __int8 *)a2 + v19);
    if (v21 < 3)
      goto LABEL_25;
LABEL_21:
    if (v19 <= 3)
      v22 = v19;
    else
      v22 = 4;
    __asm { BR              X13 }
  }
  v21 = *(_DWORD *)((char *)a2 + v19);
  if (v21 >= 3)
    goto LABEL_21;
LABEL_25:
  if (v21 != 2)
  {
    if (v21 != 1)
    {
      v23 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32);
      v24 = a1;
      v23(a1, a2, v4);
      v25 = ((unint64_t)a1 + v9) & ~v8;
      v26 = ((unint64_t)a2 + v9) & ~v8;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v25, v26, v39);
      v27 = (void *)((v25 + v38 + v11) & ~v11);
      v28 = (const void *)((v26 + v38 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v40))
      {
        memcpy(v27, v28, __n);
        if (v19 > 3)
          goto LABEL_44;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v27, v28, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v40);
        if (v19 > 3)
        {
LABEL_44:
          *((_BYTE *)a1 + v19) = 0;
          return v24;
        }
      }
      v33 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v33 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      if (v33 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      goto LABEL_44;
    }
    v29 = *((unsigned __int8 *)a2 + v17);
    if (v29 >= 2)
    {
      if (v17 <= 3)
        v30 = v17;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    v24 = a1;
    if (v29 == 1)
    {
      *a1 = *a2;
      v32 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(a1, a2, AssociatedTypeWitness);
      v32 = 0;
    }
    *((_BYTE *)a1 + v17) = v32;
    if (v19 > 3)
    {
LABEL_51:
      *((_BYTE *)a1 + v19) = 1;
      return v24;
    }
    v34 = 1;
    v35 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v35 <= 0xFFFC)
    {
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 1;
        return v24;
      }
      goto LABEL_51;
    }
LABEL_55:
    *(_DWORD *)((char *)v24 + v19) = v34;
    return v24;
  }
  v24 = a1;
  *a1 = *a2;
  if (v19 <= 3)
  {
    v31 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v31 > 0xFFFC)
    {
      v34 = 2;
      goto LABEL_55;
    }
    if (v31 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v19) = 2;
      return v24;
    }
  }
  *((_BYTE *)a1 + v19) = 2;
  return v24;
}

void sub_2119D1014()
{
  unsigned __int16 *v0;
  unsigned int v1;

  if (v1 >= 4)
  {
    if ((*v0 | (*((unsigned __int8 *)v0 + 2) << 16)) != 0xFFFFFFFF)
      JUMPOUT(0x2119D0EACLL);
    JUMPOUT(0x2119D0F98);
  }
  JUMPOUT(0x2119D0F80);
}

id *sub_2119D1048(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  const void *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  char v36;
  unsigned int v37;
  size_t __n;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v46 = a3[3];
  v8 = *(_QWORD *)(v46 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v44 = v7 + v9;
  v47 = a3[4];
  v10 = *(_QWORD *)(v47 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v45 = *(_QWORD *)(v8 + 64);
  v12 = (v45 + v11 + ((v7 + v9) & ~v9)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v41 = AssociatedTypeWitness;
  if (*(_QWORD *)(v40 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v40 + 64);
  if (v16 + 1 > v14)
    v17 = v16 + 1;
  else
    v17 = v14;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v18 > 3)
    goto LABEL_17;
  v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
    goto LABEL_22;
  }
  if (v19 <= 0xFC)
  {
LABEL_17:
    v20 = *((unsigned __int8 *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
LABEL_22:
    if (v18 <= 3)
      v21 = v18;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  v20 = *(unsigned __int16 *)((char *)a1 + v18);
  if (v20 >= 3)
    goto LABEL_22;
LABEL_26:
  v42 = ~v9;
  v43 = ~v11;
  if (v20 == 2)
    goto LABEL_38;
  if (v20 != 1)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)a1 + v44) & v42, v46);
    v22 = ((((unint64_t)a1 + v44) & v42) + v45 + v11) & v43;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v22, 1, v47))
    {
      if (v18 > 3)
        goto LABEL_44;
      goto LABEL_42;
    }
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v22, v47);
    goto LABEL_41;
  }
  v23 = *((unsigned __int8 *)a1 + v16);
  if (v23 >= 2)
  {
    if (v16 <= 3)
      v24 = v16;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
LABEL_38:

    if (v18 > 3)
      goto LABEL_44;
    goto LABEL_42;
  }
  (*(void (**)(id *, uint64_t))(v40 + 8))(a1, AssociatedTypeWitness);
LABEL_41:
  if (v18 > 3)
    goto LABEL_44;
LABEL_42:
  v25 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v25 > 0xFFFC)
  {
    v26 = *(_DWORD *)((char *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v25 <= 0xFC)
  {
LABEL_44:
    v26 = *((unsigned __int8 *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
LABEL_49:
    if (v18 <= 3)
      v27 = v18;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(unsigned __int16 *)((char *)a2 + v18);
  if (v26 >= 3)
    goto LABEL_49;
LABEL_53:
  if (v26 != 2)
  {
    if (v26 != 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v28 = ((unint64_t)a2 + v44) & v42;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)a1 + v44) & v42, v28, v46);
      v29 = (void *)(((((unint64_t)a1 + v44) & v42) + v45 + v11) & v43);
      v30 = (const void *)((v28 + v45 + v11) & v43);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v30, 1, v47))
      {
        memcpy(v29, v30, __n);
        if (v18 > 3)
          goto LABEL_70;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v29, v30, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v47);
        if (v18 > 3)
        {
LABEL_70:
          *((_BYTE *)a1 + v18) = 0;
          return a1;
        }
      }
      v34 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v34 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v34 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      goto LABEL_70;
    }
    v31 = *((unsigned __int8 *)a2 + v16);
    if (v31 >= 2)
    {
      if (v16 <= 3)
        v32 = v16;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      *a1 = *a2;
      v36 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v40 + 32))(a1, a2, v41);
      v36 = 0;
    }
    *((_BYTE *)a1 + v16) = v36;
    if (v18 > 3)
    {
LABEL_79:
      *((_BYTE *)a1 + v18) = 1;
      return a1;
    }
    v35 = 1;
    v37 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v37 <= 0xFFFC)
    {
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_79;
    }
LABEL_83:
    *(_DWORD *)((char *)a1 + v18) = v35;
    return a1;
  }
  *a1 = *a2;
  if (v18 <= 3)
  {
    v33 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v33 > 0xFFFC)
    {
      v35 = 2;
      goto LABEL_83;
    }
    if (v33 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v18) = 2;
      return a1;
    }
  }
  *((_BYTE *)a1 + v18) = 2;
  return a1;
}

uint64_t sub_2119D16E4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  int v28;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;

  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  v11 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= 8)
    v11 = 8;
  if (v11 + 1 > v10)
    v12 = v11 + 1;
  else
    v12 = v10;
  if (v12 <= 8)
    v12 = 8;
  if (v12 > 3)
  {
    v13 = 4;
LABEL_15:
    v15 = 8;
    goto LABEL_16;
  }
  v14 = ((1 << (8 * v12)) + 1) >> (8 * v12);
  if (v14 > 0xFFFC)
    goto LABEL_19;
  v13 = v14 + 3;
  if (v14 <= 0xFC)
    goto LABEL_15;
  v15 = 16;
LABEL_16:
  v16 = (1 << v15) - v13;
  if ((v16 & 0x80000000) == 0)
  {
    if (v12 > 3)
      goto LABEL_23;
LABEL_20:
    v17 = ((1 << (8 * v12)) + 1) >> (8 * v12);
    v18 = 2;
    if (v17 > 0xFFFC)
      v18 = 4;
    if (v17 > 0xFC)
      goto LABEL_24;
    goto LABEL_23;
  }
LABEL_19:
  v16 = 0x7FFFFFFF;
  if (v12 <= 3)
    goto LABEL_20;
LABEL_23:
  v18 = 1;
LABEL_24:
  if (!a2)
    return 0;
  if (a2 <= v16)
    goto LABEL_42;
  v19 = v18 + v12;
  v20 = 8 * v19;
  if (v19 <= 3)
  {
    v22 = ((a2 - v16 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (!v21)
        goto LABEL_42;
      goto LABEL_35;
    }
    if (v22 > 0xFF)
    {
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (!*(_WORD *)(a1 + v19))
        goto LABEL_42;
      goto LABEL_35;
    }
    if (v22 < 2)
    {
LABEL_42:
      if (v16)
      {
        if (v12 <= 3)
        {
          v30 = ((1 << (8 * v12)) + 1) >> (8 * v12);
          if (v30 > 0xFFFC)
          {
            v25 = *(_DWORD *)(a1 + v12);
            v26 = ~v25;
LABEL_52:
            v33 = 0x7FFFFFFF;
LABEL_53:
            if (v33 > v26)
              return -v25;
            else
              return 0;
          }
          v28 = v30 + 3;
          if (v30 > 0xFC)
          {
            v32 = *(unsigned __int16 *)(a1 + v12);
            v25 = v32 | 0xFFFF0000;
            v26 = v32 ^ 0xFFFF;
            v27 = 16;
          }
          else
          {
            v31 = *(unsigned __int8 *)(a1 + v12);
            v25 = v31 | 0xFFFFFF00;
            v26 = v31 ^ 0xFF;
            v27 = 8;
          }
        }
        else
        {
          v24 = *(unsigned __int8 *)(a1 + v12);
          v25 = v24 | 0xFFFFFF00;
          v26 = v24 ^ 0xFF;
          v27 = 8;
          v28 = 4;
        }
        v33 = (1 << v27) - v28;
        if ((v33 & 0x80000000) == 0)
          goto LABEL_53;
        goto LABEL_52;
      }
      return 0;
    }
  }
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_42;
LABEL_35:
  v23 = (v21 - 1) << v20;
  if (v19 > 3)
    v23 = 0;
  if ((_DWORD)v19)
  {
    if (v19 > 3)
      LODWORD(v19) = 4;
    __asm { BR              X12 }
  }
  return v16 + v23 + 1;
}

void sub_2119D19C0(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  size_t v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;

  v7 = *(_QWORD *)(a4[4] - 8);
  v8 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  if (v9)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = v11 + v8;
  v13 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v13 <= 8)
    v13 = 8;
  if (v13 + 1 > v12)
    v14 = v13 + 1;
  else
    v14 = v12;
  if (v14 <= 8)
    v14 = 8;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v19 = ((1 << v15) + 1) >> v15;
    if (v19 > 0xFFFC)
      goto LABEL_20;
    v16 = v19 + 3;
    if (v19 > 0xFC)
    {
      v17 = 16;
LABEL_14:
      v18 = (1 << v17) - v16;
      if ((v18 & 0x80000000) == 0)
      {
        if (v14 > 3)
          goto LABEL_24;
LABEL_21:
        v20 = ((1 << v15) + 1) >> v15;
        v21 = 2;
        if (v20 > 0xFFFC)
          v21 = 4;
        if (v20 > 0xFC)
        {
LABEL_25:
          v22 = v21 + v14;
          if (a3 <= v18)
          {
            v23 = 0;
          }
          else if (v22 <= 3)
          {
            v25 = ((a3 - v18 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
            if (HIWORD(v25))
            {
              v23 = 4u;
            }
            else if (v25 >= 0x100)
            {
              v23 = 2;
            }
            else
            {
              v23 = v25 > 1;
            }
          }
          else
          {
            v23 = 1u;
          }
          if (v18 < a2)
          {
            v24 = ~v18 + a2;
            if (v22 < 4)
            {
              if ((_DWORD)v22)
              {
                v26 = v24 & ~(-1 << (8 * v22));
                bzero(a1, v22);
                if ((_DWORD)v22 == 3)
                {
                  *(_WORD *)a1 = v26;
                  a1[2] = BYTE2(v26);
                }
                else if ((_DWORD)v22 == 2)
                {
                  *(_WORD *)a1 = v26;
                }
                else
                {
                  *a1 = v26;
                }
              }
            }
            else
            {
              bzero(a1, v22);
              *(_DWORD *)a1 = v24;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_24:
        v21 = 1;
        goto LABEL_25;
      }
LABEL_20:
      v18 = 0x7FFFFFFF;
      if (v14 > 3)
        goto LABEL_24;
      goto LABEL_21;
    }
  }
  else
  {
    v16 = 4;
  }
  v17 = 8;
  goto LABEL_14;
}

uint64_t sub_2119D1CBC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  unsigned int v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7 + v4;
  v9 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8)
    v9 = 8;
  if (v9 + 1 > v8)
    v10 = v9 + 1;
  else
    v10 = v8;
  if (v10 <= 8)
    v10 = 8;
  if (v10 > 3)
    goto LABEL_12;
  v12 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v12 > 0xFFFC)
  {
    result = *(unsigned int *)(a1 + v10);
  }
  else
  {
    if (v12 <= 0xFC)
    {
LABEL_12:
      result = *(unsigned __int8 *)(a1 + v10);
      goto LABEL_17;
    }
    result = *(unsigned __int16 *)(a1 + v10);
  }
LABEL_17:
  if (result >= 3)
  {
    if (v10 <= 3)
      v13 = v10;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_2119D1E14(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int *v18;
  unsigned int v19;
  int v20;

  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  result = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  if (v12 <= 8)
    v12 = 8;
  if (v12 + 1 > v10)
    v13 = v12 + 1;
  else
    v13 = v10;
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = v13;
  if (a2 > 2)
  {
    v15 = a2 - 3;
    if (v14 < 4)
    {
      v17 = (v15 >> (8 * v14)) + 3;
      v18 = (int *)&a1[v14];
      v19 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v19 > 0xFFFC)
      {
        *v18 = v17;
      }
      else if (v19 > 0xFC)
      {
        *(_WORD *)v18 = v17;
      }
      else
      {
        *(_BYTE *)v18 = v17;
      }
    }
    else
    {
      a1[v14] = 3;
    }
    if (v14 >= 4)
      v20 = 4;
    else
      v20 = v14;
    bzero(a1, v14);
    __asm { BR              X10 }
  }
  if (v14 > 3)
    goto LABEL_14;
  v16 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v16 > 0xFFFC)
  {
    *(_DWORD *)&a1[v14] = a2;
  }
  else
  {
    if (v16 <= 0xFC)
    {
LABEL_14:
      a1[v14] = a2;
      return result;
    }
    *(_WORD *)&a1[v14] = a2;
  }
  return result;
}

_QWORD *sub_2119D1FE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_2119D204C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2119D1FEC);
}

unint64_t sub_2119D1FEC(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2119D203C(unint64_t *a1)
{
  return sub_2119A0E98(*a1);
}

_QWORD *sub_2119D204C(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

unint64_t *sub_2119D2094(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_2119D1FEC(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_2119A0E98(v6);
  return a1;
}

unint64_t *sub_2119D20E8(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_2119A0E98(v4);
  return a1;
}

uint64_t sub_2119D2128(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_2119D2184(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2119D21DC(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_2119D21F8(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_2119D2208(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

uint64_t *sub_2119D2248(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84))
    v6 = *(_QWORD *)(v5 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64) + 1;
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v6 + v10) & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_2119D2410(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = swift_getAssociatedTypeWitness();
  v7 = v4 == 0;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = v5 + a1;
  if (v7)
    ++v9;
  v10 = (v9 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v10, v6);
  return result;
}

void *sub_2119D2504(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v15 = (const void *)(((unint64_t)a2 + v13) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    if (*(_DWORD *)(v11 + 84))
      v16 = *(_QWORD *)(v11 + 64);
    else
      v16 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v14, v15, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

void *sub_2119D267C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      return a1;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
  return a1;
}

void *sub_2119D2884(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v15 = (const void *)(((unint64_t)a2 + v13) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    if (*(_DWORD *)(v11 + 84))
      v16 = *(_QWORD *)(v11 + 64);
    else
      v16 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v14, v15, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

void *sub_2119D29FC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      return a1;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
  return a1;
}

uint64_t sub_2119D2C04(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if ((_DWORD)v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if ((_DWORD)v6)
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = v13 + v15;
  if (a2 <= v12)
    goto LABEL_35;
  v17 = v14 + (v16 & ~v15);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v20 < 2)
    {
LABEL_35:
      if (v12)
      {
        if (v7 >= v11)
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        else
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v16 + a1) & ~v15, v10, v8);
        if (v23 >= 2)
          return v23 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_35;
LABEL_26:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v12 + v21 + 1;
}

void sub_2119D2E08(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (v7)
    v14 = *(_QWORD *)(v6 + 64);
  else
    v14 = *(_QWORD *)(v6 + 64) + 1;
  v15 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v15;
  v16 = ((v14 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v15;
  if (a3 > v13)
  {
    if (v16 > 3)
    {
      v9 = 1u;
      if (v13 >= a2)
        goto LABEL_18;
LABEL_24:
      v18 = ~v13 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v9 = 4u;
      if (v13 < a2)
        goto LABEL_24;
LABEL_18:
      __asm { BR              X15 }
    }
    if (v17 >= 0x100)
      v9 = 2;
    else
      v9 = v17 > 1;
  }
  if (v13 < a2)
    goto LABEL_24;
  goto LABEL_18;
}

void sub_2119D3158()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2119D313CLL);
}

void sub_2119D3160()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2119D313CLL);
}

void sub_2119D3170()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2119D313CLL);
}

uint64_t *sub_2119D317C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_2119D324C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2119D32B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2119D3324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

void type metadata accessor for AsyncMerge2Sequence.Iterator()
{
  JUMPOUT(0x212BE4744);
}

void sub_2119D339C()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_2119D33AC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_2119D343C()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_2119D344C()
{
  return MEMORY[0x24BEE40A8];
}

uint64_t *sub_2119D3458(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  size_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  void *v31;
  char *v32;
  size_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  const void *v37;
  size_t v39;
  uint64_t v40;
  size_t __n;
  uint64_t v42;
  size_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  __n = v5;
  v42 = v9 + v7;
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = v9 + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_DWORD *)(v12 + 84);
  v15 = v13;
  v43 = v10;
  v16 = v10 + v13;
  v17 = v12;
  v18 = (v16 + ((v42 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~(unint64_t)v13;
  v19 = *(_QWORD *)(v12 + 64);
  if (!v14)
    ++v19;
  v20 = v18 + v19;
  v21 = v7 | *(_DWORD *)(v4 + 80) | v13;
  v22 = (v7 | *(_BYTE *)(v4 + 80) | v13);
  v23 = v21 & 0x100000;
  if (v22 > 7 || v23 != 0 || v20 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v26 + ((v22 + 16) & ~v22));
    swift_retain();
  }
  else
  {
    v39 = v19;
    v40 = v11;
    v27 = ~(unint64_t)v7;
    v28 = a1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
    {
      memcpy(a1, a2, __n);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
    v46 = ~v15;
    v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v30(((unint64_t)v28 + v8) & v27, ((unint64_t)a2 + v8) & v27, AssociatedTypeWitness);
    v31 = (void *)((v42 + (((unint64_t)v28 + v8) & v27)) & v27);
    v32 = (char *)((v42 + (((unint64_t)a2 + v8) & v27)) & v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v32, 1, AssociatedTypeWitness))
    {
      v33 = v43;
      memcpy(v31, v32, v43);
      v34 = v40;
    }
    else
    {
      v30((unint64_t)v31, (unint64_t)v32, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, AssociatedTypeWitness);
      v34 = v40;
      v33 = v43;
    }
    v35 = &v32[v33];
    v36 = (void *)(((unint64_t)v31 + v33 + v15) & v46);
    v37 = (const void *)((unint64_t)&v35[v15] & v46);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v37, 1, v34))
    {
      memcpy(v36, v37, v39);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v36, v37, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v36, 0, 1, v34);
    }
  }
  return v28;
}

uint64_t sub_2119D3724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + a1;
  if (!v5)
    ++v10;
  v11 = (v10 + v9) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v11) & ~v9;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v14, 1, AssociatedTypeWitness))
    v12(v14, AssociatedTypeWitness);
  v15 = *(_DWORD *)(v8 + 84);
  v16 = swift_getAssociatedTypeWitness();
  v17 = v15 == 0;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = v14 + v13;
  if (v17)
    ++v19;
  v20 = (v19 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v16);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v18 + 8))(v20, v16);
  return result;
}

void *sub_2119D3898(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  size_t v17;
  void *v18;
  size_t v19;
  int v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  void *v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v30 = a1;
  v14 = ((unint64_t)a1 + v8 + v12) & ~v12;
  v15 = ((unint64_t)a2 + v13) & ~v12;
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
  v16(v14, v15, AssociatedTypeWitness);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (void *)((v17 + v12 + v14) & ~v12);
  v19 = (v17 + v12 + v15) & ~v12;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v11 + 48))(v19, 1, AssociatedTypeWitness))
  {
    v20 = *(_DWORD *)(v11 + 84);
    if (v20)
      v21 = v17;
    else
      v21 = v17 + 1;
    memcpy(v18, (const void *)((v17 + v12 + v15) & ~v12), v21);
  }
  else
  {
    v16((unint64_t)v18, (v17 + v12 + v15) & ~v12, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, AssociatedTypeWitness);
    v20 = *(_DWORD *)(v11 + 84);
  }
  if (v20)
    v22 = v17;
  else
    v22 = v17 + 1;
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)(((unint64_t)v18 + v22 + v25) & ~v25);
  v27 = (const void *)((v22 + v25 + v19) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v28 = *(_QWORD *)(v24 + 64);
    else
      v28 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return v30;
}

void *sub_2119D3AE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  size_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  void *v34;
  size_t v35;
  void *v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v37 = a1;
  v16 = ((unint64_t)a1 + v11 + v14) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 24);
  v18(v16, v17, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v13 + 64);
  v20 = (void *)((v19 + v14 + v16) & ~v14);
  v21 = (void *)((v19 + v14 + v17) & ~v14);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v17) = v22(v20, 1, AssociatedTypeWitness);
  v23 = v22(v21, 1, AssociatedTypeWitness);
  if ((_DWORD)v17)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v20, v21, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, AssociatedTypeWitness);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      v18((unint64_t)v20, (unint64_t)v21, AssociatedTypeWitness);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v20, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v13 + 84))
    v24 = v19;
  else
    v24 = v19 + 1;
  memcpy(v20, v21, v24);
LABEL_22:
  if (*(_DWORD *)(v13 + 84))
    v25 = v19;
  else
    v25 = v19 + 1;
  v26 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)(((unint64_t)v20 + v25 + v28) & ~v28);
  v30 = (void *)(((unint64_t)v21 + v25 + v28) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v32 = v31(v29, 1, v26);
  v33 = v31(v30, 1, v26);
  if (v32)
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return v34;
    }
  }
  else
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v29, v30, v26);
      return v34;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v35 = *(_QWORD *)(v27 + 64);
  else
    v35 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v35);
  return v34;
}

void *sub_2119D3E04(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  size_t v17;
  void *v18;
  size_t v19;
  int v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  void *v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v30 = a1;
  v14 = ((unint64_t)a1 + v8 + v12) & ~v12;
  v15 = ((unint64_t)a2 + v13) & ~v12;
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32);
  v16(v14, v15, AssociatedTypeWitness);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (void *)((v17 + v12 + v14) & ~v12);
  v19 = (v17 + v12 + v15) & ~v12;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v11 + 48))(v19, 1, AssociatedTypeWitness))
  {
    v20 = *(_DWORD *)(v11 + 84);
    if (v20)
      v21 = v17;
    else
      v21 = v17 + 1;
    memcpy(v18, (const void *)((v17 + v12 + v15) & ~v12), v21);
  }
  else
  {
    v16((unint64_t)v18, (v17 + v12 + v15) & ~v12, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, AssociatedTypeWitness);
    v20 = *(_DWORD *)(v11 + 84);
  }
  if (v20)
    v22 = v17;
  else
    v22 = v17 + 1;
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)(((unint64_t)v18 + v22 + v25) & ~v25);
  v27 = (const void *)((v22 + v25 + v19) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v28 = *(_QWORD *)(v24 + 64);
    else
      v28 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return v30;
}

void *sub_2119D4054(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  size_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  void *v34;
  size_t v35;
  void *v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v37 = a1;
  v16 = ((unint64_t)a1 + v11 + v14) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40);
  v18(v16, v17, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v13 + 64);
  v20 = (void *)((v19 + v14 + v16) & ~v14);
  v21 = (void *)((v19 + v14 + v17) & ~v14);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v17) = v22(v20, 1, AssociatedTypeWitness);
  v23 = v22(v21, 1, AssociatedTypeWitness);
  if ((_DWORD)v17)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v20, v21, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, AssociatedTypeWitness);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      v18((unint64_t)v20, (unint64_t)v21, AssociatedTypeWitness);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v20, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v13 + 84))
    v24 = v19;
  else
    v24 = v19 + 1;
  memcpy(v20, v21, v24);
LABEL_22:
  if (*(_DWORD *)(v13 + 84))
    v25 = v19;
  else
    v25 = v19 + 1;
  v26 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)(((unint64_t)v20 + v25 + v28) & ~v28);
  v30 = (void *)(((unint64_t)v21 + v25 + v28) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v32 = v31(v29, 1, v26);
  v33 = v31(v30, 1, v26);
  if (v32)
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return v34;
    }
  }
  else
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v29, v30, v26);
      return v34;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v35 = *(_QWORD *)(v27 + 64);
  else
    v35 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v35);
  return v34;
}

uint64_t sub_2119D4370(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v37;
  uint64_t AssociatedTypeWitness;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = v9 - 1;
  if (!(_DWORD)v9)
    v11 = 0;
  v37 = v11;
  if (v11 <= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  v16 = v15 - 1;
  if (!(_DWORD)v15)
    v16 = 0;
  if (v16 <= v12)
    v16 = v12;
  if ((_DWORD)v6)
    v17 = *(_QWORD *)(v5 + 64);
  else
    v17 = *(_QWORD *)(v5 + 64) + 1;
  v18 = *(_QWORD *)(v8 + 64);
  if ((_DWORD)v9)
    v19 = *(_QWORD *)(v8 + 64);
  else
    v19 = v18 + 1;
  if ((_DWORD)v15)
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = *(_QWORD *)(v14 + 64) + 1;
  if (!a2)
    return 0;
  v21 = v13;
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = v17 + v22;
  v24 = v18 + v22;
  v25 = *(unsigned __int8 *)(v14 + 80);
  if (a2 <= v16)
    goto LABEL_44;
  v26 = v20 + ((v19 + v25 + ((v24 + (v23 & ~v22)) & ~v22)) & ~v25);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_28;
  v29 = ((a2 - v16 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v29))
  {
    v28 = *(_DWORD *)(a1 + v26);
    if (!v28)
      goto LABEL_44;
    goto LABEL_35;
  }
  if (v29 > 0xFF)
  {
    v28 = *(unsigned __int16 *)(a1 + v26);
    if (!*(_WORD *)(a1 + v26))
      goto LABEL_44;
    goto LABEL_35;
  }
  if (v29 >= 2)
  {
LABEL_28:
    v28 = *(unsigned __int8 *)(a1 + v26);
    if (!*(_BYTE *)(a1 + v26))
      goto LABEL_44;
LABEL_35:
    v30 = (v28 - 1) << v27;
    if (v26 > 3)
      v30 = 0;
    if ((_DWORD)v26)
    {
      if (v26 <= 3)
        v31 = v26;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    return v16 + v30 + 1;
  }
LABEL_44:
  if (!v16)
    return 0;
  if (v7 == v16)
  {
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  else
  {
    v33 = ~v22;
    v34 = (v23 + a1) & v33;
    if ((_DWORD)v9 == v16)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v34, v9, AssociatedTypeWitness);
    v35 = (v24 + v34) & v33;
    if (v37 == v16)
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v35, v9, AssociatedTypeWitness);
    else
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((v35 + v25 + v19) & ~v25, v15, v21);
  }
  if (v32 >= 2)
    return v32 - 1;
  else
    return 0;
}

void sub_2119D4630(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = v9 - 1;
  if (!v9)
    v11 = 0;
  if (v11 <= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = 0;
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = v15 - 1;
  if (!v15)
    v16 = 0;
  if (v16 <= v12)
    v17 = v12;
  else
    v17 = v16;
  if (v6)
    v18 = *(_QWORD *)(v5 + 64);
  else
    v18 = *(_QWORD *)(v5 + 64) + 1;
  v19 = *(_QWORD *)(v8 + 64);
  if (v9)
    v20 = *(_QWORD *)(v8 + 64);
  else
    v20 = v19 + 1;
  if (v15)
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  v22 = ((v20
        + *(unsigned __int8 *)(v14 + 80)
        + ((v19
          + *(unsigned __int8 *)(v8 + 80)
          + ((v18 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
      + v21;
  if (a3 > v17)
  {
    if (v22 <= 3)
    {
      v23 = ((a3 - v17 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
      if (HIWORD(v23))
      {
        v13 = 4u;
      }
      else if (v23 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v23 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  if (v17 < a2)
  {
    v24 = ~v17 + a2;
    if (v22 < 4)
    {
      if ((_DWORD)v22)
      {
        v25 = v24 & ~(-1 << (8 * v22));
        bzero(a1, v22);
        if ((_DWORD)v22 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if ((_DWORD)v22 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v22);
      *(_DWORD *)a1 = v24;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_2119D4910()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_2119D4918()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_2119D49AC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_2119D49C4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2119D49CC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2119D49DC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t *sub_2119D49E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (v6 & 0x100000) != 0 || v7 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_2119D4ADC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_2119D4B5C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_2119D4C10(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_2119D4D10(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_2119D4DC4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_2119D4EC4(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  if (a2 > v6)
  {
    v8 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (v9)
        goto LABEL_15;
    }
    else
    {
      if (v10 <= 0xFF)
      {
        if (v10 < 2)
          goto LABEL_22;
LABEL_8:
        v9 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_22;
LABEL_15:
        v11 = (v9 - 1) << v8;
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 > 3)
            LODWORD(v7) = 4;
          __asm { BR              X12 }
        }
        return v6 + v11 + 1;
      }
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v13 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_2119D5020(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  if (a3 > v9)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 >= a2)
LABEL_20:
        __asm { BR              X11 }
LABEL_13:
      v12 = ~v9 + a2;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v13 = v12 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v13;
            a1[2] = BYTE2(v13);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v13;
          }
          else
          {
            *a1 = v13;
          }
        }
      }
      else
      {
        bzero(a1, v10);
        *(_DWORD *)a1 = v12;
      }
      __asm { BR              X10 }
    }
    v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      v6 = 4u;
      if (v9 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v11 >= 0x100)
      v6 = 2;
    else
      v6 = v11 > 1;
  }
  if (v9 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_2119D51E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2119D51F0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_2119D5214()
{
  return swift_release();
}

uint64_t sub_2119D521C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_2119D5260(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

__n128 sub_2119D52BC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2119D52D0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_2119D531C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_2119D5364(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence.Iterator()
{
  JUMPOUT(0x212BE4744);
}

uint64_t sub_2119D53D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  double v46;
  int v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  double v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v62 = a3;
  v63 = a1;
  v5 = sub_211958C38(&qword_254ACBBC8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v55 - v11;
  v13 = type metadata accessor for LiveRelabilityStats(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_211A47208();
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  result = MEMORY[0x24BDAC7A8](v20, v21);
  v26 = (char *)v55 - v25;
  if (!a2)
    return result;
  v56 = v24;
  v60 = v17;
  v61 = v23;
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_211948D94(v27);
  swift_bridgeObjectRelease();
  v29 = v28[2];
  if (!v29)
    goto LABEL_25;
  v58 = v9;
  v59 = v26;
  v57 = v18;
  if (v28[4] != v63 || v28[5] != a2)
  {
    result = sub_211A48258();
    if ((result & 1) == 0)
    {
      if (v29 != 1)
      {
        v51 = v28 + 7;
        v52 = 1;
        while (1)
        {
          v53 = v52 + 1;
          if (__OFADD__(v52, 1))
            break;
          if (*(v51 - 1) == v63 && *v51 == a2)
            goto LABEL_6;
          result = sub_211A48258();
          if ((result & 1) != 0)
            goto LABEL_6;
          v51 += 2;
          ++v52;
          if (v53 == v29)
            goto LABEL_25;
        }
        __break(1u);
        return result;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
LABEL_6:
  swift_release();
  v30 = v59;
  sub_211A471FC();
  v31 = v3 + 160;
  swift_beginAccess();
  v32 = *(_QWORD *)(v3 + 160);
  v33 = *(_QWORD *)(v32 + 16);
  v55[1] = v31;
  if (!v33)
  {
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v38(v12, 1, 1, v13);
    v36 = v57;
    v35 = (uint64_t)v58;
LABEL_12:
    sub_211923EE8((uint64_t)v12, &qword_254ACBBC8);
    v39 = v61;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v35 + *(int *)(v13 + 24), v30, v36);
    *(_QWORD *)v35 = 0xBFF0000000000000;
    *(_BYTE *)(v35 + 8) = 0;
    v38((char *)v35, 0, 1, v13);
    swift_beginAccess();
    sub_211A403CC(v35, v63, a2);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v30, v36);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_21195BB68(v63, a2);
  v36 = v57;
  v35 = (uint64_t)v58;
  if ((v37 & 1) != 0)
  {
    sub_211934794(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v14 + 72) * v34, (uint64_t)v12, type metadata accessor for LiveRelabilityStats);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v38(v12, 0, 1, v13);
  }
  else
  {
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v38(v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    goto LABEL_12;
  v40 = v61;
  v55[0] = *(_QWORD *)(v61 + 8);
  ((void (*)(char *, uint64_t))v55[0])(v30, v36);
  v41 = (uint64_t)v60;
  sub_211942810((uint64_t)v12, (uint64_t)v60, type metadata accessor for LiveRelabilityStats);
  v42 = *(double *)v41;
  v43 = *(_BYTE *)(v41 + 8);
  v44 = v41 + *(int *)(v13 + 24);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v45(v30, v44, v36);
  v46 = -1.0;
  if (v42 == -1.0)
  {
    v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v62, 1, v36);
    v48 = (void (*)(uint64_t, uint64_t))v55[0];
    if (v47 != 1)
    {
      v49 = v56;
      sub_211A471FC();
      sub_211A4719C();
      v46 = v50;
      v48(v49, v36);
      v43 = 1;
    }
  }
  else
  {
    v46 = v42;
    v48 = (void (*)(uint64_t, uint64_t))v55[0];
  }
  v45((char *)(v35 + *(int *)(v13 + 24)), (uint64_t)v30, v36);
  *(double *)v35 = v46;
  *(_BYTE *)(v35 + 8) = v43;
  v38((char *)v35, 0, 1, v13);
  swift_beginAccess();
  sub_211A403CC(v35, v63, a2);
  swift_endAccess();
  sub_211934758((uint64_t)v60, type metadata accessor for LiveRelabilityStats);
  return ((uint64_t (*)(char *, uint64_t))v48)(v30, v36);
}

uint64_t sub_2119D589C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211958C38(&qword_254ACBBD8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v37 - v11);
  swift_beginAccess();
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v13 + 64);
  v39 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v41 = v13;
  v38 = v40 - 1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  if (!v17)
    goto LABEL_8;
LABEL_6:
  v25 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v26 = v25 | (v19 << 6);
  while (2)
  {
    v27 = *(_QWORD *)(v41 + 56);
    v28 = (_QWORD *)(*(_QWORD *)(v41 + 48) + 16 * v26);
    v29 = v28[1];
    *v8 = *v28;
    v8[1] = v29;
    v30 = v27 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ShallowRelabilityStats(0) - 8) + 72) * v26;
    v31 = sub_211958C38(&qword_254ACBBE0);
    sub_211934794(v30, (uint64_t)v8 + *(int *)(v31 + 48), type metadata accessor for ShallowRelabilityStats);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 0, 1, v31);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2119D5C2C((uint64_t)v8, (uint64_t)v12);
      v36 = sub_211958C38(&qword_254ACBBE0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v12, 1, v36) == 1)
        return swift_release();
      v20 = *v12;
      v21 = v12[1];
      v22 = (uint64_t)v12 + *(int *)(v36 + 48);
      v23 = sub_211A47208();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
      v24 = *(unsigned __int8 *)(v22 + 8);
      sub_211934758(v22, type metadata accessor for ShallowRelabilityStats);
      sub_211945344(v20, v21, (uint64_t)v4, v24);
      swift_bridgeObjectRelease();
      result = sub_211923EE8((uint64_t)v4, qword_254AC8A78);
      if (v17)
        goto LABEL_6;
LABEL_8:
      v32 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v32 < v40)
      {
        v33 = *(_QWORD *)(v39 + 8 * v32);
        if (v33)
          goto LABEL_11;
        v34 = v19 + 2;
        ++v19;
        if (v32 + 1 < v40)
        {
          v33 = *(_QWORD *)(v39 + 8 * v34);
          if (v33)
            goto LABEL_14;
          v19 = v32 + 1;
          if (v32 + 2 < v40)
          {
            v33 = *(_QWORD *)(v39 + 8 * (v32 + 2));
            if (v33)
            {
              v32 += 2;
              goto LABEL_11;
            }
            v34 = v32 + 3;
            v19 = v32 + 2;
            if (v32 + 3 < v40)
              break;
          }
        }
      }
LABEL_25:
      v35 = sub_211958C38(&qword_254ACBBE0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v8, 1, 1, v35);
      v17 = 0;
    }
    v33 = *(_QWORD *)(v39 + 8 * v34);
    if (v33)
    {
LABEL_14:
      v32 = v34;
LABEL_11:
      v17 = (v33 - 1) & v33;
      v26 = __clz(__rbit64(v33)) + (v32 << 6);
      v19 = v32;
      continue;
    }
    break;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v40)
    {
      v19 = v38;
      goto LABEL_25;
    }
    v33 = *(_QWORD *)(v39 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2119D5C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254ACBBD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for FMDemoLocation()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FMDemoLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMDemoLocation(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMDemoLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 72) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation()
{
  return &type metadata for FMDemoLocation;
}

uint64_t sub_2119D5EB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119D5EEC + 4 * byte_211A4E9E0[a1]))(0x656475746974616CLL, 0xE800000000000000);
}

uint64_t sub_2119D5EEC()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_2119D5F08(uint64_t a1)
{
  return a1 + 2805;
}

unint64_t sub_2119D5F10()
{
  return 0xD000000000000012;
}

unint64_t sub_2119D5F30()
{
  return 0xD000000000000010;
}

uint64_t sub_2119D5F4C()
{
  return 0x6C6562616CLL;
}

uint64_t sub_2119D5F60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = sub_211958C38(&qword_254ACBBE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_2119D61F8();
  sub_211A4836C();
  v9[15] = 0;
  sub_211A481C8();
  if (!v1)
  {
    v9[14] = 1;
    sub_211A481C8();
    v9[13] = 2;
    sub_211A481A4();
    v9[12] = 3;
    sub_211A481A4();
    v9[11] = 4;
    sub_211A481A4();
    v9[10] = 5;
    sub_211A48198();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_2119D6120()
{
  unsigned __int8 *v0;

  return sub_2119D5EB8(*v0);
}

uint64_t sub_2119D6128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2119D623C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2119D614C()
{
  sub_2119D61F8();
  return sub_211A48390();
}

uint64_t sub_2119D6174()
{
  sub_2119D61F8();
  return sub_211A4839C();
}

__n128 sub_2119D619C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_2119D6494(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2119D61E4(_QWORD *a1)
{
  return sub_2119D5F60(a1);
}

unint64_t sub_2119D61F8()
{
  unint64_t result;

  result = qword_254ACBBF0;
  if (!qword_254ACBBF0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EB1C, &type metadata for FMDemoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBBF0);
  }
  return result;
}

uint64_t sub_2119D623C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000211A52610 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000211A55D60 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_211A48258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2119D6494@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_211958C38(&qword_254ACBBF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_2119D61F8();
  sub_211A48360();
  if (v2)
    return sub_211931C34((uint64_t)a1);
  v35 = 0;
  sub_211A4815C();
  v11 = v10;
  v34 = 1;
  sub_211A4815C();
  v13 = v12;
  v33 = 2;
  v14 = sub_211A48120();
  v16 = v15;
  v32 = 3;
  v17 = sub_211A48120();
  v28 = v18;
  v29 = v17;
  v31 = 4;
  v19 = sub_211A48120();
  HIDWORD(v26) = v20;
  v27 = v19;
  v30 = 5;
  v21 = sub_211A48114();
  v22 = v9;
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v5);
  result = sub_211931C34((uint64_t)a1);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = v16 & 1;
  *(_QWORD *)(a2 + 32) = v29;
  *(_BYTE *)(a2 + 40) = v28 & 1;
  *(_QWORD *)(a2 + 48) = v27;
  *(_BYTE *)(a2 + 56) = BYTE4(v26) & 1;
  *(_QWORD *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v24;
  return result;
}

uint64_t storeEnumTagSinglePayload for FMDemoLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2119D6724 + 4 * byte_211A4E9EB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2119D6758 + 4 * byte_211A4E9E6[v4]))();
}

uint64_t sub_2119D6758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119D6760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119D6768);
  return result;
}

uint64_t sub_2119D6774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119D677CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2119D6780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119D6788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMDemoLocation.CodingKeys()
{
  return &type metadata for FMDemoLocation.CodingKeys;
}

unint64_t sub_2119D67A8()
{
  unint64_t result;

  result = qword_254ACBC00;
  if (!qword_254ACBC00)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EAF4, &type metadata for FMDemoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC00);
  }
  return result;
}

unint64_t sub_2119D67F0()
{
  unint64_t result;

  result = qword_254ACBC08;
  if (!qword_254ACBC08)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EA64, &type metadata for FMDemoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC08);
  }
  return result;
}

unint64_t sub_2119D6838()
{
  unint64_t result;

  result = qword_254ACBC10;
  if (!qword_254ACBC10)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EA8C, &type metadata for FMDemoLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC10);
  }
  return result;
}

uint64_t sub_2119D687C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_211974C44(*a1, *a2);
}

uint64_t sub_2119D6888()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119D6918()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119D6984()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119D6A10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119D6E80();
  *a1 = result;
  return result;
}

void sub_2119D6A3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x776F6C6C616873;
  if (v2 != 1)
  {
    v5 = 1885693284;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2119D6A8C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2119D6AE8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2119D6B48()
{
  sub_21192E9E8();
  return sub_211A48390();
}

uint64_t sub_2119D6B70()
{
  sub_21192E9E8();
  return sub_211A4839C();
}

uint64_t sub_2119D6B98(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v13 = a4;
  v6 = sub_211958C38(&qword_254ACBC28);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_21192E9E8();
  sub_211A4836C();
  v15 = 0;
  sub_211A481B0();
  if (v4)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v14 = 1;
  sub_211A481B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119D6D20(_QWORD *a1)
{
  uint64_t v1;

  return sub_2119D6B98(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_2119D6D3C(uint64_t a1, uint64_t a2)
{
  return sub_2119D6D58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_2119D6D58(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;

  if (a1 == a4 && a2 == a5 || (v8 = 0, (sub_211A48258() & 1) != 0))
  {
    if (a3)
    {
      if (a3 == 1)
        v9 = 0x776F6C6C616873;
      else
        v9 = 1885693284;
      if (a3 == 1)
        v10 = 0xE700000000000000;
      else
        v10 = 0xE400000000000000;
      v11 = a6;
      if (a6)
      {
LABEL_12:
        if (v11 == 1)
          v12 = 0x776F6C6C616873;
        else
          v12 = 1885693284;
        if (v11 == 1)
          v13 = 0xE700000000000000;
        else
          v13 = 0xE400000000000000;
        if (v9 != v12)
          goto LABEL_24;
LABEL_22:
        if (v10 == v13)
        {
          v8 = 1;
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v8 & 1;
        }
LABEL_24:
        v8 = sub_211A48258();
        goto LABEL_25;
      }
    }
    else
    {
      v10 = 0xE400000000000000;
      v9 = 1701736302;
      v11 = a6;
      if (a6)
        goto LABEL_12;
    }
    v13 = 0xE400000000000000;
    if (v9 != 1701736302)
      goto LABEL_24;
    goto LABEL_22;
  }
  return v8 & 1;
}

uint64_t sub_2119D6E80()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t storeEnumTagSinglePayload for FMFLocateInProgressStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2119D6F14 + 4 * byte_211A4EB7F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2119D6F48 + 4 * byte_211A4EB7A[v4]))();
}

uint64_t sub_2119D6F48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119D6F50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119D6F58);
  return result;
}

uint64_t sub_2119D6F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119D6F6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2119D6F70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119D6F78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocateInProgressStatus()
{
  return &type metadata for FMFLocateInProgressStatus;
}

unint64_t sub_2119D6F98()
{
  unint64_t result;

  result = qword_254ACBC30;
  if (!qword_254ACBC30)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4ECC4, &type metadata for FMFLocateInProgressStatus);
    atomic_store(result, (unint64_t *)&qword_254ACBC30);
  }
  return result;
}

unint64_t sub_2119D6FE0()
{
  unint64_t result;

  result = qword_254ACBC38;
  if (!qword_254ACBC38)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EDB4, &type metadata for FMFLocateInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBC38);
  }
  return result;
}

uint64_t sub_2119D7024(char *a1, unsigned __int8 *a2)
{
  return sub_211974EA4(*a1, *a2);
}

uint64_t sub_2119D7030()
{
  return sub_2119AD4BC();
}

uint64_t sub_2119D7038()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119D70BC()
{
  return sub_2119BBFEC();
}

uint64_t sub_2119D70C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119D7220();
  *a1 = result;
  return result;
}

void sub_2119D70F0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0x8000000211A52FC0;
  if (v2 != 1)
    v4 = 0x8000000211A52FE0;
  v5 = v2 == 0;
  if (*v1)
    v6 = 0xD000000000000011;
  else
    v6 = 0x6E6F697461636F6CLL;
  if (!v5)
    v3 = v4;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_2119D7158@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119D7220();
  *a1 = result;
  return result;
}

void sub_2119D717C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2119D7188()
{
  sub_2119626F8();
  return sub_211A48390();
}

uint64_t sub_2119D71B0()
{
  sub_2119626F8();
  return sub_211A4839C();
}

unint64_t sub_2119D71DC()
{
  unint64_t result;

  result = qword_254ACBD10;
  if (!qword_254ACBD10)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4EFB0, &type metadata for FMFMyLocationResponse.MyLocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBD10);
  }
  return result;
}

uint64_t sub_2119D7220()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t *sub_2119D7268(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  int *v43;
  uint64_t v44;
  unsigned int (*v45)(_QWORD *, uint64_t, int *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(_OWORD *, uint64_t, uint64_t);
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v112;
  char *__dst;
  void *__dsta;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  uint64_t *v118;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v16 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_211A4713C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_211958C38(&qword_254AC8C98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (uint64_t *)((char *)a1 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[9];
    v26 = a3[10];
    v27 = (uint64_t *)((char *)a1 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v118 = a1;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    v32 = sub_211A47208();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v33 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v117 = (unsigned int (*)(char *, uint64_t, uint64_t))v34;
    v116 = v33;
    if (v34(v31, 1, v32))
    {
      v35 = sub_211958C38(qword_254AC8A78);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v16 = v118;
    v36 = a3[11];
    v37 = a3[12];
    v38 = (uint64_t *)((char *)v118 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = (uint64_t *)((char *)v118 + v37);
    v42 = (uint64_t *)((char *)a2 + v37);
    v43 = (int *)type metadata accessor for FMFLocationAlert();
    v44 = *((_QWORD *)v43 - 1);
    v45 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v44 + 48);
    swift_bridgeObjectRetain();
    if (v45(v42, 1, v43))
    {
      v46 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v112 = v44;
      v115 = v32;
      v47 = v42[1];
      *v41 = *v42;
      v41[1] = v47;
      *((_OWORD *)v41 + 1) = *((_OWORD *)v42 + 1);
      v41[4] = v42[4];
      *((_BYTE *)v41 + 40) = *((_BYTE *)v42 + 40);
      *((_BYTE *)v41 + 41) = *((_BYTE *)v42 + 41);
      *((_WORD *)v41 + 21) = *((_WORD *)v42 + 21);
      v48 = v43[12];
      v49 = (_OWORD *)((char *)v41 + v48);
      v50 = (_OWORD *)((char *)v42 + v48);
      v51 = type metadata accessor for FMFSchedule();
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v52 + 48);
      swift_bridgeObjectRetain();
      if (v53(v50, 1, v51))
      {
        v54 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v55 = v50[1];
        *v49 = *v50;
        v49[1] = v55;
        v49[2] = v50[2];
        v56 = *(int *)(v51 + 40);
        __dst = (char *)v49 + v56;
        v57 = (char *)v50 + v56;
        v58 = sub_211A47304();
        v59 = *(_QWORD *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          v60 = sub_211958C38(&qword_254AC7C38);
          memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(__dst, v57, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v58);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      v61 = v43[13];
      v62 = (_QWORD *)((char *)v41 + v61);
      v63 = (_QWORD *)((char *)v42 + v61);
      v64 = v63[1];
      *v62 = *v63;
      v62[1] = v64;
      v65 = v43[14];
      v66 = (_QWORD *)((char *)v41 + v65);
      v67 = (_QWORD *)((char *)v42 + v65);
      __dsta = (void *)v67[1];
      *v66 = *v67;
      v66[1] = __dsta;
      *((_BYTE *)v41 + v43[15]) = *((_BYTE *)v42 + v43[15]);
      *(_QWORD *)((char *)v41 + v43[16]) = *(_QWORD *)((char *)v42 + v43[16]);
      *(_QWORD *)((char *)v41 + v43[17]) = *(_QWORD *)((char *)v42 + v43[17]);
      *(_QWORD *)((char *)v41 + v43[18]) = *(_QWORD *)((char *)v42 + v43[18]);
      v68 = v43[19];
      v69 = (_QWORD *)((char *)v41 + v68);
      v70 = (_QWORD *)((char *)v42 + v68);
      v71 = v70[1];
      *v69 = *v70;
      v69[1] = v71;
      v72 = v43[20];
      v73 = (char *)v41 + v72;
      v74 = (char *)v42 + v72;
      v75 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v73[16] = v74[16];
      v73[17] = v74[17];
      *((_BYTE *)v41 + v43[21]) = *((_BYTE *)v42 + v43[21]);
      v76 = v43[22];
      v77 = (_QWORD *)((char *)v41 + v76);
      v78 = (_QWORD *)((char *)v42 + v76);
      v79 = v78[1];
      *v77 = *v78;
      v77[1] = v79;
      v80 = v43[23];
      v81 = (_QWORD *)((char *)v41 + v80);
      v82 = (_QWORD *)((char *)v42 + v80);
      v83 = *(_QWORD *)((char *)v42 + v80 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v83)
      {
        v84 = v82[1];
        *v81 = *v82;
        v81[1] = v84;
        v85 = v82[3];
        v81[2] = v82[2];
        v81[3] = v85;
        v86 = v82[5];
        v81[4] = v82[4];
        v81[5] = v86;
        v87 = v82[7];
        v81[6] = v82[6];
        v81[7] = v87;
        v88 = v82[9];
        v81[8] = v82[8];
        v81[9] = v88;
        v89 = v82[11];
        v81[10] = v82[10];
        v81[11] = v89;
        v90 = v82[13];
        v81[12] = v82[12];
        v81[13] = v90;
        v91 = v82[15];
        v81[14] = v82[14];
        v81[15] = v91;
        v92 = v82[17];
        v81[16] = v82[16];
        v81[17] = v92;
        v93 = v82[19];
        v81[18] = v82[18];
        v81[19] = v93;
        v81[20] = v82[20];
        v81[21] = v83;
        v94 = v82[23];
        v81[22] = v82[22];
        v81[23] = v94;
        v95 = v82[25];
        v81[24] = v82[24];
        v81[25] = v95;
        v96 = v82[27];
        v81[26] = v82[26];
        v81[27] = v96;
        v97 = v82[29];
        v81[28] = v82[28];
        v81[29] = v97;
        v98 = v82[31];
        v81[30] = v82[30];
        v81[31] = v98;
        v99 = v82[33];
        v81[32] = v82[32];
        v81[33] = v99;
        v100 = v82[35];
        v81[34] = v82[34];
        v81[35] = v100;
        v101 = v82[36];
        v102 = v82[37];
        v81[36] = v101;
        v81[37] = v102;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy(v81, v82, 0x130uLL);
      }
      *((_BYTE *)v41 + v43[24]) = *((_BYTE *)v42 + v43[24]);
      *((_BYTE *)v41 + v43[25]) = *((_BYTE *)v42 + v43[25]);
      v103 = v43[26];
      v104 = (char *)v41 + v103;
      v105 = (char *)v42 + v103;
      v16 = v118;
      if (v117((char *)v42 + v103, 1, v115))
      {
        v106 = sub_211958C38(qword_254AC8A78);
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v104, v105, v115);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v104, 0, 1, v115);
      }
      v107 = v43[27];
      v108 = (char *)v41 + v107;
      v109 = (char *)v42 + v107;
      if (v117(v109, 1, v115))
      {
        v110 = sub_211958C38(qword_254AC8A78);
        memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v108, v109, v115);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v108, 0, 1, v115);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v112 + 56))(v41, 0, 1, v43);
    }
  }
  return v16;
}

uint64_t sub_2119D79C0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_211A4713C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[10];
  v8 = sub_211A47208();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v11 = a1 + a2[12];
  v12 = (int *)type metadata accessor for FMFLocationAlert();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v14 = v11 + v12[12];
    v15 = type metadata accessor for FMFSchedule();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v16 = v14 + *(int *)(v15 + 40);
      v17 = sub_211A47304();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v11 + v12[23] + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v19 = v11 + v12[26];
    if (!v10(v19, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
    v20 = v11 + v12[27];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v20, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v20, v8);
  }
  return result;
}

_QWORD *sub_2119D7CF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int *v41;
  uint64_t v42;
  unsigned int (*v43)(_QWORD *, uint64_t, int *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(_OWORD *, uint64_t, uint64_t);
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *__dst;
  void *__dsta;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  _QWORD *v116;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_211A4713C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_211958C38(&qword_254AC8C98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v116 = a1;
  v27 = (char *)a1 + v23;
  v28 = (char *)a2 + v23;
  v29 = sub_211A47208();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v115 = v31;
  v114 = v30;
  if (v31(v28, 1, v29))
  {
    v32 = sub_211958C38(qword_254AC8A78);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v33 = v116;
  v34 = a3[11];
  v35 = a3[12];
  v36 = (_QWORD *)((char *)v116 + v34);
  v37 = (_QWORD *)((char *)a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = (_QWORD *)((char *)v116 + v35);
  v40 = (_QWORD *)((char *)a2 + v35);
  v41 = (int *)type metadata accessor for FMFLocationAlert();
  v42 = *((_QWORD *)v41 - 1);
  v43 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v42 + 48);
  swift_bridgeObjectRetain();
  if (v43(v40, 1, v41))
  {
    v44 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v112 = v42;
    v113 = v29;
    v45 = v40[1];
    *v39 = *v40;
    v39[1] = v45;
    *((_OWORD *)v39 + 1) = *((_OWORD *)v40 + 1);
    v39[4] = v40[4];
    *((_BYTE *)v39 + 40) = *((_BYTE *)v40 + 40);
    *((_BYTE *)v39 + 41) = *((_BYTE *)v40 + 41);
    *((_WORD *)v39 + 21) = *((_WORD *)v40 + 21);
    v46 = v41[12];
    v47 = (_OWORD *)((char *)v39 + v46);
    v48 = (_OWORD *)((char *)v40 + v46);
    v49 = type metadata accessor for FMFSchedule();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      v52 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = v48[1];
      *v47 = *v48;
      v47[1] = v53;
      v47[2] = v48[2];
      v54 = *(int *)(v49 + 40);
      __dst = (char *)v47 + v54;
      v55 = (char *)v48 + v54;
      v56 = sub_211A47304();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = sub_211958C38(&qword_254AC7C38);
        memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dst, v55, v56);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v56);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v59 = v41[13];
    v60 = (_QWORD *)((char *)v39 + v59);
    v61 = (_QWORD *)((char *)v40 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = v41[14];
    v64 = (_QWORD *)((char *)v39 + v63);
    v65 = (_QWORD *)((char *)v40 + v63);
    __dsta = (void *)v65[1];
    *v64 = *v65;
    v64[1] = __dsta;
    *((_BYTE *)v39 + v41[15]) = *((_BYTE *)v40 + v41[15]);
    *(_QWORD *)((char *)v39 + v41[16]) = *(_QWORD *)((char *)v40 + v41[16]);
    *(_QWORD *)((char *)v39 + v41[17]) = *(_QWORD *)((char *)v40 + v41[17]);
    *(_QWORD *)((char *)v39 + v41[18]) = *(_QWORD *)((char *)v40 + v41[18]);
    v66 = v41[19];
    v67 = (_QWORD *)((char *)v39 + v66);
    v68 = (_QWORD *)((char *)v40 + v66);
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    v70 = v41[20];
    v71 = (char *)v39 + v70;
    v72 = (char *)v40 + v70;
    v73 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *((_QWORD *)v71 + 1) = v73;
    v71[16] = v72[16];
    v71[17] = v72[17];
    *((_BYTE *)v39 + v41[21]) = *((_BYTE *)v40 + v41[21]);
    v74 = v41[22];
    v75 = (_QWORD *)((char *)v39 + v74);
    v76 = (_QWORD *)((char *)v40 + v74);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    v78 = v41[23];
    v79 = (_QWORD *)((char *)v39 + v78);
    v80 = (_QWORD *)((char *)v40 + v78);
    v81 = *(_QWORD *)((char *)v40 + v78 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v81)
    {
      v82 = v80[1];
      *v79 = *v80;
      v79[1] = v82;
      v83 = v80[3];
      v79[2] = v80[2];
      v79[3] = v83;
      v84 = v80[5];
      v79[4] = v80[4];
      v79[5] = v84;
      v85 = v80[7];
      v79[6] = v80[6];
      v79[7] = v85;
      v86 = v80[9];
      v79[8] = v80[8];
      v79[9] = v86;
      v87 = v80[11];
      v79[10] = v80[10];
      v79[11] = v87;
      v88 = v80[13];
      v79[12] = v80[12];
      v79[13] = v88;
      v89 = v80[15];
      v79[14] = v80[14];
      v79[15] = v89;
      v90 = v80[17];
      v79[16] = v80[16];
      v79[17] = v90;
      v91 = v80[19];
      v79[18] = v80[18];
      v79[19] = v91;
      v79[20] = v80[20];
      v79[21] = v81;
      v92 = v80[23];
      v79[22] = v80[22];
      v79[23] = v92;
      v93 = v80[25];
      v79[24] = v80[24];
      v79[25] = v93;
      v94 = v80[27];
      v79[26] = v80[26];
      v79[27] = v94;
      v95 = v80[29];
      v79[28] = v80[28];
      v79[29] = v95;
      v96 = v80[31];
      v79[30] = v80[30];
      v79[31] = v96;
      v97 = v80[33];
      v79[32] = v80[32];
      v79[33] = v97;
      v98 = v80[35];
      v79[34] = v80[34];
      v79[35] = v98;
      v99 = v80[36];
      v100 = v80[37];
      v79[36] = v99;
      v79[37] = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v79, v80, 0x130uLL);
    }
    *((_BYTE *)v39 + v41[24]) = *((_BYTE *)v40 + v41[24]);
    *((_BYTE *)v39 + v41[25]) = *((_BYTE *)v40 + v41[25]);
    v101 = v41[26];
    v102 = (char *)v39 + v101;
    v103 = (char *)v40 + v101;
    v33 = v116;
    if (v115((char *)v40 + v101, 1, v113))
    {
      v104 = sub_211958C38(qword_254AC8A78);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v102, v103, v113);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v102, 0, 1, v113);
    }
    v105 = v41[27];
    v106 = (char *)v39 + v105;
    v107 = (char *)v40 + v105;
    if (v115(v107, 1, v113))
    {
      v108 = sub_211958C38(qword_254AC8A78);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v106, v107, v113);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v106, 0, 1, v113);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v112 + 56))(v39, 0, 1, v41);
  }
  return v33;
}

_QWORD *sub_2119D8420(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, int *);
  int v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  size_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v105;
  char *v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  uint64_t v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  char *v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  unsigned int (*v152)(char *, uint64_t, uint64_t);
  uint64_t (*v153)(uint64_t, uint64_t, uint64_t);
  char *v154;
  char *v155;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_211A4713C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_211958C38(&qword_254AC8C98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_211A47208();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    v32 = sub_211958C38(qword_254AC8A78);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  v33 = a3[11];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[12];
  v37 = (uint64_t)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = (int *)type metadata accessor for FMFLocationAlert();
  v40 = *((_QWORD *)v39 - 1);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41((uint64_t)v38, 1, v39);
  if (!v42)
  {
    if (v43)
    {
      sub_211934758(v37, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    v151 = v28;
    v153 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29;
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *(_QWORD *)(v37 + 8) = *((_QWORD *)v38 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
    *(_QWORD *)(v37 + 24) = *((_QWORD *)v38 + 3);
    *(_QWORD *)(v37 + 32) = *((_QWORD *)v38 + 4);
    *(_BYTE *)(v37 + 40) = v38[40];
    *(_BYTE *)(v37 + 41) = v38[41];
    *(_BYTE *)(v37 + 42) = v38[42];
    *(_BYTE *)(v37 + 43) = v38[43];
    v55 = v39[12];
    v56 = (char *)(v37 + v55);
    v155 = v38;
    v57 = &v38[v55];
    v58 = type metadata accessor for FMFSchedule();
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
    v61 = v60(v56, 1, v58);
    v62 = v60(v57, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        v148 = v27;
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
        *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
        *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
        *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
        *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
        v63 = *(int *)(v58 + 40);
        v64 = &v56[v63];
        v65 = &v57[v63];
        v66 = sub_211A47304();
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = sub_211958C38(&qword_254AC7C38);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        v27 = v148;
        v76 = v155;
        goto LABEL_50;
      }
    }
    else
    {
      if (!v62)
      {
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
        *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
        *((_QWORD *)v56 + 3) = *((_QWORD *)v57 + 3);
        *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
        *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
        v105 = *(int *)(v58 + 40);
        v56 += v105;
        v106 = &v57[v105];
        v58 = sub_211A47304();
        v59 = *(_QWORD *)(v58 - 8);
        v107 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
        v108 = v107(v56, 1, v58);
        v109 = v107(v106, 1, v58);
        if (v108)
        {
          v76 = v155;
          if (!v109)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v106, v58);
LABEL_50:
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_54:
            v77 = v153;
LABEL_55:
            v111 = v39[13];
            v112 = (_QWORD *)(v37 + v111);
            v113 = &v76[v111];
            *v112 = *(_QWORD *)v113;
            v112[1] = *((_QWORD *)v113 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v114 = v39[14];
            v115 = (_QWORD *)(v37 + v114);
            v116 = &v76[v114];
            *v115 = *(_QWORD *)v116;
            v115[1] = *((_QWORD *)v116 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v37 + v39[15]) = v76[v39[15]];
            *(_QWORD *)(v37 + v39[16]) = *(_QWORD *)&v76[v39[16]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v37 + v39[17]) = *(_QWORD *)&v76[v39[17]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v37 + v39[18]) = *(_QWORD *)&v76[v39[18]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v117 = v39[19];
            v118 = (_QWORD *)(v37 + v117);
            v119 = &v76[v117];
            *v118 = *(_QWORD *)v119;
            v118[1] = *((_QWORD *)v119 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v120 = v39[20];
            v121 = v37 + v120;
            v122 = v76;
            v123 = &v76[v120];
            *(_QWORD *)v121 = *(_QWORD *)v123;
            *(_QWORD *)(v121 + 8) = *((_QWORD *)v123 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v121 + 16) = v123[16];
            *(_BYTE *)(v121 + 17) = v123[17];
            *(_BYTE *)(v37 + v39[21]) = v122[v39[21]];
            v124 = v39[22];
            v125 = (_QWORD *)(v37 + v124);
            v126 = &v122[v124];
            *v125 = *(_QWORD *)v126;
            v125[1] = *((_QWORD *)v126 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v127 = v39[23];
            v128 = (_QWORD *)(v37 + v127);
            v129 = &v122[v127];
            v130 = *(_QWORD *)(v37 + v127 + 168);
            v131 = *((_QWORD *)v129 + 21);
            if (v130)
            {
              if (v131)
              {
                *v128 = *(_QWORD *)v129;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[1] = *((_QWORD *)v129 + 1);
                v128[2] = *((_QWORD *)v129 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[3] = *((_QWORD *)v129 + 3);
                v128[4] = *((_QWORD *)v129 + 4);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[5] = *((_QWORD *)v129 + 5);
                v128[6] = *((_QWORD *)v129 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[7] = *((_QWORD *)v129 + 7);
                v128[8] = *((_QWORD *)v129 + 8);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[9] = *((_QWORD *)v129 + 9);
                v128[10] = *((_QWORD *)v129 + 10);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[11] = *((_QWORD *)v129 + 11);
                v128[12] = *((_QWORD *)v129 + 12);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[13] = *((_QWORD *)v129 + 13);
                v128[14] = *((_QWORD *)v129 + 14);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[15] = *((_QWORD *)v129 + 15);
                v128[16] = *((_QWORD *)v129 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[17] = *((_QWORD *)v129 + 17);
                v128[18] = *((_QWORD *)v129 + 18);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[19] = *((_QWORD *)v129 + 19);
                v128[20] = *((_QWORD *)v129 + 20);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[21] = *((_QWORD *)v129 + 21);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[22] = *((_QWORD *)v129 + 22);
                v128[23] = *((_QWORD *)v129 + 23);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[24] = *((_QWORD *)v129 + 24);
                v128[25] = *((_QWORD *)v129 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[26] = *((_QWORD *)v129 + 26);
                v128[27] = *((_QWORD *)v129 + 27);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[28] = *((_QWORD *)v129 + 28);
                v128[29] = *((_QWORD *)v129 + 29);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[30] = *((_QWORD *)v129 + 30);
                v128[31] = *((_QWORD *)v129 + 31);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[32] = *((_QWORD *)v129 + 32);
                v128[33] = *((_QWORD *)v129 + 33);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[34] = *((_QWORD *)v129 + 34);
                v128[35] = *((_QWORD *)v129 + 35);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v128[36] = *((_QWORD *)v129 + 36);
                v128[37] = *((_QWORD *)v129 + 37);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_62:
                *(_BYTE *)(v37 + v39[24]) = v155[v39[24]];
                *(_BYTE *)(v37 + v39[25]) = v155[v39[25]];
                v132 = v39[26];
                v133 = (void *)(v37 + v132);
                v134 = &v155[v132];
                v135 = v77(v37 + v132, 1, v27);
                v136 = v77((uint64_t)v134, 1, v27);
                if (v135)
                {
                  if (v136)
                  {
                    v137 = sub_211958C38(qword_254AC8A78);
                    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
                    v138 = v151;
                  }
                  else
                  {
                    v138 = v151;
                    (*(void (**)(void *, char *, uint64_t))(v151 + 16))(v133, v134, v27);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v151 + 56))(v133, 0, 1, v27);
                  }
                }
                else
                {
                  v138 = v151;
                  if (v136)
                  {
                    (*(void (**)(void *, uint64_t))(v151 + 8))(v133, v27);
                    v139 = sub_211958C38(qword_254AC8A78);
                    memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v151 + 24))(v133, v134, v27);
                  }
                }
                v140 = v39[27];
                v141 = (void *)(v37 + v140);
                v142 = &v155[v140];
                v143 = v77((uint64_t)v141, 1, v27);
                v144 = v77((uint64_t)v142, 1, v27);
                if (v143)
                {
                  if (!v144)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v141, v142, v27);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v141, 0, 1, v27);
                    return a1;
                  }
                }
                else
                {
                  if (!v144)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v138 + 24))(v141, v142, v27);
                    return a1;
                  }
                  (*(void (**)(void *, uint64_t))(v138 + 8))(v141, v27);
                }
                v52 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(qword_254AC8A78) - 8) + 64);
                v53 = v141;
                v54 = v142;
                goto LABEL_20;
              }
              sub_21196ECA4((uint64_t)v128);
            }
            else if (v131)
            {
              *v128 = *(_QWORD *)v129;
              v128[1] = *((_QWORD *)v129 + 1);
              v128[2] = *((_QWORD *)v129 + 2);
              v128[3] = *((_QWORD *)v129 + 3);
              v128[4] = *((_QWORD *)v129 + 4);
              v128[5] = *((_QWORD *)v129 + 5);
              v128[6] = *((_QWORD *)v129 + 6);
              v128[7] = *((_QWORD *)v129 + 7);
              v128[8] = *((_QWORD *)v129 + 8);
              v128[9] = *((_QWORD *)v129 + 9);
              v128[10] = *((_QWORD *)v129 + 10);
              v128[11] = *((_QWORD *)v129 + 11);
              v128[12] = *((_QWORD *)v129 + 12);
              v128[13] = *((_QWORD *)v129 + 13);
              v128[14] = *((_QWORD *)v129 + 14);
              v128[15] = *((_QWORD *)v129 + 15);
              v128[16] = *((_QWORD *)v129 + 16);
              v128[17] = *((_QWORD *)v129 + 17);
              v128[18] = *((_QWORD *)v129 + 18);
              v128[19] = *((_QWORD *)v129 + 19);
              v128[20] = *((_QWORD *)v129 + 20);
              v128[21] = *((_QWORD *)v129 + 21);
              v128[22] = *((_QWORD *)v129 + 22);
              v128[23] = *((_QWORD *)v129 + 23);
              v128[24] = *((_QWORD *)v129 + 24);
              v128[25] = *((_QWORD *)v129 + 25);
              v128[26] = *((_QWORD *)v129 + 26);
              v128[27] = *((_QWORD *)v129 + 27);
              v128[28] = *((_QWORD *)v129 + 28);
              v128[29] = *((_QWORD *)v129 + 29);
              v128[30] = *((_QWORD *)v129 + 30);
              v128[31] = *((_QWORD *)v129 + 31);
              v128[32] = *((_QWORD *)v129 + 32);
              v128[33] = *((_QWORD *)v129 + 33);
              v128[34] = *((_QWORD *)v129 + 34);
              v128[35] = *((_QWORD *)v129 + 35);
              v128[36] = *((_QWORD *)v129 + 36);
              v128[37] = *((_QWORD *)v129 + 37);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v77 = v153;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_62;
            }
            memcpy(v128, v129, 0x130uLL);
            goto LABEL_62;
          }
        }
        else
        {
          v76 = v155;
          if (!v109)
          {
            (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v106, v58);
            goto LABEL_54;
          }
          (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
        }
        v110 = sub_211958C38(&qword_254AC7C38);
        memcpy(v56, v106, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        goto LABEL_54;
      }
      sub_211934758((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
    }
    v75 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    v77 = v153;
    v76 = v155;
    goto LABEL_55;
  }
  if (v43)
  {
LABEL_19:
    v52 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2D0) - 8) + 64);
    v53 = (void *)v37;
    v54 = v38;
LABEL_20:
    memcpy(v53, v54, v52);
    return a1;
  }
  v145 = v40;
  v150 = v28;
  v152 = v29;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_QWORD *)(v37 + 8) = *((_QWORD *)v38 + 1);
  *(_QWORD *)(v37 + 16) = *((_QWORD *)v38 + 2);
  *(_QWORD *)(v37 + 24) = *((_QWORD *)v38 + 3);
  *(_QWORD *)(v37 + 32) = *((_QWORD *)v38 + 4);
  *(_BYTE *)(v37 + 40) = v38[40];
  *(_BYTE *)(v37 + 41) = v38[41];
  *(_BYTE *)(v37 + 42) = v38[42];
  *(_BYTE *)(v37 + 43) = v38[43];
  v44 = v39[12];
  v45 = (_QWORD *)(v37 + v44);
  v154 = v38;
  v46 = &v38[v44];
  v47 = type metadata accessor for FMFSchedule();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  v147 = v27;
  if (v49(v46, 1, v47))
  {
    v50 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    v51 = v154;
  }
  else
  {
    *v45 = *(_QWORD *)v46;
    v45[1] = *((_QWORD *)v46 + 1);
    v45[2] = *((_QWORD *)v46 + 2);
    v45[3] = *((_QWORD *)v46 + 3);
    v45[4] = *((_QWORD *)v46 + 4);
    v45[5] = *((_QWORD *)v46 + 5);
    v69 = *(int *)(v47 + 40);
    v70 = (char *)v45 + v69;
    v71 = &v46[v69];
    v72 = sub_211A47304();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = sub_211958C38(&qword_254AC7C38);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    v51 = v154;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v78 = v39[13];
  v79 = (_QWORD *)(v37 + v78);
  v80 = &v51[v78];
  *v79 = *(_QWORD *)v80;
  v79[1] = *((_QWORD *)v80 + 1);
  v81 = v39[14];
  v82 = (_QWORD *)(v37 + v81);
  v83 = &v51[v81];
  *v82 = *(_QWORD *)v83;
  v82[1] = *((_QWORD *)v83 + 1);
  *(_BYTE *)(v37 + v39[15]) = v51[v39[15]];
  *(_QWORD *)(v37 + v39[16]) = *(_QWORD *)&v51[v39[16]];
  *(_QWORD *)(v37 + v39[17]) = *(_QWORD *)&v51[v39[17]];
  *(_QWORD *)(v37 + v39[18]) = *(_QWORD *)&v51[v39[18]];
  v84 = v39[19];
  v85 = (_QWORD *)(v37 + v84);
  v86 = &v51[v84];
  *v85 = *(_QWORD *)v86;
  v85[1] = *((_QWORD *)v86 + 1);
  v87 = v39[20];
  v88 = v37 + v87;
  v89 = &v51[v87];
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_QWORD *)(v88 + 8) = *((_QWORD *)v89 + 1);
  *(_BYTE *)(v88 + 16) = v89[16];
  *(_BYTE *)(v88 + 17) = v89[17];
  *(_BYTE *)(v37 + v39[21]) = v51[v39[21]];
  v90 = v39[22];
  v91 = (_QWORD *)(v37 + v90);
  v92 = &v51[v90];
  *v91 = *(_QWORD *)v92;
  v91[1] = *((_QWORD *)v92 + 1);
  v149 = v39;
  v93 = v39[23];
  v94 = (_QWORD *)(v37 + v93);
  v95 = &v51[v93];
  v146 = *(_QWORD *)&v51[v93 + 168];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v146)
  {
    *v94 = *(_QWORD *)v95;
    v94[1] = *((_QWORD *)v95 + 1);
    v94[2] = *((_QWORD *)v95 + 2);
    v94[3] = *((_QWORD *)v95 + 3);
    v94[4] = *((_QWORD *)v95 + 4);
    v94[5] = *((_QWORD *)v95 + 5);
    v94[6] = *((_QWORD *)v95 + 6);
    v94[7] = *((_QWORD *)v95 + 7);
    v94[8] = *((_QWORD *)v95 + 8);
    v94[9] = *((_QWORD *)v95 + 9);
    v94[10] = *((_QWORD *)v95 + 10);
    v94[11] = *((_QWORD *)v95 + 11);
    v94[12] = *((_QWORD *)v95 + 12);
    v94[13] = *((_QWORD *)v95 + 13);
    v94[14] = *((_QWORD *)v95 + 14);
    v94[15] = *((_QWORD *)v95 + 15);
    v94[16] = *((_QWORD *)v95 + 16);
    v94[17] = *((_QWORD *)v95 + 17);
    v94[18] = *((_QWORD *)v95 + 18);
    v94[19] = *((_QWORD *)v95 + 19);
    v94[20] = *((_QWORD *)v95 + 20);
    v94[21] = *((_QWORD *)v95 + 21);
    v94[22] = *((_QWORD *)v95 + 22);
    v94[23] = *((_QWORD *)v95 + 23);
    v94[24] = *((_QWORD *)v95 + 24);
    v94[25] = *((_QWORD *)v95 + 25);
    v94[26] = *((_QWORD *)v95 + 26);
    v94[27] = *((_QWORD *)v95 + 27);
    v94[28] = *((_QWORD *)v95 + 28);
    v94[29] = *((_QWORD *)v95 + 29);
    v94[30] = *((_QWORD *)v95 + 30);
    v94[31] = *((_QWORD *)v95 + 31);
    v94[32] = *((_QWORD *)v95 + 32);
    v94[33] = *((_QWORD *)v95 + 33);
    v94[34] = *((_QWORD *)v95 + 34);
    v94[35] = *((_QWORD *)v95 + 35);
    v94[36] = *((_QWORD *)v95 + 36);
    v94[37] = *((_QWORD *)v95 + 37);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v94, v95, 0x130uLL);
  }
  *(_BYTE *)(v37 + v39[24]) = v154[v39[24]];
  *(_BYTE *)(v37 + v39[25]) = v154[v39[25]];
  v96 = v39[26];
  v97 = (void *)(v37 + v96);
  v98 = &v154[v96];
  if (v152(&v154[v96], 1, v147))
  {
    v99 = sub_211958C38(qword_254AC8A78);
    memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v150 + 16))(v97, v98, v147);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v97, 0, 1, v147);
  }
  v100 = v39[27];
  v101 = (void *)(v37 + v100);
  v102 = &v154[v100];
  if (v152(&v154[v100], 1, v147))
  {
    v103 = sub_211958C38(qword_254AC8A78);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v150 + 16))(v101, v102, v147);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v101, 0, 1, v147);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v145 + 56))(v37, 0, 1, v149);
  return a1;
}

_QWORD *sub_2119D97D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_211A4713C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_211958C38(&qword_254AC8C98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_211A47208();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = sub_211958C38(qword_254AC8A78);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  v22 = (_OWORD *)((char *)a1 + v21);
  v23 = (_OWORD *)((char *)a2 + v21);
  v24 = (int *)type metadata accessor for FMFLocationAlert();
  v25 = *((_QWORD *)v24 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v56 = v18;
    v57 = v25;
    v27 = v23[1];
    *v22 = *v23;
    v22[1] = v27;
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_BYTE *)v22 + 40) = *((_BYTE *)v23 + 40);
    *((_BYTE *)v22 + 41) = *((_BYTE *)v23 + 41);
    *((_WORD *)v22 + 21) = *((_WORD *)v23 + 21);
    v28 = v24[12];
    v29 = (_OWORD *)((char *)v22 + v28);
    v30 = (_OWORD *)((char *)v23 + v28);
    v31 = type metadata accessor for FMFSchedule();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      v34 = v56;
    }
    else
    {
      v54 = v32;
      v55 = v19;
      v35 = v30[1];
      *v29 = *v30;
      v29[1] = v35;
      v29[2] = v30[2];
      v36 = *(int *)(v31 + 40);
      v53 = (char *)v29 + v36;
      v37 = (char *)v30 + v36;
      v38 = sub_211A47304();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = sub_211958C38(&qword_254AC7C38);
        memcpy(v53, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v53, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v53, 0, 1, v38);
      }
      v19 = v55;
      v34 = v56;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v31);
    }
    *(_OWORD *)((char *)v22 + v24[13]) = *(_OWORD *)((char *)v23 + v24[13]);
    *(_OWORD *)((char *)v22 + v24[14]) = *(_OWORD *)((char *)v23 + v24[14]);
    *((_BYTE *)v22 + v24[15]) = *((_BYTE *)v23 + v24[15]);
    *(_QWORD *)((char *)v22 + v24[16]) = *(_QWORD *)((char *)v23 + v24[16]);
    *(_QWORD *)((char *)v22 + v24[17]) = *(_QWORD *)((char *)v23 + v24[17]);
    *(_QWORD *)((char *)v22 + v24[18]) = *(_QWORD *)((char *)v23 + v24[18]);
    *(_OWORD *)((char *)v22 + v24[19]) = *(_OWORD *)((char *)v23 + v24[19]);
    v41 = v24[20];
    v42 = (char *)v22 + v41;
    v43 = (char *)v23 + v41;
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_WORD *)v42 + 8) = *((_WORD *)v43 + 8);
    *((_BYTE *)v22 + v24[21]) = *((_BYTE *)v23 + v24[21]);
    *(_OWORD *)((char *)v22 + v24[22]) = *(_OWORD *)((char *)v23 + v24[22]);
    memcpy((char *)v22 + v24[23], (char *)v23 + v24[23], 0x130uLL);
    *((_BYTE *)v22 + v24[24]) = *((_BYTE *)v23 + v24[24]);
    *((_BYTE *)v22 + v24[25]) = *((_BYTE *)v23 + v24[25]);
    v44 = v24[26];
    v45 = (char *)v22 + v44;
    v46 = (char *)v23 + v44;
    if (v19((char *)v23 + v44, 1, v17))
    {
      v47 = sub_211958C38(qword_254AC8A78);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v45, v46, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v45, 0, 1, v17);
    }
    v48 = v24[27];
    v49 = (char *)v22 + v48;
    v50 = (char *)v23 + v48;
    if (v19(v50, 1, v17))
    {
      v51 = sub_211958C38(qword_254AC8A78);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v49, v50, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v49, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v57 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

_QWORD *sub_2119D9CA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, int *);
  int v51;
  int v52;
  __int128 v53;
  uint64_t v54;
  _OWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  unsigned int (*v61)(char *, uint64_t, void *);
  size_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char *v97;
  uint64_t v98;
  __int128 v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);
  int v107;
  size_t v108;
  void *v109;
  uint64_t v110;
  _QWORD *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  char *v157;
  int v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  char *v163;
  int v164;
  int v165;
  uint64_t v166;
  char *v167;
  char *v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  void *__src;
  _QWORD *__srca;
  uint64_t (*v174)(char *, uint64_t, uint64_t);
  uint64_t (*v175)(uint64_t, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_211A4713C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_211958C38(&qword_254AC8C98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_211A47208();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_12:
    v39 = sub_211958C38(qword_254AC8A78);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_13:
  v40 = a3[11];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[12];
  v46 = (uint64_t)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = (int *)type metadata accessor for FMFLocationAlert();
  v49 = *((_QWORD *)v48 - 1);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v49 + 48);
  v51 = v50(v46, 1, v48);
  v52 = v50((uint64_t)v47, 1, v48);
  if (!v51)
  {
    if (v52)
    {
      sub_211934758(v46, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      goto LABEL_19;
    }
    v175 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36;
    v170 = v35;
    v65 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *(_QWORD *)(v46 + 8) = v65;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v46 + 16) = *((_OWORD *)v47 + 1);
    *(_QWORD *)(v46 + 32) = *((_QWORD *)v47 + 4);
    *(_BYTE *)(v46 + 40) = v47[40];
    *(_BYTE *)(v46 + 41) = v47[41];
    *(_BYTE *)(v46 + 42) = v47[42];
    *(_BYTE *)(v46 + 43) = v47[43];
    v66 = v48[12];
    v67 = (char *)(v46 + v66);
    v68 = &v47[v66];
    v69 = type metadata accessor for FMFSchedule();
    __srca = *(_QWORD **)(v69 - 8);
    v70 = (uint64_t (*)(char *, uint64_t, uint64_t))__srca[6];
    v71 = v70(v67, 1, v69);
    v72 = v70(v68, 1, v69);
    if (v71)
    {
      if (!v72)
      {
        v73 = *((_OWORD *)v68 + 1);
        *(_OWORD *)v67 = *(_OWORD *)v68;
        *((_OWORD *)v67 + 1) = v73;
        *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
        v74 = *(int *)(v69 + 40);
        v168 = &v67[v74];
        v75 = &v68[v74];
        v76 = sub_211A47304();
        v77 = *(_QWORD *)(v76 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
        {
          v78 = sub_211958C38(&qword_254AC7C38);
          memcpy(v168, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v168, v75, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v168, 0, 1, v76);
        }
        v87 = v175;
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v67, 0, 1, v69);
        goto LABEL_51;
      }
LABEL_31:
      v85 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      v86 = v170;
      v87 = v175;
      goto LABEL_52;
    }
    if (v72)
    {
      sub_211934758((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFSchedule);
      goto LABEL_31;
    }
    v100 = *((_OWORD *)v68 + 1);
    *(_OWORD *)v67 = *(_OWORD *)v68;
    *((_OWORD *)v67 + 1) = v100;
    *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
    v101 = *(int *)(v69 + 40);
    v102 = &v67[v101];
    v103 = &v68[v101];
    v104 = sub_211A47304();
    v105 = *(_QWORD *)(v104 - 8);
    v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
    v169 = v102;
    LODWORD(v102) = v106(v102, 1, v104);
    v107 = v106(v103, 1, v104);
    if ((_DWORD)v102)
    {
      v87 = v175;
      if (!v107)
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 32))(v169, v103, v104);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v169, 0, 1, v104);
        goto LABEL_51;
      }
      v108 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v109 = v169;
    }
    else
    {
      v87 = v175;
      if (!v107)
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 40))(v169, v103, v104);
        goto LABEL_51;
      }
      (*(void (**)(void *, uint64_t))(v105 + 8))(v169, v104);
      v108 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(&qword_254AC7C38) - 8) + 64);
      v109 = v169;
    }
    memcpy(v109, v103, v108);
LABEL_51:
    v86 = v170;
LABEL_52:
    v110 = v48[13];
    v111 = (_QWORD *)(v46 + v110);
    v112 = &v47[v110];
    v114 = *(_QWORD *)v112;
    v113 = *((_QWORD *)v112 + 1);
    *v111 = v114;
    v111[1] = v113;
    swift_bridgeObjectRelease();
    v115 = v48[14];
    v116 = (_QWORD *)(v46 + v115);
    v117 = &v47[v115];
    v119 = *(_QWORD *)v117;
    v118 = *((_QWORD *)v117 + 1);
    *v116 = v119;
    v116[1] = v118;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v46 + v48[15]) = v47[v48[15]];
    *(_QWORD *)(v46 + v48[16]) = *(_QWORD *)&v47[v48[16]];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v46 + v48[17]) = *(_QWORD *)&v47[v48[17]];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v46 + v48[18]) = *(_QWORD *)&v47[v48[18]];
    swift_bridgeObjectRelease();
    v120 = v48[19];
    v121 = (_QWORD *)(v46 + v120);
    v122 = &v47[v120];
    v124 = *(_QWORD *)v122;
    v123 = *((_QWORD *)v122 + 1);
    *v121 = v124;
    v121[1] = v123;
    swift_bridgeObjectRelease();
    v125 = v48[20];
    v126 = v46 + v125;
    v127 = &v47[v125];
    v128 = *(_QWORD *)&v47[v125 + 8];
    *(_QWORD *)v126 = *(_QWORD *)&v47[v125];
    *(_QWORD *)(v126 + 8) = v128;
    swift_bridgeObjectRelease();
    *(_WORD *)(v126 + 16) = *((_WORD *)v127 + 8);
    *(_BYTE *)(v46 + v48[21]) = v47[v48[21]];
    v129 = v48[22];
    v130 = (_QWORD *)(v46 + v129);
    v131 = &v47[v129];
    v133 = *(_QWORD *)v131;
    v132 = *((_QWORD *)v131 + 1);
    *v130 = v133;
    v130[1] = v132;
    swift_bridgeObjectRelease();
    v134 = v48[23];
    v135 = (_QWORD *)(v46 + v134);
    v136 = &v47[v134];
    if (*(_QWORD *)(v46 + v134 + 168))
    {
      if (*((_QWORD *)v136 + 21))
      {
        *v135 = *(_QWORD *)v136;
        swift_bridgeObjectRelease();
        v137 = *((_QWORD *)v136 + 2);
        v135[1] = *((_QWORD *)v136 + 1);
        v135[2] = v137;
        swift_bridgeObjectRelease();
        v138 = *((_QWORD *)v136 + 4);
        v135[3] = *((_QWORD *)v136 + 3);
        v135[4] = v138;
        swift_bridgeObjectRelease();
        v139 = *((_QWORD *)v136 + 6);
        v135[5] = *((_QWORD *)v136 + 5);
        v135[6] = v139;
        swift_bridgeObjectRelease();
        v140 = *((_QWORD *)v136 + 8);
        v135[7] = *((_QWORD *)v136 + 7);
        v135[8] = v140;
        swift_bridgeObjectRelease();
        v141 = *((_QWORD *)v136 + 10);
        v135[9] = *((_QWORD *)v136 + 9);
        v135[10] = v141;
        swift_bridgeObjectRelease();
        v142 = *((_QWORD *)v136 + 12);
        v135[11] = *((_QWORD *)v136 + 11);
        v135[12] = v142;
        swift_bridgeObjectRelease();
        v143 = *((_QWORD *)v136 + 14);
        v135[13] = *((_QWORD *)v136 + 13);
        v135[14] = v143;
        swift_bridgeObjectRelease();
        v144 = *((_QWORD *)v136 + 16);
        v135[15] = *((_QWORD *)v136 + 15);
        v135[16] = v144;
        swift_bridgeObjectRelease();
        v145 = *((_QWORD *)v136 + 18);
        v135[17] = *((_QWORD *)v136 + 17);
        v135[18] = v145;
        swift_bridgeObjectRelease();
        v146 = *((_QWORD *)v136 + 20);
        v135[19] = *((_QWORD *)v136 + 19);
        v135[20] = v146;
        swift_bridgeObjectRelease();
        v135[21] = *((_QWORD *)v136 + 21);
        swift_bridgeObjectRelease();
        v147 = *((_QWORD *)v136 + 23);
        v135[22] = *((_QWORD *)v136 + 22);
        v135[23] = v147;
        swift_bridgeObjectRelease();
        v148 = *((_QWORD *)v136 + 25);
        v135[24] = *((_QWORD *)v136 + 24);
        v135[25] = v148;
        swift_bridgeObjectRelease();
        v149 = *((_QWORD *)v136 + 27);
        v135[26] = *((_QWORD *)v136 + 26);
        v135[27] = v149;
        swift_bridgeObjectRelease();
        v150 = *((_QWORD *)v136 + 29);
        v135[28] = *((_QWORD *)v136 + 28);
        v135[29] = v150;
        swift_bridgeObjectRelease();
        v151 = *((_QWORD *)v136 + 31);
        v135[30] = *((_QWORD *)v136 + 30);
        v135[31] = v151;
        swift_bridgeObjectRelease();
        v152 = *((_QWORD *)v136 + 33);
        v135[32] = *((_QWORD *)v136 + 32);
        v135[33] = v152;
        swift_bridgeObjectRelease();
        v153 = *((_QWORD *)v136 + 35);
        v135[34] = *((_QWORD *)v136 + 34);
        v135[35] = v153;
        swift_bridgeObjectRelease();
        v154 = *((_QWORD *)v136 + 37);
        v135[36] = *((_QWORD *)v136 + 36);
        v135[37] = v154;
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      sub_21196ECA4((uint64_t)v135);
    }
    memcpy(v135, v136, 0x130uLL);
LABEL_57:
    *(_BYTE *)(v46 + v48[24]) = v47[v48[24]];
    *(_BYTE *)(v46 + v48[25]) = v47[v48[25]];
    v155 = v48[26];
    v156 = (void *)(v46 + v155);
    v157 = &v47[v155];
    v158 = v87(v46 + v155, 1, v34);
    v159 = v87((uint64_t)v157, 1, v34);
    if (v158)
    {
      if (!v159)
      {
        (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v156, v157, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v156, 0, 1, v34);
LABEL_63:
        v161 = v48[27];
        v162 = (void *)(v46 + v161);
        v163 = &v47[v161];
        v164 = v87((uint64_t)v162, 1, v34);
        v165 = v87((uint64_t)v163, 1, v34);
        if (v164)
        {
          if (!v165)
          {
            (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v162, v163, v34);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v162, 0, 1, v34);
            return a1;
          }
        }
        else
        {
          if (!v165)
          {
            (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v162, v163, v34);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v86 + 8))(v162, v34);
        }
        v62 = *(_QWORD *)(*(_QWORD *)(sub_211958C38(qword_254AC8A78) - 8) + 64);
        v63 = v162;
        v64 = v163;
        goto LABEL_20;
      }
    }
    else
    {
      if (!v159)
      {
        (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v156, v157, v34);
        goto LABEL_63;
      }
      (*(void (**)(void *, uint64_t))(v86 + 8))(v156, v34);
    }
    v160 = sub_211958C38(qword_254AC8A78);
    memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
    goto LABEL_63;
  }
  if (v52)
  {
LABEL_19:
    v62 = *(_QWORD *)(*(_QWORD *)(sub_211958C38((uint64_t *)&unk_254ACC2D0) - 8) + 64);
    v63 = (void *)v46;
    v64 = v47;
LABEL_20:
    memcpy(v63, v64, v62);
    return a1;
  }
  __src = (void *)v34;
  v174 = v36;
  v53 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v53;
  *(_QWORD *)(v46 + 32) = *((_QWORD *)v47 + 4);
  *(_BYTE *)(v46 + 40) = v47[40];
  *(_BYTE *)(v46 + 41) = v47[41];
  *(_WORD *)(v46 + 42) = *((_WORD *)v47 + 21);
  v54 = v48[12];
  v55 = (_OWORD *)(v46 + v54);
  v56 = &v47[v54];
  v57 = type metadata accessor for FMFSchedule();
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    v60 = __src;
    v61 = (unsigned int (*)(char *, uint64_t, void *))v174;
  }
  else
  {
    v171 = v35;
    v79 = *((_OWORD *)v56 + 1);
    *v55 = *(_OWORD *)v56;
    v55[1] = v79;
    v55[2] = *((_OWORD *)v56 + 2);
    v80 = *(int *)(v57 + 40);
    v166 = v58;
    v167 = (char *)v55 + v80;
    v81 = &v56[v80];
    v82 = sub_211A47304();
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = sub_211958C38(&qword_254AC7C38);
      memcpy(v167, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v167, v81, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v167, 0, 1, v82);
    }
    v35 = v171;
    v60 = __src;
    v61 = (unsigned int (*)(char *, uint64_t, void *))v174;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v55, 0, 1, v57);
  }
  *(_OWORD *)(v46 + v48[13]) = *(_OWORD *)&v47[v48[13]];
  *(_OWORD *)(v46 + v48[14]) = *(_OWORD *)&v47[v48[14]];
  *(_BYTE *)(v46 + v48[15]) = v47[v48[15]];
  *(_QWORD *)(v46 + v48[16]) = *(_QWORD *)&v47[v48[16]];
  *(_QWORD *)(v46 + v48[17]) = *(_QWORD *)&v47[v48[17]];
  *(_QWORD *)(v46 + v48[18]) = *(_QWORD *)&v47[v48[18]];
  *(_OWORD *)(v46 + v48[19]) = *(_OWORD *)&v47[v48[19]];
  v88 = v48[20];
  v89 = v46 + v88;
  v90 = &v47[v88];
  *(_OWORD *)v89 = *(_OWORD *)v90;
  *(_WORD *)(v89 + 16) = *((_WORD *)v90 + 8);
  *(_BYTE *)(v46 + v48[21]) = v47[v48[21]];
  *(_OWORD *)(v46 + v48[22]) = *(_OWORD *)&v47[v48[22]];
  memcpy((void *)(v46 + v48[23]), &v47[v48[23]], 0x130uLL);
  *(_BYTE *)(v46 + v48[24]) = v47[v48[24]];
  *(_BYTE *)(v46 + v48[25]) = v47[v48[25]];
  v91 = v48[26];
  v92 = (void *)(v46 + v91);
  v93 = &v47[v91];
  if (v61(&v47[v91], 1, v60))
  {
    v94 = sub_211958C38(qword_254AC8A78);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, void *))(v35 + 32))(v92, v93, v60);
    (*(void (**)(void *, _QWORD, uint64_t, void *))(v35 + 56))(v92, 0, 1, v60);
  }
  v95 = v48[27];
  v96 = (void *)(v46 + v95);
  v97 = &v47[v95];
  if (v61(v97, 1, v60))
  {
    v98 = sub_211958C38(qword_254AC8A78);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, void *))(v35 + 32))(v96, v97, v60);
    (*(void (**)(void *, _QWORD, uint64_t, void *))(v35 + 56))(v96, 0, 1, v60);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
  return a1;
}

uint64_t sub_2119DA8F4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_211958C38(&qword_254AC8C98);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[6];
    }
    else
    {
      v13 = sub_211958C38(qword_254AC8A78);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[10];
      }
      else
      {
        v11 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_2119DA9D0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = sub_211958C38(&qword_254AC8C98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_211958C38(qword_254AC8A78);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_2119DAA9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119DAAD4 + 4 * byte_211A4F030[a1]))(0x6F43737574617473, 0xEA00000000006564);
}

uint64_t sub_2119DAAD4()
{
  return 0x614D737574617473;
}

uint64_t sub_2119DAAF4()
{
  return 7107189;
}

uint64_t sub_2119DAB04()
{
  return 0x6D614E7473726966;
}

uint64_t sub_2119DAB20()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_2119DAB38()
{
  return 0x6C69616D65;
}

unint64_t sub_2119DAB4C()
{
  return 0xD000000000000010;
}

uint64_t sub_2119DAB68()
{
  return 0x55746E6572727563;
}

uint64_t sub_2119DAB8C()
{
  return 0x65636E6566;
}

uint64_t sub_2119DABA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119DABD8 + 4 * byte_211A4F039[a1]))(0x6F43737574617473, 0xEA00000000006564);
}

uint64_t sub_2119DABD8()
{
  return 0x614D737574617473;
}

uint64_t sub_2119DABF8()
{
  return 7107189;
}

uint64_t sub_2119DAC08()
{
  return 0x6D614E7473726966;
}

uint64_t sub_2119DAC24()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_2119DAC3C()
{
  return 0x6C69616D65;
}

unint64_t sub_2119DAC50()
{
  return 0xD000000000000010;
}

uint64_t sub_2119DAC6C()
{
  return 0x55746E6572727563;
}

uint64_t sub_2119DAC90()
{
  return 0x65636E6566;
}

void sub_2119DACA4(char *a1)
{
  sub_2119749B4(*a1);
}

uint64_t sub_2119DACB0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_211A48318();
  sub_2119BB748((uint64_t)v3, v1);
  return sub_211A48348();
}

void sub_2119DACF4(uint64_t a1)
{
  char *v1;

  sub_2119BB748(a1, *v1);
}

uint64_t sub_2119DACFC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_211A48318();
  sub_2119BB748((uint64_t)v3, v1);
  return sub_211A48348();
}

uint64_t sub_2119DAD3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119DBEB8();
  *a1 = result;
  return result;
}

uint64_t sub_2119DAD68@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2119DAA9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119DAD90()
{
  unsigned __int8 *v0;

  return sub_2119DABA0(*v0);
}

uint64_t sub_2119DAD98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119DBEB8();
  *a1 = result;
  return result;
}

void sub_2119DADBC(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2119DADC8()
{
  sub_2119DB9E4();
  return sub_211A48390();
}

uint64_t sub_2119DADF0()
{
  sub_2119DB9E4();
  return sub_211A4839C();
}

uint64_t sub_2119DAE18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void *v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unsigned __int8 *v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81[2];
  uint64_t v82;

  v77 = a2;
  v3 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v3, v4);
  v78 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211958C38((uint64_t *)&unk_254ACC2D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACBDD8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for FMFCommandResponseFragment();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (uint64_t *)((char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = a1[3];
  v79 = a1;
  sub_211931DB4(a1, v19);
  sub_2119DB9E4();
  v20 = v80;
  sub_211A48360();
  if (v20)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v23 = sub_211A47748();
    sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
    v24 = v20;
    v25 = v20;
    v26 = sub_211A47724();
    v27 = sub_211A47D24();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v81[0] = v29;
      *(_DWORD *)v28 = 136315138;
      v82 = (uint64_t)v20;
      v30 = v20;
      sub_211958C38(&qword_254ACC360);
      v31 = sub_211A47928();
      v82 = sub_211950A9C(v31, v32, v81);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v26, v27, "Error decoding command response. Error - %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v29, -1, -1);
      MEMORY[0x212BE48A0](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    return sub_211931C34((uint64_t)v79);
  }
  v80 = v9;
  LOBYTE(v81[0]) = 0;
  result = sub_211A48144();
  v33 = v22;
  v34 = HIBYTE(v22) & 0xF;
  v35 = result & 0xFFFFFFFFFFFFLL;
  if ((v33 & 0x2000000000000000) != 0)
    v36 = v34;
  else
    v36 = result & 0xFFFFFFFFFFFFLL;
  v76 = v11;
  if (!v36)
  {
    swift_bridgeObjectRelease();
    v37 = v14;
    goto LABEL_54;
  }
  v37 = v14;
  if ((v33 & 0x1000000000000000) != 0)
  {
    v39 = (uint64_t)sub_211A3B094(result, v33, 10);
    v41 = v74;
    goto LABEL_53;
  }
  if ((v33 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v38 = (unsigned __int8 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v38 = (unsigned __int8 *)sub_211A47FB8();
    v39 = (uint64_t)sub_211A3B080(v38, v35, 10);
    v41 = v40 & 1;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
LABEL_55:
      *v18 = v39;
      sub_211958C38(&qword_254ACBDE8);
      LOBYTE(v82) = 1;
      sub_2119DBA28();
      sub_211A48174();
      v51 = (uint64_t)v80;
      v18[1] = v81[0];
      LOBYTE(v81[0]) = 3;
      v52 = sub_211A48144();
      v53 = (uint64_t *)((char *)v18 + v15[7]);
      *v53 = v52;
      v53[1] = v54;
      LOBYTE(v81[0]) = 4;
      v55 = sub_211A48144();
      v56 = (uint64_t *)((char *)v18 + v15[8]);
      *v56 = v55;
      v56[1] = v57;
      LOBYTE(v81[0]) = 5;
      v58 = sub_211A48144();
      v59 = (uint64_t *)((char *)v18 + v15[9]);
      *v59 = v58;
      v59[1] = v60;
      LOBYTE(v81[0]) = 7;
      v61 = sub_211A48144();
      v62 = (uint64_t *)((char *)v18 + v15[11]);
      *v62 = v61;
      v62[1] = v63;
      v64 = type metadata accessor for FMFLocationAlert();
      LOBYTE(v81[0]) = 8;
      sub_2119DBAAC();
      sub_211A48174();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v51, 0, 1, v64);
      sub_21192DD68(v51, (uint64_t)v18 + v15[12], (uint64_t *)&unk_254ACC2D0);
      LOBYTE(v81[0]) = 2;
      sub_211A48144();
      sub_211A47130();
      swift_bridgeObjectRelease();
      v65 = v77;
      LOBYTE(v81[0]) = 6;
      v66 = sub_211A48180();
      v67 = v37;
      v68 = (uint64_t)v78;
      v69 = objc_msgSend((id)objc_opt_self(), sel_fm_dateFromEpoch_, v66);
      sub_211A471E4();

      (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v10);
      v70 = sub_211A47208();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v68, 0, 1, v70);
      sub_21192DD68(v68, (uint64_t)v18 + v15[10], qword_254AC8A78);
      sub_2119DBAF4((uint64_t)v18, v65);
      return sub_211931C34((uint64_t)v79);
    }
LABEL_54:
    v39 = 500;
    goto LABEL_55;
  }
  v81[0] = result;
  v81[1] = v33 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v34)
      goto LABEL_66;
    if (v34 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_40;
    v39 = (BYTE1(result) - 48);
    if (v34 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_40;
      v39 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v42 = v34 - 3;
      if (v42)
      {
        v43 = (unsigned __int8 *)v81 + 3;
        while (1)
        {
          v44 = *v43 - 48;
          if (v44 > 9)
            goto LABEL_40;
          v45 = 10 * v39;
          if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
            goto LABEL_40;
          v39 = v45 + v44;
          if (__OFADD__(v45, v44))
            goto LABEL_40;
          v41 = 0;
          ++v43;
          if (!--v42)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    v41 = 0;
    goto LABEL_53;
  }
  if (result != 45)
  {
    if (!v34 || (result - 48) > 9u)
      goto LABEL_40;
    v39 = (result - 48);
    if (v34 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_40;
      v39 = 10 * (result - 48) + (BYTE1(result) - 48);
      v46 = v34 - 2;
      if (v46)
      {
        v47 = (unsigned __int8 *)v81 + 2;
        while (1)
        {
          v48 = *v47 - 48;
          if (v48 > 9)
            goto LABEL_40;
          v49 = 10 * v39;
          if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
            goto LABEL_40;
          v39 = v49 + v48;
          if (__OFADD__(v49, v48))
            goto LABEL_40;
          v41 = 0;
          ++v47;
          if (!--v46)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v34)
  {
    if (v34 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v34 == 2)
      {
        v41 = 0;
        v39 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_53;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v39 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v50 = v34 - 3;
        if (!v50)
          goto LABEL_52;
        v71 = (unsigned __int8 *)v81 + 3;
        while (1)
        {
          v72 = *v71 - 48;
          if (v72 > 9)
            break;
          v73 = 10 * v39;
          if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
            break;
          v39 = v73 - v72;
          if (__OFSUB__(v73, v72))
            break;
          v41 = 0;
          ++v71;
          if (!--v50)
            goto LABEL_53;
        }
      }
    }
LABEL_40:
    v39 = 0;
    v41 = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_2119DB778(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = sub_211958C38(&qword_254ACBE08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_211931DB4(a1, a1[3]);
  sub_2119DB9E4();
  sub_211A4836C();
  v13 = 0;
  sub_211A481D4();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + 8);
    v11[15] = 1;
    sub_211958C38(&qword_254ACBE10);
    sub_2119DBB38();
    sub_211A481E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_2119DB8B0()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254ACBE10);
  sub_211A47928();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000029;
}

uint64_t sub_2119DB9B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2119DAE18(a1, a2);
}

uint64_t sub_2119DB9CC(_QWORD *a1)
{
  return sub_2119DB778(a1);
}

unint64_t sub_2119DB9E4()
{
  unint64_t result;

  result = qword_254ACBDE0;
  if (!qword_254ACBDE0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4F224, &type metadata for FMFCommandResponseFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBDE0);
  }
  return result;
}

unint64_t sub_2119DBA28()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACBDF0;
  if (!qword_254ACBDF0)
  {
    v1 = sub_21195E2C0(&qword_254ACBDE8);
    v2 = sub_2119DBC20(&qword_254ACBDF8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACBDF0);
  }
  return result;
}

unint64_t sub_2119DBAAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC8430;
  if (!qword_254AC8430)
  {
    v1 = type metadata accessor for FMFLocationAlert();
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLocationAlert, v1);
    atomic_store(result, (unint64_t *)&qword_254AC8430);
  }
  return result;
}

uint64_t sub_2119DBAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMFCommandResponseFragment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2119DBB38()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254ACBE18;
  if (!qword_254ACBE18)
  {
    v1 = sub_21195E2C0(&qword_254ACBE10);
    v2 = sub_2119DBB9C();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACBE18);
  }
  return result;
}

unint64_t sub_2119DBB9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACBE20;
  if (!qword_254ACBE20)
  {
    v1 = sub_21195E2C0(&qword_254ACBDE8);
    v2 = sub_2119DBC20(&qword_254ACBE28, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACBE20);
  }
  return result;
}

uint64_t sub_2119DBC20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_21195E2C0(&qword_254ACBE00);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x212BE47C8](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFCommandResponseFragment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFCommandResponseFragment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2119DBD60 + 4 * byte_211A4F047[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2119DBD94 + 4 * byte_211A4F042[v4]))();
}

uint64_t sub_2119DBD94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119DBD9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119DBDA4);
  return result;
}

uint64_t sub_2119DBDB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119DBDB8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2119DBDBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119DBDC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFCommandResponseFragment.CodingKeys()
{
  return &type metadata for FMFCommandResponseFragment.CodingKeys;
}

unint64_t sub_2119DBDE4()
{
  unint64_t result;

  result = qword_254ACBE30;
  if (!qword_254ACBE30)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4F1FC, &type metadata for FMFCommandResponseFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBE30);
  }
  return result;
}

unint64_t sub_2119DBE2C()
{
  unint64_t result;

  result = qword_254ACBE38;
  if (!qword_254ACBE38)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4F134, &type metadata for FMFCommandResponseFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBE38);
  }
  return result;
}

unint64_t sub_2119DBE74()
{
  unint64_t result;

  result = qword_254ACBE40;
  if (!qword_254ACBE40)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4F15C, &type metadata for FMFCommandResponseFragment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACBE40);
  }
  return result;
}

uint64_t sub_2119DBEB8()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t FMFManagerSubsystem.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

FMFCore::FMFManagerSubsystem __swiftcall FMFManagerSubsystem.init(rawValue:)(FMFCore::FMFManagerSubsystem rawValue)
{
  FMFCore::FMFManagerSubsystem *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFManagerSubsystem.friends.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMFManagerSubsystem.myLocation.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static FMFManagerSubsystem.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_254AC7B48 != -1)
    result = swift_once();
  *a1 = qword_254ACBE48;
  return result;
}

uint64_t FMFSnapshotHandlers.responseFilter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_2119B8E00(v1);
  return v1;
}

uint64_t FMFSnapshotHandlers.responseHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_2119B8E00(v1);
  return v1;
}

_QWORD *FMFSnapshotHandlers.__allocating_init(responseFilter:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *FMFSnapshotHandlers.init(responseFilter:responseHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t FMFSnapshotHandlers.deinit()
{
  uint64_t v0;

  sub_2119BA4CC(*(_QWORD *)(v0 + 16));
  sub_2119BA4CC(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t FMFSnapshotHandlers.__deallocating_deinit()
{
  uint64_t v0;

  sub_2119BA4CC(*(_QWORD *)(v0 + 16));
  sub_2119BA4CC(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t FMFManagerConfiguration.preferredLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v4 = sub_211A47274();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FMFManagerConfiguration.cacheDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFManagerConfiguration.useCache.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache);
}

void FMFManagerConfiguration.enabledSubsystems.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems);
}

uint64_t FMFManagerConfiguration.snapshotHandlers.getter()
{
  return swift_retain();
}

uint64_t FMFManagerConfiguration.useOptimizedFetch.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
}

uint64_t FMFManagerConfiguration.disableContactMatching.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching);
}

uint64_t sub_2119DC158()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) == 1)
    return (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) ^ 1) & 1;
  else
    return 0;
}

uint64_t FMFManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:cacheDirectory:useCache:snapshotHandlers:useOptimizedFetch:disableContactMatching:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v26 = a8;
  v27 = a7;
  v29 = a5;
  v28 = a3;
  v12 = sub_211A47274();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  if (qword_254AC7B80 != -1)
    swift_once();
  v18 = sub_211A47748();
  sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
  v19 = sub_211A47724();
  v20 = sub_211A47D30();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 67109120;
    v30 = v29 & 1;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v19, v20, "FMFManagerConfiguration: public useCache: %{BOOL}d", v21, 8u);
    MEMORY[0x212BE48A0](v21, -1, -1);
  }

  v31 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, v12);
  if (qword_254AC7B50 != -1)
    swift_once();
  v22 = *(_QWORD *)(qword_254ACBE50 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  v23 = *(_QWORD *)(qword_254ACBE50 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider + 8);
  type metadata accessor for FMFManagerConfiguration();
  v24 = swift_allocObject();
  swift_retain();
  sub_2119DC3DC(&v31, (uint64_t)v16, v28, a4, v29 & 1, v22, v23, a6, v27 & 1, v26 & 1);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v24;
}

uint64_t sub_2119DC3DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v33;

  v11 = v10;
  v18 = *a1;
  v19 = v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v20 = sub_211A47274();
  v33 = *(_QWORD *)(v20 - 8);
  v21 = v19;
  v22 = a2;
  v23 = v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v21, v22, v20);
  v24 = (_QWORD *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_cacheDirectory);
  *v24 = a3;
  v24[1] = a4;
  *(_BYTE *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useCache) = a5;
  v25 = (_QWORD *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  *v25 = a6;
  v25[1] = a7;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) = v18;
  *(_QWORD *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers) = a8;
  *(_BYTE *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch) = a9;
  *(_BYTE *)(v11 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) = a10;
  v26 = qword_254AC7B80;
  swift_retain();
  swift_retain();
  if (v26 != -1)
    swift_once();
  v27 = sub_211A47748();
  sub_21194F3E0(v27, (uint64_t)qword_254ADC7E8);
  v28 = sub_211A47724();
  v29 = sub_211A47D30();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 67109120;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v28, v29, "FMFManagerConfiguration: internal useCache: %{BOOL}d", v30, 8u);
    MEMORY[0x212BE48A0](v30, -1, -1);
  }
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v22, v23);
  return v11;
}

uint64_t FMFManagerConfiguration.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v2 = sub_211A47274();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FMFManagerConfiguration.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v2 = sub_211A47274();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_2119DC708(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_211A480D8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_2119DC79C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_2119DC7C0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_2119DC7EC()
{
  unint64_t result;

  result = qword_254ACBE58;
  if (!qword_254ACBE58)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFManagerSubsystem, &type metadata for FMFManagerSubsystem);
    atomic_store(result, (unint64_t *)&qword_254ACBE58);
  }
  return result;
}

unint64_t sub_2119DC834()
{
  unint64_t result;

  result = qword_254ACBE60;
  if (!qword_254ACBE60)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFManagerSubsystem, &type metadata for FMFManagerSubsystem);
    atomic_store(result, (unint64_t *)&qword_254ACBE60);
  }
  return result;
}

unint64_t sub_2119DC87C()
{
  unint64_t result;

  result = qword_254ACBE68;
  if (!qword_254ACBE68)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFManagerSubsystem, &type metadata for FMFManagerSubsystem);
    atomic_store(result, (unint64_t *)&qword_254ACBE68);
  }
  return result;
}

unint64_t sub_2119DC8C4()
{
  unint64_t result;

  result = qword_254ACBE70;
  if (!qword_254ACBE70)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFManagerSubsystem, &type metadata for FMFManagerSubsystem);
    atomic_store(result, (unint64_t *)&qword_254ACBE70);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFManagerSubsystem()
{
  return &type metadata for FMFManagerSubsystem;
}

uint64_t type metadata accessor for FMFSnapshotHandlers()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFSnapshotHandlers()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFSnapshotHandlers.__allocating_init(responseFilter:responseHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_2119DC94C()
{
  return type metadata accessor for FMFManagerConfiguration();
}

uint64_t method lookup function for FMFManagerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFManagerConfiguration.shouldUseFileCache.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

double sub_2119DC96C()
{
  return 30.0;
}

double sub_2119DC974()
{
  return 50.0;
}

uint64_t FMReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FMReverseGeocodingCache.init(preferredLocale:)(a1);
  return v2;
}

_QWORD *FMReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v2 = v1;
  v29 = a1;
  v3 = *v1;
  v28 = sub_211A47D90();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A47D60();
  MEMORY[0x24BDAC7A8](v6, v7);
  v25 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_211A471F0();
  v11 = qword_254ACC020;
  type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v12);
  *(_QWORD *)((char *)v2 + v11) = sub_211A47820();
  v13 = qword_254ACC028;
  *(_QWORD *)((char *)v2 + v13) = sub_211A47820();
  *(_QWORD *)((char *)v2 + qword_254ACC030) = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v2 + qword_254ACC038) = 0;
  if (qword_254AC7B88 != -1)
    swift_once();
  v14 = sub_211A47748();
  sub_21194F3E0(v14, (uint64_t)qword_254ADC800);
  swift_retain_n();
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v31 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_211A483A8();
    v30 = sub_211950A9C(v19, v20, &v31);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v15, v16, "%s: initialized", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v18, -1, -1);
    MEMORY[0x212BE48A0](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v22 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setName_, v22);

  objc_msgSend(v21, sel_setMaxConcurrentOperationCount_, 10);
  sub_211920E14();
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_211A47F70();
  swift_bridgeObjectRelease();
  v31 = 0xD000000000000022;
  v32 = 0x8000000211A55FC0;
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A477CC();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2119612EC();
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_211961368();
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v27, *MEMORY[0x24BEE5750], v28);
  v23 = sub_211A47DC0();
  *(_QWORD *)((char *)v2 + qword_254ACC040) = v21;
  sub_2119DCF94(v29, (uint64_t)v2 + qword_254ADC718);
  *(_QWORD *)((char *)v2 + qword_254ACC048) = v23;
  return v2;
}

uint64_t type metadata accessor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMReverseGeocodingCache.FMReverseGeocodingCacheContext);
}

uint64_t FMReverseGeocodingCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_254ACC018;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2119784B8(v0 + qword_254ADC718);
  return v0;
}

uint64_t FMReverseGeocodingCache.__deallocating_deinit()
{
  FMReverseGeocodingCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2119DCF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_211958C38(&qword_254AC9200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2119DCFDC(void (*a1)(void))
{
  a1();
  return sub_211A483A8();
}

uint64_t dispatch thunk of FMAddressProtocol.init(mapItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for FMReverseGeocodingCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMReverseGeocodingCache.__allocating_init(preferredLocale:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t sub_2119DD01C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_211A47208();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2119DD0C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  void **v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  v6 = sub_211A47208();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  if ((v12 | v8) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || v13 + ((v9 + ((v8 + 40) & ~v8) + v12) & ~v12) + 1 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    v17 = v6;
    v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    v19 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v19[1] = v20[1];
    v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (void **)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = *v22;
    *v21 = *v22;
    v24 = ((unint64_t)v21 + v8 + 8) & ~v8;
    v25 = ((unint64_t)v22 + v8 + 8) & ~v8;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v29 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = v23;
    v28(v24, v25, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v24 + v9 + v12) & ~v12, (v25 + v9 + v12) & ~v12, v29);
    *(_BYTE *)(((v24 + v9 + v12) & ~v12) + v13) = *(_BYTE *)(((v25 + v9 + v12) & ~v12) + v13);
  }
  return a1;
}

uint64_t sub_2119DD268(uint64_t a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (id *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);

  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_2119DD304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v8 = *v9;
  v11 = sub_211A47208();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v8 + v13 + 8) & ~v13;
  v15 = ((unint64_t)v9 + v13 + 8) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v10;
  v16(v14, v15, v11);
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = *(_QWORD *)(v12 + 64) + v19;
  v21 = (v20 + v14) & ~v19;
  v22 = (v20 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v21, v22);
  *(_BYTE *)(v21 + *(_QWORD *)(v18 + 64)) = *(_BYTE *)(v22 + *(_QWORD *)(v18 + 64));
  return a1;
}

_QWORD *sub_2119DD418(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  void **v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (void **)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  v11 = *v8;
  *v8 = *v9;
  v12 = v10;

  v13 = sub_211A47208();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = ((unint64_t)v8 + v15 + 8) & ~v15;
  v17 = ((unint64_t)v9 + v15 + 8) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v16, v17, v13);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  *(_BYTE *)(v22 + *(_QWORD *)(v19 + 64)) = *(_BYTE *)(v23 + *(_QWORD *)(v19 + 64));
  return a1;
}

_OWORD *sub_2119DD53C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_211A47208();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 8) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16;
  v18 = (v17 + v12) & ~v16;
  v19 = (v17 + v13) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v18, v19);
  *(_BYTE *)(v18 + *(_QWORD *)(v15 + 64)) = *(_BYTE *)(v19 + *(_QWORD *)(v15 + 64));
  return a1;
}

_QWORD *sub_2119DD61C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = *v10;

  v12 = sub_211A47208();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = ((unint64_t)v9 + v14 + 8) & ~v14;
  v16 = ((unint64_t)v10 + v14 + 8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v15, v16, v12);
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = *(_QWORD *)(v13 + 64) + v18;
  v20 = (v19 + v15) & ~v18;
  v21 = (v19 + v16) & ~v18;
  (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v20, v21);
  *(_BYTE *)(v20 + *(_QWORD *)(v17 + 64)) = *(_BYTE *)(v21 + *(_QWORD *)(v17 + 64));
  return a1;
}

uint64_t sub_2119DD724(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v6 = sub_211A47208();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v12)
    goto LABEL_27;
  v17 = *(_QWORD *)(v10 + 64) + ((v15 + ((v14 + 40) & ~v14) + v16) & ~v16) + 1;
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if ((v11 & 0x80000000) != 0)
      {
        v25 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v14 + 8) & ~v14;
        if ((_DWORD)v8 == v12)
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v25, v8, v13);
        else
          return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v10 + 48))((v25 + v15 + v16) & ~v16, *(unsigned int *)(v10 + 84), v9);
      }
      else
      {
        v24 = *(_QWORD *)(a1 + 8);
        if (v24 >= 0xFFFFFFFF)
          LODWORD(v24) = -1;
        return (v24 + 1);
      }
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if (*(_DWORD *)(v10 + 64) + (((_DWORD)v15 + (((_DWORD)v14 + 40) & ~(_DWORD)v14) + (_DWORD)v16) & ~(_DWORD)v16) != -1)
  {
    if (v17 <= 3)
      v23 = *(_DWORD *)(v10 + 64) + ((v15 + ((v14 + 40) & ~(_DWORD)v14) + v16) & ~(_DWORD)v16) + 1;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_2119DD90C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v8 = *(_QWORD *)(sub_211A47208() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + ((v12 + 40) & ~v12) + v13) & ~v13) + 1;
  if (a3 <= v11)
  {
    v15 = 0;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v11 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v11 < a2)
  {
    v16 = ~v11 + a2;
    if (v14 < 4)
    {
      if (*(_DWORD *)(v9 + 64)
         + ((*(_DWORD *)(v8 + 64) + (((_DWORD)v12 + 40) & ~(_DWORD)v12) + (_DWORD)v13) & ~(_DWORD)v13) != -1)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + ((v12 + 40) & ~v12) + v13) & ~v13) + 1);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + ((v12 + 40) & ~v12) + v13) & ~v13) + 1);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t type metadata accessor for FMFGetURLInfoRequest()
{
  uint64_t result;

  result = qword_254ACC158;
  if (!qword_254ACC158)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119DDBBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A4713C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2119DDC30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[4];

  v0 = sub_211A470E8();
  v3[3] = MEMORY[0x24BEE0D00];
  v3[0] = v0;
  v3[1] = v1;
  swift_beginAccess();
  sub_21193C870((uint64_t)v3, 7107189, 0xE300000000000000);
  return swift_endAccess();
}

uint64_t sub_2119DDCB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_254ADC720;
  v2 = sub_211A4713C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_2119DDCF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_254ADC720;
  v4 = sub_211A4713C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2119DDDD8()
{
  return type metadata accessor for FMFGetURLInfoRequest();
}

uint64_t sub_2119DDE08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x212BE496C](v1);
}

uint64_t sub_2119DDE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2119DDEBC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x212BE496C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_2119DDF30;
}

void sub_2119DDF30(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id FMFGenericResponseHandler.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  objc_class *v18;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = v0;
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier];
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_identifier + 8];
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, &v21);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFGenericResponseHandler<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v20, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

  }
  v18 = (objc_class *)type metadata accessor for FMFGenericResponseHandler();
  v22.receiver = v2;
  v22.super_class = v18;
  return objc_msgSendSuper2(&v22, sel_dealloc);
}

uint64_t sub_2119DE2C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  unsigned __int8 v77;
  unsigned __int8 v78;
  _BYTE v79[304];
  _BYTE v80[312];

  v74 = a2;
  v5 = type metadata accessor for FMFLocationAlert();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v73 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_211A47208();
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72, v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211958C38(qword_254AC8A78);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v68 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v67 = (uint64_t)&v65 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v23 = (char *)&v65 - v22;
  MEMORY[0x24BDAC7A8](v21, v24);
  v75 = (char *)&v65 - v25;
  v26 = sub_211958C38((uint64_t *)&unk_254ACC2E0);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  MEMORY[0x24BDAC7A8](v28, v29);
  v33 = *(_QWORD *)(a1 + 8);
  if (!v33)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a3, 1, 1, v5);
  v34 = (char *)&v65 - v30;
  v65 = v31;
  v66 = v32;
  v69 = v6;
  v70 = a3;
  v71 = v5;
  v35 = *v32;
  swift_bridgeObjectRetain();
  v36 = swift_bridgeObjectRetain();
  v37 = v35;
  v38 = v76;
  sub_2119DEA6C(v36, v37, v33);
  v40 = v39;
  v76 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v40)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v70, 1, 1, v71);
  v41 = (uint64_t)v34;
  FMFSchedule.init(from:)(objc_msgSend(v40, sel_schedule), (uint64_t)v34);
  v42 = objc_msgSend(v40, sel_muteEndDate);
  if (v42)
  {
    v43 = v42;
    sub_211A471E4();

    v44 = v72;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v23, v12, v72);
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v45(v23, 0, 1, v44);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v44) != 1)
    {
      sub_211923EE8((uint64_t)v23, qword_254AC8A78);
      v46 = objc_msgSend(v40, sel_muteEndDate);
      if (v46)
      {
        v47 = v46;
        v48 = v67;
        sub_211A471E4();

        v49 = 0;
      }
      else
      {
        v49 = 1;
        v48 = v67;
      }
      v45((char *)v48, v49, 1, v44);
      sub_21192DD68(v48, (uint64_t)v75, qword_254AC8A78);
      goto LABEL_13;
    }
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v44 = v72;
    v45(v23, 1, 1, v72);
  }
  sub_211923EE8((uint64_t)v23, qword_254AC8A78);
  v45(v75, 1, 1, v44);
LABEL_13:
  if (objc_msgSend(v40, sel_shouldUseCloudKitStore))
  {
    sub_211934794((uint64_t)v66, v73, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v74 = objc_msgSend(v40, sel_location);
    v51 = objc_msgSend(v40, sel_location);
    objc_msgSend(v51, sel_horizontalAccuracy);
    v53 = v52;

    v72 = v53;
    v54 = FMFAddress.init(from:)(objc_msgSend(v40, sel_placemark), (uint64_t)v80);
    nullsub_1(v80, v54);
    sub_21192DD68((uint64_t)v80, (uint64_t)v79, &qword_254ACCB40);
    v55 = objc_msgSend(v40, sel_label);
    v67 = sub_211A47910();
    v57 = v56;

    v78 = 4;
    LOBYTE(v55) = objc_msgSend(v40, sel_isRecurring);
    v58 = v65;
    sub_21192C6B8(v41, v65, (uint64_t *)&unk_254ACC2E0);
    v77 = 3;
    v59 = v41;
    v60 = (uint64_t)v75;
    v61 = v68;
    sub_21192C6B8((uint64_t)v75, v68, qword_254AC8A78);
    v64 = v55;
    v62 = v70;
    FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v73, v74, v72, 0, (uint64_t)v79, v67, v57, &v78, v70, 1, v64, v58, 0, 0, 0, 0, 0, 0, &v77,
      v61);

    sub_211923EE8(v60, qword_254AC8A78);
    sub_211923EE8(v59, (uint64_t *)&unk_254ACC2E0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v62, 0, 1, v71);
  }
  else
  {

    sub_211923EE8((uint64_t)v75, qword_254AC8A78);
    sub_211923EE8(v41, (uint64_t *)&unk_254ACC2E0);
    v63 = v70;
    sub_211934794((uint64_t)v66, v70, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v63, 0, 1, v71);
  }
}

id FMFGenericResponseHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FMFGenericResponseHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119DE8FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_2119DE954(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(preferences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(features:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(myInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(devices:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(labels:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(friends:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(locationAlerts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(locations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.didReceive(labelledLocations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FMFDataUpdateDelegate.willSaveCacheToDisk()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t method lookup function for FMFGenericResponseHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of FMFGenericResponseHandler.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

void sub_2119DEA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  void *v35;

  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_211A47EC8();
    sub_211911824(0, &qword_254ACC2B8);
    sub_211961268();
    sub_211A47C7C();
    v5 = v30;
    v27 = v31;
    v6 = v32;
    v7 = v33;
    v8 = v34;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v10 = ~v9;
    v11 = -v9;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v6 = v10;
    v7 = 0;
  }
  v25 = v6;
  v26 = (unint64_t)(v6 + 64) >> 6;
  v28 = v7;
  v29 = v8;
  if (v5 < 0)
    goto LABEL_10;
LABEL_8:
  if (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v26)
    {
      v17 = *(_QWORD *)(v27 + 8 * v16);
      ++v7;
      if (v17)
        goto LABEL_28;
      v7 = v16 + 1;
      if (v16 + 1 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 2;
      if (v16 + 2 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 3;
      if (v16 + 3 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
      {
LABEL_28:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        v15 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            v19 = a3;
            v20 = objc_msgSend(v15, sel_identifier, v25);
            v21 = sub_211A47910();
            v23 = v22;

            a3 = v19;
            if (v21 == a2 && v23 == v19)
              break;
            v24 = sub_211A48258();
            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_36;

            v28 = v7;
            v29 = v8;
            if ((v5 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (sub_211A47EEC())
            {
              sub_211911824(0, &qword_254ACC2B8);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v15 = v35;
              swift_unknownObjectRelease();
              v8 = v29;
              if (v35)
                continue;
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      v7 = v16 + 4;
      if (v16 + 4 < v26)
      {
        v17 = *(_QWORD *)(v27 + 8 * v7);
        if (!v17)
        {
          v18 = v28 + 6;
          while (v26 != v18)
          {
            v17 = *(_QWORD *)(v27 + 8 * v18++);
            if (v17)
            {
              v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_211973358();
    return;
  }
  __break(1u);
}

void sub_2119DEDDC(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119F514C(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

void sub_2119DEDF4(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119F50A4(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_2119DEE0C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119DEE38()
{
  return swift_deallocObject();
}

uint64_t sub_2119DEE48()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_2119DEE7C(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119F5008(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_2119DEE94(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119F4F6C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_2119DEEAC(char *a1@<X8>)
{
  uint64_t v1;

  sub_2119F4ED0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2119DEEC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t FMFContactsDataController.__allocating_init(isSnapshotMode:)(int a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FMFContactsDataController.init(isSnapshotMode:)(a1);
  return v2;
}

uint64_t FMFContactsDataController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    *(_DWORD *)v5 = 136446466;
    v22 = v21;
    sub_211958C38((uint64_t *)&unk_254ACC330);
    v6 = sub_211A47928();
    sub_211950A9C(v6, v7, &v22);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = *(_QWORD *)(v1 + 16);
    v9 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    v10 = sub_21193707C(0xCuLL, v8, v9);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x212BE376C](v10, v12, v14, v16);
    v19 = v18;
    swift_bridgeObjectRelease();
    sub_211950A9C(v17, v19, &v22);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "%{public}s<%s>.deinit", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v21, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_211962AB8(v1 + 40);

  sub_211923EE8(v1 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactSearchDate, qword_254AC8A78);
  sub_211923EE8(v1 + OBJC_IVAR____TtC7FMFCore25FMFContactsDataController_lastContactUpdateDate, qword_254AC8A78);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FMFContactsDataController.__deallocating_deinit()
{
  FMFContactsDataController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2119DF2AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = sub_211A47070();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211A47064();
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x24BDBA328]))
  {
    v7 = objc_msgSend(a1, sel_nickname);
    sub_211A47910();

    sub_211A47058();
    v8 = objc_msgSend(a1, sel_nickname);
    v9 = sub_211A47910();
    v11 = v10;

    swift_bridgeObjectRelease();
    v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v12 = v9 & 0xFFFFFFFFFFFFLL;
    if (v12)
      v13 = 1;
    else
      v13 = 2;
  }
  else
  {
    v13 = 2;
  }
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x24BDBA2C8]))
  {
    v14 = objc_msgSend(a1, sel_givenName);
    sub_211A47910();

    sub_211A47034();
  }
  if (objc_msgSend(a1, sel_isKeyAvailable_, *MEMORY[0x24BDBA2C0]))
  {
    v15 = objc_msgSend(a1, sel_familyName);
    sub_211A47910();

    sub_211A47040();
  }
  v16 = (void *)sub_211A4704C();
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_localizedStringFromPersonNameComponents_style_options_, v16, v13, 0);

  v19 = sub_211A47910();
  v21 = v20;

  v22 = (void *)sub_211A4704C();
  v23 = objc_msgSend(v17, sel_localizedStringFromPersonNameComponents_style_options_, v22, 1, 0);

  v24 = sub_211A47910();
  v26 = v25;

  v27 = objc_msgSend(a1, sel_identifier);
  v28 = sub_211A47910();
  v30 = v29;

  v31 = sub_2119E09EC(a1);
  v33 = v32;
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v6, v37);
  if (v33 >> 60 != 15)
    result = sub_211964B98(v31, v33);
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = v30;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v21;
  *(_BYTE *)(a2 + 32) = v33 >> 60 != 15;
  *(_QWORD *)(a2 + 40) = v24;
  *(_QWORD *)(a2 + 48) = v26;
  return result;
}

unint64_t sub_2119DF5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_211A478EC();
  v7 = objc_msgSend(v5, sel_predicateForContactsMatchingName_, v6);

  v8 = *(void **)(v3 + 56);
  if (!a3)
    sub_21194FDF8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8CD8);
  v9 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  v10 = objc_msgSend(v8, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v7, v9, v32);

  v11 = v32[0];
  if (!v10)
  {
    v14 = v32[0];
    v15 = (void *)sub_211A470DC();

    swift_willThrow();
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    v17 = v15;
    v18 = v15;
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      v32[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = v15;
      sub_211958C38(&qword_254ACC360);
      v24 = sub_211A47928();
      sub_211950A9C(v24, v25, (uint64_t *)v32);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v19, v20, "Error getting contact - %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v22, -1, -1);
      MEMORY[0x212BE48A0](v21, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  sub_211911824(0, &qword_254ACC368);
  v12 = sub_211A47AA8();
  v13 = v11;

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_6;
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_254AC7B80 != -1)
      swift_once();
    v27 = sub_211A47748();
    sub_21194F3E0(v27, (uint64_t)qword_254ADC7E8);
    v28 = sub_211A47724();
    v29 = sub_211A47D30();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_21190D000, v28, v29, "No contact found in store", v30, 2u);
      MEMORY[0x212BE48A0](v30, -1, -1);
    }

    return 0;
  }
LABEL_6:

  return v12;
}

unint64_t sub_2119DF9F8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_21194FDF8();
  swift_bridgeObjectRetain();
  sub_2119727E0(v6);
  v7 = sub_2119DFA80(a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_2119DFA80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  void *v7;
  id v8;
  char **v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v37[3];

  v4 = v3;
  v37[2] = *(id *)MEMORY[0x24BDAC8D0];
  v37[0] = a1;
  v37[1] = a2;
  sub_21194FDB4();
  v6 = sub_211A47E80();
  v7 = (void *)objc_opt_self();
  if ((v6 & 1) != 0)
  {
    v8 = (id)sub_211A478EC();
    v9 = &selRef_predicateForContactsMatchingEmailAddress_;
  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x24BDBAD88]);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v10, sel_initWithStringValue_, v11);

    v9 = &selRef_predicateForContactsMatchingPhoneNumber_;
  }
  v12 = objc_msgSend(v7, *v9, v8);

  v13 = *(void **)(v4 + 56);
  if (!a3)
    sub_21194FDF8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8CD8);
  v14 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  v37[0] = 0;
  v15 = objc_msgSend(v13, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v12, v14, v37);

  v16 = v37[0];
  if (!v15)
  {
    v19 = v37[0];
    v20 = (void *)sub_211A470DC();

    swift_willThrow();
    if (qword_254AC7B80 != -1)
      swift_once();
    v21 = sub_211A47748();
    sub_21194F3E0(v21, (uint64_t)qword_254ADC7E8);
    v22 = v20;
    v23 = v20;
    v24 = sub_211A47724();
    v25 = sub_211A47D30();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v37[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = v20;
      sub_211958C38(&qword_254ACC360);
      v29 = sub_211A47928();
      sub_211950A9C(v29, v30, (uint64_t *)v37);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v24, v25, "Error getting contact - %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v27, -1, -1);
      MEMORY[0x212BE48A0](v26, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  sub_211911824(0, &qword_254ACC368);
  v17 = sub_211A47AA8();
  v18 = v16;

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v31)
      goto LABEL_9;
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    if (qword_254AC7B80 != -1)
      swift_once();
    v32 = sub_211A47748();
    sub_21194F3E0(v32, (uint64_t)qword_254ADC7E8);
    v33 = sub_211A47724();
    v34 = sub_211A47D30();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_21190D000, v33, v34, "No contact found in store", v35, 2u);
      MEMORY[0x212BE48A0](v35, -1, -1);
    }

    return 0;
  }
LABEL_9:

  return v17;
}

id sub_2119DFF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void **i;
  void *v30;
  void *v31;
  unint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  unint64_t v35;
  id v37[2];

  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v2 + 56);
  if (!a2)
    sub_21194FDF8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8CD8);
  v5 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  v37[0] = 0;
  v6 = objc_msgSend(v4, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v5, v37);

  if (!v6)
  {
    v12 = v37[0];
    v13 = (void *)sub_211A470DC();

    swift_willThrow();
    if (qword_254AC7B80 != -1)
      swift_once();
    v14 = sub_211A47748();
    sub_21194F3E0(v14, (uint64_t)qword_254ADC7E8);
    v15 = v13;
    v16 = v13;
    v17 = sub_211A47724();
    v18 = sub_211A47D30();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v37[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = v13;
      sub_211958C38(&qword_254ACC360);
      v22 = sub_211A47928();
      sub_211950A9C(v22, v23, (uint64_t *)v37);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v17, v18, "Error fetching me contact - %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v20, -1, -1);
      MEMORY[0x212BE48A0](v19, -1, -1);

      return 0;
    }

LABEL_23:
    return 0;
  }
  v7 = *MEMORY[0x24BDBA2F0];
  v8 = v37[0];
  if ((objc_msgSend(v6, sel_isKeyAvailable_, v7) & 1) != 0)
  {
    v9 = v6;
    v10 = objc_msgSend(v9, sel_identifier);
    sub_211A47910();

    return v6;
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_21190D000, v25, v26, "Me contact found but no image data. Will try to search by handle", v27, 2u);
    MEMORY[0x212BE48A0](v27, -1, -1);
  }

  if (!a1)
  {
    v17 = sub_211A47724();
    v33 = sub_211A47D30();
    if (!os_log_type_enabled(v17, v33))
    {

      goto LABEL_26;
    }
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_21190D000, v17, v33, "FMFInfo does NOT have any email handles.", v34, 2u);
    MEMORY[0x212BE48A0](v34, -1, -1);

    goto LABEL_23;
  }
  v28 = *(_QWORD *)(a1 + 16);
  if (!v28)
  {
LABEL_26:

    return 0;
  }
  swift_bridgeObjectRetain();
  for (i = (void **)(a1 + 40); ; i += 2)
  {
    v31 = *(i - 1);
    v30 = *i;
    swift_bridgeObjectRetain();
    v32 = sub_2119DFA80(v31, v30, 0);
    if (v32)
      break;
    swift_bridgeObjectRelease();
    if (!--v28)
    {

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v35 = v32;
  swift_bridgeObjectRelease();
  v11 = sub_2119E0A70(v35);
  swift_bridgeObjectRelease();

  return v11;
}

id sub_2119E0430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v42[2];

  v4 = v3;
  v42[1] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = (void *)objc_opt_self();
  sub_211958C38((uint64_t *)&unk_254ACC540);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_211A4A230;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_predicateForContactsWithIdentifiers_, v10);

  v12 = *(void **)(v4 + 56);
  if (!a3)
    sub_21194FDF8();
  swift_bridgeObjectRetain();
  sub_211958C38(&qword_254AC8CD8);
  v13 = (void *)sub_211A47A90();
  swift_bridgeObjectRelease();
  v42[0] = 0;
  v14 = objc_msgSend(v12, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v11, v13, v42);

  v15 = v42[0];
  if (!v14)
  {
    v24 = v42[0];
    v25 = (void *)sub_211A470DC();

    swift_willThrow();
    if (qword_254AC7B80 != -1)
      swift_once();
    v26 = sub_211A47748();
    sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
    v27 = v25;
    v28 = v25;
    v29 = sub_211A47724();
    v30 = sub_211A47D30();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (void *)swift_slowAlloc();
      v42[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = v25;
      sub_211958C38(&qword_254ACC360);
      v34 = sub_211A47928();
      sub_211950A9C(v34, v35, (uint64_t *)v42);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v29, v30, "Error getting contact - %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v32, -1, -1);
      MEMORY[0x212BE48A0](v31, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  sub_211911824(0, &qword_254ACC368);
  v16 = sub_211A47AA8();
  v17 = v15;

  if (qword_254AC7B80 != -1)
    swift_once();
  v18 = sub_211A47748();
  sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v19 = sub_211A47724();
  v20 = sub_211A47D30();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    v23 = (void *)sub_211A47A90();
    v42[0] = v23;
    sub_211A47E2C();
    *v22 = v23;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v19, v20, "Got contact - %@", v21, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v22, -1, -1);
    MEMORY[0x212BE48A0](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_211A480A8();
    swift_bridgeObjectRelease();
    if (v37)
      goto LABEL_15;
    goto LABEL_18;
  }
  if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    v38 = sub_211A47724();
    v39 = sub_211A47D30();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_21190D000, v38, v39, "No contact found in store", v40, 2u);
      MEMORY[0x212BE48A0](v40, -1, -1);
    }

    return 0;
  }
LABEL_15:
  v36 = sub_2119E0A70(v16);

  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_2119E09EC(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;

  if (*(_BYTE *)(v1 + 32) == 1)
    v2 = objc_msgSend(a1, sel_thumbnailImageData);
  else
    v2 = objc_msgSend(a1, sel_imageData);
  v3 = v2;
  if (!v3)
    return 0;
  v4 = sub_211A4716C();

  return v4;
}

id sub_2119E0A70(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_211A480A8())
  {
    v4 = *(unsigned __int8 *)(v1 + 32);
    v5 = a1 & 0xC000000000000001;
    v6 = 4;
    while (1)
    {
      v1 = v6 - 4;
      v7 = v5 ? (id)MEMORY[0x212BE3DA8](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v1, 1))
        break;
      if (v4)
      {
        v10 = objc_msgSend(v7, sel_thumbnailImageData);
        if (v10)
          goto LABEL_14;
      }
      else
      {
        v10 = objc_msgSend(v7, sel_imageData);
        if (v10)
        {
LABEL_14:
          v11 = v10;
          v12 = sub_211A4716C();
          v14 = v13;

          sub_21193B8F8(v12, v14);
          swift_bridgeObjectRelease();
          return v8;
        }
      }

      ++v6;
      if (v9 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v5 = a1 & 0xC000000000000001;
LABEL_18:
  if (v5)
LABEL_23:
    JUMPOUT(0x212BE3DA8);
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_23;
  }
  return *(id *)(a1 + 32);
}

uint64_t sub_2119E0C14(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[6];

  v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  v7 = sub_211A479D0();
  if (v8)
  {
    v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0)
        break;
      v7 = sub_211A479D0();
      v9 = v11;
      if (!v11)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_2119E0CDC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_2119E0CEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of FMFContactsDataControllerDelegate.contactsDataMayHaveChanged()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FMFContactsDataControllerDelegate.updated(contactMatching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_2119E0D30()
{
  return type metadata accessor for FMFContactsDataController();
}

uint64_t method lookup function for FMFContactsDataController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFContactsDataController.__allocating_init(isSnapshotMode:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of FMFContactsDataController.matchContacts(for:currentMatching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(name:keysToFetch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(handle:additionalKeysToFetch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of FMFContactsDataController.fetchMeContact(handles:keysToFetch:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t sub_2119E0D94(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t result;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD v69[2];
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v63 = a2;
  v3 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v3, v4);
  v62 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  v7 = sub_21194FDA0(v6);
  swift_bridgeObjectRelease();
  v70 = v7;
  sub_21194F584((uint64_t *)&v70);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v70;
  v58 = v70[2];
  if (v58)
  {
    v9 = 0;
    v59 = v70 + 4;
    v57 = (uint64_t)v70;
    while (1)
    {
      v65 = v9;
      if (v9 >= *(_QWORD *)(v8 + 16))
        break;
      v10 = &v59[2 * v9];
      v11 = v10[1];
      v67 = *v10;
      v70 = (_QWORD *)v67;
      v71 = v11;
      v74 = 64;
      v75 = 0xE100000000000000;
      v12 = sub_211A47274();
      v13 = (uint64_t)v62;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v62, 1, 1, v12);
      v14 = sub_21194FDB4();
      swift_bridgeObjectRetain();
      v55 = (_QWORD *)v14;
      v56 = v14;
      sub_211A47E74();
      LOBYTE(v14) = v15;
      sub_211923EE8(v13, &qword_254AC9200);
      swift_bridgeObjectRelease();
      v68 = v11;
      if ((v14 & 1) != 0)
      {
        v31 = objc_msgSend(v63, sel_phoneNumbers);
        sub_211958C38(&qword_254ACC550);
        v32 = sub_211A47AA8();

        if (v32 >> 62)
        {
          swift_bridgeObjectRetain();
          v33 = sub_211A480A8();
          swift_bridgeObjectRelease();
          if (v33)
          {
LABEL_21:
            v34 = v32;
            v35 = 0;
            v66 = v34 & 0xC000000000000001;
            v64 = v34;
            v60 = v34 + 32;
            v61 = v34 & 0xFFFFFFFFFFFFFF8;
            while (1)
            {
              if (v66)
              {
                v36 = (id)MEMORY[0x212BE3DA8](v35, v64);
              }
              else
              {
                if (v35 >= *(_QWORD *)(v61 + 16))
                  goto LABEL_54;
                v36 = *(id *)(v60 + 8 * v35);
              }
              v37 = v36;
              if (__OFADD__(v35++, 1))
                goto LABEL_53;
              v39 = objc_msgSend(v36, sel_value);
              v40 = objc_msgSend(v39, sel_stringValue);

              v41 = sub_211A47910();
              v43 = v42;

              v44 = 0xE000000000000000;
              v74 = 0;
              v75 = 0xE000000000000000;
              v45 = HIBYTE(v43) & 0xF;
              if ((v43 & 0x2000000000000000) == 0)
                v45 = v41 & 0xFFFFFFFFFFFFLL;
              v70 = (_QWORD *)v41;
              v71 = v43;
              v72 = 0;
              v73 = v45;
              v46 = sub_211A479D0();
              if (v47)
              {
                v48 = v46;
                v49 = v47;
                do
                {
                  v69[0] = v48;
                  v69[1] = v49;
                  MEMORY[0x24BDAC7A8](v46, v47);
                  v55 = v69;
                  if ((sub_2119E0C14(sub_2119E13A4, (uint64_t)(&v57 - 4), 2336, 0xE200000000000000) & 1) == 0)
                    MEMORY[0x212BE37C0](v48, v49);
                  swift_bridgeObjectRelease();
                  v46 = sub_211A479D0();
                  v48 = v46;
                  v49 = v47;
                }
                while (v47);
                v50 = v74;
                v44 = v75;
              }
              else
              {
                v50 = 0;
              }
              swift_bridgeObjectRelease();
              v70 = (_QWORD *)v50;
              v71 = v44;
              if (sub_211A47A3C() == v67 && v51 == v68)
                break;
              v52 = sub_211A48258();
              swift_bridgeObjectRelease();

              if ((v52 & 1) != 0)
              {
LABEL_50:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_51;
              }
              if (v35 == v33)
                goto LABEL_40;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();

LABEL_51:
            swift_release();
            return 1;
          }
        }
        else
        {
          v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v33)
            goto LABEL_21;
        }
      }
      else
      {
        v16 = objc_msgSend(v63, sel_emailAddresses);
        sub_211958C38(&qword_254ACC550);
        v17 = sub_211A47AA8();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          v18 = sub_211A480A8();
          swift_bridgeObjectRelease();
          if (v18)
          {
LABEL_7:
            v66 = v17 & 0xC000000000000001;
            v19 = 4;
            while (1)
            {
              v20 = v18;
              v21 = v66 ? (id)MEMORY[0x212BE3DA8](v19 - 4, v17) : *(id *)(v17 + 8 * v19);
              v22 = v21;
              v23 = v19 - 3;
              if (__OFADD__(v19 - 4, 1))
                break;
              v24 = v17;
              v25 = objc_msgSend(v21, sel_value);
              v26 = sub_211A47910();
              v28 = v27;

              if (v26 == v67 && v28 == v68)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();

                goto LABEL_51;
              }
              v30 = sub_211A48258();
              swift_bridgeObjectRelease();

              if ((v30 & 1) != 0)
                goto LABEL_50;
              ++v19;
              v18 = v20;
              v17 = v24;
              if (v23 == v20)
              {
                v8 = v57;
                goto LABEL_41;
              }
            }
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            break;
          }
        }
        else
        {
          v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v18)
            goto LABEL_7;
        }
LABEL_40:
        v8 = v57;
      }
LABEL_41:
      v53 = v65 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v53;
      if (v53 == v58)
        goto LABEL_47;
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_47:
    swift_release();
    return 0;
  }
  return result;
}

uint64_t sub_2119E13A4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_211A48258() & 1;
}

uint64_t FMFBaseAction.init(requiresRefresh:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

uint64_t FMFBaseAction.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2119E140C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2119E143C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_2119E1478())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FMFBaseAction.__allocating_init(requiresRefresh:)(char a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = a1;
  return result;
}

uint64_t sub_2119E14E4()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 60;
}

uint64_t FMFBaseAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2119E15AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

uint64_t sub_2119E15D4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_2119E1618(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t type metadata accessor for FMFBaseAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFBaseAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FMFBaseAction.requiresRefresh.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FMFBaseAction.__allocating_init(requiresRefresh:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FMFBaseAction.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_2119E16BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = sub_211958C38(&qword_254ACCAD8);
  v3 = *(_QWORD *)(v32 - 8);
  v5 = MEMORY[0x24BDAC7A8](v32, v4);
  v29 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v30 = (char *)&v27 - v8;
  v9 = type metadata accessor for FMFLocation();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v27 = v1;
    v33 = MEMORY[0x24BEE4AF8];
    sub_211942004(0, v13, 0);
    v15 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v28 = *(_QWORD *)(v3 + 72);
    v16 = (uint64_t)v30;
    do
    {
      v17 = v32;
      v18 = *(int *)(v32 + 48);
      v19 = v16 + v18;
      v20 = v15 + v18;
      sub_211934794(v15, v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192C6B8(v20, v19, (uint64_t *)&unk_254AC8CB0);
      v21 = *(int *)(v17 + 48);
      v22 = v29;
      v23 = v29 + v21;
      sub_211942810(v16, v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192DD68(v19, v23, (uint64_t *)&unk_254AC8CB0);
      sub_211934794(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211923EE8(v22, &qword_254ACCAD8);
      v14 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211942004(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v33;
      }
      v25 = *(_QWORD *)(v14 + 16);
      v24 = *(_QWORD *)(v14 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_211942004(v24 > 1, v25 + 1, 1);
        v14 = v33;
      }
      *(_QWORD *)(v14 + 16) = v25 + 1;
      sub_211942810((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v15 += v28;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_2119E1918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[312];

  v27 = a2;
  v5 = type metadata accessor for FMFLocation();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v26 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (uint64_t *)((char *)&v25 - v12);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v25 - v15;
  v17 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v27;
  sub_21192C6B8(a1, (uint64_t)v20, (uint64_t *)&unk_254AC8CB0);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5) != 1)
  {
    sub_211942810((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934794((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v23 = v26;
    sub_211934794((uint64_t)v16, v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_21192DD68(v21, (uint64_t)v28, &qword_254ACCB40);
    sub_21196F7C4(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
    FMFLocation.init(from:updatedLocation:address:)(v13, v23, (uint64_t)v28, a3);
    sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v22 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a3, v22, 1, v5);
  return sub_21196F7C4(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
}

uint64_t sub_2119E1B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_211A47B8C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_211A47B80();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_211923EE8(a1, &qword_254AC9FD0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_211A47B50();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2119E1C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_211A47B8C();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_211A47B80();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_211923EE8(a1, &qword_254AC9FD0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_211A47B50();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_211958C38(&qword_254ACCB20);
  return swift_task_create();
}

unint64_t sub_2119E1D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = sub_211958C38(&qword_254ACCAD8);
  v3 = *(_QWORD *)(v42 - 8);
  v5 = MEMORY[0x24BDAC7A8](v42, v4);
  v39 = (uint64_t)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v38 = (char *)v34 - v8;
  v9 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FMFLocation();
  v43 = *(_QWORD *)(v41 - 8);
  v14 = MEMORY[0x24BDAC7A8](v41, v13);
  v40 = (uint64_t)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v35 = (uint64_t)v34 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x24BEE4AF8];
  v34[0] = a1;
  v34[1] = v1;
  v19 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v20 = *(_QWORD *)(v3 + 72);
  v36 = v12;
  v37 = v20;
  swift_bridgeObjectRetain();
  v21 = MEMORY[0x24BEE4AF8];
  v22 = (uint64_t)v38;
  do
  {
    v23 = v42;
    v24 = *(int *)(v42 + 48);
    v25 = v22 + v24;
    v26 = v19 + v24;
    sub_211934794(v19, v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_21192C6B8(v26, v25, (uint64_t *)&unk_254AC8CB0);
    v27 = v39;
    v28 = v39 + *(int *)(v23 + 48);
    sub_211942810(v22, v39, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_21192DD68(v25, v28, (uint64_t *)&unk_254AC8CB0);
    v29 = (uint64_t)v36;
    sub_21192C6B8(v28, (uint64_t)v36, (uint64_t *)&unk_254AC8CB0);
    sub_211923EE8(v27, &qword_254ACCAD8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v29, 1, v41) == 1)
    {
      sub_211923EE8(v29, (uint64_t *)&unk_254AC8CB0);
    }
    else
    {
      v30 = v35;
      sub_211942810(v29, v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211942810(v30, v40, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_21194B098(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v32 = *(_QWORD *)(v21 + 16);
      v31 = *(_QWORD *)(v21 + 24);
      if (v32 >= v31 >> 1)
        v21 = sub_21194B098(v31 > 1, v32 + 1, 1, v21);
      *(_QWORD *)(v21 + 16) = v32 + 1;
      sub_211942810(v40, v21+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    }
    v19 += v37;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2119E2088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_211A47B8C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_211A47B80();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_211923EE8(a1, &qword_254AC9FD0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_211A47B50();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2119E21D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_211A47B8C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_211A47B80();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_211923EE8(a1, &qword_254AC9FD0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_211A47B50();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  sub_211958C38(&qword_254ACCB20);
  return swift_task_create();
}

uint64_t sub_2119E2360()
{
  return swift_bridgeObjectRetain();
}

unint64_t FMFCorePreferenceDomain.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_2119E2388()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_2119EA5A4((uint64_t)&unk_24CCC5288);
  result = swift_arrayDestroy();
  qword_254ACC630 = v0;
  return result;
}

uint64_t FMFBundleIdsAllowedToUseCache.getter()
{
  if (qword_254AC7B60 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t FMFManager.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2119E243C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[3];

  v2 = *(_QWORD *)(a1 + 8);
  v3 = (_QWORD *)*a2;
  swift_beginAccess();
  v3[5] = v2;
  swift_unknownObjectWeakAssign();
  v4 = v3[9];
  v5 = v3[10];
  v7[0] = v3[8];
  v7[1] = v4;
  v7[2] = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211917040(v7);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119E24F4()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x212BE496C](v0 + 32);
}

void (*sub_2119E2538(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x212BE496C](v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2119E25A4;
}

void sub_2119E25A4(uint64_t a1, char a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 40) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    v4 = (_QWORD *)v3[5];
    swift_endAccess();
    swift_unknownObjectRelease();
    v5 = v4[9];
    v6 = v4[10];
    v7[0] = v4[8];
    v7[1] = v5;
    v7[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211917040(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

uint64_t sub_2119E2670(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21192C6B8(a1, (uint64_t)v7, &qword_254AC8870);
  v8 = *a2 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  sub_21196158C((uint64_t)v7, v8);
  swift_endAccess();
  sub_211914F58();
  return sub_211923EE8((uint64_t)v7, &qword_254AC8870);
}

uint64_t sub_2119E2734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  return sub_21192C6B8(v3, a1, &qword_254AC8870);
}

uint64_t (*sub_2119E278C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2119E27D4;
}

uint64_t sub_2119E27D4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_211914F58();
  return result;
}

uint64_t sub_2119E2804()
{
  return sub_21191637C(&qword_254AC83D8);
}

uint64_t sub_2119E2818@<X0>(uint64_t a1@<X8>)
{
  return sub_2119E2830(&OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation, a1);
}

uint64_t sub_2119E2824@<X0>(uint64_t a1@<X8>)
{
  return sub_2119E2830(&OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation, a1);
}

uint64_t sub_2119E2830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(v2 + 184);
  if (v4)
  {
    v5 = v4 + *a1;
    swift_beginAccess();
    return sub_21192C6B8(v5, a2, (uint64_t *)&unk_254AC8CB0);
  }
  else
  {
    v7 = type metadata accessor for FMFLocation();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

uint64_t sub_2119E28BC()
{
  swift_retain();
  sub_211958C38(&qword_254ACAA08);
  sub_211A47DA8();
  return swift_release();
}

uint64_t sub_2119E2924()
{
  swift_retain();
  sub_211958C38(&qword_254ACAA30);
  sub_211A47DA8();
  return swift_release();
}

uint64_t sub_2119E298C()
{
  swift_retain();
  sub_211958C38((uint64_t *)&unk_254ACC2F0);
  sub_211A47DA8();
  return swift_release();
}

uint64_t sub_2119E29F4()
{
  return sub_21191637C(&qword_254AC83A0);
}

uint64_t sub_2119E2A08()
{
  return sub_21191637C(&qword_254ACA9D8);
}

uint64_t sub_2119E2A1C()
{
  return sub_21191637C(&qword_254AC8388);
}

uint64_t sub_2119E2A30()
{
  return swift_retain();
}

uint64_t sub_2119E2A3C()
{
  return sub_21191637C(&qword_254ACABB8);
}

uint64_t FMFManager.__allocating_init(configuration:tabInfo:)(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  FMFManager.init(configuration:tabInfo:)(a1, a2);
  return v4;
}

uint64_t sub_2119E2A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_2119E2AB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 208);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E2B20()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_delegate + 8) = &off_24CCCB630;
  swift_unknownObjectWeakAssign();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2119E2B80()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FMFManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v1 + 16);
    v7 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, &v20);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFManager<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v19, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_211962AB8(v1 + 32);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  sub_211931C34(v1 + 136);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_211923EE8(v1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend, &qword_254AC8870);
  return v1;
}

uint64_t FMFManager.__deallocating_deinit()
{
  FMFManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2119E2E80()
{
  uint64_t v1[3];

  v1[0] = MEMORY[0x24BEE4AF8];
  v1[1] = MEMORY[0x24BEE4AF8];
  v1[2] = MEMORY[0x24BEE4AF8];
  sub_211917040(v1);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2119E2EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch();
}

uint64_t sub_2119E2EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 208);
  *(_QWORD *)(v0 + 40) = v1;
  if (v1)
  {
    swift_retain();
    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    v2 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 48) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v3;
    *v3 = v0;
    v3[1] = sub_2119E2FC8;
    return sub_2119175CC(v2);
  }
  else
  {
    **(_BYTE **)(v0 + 24) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E2FC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_2119E303C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 24) = *(_QWORD *)(v0 + 40) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119E305C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119E3098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  sub_2119299DC(v0 + 136, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  sub_211931DB4(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  return sub_211931C34((uint64_t)v4);
}

uint64_t sub_2119E3110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 225) & 1) == 0)
  {
    v18[0] = v3;
    if (qword_254AC7B80 != -1)
      swift_once();
    v13 = sub_211A47748();
    sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
    v14 = sub_211A47724();
    v15 = sub_211A47D30();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21190D000, v14, v15, "FMFManager: stop refreshing", v16, 2u);
      MEMORY[0x212BE48A0](v16, -1, -1);
    }

    *(_BYTE *)(v1 + 224) = 0;
    aBlock[4] = sub_2119EA7F0;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCB390;
    v17 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v12, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119E339C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_21196B714();
  swift_release();
  swift_retain();
  sub_2119F6D9C();
  swift_release();
  swift_retain();
  sub_2119F6F8C();
  swift_release();
  result = sub_2119393F8();
  if ((result & 1) != 0)
  {
    v7 = sub_211A47B8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = a1;
    swift_retain();
    sub_2119E1B00((uint64_t)v5, (uint64_t)&unk_254ACCB08, (uint64_t)v8);
    return swift_release();
  }
  else if (*(_QWORD *)(a1 + 200))
  {
    swift_retain();
    sub_211A0F6AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_2119E34E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a4;
  v4[24] = *(_QWORD *)(type metadata accessor for LiveRelabilityStats(0) - 8);
  v4[25] = swift_task_alloc();
  v4[26] = *(_QWORD *)(type metadata accessor for ShallowRelabilityStats(0) - 8);
  v4[27] = swift_task_alloc();
  sub_211958C38(qword_254AC8A78);
  v4[28] = swift_task_alloc();
  v5 = sub_211A47208();
  v4[29] = v5;
  v4[30] = *(_QWORD *)(v5 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119E35BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 208);
  *(_QWORD *)(v0 + 264) = v1;
  if (v1)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E365C()
{
  sub_2119D589C();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2119E36A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 208);
  *(_QWORD *)(v0 + 272) = v1;
  if (v1)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E3740()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_beginAccess();
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v1 + 152);
  swift_bridgeObjectRetain();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2119E37A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 208);
  *(_QWORD *)(v0 + 288) = v1;
  if (v1
    || ((*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 232)), v2 = *(_QWORD *)(v0 + 224), swift_bridgeObjectRelease(), sub_211923EE8(v2, qword_254AC8A78), v3 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 208), (*(_QWORD *)(v0 + 296) = v3) != 0))
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E3898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC7FMFCore27FMFSecureLocationController_startRefreshingTimestamp;
  swift_beginAccess();
  sub_21192C6B8(v2, v1, qword_254AC8A78);
  swift_release();
  return swift_task_switch();
}

void sub_2119E391C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  v5 = *(_QWORD *)(v0 + 280);
  if (v4 == 1)
  {
    swift_bridgeObjectRelease();
    sub_211923EE8(v3, qword_254AC8A78);
LABEL_26:
    v29 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 208);
    *(_QWORD *)(v0 + 296) = v29;
    if (v29)
    {
      swift_retain();
      swift_task_switch();
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    return;
  }
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 216);
  v33 = *(_QWORD *)(v0 + 208);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v0 + 256), v3, v2);
  sub_211A471FC();
  sub_211A4719C();
  v9 = v8;
  v30 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v30(v6, v2);
  v10 = 0;
  v11 = -1;
  v31 = v5 + 64;
  v12 = -1 << *(_BYTE *)(v5 + 32);
  if (-v12 < 64)
    v11 = ~(-1 << -(char)v12);
  v13 = v11 & *(_QWORD *)(v5 + 64);
  v32 = (unint64_t)(63 - v12) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_7;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v32)
      goto LABEL_25;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_25;
      v25 = *(_QWORD *)(v31 + 8 * v10);
      if (!v25)
      {
        v10 = v24 + 2;
        if (v24 + 2 >= v32)
          goto LABEL_25;
        v25 = *(_QWORD *)(v31 + 8 * v10);
        if (!v25)
        {
          v10 = v24 + 3;
          if (v24 + 3 >= v32)
            goto LABEL_25;
          v25 = *(_QWORD *)(v31 + 8 * v10);
          if (!v25)
            break;
        }
      }
    }
LABEL_24:
    v13 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_7:
    v16 = *(uint64_t **)(v0 + 216);
    sub_211934794(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v33 + 72) * v15, (uint64_t)v16, type metadata accessor for ShallowRelabilityStats);
    v17 = *v16;
    v18 = *(_BYTE *)(v7 + 8);
    v19 = *(_QWORD *)(v7 + 16);
    v20 = *(_QWORD *)(v7 + 24);
    sub_211934758((uint64_t)v16, type metadata accessor for ShallowRelabilityStats);
    v21 = (void *)sub_211A478EC();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v17;
    *(_BYTE *)(v22 + 24) = v18;
    *(_DWORD *)(v22 + 25) = *(_DWORD *)(v0 + 336);
    *(_DWORD *)(v22 + 28) = *(_DWORD *)(v0 + 339);
    *(_QWORD *)(v22 + 32) = v19;
    *(_QWORD *)(v22 + 40) = v20;
    *(_QWORD *)(v22 + 48) = v9;
    *(_QWORD *)(v0 + 96) = sub_2119ACCCC;
    *(_QWORD *)(v0 + 104) = v22;
    *(_QWORD *)(v0 + 64) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 72) = 1107296256;
    *(_QWORD *)(v0 + 80) = sub_2119ACCD4;
    *(_QWORD *)(v0 + 88) = &unk_24CCCB8F8;
    v23 = _Block_copy((const void *)(v0 + 64));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v23);

  }
  v26 = v24 + 4;
  if (v26 >= v32)
  {
LABEL_25:
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 232);
    swift_release();
    v30(v27, v28);
    goto LABEL_26;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v32)
      goto LABEL_25;
    v25 = *(_QWORD *)(v31 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_24;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_2119E3CF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  swift_beginAccess();
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v1 + 160);
  swift_bridgeObjectRetain();
  swift_release();
  return swift_task_switch();
}

void sub_2119E3D54()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int64_t v23;

  v1 = 0;
  v2 = v0[38];
  v22 = v2 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v0[24];
  v6 = v0[25];
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v7 = v3 & *(_QWORD *)(v2 + 64);
  v23 = (unint64_t)(63 - v4) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v1 << 6);
      goto LABEL_5;
    }
    v16 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v16 >= v23)
      goto LABEL_23;
    v17 = *(_QWORD *)(v22 + 8 * v16);
    ++v1;
    if (!v17)
    {
      v1 = v16 + 1;
      if (v16 + 1 >= v23)
        goto LABEL_23;
      v17 = *(_QWORD *)(v22 + 8 * v1);
      if (!v17)
      {
        v1 = v16 + 2;
        if (v16 + 2 >= v23)
          goto LABEL_23;
        v17 = *(_QWORD *)(v22 + 8 * v1);
        if (!v17)
        {
          v1 = v16 + 3;
          if (v16 + 3 >= v23)
            goto LABEL_23;
          v17 = *(_QWORD *)(v22 + 8 * v1);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v9 = __clz(__rbit64(v17)) + (v1 << 6);
LABEL_5:
    v10 = (uint64_t *)v0[25];
    sub_211934794(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v5 + 72) * v9, (uint64_t)v10, type metadata accessor for LiveRelabilityStats);
    v11 = *v10;
    v12 = *(_BYTE *)(v6 + 8);
    sub_211934758((uint64_t)v10, type metadata accessor for LiveRelabilityStats);
    v13 = (void *)sub_211A478EC();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v11;
    *(_BYTE *)(v14 + 24) = v12;
    v0[6] = sub_2119AD054;
    v0[7] = v14;
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_2119ACCD4;
    v0[5] = &unk_24CCCB8A8;
    v15 = _Block_copy(v0 + 2);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v15);

  }
  v18 = v16 + 4;
  if (v18 < v23)
  {
    v17 = *(_QWORD *)(v22 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v1 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_27;
        if (v1 >= v23)
          goto LABEL_23;
        v17 = *(_QWORD *)(v22 + 8 * v1);
        ++v18;
        if (v17)
          goto LABEL_22;
      }
    }
    v1 = v18;
    goto LABEL_22;
  }
LABEL_23:
  v19 = v0[23];
  swift_release();
  v20 = *(_QWORD *)(v19 + 208);
  v0[39] = v20;
  if (v20)
  {
    swift_retain();
    v21 = (_QWORD *)swift_task_alloc();
    v0[40] = v21;
    *v21 = v0;
    v21[1] = sub_2119E4068;
    sub_211990B78();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    ((void (*)(void))v0[1])();
  }
}

uint64_t sub_2119E4068()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 328) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2119E411C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119E4194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 225) & 1) == 0)
  {
    v18[0] = v3;
    if (qword_254AC7B80 != -1)
      swift_once();
    v13 = sub_211A47748();
    sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
    v14 = sub_211A47724();
    v15 = sub_211A47D30();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21190D000, v14, v15, "FMFManager: forced refresh", v16, 2u);
      MEMORY[0x212BE48A0](v16, -1, -1);
    }

    aBlock[4] = sub_2119EA7F8;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCB3B8;
    v17 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v18[1] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v12, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v18[0] + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119E441C()
{
  swift_retain();
  sub_21193A740(0.0);
  return swift_release();
}

uint64_t sub_2119E444C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  NSObject *v49;
  Class isa;
  Class v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t, id);
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  Class v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, NSObject *, NSObject *, id);
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  NSObject *v88;
  uint64_t (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  _QWORD *v91;

  v3 = v2;
  v87 = a2;
  v5 = type metadata accessor for FMFFriend();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v88 = ((char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v82 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v82 - v15;
  v17 = MEMORY[0x24BEE4AF8];
  v91 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v83 = v6;
  v85 = v18;
  v86 = v2;
  if (v18)
  {
    v19 = *(unsigned __int8 *)(v6 + 80);
    v20 = *(_QWORD *)(v6 + 72);
    v84 = a1;
    v89 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((v19 + 32) & ~v19);
    v21 = (uint64_t)v89 + a1;
    v22 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_211934794(v21, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v16[*(int *)(v5 + 44)] & 1) != 0)
      {
        sub_211942810((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_21194B0AC(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = (uint64_t)v91;
        v24 = v91[2];
        v23 = v91[3];
        if (v24 >= v23 >> 1)
        {
          sub_21194B0AC(v23 > 1, v24 + 1, 1);
          v22 = (uint64_t)v91;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        sub_211942810((uint64_t)v13, (uint64_t)v89 + v22 + v24 * v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      else
      {
        sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v21 += v20;
      --v18;
    }
    while (v18);
    v17 = (uint64_t)v91;
    v3 = v86;
    a1 = v84;
  }
  swift_bridgeObjectRelease();
  v25 = v87;
  if (v87)
  {
    v26 = v87;
    if (qword_254AC7B80 != -1)
      swift_once();
    v27 = sub_211A47748();
    sub_21194F3E0(v27, (uint64_t)qword_254ADC7E8);
    v28 = v25;
    swift_bridgeObjectRetain();
    v29 = v25;
    swift_retain();
    v30 = sub_211A47724();
    v31 = sub_211A47D30();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = a1;
      v34 = swift_slowAlloc();
      *(_DWORD *)v32 = 134218498;
      v90 = *(_QWORD *)(v17 + 16);
      v91 = (_QWORD *)v34;
      sub_211A47E2C();
      swift_release();
      *(_WORD *)(v32 + 12) = 2048;
      v90 = v85;
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      swift_getErrorValue();
      v35 = sub_211A482DC();
      v90 = sub_211950A9C(v35, v36, (uint64_t *)&v91);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v30, v31, "FMFManager: received cached %ld proactive friends (out of %ld) (error=%s)", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      v37 = v34;
      a1 = v33;
      v25 = v87;
      MEMORY[0x212BE48A0](v37, -1, -1);
      MEMORY[0x212BE48A0](v32, -1, -1);

    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease();

    }
  }
  v38 = *(_QWORD *)(v3 + 56);
  v39 = OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers;
  v40 = *(_QWORD *)(v38 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (!v40 || (v41 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v40 + 16)) == 0)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v55 = sub_211A47748();
    sub_21194F3E0(v55, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    swift_retain();
    v56 = sub_211A47724();
    v57 = sub_211A47D30();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      *(_DWORD *)v58 = 134218240;
      v91 = *(_QWORD **)(v17 + 16);
      sub_211A47E2C();
      swift_release();
      *(_WORD *)(v58 + 12) = 2048;
      v91 = (_QWORD *)v85;
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v56, v57, "FMFManager: received %ld proactive friends (out of %ld)", (uint8_t *)v58, 0x16u);
      MEMORY[0x212BE48A0](v58, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }

    v59 = *(_QWORD *)(v38 + v39);
    if (v59)
    {
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id))(v59 + 32);
      if (v60)
      {
        swift_retain();
        v60(v3, a1, v17, v17, v25);
        sub_2119BA4CC((uint64_t)v60);
      }
    }
    return swift_release();
  }
  v42 = *(_QWORD *)(v40 + 24);
  swift_retain();
  v82 = v42;
  v89 = v41;
  v43 = v41(v3, a1, v17);
  v44 = v43;
  if (!v25)
  {
    v45 = *(_QWORD *)(v43 + 16);
    if (v45)
    {
      v84 = a1;
      swift_release();
      v46 = (uint64_t)v44 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
      v47 = *(_QWORD *)(v83 + 72);
      swift_bridgeObjectRetain();
      v48 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v49 = v88;
        sub_211934794(v46, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        isa = v49->isa;
        v51 = v49[1].isa;
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v48 = sub_2119B02DC(0, v48[2] + 1, 1, v48);
        v53 = v48[2];
        v52 = v48[3];
        if (v53 >= v52 >> 1)
          v48 = sub_2119B02DC((_QWORD *)(v52 > 1), v53 + 1, 1, v48);
        v48[2] = v53 + 1;
        v54 = &v48[2 * v53];
        v54[4] = isa;
        v54[5] = v51;
        v46 += v47;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      v91 = v48;
      sub_211958C38(&qword_254AC8378);
      sub_21193AC74(&qword_254ACCAF8, &qword_254AC8378, MEMORY[0x24BEE12B0]);
      v67 = sub_211A478C8();
      v69 = v68;
      swift_bridgeObjectRelease();
      if (qword_254AC7B80 != -1)
        swift_once();
      v70 = sub_211A47748();
      sub_21194F3E0(v70, (uint64_t)qword_254ADC7E8);
      v71 = v84;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v72 = sub_211A47724();
      v73 = sub_211A47D30();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v91 = (_QWORD *)v75;
        *(_DWORD *)v74 = 134218498;
        swift_bridgeObjectRelease();
        v90 = v85;
        v88 = v67;
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2048;
        v76 = v44[2].isa;
        swift_bridgeObjectRelease();
        v90 = (uint64_t)v76;
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 22) = 2080;
        swift_bridgeObjectRetain();
        v90 = sub_211950A9C((uint64_t)v88, v69, (uint64_t *)&v91);
        sub_211A47E2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21190D000, v72, v73, "FMFManager: received %ld friends incl. %ld proactive locations asked for %s…", (uint8_t *)v74, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v75, -1, -1);
        MEMORY[0x212BE48A0](v74, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      v80 = v86;
      if (*(_QWORD *)(v86 + 192))
      {
        v81 = (_QWORD *)swift_allocObject();
        v81[2] = v80;
        v81[3] = v71;
        v81[4] = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_2119B34AC(v44, (uint64_t)sub_2119EC654, (uint64_t)v81);
        sub_2119BA4CC((uint64_t)v89);
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
      goto LABEL_53;
    }
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v62 = sub_211A47748();
  sub_21194F3E0(v62, (uint64_t)qword_254ADC7E8);
  swift_retain();
  v63 = sub_211A47724();
  v64 = sub_211A47D30();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v65 = 134217984;
    v88 = v44;
    v66 = *(_QWORD *)(v17 + 16);
    swift_release();
    v91 = (_QWORD *)v66;
    v44 = v88;
    v3 = v86;
    v25 = v87;
    sub_211A47E2C();
    swift_release();
    _os_log_impl(&dword_21190D000, v63, v64, "FMFManager: received %ld proactive friends but no proactive location asked", v65, 0xCu);
    MEMORY[0x212BE48A0](v65, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v77 = *(_QWORD *)(v38 + v39);
  if (!v77 || (v78 = *(void (**)(uint64_t, uint64_t, NSObject *, NSObject *, id))(v77 + 32)) == 0)
  {
LABEL_53:
    v79 = (uint64_t)v89;
    goto LABEL_54;
  }
  swift_retain();
  v78(v3, a1, v44, v44, v25);
  sub_2119BA4CC((uint64_t)v89);
  v79 = (uint64_t)v78;
LABEL_54:
  sub_2119BA4CC(v79);
  return swift_bridgeObjectRelease();
}

void sub_2119E4F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v35 = a3;
  v36 = a2;
  v6 = type metadata accessor for FMFFriend();
  MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v33 = a1;
    v34 = a4;
    v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v13 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v32 = v11;
    do
    {
      sub_211934794(v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v15 = *v10;
      v16 = v10[1];
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_2119B02DC(0, v14[2] + 1, 1, v14);
      v18 = v14[2];
      v17 = v14[3];
      if (v18 >= v17 >> 1)
        v14 = sub_2119B02DC((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
      v14[2] = v18 + 1;
      v19 = &v14[2 * v18];
      v19[4] = v15;
      v19[5] = v16;
      v12 += v13;
      --v11;
    }
    while (v11);
    a1 = v33;
    swift_bridgeObjectRelease();
    a4 = v34;
    v11 = v32;
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v38 = v14;
  sub_211958C38(&qword_254AC8378);
  sub_21193AC74(&qword_254ACCAF8, &qword_254AC8378, MEMORY[0x24BEE12B0]);
  v20 = sub_211A478C8();
  v22 = v21;
  swift_bridgeObjectRelease();
  if (qword_254AC7B80 != -1)
    swift_once();
  v23 = sub_211A47748();
  sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v38 = (_QWORD *)v27;
    *(_DWORD *)v26 = 134218242;
    swift_bridgeObjectRelease();
    v37 = v11;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    v37 = sub_211950A9C(v20, v22, (uint64_t *)&v38);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v24, v25, "FMFManager: fetched proactive %ld locations for %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v27, -1, -1);
    MEMORY[0x212BE48A0](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v28 = v36;
  v29 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_snapshotHandlers);
  if (v29)
  {
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v29 + 32);
    if (v30)
    {
      swift_retain();
      v30(v28, v35, a4, a1, 0);
      sub_2119BA4CC((uint64_t)v30);
    }
  }
}

uint64_t sub_2119E5314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = v3;
  v8 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFFriend();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v40 = v15;
  v41 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v37 - v17;
  if (qword_254AC7B80 != -1)
    swift_once();
  v19 = sub_211A47748();
  sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
  sub_211934794(a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v20 = sub_211A47724();
  v21 = sub_211A47D30();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v37 = v12;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v44 = v24;
    v38 = v3;
    v39 = a3;
    *(_DWORD *)v23 = 136315138;
    v25 = FMFFriend.debugDescription.getter();
    v43 = sub_211950A9C(v25, v26, &v44);
    v4 = v38;
    a3 = v39;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    _os_log_impl(&dword_21190D000, v20, v21, "FMFManager: startLiveLocation %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v24, -1, -1);
    v27 = v23;
    v12 = v37;
    MEMORY[0x212BE48A0](v27, -1, -1);
  }
  else
  {
    sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }

  result = sub_2119393F8();
  if ((result & 1) != 0)
  {
    v29 = sub_211A47B8C();
    v30 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v42, 1, 1, v29);
    v31 = a1;
    v32 = v41;
    sub_211934794(v31, v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v33 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v4;
    sub_211942810(v32, (uint64_t)v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_retain();
    sub_2119E1B00(v30, (uint64_t)&unk_254ACC650, (uint64_t)v34);
  }
  else
  {
    if (!*(_QWORD *)(v4 + 200))
      return result;
    sub_211958C38(&qword_254ACA3C0);
    v35 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_211A4A230;
    sub_211934794(a1, v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_retain();
    sub_211A0C808(v36, 1, a2, a3);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_2119E56AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_211A47400();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119E570C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 208);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    sub_211958C38(&qword_254ACA3C0);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_211A4A230;
    sub_211934794(v5, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *MEMORY[0x24BE31D00], v3);
    swift_retain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v9;
    *v9 = v0;
    v9[1] = sub_2119E5844;
    return sub_211995D4C(v8, *(_QWORD *)(v0 + 48));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E5844()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *(_QWORD *)(*v1 + 32);
  v4 = *(_QWORD *)(*v1 + 40);
  v5 = *v1;
  *(_QWORD *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2119E5904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFFriend();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v32 - v15;
  if (qword_254AC7B80 != -1)
    swift_once();
  v17 = sub_211A47748();
  sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
  sub_211934794(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v18 = sub_211A47724();
  v19 = sub_211A47D30();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v33 = v9;
    v22 = v21;
    v37 = v21;
    v32 = v13;
    *(_DWORD *)v20 = 136315138;
    v34 = v7;
    v23 = FMFFriend.debugDescription.getter();
    v36 = sub_211950A9C(v23, v24, &v37);
    v7 = v34;
    v13 = v32;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    _os_log_impl(&dword_21190D000, v18, v19, "FMFManager: stopLiveLocation %s", v20, 0xCu);
    swift_arrayDestroy();
    v25 = v22;
    v9 = v33;
    MEMORY[0x212BE48A0](v25, -1, -1);
    MEMORY[0x212BE48A0](v20, -1, -1);
  }
  else
  {
    sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }

  result = sub_2119393F8();
  if ((result & 1) != 0)
  {
    v27 = sub_211A47B8C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 1, 1, v27);
    sub_211934794(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v28 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v2;
    sub_211942810((uint64_t)v13, (uint64_t)v29 + v28, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_retain();
    sub_2119E1B00((uint64_t)v7, (uint64_t)&unk_254ACC660, (uint64_t)v29);
  }
  else
  {
    if (!*(_QWORD *)(v1 + 200))
      return result;
    sub_211958C38(&qword_254ACA3C0);
    v30 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_211A4A230;
    sub_211934794(a1, v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    swift_retain();
    sub_211A0E104(v31, 1);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_2119E5C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_211A47400();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119E5CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 208);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    sub_211958C38(&qword_254ACA3C0);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v0 + 64) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_211A4A230;
    sub_211934794(v5, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *MEMORY[0x24BE31D00], v3);
    swift_retain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v9;
    *v9 = v0;
    v9[1] = sub_2119E5E20;
    return sub_21199672C(v8, *(_QWORD *)(v0 + 48));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E5E20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *(_QWORD *)(*v1 + 32);
  v4 = *(_QWORD *)(*v1 + 40);
  v5 = *v1;
  *(_QWORD *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2119E5EE0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2119E5F14()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    v2 = v1;
    sub_211A01298();

  }
}

uint64_t sub_2119E5F60(uint64_t *a1, uint64_t (*a2)(uint64_t *, void *), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v17;

  v4 = v3;
  if (qword_254AC7B80 != -1)
    swift_once();
  v8 = sub_211A47748();
  sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v9 = sub_211A47724();
  v10 = sub_211A47D30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = (*(uint64_t (**)(void))(*a1 + 120))();
    sub_211950A9C(v13, v14, &v17);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v9, v10, "FMFManager: perform action %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v12, -1, -1);
    MEMORY[0x212BE48A0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v15 = *(uint64_t **)(v3 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_211A32A50((uint64_t)a1, v15, a1, v4, a2, a3);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2119E6188(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, void *), uint64_t a6)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38[3];

  v10 = *a1;
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = v10;
  v12 = sub_211A47748();
  sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
  v13 = a2;
  v14 = a2;
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = a3;
    v18 = swift_slowAlloc();
    v38[0] = v18;
    *(_DWORD *)v17 = 136315394;
    sub_211958C38(&qword_254ACDE90);
    v19 = sub_211A47E08();
    v37 = sub_211950A9C(v19, v20, v38);
    sub_211A47E2C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 12) = 2048;
    v37 = qword_211A4FA78[v10];
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v15, v16, "FMFManager: performed action with error?: %s status?: %ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v21 = v18;
    a3 = v35;
    MEMORY[0x212BE48A0](v21, -1, -1);
    v22 = v17;
    v11 = v10;
    MEMORY[0x212BE48A0](v22, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  if (*(_BYTE *)(a3 + 16) == 1)
  {
    swift_retain_n();
    v23 = sub_211A47724();
    v24 = sub_211A47D30();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = a3;
      v26 = (uint8_t *)swift_slowAlloc();
      v36 = v11;
      v27 = swift_slowAlloc();
      v37 = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = (*(uint64_t (**)(void))(*(_QWORD *)v25 + 120))();
      sub_211950A9C(v28, v29, &v37);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v23, v24, "FMFManager: refreshing because action requires it %s", v26, 0xCu);
      swift_arrayDestroy();
      v30 = v27;
      v11 = v36;
      MEMORY[0x212BE48A0](v30, -1, -1);
      v31 = v26;
      a3 = v25;
      MEMORY[0x212BE48A0](v31, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = a3;
    *(_QWORD *)(v33 + 24) = a5;
    *(_QWORD *)(v33 + 32) = a6;
    *(_BYTE *)(v33 + 40) = v11;
    *(_QWORD *)(v33 + 48) = a2;
    v34 = a2;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21196B9E8((uint64_t)sub_2119EC694, v33);
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(v37) = v11;
    return a5(&v37, a2);
  }
}

uint64_t sub_2119E6598(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t), uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;

  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  if (os_log_type_enabled(v11, v12))
  {
    v19 = a6;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = (*(uint64_t (**)(void))(*(_QWORD *)a2 + 120))();
    sub_211950A9C(v15, v16, &v20);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v11, v12, "FMFManager: completing action after refresh %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v14, -1, -1);
    v17 = v13;
    a6 = v19;
    MEMORY[0x212BE48A0](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v20) = a5;
  return a3(&v20, a6);
}

uint64_t sub_2119E6788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v8 = sub_211A4713C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v34 = a2;
    v17 = v16;
    v18 = swift_slowAlloc();
    v35 = a3;
    v32 = v18;
    v37[0] = v18;
    *(_DWORD *)v17 = 136315394;
    v33 = v9;
    v36 = *v4;
    sub_211958C38(&qword_254ACC668);
    v19 = sub_211A47928();
    v36 = sub_211950A9C(v19, v20, v37);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2080;
    v36 = sub_211950A9C(0xD00000000000001ELL, 0x8000000211A56370, v37);
    v9 = v33;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v14, v15, "%s: %s", (uint8_t *)v17, 0x16u);
    v21 = v32;
    swift_arrayDestroy();
    a3 = v35;
    MEMORY[0x212BE48A0](v21, -1, -1);
    v22 = v17;
    a2 = v34;
    MEMORY[0x212BE48A0](v22, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v12, a1, v8);
  type metadata accessor for FMFGetURLInfoRequest();
  v24 = swift_allocObject();
  v23((char *)(v24 + qword_254ADC720), (uint64_t)v12, v8);
  v25 = sub_21193BD18();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_beginAccess();
  sub_2119299DC((uint64_t)(v4 + 17), (uint64_t)v37);
  v26 = v38;
  v27 = v39;
  sub_211931DB4(v37, v38);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v4;
  v28[3] = a2;
  v28[4] = a3;
  v29 = *(void (**)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t))(v27 + 64);
  v30 = type metadata accessor for FMFBaseResponse();
  swift_retain();
  swift_retain();
  v29(v25, sub_2119EAB90, v28, v30, v26, v27);
  swift_release();
  swift_release();
  return sub_211931C34((uint64_t)v37);
}

uint64_t sub_2119E6B18(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(_QWORD, void *))
{
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v25;

  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v5 = sub_211A47748();
    sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v6 = a2;
    swift_retain();
    v7 = a2;
    v8 = sub_211A47724();
    v9 = sub_211A47D30();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v10 = 136315394;
      v25 = v11;
      sub_211958C38(&qword_254ACC668);
      v12 = sub_211A47928();
      sub_211950A9C(v12, v13, &v25);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v10 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v14 = sub_211A47E08();
      sub_211950A9C(v14, v15, &v25);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v8, v9, "%s: error when getting info for URL: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v11, -1, -1);
      MEMORY[0x212BE48A0](v10, -1, -1);
    }
    else
    {
      swift_release_n();

    }
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v17 = sub_211A47724();
    v18 = sub_211A47D18();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_DWORD *)v19 = 136315138;
      v25 = v20;
      sub_211958C38(&qword_254ACC668);
      v21 = sub_211A47928();
      sub_211950A9C(v21, v22, &v25);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_21190D000, v17, v18, "%s: Got info for url.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v20, -1, -1);
      MEMORY[0x212BE48A0](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }

  }
  return a4(0, a2);
}

uint64_t sub_2119E6EE0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_211950A9C(a1, a2, &v12);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v7, v8, "FMFManager: appendLiveSessionInformation, friendId: %s, successfulLive: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v10, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  sub_21196BE2C(a1, a2, a3 & 1);
  return swift_release();
}

uint64_t sub_2119E70CC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19[3];

  v3 = v2;
  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x212BE38C8](v11, MEMORY[0x24BEE0D00]);
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_211950A9C(v12, v14, v19);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v7, v8, "FMFManager: appendLegacyFallbackData, friendId: %s, didFallback: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v10, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_retain();
  v15 = a2 & 1;
  sub_21196C274(a1, v15);
  swift_release();
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v3 + 32);
  if (result)
  {
    v17 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 136))(v3, a1, v15, ObjectType, v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2119E732C()
{
  swift_retain();
  sub_211958C38((uint64_t *)&unk_254AC8CB0);
  sub_211A47DA8();
  return swift_release();
}

uint64_t sub_2119E739C()
{
  swift_bridgeObjectRetain();
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t static FMFManager.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_211A48258();
}

uint64_t sub_2119E7410(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_211A48258();
  }
}

uint64_t sub_2119E743C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v4 = a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v4);
  if (result)
  {
    v6 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *FMFManager.didReceive(preferences:)(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __int16 v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = result[2];
  if (v2)
  {
    v3 = result[3];
    v5 = *result;
    v4 = result[1];
    swift_beginAccess();
    result = (uint64_t *)MEMORY[0x212BE496C](v1 + 32);
    if (result)
    {
      v6 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v8 = v5 & 0x101;
      v9 = BYTE2(v5) & 1;
      v10 = BYTE3(v5);
      v11 = v4;
      v12 = v2;
      v13 = v3;
      (*(void (**)(uint64_t, __int16 *, uint64_t, uint64_t))(v6 + 64))(v1, &v8, ObjectType, v6);
      return (uint64_t *)swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall FMFManager.didReceive(myInfo:)(FMFCore::FMFMyInfo_optional *myInfo)
{
  uint64_t v1;
  void *rawValue;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::Bool eligibleAutoMe;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void *v14;
  _QWORD v15[7];
  Swift::Bool v16;

  rawValue = myInfo->value.emails._rawValue;
  if (myInfo->value.emails._rawValue)
  {
    countAndFlagsBits = myInfo->value.meDeviceId.value._countAndFlagsBits;
    object = myInfo->value.meDeviceId.value._object;
    eligibleAutoMe = myInfo->value.eligibleAutoMe;
    v7 = myInfo->value.deviceId._countAndFlagsBits;
    v6 = myInfo->value.deviceId._object;
    v9 = myInfo->value.firstName._countAndFlagsBits;
    v8 = myInfo->value.firstName._object;
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v1 + 32))
    {
      v14 = v6;
      v10 = object;
      v11 = countAndFlagsBits;
      v12 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType();
      v15[0] = rawValue;
      v15[1] = v9;
      v15[2] = v8;
      v15[3] = v11;
      v15[4] = v10;
      v15[5] = v7;
      v15[6] = v14;
      v16 = eligibleAutoMe;
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 72))(v1, v15, ObjectType, v12);
      swift_unknownObjectRelease();
    }
  }
}

Swift::Void __swiftcall FMFManager.didReceive(devices:fromServer:)(Swift::OpaquePointer_optional devices, Swift::Bool fromServer)
{
  uint64_t v2;
  Swift::Bool is_nil;
  void *rawValue;
  uint64_t v5;
  uint64_t ObjectType;

  if (devices.value._rawValue)
  {
    is_nil = devices.is_nil;
    rawValue = devices.value._rawValue;
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v2 + 32))
    {
      v5 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, Swift::Bool, uint64_t, uint64_t))(v5 + 80))(v2, rawValue, is_nil, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_2119E76EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_211A47400();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119E774C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 208);
  *(_QWORD *)(v0 + 64) = v1;
  v2 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 32);
    sub_211958C38(&qword_254ACA3C0);
    v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
    v7 = (v6 + 32) & ~v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v0 + 72) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_211A4A230;
    sub_211934794(v5, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *MEMORY[0x24BE31D00], v3);
    swift_retain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v9;
    *v9 = v0;
    v9[1] = sub_2119E7884;
    return sub_21191A0B4(v8, *(_QWORD *)(v0 + 56));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E7884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 40);
  v4 = *(_QWORD *)(*v1 + 48);
  v5 = *v1;
  *(_QWORD *)(v5 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2119E7944()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = v1;
  v4 = v1;
  v5 = sub_211A47724();
  v6 = sub_211A47D30();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 88);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_211A47E2C();
    *v10 = v12;

    _os_log_impl(&dword_21190D000, v5, v6, "FMFManager: Error while update locating %@", v9, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v10, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2119E7B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_211A47400();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2119E7B78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 208);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 104))(*(_QWORD *)(v0 + 48), *MEMORY[0x24BE31D08], *(_QWORD *)(v0 + 32));
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_2119E7C18;
    return sub_21191A0B4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2119E7C18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 40);
  v2 = *(_QWORD *)(*v1 + 48);
  v4 = *(_QWORD *)(*v1 + 32);
  v5 = *v1;
  *(_QWORD *)(v5 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2119E7CC4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall FMFManager.didReceive(locationAlerts:)(Swift::OpaquePointer locationAlerts)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;

  swift_beginAccess();
  if (MEMORY[0x212BE496C](v1 + 32))
  {
    v3 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v3 + 40))(v1, locationAlerts._rawValue, ObjectType, v3);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall FMFManager.didReceive(labelledLocations:)(Swift::OpaquePointer_optional labelledLocations)
{
  uint64_t v1;
  uint64_t v2;
  void *rawValue;
  uint64_t v4;
  uint64_t ObjectType;
  char *v6;
  void *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;

  v2 = v1;
  if (labelledLocations.value._rawValue)
  {
    rawValue = labelledLocations.value._rawValue;
    swift_beginAccess();
    if (MEMORY[0x212BE496C](v2 + 32))
    {
      v4 = *(_QWORD *)(v2 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v4 + 96))(v2, rawValue, ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
  v6 = *(char **)(v2 + 184);
  if (v6)
  {
    v7 = *(void **)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    if (v7)
    {
      v8 = *(void **)&v6[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation];
      if (v8)
      {
        v9 = v6;
        v10 = v7;
        v11 = v8;
        sub_211A01390(v10, v11, 1);

      }
    }
  }
}

Swift::Void __swiftcall FMFManager.willSaveCacheToDisk()()
{
  sub_211A38B98();
}

uint64_t sub_2119E7E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x212BE496C](v1 + 32);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_2119E7F08()
{
  sub_211A38B98();
}

uint64_t FMFManager.didReceive(myLocation:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = MEMORY[0x212BE496C](v1 + 32);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 88))(v1, a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2119E7FA8(_BYTE *a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (*a1)
    return 0;
  swift_retain();
  sub_211958C38(&qword_254ACAA30);
  sub_211A47DA8();
  swift_release();
  if (v6 && (swift_bridgeObjectRetain(), sub_211933F60(v6), v7))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FMLocalize();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    type metadata accessor for FMLocalize();
    v4 = swift_getObjCClassFromMetadata();
    v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v4);
  }
  v1 = sub_211A46FE0();

  return v1;
}

uint64_t sub_2119E816C(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t refreshed;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (!*a1)
  {
    v2 = v1;
    swift_retain();
    sub_211958C38(&qword_254ACAA30);
    sub_211A47DA8();
    swift_release();
    if (v18 && (v3 = v19, v4 = v20, swift_bridgeObjectRetain(), sub_211933F60(v18), v20))
    {
      type metadata accessor for FMFSavePrefsRequest();
      v5 = swift_allocObject();
      *(_BYTE *)(v5 + qword_254AC9740) = 0;
      v6 = (_OWORD *)(v5 + qword_254AC9738);
      *v6 = 0u;
      v6[1] = 0u;
      v7 = (uint64_t *)(v5 + qword_254AC9748);
      *v7 = v3;
      v7[1] = v4;
      v8 = sub_21193BD18();
      swift_beginAccess();
      sub_2119299DC(v2 + 136, (uint64_t)&v18);
      v9 = v19;
      v10 = v20;
      sub_211931DB4(&v18, v19);
      v11 = *(void (**)(_QWORD *, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 64);
      refreshed = type metadata accessor for FMFInitRefreshClientResponse();
      swift_retain();
      v11(v8, sub_2119ECA20, v2, refreshed, v9, v10);
      swift_release();
      swift_release();
      sub_211931C34((uint64_t)&v18);
    }
    else
    {
      if (qword_254AC7B80 != -1)
        swift_once();
      v13 = sub_211A47748();
      sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
      v14 = sub_211A47724();
      v15 = sub_211A47D24();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_21190D000, v14, v15, "Me device id not available. SAVEME alert cannot respond with savePrefs request", v16, 2u);
        MEMORY[0x212BE48A0](v16, -1, -1);
      }

    }
  }
  return 1;
}

void sub_2119E83E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *oslog;
  uint64_t v21;

  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = sub_211A47748();
    sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v4 = a2;
    swift_retain();
    v5 = a2;
    oslog = sub_211A47724();
    v6 = sub_211A47D30();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      *(_DWORD *)v7 = 136315394;
      v21 = v8;
      sub_211958C38(&qword_254ACC668);
      v9 = sub_211A47928();
      sub_211950A9C(v9, v10, &v21);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v11 = sub_211A47E08();
      sub_211950A9C(v11, v12, &v21);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, oslog, v6, "%s: Error sending save me device - %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v8, -1, -1);
      MEMORY[0x212BE48A0](v7, -1, -1);

    }
    else
    {
      swift_release_n();

    }
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v13 = sub_211A47748();
    sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v14 = sub_211A47724();
    v15 = sub_211A47D30();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315138;
      v21 = v17;
      sub_211958C38(&qword_254ACC668);
      v18 = sub_211A47928();
      sub_211950A9C(v18, v19, &v21);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v14, v15, "%s: Saved me device for SAVEME alert.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v17, -1, -1);
      MEMORY[0x212BE48A0](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_2119E87B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  id v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void (*v14)(__int128 *__return_ptr);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  _BYTE v41[24];
  __int128 v42[2];

  v1 = v0;
  v2 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 216);
  v8 = *(unsigned __int8 *)(v1 + 225);
  type metadata accessor for FMFDataManager();
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v1 + 88) = sub_211924F00(v6, 0, v7, v8);
  swift_release();
  v9 = *(unsigned __int8 *)(v1 + 225);
  v10 = objc_allocWithZone((Class)type metadata accessor for FMFGenericResponseHandler());
  v11 = swift_retain();
  v12 = sub_211923F24(v11, v9);
  v13 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = v12;

  v14 = *(void (**)(__int128 *__return_ptr))(v6
                                                      + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_interactionControllerProvider);
  v15 = *(void **)(v1 + 120);
  v16 = v6 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_preferredLocale;
  v17 = sub_211A47274();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v18 + 16))(v5, v16, v17);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v17);
  swift_retain();
  v19 = v15;
  v14(v42);
  swift_release();

  sub_211923EE8((uint64_t)v5, &qword_254AC9200);
  swift_beginAccess();
  sub_211931C34(v1 + 136);
  sub_2119622B4(v42, v1 + 136);
  swift_endAccess();
  v20 = *(_QWORD *)(v1 + 88);
  sub_2119299DC(v1 + 136, (uint64_t)v42);
  v21 = objc_allocWithZone((Class)type metadata accessor for FMAPSConnectionHandler());
  swift_retain();
  v22 = (char *)sub_21191D978(0xD000000000000017, 0x8000000211A56350, 0xD000000000000024, 0x8000000211A54ED0, 0, 0);
  LODWORD(v19) = *(unsigned __int8 *)(v1 + 225);
  LODWORD(v17) = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_useOptimizedFetch);
  type metadata accessor for FMFRefreshController();
  swift_allocObject();
  *(_QWORD *)(v1 + 128) = sub_2119229AC(v20, (uint64_t)v42, v22, (int)v19, v17);
  swift_release();
  sub_2119299DC(v1 + 136, (uint64_t)v42);
  v23 = *(_QWORD *)(v1 + 88);
  v24 = *(void **)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 112);
  type metadata accessor for FMFActionsController();
  swift_allocObject();
  swift_retain();
  v26 = v24;
  swift_retain();
  *(_QWORD *)(v1 + 176) = sub_21191E2D4((uint64_t)v42, v23, v26, v25);
  swift_release();
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_enabledSubsystems) & 2) != 0)
  {
    sub_2119299DC(v1 + 136, (uint64_t)v42);
    v28 = objc_allocWithZone((Class)type metadata accessor for FMFMyLocationController());
    v29 = sub_21191C544((uint64_t)v42);
    v27 = *(void **)(v1 + 184);
    *(_QWORD *)(v1 + 184) = v29;
  }
  else
  {
    v27 = *(void **)(v1 + 184);
    *(_QWORD *)(v1 + 184) = 0;
  }

  *(_QWORD *)(*(_QWORD *)(v1 + 88) + 40) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v30 = *(_QWORD *)(v1 + 160);
  v31 = *(_QWORD *)(v1 + 168);
  sub_21192997C(v1 + 136, v30);
  v32 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v31 + 16);
  v33 = swift_unknownObjectRetain();
  v32(v33, &off_24CCCB540, v30, v31);
  v34 = *(_QWORD *)(v1 + 160);
  v35 = *(_QWORD *)(v1 + 168);
  sub_21192997C(v1 + 136, v34);
  v36 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v35 + 40);
  v37 = swift_unknownObjectRetain();
  v36(v37, &off_24CCCB560, v34, v35);
  swift_endAccess();
  v38 = *(_QWORD *)(v1 + 120) + OBJC_IVAR____TtC7FMFCore25FMFGenericResponseHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v38 + 8) = &protocol witness table for FMFManager;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v1 + 128) + 40) = &off_24CCCB4A8;
  result = swift_unknownObjectWeakAssign();
  v40 = *(_QWORD *)(v1 + 184);
  if (v40)
  {
    *(_QWORD *)(v40 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate + 8) = &protocol witness table for FMFManager;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_2119E8C38(_QWORD *a1)
{
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];

  v2 = (char *)a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized;
  swift_beginAccess();
  v3 = *v2;
  *v2 = 0;
  sub_21191CFBC(v3);
  swift_beginAccess();
  if (MEMORY[0x212BE496C](a1 + 4))
  {
    v4 = a1[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 80))(a1, MEMORY[0x24BEE4AF8], 0, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  if (MEMORY[0x212BE496C](a1 + 4))
  {
    v6 = a1[5];
    v7 = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32))(a1, MEMORY[0x24BEE4AF8], 0, v7, v6);
    swift_unknownObjectRelease();
  }
  v8 = a1[9];
  v9 = a1[10];
  v11[0] = a1[8];
  v11[1] = v8;
  v11[2] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211917040(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119E8D80(void (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t (*v33)(_QWORD);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(_QWORD);
  _BYTE v57[304];
  _OWORD v58[19];

  v53 = a2;
  v54 = a5;
  v56 = a1;
  v7 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v7, v8);
  v51 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACABC8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (uint64_t *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for FMReverseGeocodingRequest();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v14);
  v49 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMFLocation();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (uint64_t *)((char *)&v48 - v24);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v48 - v27;
  v29 = *(_QWORD *)(a3 + 216);
  v30 = a4;
  v31 = a4;
  v33 = v32;
  sub_211934794(v30, (uint64_t)&v48 - v27, v32);
  v55 = v25;
  sub_211934794((uint64_t)v28, (uint64_t)v25, v33);
  v34 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v35 = (v18 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  sub_211942810((uint64_t)v28, v37 + v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v38 = v54;
  *(_QWORD *)(v37 + v35) = v54;
  v39 = v53;
  v40 = (_QWORD *)(v37 + v36);
  v41 = v38;
  *v40 = v56;
  v40[1] = v39;
  sub_211934794(v31, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v42 = v51;
  sub_21192C6B8(v29 + qword_254ADC718, v51, &qword_254AC9200);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_2119F1380((uint64_t)v21, v42, v13);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v50 + 48))(v13, 1, v52) == 1)
  {
    sub_211923EE8((uint64_t)v13, &qword_254ACABC8);
    sub_21196F528(v58);
    sub_21192DD68((uint64_t)v58, (uint64_t)v57, &qword_254ACCB40);
    v43 = v55;
    sub_2119E90D0((uint64_t)v57, v55, v41, v56, v39);
    swift_release();
    v44 = v43;
  }
  else
  {
    v45 = (uint64_t)v13;
    v46 = v49;
    sub_211942810(v45, v49, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_2119ECE88(v46, (uint64_t)sub_2119EC220, v37);
    sub_211934758(v46, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    swift_release();
    v44 = v55;
  }
  sub_211934758((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119E90D0(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  os_log_type_t v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  int v75;
  os_log_t v76;
  uint64_t v77;
  void (*v78)(_QWORD);
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE v90[360];
  _QWORD v91[45];
  _BYTE v92[360];
  _QWORD v93[45];
  uint64_t v94[3];
  _BYTE v95[312];

  v81 = a3;
  v85 = sub_211958C38(&qword_254ACCAE0);
  MEMORY[0x24BDAC7A8](v85, v9);
  v86 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v84 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v79 = (uint64_t)&v74 - v16;
  v17 = type metadata accessor for FMFLocation();
  v87 = *(_QWORD *)(v17 - 8);
  v88 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (uint64_t *)((char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v82 = (uint64_t)&v74 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v80 = (uint64_t *)((char *)&v74 - v27);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v83 = (uint64_t)&v74 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v34 = (char *)&v74 - v33;
  v36 = MEMORY[0x24BDAC7A8](v32, v35);
  v38 = (char *)&v74 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (uint64_t *)((char *)&v74 - v40);
  sub_21192DD68(a1, (uint64_t)v95, &qword_254ACCB40);
  if (qword_254AC7B80 != -1)
    swift_once();
  v42 = sub_211A47748();
  sub_21194F3E0(v42, (uint64_t)qword_254ADC7E8);
  sub_211934794((uint64_t)a2, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794((uint64_t)a2, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_211934794((uint64_t)a2, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v43 = sub_211A47724();
  v44 = sub_211A47D30();
  if (os_log_type_enabled(v43, (os_log_type_t)v44))
  {
    v76 = v43;
    v77 = a5;
    v78 = a4;
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v94[0] = v46;
    *(_DWORD *)v45 = 136315651;
    v47 = v41[1];
    v75 = v44;
    v74 = v46;
    if (v47)
    {
      v48 = *v41;
      v49 = v47;
    }
    else
    {
      v49 = 0xE300000000000000;
      v48 = 7104878;
    }
    swift_bridgeObjectRetain();
    v93[0] = sub_211950A9C(v48, v49, v94);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    *(_WORD *)(v45 + 12) = 2049;
    sub_21192DD68((uint64_t)&v38[*(int *)(v88 + 44)], (uint64_t)v92, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v92, (uint64_t)v93, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)v93) == 1)
      v52 = 0x7FF4000000000000;
    else
      objc_msgSend((id)v93[38], sel_coordinate);
    v50 = v81;
    v91[0] = v52;
    sub_211A47E2C();
    sub_211934758((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    *(_WORD *)(v45 + 22) = 2049;
    sub_21192DD68((uint64_t)&v34[*(int *)(v88 + 44)], (uint64_t)v90, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v90, (uint64_t)v91, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)v91) == 1)
      v53 = 0x7FF4000000000000;
    else
      objc_msgSend((id)v91[38], sel_coordinate);
    a4 = v78;
    v54 = v75;
    v89 = v53;
    sub_211A47E2C();
    sub_211934758((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v55 = v54;
    v56 = v76;
    _os_log_impl(&dword_21190D000, v76, v55, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate: did reverse geocode shallow/live (shifted) location for %s: shifted: {%{private}f,%{private}f}", (uint8_t *)v45, 0x20u);
    v57 = v74;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v57, -1, -1);
    MEMORY[0x212BE48A0](v45, -1, -1);

    v51 = *(_QWORD *)(v50 + 16);
    if (!v51)
      goto LABEL_28;
  }
  else
  {
    sub_211934758((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934758((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    sub_211934758((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);

    v50 = v81;
    v51 = *(_QWORD *)(v81 + 16);
    if (!v51)
      goto LABEL_28;
  }
  v58 = v50 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
  v59 = *(_QWORD *)(v87 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_211934794(v58, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v60 = v21[1];
    v61 = a2[1];
    if (v60)
    {
      if (v61)
      {
        v62 = *v21 == *a2 && v60 == v61;
        if (v62 || (sub_211A48258() & 1) != 0)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          v63 = v79;
          sub_211942810((uint64_t)v21, v79, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v64 = 0;
          goto LABEL_29;
        }
      }
    }
    else if (!v61)
    {
      goto LABEL_26;
    }
    sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v58 += v59;
    --v51;
  }
  while (v51);
  swift_bridgeObjectRelease();
LABEL_28:
  v64 = 1;
  v63 = v79;
LABEL_29:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v63, v64, 1, v88);
  v65 = v80;
  sub_211934794((uint64_t)a2, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v66 = (uint64_t)a2;
  v67 = v82;
  sub_211934794(v66, v82, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_21192DD68((uint64_t)v95, (uint64_t)v93, &qword_254ACCB40);
  sub_21196F7C4((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  v68 = v83;
  FMFLocation.init(from:updatedLocation:address:)(v65, v67, (uint64_t)v93, v83);
  sub_21196F7C4((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  v69 = v84;
  sub_2119E1918(v63, (uint64_t)v95, v84);
  v70 = sub_211958C38(&qword_254ACCAD8);
  v71 = v86;
  v72 = v86 + *(int *)(v70 + 48);
  sub_211934794(v68, v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_21192C6B8(v69, v72, (uint64_t *)&unk_254AC8CB0);
  swift_storeEnumTagMultiPayload();
  a4(v71);
  sub_211923EE8(v71, &qword_254ACCAE0);
  sub_211923EE8(v69, (uint64_t *)&unk_254AC8CB0);
  sub_211934758(v68, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  return sub_211923EE8(v63, (uint64_t *)&unk_254AC8CB0);
}

uint64_t sub_2119E97D4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_2119E16BC(*a1);
  sub_2119E1D68(v1);
  swift_retain();
  sub_211A47DA8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_211A47DA8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2119E98B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2119F4554(v1, a1);
}

uint64_t sub_2119E98CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2119F45C8(v1, a1);
}

uint64_t sub_2119E98E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2119F456C(v1, a1);
}

uint64_t sub_2119E98FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2119F46D0(v1, a1);
}

uint64_t sub_2119E9914@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2119F4708(v1, a1);
}

uint64_t sub_2119E992C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2119F46EC(v1, a1);
}

uint64_t sub_2119E9944@<X0>(size_t *a1@<X8>)
{
  return sub_2119F4724(a1);
}

uint64_t sub_2119E995C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2119636C4;
  return v6(a1);
}

uint64_t sub_2119E99C0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_211A47E2C();
  *a1 = v5;
  return result;
}

uint64_t sub_2119E9A10(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_2119E9A78;
  return v5(v2 + 32);
}

uint64_t sub_2119E9A78()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_2119E9AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = type metadata accessor for FMFLocation();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v12)
  {
    v19[1] = v3;
    v22 = MEMORY[0x24BEE4AF8];
    sub_211A47FF4();
    v14 = *(unsigned __int8 *)(v8 + 80);
    v15 = a1 + ((v14 + 32) & ~v14);
    v16 = *(_QWORD *)(v8 + 72);
    v20 = (v14 + 24) & ~v14;
    v21 = v16;
    v17 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19[2] = v17 + 8;
    v19[3] = v14 | 7;
    do
    {
      sub_211934794(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = a2;
      sub_211942810((uint64_t)v11, v18 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      *(_QWORD *)(v18 + v17) = a3;
      sub_211958C38(&qword_254ACCA98);
      swift_allocObject();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_211A47760();
      sub_211A47FDC();
      sub_211A48000();
      sub_211A4800C();
      sub_211A47FE8();
      v15 += v21;
      --v12;
    }
    while (v12);
    return v22;
  }
  return result;
}

uint64_t sub_2119E9C78(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  _BYTE *v26;
  uint64_t result;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[6];
  uint64_t v39;

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v12 = sub_211A47748();
  sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
  v13 = a1;
  v14 = a1;
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v33 = v4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v32 = v8;
    v20 = v19;
    aBlock[0] = v19;
    *(_DWORD *)v18 = 136315138;
    v39 = (uint64_t)a1;
    v21 = a1;
    sub_211958C38(&qword_254ACDE90);
    v22 = sub_211A47928();
    v39 = sub_211950A9C(v22, v23, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21190D000, v15, v16, "FMFManager: initializationDidFail %s", v18, 0xCu);
    swift_arrayDestroy();
    v24 = v20;
    v8 = v32;
    MEMORY[0x212BE48A0](v24, -1, -1);
    v25 = v18;
    v4 = v33;
    MEMORY[0x212BE48A0](v25, -1, -1);

    if (!a1)
      goto LABEL_10;
  }
  else
  {

    if (!a1)
      goto LABEL_10;
  }
  if (*(_BYTE *)(v2 + 225) == 1 && (*(_BYTE *)(v2 + 226) & 1) == 0)
  {
    *(_BYTE *)(v2 + 226) = 1;
    swift_retain();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    swift_release();
    sub_2119E444C(aBlock[0], a1);
    swift_bridgeObjectRelease();
  }
LABEL_10:
  v26 = (_BYTE *)(v2 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  result = swift_beginAccess();
  if ((*v26 & 1) == 0)
  {
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v2;
    *(_QWORD *)(v28 + 24) = a1;
    aBlock[4] = (uint64_t)sub_2119EC5A8;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCB790;
    v29 = _Block_copy(aBlock);
    v30 = a1;
    swift_retain();
    v31 = v34;
    sub_211A477B4();
    v37 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v31, v8, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v36);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119EA0B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v51[360];
  _QWORD v52[45];
  uint64_t v53;

  v2 = type metadata accessor for FMFLocation();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v50 = (uint64_t)&v46 - v10;
  result = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v46 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v17 = sub_211A47724();
    v18 = sub_211A47D30();
    v19 = os_log_type_enabled(v17, v18);
    v48 = (uint64_t *)v7;
    if (v19)
    {
      v20 = v2;
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      v52[0] = v15;
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v17, v18, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate:%ld shallow/live locations", v21, 0xCu);
      v22 = v21;
      v2 = v20;
      MEMORY[0x212BE48A0](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v23 = MEMORY[0x24BEE4AF8];
    v53 = MEMORY[0x24BEE4AF8];
    v24 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v25 = *(_QWORD *)(v3 + 72);
    v49 = v24;
    v26 = a1 + v24;
    v47 = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_211934794(v26, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192DD68((uint64_t)&v14[*(int *)(v2 + 44)], (uint64_t)v51, &qword_254AC8CD0);
      sub_21192DD68((uint64_t)v51, (uint64_t)v52, &qword_254AC8CD0);
      if (sub_2119724C8((uint64_t)v52) == 1)
      {
        sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      }
      else
      {
        sub_211942810((uint64_t)v14, v50, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_211942004(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v53;
        v28 = *(_QWORD *)(v53 + 16);
        v27 = *(_QWORD *)(v53 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_211942004(v27 > 1, v28 + 1, 1);
          v23 = v53;
        }
        *(_QWORD *)(v23 + 16) = v28 + 1;
        sub_211942810(v50, v23 + v49 + v28 * v25, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      }
      v26 += v25;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v50 = v53;
    v29 = *(_QWORD *)(v53 + 16);
    if (v29)
    {
      v30 = v50 + v49;
      swift_retain();
      v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v32 = v48;
      do
      {
        sub_211934794(v30, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v33 = v32[1];
        if (v33)
        {
          v34 = *v32;
          swift_bridgeObjectRetain();
          sub_211934758((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v31 = sub_21193F3B0(0, v31[2] + 1, 1, v31);
          v36 = v31[2];
          v35 = v31[3];
          if (v36 >= v35 >> 1)
            v31 = sub_21193F3B0((_QWORD *)(v35 > 1), v36 + 1, 1, v31);
          v31[2] = v36 + 1;
          v37 = &v31[3 * v36];
          v37[4] = v34;
          v37[5] = v33;
          *((_BYTE *)v37 + 48) = 0;
          v32 = v48;
        }
        else
        {
          sub_211934758((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        }
        v30 += v25;
        --v29;
      }
      while (v29);
      v38 = swift_release_n();
    }
    else
    {
      v38 = swift_release();
      v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v40 = v46;
    v41 = *(_QWORD *)(v46 + 88);
    MEMORY[0x24BDAC7A8](v38, v39);
    *(&v46 - 2) = (uint64_t)v31;
    *(&v46 - 1) = v41;
    swift_retain();
    sub_211A47DA8();
    swift_release();
    v42 = swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v40 + 88);
    MEMORY[0x24BDAC7A8](v42, v44);
    v45 = v47;
    *(&v46 - 2) = v43;
    *(&v46 - 1) = v45;
    swift_retain();
    sub_211A47DA8();
    return swift_release();
  }
  return result;
}

uint64_t sub_2119EA5A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_211958C38(&qword_254ACCB38);
    v3 = sub_211A47F4C();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_211A48318();
      swift_bridgeObjectRetain();
      sub_211A4797C();
      result = sub_211A48348();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_211A48258(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_211A48258();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2119EA744()
{
  return sub_211918184((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_2119EA750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211963DB0;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_2119EA7B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119EA7F0()
{
  uint64_t v0;

  return sub_2119E339C(v0);
}

uint64_t sub_2119EA7F8()
{
  return sub_2119E441C();
}

uint64_t sub_2119EA804(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_211963DB0;
  return sub_2119E56AC(a1, v5, v6, v7, v8);
}

uint64_t sub_2119EA89C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_211963DB0;
  return sub_2119E5C88(a1, v5, v6, v7, v8);
}

uint64_t sub_2119EA930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = sub_211A4779C();
  v19 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_211A477D8();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2119E87B8();
  sub_211920E14();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEE5490], v9);
  v14 = (void *)sub_211A47DCC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  aBlock[4] = sub_2119EB2A4;
  v22 = v0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCB678;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v20 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v8, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v18);
  return swift_release();
}

uint64_t sub_2119EAB84()
{
  return sub_211918184((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2119EAB90(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_2119E6B18(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(_QWORD, void *))(v2 + 24));
}

uint64_t sub_2119EAB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2119F56E0(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_2119EABB4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119EABE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2119A113C;
  return sub_2119E7B18(a1, v4, v5, v7, v6);
}

uint64_t sub_2119EAC64()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = (int *)type metadata accessor for FMFFriend();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 40) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[8];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = v3 + v1[20];
  v8 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 32);
    v10 = sub_211A4722C();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v7 + *(int *)(v8 + 44);
    v13 = *(void **)(v12 + 304);
    if (v13)
    {
      if (*(_QWORD *)(v12 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(void **)(v12 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_2119EAEC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2119A113C;
  return sub_2119E76EC(a1, v5, v6, v7, v8);
}

uint64_t sub_2119EAF54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 32;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v4);
  v6 = *(_QWORD *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2119EAFB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_selectedFriend;
  swift_beginAccess();
  return sub_21192C6B8(v3, a2, &qword_254AC8870);
}

uint64_t sub_2119EB010@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_2119EB060(char *a1, _QWORD *a2)
{
  char v2;
  char *v3;
  char v4;

  v2 = *a1;
  v3 = (char *)(*a2 + OBJC_IVAR____TtC7FMFCore10FMFManager_isInitialized);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  return sub_21191CFBC(v4);
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManagerDidInitialize(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManagerDidCompleteFirstFetch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:initializationDidFail:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:fromServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:meDeviceChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:didReceive:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:friendsOperationsRestrictionChanged:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:friendsToShallowLocate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of FMFManagerDelegate.fmfManager(_:legacyFallbackFriendIdentifiers:didFallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t sub_2119EB144()
{
  return type metadata accessor for FMFManager();
}

uint64_t method lookup function for FMFManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFManager.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of FMFManager.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of FMFManager.selectedFriend.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of FMFManager.selectedFriend.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of FMFManager.locations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of FMFManager.myLocation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of FMFManager.myUnshiftedLocation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of FMFManager.features.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of FMFManager.myInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of FMFManager.config.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of FMFManager.devices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of FMFManager.labels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of FMFManager.labelledLocations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of FMFManager.contactsController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of FMFManager.pendingDeleteFriends.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of FMFManager.__allocating_init(configuration:tabInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 784))();
}

uint64_t dispatch thunk of FMFManager.initialize()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of FMFManager.initialize(tabInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of FMFManager.updateLastActiveTimestamp()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of FMFManager.stopRefreshing()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of FMFManager.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of FMFManager.startLiveLocation(for:clientApp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of FMFManager.stopLiveLocation(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of FMFManager.restartMonitoringLocation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of FMFManager.perform(action:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of FMFManager.getInfoForURL(url:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of FMFManager.unshiftedLocation(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of FMFManager.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t sub_2119EB2A4()
{
  _QWORD *v0;

  return sub_2119E8C38(v0);
}

uint64_t sub_2119EB2AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119EB2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  char *v41;
  uint64_t v42;
  uint64_t (*v43)();
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[360];
  _QWORD v103[45];
  uint64_t v104;

  v4 = sub_211958C38(&qword_254ACCA78);
  MEMORY[0x24BDAC7A8](v4, v5);
  v95 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477A8();
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v83 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211958C38(&qword_254ACCA80);
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v89 = (uint64_t *)((char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_211958C38(&qword_254ACCA88);
  v87 = *(_QWORD *)(v13 - 8);
  v88 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v86 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211958C38(&qword_254ACCA90);
  v93 = *(_QWORD *)(v16 - 8);
  v94 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v92 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for FMFLocation();
  v19 = *(_QWORD *)(v101 - 8);
  v21 = MEMORY[0x24BDAC7A8](v101, v20);
  v23 = (uint64_t *)((char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v100 = (uint64_t)&v80 - v26;
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)&v80 - v28;
  if (qword_254AC7B80 != -1)
    swift_once();
  v30 = sub_211A47748();
  sub_21194F3E0(v30, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_211A47724();
  v32 = sub_211A47D30();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    *(_DWORD *)v33 = 134218240;
    v103[0] = *(_QWORD *)(a1 + 16);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2048;
    v103[0] = *(_QWORD *)(a2 + 16);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v31, v32, "👀 FMFManager.FMFSecureLocationRefreshControllerDelegate: received %ld unshifted and %ld shifted shallow/live locations", (uint8_t *)v33, 0x16u);
    MEMORY[0x212BE48A0](v33, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v82 = a1;
  v34 = MEMORY[0x24BEE4AF8];
  v104 = MEMORY[0x24BEE4AF8];
  v35 = *(_QWORD *)(a2 + 16);
  v36 = swift_bridgeObjectRetain();
  v96 = v36;
  if (v35)
  {
    v37 = *(unsigned __int8 *)(v19 + 80);
    v81 = v19;
    v38 = *(_QWORD *)(v19 + 72);
    v99 = (v37 + 32) & ~v37;
    v39 = v36 + v99;
    v40 = type metadata accessor for FMFLocation;
    v98 = v23;
    do
    {
      sub_211934794(v39, (uint64_t)v29, (uint64_t (*)(_QWORD))v40);
      sub_21192DD68((uint64_t)&v29[*(int *)(v101 + 44)], (uint64_t)v102, &qword_254AC8CD0);
      sub_21192DD68((uint64_t)v102, (uint64_t)v103, &qword_254AC8CD0);
      if (sub_2119724C8((uint64_t)v103) == 1)
      {
        sub_211934758((uint64_t)v29, (uint64_t (*)(_QWORD))v40);
      }
      else
      {
        v41 = v29;
        v42 = (uint64_t)v29;
        v43 = v40;
        sub_211942810(v42, v100, (uint64_t (*)(_QWORD))v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_211942004(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v104;
        v45 = *(_QWORD *)(v104 + 16);
        v44 = *(_QWORD *)(v104 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_211942004(v44 > 1, v45 + 1, 1);
          v34 = v104;
        }
        *(_QWORD *)(v34 + 16) = v45 + 1;
        v46 = v34 + v99 + v45 * v38;
        v40 = v43;
        sub_211942810(v100, v46, (uint64_t (*)(_QWORD))v43);
        v23 = v98;
        v29 = v41;
      }
      v39 += v38;
      --v35;
    }
    while (v35);
    v34 = v104;
    v19 = v81;
  }
  v47 = v96;
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v34 + 16);
  if (v48)
  {
    v49 = v34 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v50 = *(_QWORD *)(v19 + 72);
    v100 = v34;
    v101 = v50;
    swift_retain();
    v51 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_211934794(v49, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v52 = v23[1];
      if (v52)
      {
        v53 = *v23;
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v51 = sub_21193F3B0(0, v51[2] + 1, 1, v51);
        v55 = v51[2];
        v54 = v51[3];
        if (v55 >= v54 >> 1)
          v51 = sub_21193F3B0((_QWORD *)(v54 > 1), v55 + 1, 1, v51);
        v51[2] = v55 + 1;
        v56 = &v51[3 * v55];
        v56[4] = v53;
        v56[5] = v52;
        *((_BYTE *)v56 + 48) = 0;
      }
      else
      {
        sub_211934758((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      }
      v49 += v101;
      --v48;
    }
    while (v48);
    v57 = swift_release_n();
    v47 = v96;
  }
  else
  {
    v57 = swift_release();
    v51 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v59 = v97;
  v60 = *(_QWORD *)(v97 + 88);
  MEMORY[0x24BDAC7A8](v57, v58);
  *(&v80 - 2) = (uint64_t)v51;
  *(&v80 - 1) = v60;
  swift_retain();
  sub_211A47DA8();
  swift_release();
  swift_bridgeObjectRelease();
  v61 = v82;
  swift_bridgeObjectRetain();
  swift_retain();
  v62 = sub_2119E9AC8(v47, v59, v61);
  swift_release();
  swift_bridgeObjectRelease();
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = 0;
  v100 = v63;
  v101 = v63 + 16;
  v103[0] = v62;
  sub_211958C38(&qword_254ACCA98);
  sub_211958C38(&qword_254ACCAA0);
  sub_21193AC74(&qword_254ACCAA8, &qword_254ACCA98, MEMORY[0x24BDB9E58]);
  sub_21193AC74(&qword_254ACCAB0, &qword_254ACCAA0, MEMORY[0x24BEE12C8]);
  v64 = v86;
  sub_211A47754();
  sub_211958C38(&qword_254ACCAB8);
  v65 = v89;
  sub_211920E14();
  v67 = v83;
  v66 = v84;
  v68 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, *MEMORY[0x24BEE5498], v85);
  v69 = sub_211A47DCC();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  *v65 = v69;
  sub_211A47D84();
  v70 = v90;
  v71 = v91;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v90 + 104))(v65, *MEMORY[0x24BDB9680], v91);
  v72 = sub_211A47D78();
  v73 = (uint64_t)v95;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v95, 1, 1, v72);
  sub_21193AC74(&qword_254ACCAC0, &qword_254ACCA88, MEMORY[0x24BDB99D8]);
  sub_211910908(&qword_254ACCAC8, (uint64_t (*)(uint64_t))sub_211920E14, MEMORY[0x24BEE5670]);
  v74 = v92;
  v75 = v88;
  sub_211A47778();
  sub_211923EE8(v73, &qword_254ACCA78);
  (*(void (**)(uint64_t *, uint64_t))(v70 + 8))(v65, v71);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v64, v75);
  sub_21193AC74(&qword_254ACCAD0, &qword_254ACCA90, MEMORY[0x24BDB95C0]);
  swift_retain();
  swift_retain();
  v76 = v94;
  v77 = sub_211A4776C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v76);
  v78 = (_QWORD *)v101;
  swift_beginAccess();
  *v78 = v77;
  swift_release();
  return swift_release();
}

uint64_t sub_2119EBBEC(uint64_t a1)
{
  return sub_2119EBC14(a1, (uint64_t)sub_2119ECA7C, 1, 1);
}

uint64_t sub_2119EBC00(uint64_t a1)
{
  return sub_2119EBC14(a1, (uint64_t)sub_2119EC280, 0, 0);
}

uint64_t sub_2119EBC14(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v4;
  uint64_t v5;
  int64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v17;

  v4 = a3;
  v5 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_211A26808(0, v6, 0);
    v15 = v5;
    v8 = (uint64_t *)(v5 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v12 = *(_QWORD *)(v17 + 16);
      v11 = *(_QWORD *)(v17 + 24);
      a1 = swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
        a1 = sub_211A26808(v11 > 1, v12 + 1, 1);
      v8 += 2;
      *(_QWORD *)(v17 + 16) = v12 + 1;
      v13 = v17 + 24 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      *(_BYTE *)(v13 + 48) = a4;
      --v6;
    }
    while (v6);
    v4 = a3;
    v5 = v15;
  }
  MEMORY[0x24BDAC7A8](a1, a2);
  swift_retain();
  sub_211A47DA8();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_2119E70CC(v5, v4 & 1);
}

uint64_t sub_2119EBD8C(uint64_t a1)
{
  return sub_2119EC2B0(a1, 1, "FMFManager: didBeginWaitingForShallowLocations, shallow locates %s");
}

uint64_t sub_2119EBDA4(uint64_t a1)
{
  return sub_2119EC2B0(a1, 0, "FMFManager: didEndWaitingForShallowLocations, shallow locates %s");
}

uint64_t sub_2119EBDBC(uint64_t a1)
{
  return sub_2119EC2B0(a1, 1, "FMFManager: didBeginWaitingForLiveLocations, live locates %s");
}

uint64_t sub_2119EBDD4(uint64_t a1)
{
  return sub_2119EC2B0(a1, 2, "FMFManager: didBeginPausingLiveLocations, live locates %s");
}

uint64_t sub_2119EBDEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2119F5D24(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_2119EBE04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119EBE28()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_2119EBE60(uint64_t *a1)
{
  return sub_2119E97D4(a1);
}

uint64_t sub_2119EBE68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;

  v1 = type metadata accessor for FMFLocation();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 32);
  v4 = sub_211A4722C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = v0 + v2 + *(int *)(v1 + 44);
  v7 = *(void **)(v6 + 304);
  if (v7)
  {
    if (*(_QWORD *)(v6 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = *(void **)(v6 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119EC00C(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2119E8D80(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2119EC070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v1 = type metadata accessor for FMFLocation();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 32);
  v4 = sub_211A4722C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = v2 + *(int *)(v1 + 44);
  v7 = *(void **)(v6 + 304);
  if (v7)
  {
    if (*(_QWORD *)(v6 + 168))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = *(void **)(v6 + 304);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119EC220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2119E90D0(a1, (_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v5), *(void (**)(_QWORD))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_2119EC280@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2119F6390(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_2119EC298(uint64_t a1)
{
  return sub_2119EC2B0(a1, 0, "FMFManager: didEndWaitingForLiveLocations, live locates %s");
}

uint64_t sub_2119EC2B0(uint64_t a1, char a2, const char *a3)
{
  int64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v26;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v26 = MEMORY[0x24BEE4AF8];
    sub_21191FA18(0, v3, 0);
    v6 = v26;
    v7 = (uint64_t *)(a1 + 40);
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      v26 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1)
      {
        sub_21191FA18(v10 > 1, v11 + 1, 1);
        v6 = v26;
      }
      v7 += 2;
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v12 = v6 + 24 * v11;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v8;
      *(_BYTE *)(v12 + 48) = a2;
      --v3;
    }
    while (v3);
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v26 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = swift_bridgeObjectRetain();
    v19 = MEMORY[0x212BE38C8](v18, &type metadata for FMFSecureOrLiveLocateInProgress);
    v21 = v20;
    swift_bridgeObjectRelease();
    sub_211950A9C(v19, v21, &v26);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v14, v15, a3, v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v17, -1, -1);
    MEMORY[0x212BE48A0](v16, -1, -1);

  }
  else
  {

    v22 = swift_bridgeObjectRelease_n();
  }
  MEMORY[0x24BDAC7A8](v22, v23);
  swift_retain();
  sub_211A47DA8();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2119EC57C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119EC5A8()
{
  uint64_t v0;

  return sub_2119E743C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2119EC5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211963DB0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254ACCAE8 + dword_254ACCAE8))(a1, v4);
}

uint64_t sub_2119EC620()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2119EC654(uint64_t a1)
{
  uint64_t *v1;

  sub_2119E4F50(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2119EC660()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2119EC694(uint64_t a1)
{
  uint64_t v1;

  return sub_2119E6598(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_2119EC6A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (qword_254AC7B80 != -1)
    swift_once();
  v6 = sub_211A47748();
  sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v7 = sub_211A47724();
  v8 = sub_211A47D30();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    sub_211950A9C(a1, a2, &v12);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v7, v8, "FMFManager: liveSessionDidEndForFriend: %s, successfullyEstablished?: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v10, -1, -1);
    MEMORY[0x212BE48A0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_2119E6EE0(a1, a2, a3 & 1);
}

uint64_t sub_2119EC884()
{
  return sub_211918184((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_2119EC890(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_211963DB0;
  return sub_2119E34E0(a1, v4, v5, v6);
}

uint64_t sub_2119EC8FC()
{
  return swift_deallocObject();
}

uint64_t sub_2119EC90C()
{
  return swift_deallocObject();
}

uint64_t sub_2119EC91C()
{
  return sub_211918184((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_2119EC928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211963DB0;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_2119EC98C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119EC9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_211963DB0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254ACCB28 + dword_254ACCB28))(a1, v4);
}

void sub_2119ECA20(uint64_t a1, void *a2)
{
  sub_2119E83E8(a1, a2);
}

uint64_t sub_2119ECA7C@<X0>(_BYTE *a1@<X8>)
{
  return sub_2119EC280(a1);
}

uint64_t sub_2119ECA90@<X0>(_BYTE *a1@<X8>)
{
  return sub_2119EBDEC(a1);
}

uint64_t sub_2119ECAA4@<X0>(_BYTE *a1@<X8>)
{
  return sub_21193E5F0(a1);
}

uint64_t sub_2119ECAB8@<X0>(_BYTE *a1@<X8>)
{
  return sub_211911AF8(a1);
}

uint64_t sub_2119ECAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  const void *v54;
  uint64_t v55;
  uint64_t *v56;

  v49 = a3;
  v54 = (const void *)a2;
  v56 = (uint64_t *)a1;
  v4 = sub_211958C38(&qword_254ACCD20);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_211A47208();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x24BDAC7A8](v48, v11);
  v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_211958C38(&qword_254ACCD18);
  v52 = *(_QWORD *)(v50 - 8);
  v15 = MEMORY[0x24BDAC7A8](v50, v14);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v46 - v19;
  v21 = sub_211A477FC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (uint64_t *)((char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = v3;
  v26 = *(void **)(v3 + qword_254ACC048);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v22 + 104))(v25, *MEMORY[0x24BEE5610], v21);
  v27 = v26;
  LOBYTE(v26) = sub_211A47814();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v22 + 8))(v25, v21);
  if ((v26 & 1) != 0)
  {
    sub_211934794((uint64_t)v56, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    v47 = v20;
    v29 = (uint64_t)v7;
    v30 = v51;
    v31 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v10, v49, v53);
    v32 = v13[1];
    *v17 = *v13;
    v17[1] = v32;
    v33 = (void *)v13[2];
    v34 = v54;
    sub_21196FD88((uint64_t)v54);
    swift_bridgeObjectRetain();
    v17[2] = sub_2119F2CA4();
    v17[3] = v35;
    v17[4] = v33;
    LOBYTE(v32) = *((_BYTE *)v13 + *(int *)(v48 + 28));
    v36 = v33;
    sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    v37 = v50;
    *((_BYTE *)v17 + *(int *)(v50 + 52)) = v32;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v17 + *(int *)(v37 + 44), v10, v31);
    memcpy((char *)v17 + *(int *)(v37 + 48), v34, 0x130uLL);
    v38 = (uint64_t)v47;
    sub_21192DD68((uint64_t)v17, (uint64_t)v47, &qword_254ACCD18);
    v39 = v56;
    v40 = sub_2119F2CA4();
    v42 = v41;
    sub_21192C6B8(v38, v29, &qword_254ACCD18);
    v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56);
    v43(v29, 0, 1, v37);
    swift_beginAccess();
    sub_211A40568(v29, v40, v42);
    swift_endAccess();
    v44 = *v39;
    v45 = v39[1];
    sub_21192C6B8(v38, v29, &qword_254ACCD18);
    v43(v29, 0, 1, v37);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_211A40568(v29, v44, v45);
    swift_endAccess();
    return sub_211923EE8(v38, &qword_254ACCD18);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2119ECE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v4 = v3;
  v26[0] = a2;
  v7 = sub_211A4779C();
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMReverseGeocodingRequest();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v19 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = *(_QWORD *)(v4 + qword_254ACC048);
  sub_211934794(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v4;
  sub_211942810((uint64_t)v19, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v23 = (_QWORD *)(v22 + v21);
  *v23 = v26[0];
  v23[1] = a3;
  aBlock[4] = sub_2119F18D4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBA48;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_211A477B4();
  v30 = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v10, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  return swift_release();
}

void sub_2119ED0E8(uint64_t a1, uint64_t *a2, void (*a3)(_BYTE *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _BYTE v14[304];
  _BYTE v15[304];
  _BYTE v16[304];
  _BYTE v17[304];
  _BYTE v18[304];

  sub_2119ED274(a2, v16);
  sub_21192DD68((uint64_t)v16, (uint64_t)v17, &qword_254ACCB40);
  sub_21192DD68((uint64_t)v17, (uint64_t)v18, &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)v18) == 1)
  {
    v8 = sub_2119F2CA4();
    v10 = v9;
    v11 = a1 + qword_254ACC030;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v11 + 16))
    {
      swift_bridgeObjectRetain();
      sub_21195BB68(v8, v10);
      v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
      {
        sub_2119EFD54((uint64_t)a2, (uint64_t)a3, a4);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_2119EE3A4((uint64_t)a2, 0, (uint64_t)a3, a4);
  }
  else
  {
    sub_21192DD68((uint64_t)v17, (uint64_t)v14, &qword_254ACCB40);
    sub_21192DD68((uint64_t)v17, (uint64_t)v15, &qword_254ACCB40);
    sub_21196FD88((uint64_t)v15);
    a3(v14);
    sub_21196F7C4((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    sub_21196F7C4((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
  }
}

uint64_t sub_2119ED274@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t, uint64_t, int *);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  unint64_t v79;
  NSObject *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  NSObject *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  const void *v106;
  void *v107;
  id v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  id v115;
  uint64_t v116;
  void *v117;
  double v118;
  void *v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  double v134;
  double v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  id v148;
  double v149;
  double v150;
  double v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  const void *v164;
  void *v165;
  _QWORD v166[2];
  uint64_t *v167;
  uint64_t *v168;
  char *v169;
  uint64_t v170;
  uint64_t *v171;
  char *v172;
  NSObject *v173;
  uint64_t *v174;
  _QWORD *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  int *v185;
  _QWORD v186[38];
  uint64_t v187;
  _OWORD v188[19];

  v3 = v2;
  v183 = a2;
  v5 = sub_211A47208();
  v178 = *(_QWORD *)(v5 - 8);
  v179 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v177 = (char *)v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = type metadata accessor for FMReverseGeocodingRequest();
  v9 = MEMORY[0x24BDAC7A8](v176, v8);
  v171 = (_QWORD *)((char *)v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v175 = (_QWORD *)((char *)v166 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v181 = (uint64_t)v166 - v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v174 = (_QWORD *)((char *)v166 - v18);
  v19 = sub_211958C38(&qword_254ACCD20);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v173 = ((char *)v166 - v26);
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)v166 - v28;
  v30 = sub_211958C38(&qword_254ACCD18);
  v184 = *(_QWORD *)(v30 - 8);
  v185 = (int *)v30;
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v169 = (char *)v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v168 = (_QWORD *)((char *)v166 - v36);
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v167 = (_QWORD *)((char *)v166 - v39);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v43 = (_QWORD *)((char *)v166 - v42);
  v45 = MEMORY[0x24BDAC7A8](v41, v44);
  v170 = (uint64_t)v166 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v180 = (uint64_t)v166 - v49;
  MEMORY[0x24BDAC7A8](v48, v50);
  v182 = (uint64_t)v166 - v51;
  v52 = sub_211A477FC();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v54);
  v56 = (_QWORD *)((char *)v166 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = *(void **)(v3 + qword_254ACC048);
  *v56 = v57;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v56, *MEMORY[0x24BEE5610], v52);
  v58 = v57;
  v59 = sub_211A47814();
  (*(void (**)(_QWORD *, uint64_t))(v53 + 8))(v56, v52);
  if ((v59 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v172 = v23;
  v60 = sub_2119F2CA4();
  v62 = v61;
  v63 = (uint64_t *)(v3 + qword_254ACC020);
  swift_beginAccess();
  v64 = *v63;
  if (*(_QWORD *)(v64 + 16))
  {
    v65 = a1;
    swift_bridgeObjectRetain();
    v66 = sub_21195BB68(v60, v62);
    v67 = v184;
    if ((v68 & 1) != 0)
    {
      sub_21192C6B8(*(_QWORD *)(v64 + 56) + *(_QWORD *)(v184 + 72) * v66, (uint64_t)v29, &qword_254ACCD18);
      v69 = *(void (**)(char *, uint64_t, uint64_t, int *))(v67 + 56);
      v70 = v29;
      v71 = 0;
    }
    else
    {
      v69 = *(void (**)(char *, uint64_t, uint64_t, int *))(v184 + 56);
      v70 = v29;
      v71 = 1;
    }
    v72 = (uint64_t)v185;
    v69(v70, v71, 1, v185);
    swift_bridgeObjectRelease();
  }
  else
  {
    v65 = a1;
    v67 = v184;
    v72 = (uint64_t)v185;
    v69 = *(void (**)(char *, uint64_t, uint64_t, int *))(v184 + 56);
    v69(v29, 1, 1, v185);
  }
  swift_bridgeObjectRelease();
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
  if (v73(v29, 1, v72) != 1)
  {
    v59 = v182;
    sub_21192DD68((uint64_t)v29, v182, &qword_254ACCD18);
    a1 = v65;
    if (qword_254AC7B88 == -1)
    {
LABEL_13:
      v83 = sub_211A47748();
      sub_21194F3E0(v83, (uint64_t)qword_254ADC800);
      v84 = v174;
      sub_211934794((uint64_t)a1, (uint64_t)v174, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v85 = v181;
      sub_211934794((uint64_t)a1, v181, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v86 = v180;
      sub_21192C6B8(v59, v180, &qword_254ACCD18);
      swift_retain_n();
      v87 = sub_211A47724();
      v88 = sub_211A47D30();
      v173 = v87;
      LODWORD(v171) = v88;
      v89 = os_log_type_enabled(v87, v88);
      v166[1] = v3;
      if (v89)
      {
        v90 = swift_slowAlloc();
        v170 = swift_slowAlloc();
        *(_QWORD *)&v188[0] = v170;
        *(_DWORD *)v90 = 136315906;
        v91 = sub_211A483A8();
        v186[0] = sub_211950A9C(v91, v92, (uint64_t *)v188);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2080;
        v93 = *v84;
        v94 = v84[1];
        swift_bridgeObjectRetain();
        v186[0] = sub_211950A9C(v93, v94, (uint64_t *)v188);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211934758((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v90 + 22) = 2080;
        v95 = v181;
        v96 = sub_2119F2CA4();
        v186[0] = sub_211950A9C(v96, v97, (uint64_t *)v188);
        v59 = v182;
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211934758(v95, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        *(_WORD *)(v90 + 32) = 2080;
        v98 = v185;
        v99 = v180;
        v100 = FMFAddress.debugDescription.getter();
        v186[0] = sub_211950A9C(v100, v101, (uint64_t *)v188);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211923EE8(v99, &qword_254ACCD18);
        v102 = v173;
        _os_log_impl(&dword_21190D000, v173, (os_log_type_t)v171, "%s: Using cached request %s based on geoHash %s -> %s.", (uint8_t *)v90, 0x2Au);
        v103 = v170;
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v103, -1, -1);
        MEMORY[0x212BE48A0](v90, -1, -1);

      }
      else
      {
        swift_release_n();
        sub_211934758((uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        sub_211934758(v85, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        sub_211923EE8(v86, &qword_254ACCD18);

        v98 = v185;
      }
      v104 = a1[1];
      v185 = (int *)*a1;
      v105 = v175;
      sub_211934794((uint64_t)a1, (uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v106 = (const void *)(v59 + v98[12]);
      memcpy(v186, v106, sizeof(v186));
      v107 = (void *)a1[2];
      swift_bridgeObjectRetain();
      sub_21196FD88((uint64_t)v186);
      v108 = objc_msgSend(v107, sel_timestamp);
      v109 = v177;
      sub_211A471E4();

      v110 = v105[1];
      *v43 = *v105;
      v43[1] = v110;
      v111 = (void *)v105[2];
      swift_bridgeObjectRetain();
      v43[2] = sub_2119F2CA4();
      v43[3] = v112;
      v43[4] = v111;
      v113 = v59;
      v114 = *((_BYTE *)v105 + *(int *)(v176 + 28));
      v115 = v111;
      sub_211934758((uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      *((_BYTE *)v43 + v98[13]) = v114;
      (*(void (**)(char *, char *, uint64_t))(v178 + 32))((char *)v43 + v98[11], v109, v179);
      memcpy((char *)v43 + v98[12], v186, 0x130uLL);
      v116 = (uint64_t)v172;
      sub_21192DD68((uint64_t)v43, (uint64_t)v172, &qword_254ACCD18);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v184 + 56))(v116, 0, 1, v98);
      swift_beginAccess();
      sub_211A40568(v116, (uint64_t)v185, v104);
      swift_endAccess();
      memcpy(v188, v106, sizeof(v188));
      v117 = v183;
      memcpy(v183, v106, 0x130uLL);
      sub_21196FD88((uint64_t)v188);
      sub_211923EE8(v113, &qword_254ACCD18);
      v119 = v117;
      return nullsub_1(v119, v118);
    }
LABEL_47:
    swift_once();
    goto LABEL_13;
  }
  sub_211923EE8((uint64_t)v29, &qword_254ACCD20);
  v74 = (uint64_t)v65;
  v76 = *v65;
  v75 = v65[1];
  v77 = (uint64_t *)(v3 + qword_254ACC028);
  swift_beginAccess();
  v78 = *v77;
  if (!*(_QWORD *)(v78 + 16))
  {
    v80 = v173;
    v69((char *)v173, 1, 1, v185);
LABEL_21:
    sub_211923EE8((uint64_t)v80, &qword_254ACCD20);
    if (qword_254AC7B88 != -1)
      swift_once();
    v122 = sub_211A47748();
    sub_21194F3E0(v122, (uint64_t)qword_254ADC800);
    v123 = v171;
    sub_211934794(v74, (uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    v124 = sub_211A47724();
    v125 = sub_211A47D30();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = swift_slowAlloc();
      v127 = swift_slowAlloc();
      *(_QWORD *)&v188[0] = v127;
      *(_DWORD *)v126 = 136315394;
      v128 = sub_211A483A8();
      v187 = sub_211950A9C(v128, v129, (uint64_t *)v188);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v126 + 12) = 2080;
      v130 = *v123;
      v131 = v123[1];
      swift_bridgeObjectRetain();
      v187 = sub_211950A9C(v130, v131, (uint64_t *)v188);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211934758((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_21190D000, v124, v125, "%s: No cached request for %s.", (uint8_t *)v126, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v127, -1, -1);
      MEMORY[0x212BE48A0](v126, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_211934758((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    }

    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79 = sub_21195BB68(v76, v75);
  v80 = v173;
  if ((v81 & 1) != 0)
  {
    sub_21192C6B8(*(_QWORD *)(v78 + 56) + *(_QWORD *)(v184 + 72) * v79, (uint64_t)v173, &qword_254ACCD18);
    v82 = 0;
  }
  else
  {
    v82 = 1;
  }
  v121 = (uint64_t)v185;
  v69((char *)v80, v82, 1, v185);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73((char *)v80, 1, v121) == 1)
    goto LABEL_21;
  v132 = v170;
  sub_21192DD68((uint64_t)v80, v170, &qword_254ACCD18);
  v133 = v177;
  sub_211A471F0();
  sub_211A4719C();
  v135 = v134;
  v136 = (*(uint64_t (**)(char *, uint64_t))(v178 + 8))(v133, v179);
  if ((*(double (**)(uint64_t))(*(_QWORD *)v3 + 256))(v136) < v135)
  {
    if (qword_254AC7B88 != -1)
      swift_once();
    v137 = sub_211A47748();
    sub_21194F3E0(v137, (uint64_t)qword_254ADC800);
    v138 = v167;
    sub_21192C6B8(v132, (uint64_t)v167, &qword_254ACCD18);
    swift_retain_n();
    v139 = sub_211A47724();
    v140 = sub_211A47D30();
    if (os_log_type_enabled(v139, v140))
    {
      v141 = swift_slowAlloc();
      v142 = swift_slowAlloc();
      *(_QWORD *)&v188[0] = v142;
      *(_DWORD *)v141 = 136315394;
      v143 = sub_211A483A8();
      v187 = sub_211950A9C(v143, v144, (uint64_t *)v188);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v141 + 12) = 2080;
      v145 = *v138;
      v146 = v138[1];
      swift_bridgeObjectRetain();
      v187 = sub_211950A9C(v145, v146, (uint64_t *)v188);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211923EE8((uint64_t)v138, &qword_254ACCD18);
      _os_log_impl(&dword_21190D000, v139, v140, "%s: Cached request for %s is older than the 30s.", (uint8_t *)v141, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v142, -1, -1);
      MEMORY[0x212BE48A0](v141, -1, -1);

      v147 = v170;
    }
    else
    {

      sub_211923EE8((uint64_t)v138, &qword_254ACCD18);
      swift_release_n();
      v147 = v132;
    }
    goto LABEL_42;
  }
  v148 = objc_msgSend(*(id *)(v132 + 32), sel_distanceFromLocation_, *(_QWORD *)(v74 + 16));
  v150 = v149;
  if ((*(_BYTE *)(v74 + *(int *)(v176 + 28)) & 1) != 0)
    v151 = (*(double (**)(id))(*(_QWORD *)v3 + 264))(v148);
  else
    v151 = 250.0;
  v152 = v168;
  v153 = (uint64_t)v169;
  if (v150 < v151)
  {
    if (qword_254AC7B88 != -1)
      swift_once();
    v154 = sub_211A47748();
    sub_21194F3E0(v154, (uint64_t)qword_254ADC800);
    sub_21192C6B8(v132, (uint64_t)v152, &qword_254ACCD18);
    sub_21192C6B8(v132, v153, &qword_254ACCD18);
    v155 = sub_211A47724();
    v156 = sub_211A47D30();
    if (os_log_type_enabled(v155, v156))
    {
      v157 = swift_slowAlloc();
      v184 = swift_slowAlloc();
      *(_QWORD *)&v188[0] = v184;
      *(_DWORD *)v157 = 136315906;
      v158 = *v152;
      v159 = v152[1];
      swift_bridgeObjectRetain();
      v187 = sub_211950A9C(v158, v159, (uint64_t *)v188);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211923EE8((uint64_t)v152, &qword_254ACCD18);
      *(_WORD *)(v157 + 12) = 2048;
      v187 = *(_QWORD *)&v150;
      sub_211A47E2C();
      *(_WORD *)(v157 + 22) = 2048;
      v187 = *(_QWORD *)&v151;
      sub_211A47E2C();
      *(_WORD *)(v157 + 32) = 2080;
      v160 = FMFAddress.debugDescription.getter();
      v187 = sub_211950A9C(v160, v161, (uint64_t *)v188);
      v132 = v170;
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211923EE8(v153, &qword_254ACCD18);
      _os_log_impl(&dword_21190D000, v155, v156, "FMReverseGeocodingCache: Using cached request for %s due to location distance throttling - distance: %f, limit: %f -> %s.", (uint8_t *)v157, 0x2Au);
      v162 = v184;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v162, -1, -1);
      v163 = v157;
      v121 = (uint64_t)v185;
      MEMORY[0x212BE48A0](v163, -1, -1);
    }
    else
    {
      sub_211923EE8((uint64_t)v152, &qword_254ACCD18);
      sub_211923EE8(v153, &qword_254ACCD18);
    }

    v164 = (const void *)(v132 + *(int *)(v121 + 48));
    memcpy(v188, v164, sizeof(v188));
    v165 = v183;
    memcpy(v183, v164, 0x130uLL);
    sub_21196FD88((uint64_t)v188);
    sub_211923EE8(v132, &qword_254ACCD18);
    v119 = v165;
    return nullsub_1(v119, v118);
  }
  v147 = v132;
LABEL_42:
  sub_211923EE8(v147, &qword_254ACCD18);
LABEL_43:
  sub_21196F528(v188);
  return sub_21192DD68((uint64_t)v188, (uint64_t)v183, &qword_254ACCB40);
}

void sub_2119EE3A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  _BYTE *v66;
  uint64_t (**v67)(uint64_t, void *);
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  objc_super v92;
  uint64_t v93;
  uint64_t v94[38];
  _QWORD v95[38];
  uint64_t v96[38];

  v5 = v4;
  v88 = a3;
  v89 = a4;
  v8 = type metadata accessor for FMReverseGeocodingRequest();
  v85 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v85 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v86 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v87 = (uint64_t)&v83 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v84 = (uint64_t)&v83 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v83 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v83 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (uint64_t *)((char *)&v83 - v27);
  v91 = a1;
  v29 = sub_2119F2CA4();
  v31 = v30;
  v90 = v5;
  v32 = v5 + qword_254ACC030;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v32 + 16))
  {
    swift_bridgeObjectRetain();
    sub_21195BB68(v29, v31);
    v34 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
      v35 = v91;
      if (qword_254AC7B88 != -1)
        swift_once();
      v36 = sub_211A47748();
      sub_21194F3E0(v36, (uint64_t)qword_254ADC800);
      sub_211934794(v35, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      v37 = sub_211A47724();
      v38 = sub_211A47D30();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v96[0] = v40;
        *(_DWORD *)v39 = 136315394;
        v41 = sub_211A483A8();
        v95[0] = sub_211950A9C(v41, v42, v96);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        v43 = FMReverseGeocodingRequest.debugDescription.getter();
        v95[0] = sub_211950A9C(v43, v44, v96);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211934758((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_21190D000, v37, v38, "%s: Loading declined, we are already processing similar location: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        v45 = v40;
LABEL_21:
        MEMORY[0x212BE48A0](v45, -1, -1);
        MEMORY[0x212BE48A0](v39, -1, -1);
LABEL_25:

        return;
      }
      swift_release_n();
      v82 = (uint64_t)v25;
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v46 = v91;
  sub_211934794(v91, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  if ((a2 & 1) != 0)
  {
    sub_211934758((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    v47 = v90;
  }
  else
  {
    v47 = v90;
    sub_2119ED274(v28, v94);
    sub_211934758((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_21192DD68((uint64_t)v94, (uint64_t)v95, &qword_254ACCB40);
    sub_21196F7C4((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    sub_21192DD68((uint64_t)v95, (uint64_t)v96, &qword_254ACCB40);
    if (sub_21196FB8C((uint64_t)v96) != 1)
    {
      if (qword_254AC7B88 != -1)
        swift_once();
      v74 = sub_211A47748();
      sub_21194F3E0(v74, (uint64_t)qword_254ADC800);
      v75 = v84;
      sub_211934794(v46, v84, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      swift_retain_n();
      v37 = sub_211A47724();
      v76 = sub_211A47D30();
      if (os_log_type_enabled(v37, v76))
      {
        v39 = swift_slowAlloc();
        v77 = swift_slowAlloc();
        v94[0] = v77;
        *(_DWORD *)v39 = 136315394;
        v78 = sub_211A483A8();
        v93 = sub_211950A9C(v78, v79, v94);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        v80 = FMReverseGeocodingRequest.debugDescription.getter();
        v93 = sub_211950A9C(v80, v81, v94);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211934758(v75, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        _os_log_impl(&dword_21190D000, v37, v76, "%s: Loading declined, we have already processed similar location: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        v45 = v77;
        goto LABEL_21;
      }
      swift_release_n();
      v82 = v75;
LABEL_24:
      sub_211934758(v82, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      goto LABEL_25;
    }
  }
  if (qword_254AC7B88 != -1)
    swift_once();
  v48 = sub_211A47748();
  sub_21194F3E0(v48, (uint64_t)qword_254ADC800);
  sub_211934794(v46, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain_n();
  v49 = sub_211A47724();
  v50 = sub_211A47D30();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v84 = swift_slowAlloc();
    v96[0] = v84;
    *(_DWORD *)v51 = 136315394;
    v52 = sub_211A483A8();
    v95[0] = sub_211950A9C(v52, v53, v96);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    v54 = FMReverseGeocodingRequest.debugDescription.getter();
    v95[0] = sub_211950A9C(v54, v55, v96);
    v46 = v91;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    _os_log_impl(&dword_21190D000, v49, v50, "%s: Loading new address for %s", (uint8_t *)v51, 0x16u);
    v56 = v84;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v56, -1, -1);
    v57 = v51;
    v47 = v90;
    MEMORY[0x212BE48A0](v57, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  }

  v58 = v87;
  sub_211934794(v46, v87, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v59 = v86;
  sub_211934794(v46, v86, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v60 = (*(unsigned __int8 *)(v85 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v47;
  sub_211942810(v59, v61 + v60, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v62 = (uint64_t *)(v61 + ((v9 + v60 + 7) & 0xFFFFFFFFFFFFFFF8));
  v64 = v88;
  v63 = v89;
  *v62 = v88;
  v62[1] = v63;
  v65 = (objc_class *)type metadata accessor for FMReverseGeocodingOperation();
  v66 = objc_allocWithZone(v65);
  v66[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation__isFinished] = 0;
  sub_211934794(v58, (uint64_t)&v66[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_request], (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v67 = (uint64_t (**)(uint64_t, void *))&v66[OBJC_IVAR____TtC7FMFCore27FMReverseGeocodingOperation_completion];
  *v67 = sub_2119F1BC8;
  v67[1] = (uint64_t (*)(uint64_t, void *))v61;
  swift_retain();
  sub_2119B8E00(v64);
  v92.receiver = v66;
  v92.super_class = v65;
  v68 = objc_msgSendSuper2(&v92, sel_init);
  sub_211934758(v58, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  objc_msgSend(*(id *)(v47 + qword_254ACC040), sel_addOperation_, v68);
  v69 = sub_2119F2CA4();
  v71 = v70;
  swift_beginAccess();
  v72 = v68;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v95[0] = *(_QWORD *)v32;
  *(_QWORD *)v32 = 0x8000000000000000;
  sub_211A4429C((uint64_t)v72, v69, v71, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v32 = v95[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

}

uint64_t sub_2119EED0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v34 = a5;
  v35 = a6;
  v33 = a1;
  v9 = sub_211A4779C();
  v39 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMReverseGeocodingRequest();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17, v20);
  v21 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(a3 + qword_254ACC048);
  sub_211934794(a4, (uint64_t)v21, v22);
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a3;
  *(_QWORD *)(v26 + 24) = a2;
  sub_211942810((uint64_t)v21, v26 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v27 = (uint64_t *)(v26 + v24);
  v29 = v34;
  v28 = v35;
  *v27 = v34;
  v27[1] = v28;
  *(_QWORD *)(v26 + v25) = v33;
  aBlock[4] = sub_2119F1D20;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBC00;
  v30 = _Block_copy(aBlock);
  swift_retain();
  v31 = a2;
  sub_2119B8E00(v29);
  swift_unknownObjectRetain();
  sub_211A477B4();
  v40 = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v12, v30);
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
  return swift_release();
}

void sub_2119EEF94(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  double v50;
  double v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(double *);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void *v107;
  _QWORD *v108;
  uint64_t v109;
  void *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(double *);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[6];
  uint64_t v135[38];
  _QWORD v136[38];
  _BYTE v137[304];
  double v138[38];
  _OWORD v139[19];

  v132 = a2;
  v11 = sub_211A4779C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A477D8();
  v126 = *(_QWORD *)(v16 - 8);
  v127 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v125 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_211A477A8();
  v118 = *(_QWORD *)(v19 - 8);
  v119 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v124 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211A47208();
  v121 = *(_QWORD *)(v22 - 8);
  v122 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v120 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FMReverseGeocodingRequest();
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v114 = (uint64_t)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v123 = (uint64_t)&v113 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v128 = (uint64_t)&v113 - v33;
  v34 = qword_254ACC038;
  v35 = *(_QWORD *)(a1 + qword_254ACC038);
  v36 = __OFADD__(v35, 1);
  v37 = v35 + 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    v116 = v15;
    v129 = a5;
    *(_QWORD *)(a1 + qword_254ACC038) = v37;
    if (qword_254AC7B88 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v38 = sub_211A47748();
  v39 = sub_21194F3E0(v38, (uint64_t)qword_254ADC800);
  swift_retain_n();
  v133 = v39;
  v40 = sub_211A47724();
  v41 = sub_211A47D30();
  v42 = os_log_type_enabled(v40, v41);
  v130 = a4;
  v131 = a3;
  v115 = v11;
  v117 = v12;
  if (v42)
  {
    v43 = swift_slowAlloc();
    v113 = swift_slowAlloc();
    *(_QWORD *)&v139[0] = v113;
    *(_DWORD *)v43 = 136315394;
    v44 = sub_211A483A8();
    *(_QWORD *)&v138[0] = sub_211950A9C(v44, v45, (uint64_t *)v139);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2048;
    v46 = *(double *)(a1 + v34);
    swift_release();
    v138[0] = v46;
    a3 = v131;
    sub_211A47E2C();
    swift_release();
    _os_log_impl(&dword_21190D000, v40, v41, "%s: Total operations processed: %ld.", (uint8_t *)v43, 0x16u);
    v47 = v113;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v47, -1, -1);
    MEMORY[0x212BE48A0](v43, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v48 = (void *)v132;
  v49 = *(_QWORD *)(a1 + v34);
  if (__ROR8__(0xCCCCCCCCCCCCCCCDLL * v49 + 0x1999999999999998, 1) <= 0x1999999999999998uLL)
  {
    sub_211A471C0();
    v51 = v50;
    swift_retain_n();
    v52 = sub_211A47724();
    v53 = sub_211A47D30();
    if (!os_log_type_enabled(v52, v53))
    {

      swift_release_n();
      if (v48)
        goto LABEL_10;
      goto LABEL_17;
    }
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    *(_QWORD *)&v139[0] = v55;
    *(_DWORD *)v54 = 136315394;
    v56 = sub_211A483A8();
    *(_QWORD *)&v138[0] = sub_211950A9C(v56, v57, (uint64_t *)v139);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2048;
    v138[0] = (double)v49 / fabs(v51);
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v52, v53, "%s: Current throughput: %f requests per second.", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    v58 = v55;
    a3 = v131;
    MEMORY[0x212BE48A0](v58, -1, -1);
    v59 = v54;
    v48 = (void *)v132;
    MEMORY[0x212BE48A0](v59, -1, -1);

  }
  if (v48)
  {
LABEL_10:
    v60 = v128;
    sub_211934794(a3, v128, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    v61 = v48;
    v62 = v48;
    v63 = sub_211A47724();
    v64 = sub_211A47D30();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = v48;
      v66 = swift_slowAlloc();
      v133 = swift_slowAlloc();
      *(_QWORD *)&v139[0] = v133;
      *(_DWORD *)v66 = 136315394;
      v67 = FMReverseGeocodingRequest.debugDescription.getter();
      *(_QWORD *)&v138[0] = sub_211950A9C(v67, v68, (uint64_t *)v139);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211934758(v60, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      *(_WORD *)(v66 + 12) = 2080;
      swift_getErrorValue();
      v69 = sub_211A482DC();
      *(_QWORD *)&v138[0] = sub_211950A9C(v69, v70, (uint64_t *)v139);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v63, v64, "FMReverseGeocodingCache: Geocoding error: %s for request: %s", (uint8_t *)v66, 0x16u);
      v71 = v133;
      swift_arrayDestroy();
      v72 = v71;
LABEL_12:
      MEMORY[0x212BE48A0](v72, -1, -1);
      MEMORY[0x212BE48A0](v66, -1, -1);
      goto LABEL_14;
    }
    sub_211934758(v60, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);

    goto LABEL_14;
  }
LABEL_17:
  if (!a6)
  {
    v95 = v114;
    sub_211934794(a3, v114, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    swift_retain_n();
    v63 = sub_211A47724();
    v96 = sub_211A47D30();
    if (os_log_type_enabled(v63, v96))
    {
      v66 = swift_slowAlloc();
      v97 = swift_slowAlloc();
      *(_QWORD *)&v139[0] = v97;
      *(_DWORD *)v66 = 136315394;
      v98 = sub_211A483A8();
      *(_QWORD *)&v138[0] = sub_211950A9C(v98, v99, (uint64_t *)v139);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      v100 = FMReverseGeocodingRequest.debugDescription.getter();
      *(_QWORD *)&v138[0] = sub_211950A9C(v100, v101, (uint64_t *)v139);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      sub_211934758(v95, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      _os_log_impl(&dword_21190D000, v63, v96, "%s: No map items received for request: %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      v72 = v97;
      goto LABEL_12;
    }
    swift_release_n();
    sub_211934758(v95, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
LABEL_14:

    v73 = v130;
    v74 = sub_2119F2CA4();
    v76 = v75;
    swift_beginAccess();
    v77 = (void *)sub_211A40DC8(v74, v76);
    swift_endAccess();
    swift_bridgeObjectRelease();

    if (v73)
    {
      sub_21196F528(v139);
      sub_21192DD68((uint64_t)v139, (uint64_t)v138, &qword_254ACCB40);
      v73(v138);
    }
    return;
  }
  v78 = (void *)swift_unknownObjectRetain_n();
  FMFAddress.init(mapItem:)(v78, (uint64_t)v137);
  v79 = sub_2119F2CA4();
  v81 = v80;
  swift_beginAccess();
  v82 = (void *)sub_211A40DC8(v79, v81);
  swift_endAccess();
  swift_bridgeObjectRelease();

  v83 = (uint64_t)v120;
  sub_211A471FC();
  memcpy(v139, v137, sizeof(v139));
  sub_2119ECAD0(a3, (uint64_t)v139, v83);
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v83, v122);
  v84 = v123;
  sub_211934794(a3, v123, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  memcpy(v138, v137, sizeof(v138));
  swift_retain();
  sub_21196FD88((uint64_t)v138);
  swift_retain();
  sub_21196FD88((uint64_t)v138);
  v85 = sub_211A47724();
  v86 = sub_211A47D30();
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc();
    v132 = swift_slowAlloc();
    v135[0] = v132;
    *(_DWORD *)v87 = 136315650;
    v88 = sub_211A483A8();
    v133 = a6;
    v136[0] = sub_211950A9C(v88, v89, v135);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 12) = 2080;
    v90 = FMReverseGeocodingRequest.debugDescription.getter();
    v136[0] = sub_211950A9C(v90, v91, v135);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758(v84, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v87 + 22) = 2080;
    memcpy(v136, v138, sizeof(v136));
    v92 = FMFAddress.debugDescription.getter();
    v136[0] = sub_211950A9C(v92, v93, v135);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_21196FED0((uint64_t)v138);
    sub_21196FED0((uint64_t)v138);
    _os_log_impl(&dword_21190D000, v85, v86, "%s: address received for request: %s - %s", (uint8_t *)v87, 0x20u);
    v94 = v132;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v94, -1, -1);
    MEMORY[0x212BE48A0](v87, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_211934758(v84, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_21196FED0((uint64_t)v138);
    sub_21196FED0((uint64_t)v138);
  }

  v102 = (uint64_t)v130;
  v103 = v115;
  v105 = v118;
  v104 = v119;
  sub_211920E14();
  v106 = v124;
  (*(void (**)(char *, _QWORD, uint64_t))(v105 + 104))(v124, *MEMORY[0x24BEE5490], v104);
  v107 = (void *)sub_211A47DCC();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v104);
  memcpy(v135, v137, sizeof(v135));
  v108 = (_QWORD *)swift_allocObject();
  v108[2] = a1;
  memcpy(v108 + 3, v137, 0x130uLL);
  v109 = v129;
  v108[41] = v102;
  v108[42] = v109;
  v134[4] = sub_2119F1ED0;
  v134[5] = v108;
  v134[0] = MEMORY[0x24BDAC760];
  v134[1] = 1107296256;
  v134[2] = sub_21192382C;
  v134[3] = &unk_24CCCBC50;
  v110 = _Block_copy(v134);
  swift_retain();
  sub_21196FD88((uint64_t)v135);
  sub_2119B8E00(v102);
  v111 = v125;
  sub_211A477B4();
  v136[0] = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  v112 = v116;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v111, v112, v110);
  _Block_release(v110);
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v117 + 8))(v112, v103);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v111, v127);
  memcpy(v136, v137, sizeof(v136));
  sub_21196FED0((uint64_t)v136);
  swift_release();
}

uint64_t sub_2119EFD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = v3;
  v27[0] = a3;
  v7 = sub_211A4779C();
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMReverseGeocodingRequest();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v19 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = *(_QWORD *)(v4 + qword_254ACC048);
  sub_211934794(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v4;
  sub_211942810((uint64_t)v19, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v23 = (uint64_t *)(v22 + v21);
  v24 = v27[0];
  *v23 = a2;
  v23[1] = v24;
  aBlock[4] = sub_2119F192C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBA98;
  v25 = _Block_copy(aBlock);
  swift_retain();
  sub_2119B8E00(a2);
  sub_211A477B4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v10, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  return swift_release();
}

void sub_2119EFFB8(uint64_t a1, uint64_t *a2, void (*a3)(_QWORD *), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD *);
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  os_log_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD *);
  _QWORD v55[38];
  uint64_t v56[38];

  v54 = a3;
  v7 = type metadata accessor for FMReverseGeocodingRequest();
  v53 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v53 + 64);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_2119F2CA4();
  v17 = v16;
  v18 = (uint64_t *)(a1 + qword_254ACC030);
  swift_beginAccess();
  v19 = *v18;
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    v20 = sub_21195BB68(v15, v17);
    if ((v21 & 1) != 0)
    {
      v22 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_254AC7B88 != -1)
        swift_once();
      v52 = a4;
      v23 = sub_211A47748();
      sub_21194F3E0(v23, (uint64_t)qword_254ADC800);
      sub_211934794((uint64_t)a2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v24 = v22;
      swift_retain_n();
      v25 = v24;
      v26 = sub_211A47724();
      v27 = sub_211A47D30();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v29 = swift_slowAlloc();
        v50 = v28;
        v30 = v29;
        v51 = swift_slowAlloc();
        v56[0] = v51;
        *(_DWORD *)v30 = 136315650;
        v49 = v26;
        v31 = sub_211A483A8();
        v55[0] = sub_211950A9C(v31, v32, v56);
        v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_211A47E2C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v33 = FMReverseGeocodingRequest.debugDescription.getter();
        v55[0] = sub_211950A9C(v33, v34, v56);
        sub_211A47E2C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        v35 = FMReverseGeocodingRequest.debugDescription.getter();
        v55[0] = sub_211950A9C(v35, v36, v56);
        v11 = v48;
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
        v26 = v49;
        _os_log_impl(&dword_21190D000, v49, (os_log_type_t)v50, "%s: Attaching to an existing operation: %s, source: %s", (uint8_t *)v30, 0x20u);
        v37 = v51;
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v37, -1, -1);
        MEMORY[0x212BE48A0](v30, -1, -1);
      }
      else
      {

        swift_release_n();
        sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      }

      sub_211934794((uint64_t)a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v39 = (*(unsigned __int8 *)(v53 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = a1;
      sub_211942810((uint64_t)v11, v40 + v39, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
      v41 = (_QWORD *)(v40 + ((v8 + v39 + 7) & 0xFFFFFFFFFFFFFFF8));
      v42 = (uint64_t)v54;
      v43 = v52;
      *v41 = v54;
      v41[1] = v43;
      v56[4] = (uint64_t)sub_2119F193C;
      v56[5] = v40;
      v56[0] = MEMORY[0x24BDAC760];
      v56[1] = 1107296256;
      v56[2] = (uint64_t)sub_21192382C;
      v56[3] = (uint64_t)&unk_24CCCBAE8;
      v44 = _Block_copy(v56);
      v45 = (void *)objc_opt_self();
      swift_retain();
      sub_2119B8E00(v42);
      v46 = objc_msgSend(v45, sel_blockOperationWithBlock_, v44);
      _Block_release(v44);
      swift_release();
      objc_msgSend(v46, sel_addDependency_, v25);
      objc_msgSend(*(id *)(a1 + qword_254ACC040), sel_addOperation_, v46);

      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v38 = v54;
  if (v54)
  {
    sub_2119ED274(a2, v55);
    v38(v55);
    sub_21192DD68((uint64_t)v55, (uint64_t)v56, &qword_254ACCB40);
    sub_21196F7C4((uint64_t)v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
  }
}

uint64_t sub_2119F04D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v27[0] = a4;
  v7 = sub_211A4779C();
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMReverseGeocodingRequest();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v19 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = *(_QWORD *)(a1 + qword_254ACC048);
  sub_211934794(a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a1;
  sub_211942810((uint64_t)v19, v22 + v20, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  v23 = (uint64_t *)(v22 + v21);
  v24 = v27[0];
  *v23 = a3;
  v23[1] = v24;
  aBlock[4] = sub_2119F194C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBB38;
  v25 = _Block_copy(aBlock);
  swift_retain();
  sub_2119B8E00(a3);
  sub_211A477B4();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v10, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  return swift_release();
}

uint64_t sub_2119F073C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[38];
  uint64_t v85;
  _BYTE v86[304];
  _QWORD v87[38];
  _BYTE v88[328];
  _OWORD v89[19];

  v74 = a3;
  v75 = a4;
  v6 = sub_211A4779C();
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v79 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477A8();
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v71 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211A47208();
  v69 = *(_QWORD *)(v15 - 8);
  v70 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v68 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMReverseGeocodingRequest();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211958C38(&qword_254ACCD18);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_211958C38(&qword_254ACCD20);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a2;
  v31 = sub_2119F2CA4();
  v33 = v32;
  v82 = a1;
  v34 = (uint64_t *)(a1 + qword_254ACC020);
  swift_beginAccess();
  v35 = *v34;
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    v36 = sub_21195BB68(v31, v33);
    if ((v37 & 1) != 0)
    {
      sub_21192C6B8(*(_QWORD *)(v35 + 56) + *(_QWORD *)(v23 + 72) * v36, (uint64_t)v30, &qword_254ACCD18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v30, 0, 1, v22);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v30, 1, 1, v22);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v30, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22))
  {
    sub_211923EE8((uint64_t)v30, &qword_254ACCD20);
    sub_21196F528(v89);
  }
  else
  {
    sub_21192C6B8((uint64_t)v30, (uint64_t)v26, &qword_254ACCD18);
    sub_211923EE8((uint64_t)v30, &qword_254ACCD20);
    memcpy(v87, &v26[*(int *)(v22 + 48)], sizeof(v87));
    sub_21196FD88((uint64_t)v87);
    sub_211923EE8((uint64_t)v26, &qword_254ACCD18);
    memcpy(v89, v87, sizeof(v89));
    nullsub_1(v89, v38);
  }
  sub_21192DD68((uint64_t)v89, (uint64_t)v88, &qword_254ACCB40);
  if (qword_254AC7B88 != -1)
    swift_once();
  v39 = sub_211A47748();
  sub_21194F3E0(v39, (uint64_t)qword_254ADC800);
  sub_211934794(v83, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  swift_retain();
  sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  swift_retain();
  sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  v40 = sub_211A47724();
  v41 = sub_211A47D30();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v85 = v43;
    *(_DWORD *)v42 = 136315650;
    v44 = sub_211A483A8();
    *(_QWORD *)&v89[0] = sub_211950A9C(v44, v45, &v85);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    v46 = FMReverseGeocodingRequest.debugDescription.getter();
    *(_QWORD *)&v89[0] = sub_211950A9C(v46, v47, &v85);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    *(_WORD *)(v42 + 22) = 2080;
    sub_21192DD68((uint64_t)v88, (uint64_t)v87, &qword_254ACCB40);
    sub_21192DD68((uint64_t)v88, (uint64_t)v89, &qword_254ACCB40);
    if (sub_21196FB8C((uint64_t)v89) == 1)
    {
      v48 = 0xE400000000000000;
      v49 = 1701736302;
    }
    else
    {
      sub_21192DD68((uint64_t)v88, (uint64_t)v84, &qword_254ACCB40);
      sub_21196FD88((uint64_t)v84);
      v49 = FMFAddress.debugDescription.getter();
      v48 = v50;
      memcpy(v86, v87, sizeof(v86));
      sub_21196FED0((uint64_t)v86);
    }
    v87[0] = sub_211950A9C(v49, v48, &v85);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    _os_log_impl(&dword_21190D000, v40, v41, "%s: Existing operation completed, notifying the duplicate: %s - %s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v43, -1, -1);
    MEMORY[0x212BE48A0](v42, -1, -1);

  }
  else
  {
    swift_release_n();
    sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
    sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);

  }
  sub_21192DD68((uint64_t)v88, (uint64_t)v87, &qword_254ACCB40);
  if (sub_21196FB8C((uint64_t)v87) != 1)
  {
    sub_21192DD68((uint64_t)v88, (uint64_t)v86, &qword_254ACCB40);
    memcpy(v89, v86, sizeof(v89));
    v51 = v83;
    v52 = *(void **)(v83 + 16);
    sub_21196FD88((uint64_t)v86);
    v53 = objc_msgSend(v52, sel_timestamp);
    v54 = (uint64_t)v68;
    sub_211A471E4();

    sub_2119ECAD0(v51, (uint64_t)v89, v54);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v54, v70);
    sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
  }
  sub_211920E14();
  v56 = v71;
  v55 = v72;
  v57 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, *MEMORY[0x24BEE5490], v73);
  v58 = (void *)sub_211A47DCC();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  sub_21192DD68((uint64_t)v88, (uint64_t)v86, &qword_254ACCB40);
  v59 = swift_allocObject();
  v61 = v74;
  v60 = v75;
  *(_QWORD *)(v59 + 16) = v74;
  *(_QWORD *)(v59 + 24) = v60;
  sub_21192DD68((uint64_t)v86, v59 + 32, &qword_254ACCB40);
  v84[4] = sub_2119F1AE8;
  v84[5] = v59;
  v84[0] = MEMORY[0x24BDAC760];
  v84[1] = 1107296256;
  v84[2] = sub_21192382C;
  v84[3] = &unk_24CCCBB88;
  v62 = _Block_copy(v84);
  sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21195DA00);
  sub_2119B8E00(v61);
  v63 = v76;
  sub_211A477B4();
  v85 = MEMORY[0x24BEE4AF8];
  sub_2119F18E0();
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_211969B94();
  v64 = v79;
  v65 = v81;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v63, v64, v62);
  _Block_release(v62);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v64, v65);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v78);
  sub_21196F7C4((uint64_t)v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21191CE4C);
  return swift_release();
}

uint64_t FMFReverseGeocodingCache.__allocating_init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_21192C6B8(a1, (uint64_t)v5, &qword_254AC9200);
  v6 = sub_21192244C((uint64_t)v5);
  sub_211923EE8(a1, &qword_254AC9200);
  return v6;
}

double sub_2119F10B8(uint64_t a1, uint64_t a2)
{
  return sub_2119F10DC((uint64_t)sub_2119A189C, a2);
}

double sub_2119F10C8(uint64_t a1, uint64_t a2)
{
  return sub_2119F10DC((uint64_t)sub_211963814, a2);
}

double sub_2119F10DC(uint64_t a1, uint64_t a2)
{
  double v3;

  if (qword_254AC7B90 != -1)
    a1 = swift_once();
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_211A47DA8();
  return v3;
}

uint64_t sub_2119F118C(uint64_t a1, uint64_t (*a2)(_BYTE *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *);
  uint64_t v25;
  _BYTE v26[304];
  _OWORD v27[19];

  v24 = a2;
  v25 = a3;
  v5 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFLocation();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211958C38(&qword_254ACABC8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (uint64_t *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for FMReverseGeocodingRequest();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211934794(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  sub_21192C6B8(v3 + qword_254ADC718, (uint64_t)v8, &qword_254AC9200);
  sub_2119F1380((uint64_t)v12, (uint64_t)v8, v16);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_211923EE8((uint64_t)v16, &qword_254ACABC8);
    sub_21196F528(v27);
    sub_21192DD68((uint64_t)v27, (uint64_t)v26, &qword_254ACCB40);
    return v24(v26);
  }
  else
  {
    sub_211942810((uint64_t)v16, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
    sub_2119ECE88((uint64_t)v21, (uint64_t)v24, v25);
    return sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMReverseGeocodingRequest);
  }
}

uint64_t sub_2119F1380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  id v28;
  int *v29;
  _BYTE v31[360];
  _QWORD v32[46];

  v6 = type metadata accessor for FMFLocation();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = &v31[-v13 - 8];
  v15 = *(_QWORD *)(a1 + 8);
  if (!v15
    || (v16 = *(_QWORD *)a1,
        sub_21192DD68(a1 + *(int *)(v12 + 44), (uint64_t)v31, &qword_254AC8CD0),
        sub_21192DD68((uint64_t)v31, (uint64_t)v32, &qword_254AC8CD0),
        sub_2119724C8((uint64_t)v32) == 1))
  {
    sub_211923EE8(a2, &qword_254AC9200);
    sub_211934758(a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v17 = type metadata accessor for FMReverseGeocodingRequest();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
  v19 = (void *)v32[38];
  v20 = *(unsigned __int8 *)(a1 + 33);
  sub_211942810(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  if (v20 == 2)
  {
    if ((v14[32] & 1) != 0)
    {
      sub_211942810((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      goto LABEL_11;
    }
    v23 = *((_QWORD *)v14 + 3);
    sub_211942810((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    if (v23 != 1)
    {
LABEL_11:
      v26 = *((_QWORD *)v10 + 3);
      v27 = v10[32];
      swift_bridgeObjectRetain();
      v28 = v19;
      sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v25 = (v27 & 1) != 0 || v26 != 2;
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    v24 = v19;
    v22 = (uint64_t)v10;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = v19;
    v22 = (uint64_t)v14;
  }
  sub_211934758(v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
  v25 = 0;
LABEL_14:
  *a3 = v16;
  a3[1] = v15;
  v29 = (int *)type metadata accessor for FMReverseGeocodingRequest();
  *((_BYTE *)a3 + v29[8]) = v25;
  *((_BYTE *)a3 + v29[7]) = v20 == 2;
  a3[2] = v19;
  sub_21192DD68(a2, (uint64_t)a3 + v29[6], &qword_254AC9200);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v29 - 1) + 56))(a3, 0, 1, v29);
}

uint64_t FMFReverseGeocodingCache.init(preferredLocale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21192C6B8(a1, (uint64_t)v5, &qword_254AC9200);
  v6 = sub_21192244C((uint64_t)v5);
  sub_211923EE8(a1, &qword_254AC9200);
  return v6;
}

uint64_t FMFReverseGeocodingCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_254ACC018;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211923EE8(v0 + qword_254ADC718, &qword_254AC9200);
  return v0;
}

uint64_t FMFReverseGeocodingCache.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_254ACC018;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211923EE8(v0 + qword_254ADC718, &qword_254AC9200);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FMFReverseGeocodingCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFReverseGeocodingCache.address(for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t sub_2119F17FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FMReverseGeocodingRequest();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();

  v3 = v0 + v2 + *(int *)(v1 + 24);
  v4 = sub_211A47274();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119F18D4()
{
  return sub_2119F1958((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_2119ED0E8);
}

unint64_t sub_2119F18E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254ACC340;
  if (!qword_254ACC340)
  {
    v1 = sub_211A4779C();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_254ACC340);
  }
  return result;
}

uint64_t sub_2119F192C()
{
  return sub_2119F1958((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_2119EFFB8);
}

uint64_t sub_2119F193C()
{
  return sub_2119F1958((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_2119F04D8);
}

uint64_t sub_2119F194C()
{
  return sub_2119F1958((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_2119F073C);
}

uint64_t sub_2119F1958(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *v4, v4[1]);
}

uint64_t sub_2119F19B0(uint64_t (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _BYTE v5[304];
  _BYTE v6[304];

  sub_21192DD68(a3, (uint64_t)v6, &qword_254ACCB40);
  result = sub_21192DD68((uint64_t)v6, (uint64_t)v5, &qword_254ACCB40);
  if (a1)
    return a1(v5);
  return result;
}

uint64_t sub_2119F1A14()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119F1AE8()
{
  uint64_t v0;

  return sub_2119F19B0(*(uint64_t (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

uint64_t sub_2119F1AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for FMReverseGeocodingRequest();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = v0 + v3;
  swift_bridgeObjectRelease();

  v6 = v5 + *(int *)(v1 + 24);
  v7 = sub_211A47274();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119F1BC8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_2119EED0C(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *v7, v7[1]);
}

uint64_t sub_2119F1C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for FMReverseGeocodingRequest();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  v5 = v0 + v3;
  swift_bridgeObjectRelease();

  v6 = v5 + *(int *)(v1 + 24);
  v7 = sub_211A47274();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_2119F1D20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMReverseGeocodingRequest() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2119EEF94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(void (**)(double *))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

void *sub_2119F1D74(uint64_t a1, const void *a2, void (*a3)(_BYTE *))
{
  void *result;
  double v6;
  _BYTE v7[304];
  _BYTE v8[304];
  _BYTE __dst[304];

  result = memcpy(__dst, a2, sizeof(__dst));
  if (a3)
  {
    memcpy(v8, a2, sizeof(v8));
    nullsub_1(v8, v6);
    sub_21192DD68((uint64_t)v8, (uint64_t)v7, &qword_254ACCB40);
    sub_21196FD88((uint64_t)__dst);
    a3(v7);
    return (void *)sub_21196FED0((uint64_t)__dst);
  }
  return result;
}

uint64_t sub_2119F1DFC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 328))
    swift_release();
  return swift_deallocObject();
}

void *sub_2119F1ED0()
{
  uint64_t v0;

  return sub_2119F1D74(*(_QWORD *)(v0 + 16), (const void *)(v0 + 24), *(void (**)(_BYTE *))(v0 + 328));
}

uint64_t type metadata accessor for FMFAddUpdateLabelRequest()
{
  uint64_t result;

  result = qword_254ACCD28;
  if (!qword_254ACCD28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119F1F44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFLabelledLocation();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2119F1FB8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v9;
  void *v10;
  id v11[3];
  id v12[3];
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  sub_211A46F74();
  swift_allocObject();
  sub_211A46F68();
  type metadata accessor for FMFLabelledLocation();
  sub_2119F22F8();
  v0 = sub_211A46F5C();
  v2 = v1;
  swift_release();
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_211A47160();
  v11[0] = 0;
  v5 = objc_msgSend(v3, sel_JSONObjectWithData_options_error_, v4, 0, v11);

  v6 = v11[0];
  if (v5)
  {
    sub_211A47E8C();
    swift_unknownObjectRelease();
    sub_21193DB98(v12, v14);
    sub_211950B6C((uint64_t)v14, (uint64_t)v12);
    v7 = sub_211958C38(&qword_254AC97B8);
    if (swift_dynamicCast())
    {
      v13 = v7;
      v12[0] = v11[0];
      swift_beginAccess();
      sub_21193C870((uint64_t)v12, 0xD000000000000010, 0x8000000211A566A0);
      swift_endAccess();
    }
    sub_21193B8F8(v0, v2);
    return sub_211931C34((uint64_t)v14);
  }
  else
  {
    v9 = v6;
    v10 = (void *)sub_211A470DC();

    swift_willThrow();
    return sub_21193B8F8(v0, v2);
  }
}

uint64_t sub_2119F2210()
{
  uint64_t v0;

  return sub_21196F5E4(v0 + qword_254ADC758);
}

uint64_t sub_2119F2220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21196F5E4(v0 + qword_254ADC758);
  return swift_deallocClassInstance();
}

uint64_t sub_2119F22F0()
{
  return type metadata accessor for FMFAddUpdateLabelRequest();
}

unint64_t sub_2119F22F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254AC8A48;
  if (!qword_254AC8A48)
  {
    v1 = type metadata accessor for FMFLabelledLocation();
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFLabelledLocation, v1);
    atomic_store(result, (unint64_t *)&qword_254AC8A48);
  }
  return result;
}

uint64_t type metadata accessor for FMFRespondToInviteRequest()
{
  uint64_t result;

  result = qword_254ACCD78;
  if (!qword_254ACCD78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119F237C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2119F23CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD v5[3];
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_254ADC770);
  v2 = *(_QWORD *)(v0 + qword_254ADC770 + 8);
  v6 = MEMORY[0x24BEE0D00];
  v5[0] = v1;
  v5[1] = v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v5, 25705, 0xE200000000000000);
  v3 = *(_BYTE *)(v0 + qword_254ADC778);
  v6 = MEMORY[0x24BEE1328];
  LOBYTE(v5[0]) = v3;
  sub_21193C870((uint64_t)v5, 0x6465747065636361, 0xE800000000000000);
  return swift_endAccess();
}

uint64_t sub_2119F2494()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F24A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2119F2570()
{
  sub_2119F24A8();
  return swift_deallocClassInstance();
}

uint64_t sub_2119F2590()
{
  return type metadata accessor for FMFRespondToInviteRequest();
}

uint64_t type metadata accessor for FMFAskToFollowRequest()
{
  uint64_t result;

  result = qword_254ACCDC8;
  if (!qword_254ACCDC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119F25D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2119F2620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_254ADC790);
  v2 = sub_211958C38(&qword_254AC8378);
  v6 = v2;
  v5[0] = v1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v5, 7562345, 0xE300000000000000);
  v3 = *(_QWORD *)(v0 + qword_254ADC798);
  v6 = v2;
  v5[0] = v3;
  swift_bridgeObjectRetain();
  sub_21193C870((uint64_t)v5, 0x736C69616D65, 0xE600000000000000);
  return swift_endAccess();
}

uint64_t sub_2119F26E8()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F2714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_211A47334();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_254ADC678;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2119F27E8()
{
  sub_2119F2714();
  return swift_deallocClassInstance();
}

uint64_t sub_2119F2808()
{
  return type metadata accessor for FMFAskToFollowRequest();
}

uint64_t FMReverseGeocodingRequest.geoHash.getter()
{
  return sub_2119F2CA4();
}

uint64_t FMReverseGeocodingRequest.debugDescription.getter()
{
  uint64_t v0;
  void *v1;

  sub_211A47F70();
  sub_211A479B8();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  v1 = *(void **)(v0 + 16);
  sub_2119F2CA4();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  objc_msgSend(v1, sel_coordinate);
  sub_211A47C28();
  sub_211A479B8();
  objc_msgSend(v1, sel_coordinate);
  sub_211A47C28();
  sub_211A479B8();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_211A47C28();
  sub_211A479B8();
  objc_msgSend(v1, sel_horizontalAccuracy);
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMReverseGeocodingRequest();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  objc_msgSend(v1, sel_referenceFrame);
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0;
}

uint64_t FMReverseGeocodingRequest.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id FMReverseGeocodingRequest.location.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t FMReverseGeocodingRequest.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 24);
  return sub_211964AFC(v3, a1);
}

uint64_t FMReverseGeocodingRequest.isRealtimeLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 28));
}

uint64_t FMReverseGeocodingRequest.isCoarseLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FMReverseGeocodingRequest() + 32));
}

uint64_t sub_2119F2CA4()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  objc_msgSend(v0, sel_coordinate);
  v2 = round(v1 * 10000.0) / 10000.0;
  objc_msgSend(v0, sel_coordinate);
  v4 = round(v3 * 10000.0) / 10000.0;
  sub_211958C38(&qword_254ACC560);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_211A4D750;
  v6 = MEMORY[0x24BEE13C8];
  v7 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v5 + 64) = v7;
  *(double *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(double *)(v5 + 72) = v4;
  v8 = objc_msgSend(v0, sel_referenceFrame);
  v9 = MEMORY[0x24BEE4558];
  *(_QWORD *)(v5 + 136) = MEMORY[0x24BEE44F0];
  *(_QWORD *)(v5 + 144) = v9;
  *(_DWORD *)(v5 + 112) = v8;
  objc_msgSend(v0, sel_horizontalAccuracy);
  if (v10 >= 5.0)
  {
    if (v10 >= 10.0)
    {
      if (v10 >= 25.0)
      {
        v11 = 50;
        v12 = 100;
        v13 = 1000;
        if (v10 < 250.0)
          v13 = 250;
        if (v10 >= 100.0)
          v12 = v13;
        if (v10 >= 50.0)
          v11 = v12;
      }
      else
      {
        v11 = 25;
      }
    }
    else
    {
      v11 = 10;
    }
  }
  else
  {
    v11 = 5;
  }
  v14 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v5 + 176) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v5 + 184) = v14;
  *(_QWORD *)(v5 + 152) = v11;
  return sub_211A4791C();
}

uint64_t type metadata accessor for FMReverseGeocodingRequest()
{
  uint64_t result;

  result = qword_254ACCE88;
  if (!qword_254ACCE88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FMReverseGeocodingRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_211A47274();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  v11 = *(id *)(v0 + 16);
  sub_211A47DF0();

  v12 = type metadata accessor for FMReverseGeocodingRequest();
  sub_211964AFC(v1 + *(int *)(v12 + 24), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_211A48330();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    sub_211A48330();
    sub_211910908(&qword_254ACCE18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
    sub_211A478B0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  sub_211A48330();
  return sub_211A48330();
}

uint64_t FMReverseGeocodingRequest.hashValue.getter()
{
  sub_211A48318();
  FMReverseGeocodingRequest.hash(into:)();
  return sub_211A48348();
}

uint64_t sub_2119F3064()
{
  sub_211A48318();
  FMReverseGeocodingRequest.hash(into:)();
  return sub_211A48348();
}

uint64_t sub_2119F30A4()
{
  sub_211A48318();
  FMReverseGeocodingRequest.hash(into:)();
  return sub_211A48348();
}

uint64_t sub_2119F30E4()
{
  sub_211A48318();
  sub_211A4833C();
  return sub_211A48348();
}

uint64_t sub_2119F3128()
{
  return sub_211A4833C();
}

uint64_t sub_2119F3150()
{
  sub_211A48318();
  sub_211A4833C();
  return sub_211A48348();
}

uint64_t _s7FMFCore25FMReverseGeocodingRequestV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  _BYTE *v30;
  void (*v31)(_BYTE *, uint64_t);
  _BYTE v33[12];
  int v34;
  uint64_t v35;
  _BYTE *v36;

  v4 = sub_211A47274();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_211958C38(&qword_254ACCED0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_211958C38(&qword_254AC9200);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = &v33[-v19];
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = &v33[-v23];
  if (*a1 == *a2 && a1[1] == a2[1] || (v25 = sub_211A48258(), v26 = 0, (v25 & 1) != 0))
  {
    v36 = v8;
    sub_21196FD4C();
    if ((sub_211A47DE4() & 1) != 0)
    {
      v27 = type metadata accessor for FMReverseGeocodingRequest();
      sub_211964AFC((uint64_t)a1 + *(int *)(v27 + 24), (uint64_t)v24);
      v35 = v27;
      sub_211964AFC((uint64_t)a2 + *(int *)(v27 + 24), (uint64_t)v20);
      v28 = (uint64_t)&v12[*(int *)(v9 + 48)];
      sub_211964AFC((uint64_t)v24, (uint64_t)v12);
      sub_211964AFC((uint64_t)v20, v28);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v29((uint64_t)v12, 1, v4) == 1)
      {
        sub_211923EE8((uint64_t)v20, &qword_254AC9200);
        sub_211923EE8((uint64_t)v24, &qword_254AC9200);
        if (v29(v28, 1, v4) == 1)
        {
          sub_211923EE8((uint64_t)v12, &qword_254AC9200);
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      sub_211964AFC((uint64_t)v12, (uint64_t)v16);
      if (v29(v28, 1, v4) == 1)
      {
        sub_211923EE8((uint64_t)v20, &qword_254AC9200);
        sub_211923EE8((uint64_t)v24, &qword_254AC9200);
        (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v16, v4);
LABEL_10:
        sub_211923EE8((uint64_t)v12, &qword_254ACCED0);
        goto LABEL_13;
      }
      v30 = v36;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v36, v28, v4);
      sub_211910908(&qword_254ACCED8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE0]);
      v34 = sub_211A478E0();
      v31 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
      v31(v30, v4);
      sub_211923EE8((uint64_t)v20, &qword_254AC9200);
      sub_211923EE8((uint64_t)v24, &qword_254AC9200);
      v31(v16, v4);
      sub_211923EE8((uint64_t)v12, &qword_254AC9200);
      if ((v34 & 1) != 0)
      {
LABEL_12:
        if (*((unsigned __int8 *)a1 + *(int *)(v35 + 28)) == *((unsigned __int8 *)a2 + *(int *)(v35 + 28)))
        {
          v26 = *((_BYTE *)a1 + *(int *)(v35 + 32)) ^ *((_BYTE *)a2 + *(int *)(v35 + 32)) ^ 1;
          return v26 & 1;
        }
      }
    }
LABEL_13:
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_2119F3504()
{
  return sub_211910908(&qword_254ACCE20, (uint64_t (*)(uint64_t))type metadata accessor for FMReverseGeocodingRequest, (uint64_t)&protocol conformance descriptor for FMReverseGeocodingRequest);
}

uint64_t sub_2119F3530()
{
  return sub_211910908(&qword_254ACCE28, (uint64_t (*)(uint64_t))type metadata accessor for CLClientLocationReferenceFrame, (uint64_t)&protocol conformance descriptor for CLClientLocationReferenceFrame);
}

_QWORD *initializeBufferWithCopyOfBuffer for FMReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    a1[2] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_211A47274();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v8;
    if (v14(v11, 1, v12))
    {
      v16 = sub_211958C38(&qword_254AC9200);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v18 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v18) = *((_BYTE *)a2 + v18);
  }
  return v4;
}

uint64_t destroy for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_211A47274();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FMReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_211A47274();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    v15 = sub_211958C38(&qword_254AC9200);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  return a1;
}

_QWORD *assignWithCopy for FMReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_211A47274();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_211958C38(&qword_254AC9200);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for FMReverseGeocodingRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_211A47274();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_211958C38(&qword_254AC9200);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

_QWORD *assignWithTake for FMReverseGeocodingRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_211A47274();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_211958C38(&qword_254AC9200);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMReverseGeocodingRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2119F3B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_211958C38(&qword_254AC9200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FMReverseGeocodingRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2119F3C24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_211958C38(&qword_254AC9200);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_2119F3C9C()
{
  unint64_t v0;

  sub_21191170C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

BOOL sub_2119F3D28(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_2119F3D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  unint64_t i;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v4 = *(_QWORD *)(a1 + 16);
  result = swift_bridgeObjectRetain();
  v31 = v4;
  if (v4)
  {
    v6 = 0;
    v29 = a1 + 32;
    v7 = a2 + 56;
    v28 = MEMORY[0x24BEE4AF8];
    v30 = a1;
    while (1)
    {
      v8 = v6;
      while (1)
      {
        if (v8 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return result;
        }
        v6 = v8 + 1;
        if (*(_QWORD *)(a2 + 16))
          break;
LABEL_5:
        v8 = v6;
        if (v6 == v31)
          goto LABEL_29;
      }
      v9 = (uint64_t *)(v29 + 16 * v8);
      v11 = *v9;
      v10 = v9[1];
      sub_211A48318();
      swift_bridgeObjectRetain();
      sub_211A4797C();
      v12 = sub_211A48348();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_4;
      v15 = *(_QWORD *)(a2 + 48);
      v16 = (_QWORD *)(v15 + 16 * v14);
      v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_211A48258() & 1) == 0)
        break;
LABEL_22:
      result = swift_isUniquelyReferenced_nonNull_native();
      v23 = v28;
      if ((result & 1) == 0)
      {
        result = sub_211948C10(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v23 = v28;
      }
      a1 = v30;
      v24 = v23;
      v26 = *(_QWORD *)(v23 + 16);
      v25 = *(_QWORD *)(v23 + 24);
      if (v26 >= v25 >> 1)
      {
        result = sub_211948C10(v25 > 1, v26 + 1, 1);
        v24 = v28;
      }
      *(_QWORD *)(v24 + 16) = v26 + 1;
      v28 = v24;
      v27 = v24 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v11;
      *(_QWORD *)(v27 + 40) = v10;
      if (v6 == v31)
        goto LABEL_29;
    }
    v18 = ~v13;
    for (i = v14 + 1; ; i = v20 + 1)
    {
      v20 = i & v18;
      if (((*(_QWORD *)(v7 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0)
        break;
      v21 = (_QWORD *)(v15 + 16 * v20);
      v22 = *v21 == v11 && v21[1] == v10;
      if (v22 || (sub_211A48258() & 1) != 0)
        goto LABEL_22;
    }
LABEL_4:
    result = swift_bridgeObjectRelease();
    a1 = v30;
    goto LABEL_5;
  }
  v28 = MEMORY[0x24BEE4AF8];
LABEL_29:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_2119F3FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a2;
  *(_QWORD *)(swift_allocObject() + 16) = a2;
  v4 = *(_QWORD *)(a1 + 16);
  result = swift_bridgeObjectRetain();
  v26 = v4;
  if (v4)
  {
    v6 = 0;
    v23 = (_QWORD *)(v2 + 56);
    v24 = a1 + 32;
    v7 = MEMORY[0x24BEE4AF8];
    v25 = a1;
    while (1)
    {
      if (v6 >= *(_QWORD *)(a1 + 16))
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v9 = v6++;
      v10 = v2;
      v11 = *(_QWORD *)(v2 + 16);
      if (v11)
      {
        v12 = (uint64_t *)(v24 + 16 * v9);
        v13 = *v12;
        v14 = v12[1];
        v15 = *(_QWORD *)(v10 + 32) == *v12 && *(_QWORD *)(v10 + 40) == v14;
        if (v15 || (result = sub_211A48258(), (result & 1) != 0))
        {
LABEL_22:
          swift_bridgeObjectRetain();
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
            result = sub_211948C10(0, *(_QWORD *)(v7 + 16) + 1, 1);
          a1 = v25;
          v21 = *(_QWORD *)(v7 + 16);
          v20 = *(_QWORD *)(v7 + 24);
          if (v21 >= v20 >> 1)
            result = sub_211948C10(v20 > 1, v21 + 1, 1);
          *(_QWORD *)(v7 + 16) = v21 + 1;
          v22 = v7 + 16 * v21;
          *(_QWORD *)(v22 + 32) = v13;
          *(_QWORD *)(v22 + 40) = v14;
          v8 = v26;
          goto LABEL_4;
        }
        if (v11 != 1)
        {
          v16 = v23;
          v17 = 1;
          while (1)
          {
            v18 = v17 + 1;
            if (__OFADD__(v17, 1))
              break;
            if (*(v16 - 1) == v13 && *v16 == v14)
              goto LABEL_22;
            result = sub_211A48258();
            if ((result & 1) != 0)
              goto LABEL_22;
            v16 += 2;
            ++v17;
            if (v18 == v11)
              goto LABEL_3;
          }
          __break(1u);
          goto LABEL_30;
        }
      }
LABEL_3:
      a1 = v25;
      v8 = v26;
LABEL_4:
      v2 = v10;
      if (v6 == v8)
        goto LABEL_28;
    }
  }
  v7 = MEMORY[0x24BEE4AF8];
LABEL_28:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t (*sub_2119F419C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2119F41D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t __dst[58];

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    __dst[0] = v19;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v1 + 16);
    v7 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, __dst);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFDataManager<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v19, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_211962AB8(v1 + 32);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  memcpy(__dst, (const void *)(v1 + 248), 0x1C8uLL);
  sub_2119B1B98(__dst);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21195A23C(*(_QWORD *)(v1 + 744), *(_QWORD *)(v1 + 752), *(_QWORD *)(v1 + 760));
  sub_211933F60(*(_QWORD *)(v1 + 1032));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2119F4534()
{
  sub_2119F41D8();
  return swift_deallocClassInstance();
}

uint64_t sub_2119F4554@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 784);
  *(_QWORD *)a2 = *(_QWORD *)(result + 776);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2119F456C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[240];

  sub_21192DD68(a1 + 792, (uint64_t)v4, (uint64_t *)&unk_254ACC2F0);
  return sub_21192DD68((uint64_t)v4, a2, (uint64_t *)&unk_254ACC2F0);
}

uint64_t sub_2119F45C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = v4;
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v3 + 88);
  v8 = *(_QWORD *)(v3 + 96);
  v9 = *(_QWORD *)(v3 + 104);
  v10 = *(_QWORD *)(v3 + 112);
  v11 = *(_QWORD *)(v3 + 120);
  v12 = *(_BYTE *)(v3 + 128);
  if (!v4)
  {
    v14 = *(_QWORD *)(a1 + 1032);
    v6 = *(_QWORD *)(a1 + 1040);
    v7 = *(_QWORD *)(a1 + 1048);
    v8 = *(_QWORD *)(a1 + 1056);
    v9 = *(_QWORD *)(a1 + 1064);
    v10 = *(_QWORD *)(a1 + 1072);
    v11 = *(_QWORD *)(a1 + 1080);
    v12 = *(_BYTE *)(a1 + 1088);
    sub_211933F10(v14);
    v5 = v14;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v11;
  *(_BYTE *)(a2 + 56) = v12;
  return sub_211933F10(v4);
}

uint64_t sub_2119F46D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 1096);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119F46EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 1104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119F4708@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 1112);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2119F4724@<X0>(size_t *a1@<X8>)
{
  uint64_t v2;
  size_t v3;
  uint64_t result;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_21192EEB4(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_2119F4790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v4 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFFriend();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v24 - v15;
  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  v17 = *(_QWORD *)(v26 + 16);
  if (v17)
  {
    v24 = v8;
    v25 = v16;
    v18 = v26 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v19 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_211934794(v18, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v20 = *v13 == a1 && v13[1] == a2;
      if (v20 || (sub_211A48258() & 1) != 0)
        break;
      sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v18 += v19;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        v21 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_211942810((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v21 = 0;
LABEL_11:
    v8 = v24;
    v16 = v25;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_211923EE8((uint64_t)v7, &qword_254AC8870);
    return 0;
  }
  else
  {
    sub_211942810((uint64_t)v7, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v22 = *((_QWORD *)v16 + 5);
    swift_bridgeObjectRetain();
    sub_211934758((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  }
  return v22;
}

_QWORD *sub_2119F49D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v24[3];
  uint64_t v25;

  v2 = type metadata accessor for FMFFriend();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (_QWORD *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  v7 = v25;
  v8 = *(_QWORD *)(v25 + 16);
  if (v8)
  {
    v24[1] = a1;
    v25 = MEMORY[0x24BEE4AF8];
    sub_211948C10(0, v8, 0);
    v9 = *(unsigned __int8 *)(v3 + 80);
    v24[0] = v7;
    v10 = v7 + ((v9 + 32) & ~v9);
    v11 = *(_QWORD *)(v3 + 72);
    v12 = v25;
    do
    {
      sub_211934794(v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v13 = *v6;
      v14 = v6[1];
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211948C10(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v25;
      }
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_211948C10(v15 > 1, v16 + 1, 1);
        v12 = v25;
      }
      *(_QWORD *)(v12 + 16) = v16 + 1;
      v17 = v12 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v14;
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
  }
  v18 = sub_2119591D0(v12);
  swift_bridgeObjectRelease();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_2119591D0(v19);
  swift_bridgeObjectRelease();
  v21 = sub_211A18CE8(v18, v20);
  swift_bridgeObjectRelease();
  v22 = sub_21194FDA0(v21);
  swift_release();
  return v22;
}

BOOL sub_2119F4BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFFriend();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (uint64_t *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15, v18);
  v32 = (uint64_t)&v29 - v19;
  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  v20 = *(_QWORD *)(v33 + 16);
  if (v20)
  {
    v30 = v12;
    v31 = v7;
    v21 = v33 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v22 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_211934794(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v23 = *v17 == a1 && v17[1] == a2;
      if (v23 || (sub_211A48258() & 1) != 0)
        break;
      sub_211934758((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v21 += v22;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        v24 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_211942810((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v24 = 0;
LABEL_11:
    v12 = v30;
    v7 = v31;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v24, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_211923EE8((uint64_t)v11, &qword_254AC8870);
    return 0;
  }
  else
  {
    v26 = v32;
    sub_211942810((uint64_t)v11, v32, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    sub_21192C6B8(v26 + *(int *)(v12 + 80), (uint64_t)v7, (uint64_t *)&unk_254AC8CB0);
    sub_211934758(v26, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v27 = type metadata accessor for FMFLocation();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v7, 1, v27) == 1)
    {
      sub_211923EE8((uint64_t)v7, (uint64_t *)&unk_254AC8CB0);
      return 1;
    }
    else
    {
      v28 = v7[33];
      sub_211934758((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      return v28 != 3;
    }
  }
}

void sub_2119F4ED0(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  v7 = sub_21196145C(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 120) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 96) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

void sub_2119F4F6C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  v7 = sub_21196145C(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 120) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 104) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

void sub_2119F5008(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  v7 = sub_21196145C(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    *(_QWORD *)(a2 + 120) = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 112) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

void sub_2119F50A4(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = a2[25];
  swift_bridgeObjectRetain();
  v7 = sub_2119131B8(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    a2[29] = 0;
    swift_bridgeObjectRelease();
    a2[15] = 0;
    swift_bridgeObjectRelease();
    a2[25] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

void sub_2119F514C(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  v6 = a2[26];
  swift_bridgeObjectRetain();
  v7 = sub_2119131B8(a1, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    a2[29] = 0;
    swift_bridgeObjectRelease();
    a2[15] = 0;
    swift_bridgeObjectRelease();
    a2[26] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_211933924();
    v8 = 1;
  }
  *a3 = v8;
}

uint64_t sub_2119F51F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  sub_211958C38(&qword_254ACABB8);
  sub_211A47DA8();
  v2 = v12;
  v12 = 91;
  v13 = 0xE100000000000000;
  v11 = 1;
  if (a1 && (v3 = *(_QWORD *)(a1 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9 = *(v4 - 1);
      v10 = v5;
      swift_bridgeObjectRetain();
      sub_2119F5310(&v9, v2, (uint64_t)&v12, &v11);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v12;
    v7 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = 0xE100000000000000;
    v6 = 91;
  }
  v9 = v6;
  v10 = v7;
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2119F5310(uint64_t *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE *v46;

  v9 = type metadata accessor for FMFFriend();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (_QWORD *)((char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)v41 - v16;
  result = MEMORY[0x24BDAC7A8](v15, v18);
  v22 = a1[1];
  if (v22)
  {
    v43 = a3;
    v46 = a4;
    v23 = *a1;
    v24 = *(_QWORD *)(a2 + 16);
    if (v24)
    {
      v41[0] = result;
      v41[1] = v4;
      v42 = (uint64_t)v41 - v21;
      v25 = a2 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
      v26 = *(_QWORD *)(v20 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_211934794(v25, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v27 = v23 == *v13 && v22 == v13[1];
        if (v27 || (sub_211A48258() & 1) != 0)
          break;
        sub_211934758((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v25 += v26;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      sub_211942810((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v28 = v42;
      sub_211942810((uint64_t)v17, v42, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v29 = v41[0];
      v30 = v46;
      if (*v46)
        v31 = 0;
      else
        v31 = 8236;
      if (*v46)
        v32 = 0xE000000000000000;
      else
        v32 = 0xE200000000000000;
      v44 = v23;
      v45 = v22;
      sub_211A47A3C();
      v44 = v31;
      v45 = v32;
      swift_bridgeObjectRetain();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      v33 = v44;
      v34 = v45;
      v35 = (_QWORD *)(v28 + *(int *)(v29 + 76));
      if (v35[1])
      {
        v37 = v35[5];
        v36 = v35[6];
        v38 = HIBYTE(v36) & 0xF;
        if ((v36 & 0x2000000000000000) == 0)
          v38 = v37 & 0xFFFFFFFFFFFFLL;
        if (v38)
          swift_bridgeObjectRetain();
      }
      v44 = v33;
      v45 = v34;
      swift_bridgeObjectRetain();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      result = sub_211934758(v42, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_23:
      v30 = v46;
      if (*v46)
        v39 = 0;
      else
        v39 = 8236;
      if (*v46)
        v40 = 0xE000000000000000;
      else
        v40 = 0xE200000000000000;
      v44 = v23;
      v45 = v22;
      sub_211A47A3C();
      v44 = v39;
      v45 = v40;
      swift_bridgeObjectRetain();
      sub_211A479B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211A479B8();
      result = swift_bridgeObjectRelease();
    }
    *v30 = 0;
  }
  return result;
}

uint64_t sub_2119F56E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v21[6];

  v7 = type metadata accessor for FMFLocation();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
  v13(a3, 1, 1, v7, v10);
  result = swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 176);
  if (v15)
  {
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v21[0] = v13;
      v21[5] = v3;
      v17 = v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v18 = *(_QWORD *)(v8 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_211934794(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v19 = v12[1];
        if (v19)
        {
          v20 = *v12 == *a2 && v19 == a2[1];
          if (v20 || (sub_211A48258() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            sub_211923EE8(a3, (uint64_t *)&unk_254AC8CB0);
            sub_211942810((uint64_t)v12, a3, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v21[0])(a3, 0, 1, v7);
          }
        }
        sub_211934758((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v17 += v18;
        --v16;
      }
      while (v16);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2119F587C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)(v3 + 56);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v3;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = sub_2119FC0F4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCC760;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

uint64_t sub_2119F5A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t *v17;
  uint64_t (*v18)();
  unint64_t *v19;
  uint64_t v20;
  int64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[7];

  v6 = sub_211A4779C();
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_211A477D8();
  v10 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v14 = sub_2119FC2A8((unint64_t *)(a1 + 160), a2, a3);
  result = swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 160) + 16);
  if (v16 < v14)
  {
    __break(1u);
  }
  else
  {
    sub_2119FC100(v14, v16);
    swift_endAccess();
    v18 = sub_2119F419C();
    if (!*v17)
    {
LABEL_5:
      ((void (*)(_QWORD *, _QWORD))v18)(aBlock, 0);
      aBlock[4] = sub_2119FB380;
      aBlock[5] = a1;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21192382C;
      aBlock[3] = &unk_24CCCC788;
      v22 = _Block_copy(aBlock);
      swift_retain();
      sub_211A477B4();
      v25 = MEMORY[0x24BEE4AF8];
      sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_211958C38((uint64_t *)&unk_254ACC1D0);
      sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
      sub_211A47EA4();
      MEMORY[0x212BE3BC8](0, v13, v9, v22);
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v23);
      return swift_release();
    }
    v19 = v17;
    swift_bridgeObjectRetain();
    v20 = sub_2119FC2A8(v19, a2, a3);
    result = swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(*v19 + 16);
    if (v21 >= v20)
    {
      sub_2119FC100(v20, v21);
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2119F5D24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  char v60;
  char v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  void *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD aBlock[6];
  _QWORD *v83;

  v7 = sub_211A4779C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v77 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2[17];
  swift_bridgeObjectRetain();
  v15 = sub_21193F3F0(a1, v14);
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    *a3 = 0;
    return result;
  }
  v72 = v7;
  v73 = a3;
  v74 = v3;
  a2[15] = 0;
  swift_bridgeObjectRelease();
  a2[21] = 0;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a1 + 16);
  v75 = a2;
  v76 = v8;
  if (v17)
  {
    swift_bridgeObjectRetain();
    v71 = a1;
    v18 = (_BYTE *)(a1 + 48);
    v19 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v23 = *((_QWORD *)v18 - 2);
      v22 = *((_QWORD *)v18 - 1);
      v24 = *v18;
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v19;
      v27 = sub_21195BB68(v23, v22);
      v28 = v19[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        result = sub_211A48294();
        __break(1u);
        return result;
      }
      v31 = v26;
      if (v19[3] >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v19 = (_QWORD *)aBlock[0];
          if ((v26 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_211A45904();
          v19 = (_QWORD *)aBlock[0];
          if ((v31 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_21193F3A4(v30, isUniquelyReferenced_nonNull_native);
        v32 = sub_21195BB68(v23, v22);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_44;
        v27 = v32;
        v19 = (_QWORD *)aBlock[0];
        if ((v31 & 1) == 0)
        {
LABEL_14:
          v19[(v27 >> 6) + 8] |= 1 << v27;
          v34 = (uint64_t *)(v19[6] + 16 * v27);
          *v34 = v23;
          v34[1] = v22;
          v35 = v19[7] + 24 * v27;
          *(_QWORD *)v35 = v23;
          *(_QWORD *)(v35 + 8) = v22;
          *(_BYTE *)(v35 + 16) = v24;
          v36 = v19[2];
          v37 = __OFADD__(v36, 1);
          v38 = v36 + 1;
          if (v37)
            goto LABEL_43;
          v19[2] = v38;
          swift_bridgeObjectRetain();
          goto LABEL_6;
        }
      }
      v20 = v19;
      v21 = v19[7] + 24 * v27;
      swift_bridgeObjectRelease();
      *(_QWORD *)v21 = v23;
      *(_QWORD *)(v21 + 8) = v22;
      *(_BYTE *)(v21 + 16) = v24;
      v19 = v20;
LABEL_6:
      v18 += 24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        v39 = v75;
        v8 = v76;
        goto LABEL_20;
      }
    }
  }
  v39 = a2;
  v19 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_20:
  v40 = MEMORY[0x24BEE4AF8];
  v83 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v41 = *(_QWORD *)(v39[17] + 16);
  if (!v41)
    goto LABEL_41;
  v71 = swift_bridgeObjectRetain();
  v42 = (_BYTE *)(v71 + 48);
  v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v45 = *((_QWORD *)v42 - 2);
    v44 = *((_QWORD *)v42 - 1);
    v46 = *v42;
    v47 = v19[2];
    swift_bridgeObjectRetain();
    if (v47)
    {
      swift_bridgeObjectRetain();
      v48 = sub_21195BB68(v45, v44);
      if ((v49 & 1) != 0)
      {
        v50 = v19;
        v51 = v19[7] + 24 * v48;
        v52 = *(_QWORD *)v51;
        v53 = *(_QWORD *)(v51 + 8);
        v54 = *(_BYTE *)(v51 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v43 = sub_21193F3B0(0, v43[2] + 1, 1, v43);
        v56 = v43[2];
        v55 = v43[3];
        if (v56 >= v55 >> 1)
          v43 = sub_21193F3B0((_QWORD *)(v55 > 1), v56 + 1, 1, v43);
        v43[2] = v56 + 1;
        v57 = &v43[3 * v56];
        v57[4] = v52;
        v57[5] = v53;
        *((_BYTE *)v57 + 48) = v54;
        v83 = v43;
        v58 = v50;
        swift_bridgeObjectRetain();
        v59 = sub_21195BB68(v52, v53);
        v61 = v60;
        swift_bridgeObjectRelease();
        if ((v61 & 1) != 0)
        {
          v62 = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v50;
          if ((v62 & 1) == 0)
          {
            sub_211A45904();
            v58 = (_QWORD *)aBlock[0];
          }
          swift_bridgeObjectRelease();
          v50 = v58;
          sub_21193F3A0(v59, v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
    }
    v50 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v43 = sub_21193F3B0(0, v43[2] + 1, 1, v43);
    v64 = v43[2];
    v63 = v43[3];
    if (v64 >= v63 >> 1)
      v43 = sub_21193F3B0((_QWORD *)(v63 > 1), v64 + 1, 1, v43);
    v43[2] = v64 + 1;
    v65 = &v43[3 * v64];
    v65[4] = v45;
    v65[5] = v44;
    *((_BYTE *)v65 + 48) = v46;
    v83 = v43;
LABEL_23:
    v42 += 24;
    --v41;
    v19 = v50;
  }
  while (v41);
  swift_bridgeObjectRelease();
  v39 = v75;
  v8 = v76;
  v40 = MEMORY[0x24BEE4AF8];
LABEL_41:
  swift_bridgeObjectRetain();
  sub_21193F650((uint64_t)v19);
  v39[17] = v83;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2119FB358;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBF68;
  v66 = _Block_copy(aBlock);
  swift_retain();
  v67 = v77;
  sub_211A477B4();
  v81 = v40;
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v68 = v80;
  v69 = v72;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v67, v68, v66);
  _Block_release(v66);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v68, v69);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v67, v79);
  swift_release();
  *v73 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F6390@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  unint64_t v62;
  char v63;
  char v64;
  char v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD aBlock[6];
  _QWORD *v91;

  v6 = sub_211A4779C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a2[19];
  v88 = a1;
  result = sub_2119B1A3C(a1, v16);
  if ((result & 1) != 0)
  {
    *a3 = 0;
    return result;
  }
  v82 = v11;
  v83 = v10;
  v84 = v7;
  a2[15] = 0;
  swift_bridgeObjectRelease();
  v87 = a2;
  a2[21] = 0;
  swift_bridgeObjectRelease();
  if (qword_254AC7B80 != -1)
    goto LABEL_50;
  while (1)
  {
    v18 = sub_211A47748();
    v19 = sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
    v20 = v88;
    swift_bridgeObjectRetain();
    v79 = v19;
    v21 = sub_211A47724();
    v22 = sub_211A47D30();
    v23 = os_log_type_enabled(v21, v22);
    v85 = v6;
    v86 = a3;
    v80 = v15;
    v81 = isUniquelyReferenced_nonNull_native;
    if (v23)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v25 = sub_211A47A90();
      aBlock[0] = v25;
      sub_211A47E2C();
      *(_QWORD *)v6 = v25;
      v20 = v88;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v21, v22, "FMFDataManager: fallbackToLegacy (in) %@", v24, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v6, -1, -1);
      MEMORY[0x212BE48A0](v24, -1, -1);

      v15 = *(char **)(v20 + 16);
      if (!v15)
        break;
      goto LABEL_6;
    }

    swift_bridgeObjectRelease();
    v15 = *(char **)(v20 + 16);
    if (!v15)
      break;
LABEL_6:
    swift_bridgeObjectRetain();
    a3 = (_BYTE *)(v20 + 48);
    v26 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v29 = *((_QWORD *)a3 - 2);
      v28 = *((_QWORD *)a3 - 1);
      v30 = *a3;
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v26;
      v32 = sub_21195BB68(v29, v28);
      v33 = v26[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        break;
      v6 = v31;
      if (v26[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v26 = (_QWORD *)aBlock[0];
          if ((v31 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_211A45AD0();
          v26 = (_QWORD *)aBlock[0];
          if ((v6 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_211A41E8C(v35, isUniquelyReferenced_nonNull_native);
        v36 = sub_21195BB68(v29, v28);
        if ((v6 & 1) != (v37 & 1))
        {
          result = sub_211A48294();
          __break(1u);
          return result;
        }
        v32 = v36;
        v26 = (_QWORD *)aBlock[0];
        if ((v6 & 1) != 0)
        {
LABEL_7:
          v6 = (uint64_t)v26;
          v27 = v26[7] + 24 * v32;
          swift_bridgeObjectRelease();
          *(_QWORD *)v27 = v29;
          *(_QWORD *)(v27 + 8) = v28;
          *(_BYTE *)(v27 + 16) = v30;
          v26 = (_QWORD *)v6;
          goto LABEL_8;
        }
      }
      v26[(v32 >> 6) + 8] |= 1 << v32;
      v38 = (uint64_t *)(v26[6] + 16 * v32);
      *v38 = v29;
      v38[1] = v28;
      v39 = v26[7] + 24 * v32;
      *(_QWORD *)v39 = v29;
      *(_QWORD *)(v39 + 8) = v28;
      *(_BYTE *)(v39 + 16) = v30;
      v40 = v26[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_49;
      v26[2] = v42;
      swift_bridgeObjectRetain();
LABEL_8:
      a3 += 24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_once();
  }
  v26 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_23:
  v91 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v43 = v87;
  v44 = *(_QWORD *)(v87[19] + 16);
  if (!v44)
    goto LABEL_44;
  v88 = swift_bridgeObjectRetain();
  v45 = (_BYTE *)(v88 + 48);
  while (2)
  {
    v46 = *((_QWORD *)v45 - 2);
    v47 = *((_QWORD *)v45 - 1);
    v48 = *v45;
    v49 = v26[2];
    swift_bridgeObjectRetain();
    if (v49)
    {
      swift_bridgeObjectRetain();
      v50 = sub_21195BB68(v46, v47);
      if ((v51 & 1) != 0)
      {
        v52 = v26;
        v53 = v26[7] + 24 * v50;
        v55 = *(_QWORD *)v53;
        v54 = *(_QWORD *)(v53 + 8);
        v56 = *(_BYTE *)(v53 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        v57 = v91;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v57 = sub_2119B0AB0(0, v57[2] + 1, 1, v57);
        v59 = v57[2];
        v58 = v57[3];
        if (v59 >= v58 >> 1)
          v57 = sub_2119B0AB0((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
        v57[2] = v59 + 1;
        v60 = &v57[3 * v59];
        v60[4] = v55;
        v60[5] = v54;
        *((_BYTE *)v60 + 48) = v56;
        v91 = v57;
        v61 = v52;
        swift_bridgeObjectRetain();
        v62 = sub_21195BB68(v55, v54);
        v64 = v63;
        swift_bridgeObjectRelease();
        if ((v64 & 1) != 0)
        {
          v65 = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v52;
          if ((v65 & 1) == 0)
          {
            sub_211A45AD0();
            v61 = (_QWORD *)aBlock[0];
          }
          swift_bridgeObjectRelease();
          v52 = v61;
          sub_21193F3A0(v62, v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    v52 = v26;
    v66 = v91;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v66 = sub_2119B0AB0(0, v66[2] + 1, 1, v66);
    v68 = v66[2];
    v67 = v66[3];
    if (v68 >= v67 >> 1)
      v66 = sub_2119B0AB0((_QWORD *)(v67 > 1), v68 + 1, 1, v66);
    v66[2] = v68 + 1;
    v69 = &v66[3 * v68];
    v69[4] = v46;
    v69[5] = v47;
    *((_BYTE *)v69 + 48) = v48;
    v91 = v66;
LABEL_26:
    v45 += 24;
    --v44;
    v26 = v52;
    if (v44)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v43 = v87;
LABEL_44:
  v88 = swift_bridgeObjectRetain();
  sub_211972998(v88);
  v43[19] = v91;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v70 = sub_211A47724();
  v71 = sub_211A47D30();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    v73 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v72 = 138412290;
    v74 = sub_211A47A90();
    aBlock[0] = v74;
    sub_211A47E2C();
    *v73 = v74;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v70, v71, "FMFDataManager: fallbackToLegacy (out) %@", v72, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v73, -1, -1);
    MEMORY[0x212BE48A0](v72, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v75 = v85;
  aBlock[4] = sub_2119FB380;
  aBlock[5] = v87;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBFE0;
  v76 = _Block_copy(aBlock);
  swift_retain();
  v77 = v80;
  sub_211A477B4();
  v89 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v78 = v83;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v77, v78, v76);
  _Block_release(v76);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v78, v75);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v77, v82);
  swift_release();
  *v86 = 1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F6C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1 + 32;
  if (MEMORY[0x212BE496C](a1 + 32))
  {
    v3 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    sub_211958C38(&qword_254AC83D8);
    sub_211A47DA8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v8, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  result = MEMORY[0x212BE496C](v2);
  if (result)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = swift_getObjectType();
    sub_211958C38(&qword_254ACABB8);
    sub_211A47DA8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, v7, v6);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2119F6D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "FMFDataManager: reset falling back to legacy states", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  v8 = *(_QWORD *)(v1 + 152);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2119B0AB0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v11 = (uint64_t *)(v8 + 40);
    do
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      v15 = v10[2];
      v14 = v10[3];
      swift_bridgeObjectRetain();
      if (v15 >= v14 >> 1)
        v10 = sub_2119B0AB0((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
      v11 += 3;
      v10[2] = v15 + 1;
      v16 = &v10[3 * v15];
      v16[4] = v13;
      v16[5] = v12;
      *((_BYTE *)v16 + 48) = 0;
      --v9;
    }
    while (v9);
    v6 = swift_bridgeObjectRelease();
  }
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_211A47DA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F6F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "FMFDataManager: reset shallowlocates in progress", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21193F3B0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v11 = (uint64_t *)(v8 + 40);
    do
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      v14 = v10[2];
      v15 = v10[3];
      swift_bridgeObjectRetain();
      if (v14 >= v15 >> 1)
        v10 = sub_21193F3B0((_QWORD *)(v15 > 1), v14 + 1, 1, v10);
      v11 += 3;
      v10[2] = v14 + 1;
      v16 = &v10[3 * v14];
      v16[4] = v13;
      v16[5] = v12;
      *((_BYTE *)v16 + 48) = 1;
      --v9;
    }
    while (v9);
    v6 = swift_bridgeObjectRelease();
  }
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_211A47DA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119F7184()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  int *v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD v102[45];

  v1 = v0;
  v2 = sub_211A4779C();
  v82 = *(_QWORD *)(v2 - 8);
  v83 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v81 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_211A477D8();
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v78 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for FMFLocation();
  v99 = *(_QWORD *)(v88 - 8);
  v13 = MEMORY[0x24BDAC7A8](v88, v12);
  v91 = (uint64_t)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char **)((char *)&v78 - v17);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v86 = (uint64_t)&v78 - v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v85 = (char *)&v78 - v23;
  v87 = type metadata accessor for FMFFriend();
  v98 = *(_QWORD *)(v87 - 8);
  v25 = MEMORY[0x24BDAC7A8](v87, v24);
  v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (uint64_t *)((char *)&v78 - v29);
  if (qword_254AC7B80 != -1)
LABEL_43:
    swift_once();
  v31 = sub_211A47748();
  sub_21194F3E0(v31, (uint64_t)qword_254ADC7E8);
  v32 = sub_211A47724();
  v33 = sub_211A47D30();
  v34 = os_log_type_enabled(v32, v33);
  v97 = v27;
  if (v34)
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_21190D000, v32, v33, "FMFDataManager: reset locating state for friends", v35, 2u);
    v36 = v35;
    v27 = v97;
    MEMORY[0x212BE48A0](v36, -1, -1);
  }

  v37 = sub_2119512F4();
  v95 = *(_QWORD *)(v37 + 16);
  if (v95)
  {
    v96 = v1;
    v94 = v37 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
    v90 = v1 + 160;
    swift_beginAccess();
    v1 = 0;
    v100 = MEMORY[0x24BEE4AF8];
    v92 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v93 = v37;
    v89 = v11;
    v38 = (int *)v88;
    while (1)
    {
      if (v1 >= *(_QWORD *)(v37 + 16))
      {
        __break(1u);
        goto LABEL_43;
      }
      sub_211934794(v94 + *(_QWORD *)(v98 + 72) * v1, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v39 = *(_BYTE *)(v96 + 216);
      sub_211934794((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v39 & 1) != 0)
        break;
      v40 = v27[*(int *)(v87 + 48)];
      sub_211934758((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((v40 & 1) != 0)
        goto LABEL_21;
      v41 = *v30;
      v42 = v30[1];
      v43 = (uint64_t)v85;
      *((_QWORD *)v85 + 3) = 0;
      *(_BYTE *)(v43 + 32) = 1;
      v44 = v43 + v38[8];
      v45 = sub_211A4722C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      v84 = v41;
      *(_QWORD *)v43 = v41;
      *(_QWORD *)(v43 + 8) = v42;
      sub_211982898((uint64_t)v102);
      sub_21192DD68((uint64_t)v102, v43 + v38[11], &qword_254AC8CD0);
      *(_BYTE *)(v43 + 16) = 1;
      *(_BYTE *)(v43 + 33) = 0;
      *(_BYTE *)(v43 + v38[9]) = 0;
      *(_BYTE *)(v43 + v38[10]) = 0;
      sub_211934794(v43, v86, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v100 = sub_21194B098(0, *(_QWORD *)(v100 + 16) + 1, 1, v100);
      v47 = *(_QWORD *)(v100 + 16);
      v46 = *(_QWORD *)(v100 + 24);
      if (v47 >= v46 >> 1)
        v100 = sub_21194B098(v46 > 1, v47 + 1, 1, v100);
      v48 = v99;
      v49 = v100;
      *(_QWORD *)(v100 + 16) = v47 + 1;
      sub_211942810(v86, v49+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v50 = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v50 = sub_211943DD8(0, v50[2] + 1, 1, v50);
      v52 = v50[2];
      v51 = v50[3];
      v92 = v50;
      if (v52 >= v51 >> 1)
        v92 = sub_211943DD8((_QWORD *)(v51 > 1), v52 + 1, 1, v92);
      v53 = v92;
      v92[2] = v52 + 1;
      v54 = &v53[3 * v52];
      v55 = (uint64_t)v85;
      v54[4] = v84;
      v54[5] = v42;
      *((_BYTE *)v54 + 48) = 1;
      sub_211934758(v55, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211934758((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v11 = v89;
LABEL_7:
      v27 = v97;
      v37 = v93;
      if (++v1 == v95)
      {
        swift_bridgeObjectRelease();
        v69 = v100;
        v70 = v92;
        v1 = v96;
        goto LABEL_41;
      }
    }
    sub_211934758((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
LABEL_21:
    v56 = *(_QWORD *)(*(_QWORD *)v90 + 16);
    if (v56)
    {
      v57 = v99;
      v58 = *(_QWORD *)v90
          + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
      swift_bridgeObjectRetain();
      v59 = *(_QWORD *)(v57 + 72);
      do
      {
        sub_211934794(v58, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v60 = v18[1];
        if (v60)
        {
          v61 = *v18 == *v30 && v60 == v30[1];
          if (v61 || (sub_211A48258() & 1) != 0)
          {
            v11 = v89;
            sub_211942810((uint64_t)v18, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
            v62 = 0;
            v38 = (int *)v88;
            goto LABEL_33;
          }
        }
        sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
        v58 += v59;
        --v56;
      }
      while (v56);
      v62 = 1;
      v38 = (int *)v88;
      v11 = v89;
    }
    else
    {
      swift_bridgeObjectRetain();
      v62 = 1;
    }
LABEL_33:
    v63 = v99;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v99 + 56))(v11, v62, 1, v38);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v11, 1, v38) == 1)
    {
      sub_211934758((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211923EE8((uint64_t)v11, (uint64_t *)&unk_254AC8CB0);
    }
    else
    {
      sub_211942810((uint64_t)v11, v91, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v64 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v64 = sub_21194B098(0, *(_QWORD *)(v64 + 16) + 1, 1, v64);
      v66 = *(_QWORD *)(v64 + 16);
      v65 = *(_QWORD *)(v64 + 24);
      v100 = v64;
      if (v66 >= v65 >> 1)
        v100 = sub_21194B098(v65 > 1, v66 + 1, 1, v100);
      v67 = v99;
      v68 = v100;
      *(_QWORD *)(v100 + 16) = v66 + 1;
      sub_211942810(v91, v68+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(_QWORD *)(v67 + 72) * v66, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211934758((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v69 = MEMORY[0x24BEE4AF8];
  v70 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_41:
  v71 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 128) = v70;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = swift_allocObject();
  *(_QWORD *)(v72 + 16) = v1;
  *(_QWORD *)(v72 + 24) = v69;
  v102[4] = sub_2119FC0E0;
  v102[5] = v72;
  v102[0] = MEMORY[0x24BDAC760];
  v102[1] = 1107296256;
  v102[2] = sub_21192382C;
  v102[3] = &unk_24CCCC698;
  v73 = _Block_copy(v102);
  swift_retain();
  v74 = v78;
  sub_211A477B4();
  v101 = v71;
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v75 = v81;
  v76 = v83;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v74, v75, v73);
  _Block_release(v73);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v75, v76);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v80);
  return swift_release();
}

uint64_t sub_2119F7A78(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_211A47DA8();
  if (v12 == 1)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = sub_211A47748();
    sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v4 = sub_211A47724();
    v5 = sub_211A47D30();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_211958C38(&qword_254ACABB8);
      sub_211A47DA8();
      v7 = *(_QWORD *)(v12 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      v12 = v7;
      sub_211A47E2C();
      swift_release();
      _os_log_impl(&dword_21190D000, v4, v5, "FMFDataManager: resetting locating in progress for (%ld friend", v6, 0xCu);
      MEMORY[0x212BE48A0](v6, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    if (MEMORY[0x212BE496C](a1 + 32))
    {
      v8 = *(_QWORD *)(a1 + 40);
      ObjectType = swift_getObjectType();
      sub_211958C38(&qword_254AC83D8);
      sub_211A47DA8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 72))(v12, ObjectType, v8);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    result = MEMORY[0x212BE496C](a1 + 32);
    if (result)
    {
      v10 = *(_QWORD *)(a1 + 40);
      v11 = swift_getObjectType();
      sub_211958C38(&qword_254ACABB8);
      sub_211A47DA8();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, v11, v10);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2119F7D20()
{
  uint64_t v0;

  swift_beginAccess();
  type metadata accessor for FMFFriend();
  swift_bridgeObjectRetain();
  v0 = sub_211A47844();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_2119F7D98(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _BYTE v13[56];

  v6 = sub_2119DFA80(a2, a3, 0);
  if (!v6)
    return;
  v7 = v6;
  v8 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 >> 62)
  {
    if (sub_211A480A8())
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x212BE3DA8](0, v7);
  }
  else
  {
    if (!*(_QWORD *)(v8 + 16))
    {
      __break(1u);
      return;
    }
    v9 = *(id *)(v7 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease();
  sub_2119DF2AC(v10, (uint64_t)v13);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *(_QWORD *)(a1 + 728);
  *(_QWORD *)(a1 + 728) = 0x8000000000000000;
  sub_211A4441C((uint64_t)v13, (uint64_t)a2, (uint64_t)a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 728) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

}

uint64_t sub_2119F7EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21195A988();
  *a1 = result;
  return result;
}

void sub_2119F7F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = sub_211A4779C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A477D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC7FMFCore23FMFManagerConfiguration_disableContactMatching) & 1) == 0)
  {
    v12[0] = *(_QWORD *)(v0 + 56);
    aBlock[4] = sub_2119FB0A4;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCBE50;
    v11 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v12[1] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v10, v5, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_release();
  }
}

uint64_t sub_2119F8104(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 120);
  if (v1)
  {
    v2 = *(_QWORD *)(result + 720);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21195D3D0(v1, v2);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2119F816C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v2 + 56);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_2119FB07C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBE00;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_2119F8364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v4 = sub_211A4779C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v16[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a1 + 720) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = 0;
  swift_bridgeObjectRelease();
  sub_211933924();
  aBlock[4] = sub_2119FB084;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBE28;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v5, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v16[0] + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release();
}

uint64_t sub_2119F8570(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v5 = sub_211A4779C();
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMFFriend();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13, v16);
  LOBYTE(a2) = *a2;
  v21[1] = *(_QWORD *)(v2 + 56);
  sub_211934794(a1, (uint64_t)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  sub_211942810((uint64_t)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  *(_BYTE *)(v18 + v17 + v15) = (_BYTE)a2;
  aBlock[4] = sub_2119FB304;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBEA0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v25 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v8, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
  return swift_release();
}

uint64_t sub_2119F87E0(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  void (*v22)(_QWORD *);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];
  _QWORD v35[4];

  v29 = a3;
  v5 = sub_211A4779C();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_211A477D8();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = *a2;
  v17 = a2[1];
  sub_211934794((uint64_t)a2, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v19 = type metadata accessor for FMFFriend();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_211959038((uint64_t)v16, v18, v17);
  swift_endAccess();
  swift_bridgeObjectRetain();
  v21 = sub_2119FA67C();
  v22 = sub_2119F8AF4(v35, v18, v17);
  v24 = v23;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v23, 1, v19))
    *(_BYTE *)(v24 + *(int *)(v19 + 84)) = v29;
  ((void (*)(_QWORD *, _QWORD))v22)(v35, 0);
  swift_bridgeObjectRelease();
  ((void (*)(_QWORD *, _QWORD))v21)(aBlock, 0);
  *(_QWORD *)(a1 + 120) = 0;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_211938BD0;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCBEC8;
  v25 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v35[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v26 = v33;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v8, v25);
  _Block_release(v25);
  (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v8, v26);
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v12, v31);
  return swift_release();
}

void (*sub_2119F8AF4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_2119FA7C0(v6, a2, a3);
  return sub_2119F8B60;
}

void sub_2119F8B60(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_2119F8B98(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2119F93DC(a1, a2, a3, (uint64_t)&unk_24CCCBF00, (uint64_t)sub_2119FB348, (uint64_t)&unk_24CCCBF18);
}

uint64_t sub_2119F8BB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)();
  void (*v18)(_QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD aBlock[6];
  _QWORD v37[4];

  v35 = a4;
  v7 = sub_211A4779C();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v32 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v17 = sub_2119FA67C();
  v18 = sub_2119F8AF4(v37, a2, a3);
  v20 = v19;
  v21 = type metadata accessor for FMFFriend();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    *(_BYTE *)(v20 + *(int *)(v21 + 84)) = 7;
  ((void (*)(_QWORD *, _QWORD))v18)(v37, 0);
  swift_bridgeObjectRelease();
  ((void (*)(_QWORD *, _QWORD))v17)(aBlock, 0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v16, 1, 1, v21);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_211959038((uint64_t)v16, a2, a3);
  result = swift_endAccess();
  if ((v35 & 1) != 0)
  {
    *(_QWORD *)(a1 + 120) = 0;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_211938BD0;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCBF40;
    v24 = _Block_copy(aBlock);
    swift_retain();
    v25 = v29;
    sub_211A477B4();
    v37[0] = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    v26 = v32;
    v27 = v34;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v25, v26, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119F8ECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = sub_211A4779C();
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_211A477D8();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFFriend();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11, v14);
  v19 = *(_QWORD *)(v1 + 56);
  sub_211934794(a1, (uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v1;
  sub_211942810((uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  aBlock[4] = sub_2119FC948;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCCA80;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v22 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v10, v6, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v20);
  return swift_release();
}

uint64_t sub_2119F912C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = sub_211A4779C();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211A477D8();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  v17 = a2[1];
  sub_211934794((uint64_t)a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
  v18 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v15, 0, 1, v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_211959038((uint64_t)v15, v16, v17);
  swift_endAccess();
  *(_QWORD *)(a1 + 120) = 0;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_211938BD0;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCCAA8;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v11, v7, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v22);
  return swift_release();
}

uint64_t sub_2119F93C0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2119F93DC(a1, a2, a3, (uint64_t)&unk_24CCCC9F0, (uint64_t)sub_2119FC6E4, (uint64_t)&unk_24CCCCA08);
}

uint64_t sub_2119F93DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v9 = v6;
  v13 = sub_211A4779C();
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_211A477D8();
  v25 = *(_QWORD *)(v17 - 8);
  v26 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)(v9 + 56);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v9;
  *(_QWORD *)(v21 + 24) = a1;
  *(_QWORD *)(v21 + 32) = a2;
  *(_BYTE *)(v21 + 40) = a3;
  aBlock[4] = a5;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = a6;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_211A477B4();
  v28 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v20, v16, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v26);
  return swift_release();
}

uint64_t sub_2119F95E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v8 = sub_211A4779C();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_211A477D8();
  v12 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for FMFFriend();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_211959038((uint64_t)v19, a2, a3);
  result = swift_endAccess();
  if ((a4 & 1) != 0)
  {
    *(_QWORD *)(a1 + 120) = 0;
    swift_bridgeObjectRelease();
    aBlock[4] = sub_211938BD0;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCCA30;
    v22 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v26 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v15, v11, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v24);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119F986C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_211A4779C();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_211A477D8();
  v10 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  v16 = a1[2];
  v17 = a1[3];
  v21 = *(_QWORD *)(v3 + 56);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v3;
  *(_QWORD *)(v18 + 24) = v14;
  *(_QWORD *)(v18 + 32) = v15;
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  *(_BYTE *)(v18 + 56) = a2;
  aBlock[4] = sub_2119FC9C4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCCAF8;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_21192769C(v14, v15, v16);
  sub_211A477B4();
  v24 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v22);
  return swift_release();
}

uint64_t sub_2119F9A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t result;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;

  v33 = a6;
  v38 = a4;
  v37 = sub_211A4779C();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_211A477D8();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v13);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD **)(a1 + 80);
  v17 = v16[5];
  v18 = v16[6];
  v19 = v16[7];
  v16[5] = a2;
  v16[6] = a3;
  v20 = v38;
  v16[7] = v38;
  v16[8] = a5;
  sub_21192769C(a2, a3, v20);
  sub_21195A23C(v17, v18, v19);
  v21 = *(_QWORD *)(a1 + 64);
  v44 = sub_2119FC9D8;
  v45 = a1;
  aBlock = MEMORY[0x24BDAC760];
  v41 = 1107296256;
  v42 = sub_21192382C;
  v43 = &unk_24CCCCB20;
  v22 = _Block_copy(&aBlock);
  v32 = a1;
  swift_retain();
  sub_211A477B4();
  v39 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  v23 = v37;
  sub_211A47EA4();
  v31[1] = v21;
  MEMORY[0x212BE3BC8](0, v15, v12, v22);
  _Block_release(v22);
  v24 = *(void (**)(char *, uint64_t))(v35 + 8);
  v25 = v12;
  v24(v12, v23);
  v26 = *(void (**)(char *, uint64_t))(v34 + 8);
  v26(v15, v36);
  result = swift_release();
  if (!v38 && (v33 & 1) != 0)
  {
    v28 = v32;
    *(_QWORD *)(v32 + 120) = 0;
    swift_bridgeObjectRelease();
    v44 = sub_211938BD0;
    v45 = v28;
    aBlock = MEMORY[0x24BDAC760];
    v41 = 1107296256;
    v42 = sub_21192382C;
    v43 = &unk_24CCCCB48;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    sub_211A477B4();
    v39 = MEMORY[0x24BEE4AF8];
    v30 = v37;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v15, v25, v29);
    _Block_release(v29);
    v24(v25, v30);
    v26(v15, v36);
    return swift_release();
  }
  return result;
}

uint64_t sub_2119F9DBC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = MEMORY[0x212BE496C](a1 + 32);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    sub_211958C38(&qword_254AC97A0);
    sub_211A47DA8();
    v5 = v9;
    v6 = v10;
    v7 = v11;
    v8[0] = v9;
    v8[1] = v10;
    v8[2] = v11;
    v8[3] = v12;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 8))(v8, ObjectType, v3);
    swift_unknownObjectRelease();
    return sub_21195A23C(v5, v6, v7);
  }
  return result;
}

uint64_t sub_2119F9E84(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  uint64_t v23[8];

  v3 = v2;
  v6 = sub_211A4779C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_211A477D8();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21192DD68(a1, (uint64_t)v23, &qword_254ACAA30);
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v3;
  sub_21192DD68((uint64_t)v23, v15 + 32, &qword_254ACAA30);
  aBlock[4] = sub_2119FCA28;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCCB98;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_211961470(v23);
  sub_211A477B4();
  v21 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v7, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v19);
  return swift_release();
}

void sub_2119FA0B4(char a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  _DWORD v22[4];
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v6 = sub_211A4779C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v11, v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v17 = *(_QWORD *)(a2 + 80);
    v18 = *(_QWORD *)(v17 + 72);
    v17 += 72;
    v23 = v10;
    v24 = v6;
    v26 = v7;
    v27 = v13;
    v22[3] = *(unsigned __int8 *)(v17 + 56);
    v25 = v14;
    sub_21192DD68((uint64_t)a3, v17, &qword_254ACAA30);
    sub_211961470(a3);
    sub_211933F60(v18);
    aBlock[4] = sub_2119FCA38;
    aBlock[5] = a2;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCCBC0;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_211A477B4();
    v28 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC74((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0, MEMORY[0x24BEE12C8]);
    v20 = v23;
    v21 = v24;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v16, v20, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v21);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v27);
    swift_release();
  }
}

uint64_t sub_2119FA2FC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD v6[7];
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  result = MEMORY[0x212BE496C](a1 + 32);
  if (result)
  {
    v4 = *(_QWORD *)(a1 + 40);
    ObjectType = swift_getObjectType();
    sub_211958C38(&qword_254ACAA30);
    sub_211A47DA8();
    v3 = v8;
    v6[0] = v8;
    v6[1] = v9;
    v6[2] = v10;
    v6[3] = v11;
    v6[4] = v12;
    v6[5] = v13;
    v6[6] = v14;
    v7 = v15;
    (*(void (**)(_QWORD *, uint64_t))(v4 + 24))(v6, ObjectType);
    swift_unknownObjectRelease();
    return sub_211933F60(v3);
  }
  return result;
}

uint64_t FMFPendingUpdateReason.hash(into:)()
{
  _BYTE *v0;
  uint64_t result;

  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = sub_211A48324();
      break;
    default:
      sub_211A48324();
      result = sub_211A48330();
      break;
  }
  return result;
}

uint64_t FMFPendingUpdateReason.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_211A48318();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      sub_211A48324();
      break;
    default:
      sub_211A48324();
      sub_211A48330();
      break;
  }
  return sub_211A48348();
}

uint64_t sub_2119FA53C()
{
  _BYTE *v0;
  uint64_t result;

  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = sub_211A48324();
      break;
    default:
      sub_211A48324();
      result = sub_211A48330();
      break;
  }
  return result;
}

uint64_t sub_2119FA5C4()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_211A48318();
  switch(v1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      sub_211A48324();
      break;
    default:
      sub_211A48324();
      sub_211A48330();
      break;
  }
  return sub_211A48348();
}

uint64_t (*sub_2119FA67C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2119FA6B8()
{
  uint64_t *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21195A23C(v0[5], v0[6], v0[7]);
  sub_211933F60(v0[9]);
  return swift_deallocClassInstance();
}

uint64_t sub_2119FA710()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
    return sub_211A26834(0, *(_QWORD *)(v1 + 16) + 1, 1);
  return result;
}

uint64_t sub_2119FA758(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  v6 = type metadata accessor for FMFLocationAlert();
  return sub_211942810(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
}

void (*sub_2119FA7C0(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2119FAA8C(v6);
  v6[10] = sub_2119FA8A0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_2119FA850;
}

void sub_2119FA850(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_2119FA8A0(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = sub_211958C38(&qword_254AC8870);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_21195BB68(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = type metadata accessor for FMFFriend();
        v23 = *(_QWORD *)(v22 - 8);
        sub_211942810(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_2119FAA3C;
      }
LABEL_11:
      v22 = type metadata accessor for FMFFriend();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_211A458F0();
      goto LABEL_7;
    }
    sub_211A41E78(v18, a4 & 1);
    v25 = sub_21195BB68(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_211A48294();
  __break(1u);
  return result;
}

void sub_2119FAA3C(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[3];
  sub_2119FAAB8((uint64_t)v2, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_211923EE8((uint64_t)v2, &qword_254AC8870);
  free(v2);
  free(v1);
}

uint64_t (*sub_2119FAA8C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2119FAAAC;
}

uint64_t sub_2119FAAAC(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_2119FAAB8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t result;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a5;
  v26 = a6;
  v10 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMFFriend();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v25 - v21;
  sub_21192C6B8(a1, (uint64_t)v13, &qword_254AC8870);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    result = sub_211923EE8((uint64_t)v13, &qword_254AC8870);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      return sub_211A4373C(a4, *a3);
    }
  }
  else
  {
    sub_211942810((uint64_t)v13, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v24 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_211942810((uint64_t)v22, v24[7] + *(_QWORD *)(v15 + 72) * a4, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    }
    else
    {
      sub_211942810((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211A44ACC(a4, v25, v26, (uint64_t)v19, v24);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

char *sub_2119FAC78(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_2119B02DC(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t _s7FMFCore22FMFPendingUpdateReasonO2eeoiySbAC_ACtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2)
        goto LABEL_13;
      goto LABEL_11;
    case 3:
      if (v2 != 3)
        goto LABEL_13;
      goto LABEL_11;
    case 4:
      if (v2 != 4)
        goto LABEL_13;
      goto LABEL_11;
    case 5:
      if (v2 != 5)
        goto LABEL_13;
      goto LABEL_11;
    case 6:
      if (v2 != 6)
        goto LABEL_13;
LABEL_11:
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 5)
        result = (((*a1 & 1) == 0) ^ v2) & 1;
      else
LABEL_13:
        result = 0;
      break;
  }
  return result;
}

unint64_t sub_2119FAE94()
{
  unint64_t result;

  result = qword_254ACCEE0;
  if (!qword_254ACCEE0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFPendingUpdateReason, &type metadata for FMFPendingUpdateReason);
    atomic_store(result, (unint64_t *)&qword_254ACCEE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFPendingUpdateReason(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 4;
      if (v7 > 4)
        return result;
    }
    return 0;
  }
  v2 = a2 + 6;
  if (a2 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_2119FAF28 + 4 * byte_211A4FDB9[v4]))();
}

uint64_t storeEnumTagSinglePayload for FMFPendingUpdateReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2119FAFD4 + 4 * byte_211A4FDC3[v5]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2119FB008 + 4 * byte_211A4FDBE[v5]))();
}

uint64_t sub_2119FB008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FB010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119FB018);
  return result;
}

uint64_t sub_2119FB024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119FB02CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2119FB030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FB038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FB044(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_2119FB060(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

uint64_t sub_2119FB07C()
{
  uint64_t v0;

  return sub_2119F8364(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2119FB084()
{
  uint64_t v0;

  return sub_211938BF0(v0);
}

uint64_t sub_2119FB0A4()
{
  uint64_t v0;

  return sub_2119F8104(v0);
}

uint64_t sub_2119FB0AC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = (int *)type metadata accessor for FMFFriend();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[8];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = v3 + v1[20];
  v8 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 32);
    v10 = sub_211A4722C();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v7 + *(int *)(v8 + 44);
    v13 = *(void **)(v12 + 304);
    if (v13)
    {
      if (*(_QWORD *)(v12 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(void **)(v12 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_2119FB304()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FMFFriend() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_2119F87E0(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + v2), *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_2119FB340()
{
  return sub_2119FC6AC();
}

uint64_t sub_2119FB348()
{
  uint64_t v0;

  return sub_2119F8BB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_2119FB358()
{
  uint64_t v0;

  return sub_2119F6C6C(v0);
}

uint64_t sub_2119FB380()
{
  uint64_t v0;

  return sub_2119F6C6C(v0);
}

double sub_2119FB3B0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 448) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_2119FB3F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119FB418()
{
  return swift_deallocObject();
}

uint64_t sub_2119FB430()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 384))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_2119FB4F4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  _QWORD __dst[57];

  v1 = (_QWORD *)(v0 + 24);
  v2 = (void *)(*(_QWORD *)(v0 + 16) + 248);
  memcpy(__dst, v2, sizeof(__dst));
  memcpy(v2, v1, 0x1C8uLL);
  sub_2119337E0(v1);
  return sub_2119B1B98(__dst);
}

uint64_t sub_2119FB558(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v10 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_2119176F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_2119FB600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a2;
  v54 = sub_211958C38(&qword_254ACD780);
  v5 = MEMORY[0x24BDAC7A8](v54, v4);
  v53 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v52 = (uint64_t *)((char *)&v44 - v9);
  MEMORY[0x24BDAC7A8](v8, v10);
  v51 = (char *)&v44 - v11;
  v12 = type metadata accessor for FMFFriend();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (!v17)
    return v18;
  v59 = v2;
  v60 = MEMORY[0x24BEE4AF8];
  sub_21194B0AC(0, v17, 0);
  result = sub_211948444(a1);
  v21 = result;
  v22 = 0;
  v23 = a1 + 64;
  v24 = *(_BYTE *)(a1 + 32);
  v45 = a1 + 80;
  v46 = v17;
  v49 = v13;
  v50 = a1;
  v47 = v20;
  v48 = a1 + 64;
  v25 = v54;
  v26 = v51;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << v24)
  {
    v28 = (unint64_t)v21 >> 6;
    if ((*(_QWORD *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v20)
      goto LABEL_28;
    v56 = v22;
    v57 = 1 << v21;
    v29 = (uint64_t)v26 + *(int *)(v25 + 48);
    v30 = *(_QWORD *)(a1 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v21);
    v32 = *v31;
    v33 = v31[1];
    v58 = *(_QWORD *)(v13 + 72);
    sub_211934794(v30 + v58 * v21, v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    *v26 = v32;
    v26[1] = v33;
    v34 = (uint64_t)v52;
    *v52 = v32;
    *(_QWORD *)(v34 + 8) = v33;
    sub_211934794(v29, v34 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    v35 = v53;
    sub_21192DD68(v34, v53, &qword_254ACD780);
    swift_bridgeObjectRetain_n();
    sub_211923EE8((uint64_t)v26, &qword_254ACD780);
    v36 = v59;
    sub_211947D90(v35, v55, v16);
    sub_211923EE8(v35, &qword_254ACD780);
    v18 = v60;
    v59 = v36;
    if (v36)
    {
      swift_release();
      return v18;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21194B0AC(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v60;
    }
    v13 = v49;
    v38 = *(_QWORD *)(v18 + 16);
    v37 = *(_QWORD *)(v18 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_21194B0AC(v37 > 1, v38 + 1, 1);
      v18 = v60;
    }
    *(_QWORD *)(v18 + 16) = v38 + 1;
    result = sub_211942810((uint64_t)v16, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ v38 * v58, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
    a1 = v50;
    v24 = *(_BYTE *)(v50 + 32);
    v27 = 1 << v24;
    if (v21 >= 1 << v24)
      goto LABEL_29;
    v23 = v48;
    v39 = *(_QWORD *)(v48 + 8 * v28);
    if ((v39 & v57) == 0)
      goto LABEL_30;
    LODWORD(v20) = v47;
    if (*(_DWORD *)(v50 + 36) != (_DWORD)v47)
      goto LABEL_31;
    v40 = v39 & (-2 << (v21 & 0x3F));
    if (v40)
    {
      v27 = __clz(__rbit64(v40)) | v21 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = v28 + 1;
      v42 = (v27 + 63) >> 6;
      if (v28 + 1 < v42)
      {
        v43 = *(_QWORD *)(v48 + 8 * v41);
        if (v43)
        {
LABEL_23:
          v27 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v28)
          {
            v43 = *(_QWORD *)(v45 + 8 * v28++);
            if (v43)
            {
              v41 = v28 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    v22 = v56 + 1;
    v21 = v27;
    if (v56 + 1 == v46)
      return v18;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2119FB9D0()
{
  return sub_2119F7D20();
}

uint64_t sub_2119FB9E8()
{
  return swift_deallocObject();
}

_BYTE **sub_2119FB9F8(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_211966DCC(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_2119FBA00()
{
  return swift_deallocObject();
}

void sub_2119FBA10(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_211A075C0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2119FBA18()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBA28()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBA38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119FBA5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v42 = a2;
  v4 = type metadata accessor for FMFLocationAlert();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v44 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v39 - v14;
  result = MEMORY[0x24BEE4AF8];
  v49 = MEMORY[0x24BEE4AF8];
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
    return result;
  v43 = v2;
  v17 = 0;
  v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v47 = *(_QWORD *)(v13 + 72);
  v40 = v18;
  v45 = a1 + v18;
  v19 = MEMORY[0x24BEE4AF8];
  v20 = (uint64_t)v44;
  v41 = (char *)&v39 - v14;
  while (1)
  {
    sub_211934794(v45 + v47 * v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    v21 = *(_QWORD **)&v15[*(int *)(v4 + 72)];
    v48 = v19;
    if (v21)
    {
      v22 = v21[2];
      if (v22)
      {
        v24 = *v42;
        v23 = v42[1];
        v25 = v21[4] == *v42 && v21[5] == v23;
        if (v25 || (result = sub_211A48258(), (result & 1) != 0))
        {
LABEL_27:
          v19 = v48;
          sub_211934794((uint64_t)v15, v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          sub_211934758(v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_28:
          sub_211942810((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_211A26834(0, *(_QWORD *)(v19 + 16) + 1, 1);
            v20 = (uint64_t)v44;
          }
          v19 = v49;
          v38 = *(_QWORD *)(v49 + 16);
          v37 = *(_QWORD *)(v49 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_211A26834(v37 > 1, v38 + 1, 1);
            v20 = (uint64_t)v44;
            v19 = v49;
          }
          *(_QWORD *)(v19 + 16) = v38 + 1;
          sub_211942810((uint64_t)v8, v19 + v40 + v38 * v47, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
          goto LABEL_5;
        }
        if (v22 != 1)
          break;
      }
    }
LABEL_23:
    v15 = v41;
    sub_211934794((uint64_t)v41, v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
    if (*(_QWORD *)(v20 + *(int *)(v4 + 68)))
    {
      v32 = v42[4];
      swift_bridgeObjectRetain();
      v33 = swift_bridgeObjectRetain();
      v34 = v43;
      v35 = sub_2119F3D34(v33, v32);
      v43 = v34;
      v36 = *(_QWORD *)(v35 + 16);
      swift_bridgeObjectRelease();
      sub_211934758(v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      v19 = v48;
      if (v36)
        goto LABEL_28;
    }
    else
    {
      sub_211934758(v20, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
      v19 = v48;
    }
    sub_211934758((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocationAlert);
LABEL_5:
    if (++v17 == v46)
      return v49;
  }
  v26 = v21 + 7;
  v27 = 1;
  while (1)
  {
    v28 = v8;
    v29 = v4;
    v30 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    v31 = *(v26 - 1) == v24 && *v26 == v23;
    if (v31 || (result = sub_211A48258(), (result & 1) != 0))
    {
      v4 = v29;
      v8 = v28;
      v20 = (uint64_t)v44;
      v15 = v41;
      goto LABEL_27;
    }
    v26 += 2;
    ++v27;
    v25 = v30 == v22;
    v4 = v29;
    v8 = v28;
    v20 = (uint64_t)v44;
    if (v25)
      goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_2119FBDAC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBDBC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBDCC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBDDC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBDEC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBDFC()
{
  return swift_deallocObject();
}

uint64_t sub_2119FBE0C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = (int *)type metadata accessor for FMFFriend();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[8];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = v3 + v1[20];
  v8 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 32);
    v10 = sub_211A4722C();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v7 + *(int *)(v8 + 44);
    v13 = *(void **)(v12 + 304);
    if (v13)
    {
      if (*(_QWORD *)(v12 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(void **)(v12 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

unint64_t sub_2119FC058()
{
  type metadata accessor for FMFFriend();
  return FMFFriend.name.getter();
}

uint64_t sub_2119FC090()
{
  return swift_deallocObject();
}

uint64_t sub_2119FC0A0()
{
  return swift_deallocObject();
}

uint64_t sub_2119FC0B0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_211966D5C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2119FC0B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119FC0E0()
{
  uint64_t v0;

  return sub_2119F7A78(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2119FC0EC()
{
  return sub_2119FC6AC();
}

uint64_t sub_2119FC0F4()
{
  uint64_t *v0;

  return sub_2119F5A7C(v0[2], v0[3], v0[4]);
}

uint64_t sub_2119FC100(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_21194B098(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for FMFLocation() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_211A480D8();
  __break(1u);
  return result;
}

uint64_t sub_2119FC2A8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a3;
  v39 = a2;
  v4 = type metadata accessor for FMFLocation();
  MEMORY[0x24BDAC7A8](v4, v5);
  v38 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v37 = (uint64_t)&v33 - v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (uint64_t *)((char *)&v33 - v13);
  v15 = *a1;
  v16 = *(_QWORD *)(*a1 + 16);
  if (!v16)
    return 0;
  v36 = a1;
  v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = *(_QWORD *)(v12 + 72);
  swift_bridgeObjectRetain();
  v19 = 0;
  v35 = v17;
  while (1)
  {
    v20 = *(_QWORD *)(v15 + v17 + 8);
    if (v20)
    {
      v42 = *(_QWORD *)(v15 + v17);
      v43 = v20;
      v40 = v39;
      v41 = v44;
      sub_21194FDB4();
      if ((sub_211A47E80() & 1) != 0)
        break;
    }
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v15 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v19, 1))
    goto LABEL_38;
  v22 = *(_QWORD *)(v15 + 16);
  if (v19 + 1 == v22)
    return v19;
  v23 = v18 + v17;
  v24 = v19 + 1;
  v25 = v36;
  v34 = v18;
  while (v24 < v22)
  {
    sub_211934794(v15 + v23, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    v26 = v14[1];
    if (!v26)
    {
      result = sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if (v24 == v19)
        goto LABEL_23;
LABEL_15:
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_33;
      v28 = *v25;
      v29 = *(_QWORD *)(*v25 + 16);
      if (v19 >= v29)
        goto LABEL_34;
      v30 = v19 * v18;
      result = sub_211934794(v28 + v35 + v19 * v18, v37, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if (v24 >= v29)
        goto LABEL_35;
      sub_211934794(v28 + v23, v38, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      result = swift_isUniquelyReferenced_nonNull_native();
      *v36 = v28;
      if ((result & 1) == 0)
      {
        result = sub_211A18CC0(v28);
        v28 = result;
        *v36 = result;
      }
      v18 = v34;
      if (v19 >= *(_QWORD *)(v28 + 16))
        goto LABEL_36;
      result = sub_21195BCAC(v38, v28 + v35 + v30, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v25 = v36;
      if (v24 >= *(_QWORD *)(*v36 + 16))
        goto LABEL_37;
      result = sub_21195BCAC(v37, *v36 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      goto LABEL_23;
    }
    v42 = *v14;
    v43 = v26;
    v40 = v39;
    v41 = v44;
    v27 = sub_211A47E80();
    result = sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
    if ((v27 & 1) != 0)
      goto LABEL_24;
    if (v24 != v19)
      goto LABEL_15;
LABEL_23:
    if (__OFADD__(v19++, 1))
      goto LABEL_32;
LABEL_24:
    v32 = v24 + 1;
    if (__OFADD__(v24, 1))
      goto LABEL_31;
    v15 = *v25;
    v22 = *(_QWORD *)(*v25 + 16);
    ++v24;
    v23 += v18;
    if (v32 == v22)
      return v19;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_2119FC60C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119FC654()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119FC678()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2119FC69C()
{
  return sub_2119FC980();
}

uint64_t sub_2119FC6A4()
{
  return sub_2119FC6AC();
}

uint64_t sub_2119FC6AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2119FC6E4()
{
  uint64_t v0;

  return sub_2119F95E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_2119FC6F4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v1 = (int *)type metadata accessor for FMFFriend();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[8];
  v5 = sub_211A47208();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + v1[19] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = v3 + v1[20];
  v8 = type metadata accessor for FMFLocation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 32);
    v10 = sub_211A4722C();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    v12 = v7 + *(int *)(v8 + 44);
    v13 = *(void **)(v12 + 304);
    if (v13)
    {
      if (*(_QWORD *)(v12 + 168))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(void **)(v12 + 304);
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_2119FC948()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend() - 8) + 80);
  return sub_2119F912C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + ((v1 + 24) & ~v1)));
}

uint64_t sub_2119FC978()
{
  return sub_2119FC980();
}

uint64_t sub_2119FC980()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_2119FC9C4()
{
  uint64_t v0;

  return sub_2119F9A8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_2119FC9D8()
{
  uint64_t v0;

  return sub_2119F9DBC(v0);
}

uint64_t sub_2119FC9E0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_2119FCA28()
{
  uint64_t v0;

  sub_2119FA0B4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t *)(v0 + 32));
}

uint64_t sub_2119FCA38()
{
  uint64_t v0;

  return sub_2119FA2FC(v0);
}

uint64_t sub_2119FCA40()
{
  return swift_deallocObject();
}

unint64_t sub_2119FCA50()
{
  unint64_t result;

  result = qword_254ACD798;
  if (!qword_254ACD798)
  {
    result = MEMORY[0x212BE47C8](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254ACD798);
  }
  return result;
}

uint64_t sub_2119FCA94@<X0>(uint64_t *a1@<X8>)
{
  return sub_21190F50C(a1);
}

uint64_t FMFStopSharingAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2119C01B0(a1, v2 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  *(_BYTE *)(v2 + 16) = 1;
  return v2;
}

uint64_t FMFStopSharingAction.init(friend:)(uint64_t a1)
{
  uint64_t v1;

  sub_2119C01B0(a1, v1 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  *(_BYTE *)(v1 + 16) = 1;
  return v1;
}

uint64_t sub_2119FCC7C()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMFFriend();
  sub_211A48054();
  return 0;
}

void FMFStopSharingAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFStopSharingAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119FCDF0()
{
  uint64_t v0;

  return sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
}

uint64_t FMFStopSharingAction.deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  return v0;
}

uint64_t FMFStopSharingAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend);
  return swift_deallocClassInstance();
}

uint64_t sub_2119FCE54()
{
  return type metadata accessor for FMFStopSharingAction();
}

uint64_t type metadata accessor for FMFStopSharingAction()
{
  uint64_t result;

  result = qword_254ACD7E0;
  if (!qword_254ACD7E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2119FCE98()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FMFFriend();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFStopSharingAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFStopSharingAction.__allocating_init(friend:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_2119FCF18()
{
  uint64_t result;

  type metadata accessor for FMFContactsDataController();
  swift_allocObject();
  result = FMFContactsDataController.init(isSnapshotMode:)(0);
  qword_254ACD898 = result;
  return result;
}

id static FMFCoreHelper.contact(for:keysToFetch:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_254AC7B70 != -1)
    swift_once();
  return sub_2119E0430(a1, a2, a3);
}

uint64_t static FMFCoreHelper.displayName(for:)(void *a1)
{
  uint64_t v2;
  _BYTE v4[8];
  uint64_t v5;

  if (qword_254AC7B70 != -1)
    swift_once();
  sub_2119DF2AC(a1, (uint64_t)v4);
  v2 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

id FMFCoreHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FMFCoreHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFCoreHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FMFCoreHelper()
{
  return objc_opt_self();
}

id FMFCoreHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFCoreHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FMFStopFollowingAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2119C01B0(a1, v2 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  *(_BYTE *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFStopFollowingAction.init(friend:)(uint64_t a1)
{
  uint64_t v1;

  sub_2119C01B0(a1, v1 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_2119FD250()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMFFriend();
  sub_211A48054();
  return 0;
}

void FMFStopFollowingAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFStopFollowingAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2119FD3C4()
{
  uint64_t v0;

  return sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
}

uint64_t FMFStopFollowingAction.deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  return v0;
}

uint64_t FMFStopFollowingAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore22FMFStopFollowingAction_friend);
  return swift_deallocClassInstance();
}

uint64_t sub_2119FD428()
{
  return type metadata accessor for FMFStopFollowingAction();
}

uint64_t type metadata accessor for FMFStopFollowingAction()
{
  uint64_t result;

  result = qword_254ACD8F0;
  if (!qword_254ACD8F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for FMFStopFollowingAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFStopFollowingAction.__allocating_init(friend:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FMFUpdateStewieLocationAction.__allocating_init(publishReason:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 24) = a1;
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t FMFUpdateStewieLocationAction.init(publishReason:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

void FMFUpdateStewieLocationAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFUpdateStewieLocationAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t FMFUpdateStewieLocationAction.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FMFUpdateStewieLocationAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFUpdateStewieLocationAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFUpdateStewieLocationAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFUpdateStewieLocationAction.__allocating_init(publishReason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

FMFCore::FMWindowStatePrefKeys_optional __swiftcall FMWindowStatePrefKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  FMFCore::FMWindowStatePrefKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FMWindowStatePrefKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6956776F646E6977;
  else
    return 0x736F4D746E6F7266;
}

uint64_t sub_2119FD61C(char *a1, char *a2)
{
  return sub_211974DE8(*a1, *a2);
}

unint64_t sub_2119FD62C()
{
  unint64_t result;

  result = qword_254ACDA78;
  if (!qword_254ACDA78)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMWindowStatePrefKeys, &type metadata for FMWindowStatePrefKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDA78);
  }
  return result;
}

uint64_t sub_2119FD670()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FD708()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119FD77C()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMWindowStatePrefKeys_optional sub_2119FD810(Swift::String *a1)
{
  return FMWindowStatePrefKeys.init(rawValue:)(*a1);
}

void sub_2119FD81C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x736F4D746E6F7266;
  if (*v1)
    v2 = 0x6956776F646E6977;
  v3 = 0xEF776F646E695774;
  if (*v1)
    v3 = 0xED0000656C626973;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t storeEnumTagSinglePayload for FMWindowStatePrefKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2119FD8C0 + 4 * byte_211A50125[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2119FD8F4 + 4 * byte_211A50120[v4]))();
}

uint64_t sub_2119FD8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FD8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119FD904);
  return result;
}

uint64_t sub_2119FD910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119FD918);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2119FD91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FD924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMWindowStatePrefKeys()
{
  return &type metadata for FMWindowStatePrefKeys;
}

uint64_t sub_2119FD944@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  int *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (int *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_2119FD998@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t FMFFeatures.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

FMFCore::FMFFeatures __swiftcall FMFFeatures.init(rawValue:)(FMFCore::FMFFeatures rawValue)
{
  FMFCore::FMFFeatures *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FMFFeatures.viewFriends.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FMFFeatures.viewFollowers.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static FMFFeatures.actOnRequest.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static FMFFeatures.offerLocation.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FMFFeatures.changeMyLabel.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static FMFFeatures.changeMeDevice.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static FMFFeatures.changeHideLocation.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static FMFFeatures.changeAllowFriendRequests.getter(_QWORD *a1@<X8>)
{
  *a1 = 128;
}

void static FMFFeatures.changeGeoFenceAlerts.getter(_QWORD *a1@<X8>)
{
  *a1 = 256;
}

void static FMFFeatures.removeFriends.getter(_QWORD *a1@<X8>)
{
  *a1 = 512;
}

void static FMFFeatures.removeFollowers.getter(_QWORD *a1@<X8>)
{
  *a1 = 1024;
}

void static FMFFeatures.removeDevice.getter(_QWORD *a1@<X8>)
{
  *a1 = 2048;
}

void static FMFFeatures.notifyOthers.getter(_QWORD *a1@<X8>)
{
  *a1 = 4096;
}

void static FMFFeatures.notifyMe.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x2000;
}

uint64_t sub_2119FDAA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119FDAE0 + 4 * byte_211A50200[a1]))(0x6569724677656976, 0xEB0000000073646ELL);
}

uint64_t sub_2119FDAE0()
{
  return 0x6C6C6F4677656976;
}

uint64_t sub_2119FDB04()
{
  return 0x7165526E4F746361;
}

uint64_t sub_2119FDB24()
{
  return 0x636F4C726566666FLL;
}

uint64_t sub_2119FDB48()
{
  return 0x794D65676E616863;
}

uint64_t sub_2119FDB6C()
{
  return 0x654D65676E616863;
}

unint64_t sub_2119FDB90()
{
  return 0xD000000000000012;
}

unint64_t sub_2119FDBAC()
{
  return 0xD000000000000019;
}

uint64_t sub_2119FDBE8()
{
  return 0x724665766F6D6572;
}

uint64_t sub_2119FDC0C()
{
  return 0x6F4665766F6D6572;
}

uint64_t sub_2119FDC30()
{
  return 0x654465766F6D6572;
}

uint64_t sub_2119FDC50()
{
  return 0x744F796669746F6ELL;
}

uint64_t sub_2119FDC70()
{
  return 0x654D796669746F6ELL;
}

uint64_t sub_2119FDC88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2119FDAA4(*a1);
  v5 = v4;
  if (v3 == sub_2119FDAA4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_211A48258();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2119FDD10()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119FDAA4(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FDD70()
{
  unsigned __int8 *v0;

  sub_2119FDAA4(*v0);
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119FDDB0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_211A48318();
  sub_2119FDAA4(v1);
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FDE0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119FE124();
  *a1 = result;
  return result;
}

uint64_t sub_2119FDE38@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2119FDAA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2119FDE60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119FE124();
  *a1 = result;
  return result;
}

uint64_t sub_2119FDE84()
{
  sub_211927C68();
  return sub_211A48390();
}

uint64_t sub_2119FDEAC()
{
  sub_211927C68();
  return sub_211A4839C();
}

BOOL static FMFFeatures.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2119FDEEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2119FD998(a1, a2);
}

unint64_t sub_2119FDF04()
{
  unint64_t result;

  result = qword_254ACDA98;
  if (!qword_254ACDA98)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254ACDA98);
  }
  return result;
}

unint64_t sub_2119FDF4C()
{
  unint64_t result;

  result = qword_254ACDAA0;
  if (!qword_254ACDAA0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254ACDAA0);
  }
  return result;
}

unint64_t sub_2119FDF94()
{
  unint64_t result;

  result = qword_254ACDAA8;
  if (!qword_254ACDAA8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254ACDAA8);
  }
  return result;
}

unint64_t sub_2119FDFDC()
{
  unint64_t result;

  result = qword_254ACDAB0;
  if (!qword_254ACDAB0)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMFFeatures, &type metadata for FMFFeatures);
    atomic_store(result, (unint64_t *)&qword_254ACDAB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFFeatures.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_2119FE06C + 4 * byte_211A50221[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_2119FE0A0 + 4 * byte_211A5021C[v4]))();
}

uint64_t sub_2119FE0A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FE0A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2119FE0B0);
  return result;
}

uint64_t sub_2119FE0BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2119FE0C4);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_2119FE0C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2119FE0D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_2119FE0E0()
{
  unint64_t result;

  result = qword_254ACDAB8;
  if (!qword_254ACDAB8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50520, &type metadata for FMFFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDAB8);
  }
  return result;
}

uint64_t sub_2119FE124()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE)
    return 14;
  else
    return v0;
}

id sub_2119FE16C()
{
  void *v0;

  return objc_msgSend(v0, sel_shutdown);
}

uint64_t sub_2119FE17C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x212BE496C](v1);
}

uint64_t sub_2119FE1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2119FE230(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x212BE496C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_2119DDF30;
}

uint64_t sub_2119FE2A4()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken + 8))
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_211A478EC();
  v5 = (void *)sub_211A478EC();
  objc_msgSend(v3, sel_setString_forKey_inDomain_, v2, v4, v5);

  v6 = v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v6);
  if (result)
  {
    v8 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v10 = *v1;
    v11 = v1[1];
    v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken);
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_publicAPSToken + 8);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v0, v10, v11, v12, v13, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(_QWORD, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  objc_super v9;

  v1 = &v0[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection];
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection])
  {
    v2 = *((_QWORD *)v1 + 1);
    ObjectType = swift_getObjectType();
    v4 = *(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 16);
    swift_unknownObjectRetain();
    v4(0, ObjectType, v2);
    swift_unknownObjectRelease();
    if (*(_QWORD *)v1)
    {
      v5 = *((_QWORD *)v1 + 1);
      v6 = swift_getObjectType();
      v7 = *(void (**)(uint64_t, uint64_t))(v5 + 40);
      swift_unknownObjectRetain();
      v7(v6, v5);
      swift_unknownObjectRelease();
    }
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMAPSConnectionHandler();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_2119FE5C4()
{
  return sub_211915A18((uint64_t)&unk_24CCCD060, (uint64_t)sub_2119FEE8C, (uint64_t)&unk_24CCCD078);
}

uint64_t sub_2119FE5E0(uint64_t result)
{
  uint64_t v1;
  uint64_t ObjectType;
  void (*v3)(_QWORD, uint64_t, uint64_t);

  if (*(_QWORD *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection))
  {
    v1 = *(_QWORD *)(result + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_connection + 8);
    ObjectType = swift_getObjectType();
    v3 = *(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 32);
    swift_unknownObjectRetain();
    v3(0, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

id FMAPSConnectionHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FMAPSConnectionHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMAPSConnectionHandler.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_211920364(a2, a3);
}

void FMAPSConnectionHandler.connection(_:didReceiveToken:forTopic:identifier:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_2119FE7F4(a2, a3);
}

uint64_t FMAPSConnectionHandler.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_21191C8C0(a2, a3, a4);
}

void sub_2119FE7F4(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  uint8_t *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  id v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t aBlock[6];
  uint64_t v51;

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v10, v11);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    v49 = v3;
    v17 = sub_211A47724();
    v18 = sub_211A47D30();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = *(_QWORD *)&v49[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic];
      v22 = *(_QWORD *)&v49[OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topic + 8];
      swift_bridgeObjectRetain();
      v51 = sub_211950A9C(v21, v22, aBlock);
      sub_211A47E2C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v17, v18, "FMAPSConnectionHandler: Topic APS Token was nil for %s.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v20, -1, -1);
      MEMORY[0x212BE48A0](v19, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v47 = v13;
    v48 = v12;
    v23 = (void *)sub_211A47160();
    if (qword_254AC7B80 != -1)
      swift_once();
    v49 = v9;
    v24 = sub_211A47748();
    sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
    v25 = v23;
    v26 = sub_211A47724();
    v27 = sub_211A47D30();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v45 = v3;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      v46 = v6;
      v44 = (_QWORD *)v30;
      *(_DWORD *)v29 = 138412290;
      aBlock[0] = (uint64_t)v25;
      v31 = v25;
      sub_211A47E2C();
      v32 = v44;
      *v44 = v25;

      _os_log_impl(&dword_21190D000, v26, v27, "FMAPSConnectionHandler: Topic APS Token received %@.", v29, 0xCu);
      sub_211958C38(&qword_254AC8868);
      swift_arrayDestroy();
      v6 = v46;
      MEMORY[0x212BE48A0](v32, -1, -1);
      v33 = v29;
      v3 = v45;
      MEMORY[0x212BE48A0](v33, -1, -1);

    }
    else
    {

    }
    v34 = v25;
    v35 = objc_msgSend(v25, sel_fm_hexString);
    v36 = sub_211A47910();
    v38 = v37;

    v39 = (_QWORD *)swift_allocObject();
    v39[2] = v3;
    v39[3] = v36;
    v39[4] = v38;
    aBlock[4] = (uint64_t)sub_2119FEE98;
    aBlock[5] = (uint64_t)v39;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCD118;
    v40 = _Block_copy(aBlock);
    v41 = v3;
    sub_211A477B4();
    v51 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v42 = v49;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v15, v42, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v5);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
    swift_release();
  }
}

uint64_t sub_2119FED38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x212BE496C](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_2119FED90(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:publicToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of FMAPSConnectionHandlerDelegate.connectionHandler(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_2119FEE00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t method lookup function for FMAPSConnectionHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FMAPSConnectionHandler.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t sub_2119FEE68()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2119FEE8C()
{
  uint64_t v0;

  return sub_2119FE5E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2119FEE98()
{
  uint64_t *v0;

  return sub_21190FECC(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC7FMFCore22FMAPSConnectionHandler_topicAPSToken, (uint64_t (*)(uint64_t))sub_2119FE2A4);
}

uint64_t sub_2119FEEC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2119FEF14()
{
  void *v0;
  char v1;

  v0 = (void *)sub_211A478EC();
  v1 = MGGetBoolAnswer();

  byte_254ACDB90 = v1;
}

uint64_t sub_2119FEF54()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMLocalize()
{
  return objc_opt_self();
}

uint64_t sub_2119FEF84(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  sub_211A4794C();
  v4 = sub_21194FDB4();
  v5 = MEMORY[0x24BEE0D00];
  v27 = v4;
  v28 = v4;
  v25 = MEMORY[0x24BEE0D00];
  v26 = v4;
  v6 = sub_211A47E68();
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_211958C38(&qword_254ACC560);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_211A49C40;
  *(_QWORD *)(v9 + 56) = v5;
  v10 = sub_2119512B0();
  v29 = a1;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 96) = v5;
  *(_QWORD *)(v9 + 104) = v10;
  *(_QWORD *)(v9 + 64) = v10;
  *(_QWORD *)(v9 + 72) = v6;
  *(_QWORD *)(v9 + 80) = v8;
  swift_bridgeObjectRetain();
  v11 = sub_211A4791C();
  v13 = v12;
  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata, v25, v26, v27, v28);
  v17 = sub_211A46FE0();
  v19 = v18;

  if (v17 == v11 && v19 == v13)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_211A4A230;
    *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v22 + 64) = v10;
    *(_QWORD *)(v22 + 32) = v29;
    *(_QWORD *)(v22 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_211A4791C();
    v23 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    v17 = sub_211A46FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v17;
  }
  v20 = sub_211A48258();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_8;
  v21 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v21 = v17 & 0xFFFFFFFFFFFFLL;
  if (!v21)
    goto LABEL_8;
  return v17;
}

uint64_t sub_2119FF25C()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  if (qword_254AC7B78 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_211A46FE0();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t FMFDevice.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFDevice.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFDevice.autoMeCapable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_2119FF400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21197443C(*a1, *a2);
}

uint64_t sub_2119FF40C()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FF4A4()
{
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119FF518()
{
  sub_211A48318();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FF5AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119FF9AC();
  *a1 = result;
  return result;
}

void sub_2119FF5D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE200000000000000;
  v4 = 0xE400000000000000;
  v5 = 1701667182;
  if (v2 != 1)
  {
    v5 = 0x6143654D6F747561;
    v4 = 0xED0000656C626170;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 25705;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2119FF630@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2119FF9AC();
  *a1 = result;
  return result;
}

uint64_t sub_2119FF654()
{
  sub_211931DD8();
  return sub_211A48390();
}

uint64_t sub_2119FF67C()
{
  sub_211931DD8();
  return sub_211A4839C();
}

unint64_t FMFDevice.debugDescription.getter()
{
  sub_211A47F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  return 0xD000000000000012;
}

uint64_t _s7FMFCore9FMFDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  char v9;
  uint64_t result;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_211A48258(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6)
      return v4 ^ v7 ^ 1u;
    v12 = sub_211A48258();
    result = 0;
    if ((v12 & 1) != 0)
      return v4 ^ v7 ^ 1u;
  }
  return result;
}

uint64_t assignWithCopy for FMFDevice(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FMFDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

unint64_t sub_2119FF968()
{
  unint64_t result;

  result = qword_254ACDC48;
  if (!qword_254ACDC48)
  {
    result = MEMORY[0x212BE47C8](&unk_211A507E0, &type metadata for FMFDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACDC48);
  }
  return result;
}

uint64_t sub_2119FF9AC()
{
  unint64_t v0;

  v0 = sub_211A480F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_2119FF9F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2119FFA28 + 4 * byte_211A50860[a1]))(0x6E6F697461636F6CLL, 0xE800000000000000);
}

uint64_t sub_2119FFA28()
{
  return 0x656475746974616CLL;
}

uint64_t sub_2119FFA3C()
{
  return 0x64757469676E6F6CLL;
}

unint64_t sub_2119FFA58()
{
  return 0xD000000000000012;
}

unint64_t sub_2119FFA78()
{
  return 0xD000000000000010;
}

void sub_2119FFA94()
{
  uint64_t v0;

}

uint64_t sub_2119FFAA4()
{
  return type metadata accessor for FMFMyLocationRequest();
}

FMFCore::FMFConfigValue_optional __swiftcall FMFConfigValue.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  FMFCore::FMFConfigValue_optional result;
  char v5;

  v2 = v1;
  v3 = sub_211A480F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2119FFB04()
{
  return sub_211975F7C();
}

uint64_t sub_2119FFB10()
{
  sub_211A48318();
  FMFConfigValue.rawValue.getter();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

uint64_t sub_2119FFB74()
{
  FMFConfigValue.rawValue.getter();
  sub_211A4797C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2119FFBC4()
{
  sub_211A48318();
  FMFConfigValue.rawValue.getter();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  return sub_211A48348();
}

FMFCore::FMFConfigValue_optional sub_2119FFC24(Swift::String *a1)
{
  return FMFConfigValue.init(rawValue:)(*a1);
}

uint64_t sub_2119FFC30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FMFConfigValue.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t FMFLocationNotificationsURL.getter()
{
  void *v0;
  int v1;
  unint64_t v2;

  v0 = (void *)sub_211A478EC();
  v1 = MGGetSInt32Answer();

  v2 = 0xD00000000000005ELL;
  if (v1 == 9)
    v2 = 0xD000000000000056;
  if (v1 == 3)
    return 0xD00000000000005FLL;
  else
    return v2;
}

uint64_t FMFGlobalConfigStore.getter()
{
  return sub_2119FFF50(&qword_254AC7B98);
}

uint64_t FMFGlobalConfigStore.setter(uint64_t a1)
{
  return sub_2119FFFC4(a1, &qword_254AC7B98, &off_254ACDCB8);
}

uint64_t (*FMFGlobalConfigStore.modify())()
{
  if (qword_254AC7B98 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_2119FFDA8()
{
  uint64_t inited;
  uint64_t v1;
  unint64_t result;

  sub_211958C38((uint64_t *)&unk_254ACDD80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A610;
  *(_BYTE *)(inited + 32) = 8;
  v1 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 40) = 0x4034000000000000;
  *(_BYTE *)(inited + 72) = 9;
  *(_QWORD *)(inited + 104) = v1;
  *(_QWORD *)(inited + 80) = 0x404E000000000000;
  *(_BYTE *)(inited + 112) = 10;
  *(_QWORD *)(inited + 144) = v1;
  *(_QWORD *)(inited + 120) = 0x405E000000000000;
  result = sub_211939E10(inited);
  qword_254ACDCC0 = result;
  return result;
}

uint64_t FMFWaldoGlobalConfigStore.getter()
{
  return sub_2119FFF50(&qword_254AC7BA0);
}

uint64_t FMFWaldoGlobalConfigStore.setter(uint64_t a1)
{
  return sub_2119FFFC4(a1, &qword_254AC7BA0, &qword_254ACDCC0);
}

uint64_t (*FMFWaldoGlobalConfigStore.modify())()
{
  if (qword_254AC7BA0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_2119FFED4()
{
  uint64_t inited;
  unint64_t result;

  sub_211958C38((uint64_t *)&unk_254ACDD80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_BYTE *)(inited + 32) = 12;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 40) = 30;
  result = sub_211939E10(inited);
  qword_254ACDCC8 = result;
  return result;
}

uint64_t FMFDimplekeyGlobalConfigStore.getter()
{
  return sub_2119FFF50(&qword_254AC7BA8);
}

uint64_t sub_2119FFF50(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FMFDimplekeyGlobalConfigStore.setter(uint64_t a1)
{
  return sub_2119FFFC4(a1, &qword_254AC7BA8, &qword_254ACDCC8);
}

uint64_t sub_2119FFFC4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FMFDimplekeyGlobalConfigStore.modify())()
{
  if (qword_254AC7BA8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FMFWaldoGlobalConfig<A>(_:fallback:)(uint64_t a1, uint64_t a2)
{
  return sub_211915778(a1, a2);
}

uint64_t sub_211A000A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_211939F3C(*(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), &qword_254AC7BA0, &qword_254ACDCC0, a1);
}

uint64_t FMFDimplekeyGlobalConfig<A>(_:fallback:)(uint64_t a1, uint64_t a2)
{
  return sub_211915778(a1, a2);
}

uint64_t sub_211A000E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_211939F3C(*(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), &qword_254AC7BA8, &qword_254ACDCC8, a1);
}

uint64_t getEnumTagSinglePayload for FMFConfigValue(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFConfigValue(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_211A001F8 + 4 * byte_211A508B2[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_211A0022C + 4 * byte_211A508AD[v4]))();
}

uint64_t sub_211A0022C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A00234(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211A0023CLL);
  return result;
}

uint64_t sub_211A00248(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211A00250);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_211A00254(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A0025C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_211A00268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();

  sub_211923EE8(v0 + qword_254ACDCF8, &qword_254AC9200);
  v1 = v0 + qword_254ADC818;
  v2 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_211962AB8(v0 + qword_254ADC820);
  sub_211962AB8(v0 + qword_254ADC828);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_211A00350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v23 = v22;
    v6 = *(_QWORD *)(v1 + qword_254ACDCD8);
    v7 = *(_QWORD *)(v1 + qword_254ACDCD8 + 8);
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, &v23);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFServerInteractionController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v22, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = sub_211A47388();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();

  sub_211923EE8(v18 + qword_254ACDCF8, &qword_254AC9200);
  v19 = v18 + qword_254ADC818;
  v20 = sub_211A47208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  sub_211962AB8(v18 + qword_254ADC820);
  sub_211962AB8(v18 + qword_254ADC828);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_211A00640()
{
  sub_211A00350();
  return swift_deallocClassInstance();
}

void sub_211A00660(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t refreshed;
  uint64_t ObjCClassFromMetadata;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  _BOOL4 v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t ObjectType;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  int v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[6];

  v3 = v2;
  v95 = a2;
  v5 = sub_211958C38(&qword_254AC8C98);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v92 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v90 = a1;
  v91 = (char *)&v83 - v10;
  v11 = *a1;
  refreshed = type metadata accessor for FMFInitRefreshClientRequest();
  type metadata accessor for FMLocalize();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_211A46FE0();
  v18 = v17;

  v19 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  v89 = sub_211A46FE0();
  v97 = v20;

  v21 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  v88 = sub_211A46FE0();
  v96 = v22;

  if (qword_254AC7B80 != -1)
    swift_once();
  v23 = sub_211A47748();
  v24 = sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
  swift_retain();
  v94 = v24;
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  v27 = os_log_type_enabled(v25, v26);
  v93 = v16;
  if (!v27)
  {

    swift_release();
    if (v11 == refreshed)
      goto LABEL_7;
LABEL_8:
    if (!v95)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v29 = (void *)sub_211A470D0();
    v30 = objc_msgSend(v29, sel_domain);
    v31 = sub_211A47910();
    v33 = v32;

    if (v31 == sub_211A47910() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v35 = sub_211A48258();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
      {
LABEL_24:

        goto LABEL_25;
      }
    }
    v36 = v18;
    if (v11 == refreshed
      || objc_msgSend(v29, sel_code) == (id)-1001
      || objc_msgSend(v29, sel_code) == (id)-999
      || objc_msgSend(v29, sel_code) == (id)-1005)
    {
      goto LABEL_24;
    }
    v45 = v29;
    v46 = sub_211A47724();
    v47 = sub_211A47D30();
    v48 = v47;
    v49 = os_log_type_enabled(v46, v47);
    v87 = v45;
    if (v49)
    {
      v86 = v48;
      v50 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      v99[0] = v85;
      v84 = v50;
      *(_DWORD *)v50 = 136315138;
      v51 = objc_msgSend(v45, sel_debugDescription, v50 + 4);
      v52 = sub_211A47910();
      v53 = v45;
      v55 = v54;

      v56 = v52;
      v36 = v18;
      v98 = sub_211950A9C(v56, v55, v99);
      sub_211A47E2C();

      swift_bridgeObjectRelease();
      v57 = v84;
      _os_log_impl(&dword_21190D000, v46, (os_log_type_t)v86, "FMFServerInteractionController: error received: %s", v84, 0xCu);
      v58 = v85;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v58, -1, -1);
      MEMORY[0x212BE48A0](v57, -1, -1);

    }
    else
    {

    }
    swift_getErrorValue();
    if (sub_211979180(v99[4], v99[5]))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
      v93 = sub_211A46FE0();
      v36 = v60;

      v61 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
      v62 = sub_211A46FE0();
      v97 = v63;

      v64 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
      v65 = sub_211A46FE0();
      v67 = v66;

    }
    else
    {
      v67 = v96;
      v65 = v88;
      v62 = v89;
    }
    v68 = sub_211A4713C();
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
    v70 = (uint64_t)v91;
    v69(v91, 1, 1, v68);
    v71 = (uint64_t)v92;
    v72 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v69)(v92, 1, 1, v68);
    if (((*(uint64_t (**)(uint64_t))(qword_254ADC680 + *v90 + 192))(v72) & 1) != 0)
      v73 = 2;
    else
      v73 = 3;
    type metadata accessor for FMFAlert();
    v74 = (_QWORD *)swift_allocObject();
    v74[3] = 0;
    swift_unknownObjectWeakInit();
    v74[4] = 0;
    v74[5] = 0;
    v74[6] = v93;
    v74[7] = v36;
    v75 = v97;
    v74[8] = v62;
    v74[9] = v75;
    v74[10] = v65;
    v74[11] = v67;
    v74[12] = 0;
    v74[13] = 0;
    sub_211964BF4(v70, (uint64_t)v74 + OBJC_IVAR____TtC7FMFCore8FMFAlert_okButtonURL);
    sub_211964BF4(v71, (uint64_t)v74 + OBJC_IVAR____TtC7FMFCore8FMFAlert_cancelButtonURL);
    *((_BYTE *)v74 + OBJC_IVAR____TtC7FMFCore8FMFAlert_alertType) = v73;
    v76 = MEMORY[0x212BE496C](v3 + qword_254ADC820);
    if (v76)
    {
      v77 = v76;
      swift_retain();
      v78 = sub_211A47724();
      v79 = sub_211A47D30();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v80 = 0;
        _os_log_impl(&dword_21190D000, v78, v79, "FMFManager: didReceive serverAlert", v80, 2u);
        MEMORY[0x212BE48A0](v80, -1, -1);
      }

      swift_beginAccess();
      if (MEMORY[0x212BE496C](v77 + 32))
      {
        v81 = *(_QWORD *)(v77 + 40);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v81 + 104))(v77, v74, ObjectType, v81);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        goto LABEL_23;
      }
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }

    return;
  }
  v28 = swift_slowAlloc();
  *(_DWORD *)v28 = 67109376;
  LODWORD(v99[0]) = v11 == refreshed;
  sub_211A47E2C();
  *(_WORD *)(v28 + 8) = 1024;
  LODWORD(v99[0]) = *(unsigned __int8 *)(v3 + qword_254ACDD00);
  sub_211A47E2C();
  swift_release();
  _os_log_impl(&dword_21190D000, v25, v26, "FMFServerInteractionController: createNetworkAlertIfNeeded: %{BOOL}d %{BOOL}d", (uint8_t *)v28, 0xEu);
  MEMORY[0x212BE48A0](v28, -1, -1);

  if (v11 != refreshed)
    goto LABEL_8;
LABEL_7:
  if ((*(_BYTE *)(v3 + qword_254ACDD00) & 1) != 0)
    goto LABEL_8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v99[0]) = 4;
  v37 = sub_2119C0574((unsigned __int8 *)v99);
  v38 = MEMORY[0x212BE496C](v3 + qword_254ADC820);
  if (v38)
  {
    v39 = v38;
    swift_retain();
    v40 = sub_211A47724();
    v41 = sub_211A47D30();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_21190D000, v40, v41, "FMFManager: didReceive serverAlert", v42, 2u);
      MEMORY[0x212BE48A0](v42, -1, -1);
    }

    swift_beginAccess();
    if (MEMORY[0x212BE496C](v39 + 32))
    {
      v43 = *(_QWORD *)(v39 + 40);
      v44 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v43 + 104))(v39, v37, v44, v43);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
LABEL_23:
      swift_unknownObjectRelease();
      return;
    }
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void sub_211A01124()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211A01150()
{
  return type metadata accessor for FMFServerInteractionController();
}

uint64_t sub_211A01158()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211A0118C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

unint64_t sub_211A011B8()
{
  unint64_t result;

  result = qword_254ACDD68;
  if (!qword_254ACDD68)
  {
    result = MEMORY[0x212BE47C8](&unk_211A52118, &type metadata for FMFBaseResponseError);
    atomic_store(result, (unint64_t *)&qword_254ACDD68);
  }
  return result;
}

uint64_t sub_211A011FC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211A01230()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_211A0126C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_211A01298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "FMFMyLocationController: Restarting to update my location", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  v6 = *(void **)(v1 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_locationManager);
  objc_msgSend(v6, sel_stopUpdatingLocation);
  return objc_msgSend(v6, sel_startUpdatingLocation);
}

uint64_t sub_211A01390(void *a1, void *a2, char a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  id v21;
  _QWORD v23[2];
  _QWORD aBlock[6];

  v7 = sub_211A4779C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A477D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue];
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = v3;
  *(_QWORD *)(v17 + 32) = a1;
  *(_QWORD *)(v17 + 40) = a2;
  aBlock[4] = sub_211A03320;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD788;
  v18 = _Block_copy(aBlock);
  v19 = v3;
  v20 = a1;
  v21 = a2;
  sub_211A477B4();
  v23[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v11, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

void sub_211A0158C(char a1, _BYTE *a2, id a3, void *a4)
{
  double v7;
  double v8;
  void *v9;
  double v10;
  id v11;
  double v12;
  id v13;
  _QWORD *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(_QWORD *, id (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t);
  id v22;
  id v23;
  _BYTE *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;

  if ((a1 & 1) != 0)
    goto LABEL_8;
  if ((a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold + 8] & 1) != 0
    || (v7 = *(double *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold],
        objc_msgSend(a3, sel_horizontalAccuracy),
        v7 > v8))
  {
    v9 = *(void **)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    if (!v9 || (a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold + 8] & 1) != 0)
      goto LABEL_8;
    v10 = *(double *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
    v11 = v9;
    objc_msgSend(v11, sel_distanceFromLocation_, a3);
    if (v12 > v10)
    {

LABEL_8:
      type metadata accessor for FMFMyLocationRequest();
      *(_QWORD *)(swift_allocObject() + qword_254ADC7D0) = a4;
      v13 = a4;
      v14 = sub_21193BD18();
      v15 = objc_allocWithZone(MEMORY[0x24BE2FE68]);
      v16 = (void *)sub_211A478EC();
      v17 = objc_msgSend(v15, sel_initWithDescription_andTimeout_, v16, 120.0);

      v18 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController + 24];
      v19 = *(_QWORD *)&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController + 32];
      sub_211931DB4(&a2[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_interactionController], v18);
      v20 = (_QWORD *)swift_allocObject();
      v20[2] = a2;
      v20[3] = a3;
      v20[4] = v17;
      v20[5] = v13;
      v21 = *(void (**)(_QWORD *, id (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t))(v19 + 72);
      v22 = a3;
      v23 = v13;
      v24 = a2;
      v33 = v17;
      v21(v14, sub_211A0336C, v20, v18, v19);
      swift_release();
      objc_msgSend(v33, sel_wait);
      swift_release();
LABEL_9:

      return;
    }
    if (qword_254AC7B80 != -1)
      swift_once();
    v29 = sub_211A47748();
    sub_21194F3E0(v29, (uint64_t)qword_254ADC7E8);
    v30 = a3;
    v33 = v11;
    v26 = sub_211A47724();
    v31 = sub_211A47D30();
    if (!os_log_type_enabled(v26, v31))
    {

      goto LABEL_9;
    }
    v32 = swift_slowAlloc();
    *(_DWORD *)v32 = 134349312;
    objc_msgSend(v33, sel_distanceFromLocation_, v30);
    sub_211A47E2C();

    *(_WORD *)(v32 + 12) = 2050;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v26, v31, "FMFMyLocationController: Can‘t publish location because distance (%{public}f) less than threshold (%{public}f)", (uint8_t *)v32, 0x16u);
    MEMORY[0x212BE48A0](v32, -1, -1);

  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v25 = sub_211A47748();
    sub_21194F3E0(v25, (uint64_t)qword_254ADC7E8);
    v33 = a3;
    v26 = sub_211A47724();
    v27 = sub_211A47D30();
    if (!os_log_type_enabled(v26, v27))
    {

      goto LABEL_9;
    }
    v28 = swift_slowAlloc();
    *(_DWORD *)v28 = 134349312;
    objc_msgSend(v33, sel_horizontalAccuracy);
    sub_211A47E2C();

    *(_WORD *)(v28 + 12) = 2050;
    sub_211A47E2C();
    _os_log_impl(&dword_21190D000, v26, v27, "FMFMyLocationController: Can‘t publish location because accuracy (%{public}f) is worse than threshold (%{public}f)", (uint8_t *)v28, 0x16u);
    MEMORY[0x212BE48A0](v28, -1, -1);
  }

}

id sub_211A01A24(uint64_t a1, void *a2, char *a3, void *a4, void *a5, void *a6)
{
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  void *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  char *v40;
  char *v41;
  char *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  uint64_t v69;
  uint64_t *v70;
  double v71;
  void *v72;
  double v73;
  uint64_t v74;
  id v75;
  char *v76;
  NSObject *v77;
  int v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t ObjectType;
  id v91;
  id v92;
  unint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[45];
  uint64_t v105[45];
  uint64_t v106;
  _OWORD v107[19];
  _QWORD v108[45];
  uint64_t v109[46];

  v100 = a4;
  v11 = (int *)type metadata accessor for FMFLocation();
  v101 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_211A4722C();
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v94 - v24;
  if (a2)
  {
    v96 = v14;
    v97 = v23;
    if (qword_254AC7B80 != -1)
      swift_once();
    v26 = sub_211A47748();
    v27 = sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
    v28 = a2;
    v29 = a2;
    v98 = v27;
    v30 = sub_211A47724();
    v31 = sub_211A47D24();
    v32 = a5;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v95 = a3;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v99 = a5;
      v36 = v35;
      v109[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v94 = v25;
      v108[0] = a2;
      sub_211958C38(&qword_254ACDE90);
      v37 = sub_211A47E08();
      v108[0] = sub_211950A9C(v37, v38, v109);
      v25 = v94;
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v30, v31, "Error while getting my location details. Error - %s", v34, 0xCu);
      swift_arrayDestroy();
      v32 = v99;
      MEMORY[0x212BE48A0](v36, -1, -1);
      v39 = v34;
      a3 = v95;
      MEMORY[0x212BE48A0](v39, -1, -1);
    }
    else
    {

    }
    v69 = sub_211A46F08();
    v109[3] = v69;
    v109[4] = sub_211910908((unint64_t *)&qword_254AC81D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE319D0], MEMORY[0x24BE319B8]);
    v70 = sub_211969B08(v109);
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v70, *MEMORY[0x24BE319C0], v69);
    LOBYTE(v69) = MEMORY[0x212BE2D10](v109);
    sub_211931C34((uint64_t)v109);
    if ((v69 & 1) == 0)
      return objc_msgSend(v32, sel_signal);
    v71 = sub_21196F528(v107);
    *((_QWORD *)v25 + 3) = 0;
    v25[32] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v102 + 56))(&v25[v11[8]], 1, 1, v103, v71);
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 0;
    sub_21192DD68((uint64_t)v107, (uint64_t)v108, &qword_254ACCB40);
    v72 = v100;
    v108[38] = v100;
    LOBYTE(v108[39]) = 0;
    v108[43] = 0;
    LOBYTE(v108[44]) = 0;
    memset(&v108[40], 0, 18);
    memcpy(v109, v108, 0x161uLL);
    nullsub_1(v109, v73);
    sub_21192DD68((uint64_t)v109, (uint64_t)&v25[v11[11]], &qword_254AC8CD0);
    v25[33] = 0;
    v25[v11[9]] = 0;
    v25[v11[10]] = 0;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v101 + 56))(v25, 0, 1, v11);
    v74 = (uint64_t)&a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation];
    swift_beginAccess();
    v75 = v72;
    sub_211911A68((uint64_t)v25, v74);
    swift_endAccess();
    v76 = a3;
    v77 = sub_211A47724();
    v78 = sub_211A47D30();
    if (!os_log_type_enabled(v77, (os_log_type_t)v78))
    {

      goto LABEL_19;
    }
    LODWORD(v102) = v78;
    v79 = (uint8_t *)swift_slowAlloc();
    v80 = swift_slowAlloc();
    v106 = v80;
    *(_DWORD *)v79 = 136315138;
    v81 = v97;
    sub_211921C94(v74, v97);
    v82 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v101 + 48))(v81, 1, v11);
    v99 = v32;
    v103 = v80;
    if (v82)
    {
      v83 = 7104878;
      sub_211921C54(v81);
    }
    else
    {
      v84 = (uint64_t)v96;
      sub_21193324C(v81, (uint64_t)v96);
      sub_211921C54(v81);
      sub_21192DD68(v84 + v11[11], (uint64_t)v104, &qword_254AC8CD0);
      sub_21192DD68((uint64_t)v104, (uint64_t)v105, &qword_254AC8CD0);
      if (sub_2119724C8((uint64_t)v105) != 1)
      {
        v91 = (id)v105[38];
        sub_211933290(v84);
        v92 = objc_msgSend(v91, sel_description);

        v83 = sub_211A47910();
        v85 = v93;

        goto LABEL_18;
      }
      v83 = 7104878;
      sub_211933290(v84);
    }
    v85 = 0xE300000000000000;
LABEL_18:
    v86 = v102;
    v105[0] = sub_211950A9C(v83, v85, &v106);
    sub_211A47E2C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v77, v86, "FMFMyLocationController: Updated non-server adjusted location to %s", v79, 0xCu);
    v87 = v103;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v87, -1, -1);
    MEMORY[0x212BE48A0](v79, -1, -1);

    v32 = v99;
LABEL_19:
    v88 = &v76[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate];
    if (MEMORY[0x212BE496C](&v76[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate]))
    {
      v89 = *((_QWORD *)v88 + 1);
      ObjectType = swift_getObjectType();
      sub_211921C94(v74, (uint64_t)v25);
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 8))(v25, ObjectType, v89);
      swift_unknownObjectRelease();
      sub_211921C54((uint64_t)v25);
    }
    return objc_msgSend(v32, sel_signal);
  }
  if (!a1)
    return objc_msgSend(a5, sel_signal);
  v40 = &a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
  *(_QWORD *)v40 = *(_QWORD *)(a1 + 376);
  v40[8] = 0;
  v41 = &a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
  *(_QWORD *)v41 = *(_QWORD *)(a1 + 384);
  v41[8] = 0;
  v42 = a3;
  v43 = *(void **)&a3[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
  v44 = v100;
  *(_QWORD *)&v42[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = v100;
  swift_retain();
  v100 = v44;

  v45 = *(void **)&v42[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation];
  *(_QWORD *)&v42[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_unshiftedLocation] = a6;
  v46 = a6;

  v47 = *(void **)(a1 + 320);
  sub_21192DD68(a1 + 16, (uint64_t)v105, &qword_254ACCB40);
  v48 = *(_QWORD *)(a1 + 344);
  v98 = *(_QWORD *)(a1 + 336);
  v99 = a5;
  LOWORD(v44) = *(_WORD *)(a1 + 352);
  v49 = *(_QWORD *)(a1 + 360);
  *((_QWORD *)v25 + 3) = 0;
  v25[32] = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(&v25[v11[8]], 1, 1, v103);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = 0;
  sub_21192DD68((uint64_t)v105, (uint64_t)v108, &qword_254ACCB40);
  v108[38] = v47;
  LOBYTE(v108[39]) = 0;
  v108[40] = v98;
  v108[41] = v48;
  LOWORD(v108[42]) = (_WORD)v44;
  v108[43] = v49;
  LOBYTE(v108[44]) = 0;
  memcpy(v109, v108, 0x161uLL);
  nullsub_1(v109, v50);
  sub_21192DD68((uint64_t)v109, (uint64_t)&v25[v11[11]], &qword_254AC8CD0);
  v25[33] = 0;
  v25[v11[9]] = 0;
  v25[v11[10]] = 0;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v101 + 56))(v25, 0, 1, v11);
  v51 = (uint64_t)&v42[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation];
  swift_beginAccess();
  v52 = v47;
  sub_2119A18DC(v105);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_211911A68((uint64_t)v25, v51);
  swift_endAccess();
  v53 = (_QWORD *)swift_allocObject();
  v55 = v99;
  v54 = v100;
  v53[2] = v42;
  v53[3] = v54;
  v53[4] = a1;
  v53[5] = v55;
  v56 = v52;
  swift_retain();
  v57 = v54;
  v58 = v56;
  v42;
  v59 = v55;
  sub_211A47220();
  v60 = sub_211A47214();
  v62 = v61;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v18, v103);
  type metadata accessor for FMLocationShiftingRequest();
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = v58;
  v63[3] = v60;
  v63[4] = v62;
  sub_211958C38((uint64_t *)&unk_254ACDE80);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_211A50A90;
  *(_QWORD *)(v64 + 32) = v63;
  v104[0] = v64;
  sub_211A47AC0();
  v65 = v104[0];
  v66 = (_QWORD *)swift_allocObject();
  v66[2] = v58;
  v66[3] = sub_211A033B4;
  v66[4] = v53;
  v67 = v58;
  swift_retain();
  swift_retain();
  sub_21195D1C4(v65, (uint64_t)sub_211A033F0, (uint64_t)v66);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return (id)swift_release();
}

id sub_211A0242C(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  id v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  id v59;
  _BYTE v60[360];
  _QWORD v61[45];
  uint64_t v62;
  uint64_t v63[38];
  _QWORD v64[45];
  _BYTE v65[368];

  v59 = a5;
  v57 = a2;
  v8 = (int *)type metadata accessor for FMFLocation();
  v56 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8, v9);
  v54 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v55 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v58 = (char *)&v54 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v54 - v19;
  v21 = a1;
  if (!a1)
    v21 = a3;
  sub_21192DD68(a4 + 16, (uint64_t)v63, &qword_254ACCB40);
  v22 = *(_QWORD *)(a4 + 336);
  v23 = *(_QWORD *)(a4 + 344);
  v24 = *(_WORD *)(a4 + 352);
  *((_QWORD *)v20 + 3) = 0;
  v20[32] = 1;
  v25 = &v20[v8[8]];
  v26 = sub_211A4722C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 0;
  sub_21192DD68((uint64_t)v63, (uint64_t)v64, &qword_254ACCB40);
  v64[38] = v21;
  LOBYTE(v64[39]) = 0;
  v64[40] = v22;
  v64[41] = v23;
  LOWORD(v64[42]) = v24;
  v64[43] = 0;
  LOBYTE(v64[44]) = 0;
  memcpy(v65, v64, 0x161uLL);
  nullsub_1(v65, v27);
  sub_21192DD68((uint64_t)v65, (uint64_t)&v20[v8[11]], &qword_254AC8CD0);
  v20[33] = 0;
  v20[v8[9]] = 0;
  v20[v8[10]] = 0;
  v28 = v56;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v56 + 56))(v20, 0, 1, v8);
  v29 = v57;
  v30 = (uint64_t)v57 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation;
  swift_beginAccess();
  v31 = a1;
  sub_2119A18DC(v63);
  swift_bridgeObjectRetain();
  sub_211911A68((uint64_t)v20, v30);
  swift_endAccess();
  if (qword_254AC7B80 != -1)
    swift_once();
  v32 = sub_211A47748();
  sub_21194F3E0(v32, (uint64_t)qword_254ADC7E8);
  v33 = v29;
  v34 = sub_211A47724();
  v35 = sub_211A47D30();
  v36 = os_log_type_enabled(v34, v35);
  v37 = (uint64_t)v58;
  if (!v36)
  {

    goto LABEL_13;
  }
  v38 = (uint8_t *)swift_slowAlloc();
  v39 = swift_slowAlloc();
  v62 = v39;
  *(_DWORD *)v38 = 136315138;
  sub_211921C94(v30, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v28 + 48))(v37, 1, v8))
  {
    v40 = 7104878;
    sub_211921C54(v37);
  }
  else
  {
    v41 = v37;
    v42 = v37;
    v43 = v54;
    sub_21193324C(v41, v54);
    sub_211921C54(v42);
    sub_21192DD68(v43 + v8[11], (uint64_t)v60, &qword_254AC8CD0);
    sub_21192DD68((uint64_t)v60, (uint64_t)v61, &qword_254AC8CD0);
    if (sub_2119724C8((uint64_t)v61) != 1)
    {
      v51 = (id)v61[38];
      sub_211933290(v43);
      v52 = objc_msgSend(v51, sel_description);

      v40 = sub_211A47910();
      v44 = v53;

      goto LABEL_12;
    }
    v40 = 7104878;
    sub_211933290(v43);
  }
  v44 = 0xE300000000000000;
LABEL_12:
  v61[0] = sub_211950A9C(v40, v44, &v62);
  sub_211A47E2C();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21190D000, v34, v35, "FMFMyLocationController: Updated server adjusted location to %s", v38, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x212BE48A0](v39, -1, -1);
  MEMORY[0x212BE48A0](v38, -1, -1);

LABEL_13:
  v45 = &v33[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate];
  if (MEMORY[0x212BE496C](&v33[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate]))
  {
    v46 = *((_QWORD *)v45 + 1);
    ObjectType = swift_getObjectType();
    v48 = v30;
    v49 = v55;
    sub_211921C94(v48, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v49, ObjectType, v46);
    swift_unknownObjectRelease();
    sub_211921C54(v49);
  }
  return objc_msgSend(v59, sel_signal);
}

uint64_t sub_211A02934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocationUpdatingQueue);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_211A03280;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD698;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v17 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, v3, MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v11, v6, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_release();
  return swift_release();
}

void sub_211A02B40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v32[24];

  v2 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a1 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x212BE496C](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = type metadata accessor for FMFLocation();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = (uint64_t)v8 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myLocation;
    swift_beginAccess();
    sub_211911A68((uint64_t)v5, v10);
    swift_endAccess();

  }
  swift_beginAccess();
  v11 = MEMORY[0x212BE496C](v6);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = type metadata accessor for FMFLocation();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    v14 = (uint64_t)v12 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_myUnshiftedLocation;
    swift_beginAccess();
    sub_211911A68((uint64_t)v5, v14);
    swift_endAccess();

  }
  swift_beginAccess();
  v15 = (char *)MEMORY[0x212BE496C](v6);
  if (v15)
  {
    v16 = &v15[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_accuracyThreshold];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;

  }
  swift_beginAccess();
  v17 = (char *)MEMORY[0x212BE496C](v6);
  if (v17)
  {
    v18 = &v17[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_distanceThreshold];
    *(_QWORD *)v18 = 0;
    v18[8] = 1;

  }
  swift_beginAccess();
  v19 = (char *)MEMORY[0x212BE496C](v6);
  if (v19)
  {
    v20 = *(void **)&v19[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation];
    *(_QWORD *)&v19[OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_currentMyLocation] = 0;

  }
  swift_beginAccess();
  v21 = MEMORY[0x212BE496C](v6);
  if (v21)
  {
    v22 = (void *)v21;
    v23 = v21 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate;
    v24 = MEMORY[0x212BE496C](v21 + OBJC_IVAR____TtC7FMFCore23FMFMyLocationController_delegate);
    v25 = *(_QWORD *)(v23 + 8);

    if (v24)
    {
      ObjectType = swift_getObjectType();
      v27 = type metadata accessor for FMFLocation();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 1, 1, v27);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 8))(v5, ObjectType, v25);
      swift_unknownObjectRelease();
      sub_211921C54((uint64_t)v5);
    }
  }
  if (qword_254AC7B80 != -1)
    swift_once();
  v28 = sub_211A47748();
  sub_21194F3E0(v28, (uint64_t)qword_254ADC7E8);
  v29 = sub_211A47724();
  v30 = sub_211A47D30();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_21190D000, v29, v30, "FMFMyLocationController: Invalidated cached location data", v31, 2u);
    MEMORY[0x212BE48A0](v31, -1, -1);
  }

}

id FMFMyLocationController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FMFMyLocationController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FMFMyLocationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFMyLocationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void FMFMyLocationController.locationManager(_:didFailWithError:)(uint64_t a1, void *a2)
{
  sub_211A03068(a2);
}

Swift::Void __swiftcall FMFMyLocationController.locationManager(_:didChangeAuthorization:)(CLLocationManager _, CLAuthorizationStatus didChangeAuthorization)
{
  sub_21191881C((int)_._internal);
}

Swift::Void __swiftcall FMFMyLocationController.locationManager(_:didUpdateLocations:)(CLLocationManager _, Swift::OpaquePointer didUpdateLocations)
{
  sub_21192DF4C((unint64_t)_._internal);
}

void sub_211A03068(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = a1;
  v4 = a1;
  oslog = sub_211A47724();
  v5 = sub_211A47D24();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_211A482DC();
    sub_211950A9C(v8, v9, &v11);
    sub_211A47E2C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21190D000, oslog, v5, "FMFMyLocationController: location manager failed with error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v7, -1, -1);
    MEMORY[0x212BE48A0](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t dispatch thunk of FMFMyLocationControllerDelegate.didReceive(myLocation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_211A03248()
{
  return type metadata accessor for FMFMyLocationController();
}

uint64_t method lookup function for FMFMyLocationController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_211A0325C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_211A03280()
{
  uint64_t v0;

  sub_211A02B40(v0);
}

uint64_t sub_211A03288()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_211A032B8()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_211A032EC()
{
  id *v0;

  return swift_deallocObject();
}

void sub_211A03320()
{
  uint64_t v0;

  sub_211A0158C(*(_BYTE *)(v0 + 16), *(_BYTE **)(v0 + 24), *(id *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_211A03330()
{
  id *v0;

  return swift_deallocObject();
}

id sub_211A0336C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_211A01A24(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_211A03378()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

id sub_211A033B4(void *a1)
{
  uint64_t v1;

  return sub_211A0242C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_211A033C4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t FMFNotNowAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2119C01B0(a1, v2 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  *(_BYTE *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFNotNowAction.init(friend:)(uint64_t a1)
{
  uint64_t v1;

  sub_2119C01B0(a1, v1 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_211A03470()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMFFriend();
  sub_211A48054();
  return 0;
}

void FMFNotNowAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFNotNowAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211A035E4()
{
  uint64_t v0;

  return sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
}

uint64_t FMFNotNowAction.deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  return v0;
}

uint64_t FMFNotNowAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore15FMFNotNowAction_friend);
  return swift_deallocClassInstance();
}

uint64_t sub_211A03648()
{
  return type metadata accessor for FMFNotNowAction();
}

uint64_t type metadata accessor for FMFNotNowAction()
{
  uint64_t result;

  result = qword_254ACDEC0;
  if (!qword_254ACDEC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for FMFNotNowAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFNotNowAction.__allocating_init(friend:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

id sub_211A036B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;
  void *v6;

  v5 = sub_211A47910();
  a4(v5);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  return v6;
}

id FMPhoneNumberUtil.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FMPhoneNumberUtil.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for FMPhoneNumberUtil()
{
  return objc_opt_self();
}

id FMPhoneNumberUtil.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_211A039B4()
{
  uint64_t result;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  result = CPPhoneNumberCopyHomeCountryCode();
  if (!result)
  {
    __break(1u);
    goto LABEL_27;
  }
  v1 = (void *)result;
  v2 = sub_211A47910();
  v4 = v3;

  v5 = v4 & 0x2000000000000000;
  v6 = HIBYTE(v4) & 0xF;
  v7 = v2 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v8 = HIBYTE(v4) & 0xF;
  else
    v8 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    result = CPPhoneNumberCopyActiveCountryCode();
    if (result)
    {
      v9 = (void *)result;
      v2 = sub_211A47910();
      v11 = v10;

      v5 = v11 & 0x2000000000000000;
      v6 = HIBYTE(v11) & 0xF;
      v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_8;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_8:
  if (v5)
    v12 = v6;
  else
    v12 = v7;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    result = CPPhoneNumberCopyNetworkCountryCode();
    if (result)
    {
      v13 = (void *)result;
      v2 = sub_211A47910();
      v15 = v14;

      v5 = v15 & 0x2000000000000000;
      v6 = HIBYTE(v15) & 0xF;
      v7 = v2 & 0xFFFFFFFFFFFFLL;
      goto LABEL_14;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_14:
  if (v5)
    v16 = v6;
  else
    v16 = v7;
  if (v16)
    goto LABEL_20;
  swift_bridgeObjectRelease();
  result = CPPhoneNumberCopyLastKnownNetworkCountryCode();
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v17 = (void *)result;
  v2 = sub_211A47910();
  v19 = v18;

  v5 = v19 & 0x2000000000000000;
  v6 = HIBYTE(v19) & 0xF;
  v7 = v2 & 0xFFFFFFFFFFFFLL;
LABEL_20:
  if (v5)
    v20 = v6;
  else
    v20 = v7;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    return 29557;
  }
  return v2;
}

uint64_t sub_211A03AE0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t String;
  void *v7;

  sub_211A039B4();
  v2 = (void *)sub_211A478EC();
  v3 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v4 = (void *)CFPhoneNumberCreate();

  if (!v4)
    goto LABEL_5;
  v5 = v4;
  String = CFPhoneNumberCreateString();
  if (!String)
  {

LABEL_5:
    swift_bridgeObjectRetain();
    return a1;
  }
  v7 = (void *)String;
  a1 = sub_211A47910();

  return a1;
}

uint64_t sub_211A03BCC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v21 = a3;
  v6 = sub_211A46FBC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0;
  v25 = 0xE000000000000000;
  v26 = a1;
  v19 = a1 & 0xFFFFFFFFFFFFLL;
  v20 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) != 0)
    v11 = HIBYTE(a2) & 0xF;
  else
    v11 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v11)
    return 0;
  v12 = 0;
  v18 = a2 & 0xFFFFFFFFFFFFFFLL;
  v17[0] = v3;
  v17[1] = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_211A47F64();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v22 = v26;
        v23 = v18;
      }
      else if ((v26 & 0x1000000000000000) == 0)
      {
        sub_211A47FB8();
      }
      sub_211A47FC4();
    }
    v14 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
    v15 = sub_211A46FB0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v15 & 1) != 0)
      sub_211A47964();
    v12 += v14;
  }
  while (v12 < v11);
  return v24;
}

uint64_t sub_211A03D5C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  if (qword_254AC7B58 != -1)
    swift_once();
  v2 = qword_254ADC738;
  v3 = (void *)sub_211A478EC();
  LOBYTE(v2) = objc_msgSend((id)v2, sel_evaluateWithObject_, v3);

  if ((v2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = sub_211A03AE0(a1);
    swift_bridgeObjectRetain();
    if ((sub_211A47A24() & 1) != 0 || sub_211A47994() <= 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_211A479B8();
      swift_bridgeObjectRelease_n();
      return 43;
    }
  }
  return a1;
}

uint64_t sub_211A03E80(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v17;

  v4 = sub_211A46FBC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    sub_211A46F8C();
    sub_211A46FA4();
    swift_bridgeObjectRetain();
    v10 = sub_211A03BCC(a1, a2, (uint64_t)v8);
    v12 = v11;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v10 & 0xFFFFFFFFFFFFLL;
    if (!v13)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v10 == a1 && v12 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = sub_211A48258();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

unint64_t FMDemoManager.DemoContext.assetFilename.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000013;
}

unint64_t FMDemoManager.DemoContext.userDefaultsKey.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001CLL;
  else
    return 0xD00000000000001BLL;
}

BOOL static FMDemoManager.DemoContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FMDemoManager.DemoContext.hash(into:)()
{
  return sub_211A48324();
}

uint64_t FMDemoManager.DemoContext.hashValue.getter()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

BOOL sub_211A040C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t static FMDemoManager.sharedPreferencesDomain.getter()
{
  return 0xD000000000000010;
}

id static FMDemoManager.hasDemoModeUserDefault(for:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_211A478EC();
  v3 = objc_msgSend(v0, sel_BOOLForKey_inDomain_, v1, v2);

  return v3;
}

void sub_211A041C8(uint64_t a1)
{
  sub_211963C64(a1, 1, 0xD00000000000001CLL, 0x8000000211A575C0, byte_254ACDFA1);
}

uint64_t static FMDemoManager.devicesDemoEnabled.getter()
{
  return sub_211963D50(&qword_254AC7BB8, byte_254ACDFA1);
}

uint64_t FMDemoManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FMDemoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_211A04228()
{
  unint64_t result;

  result = qword_254ACDFC8;
  if (!qword_254ACDFC8)
  {
    result = MEMORY[0x212BE47C8](&protocol conformance descriptor for FMDemoManager.DemoContext, &type metadata for FMDemoManager.DemoContext);
    atomic_store(result, (unint64_t *)&qword_254ACDFC8);
  }
  return result;
}

uint64_t method lookup function for FMDemoManager()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for FMDemoManager.DemoContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_211A042C4 + 4 * byte_211A50BBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_211A042F8 + 4 * byte_211A50BB8[v4]))();
}

uint64_t sub_211A042F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A04300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211A04308);
  return result;
}

uint64_t sub_211A04314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211A0431CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_211A04320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A04328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.DemoContext()
{
  return &type metadata for FMDemoManager.DemoContext;
}

uint64_t storeEnumTagSinglePayload for FMDemoManager.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_211A04384 + 4 * byte_211A50BC2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_211A043A4 + 4 * byte_211A50BC7[v4]))();
}

_BYTE *sub_211A04384(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_211A043A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_211A043AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_211A043B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_211A043BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_211A043C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMDemoManager.Error()
{
  return &type metadata for FMDemoManager.Error;
}

unint64_t sub_211A043E4()
{
  unint64_t result;

  result = qword_254ACE068;
  if (!qword_254ACE068)
  {
    result = MEMORY[0x212BE47C8](&unk_211A50CBC, &type metadata for FMDemoManager.Error);
    atomic_store(result, (unint64_t *)&qword_254ACE068);
  }
  return result;
}

uint64_t static FMDiskIO.getOrCreateCacheKey<A>(account:service:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[3];
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v55 = a6;
  v11 = sub_211A46F14();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v47 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211A473DC();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_211A473B8();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a5[11];
  v23 = a5[12];
  v52 = a5[10];
  v56 = type metadata accessor for FMDiskIO.KeyPair(0, v52, v22, v23);
  v24 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56, v25);
  v53 = (char *)v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)v46 - v29;
  v46[0] = a1;
  v46[1] = a2;
  v46[2] = a3;
  v48 = a4;
  v31 = sub_211A46F2C();
  v54 = v24;
  v33 = v32;
  if (v32 >> 60 == 15)
  {
    v34 = v52;
    v35 = type metadata accessor for FMDiskIO.FMDiskIOError(0, v52, v22, v23);
    MEMORY[0x212BE47C8](&unk_211A50FB0, v35);
    v51 = (id)swift_allocError();
    swift_willThrow();
    sub_211A473AC();
    sub_211A473D0();
    v30 = v53;
    sub_211A04E8C((uint64_t)v21, (uint64_t)v17, v34, v22, v23, (uint64_t)v53);
    sub_211A47028();
    swift_allocObject();
    sub_211A4701C();
    v36 = v56;
    MEMORY[0x212BE47C8](&protocol conformance descriptor for FMDiskIO<A>.KeyPair, v56);
    v37 = sub_211A47010();
    v39 = v38;
    swift_release();
    v57 = v37;
    v58 = v39;
    v41 = v49;
    v40 = v50;
    v42 = v47;
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v47, *MEMORY[0x24BE319E8], v50);
    sub_2119FCA50();
    sub_211A46F20();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);

    sub_21193B8F8(v37, v39);
    v44 = v55;
  }
  else
  {
    v43 = v31;
    sub_211A47004();
    swift_allocObject();
    sub_211A46FF8();
    MEMORY[0x212BE47C8](&protocol conformance descriptor for FMDiskIO<A>.KeyPair, v56);
    sub_211A46FEC();
    sub_211964B98(v43, v33);
    swift_release();
    v44 = v55;
    v36 = v56;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v54 + 32))(v44, v30, v36);
}

uint64_t FMDiskIO.__allocating_init(root:fileName:keyPair:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  FMDiskIO.init(root:fileName:keyPair:)(a1, a2, a3, a4, a5);
  return v10;
}

BOOL sub_211A04A08(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_211A04A18()
{
  return sub_211A48324();
}

uint64_t sub_211A04A3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4B65746176697270 && a2 == 0xEA00000000007965;
  if (v2 || (sub_211A48258() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697274656D6D7973 && a2 == 0xEC00000079654B63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_211A48258();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_211A04B50()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

BOOL sub_211A04B94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_211A04A08(*a1, *a2);
}

uint64_t sub_211A04BAC()
{
  return sub_211A04B50();
}

uint64_t sub_211A04BC0()
{
  return sub_211A04A18();
}

uint64_t sub_211A04BD4()
{
  sub_211A48318();
  sub_211A04A18();
  return sub_211A48348();
}

uint64_t sub_211A04C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_211A04A3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_211A04C4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_211A07BE0();
  *a1 = result;
  return result;
}

uint64_t sub_211A04C7C(uint64_t a1)
{
  MEMORY[0x212BE47C8](&unk_211A50F60, a1);
  return sub_211A48390();
}

uint64_t sub_211A04CB0(uint64_t a1)
{
  MEMORY[0x212BE47C8](&unk_211A50F60, a1);
  return sub_211A4839C();
}

uint64_t FMDiskIO.KeyPair.encode(to:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v3 = type metadata accessor for FMDiskIO.KeyPair.CodingKeys(255, a2[2], a2[3], a2[4]);
  MEMORY[0x212BE47C8](&unk_211A50F60, v3);
  v4 = sub_211A481F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v11 - v7;
  sub_211931DB4(a1, a1[3]);
  sub_211A4836C();
  v13 = 0;
  sub_211A473B8();
  sub_211910908(&qword_254ACE070, (uint64_t (*)(uint64_t))MEMORY[0x24BE31BE8], MEMORY[0x24BE31BF8]);
  v9 = v11[1];
  sub_211A481E0();
  if (!v9)
  {
    v12 = 1;
    sub_211A473DC();
    sub_211910908(&qword_254ACE078, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C18], MEMORY[0x24BE31C28]);
    sub_211A481E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_211A04E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  v13 = a6 + *(int *)(type metadata accessor for FMDiskIO.KeyPair(0, a3, a4, a5) + 44);
  v14 = sub_211A473DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
}

uint64_t sub_211A04F24(_QWORD *a1, uint64_t *a2)
{
  return FMDiskIO.KeyPair.encode(to:)(a1, a2);
}

uint64_t sub_211A04F38()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_211A479B8();
  return v2;
}

_QWORD *FMDiskIO.init(root:fileName:keyPair:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = v5;
  v29 = a4;
  v30 = a1;
  v31 = a2;
  v32 = a3;
  v33 = (uint64_t *)*v5;
  v34 = a5;
  v7 = sub_211A47D90();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_211A47D60();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12, v14);
  v15 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v15, v16);
  v28[1] = sub_211920E14();
  sub_211A477B4();
  v36 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254AC8880, v13, MEMORY[0x24BEE5698]);
  sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE5750], v7);
  v5[2] = sub_211A47DC0();
  if (qword_254AC7B80 != -1)
    swift_once();
  v17 = sub_211A47748();
  sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
  v18 = v29;
  swift_bridgeObjectRetain_n();
  v19 = sub_211A47724();
  v20 = sub_211A47D30();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v36 = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    v23 = v32;
    v35 = sub_211950A9C(v32, v18, &v36);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v19, v20, "FMDiskIO: init with file name: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v22, -1, -1);
    MEMORY[0x212BE48A0](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v23 = v32;
  }
  v24 = v31;
  v6[3] = v30;
  v6[4] = v24;
  v6[5] = v23;
  v6[6] = v18;
  v25 = (char *)v6 + *(_QWORD *)(*v6 + 128);
  type metadata accessor for FMDiskIO.KeyPair(255, v33[10], v33[11], v33[12]);
  v26 = sub_211A47E14();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, v34, v26);
  return v6;
}

uint64_t sub_211A05310(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  result = (uint64_t)sub_211A06518();
  if ((result & 1) == 0)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v3 = sub_211A47748();
    sub_21194F3E0(v3, (uint64_t)qword_254ADC7E8);
    v4 = sub_211A47724();
    v5 = sub_211A47D30();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_21190D000, v4, v5, "FMDiskIO: creating to disk", v6, 2u);
      MEMORY[0x212BE48A0](v6, -1, -1);
    }

    return sub_211A0540C(a1);
  }
  return result;
}

uint64_t sub_211A0540C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  unint64_t v26;
  char *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v5 = sub_211A4779C();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4[10];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v15, v16);
  if (qword_254AC7B80 != -1)
    swift_once();
  v17 = sub_211A47748();
  sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
  v18 = sub_211A47724();
  v19 = sub_211A47D30();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v33 = v2;
    v21 = v4;
    v22 = v11;
    v23 = a1;
    v24 = v20;
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_21190D000, v18, v19, "FMDiskIO: save to disk", v20, 2u);
    v25 = v24;
    a1 = v23;
    v11 = v22;
    v4 = v21;
    v2 = v33;
    MEMORY[0x212BE48A0](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v26 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = v12;
  *((_QWORD *)v27 + 3) = v4[11];
  *((_QWORD *)v27 + 4) = v4[12];
  *((_QWORD *)v27 + 5) = v2;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v27[v26], (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = sub_211A07680;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCD9E8;
  v28 = _Block_copy(aBlock);
  swift_retain();
  sub_211A477B4();
  v39 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v29 = v36;
  v30 = v38;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v11, v29, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  return swift_release();
}

uint64_t sub_211A05744(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  char *v7;
  NSObject *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](a1, a1);
  v7 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  (*(void (**)(char *, __n128))(v4 + 16))(v7, v6);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (char *)swift_allocObject();
  *((_QWORD *)v10 + 2) = v3;
  *((_QWORD *)v10 + 3) = *(_QWORD *)(v2 + 88);
  *((_QWORD *)v10 + 4) = *(_QWORD *)(v2 + 96);
  *((_QWORD *)v10 + 5) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v10[v9], v7, v3);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_211A07680;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_2119213A8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_211921368;
  aBlock[3] = &unk_24CCCDA60;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_211A058E8(uint64_t a1)
{
  char *v1;
  void *v3;

  v3 = (void *)MEMORY[0x212BE42D0]();
  sub_211A05930(v1, a1);
  objc_autoreleasePoolPop(v3);
}

void sub_211A05930(char *a1, uint64_t a2)
{
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  unsigned int v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unsigned __int8 v37;
  id v38;
  uint64_t inited;
  void **v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char v101;
  id v102[3];

  v98 = a2;
  v2 = a1;
  v102[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD **)a1;
  v87 = sub_211A473F4();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v4);
  v88 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[10];
  v7 = v3[11];
  v96 = v3[12];
  v97 = v6;
  v8 = type metadata accessor for FMDiskIO.KeyPair(255, v6, v7, v96);
  v92 = sub_211A47E14();
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v9);
  v91 = (char *)&v86 - v10;
  v93 = v8;
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v89 = (char *)&v86 - v13;
  v14 = sub_211A4713C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = 0;
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_defaultManager);
  v95 = v2;
  v21 = (void *)sub_211A478EC();
  LOBYTE(v2) = objc_msgSend(v20, sel_fileExistsAtPath_isDirectory_, v21, &v101);

  if ((v2 & 1) != 0)
    goto LABEL_3;
  v22 = objc_msgSend(v19, sel_defaultManager);
  sub_211A470F4();
  v23 = (void *)sub_211A47100();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v102[0] = 0;
  v24 = objc_msgSend(v22, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v23, 1, 0, v102);

  v25 = v102[0];
  if (v24)
  {
LABEL_3:
    sub_211A47028();
    swift_allocObject();
    v26 = sub_211A4701C();
    v27 = v99;
    v98 = sub_211A47010();
    v99 = v28;
    if (v27)
    {
      swift_release();
      v29 = (void *)v27;
LABEL_19:
      if (qword_254AC7B80 != -1)
        swift_once();
      v69 = sub_211A47748();
      sub_21194F3E0(v69, (uint64_t)qword_254ADC7E8);
      v70 = v29;
      v71 = v29;
      v72 = sub_211A47724();
      v73 = sub_211A47D24();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        v75 = (void *)swift_slowAlloc();
        v102[0] = v75;
        *(_DWORD *)v74 = 136315138;
        swift_getErrorValue();
        v76 = sub_211A482DC();
        v100 = sub_211950A9C(v76, v77, (uint64_t *)v102);
        sub_211A47E2C();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21190D000, v72, v73, "FMDiskIO: Could not save objects to disk %s", v74, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v75, -1, -1);
        MEMORY[0x212BE48A0](v74, -1, -1);

      }
      else
      {

      }
      return;
    }
    v30 = v90;
    v31 = v91;
    v32 = v92;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v91, &v95[*(_QWORD *)(*(_QWORD *)v95 + 128)], v92);
    v33 = v94;
    v34 = v93;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v31, 1, v93) == 1)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      v35 = (void *)sub_211A47160();
      sub_211A04F38();
      v36 = (void *)sub_211A478EC();
      swift_bridgeObjectRelease();
      v37 = objc_msgSend(v35, sel_writeToFile_atomically_, v36, 1);

      if ((v37 & 1) != 0)
      {
LABEL_7:
        v38 = objc_msgSend(v19, sel_defaultManager, v86);
        sub_211958C38(&qword_254ACD740);
        inited = swift_initStackObject();
        v40 = (void **)MEMORY[0x24BDD0CF0];
        *(_OWORD *)(inited + 16) = xmmword_211A4A230;
        v41 = *v40;
        *(_QWORD *)(inited + 32) = *v40;
        v42 = (void *)*MEMORY[0x24BDD0CE0];
        type metadata accessor for FileProtectionType(0);
        *(_QWORD *)(inited + 64) = v43;
        *(_QWORD *)(inited + 40) = v42;
        v44 = v41;
        v45 = v42;
        sub_21193B9B4(inited);
        type metadata accessor for FileAttributeKey(0);
        sub_211910908(&qword_254AC7EA0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_211A499E4);
        v46 = (void *)sub_211A47844();
        swift_bridgeObjectRelease();
        sub_211A04F38();
        v47 = (void *)sub_211A478EC();
        swift_bridgeObjectRelease();
        v102[0] = 0;
        LODWORD(inited) = objc_msgSend(v38, sel_setAttributes_ofItemAtPath_error_, v46, v47, v102);

        if (!(_DWORD)inited)
        {
          v68 = v102[0];
          v29 = (void *)sub_211A470DC();

          swift_willThrow();
          sub_21193B8F8(v98, v99);
          swift_release();
          goto LABEL_19;
        }
        v48 = qword_254AC7B80;
        v49 = v102[0];
        if (v48 != -1)
          swift_once();
        v50 = sub_211A47748();
        sub_21194F3E0(v50, (uint64_t)qword_254ADC7E8);
        swift_retain_n();
        v51 = sub_211A47724();
        v52 = sub_211A47D30();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc();
          v54 = (void *)swift_slowAlloc();
          v102[0] = v54;
          v97 = v26;
          *(_DWORD *)v53 = 136315138;
          v55 = sub_211A04F38();
          v100 = sub_211950A9C(v55, v56, (uint64_t *)v102);
          sub_211A47E2C();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21190D000, v51, v52, "FMDiskIO: Successfully wrote object to disk @ %s", v53, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v54, -1, -1);
          MEMORY[0x212BE48A0](v53, -1, -1);
          sub_21193B8F8(v98, v99);

LABEL_31:
          swift_release();
          return;
        }
        swift_release_n();
LABEL_30:
        sub_21193B8F8(v98, v99);

        goto LABEL_31;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v89, v31, v34);
      v66 = v88;
      sub_211A473C4();
      sub_211910908(&qword_254ACD748, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C40], MEMORY[0x24BE31C48]);
      v67 = v87;
      v78 = sub_211A47010();
      v80 = v79;
      v81 = (void *)sub_211A47160();
      sub_21193B8F8(v78, v80);
      sub_211A04F38();
      v82 = (void *)sub_211A478EC();
      swift_bridgeObjectRelease();
      LODWORD(v78) = objc_msgSend(v81, sel_writeToFile_atomically_, v82, 1);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v67);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v93);
      if ((_DWORD)v78)
        goto LABEL_7;
    }
    if (qword_254AC7B80 != -1)
      swift_once();
    v83 = sub_211A47748();
    sub_21194F3E0(v83, (uint64_t)qword_254ADC7E8);
    v51 = sub_211A47724();
    v84 = sub_211A47D30();
    if (os_log_type_enabled(v51, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_21190D000, v51, v84, "FMDiskIO: Could not save objects to disk", v85, 2u);
      MEMORY[0x212BE48A0](v85, -1, -1);
    }
    goto LABEL_30;
  }
  v57 = v25;
  v58 = (void *)sub_211A470DC();

  swift_willThrow();
  if (qword_254AC7B80 != -1)
    swift_once();
  v59 = sub_211A47748();
  sub_21194F3E0(v59, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v60 = sub_211A47724();
  v61 = sub_211A47D30();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = (void *)swift_slowAlloc();
    v102[0] = v63;
    *(_DWORD *)v62 = 136315138;
    v64 = sub_211A04F38();
    v100 = sub_211950A9C(v64, v65, (uint64_t *)v102);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v60, v61, "FMDiskIO: Could not create directory for content: %s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v63, -1, -1);
    MEMORY[0x212BE48A0](v62, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

id sub_211A06518()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_211A04F38();
  v1 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_211A06598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = sub_211A47E14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v13 - v9;
  sub_211A06678((uint64_t)&v13 - v9);
  v11 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_211A0540C(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, a1, v5);
}

uint64_t sub_211A06678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = sub_211A47E14();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)aBlock - v9;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 8) + 56))((char *)aBlock - v9, 1, 1, v4, v8);
  v11 = *(NSObject **)(v2 + 16);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_211A076F8;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_2119778B8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_211921368;
  aBlock[3] = &unk_24CCCDAD8;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v10, v5);
    return swift_release();
  }
  return result;
}

void sub_211A06824(char *a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char *v32;
  uint8_t *v33;
  uint8_t *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  v86 = a2;
  v3 = *(_QWORD **)a1;
  v82 = sub_211A47394();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v4);
  v83 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_211A473F4();
  v80 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88, v6);
  v89 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v3[10];
  v85 = sub_211A47E14();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v9);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v87 = (char *)&v75 - v14;
  v15 = v3[12];
  v90 = v3[11];
  v91 = v8;
  v16 = type metadata accessor for FMDiskIO.KeyPair(255, v8, v90, v15);
  v17 = sub_211A47E14();
  v93 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v92 = (char *)&v75 - v19;
  v20 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v94 = (char *)&v75 - v23;
  v24 = sub_211A4713C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v96 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v28 = sub_211A47748();
  sub_21194F3E0(v28, (uint64_t)qword_254ADC7E8);
  v29 = sub_211A47724();
  v30 = sub_211A47D30();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v95 = v25;
    v32 = v11;
    v33 = v31;
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_21190D000, v29, v30, "FMDiskIO: read from disk", v31, 2u);
    v34 = v33;
    v11 = v32;
    v25 = v95;
    MEMORY[0x212BE48A0](v34, -1, -1);
  }

  if ((sub_211A06518() & 1) != 0)
  {
    v79 = v11;
    sub_211A04F38();
    v35 = v96;
    sub_211A470F4();
    swift_bridgeObjectRelease();
    v36 = sub_211A47148();
    v95 = v37;
    v44 = v36;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v35, v24);
    swift_retain();
    v45 = v95;
    sub_211926D20(v44, v95);
    swift_retain();
    sub_211926D20(v44, v45);
    v46 = sub_211A47724();
    v47 = sub_211A47D30();
    v48 = v47;
    v49 = os_log_type_enabled(v46, v47);
    v78 = v44;
    if (v49)
    {
      v50 = swift_slowAlloc();
      v96 = (char *)v17;
      v51 = v50;
      v77 = swift_slowAlloc();
      v98 = v77;
      *(_DWORD *)v51 = 136315394;
      v76 = v48;
      v52 = sub_211A04F38();
      v97 = sub_211950A9C(v52, v53, &v98);
      v75 = v46;
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      v54 = sub_211A47154();
      v97 = sub_211950A9C(v54, v55, &v98);
      sub_211A47E2C();
      v56 = v95;
      swift_bridgeObjectRelease();
      sub_21193B8F8(v44, v56);
      sub_21193B8F8(v44, v56);
      v57 = v75;
      _os_log_impl(&dword_21190D000, v75, (os_log_type_t)v76, "FMDiskIO: file: %s data: %s", (uint8_t *)v51, 0x16u);
      v58 = v77;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v58, -1, -1);
      v59 = v51;
      v17 = (uint64_t)v96;
      MEMORY[0x212BE48A0](v59, -1, -1);

    }
    else
    {
      swift_release_n();
      v60 = v95;
      sub_21193B8F8(v44, v95);
      sub_21193B8F8(v44, v60);

    }
    v61 = v94;
    v62 = v92;
    sub_211A47004();
    swift_allocObject();
    sub_211A46FF8();
    v63 = v93;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v62, &a1[*(_QWORD *)(*(_QWORD *)a1 + 128)], v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v62, 1, v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v17);
      v64 = v87;
      v65 = v91;
      v66 = v78;
      sub_211A46FEC();
      sub_21193B8F8(v66, v95);
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 0, 1, v65);
      (*(void (**)(uint64_t, char *, uint64_t))(v84 + 40))(v86, v64, v85);
    }
    else
    {
      v96 = a1;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v61, v62, v16);
      sub_211910908(&qword_254ACD760, (uint64_t (*)(uint64_t))MEMORY[0x24BE31C40], MEMORY[0x24BE31C50]);
      v67 = v20;
      v68 = v88;
      sub_211A46FEC();
      v93 = v67;
      v69 = v83;
      sub_211A473A0();
      v70 = sub_211A473E8();
      v72 = v71;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v69, v82);
      v73 = v91;
      sub_211A46FEC();
      sub_21193B8F8(v70, v72);
      swift_release();
      sub_21193B8F8(v78, v95);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v89, v68);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v16);
      v74 = v79;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v79, 0, 1, v73);
      (*(void (**)(uint64_t, char *, uint64_t))(v84 + 40))(v86, v74, v85);
    }
  }
  else
  {
    swift_retain_n();
    v38 = sub_211A47724();
    v39 = sub_211A47D24();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v98 = v41;
      *(_DWORD *)v40 = 136315138;
      v42 = sub_211A04F38();
      v97 = sub_211950A9C(v42, v43, &v98);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v38, v39, "FMDiskIO: Disk archive does not exist at: %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v41, -1, -1);
      MEMORY[0x212BE48A0](v40, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

id *FMDiskIO.deinit()
{
  id *v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;

  v1 = (uint64_t *)*v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (char *)v0 + *((_QWORD *)*v0 + 16);
  type metadata accessor for FMDiskIO.KeyPair(255, v1[10], v1[11], v1[12]);
  v3 = sub_211A47E14();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t FMDiskIO.__deallocating_deinit()
{
  FMDiskIO.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_211A075A0(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_211A075C0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_211A47E2C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t type metadata accessor for FMDiskIO.FMDiskIOError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21192A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMDiskIO.FMDiskIOError);
}

void sub_211A07688()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  sub_211A058E8(v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_211A076C4()
{
  return swift_deallocObject();
}

uint64_t sub_211A076D4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_211A076F8()
{
  uint64_t v0;

  sub_211A06824(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_211A07700()
{
  return swift_deallocObject();
}

uint64_t method lookup function for FMDiskIO()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMDiskIO.__allocating_init(root:fileName:keyPair:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FMDiskIO.createIfNeeded(content:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FMDiskIO.save(content:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FMDiskIO.saveSync(content:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FMDiskIO.diskCacheExists()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of FMDiskIO.readOrCreate(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of FMDiskIO.read()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t *sub_211A0776C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_211A473B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 44);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_211A473DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_211A07814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_211A473DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_211A07890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_211A473DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_211A0790C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_211A473B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_211A473DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_211A07988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_211A473B8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_211A473DC();
    v10 = a1 + *(int *)(a3 + 44);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_211A079FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_211A473B8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_211A473DC();
    v12 = a1 + *(int *)(a4 + 44);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_211A07A78(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_211A07AC4 + 4 * byte_211A50D2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_211A07AF8 + 4 * byte_211A50D28[v4]))();
}

uint64_t sub_211A07AF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A07B00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211A07B08);
  return result;
}

uint64_t sub_211A07B14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211A07B1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_211A07B20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A07B28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A07B34(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_211A07B74 + 4 * byte_211A50D32[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_211A07B94 + 4 * byte_211A50D37[v4]))();
}

_BYTE *sub_211A07B74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_211A07B94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_211A07B9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_211A07BA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_211A07BAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_211A07BB4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_211A07BC0()
{
  JUMPOUT(0x212BE47C8);
}

void sub_211A07BD0()
{
  JUMPOUT(0x212BE47C8);
}

uint64_t sub_211A07BE0()
{
  return 2;
}

ValueMetadata *type metadata accessor for FMFFallbackToLegacyInProgress()
{
  return &type metadata for FMFFallbackToLegacyInProgress;
}

uint64_t sub_211A07C00@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_211A07C5C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_211A480F0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_211A07CBC()
{
  sub_211A0806C();
  return sub_211A48390();
}

uint64_t sub_211A07CE4()
{
  sub_211A0806C();
  return sub_211A4839C();
}

uint64_t sub_211A07D0C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v13 = a4;
  v6 = sub_211958C38(&qword_254ACE2A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211931DB4(a1, a1[3]);
  sub_211A0806C();
  sub_211A4836C();
  v15 = 0;
  sub_211A481B0();
  if (!v4)
  {
    v14 = 1;
    sub_211A481BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_211A07E34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_211A07EDC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_211A07E64(_QWORD *a1)
{
  uint64_t v1;

  return sub_211A07D0C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_211A07E80(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 ^ v3 ^ 1u;
  v5 = sub_211A48258();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 ^ v3 ^ 1u;
  return result;
}

uint64_t sub_211A07EDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];

  v3 = sub_211958C38(&qword_254ACE290);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1[4];
  sub_211931DB4(a1, a1[3]);
  sub_211A0806C();
  sub_211A48360();
  if (v1)
  {
    sub_211931C34((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    v8 = sub_211A48144();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_211A48150();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
    sub_211931C34((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_211A0806C()
{
  unint64_t result;

  result = qword_254ACE298;
  if (!qword_254ACE298)
  {
    result = MEMORY[0x212BE47C8](&unk_211A511A4, &type metadata for FMFFallbackToLegacyInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACE298);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMFFallbackToLegacyInProgress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_211A080FC + 4 * byte_211A50FF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_211A08130 + 4 * byte_211A50FF0[v4]))();
}

uint64_t sub_211A08130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A08138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211A08140);
  return result;
}

uint64_t sub_211A0814C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211A08154);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_211A08158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A08160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFFallbackToLegacyInProgress.CodingKeys()
{
  return &type metadata for FMFFallbackToLegacyInProgress.CodingKeys;
}

unint64_t sub_211A08180()
{
  unint64_t result;

  result = qword_254ACE2A8;
  if (!qword_254ACE2A8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A5117C, &type metadata for FMFFallbackToLegacyInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACE2A8);
  }
  return result;
}

unint64_t sub_211A081C8()
{
  unint64_t result;

  result = qword_254ACE2B0;
  if (!qword_254ACE2B0)
  {
    result = MEMORY[0x212BE47C8](&unk_211A510B4, &type metadata for FMFFallbackToLegacyInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACE2B0);
  }
  return result;
}

unint64_t sub_211A08210()
{
  unint64_t result;

  result = qword_254ACE2B8;
  if (!qword_254ACE2B8)
  {
    result = MEMORY[0x212BE47C8](&unk_211A510DC, &type metadata for FMFFallbackToLegacyInProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254ACE2B8);
  }
  return result;
}

uint64_t FMFAskToFollowAction.__allocating_init(friend:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2119C01B0(a1, v2 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  *(_BYTE *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFAskToFollowAction.init(friend:)(uint64_t a1)
{
  uint64_t v1;

  sub_2119C01B0(a1, v1 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_211A082C8()
{
  sub_211A47F70();
  sub_211A479B8();
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  type metadata accessor for FMFFriend();
  sub_211A48054();
  return 0;
}

void FMFAskToFollowAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFAskToFollowAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211A0843C()
{
  uint64_t v0;

  return sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
}

uint64_t FMFAskToFollowAction.deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  return v0;
}

uint64_t FMFAskToFollowAction.__deallocating_deinit()
{
  uint64_t v0;

  sub_21194ED40(v0 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend);
  return swift_deallocClassInstance();
}

uint64_t sub_211A084A0()
{
  return type metadata accessor for FMFAskToFollowAction();
}

uint64_t type metadata accessor for FMFAskToFollowAction()
{
  uint64_t result;

  result = qword_254ACE2E8;
  if (!qword_254ACE2E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for FMFAskToFollowAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFAskToFollowAction.__allocating_init(friend:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_211A084F8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_211A47208();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_coordinate);
  v8 = v7;
  objc_msgSend(a1, sel_coordinate);
  v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithGEOCoordinate_, v8, v9);
  if (!v10)
  {
LABEL_14:

    return;
  }
  v11 = v10;
  v12 = objc_msgSend(a1, sel_timestamp);
  sub_211A471E4();

  sub_211A471D8();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  objc_msgSend(v11, sel_setTimestamp_, v14);
  objc_msgSend(a1, sel_horizontalAccuracy);
  objc_msgSend(v11, sel_setHorizontalAccuracy_);
  objc_msgSend(a1, sel_verticalAccuracy);
  objc_msgSend(v11, sel_setVerticalAccuracy_);
  objc_msgSend(a1, sel_course);
  objc_msgSend(v11, sel_setCourse_);
  objc_msgSend(a1, sel_courseAccuracy);
  objc_msgSend(v11, sel_setCourseAccuracy_);
  objc_msgSend(a1, sel_speed);
  objc_msgSend(v11, sel_setSpeed_);
  objc_msgSend(a1, sel_speedAccuracy);
  objc_msgSend(v11, sel_setSpeedAccuracy_);
  objc_msgSend(a1, sel_altitude);
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v15 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v15 >= 2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v11, sel_setAltitude_, (int)v15);
  v16 = objc_msgSend(a1, sel_floor);
  if (!v16)
    goto LABEL_9;
  v17 = v16;
  v18 = (uint64_t)objc_msgSend(v16, sel_level);

  if (v18 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v18 <= 0x7FFFFFFF)
    {
LABEL_10:
      objc_msgSend(v11, sel_setLevelOrdinal_, v18);
      v19 = objc_msgSend(a1, sel_referenceFrame);
      if (v19 > 2)
        v20 = 0;
      else
        v20 = dword_211A51238[v19];
      objc_msgSend(v11, sel_setReferenceFrame_, v20);

      goto LABEL_14;
    }
    __break(1u);
LABEL_9:
    v18 = 0;
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

Swift::Bool __swiftcall CLLocation.fmifIsNearBy(_:inBTRangeDistanceInMeters:)(CLLocation _, Swift::Double inBTRangeDistanceInMeters)
{
  void *v2;
  Class isa;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  isa = _.super.isa;
  objc_msgSend(v2, sel_distanceFromLocation_, _.super.isa);
  v6 = v5;
  objc_msgSend(v2, sel_horizontalAccuracy);
  v8 = v7;
  -[objc_class horizontalAccuracy](isa, sel_horizontalAccuracy);
  return v6 / sqrt(inBTRangeDistanceInMeters * inBTRangeDistanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

uint64_t sub_211A0888C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v19 = MEMORY[0x24BEE4AF8];
  sub_211A2687C(0, v1, 0);
  v2 = v19;
  result = sub_2119483E8(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v18 = v9;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v5);
    v11 = *v10;
    v12 = v10[1];
    v14 = *(_QWORD *)(v19 + 16);
    v13 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      sub_211A2687C(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v19 + 16) = v14 + 1;
    v15 = v19 + 24 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    *(_WORD *)(v15 + 48) = 1;
    *(_BYTE *)(v15 + 50) = 0;
    result = sub_211947D78(v5, v7, v18 & 1, a1);
    v5 = result;
    v7 = v16;
    v9 = v17 & 1;
    if (!--v1)
    {
      sub_2119A0BB0(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_211A08A18(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v19 = MEMORY[0x24BEE4AF8];
  sub_211948C10(0, v1, 0);
  v2 = v19;
  result = sub_2119483E8(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v18 = v9;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v5);
    v11 = *v10;
    v12 = v10[1];
    v14 = *(_QWORD *)(v19 + 16);
    v13 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      sub_211948C10(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v19 + 16) = v14 + 1;
    v15 = v19 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    result = sub_211947D78(v5, v7, v18 & 1, a1);
    v5 = result;
    v7 = v16;
    v9 = v17 & 1;
    if (!--v1)
    {
      sub_2119A0BB0(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_211A08B90(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v19 = MEMORY[0x24BEE4AF8];
  sub_211A26860(0, v1, 0);
  v2 = v19;
  result = sub_2119483E8(a1);
  v5 = result;
  v7 = v6;
  v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v7)
      goto LABEL_14;
    v18 = v9;
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v5);
    v11 = *v10;
    v12 = v10[1];
    v14 = *(_QWORD *)(v19 + 16);
    v13 = *(_QWORD *)(v19 + 24);
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      sub_211A26860(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v19 + 16) = v14 + 1;
    v15 = v19 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    result = sub_211947D78(v5, v7, v18 & 1, a1);
    v5 = result;
    v7 = v16;
    v9 = v17 & 1;
    if (!--v1)
    {
      sub_2119A0BB0(result, v16, v9);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_211A08D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 6515827;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6174537469736976;
      break;
    case 2:
      result = 0x6165627472616568;
      break;
    case 3:
      result = 0x65646E6174737962;
      break;
    case 4:
      result = 0x646E616D65446E6FLL;
      break;
    case 5:
      result = 0x776F6C6C616873;
      break;
    case 6:
      result = 1702259052;
      break;
    case 7:
      result = 0x656977657473;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_211A08E24(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  _QWORD v24[2];
  char v25;
  char v26;
  char v27;
  uint64_t v28;

  v21 = a3 + 56;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v4 + 63) >> 6;
  v28 = a3;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(_QWORD *)(v28 + 48) + 24 * i;
    v16 = *(_QWORD *)v14;
    v15 = *(_QWORD *)(v14 + 8);
    v17 = *(_BYTE *)(v14 + 16);
    v18 = *(_BYTE *)(v14 + 17);
    v19 = *(_BYTE *)(v14 + 18);
    v24[0] = *(_QWORD *)v14;
    v24[1] = v15;
    v25 = v17;
    v26 = v18;
    v27 = v19;
    swift_bridgeObjectRetain();
    v20 = a1(v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((v20 & 1) != 0)
    {
      swift_release();
      return v16;
    }
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v8++, 1))
      break;
    if (v8 >= v22)
      goto LABEL_28;
    v12 = *(_QWORD *)(v21 + 8 * v8);
    if (!v12)
    {
      v13 = v8 + 1;
      if (v8 + 1 >= v22)
        goto LABEL_28;
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
        goto LABEL_16;
      v13 = v8 + 2;
      if (v8 + 2 >= v22)
        goto LABEL_28;
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
        goto LABEL_16;
      v13 = v8 + 3;
      if (v8 + 3 >= v22)
        goto LABEL_28;
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
      {
LABEL_16:
        v8 = v13;
        goto LABEL_17;
      }
      v13 = v8 + 4;
      if (v8 + 4 < v22)
      {
        v12 = *(_QWORD *)(v21 + 8 * v13);
        if (!v12)
        {
          while (1)
          {
            v8 = v13 + 1;
            if (__OFADD__(v13, 1))
              goto LABEL_31;
            if (v8 >= v22)
              goto LABEL_28;
            v12 = *(_QWORD *)(v21 + 8 * v8);
            ++v13;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      return 0;
    }
LABEL_17:
    v6 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_211A0906C(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_211A48318();
    swift_bridgeObjectRetain();
    sub_211A4797C();
    v18 = sub_211A48348();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_211A48258() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_211A48258() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_211A0930C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  int v36;
  uint64_t v37;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v30 = result;
  v31 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v32 = (unint64_t)(v4 + 63) >> 6;
  v37 = a2 + 56;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v8 >= v32)
    return 1;
  v9 = *(_QWORD *)(v31 + 8 * v8);
  v10 = v3 + 1;
  if (!v9)
  {
    v10 = v8 + 1;
    if (v8 + 1 >= v32)
      return 1;
    v9 = *(_QWORD *)(v31 + 8 * v10);
    if (!v9)
    {
      v10 = v8 + 2;
      if (v8 + 2 >= v32)
        return 1;
      v9 = *(_QWORD *)(v31 + 8 * v10);
      if (!v9)
      {
        v10 = v8 + 3;
        if (v8 + 3 >= v32)
          return 1;
        v9 = *(_QWORD *)(v31 + 8 * v10);
        if (!v9)
        {
          v11 = v8 + 4;
          if (v11 < v32)
          {
            v9 = *(_QWORD *)(v31 + 8 * v11);
            if (v9)
            {
              v10 = v11;
              goto LABEL_23;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
                break;
              if (v10 >= v32)
                return 1;
              v9 = *(_QWORD *)(v31 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_23;
            }
LABEL_40:
            __break(1u);
            return result;
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  v33 = (v9 - 1) & v9;
  v34 = v10;
  for (i = __clz(__rbit64(v9)) + (v10 << 6); ; i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    v12 = *(_QWORD *)(result + 48) + 24 * i;
    v14 = *(_QWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v15 = *(unsigned __int8 *)(v12 + 16);
    v16 = *(unsigned __int8 *)(v12 + 17);
    v17 = *(unsigned __int8 *)(v12 + 18);
    sub_211A48318();
    swift_bridgeObjectRetain_n();
    sub_211A4797C();
    swift_bridgeObjectRelease();
    v36 = v15;
    sub_211A48330();
    v18 = v16;
    sub_211A48330();
    v19 = v17;
    sub_211A48330();
    v20 = sub_211A48348();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      break;
    v23 = ~v21;
    v24 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v25 = v24 + 24 * v22;
      v26 = *(unsigned __int8 *)(v25 + 16);
      v27 = *(unsigned __int8 *)(v25 + 17);
      v28 = v19 ^ *(unsigned __int8 *)(v25 + 18);
      if (*(_QWORD *)v25 == v14 && *(_QWORD *)(v25 + 8) == v13)
        break;
      if (!((v36 ^ v26) & 1 | ((sub_211A48258() & 1) == 0) | ((v18 ^ v27) | v28) & 1))
        goto LABEL_34;
LABEL_27:
      v22 = (v22 + 1) & v23;
      if (((*(_QWORD *)(v37 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_37;
    }
    if (((v36 ^ v26 | v18 ^ v27 | v28) & 1) != 0)
      goto LABEL_27;
LABEL_34:
    swift_bridgeObjectRelease();
    v3 = v34;
    v2 = a2;
    result = v30;
    v6 = v33;
    if (!v33)
      goto LABEL_8;
LABEL_7:
    v33 = (v6 - 1) & v6;
    v34 = v3;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_211A09628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_211A48318();
    sub_211A4797C();
    v6 = sub_211A48348();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_211A48258() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_211A48258() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_211A0975C()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  sub_211A48330();
  sub_211A48330();
  sub_211A48330();
  return sub_211A48348();
}

uint64_t sub_211A097E8()
{
  return sub_211A0975C();
}

uint64_t sub_211A0981C()
{
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  sub_211A48330();
  sub_211A48330();
  return sub_211A48330();
}

uint64_t sub_211A0989C()
{
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  swift_bridgeObjectRelease();
  sub_211A48330();
  sub_211A48330();
  sub_211A48330();
  return sub_211A48348();
}

uint64_t sub_211A09930(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  char v9;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a1 + 18);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 17);
  v7 = *(unsigned __int8 *)(a2 + 18);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    result = 0;
    if (v2 != v5)
      return result;
    goto LABEL_9;
  }
  v9 = sub_211A48258();
  result = 0;
  if ((v9 & 1) != 0 && ((v2 ^ v5) & 1) == 0)
  {
LABEL_9:
    if (((v3 ^ v6) & 1) == 0)
      return v4 ^ v7 ^ 1u;
  }
  return result;
}

uint64_t SPSecureLocationPublishReason.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 6515827;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6174537469736976;
      break;
    case 2:
      result = 0x6165627472616568;
      break;
    case 3:
      result = 0x65646E6174737962;
      break;
    case 4:
      result = 0x646E616D65446E6FLL;
      break;
    case 5:
      result = 0x776F6C6C616873;
      break;
    case 6:
      result = 1702259052;
      break;
    case 7:
      result = 0x656977657473;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_211A09AE8()
{
  uint64_t *v0;

  return SPSecureLocationPublishReason.description.getter(*v0);
}

uint64_t sub_211A09AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_211A09AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_211A09B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_211A09B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_211A09B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_211A09B18(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  id v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  unsigned int v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD v37[3];
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  double v42;

  v3 = v2;
  v39 = a1;
  v40 = a2;
  v41 = sub_211A47D90();
  v4 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v5);
  v38 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A47D60();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v7, v9);
  v10 = sub_211A477D8();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 32) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = v12;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = v12;
  *(_QWORD *)(v2 + 88) = v12;
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 96) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 104) = v13;
  *(_QWORD *)(v2 + 112) = v13;
  *(_QWORD *)(v2 + 120) = 0;
  type metadata accessor for FMLocationShifter();
  swift_allocObject();
  *(_QWORD *)(v2 + 128) = FMLocationShifter.init()();
  v37[2] = sub_211911824(0, (unint64_t *)&qword_254ACC300);
  sub_211A477B4();
  v42 = MEMORY[0x24BEE4AF8];
  v37[1] = sub_211910908((unint64_t *)&qword_254AC8880, v8, MEMORY[0x24BEE5698]);
  v37[0] = sub_211958C38((uint64_t *)&unk_254ACC310);
  sub_21193AC34((unint64_t *)&qword_254AC8888, (uint64_t *)&unk_254ACC310);
  sub_211A47EA4();
  v14 = *MEMORY[0x24BEE5750];
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v16 = v38;
  v15(v38, v14, v41);
  *(_QWORD *)(v2 + 136) = sub_211A47DC0();
  sub_211A477B4();
  v42 = MEMORY[0x24BEE4AF8];
  sub_211A47EA4();
  v15(v16, v14, v41);
  v17 = v39;
  *(_QWORD *)(v2 + 144) = sub_211A47DC0();
  *(_QWORD *)(v2 + 152) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 160) = 0x402E000000000000;
  *(_QWORD *)(v2 + 176) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 192) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 200) = 0;
  *(_BYTE *)(v2 + 208) = 1;
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  *(_QWORD *)(v3 + 216) = v18;
  v19 = v40;
  *(_QWORD *)(v3 + 16) = v17;
  *(_QWORD *)(v3 + 24) = v19;
  swift_retain();
  v20 = v19;
  v21 = v18;
  v22 = (void *)sub_211A478EC();
  objc_msgSend(v21, sel_setLocalizedDateFormatFromTemplate_, v22);

  if (qword_254AC7B80 != -1)
    swift_once();
  v23 = sub_211A47748();
  sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_21190D000, v24, v25, "FMFSecureLocCtrl: initialized", v26, 2u);
    MEMORY[0x212BE48A0](v26, -1, -1);
  }

  v27 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v28 = objc_msgSend(v27, sel_isInternalBuild);

  if (v28
    && (v29 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v30 = (void *)sub_211A478EC(),
        objc_msgSend(v29, sel_doubleForKey_, v30),
        v32 = v31,
        v29,
        v30,
        v32 > 0.0))
  {
    *(double *)(v3 + 200) = v32;
    *(_BYTE *)(v3 + 208) = 0;
    v33 = sub_211A47724();
    v34 = sub_211A47D30();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 134217984;
      v42 = v32;
      sub_211A47E2C();
      _os_log_impl(&dword_21190D000, v33, v34, "FMFSecureLocCtrl: overriding liveAnimationTimeoutDuration %f", v35, 0xCu);
      MEMORY[0x212BE48A0](v35, -1, -1);
    }
    swift_release();

  }
  else
  {
    swift_release();
    v33 = v20;
  }

  return v3;
}

void sub_211A0A0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  void *v19;
  uint64_t v20;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "👀 FMFSecureLocCtrl: setting location update block", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  v6 = *(void **)(v1 + 24);
  v7 = swift_allocObject();
  swift_weakInit();
  v19 = sub_211A1AE18;
  v20 = v7;
  v8 = MEMORY[0x24BDAC760];
  v15 = MEMORY[0x24BDAC760];
  v16 = 1107296256;
  v17 = sub_211A0A730;
  v18 = &unk_24CCCE8A8;
  v9 = _Block_copy(&v15);
  v10 = v6;
  swift_release();
  objc_msgSend(v10, sel_setLocationUpdateBlock_, v9);
  _Block_release(v9);

  v11 = *(void **)(v1 + 24);
  v12 = swift_allocObject();
  swift_weakInit();
  v19 = sub_211A1AE20;
  v20 = v12;
  v15 = v8;
  v16 = 1107296256;
  v17 = sub_211A0ABCC;
  v18 = &unk_24CCCE8D0;
  v13 = _Block_copy(&v15);
  v14 = v11;
  swift_release();
  objc_msgSend(v14, sel_startMonitoringFailedSubscriptions_, v13);
  _Block_release(v13);

}

uint64_t sub_211A0A2B8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_211A480A8();
      v23 = v7;
      v24 = v3;
      if (result)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)MEMORY[0x212BE3DA8](0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          v15 = *(id *)(a1 + 32);
        }
        v16 = v15;
        swift_bridgeObjectRelease();
        v17 = objc_msgSend(v16, sel_publishReason);

        if (v17 == (id)7)
        {
          v18 = 1;
LABEL_12:
          v19 = *(void **)(v13 + 136);
          v20 = swift_allocObject();
          *(_QWORD *)(v20 + 16) = a1;
          *(_QWORD *)(v20 + 24) = v13;
          *(_BYTE *)(v20 + 32) = v18;
          aBlock[4] = sub_211A1AE60;
          aBlock[5] = v20;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_21192382C;
          aBlock[3] = &unk_24CCCE970;
          v21 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          v22 = v19;
          swift_retain();
          sub_211A477B4();
          v25 = MEMORY[0x24BEE4AF8];
          sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          sub_211958C38((uint64_t *)&unk_254ACC1D0);
          sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
          sub_211A47EA4();
          MEMORY[0x212BE3BC8](0, v11, v6, v21);
          _Block_release(v21);
          swift_release();

          (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v2);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v23);
          return swift_release();
        }
LABEL_11:
        v18 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v23 = v7;
      v24 = v3;
      if (v14)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_211A0A59C(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v5 = sub_211A47748();
  sub_21194F3E0(v5, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v6 = sub_211A47724();
  v7 = sub_211A47D30();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_211A480A8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v6, v7, "👀 FMFSecureLocCtrl: %ld locations received from spd (location update block)", v8, 0xCu);
    MEMORY[0x212BE48A0](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_211A0FA28(a1, 0, a3 & 1);
}

uint64_t sub_211A0A730(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_211911824(0, &qword_254ACABC0);
  v2 = sub_211A47AA8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0A79C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = sub_211A4779C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_211A477D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v20 = v3;
    v14 = *(void **)(result + 136);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = v13;
    aBlock[4] = sub_211A1AE40;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCE920;
    v16 = _Block_copy(aBlock);
    v19 = v7;
    v17 = v16;
    v18 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_211A477B4();
    v21 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v11, v6, v17);
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_211A0A9CC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (qword_254AC7B80 != -1)
    swift_once();
  v0 = sub_211A47748();
  sub_21194F3E0(v0, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v1 = sub_211A47724();
  v2 = sub_211A47D30();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v12 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x212BE38C8](v5, MEMORY[0x24BEE0D00]);
    v8 = v7;
    swift_bridgeObjectRelease();
    sub_211950A9C(v6, v8, &v12);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v1, v2, "👀 FMFSecureLocCtrl: Failed subscription received from spd, no location for findMyIds: %s. Clear cached locations", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v4, -1, -1);
    MEMORY[0x212BE48A0](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = swift_bridgeObjectRetain();
  v10 = sub_2119591D0(v9);
  swift_bridgeObjectRelease();
  sub_211A0FA28(MEMORY[0x24BEE4AF8], v10, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0ABCC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_211A47AA8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0AC24(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock[6];

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2119591D0(v14);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 80) + 16) <= *(_QWORD *)(v15 + 16) >> 3)
  {
    aBlock[0] = v15;
    v33 = swift_bridgeObjectRetain();
    sub_2119494CC(v33);
    swift_bridgeObjectRelease();
    v17 = aBlock[0];
    if (*(_QWORD *)(aBlock[0] + 16))
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v16 = swift_bridgeObjectRetain();
  v17 = sub_2119484CC(v16, v15);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v17 + 16))
    return swift_bridgeObjectRelease();
LABEL_3:
  v18 = a2 & 1;
  swift_beginAccess();
  v19 = swift_bridgeObjectRetain();
  sub_211A0B0F8(v19);
  swift_endAccess();
  v20 = sub_21194FDA0(v17);
  swift_bridgeObjectRelease();
  v21 = sub_211A0B264((uint64_t)v20);
  swift_retain();
  v43 = sub_2119F51F4(v21);
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v44 = v9;
  v45 = v6;
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v42 = v5;
    v28 = v27;
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v28 = 136315394;
    v41 = v20;
    LOBYTE(v48) = v18;
    v29 = sub_211A47928();
    v48 = sub_211950A9C(v29, v30, aBlock);
    v20 = v41;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    v48 = sub_211950A9C(v43, v23, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v25, v26, "👀 FMFSecureLocCtrl: telling FMFManager begin waiting for %s for %s", (uint8_t *)v28, 0x16u);
    v31 = v40;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v31, -1, -1);
    v32 = v28;
    v5 = v42;
    MEMORY[0x212BE48A0](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v35 = *(void **)(v3 + 144);
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = v18;
  *(_QWORD *)(v36 + 24) = v3;
  *(_QWORD *)(v36 + 32) = v20;
  aBlock[4] = (uint64_t)sub_211A1ADEC;
  aBlock[5] = v36;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21192382C;
  aBlock[3] = (uint64_t)&unk_24CCCE880;
  v37 = _Block_copy(aBlock);
  v38 = v35;
  swift_retain();
  sub_211A477B4();
  v48 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v39 = v44;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v39, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v39, v5);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v47);
  return swift_release();
}

uint64_t sub_211A0B0F8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_211959264(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_211A0B264(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_211A26860(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_211958C38(&qword_254AC7C58);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211A26860(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_211A26860(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_211A0B3A0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t aBlock[6];

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v45 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2119591D0(v14);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_211A18CE8(v16, v15);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = a2 & 1;
    swift_beginAccess();
    sub_2119494CC(v17);
    swift_endAccess();
    v19 = sub_21194FDA0(v17);
    swift_release();
    v42 = v19;
    v20 = sub_211A0B264((uint64_t)v19);
    swift_retain();
    v41 = sub_2119F51F4(v20);
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_254AC7B80 != -1)
      swift_once();
    v43 = v9;
    v44 = v6;
    v23 = sub_211A47748();
    sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v24 = sub_211A47724();
    v25 = sub_211A47D30();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v40 = v5;
      v27 = v26;
      v39 = swift_slowAlloc();
      aBlock[0] = v39;
      *(_DWORD *)v27 = 136315394;
      LOBYTE(v47) = v18;
      v28 = sub_211A47928();
      v47 = sub_211950A9C(v28, v29, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_211950A9C(v41, v22, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v24, v25, "👀 FMFSecureLocCtrl: telling FMFManager end waiting for %s for %s", (uint8_t *)v27, 0x16u);
      v30 = v39;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v30, -1, -1);
      v31 = v27;
      v5 = v40;
      MEMORY[0x212BE48A0](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = *(void **)(v3 + 144);
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = v18;
    v34 = v42;
    *(_QWORD *)(v33 + 24) = v3;
    *(_QWORD *)(v33 + 32) = v34;
    aBlock[4] = (uint64_t)sub_211A1AD90;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCE830;
    v35 = _Block_copy(aBlock);
    v36 = v32;
    swift_retain();
    sub_211A477B4();
    v47 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v37 = v43;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v13, v37, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v5);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
  }
  return swift_release();
}

uint64_t sub_211A0B834(char a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t result;

  if ((a1 & 1) != 0)
  {
    result = MEMORY[0x212BE496C](a2 + 184);
    if (!result)
      return result;
    a4(a3);
  }
  else
  {
    result = MEMORY[0x212BE496C](a2 + 168);
    if (!result)
      return result;
    a5(a3);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_211A0B8AC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[6];

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2119591D0(v14);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 88) + 16) <= *(_QWORD *)(v15 + 16) >> 3)
  {
    aBlock[0] = v15;
    v31 = swift_bridgeObjectRetain();
    sub_2119494CC(v31);
    swift_bridgeObjectRelease();
    v17 = aBlock[0];
    if (*(_QWORD *)(aBlock[0] + 16))
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  v16 = swift_bridgeObjectRetain();
  v17 = sub_2119484CC(v16, v15);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v17 + 16))
    return swift_bridgeObjectRelease();
LABEL_3:
  swift_beginAccess();
  v18 = swift_bridgeObjectRetain();
  sub_211A0B0F8(v18);
  swift_endAccess();
  v19 = sub_21194FDA0(v17);
  swift_bridgeObjectRelease();
  v20 = sub_211A0B264((uint64_t)v19);
  swift_retain();
  v41 = sub_2119F51F4(v20);
  v22 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v42 = v9;
  v43 = v6;
  v23 = sub_211A47748();
  sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = a2 & 1;
    v27 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v40 = v5;
    aBlock[0] = v39;
    *(_DWORD *)v27 = 136315394;
    LOBYTE(v46) = v26;
    v28 = sub_211A47928();
    v46 = sub_211950A9C(v28, v29, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    v46 = sub_211950A9C(v41, v22, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v24, v25, "👀 FMFSecureLocCtrl: telling FMFManager to set fallback-to-legacy from %s for %s", (uint8_t *)v27, 0x16u);
    v30 = v39;
    swift_arrayDestroy();
    v5 = v40;
    MEMORY[0x212BE48A0](v30, -1, -1);
    MEMORY[0x212BE48A0](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = *(void **)(v3 + 144);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v3;
  *(_QWORD *)(v34 + 24) = v19;
  aBlock[4] = (uint64_t)sub_211A1AD6C;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_21192382C;
  aBlock[3] = (uint64_t)&unk_24CCCE7E0;
  v35 = _Block_copy(aBlock);
  v36 = v33;
  swift_retain();
  sub_211A477B4();
  v46 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v37 = v42;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v13, v37, v35);
  _Block_release(v35);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v5);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v45);
  return swift_release();
}

uint64_t sub_211A0BD78(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[6];

  v3 = v2;
  v5 = sub_211A4779C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_2119591D0(v14);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_211A18CE8(v16, v15);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v17 + 16))
  {
    v40 = v10;
    v41 = v9;
    swift_beginAccess();
    sub_2119494CC(v17);
    swift_endAccess();
    v18 = sub_21194FDA0(v17);
    swift_release();
    v19 = sub_211A0B264((uint64_t)v18);
    swift_retain();
    v39 = sub_2119F51F4(v19);
    v21 = v20;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_254AC7B80 != -1)
      swift_once();
    v42 = v6;
    v43 = v5;
    v22 = sub_211A47748();
    sub_21194F3E0(v22, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v23 = sub_211A47724();
    v24 = sub_211A47D30();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = a2 & 1;
      v26 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      aBlock[0] = v38;
      *(_DWORD *)v26 = 136315394;
      LOBYTE(v45) = v25;
      v27 = sub_211A47928();
      v45 = sub_211950A9C(v27, v28, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v45 = sub_211950A9C(v39, v21, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v23, v24, "👀 FMFSecureLocCtrl: telling FMFManager to clear fallback-to-legacy from %s for %s", (uint8_t *)v26, 0x16u);
      v29 = v38;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v29, -1, -1);
      MEMORY[0x212BE48A0](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v30 = *(void **)(v3 + 144);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v3;
    *(_QWORD *)(v31 + 24) = v18;
    aBlock[4] = (uint64_t)sub_211A1AD34;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCE790;
    v32 = _Block_copy(aBlock);
    v33 = v30;
    swift_retain();
    sub_211A477B4();
    v45 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v34 = v41;
    v35 = v43;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v13, v34, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v40);
  }
  return swift_release();
}

uint64_t sub_211A0C20C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = MEMORY[0x212BE496C](a1 + 168);
  if (result)
  {
    a3(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_211A0C264(unint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  void *v11;

  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_211A480A8();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    v8 = a2 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x212BE3DA8](v7, a1);
      else
        v9 = *(id *)(a1 + 8 * v7 + 32);
      v10 = v9;
      ++v7;
      v11 = v9;
      sub_211A0C350(&v11, v2, v8);

    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_211A0C350(void **a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t inited;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = a3 & 1;
  v6 = sub_211A47208();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *(void **)(a2 + 216);
  v13 = v11;
  v14 = objc_msgSend(v13, sel_timestamp);
  sub_211A471E4();

  v15 = (void *)sub_211A471A8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v16 = objc_msgSend(v12, sel_stringFromDate_, v15);

  v17 = sub_211A47910();
  v19 = v18;

  sub_211958C38(&qword_254ACC560);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_211A514E0;
  objc_msgSend(v13, sel_latitude);
  v21 = MEMORY[0x24BEE13C8];
  v22 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v20 + 64) = v22;
  *(_QWORD *)(v20 + 32) = v23;
  objc_msgSend(v13, sel_longitude);
  *(_QWORD *)(v20 + 96) = v21;
  *(_QWORD *)(v20 + 104) = v22;
  *(_QWORD *)(v20 + 72) = v24;
  v25 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v20 + 136) = MEMORY[0x24BEE0D00];
  v26 = sub_2119512B0();
  *(_QWORD *)(v20 + 144) = v26;
  *(_QWORD *)(v20 + 112) = v17;
  *(_QWORD *)(v20 + 120) = v19;
  v27 = objc_msgSend(v13, sel_locationLabel);
  if (v27)
  {
    v28 = v27;
    v29 = sub_211A47910();
    v31 = v30;

    v32 = (uint64_t *)(v20 + 152);
    *(_QWORD *)(v20 + 176) = v25;
    *(_QWORD *)(v20 + 184) = v26;
    if (v31)
    {
      *v32 = v29;
      goto LABEL_6;
    }
  }
  else
  {
    v32 = (uint64_t *)(v20 + 152);
    *(_QWORD *)(v20 + 176) = v25;
    *(_QWORD *)(v20 + 184) = v26;
  }
  *v32 = 7104878;
  v31 = 0xE300000000000000;
LABEL_6:
  *(_QWORD *)(v20 + 160) = v31;
  LOBYTE(v56) = v5;
  v33 = sub_211A47928();
  *(_QWORD *)(v20 + 216) = v25;
  *(_QWORD *)(v20 + 224) = v26;
  *(_QWORD *)(v20 + 192) = v33;
  *(_QWORD *)(v20 + 200) = v34;
  v35 = sub_211A08D08((uint64_t)objc_msgSend(v13, sel_publishReason));
  *(_QWORD *)(v20 + 256) = v25;
  *(_QWORD *)(v20 + 264) = v26;
  *(_QWORD *)(v20 + 232) = v35;
  *(_QWORD *)(v20 + 240) = v36;
  v37 = sub_211A4791C();
  v39 = v38;
  sub_211958C38(&qword_254ACA3B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  v41 = objc_msgSend(v13, sel_findMyId);
  v42 = sub_211A47910();
  v44 = v43;

  *(_QWORD *)(inited + 32) = v42;
  *(_QWORD *)(inited + 40) = v44;
  swift_retain();
  v45 = sub_2119F51F4(inited);
  v47 = v46;
  swift_release();
  swift_setDeallocating();
  sub_211958C38(&qword_254AC7C58);
  swift_arrayDestroy();
  if (qword_254AC7B80 != -1)
    swift_once();
  v48 = sub_211A47748();
  sub_21194F3E0(v48, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = sub_211A47724();
  v50 = sub_211A47D30();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v56 = v52;
    *(_DWORD *)v51 = 136315394;
    v54 = v37;
    swift_bridgeObjectRetain();
    v55 = sub_211950A9C(v45, v47, &v56);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    v55 = sub_211950A9C(v54, v39, &v56);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v49, v50, "👀 FMFSecureLocCtrl: spd location for %s: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v52, -1, -1);
    MEMORY[0x212BE48A0](v51, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_211A0C808(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v5 = v4;
  v9 = a2 & 1;
  v10 = sub_211A4779C();
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_211A477D8();
  v14 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v5 + 136);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v5;
  *(_BYTE *)(v19 + 32) = v9;
  *(_QWORD *)(v19 + 40) = a3;
  *(_QWORD *)(v19 + 48) = a4;
  aBlock[4] = sub_211A1AFDC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCEA60;
  v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v21 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_211A477B4();
  v26 = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v24);
  return swift_release();
}

uint64_t sub_211A0CA20(uint64_t a1, _QWORD *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  const char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[3];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v94 = a4;
  v95 = a5;
  LODWORD(v97) = a3;
  v98 = a2;
  v6 = type metadata accessor for FMFFriend();
  MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (uint64_t *)((char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v96 = v8;
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v13 = *(_QWORD *)(v8 + 72);
    v93 = a1;
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v15 = v11;
    v99 = v13;
    v100 = v6;
    do
    {
      sub_211934794(v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((*((_BYTE *)v10 + *(int *)(v6 + 36)) & 2) != 0)
      {
        v16 = *v10;
        v17 = v10[1];
        swift_bridgeObjectRetain();
        sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_2119B02DC(0, v14[2] + 1, 1, v14);
        v19 = v14[2];
        v18 = v14[3];
        if (v19 >= v18 >> 1)
          v14 = sub_2119B02DC((_QWORD *)(v18 > 1), v19 + 1, 1, v14);
        v14[2] = v19 + 1;
        v20 = &v14[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        v13 = v99;
        v6 = v100;
      }
      else
      {
        sub_211934758((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      }
      v12 += v13;
      --v15;
    }
    while (v15);
    a1 = v93;
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v21 = v97 & 1;
  v22 = sub_211A0B264((uint64_t)v14);
  swift_bridgeObjectRelease();
  v23 = v98;
  swift_retain();
  v24 = sub_2119F51F4(v22);
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v27 = sub_211A47748();
  v28 = sub_21194F3E0(v27, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v29 = sub_211A47724();
  v30 = sub_211A47D30();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v99 = swift_slowAlloc();
    v100 = v28;
    v102[0] = v99;
    *(_DWORD *)v31 = 136315394;
    LOBYTE(v105) = v21;
    v97 = v24;
    v32 = sub_211A47928();
    v105 = sub_211950A9C(v32, v33, v102);
    sub_211A47E2C();
    v23 = v98;
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    v105 = sub_211950A9C(v97, v26, v102);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v29, v30, "👀 FMFSecureLocCtrl: asked-subscribing %s for %s", (uint8_t *)v31, 0x16u);
    v34 = v99;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v34, -1, -1);
    MEMORY[0x212BE48A0](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v35 = v23[4];
  v36 = v23[7];
  v104 = v36;
  v105 = v35;
  if (v21)
  {
    if (v11)
    {
      v39 = (uint64_t *)(a1
                      + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80)));
      v40 = *(_QWORD *)(v96 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      do
      {
        sub_211A0DEE8(v39, (uint64_t)&v104, (uint64_t)v23, 1);
        v39 = (uint64_t *)((char *)v39 + v40);
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      v36 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v63 = swift_bridgeObjectRetain();
    v64 = sub_211A08B90(v63);
    v100 = 0;
    v65 = sub_211A1A990(v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 = sub_2119A5658(v65);
    swift_bridgeObjectRelease();
    swift_retain();
    v67 = sub_2119F51F4((uint64_t)v66);
    v69 = v68;
    swift_release();
    swift_release();
    v70 = v23[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v65) = sub_211A0930C(v36, v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v65 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v73 = sub_211A47724();
      v74 = sub_211A47D30();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = swift_slowAlloc();
        v76 = swift_slowAlloc();
        v102[0] = v76;
        *(_DWORD *)v75 = 136315394;
        LOBYTE(v103) = 1;
        v77 = sub_211A47928();
        v103 = sub_211950A9C(v77, v78, v102);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 12) = 2080;
        swift_bridgeObjectRetain();
        v103 = sub_211950A9C(v67, v69, v102);
        sub_211A47E2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21190D000, v73, v74, "👀 FMFSecureLocCtrl: elected-subscribing %s for %s", (uint8_t *)v75, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v76, -1, -1);
        MEMORY[0x212BE48A0](v75, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v83 = swift_bridgeObjectRetain();
      v84 = sub_211A08A18(v83);
      v85 = sub_2119591D0(v84);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v87 = v94;
      v86 = v95;
      v88 = v98;
      sub_211A116E0(v85, 1, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      v89 = swift_bridgeObjectRetain();
      v90 = sub_211A0888C(v89);
      v91 = sub_211A1A8BC(v90);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v88[7] = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v88[8] = v87;
      v88[9] = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();
    v49 = sub_211A47724();
    v50 = sub_211A47D0C();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v103 = v52;
      *(_DWORD *)v51 = 136315394;
      LOBYTE(v102[0]) = 1;
      v71 = sub_211A47928();
      v102[0] = sub_211950A9C(v71, v72, &v103);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2048;
      swift_beginAccess();
      v101 = *(_QWORD *)(v104 + 16);
      sub_211A47E2C();
      v55 = "👀 FMFSecureLocCtrl: no change for subscribing %s for %ld handles";
      goto LABEL_37;
    }
LABEL_38:

LABEL_45:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v11)
  {
    v37 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80)));
    v38 = *(_QWORD *)(v96 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    do
    {
      sub_211A0D678(v37, &v105, (uint64_t)v23, 0);
      v37 = (uint64_t *)((char *)v37 + v38);
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v35 = v105;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v41 = swift_bridgeObjectRetain();
  v42 = sub_21194FDA0(v41);
  swift_bridgeObjectRelease();
  v43 = sub_211A0B264((uint64_t)v42);
  swift_release();
  swift_retain();
  v44 = sub_2119F51F4(v43);
  v46 = v45;
  swift_bridgeObjectRelease();
  swift_release();
  v47 = v23[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = sub_211A0906C(v35, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v49 = sub_211A47724();
    v50 = sub_211A47D0C();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v103 = v52;
      *(_DWORD *)v51 = 136315394;
      LOBYTE(v102[0]) = 0;
      v53 = sub_211A47928();
      v102[0] = sub_211950A9C(v53, v54, &v103);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2048;
      swift_beginAccess();
      v101 = *(_QWORD *)(v105 + 16);
      sub_211A47E2C();
      v55 = "👀 FMFSecureLocCtrl: no change for subscribing %s %ld handles";
LABEL_37:
      _os_log_impl(&dword_21190D000, v49, v50, v55, (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v52, -1, -1);
      MEMORY[0x212BE48A0](v51, -1, -1);
      goto LABEL_38;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v56 = sub_211A47724();
  v57 = sub_211A47D30();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v102[0] = v59;
    *(_DWORD *)v58 = 136315394;
    LOBYTE(v103) = 0;
    v60 = sub_211A47928();
    v103 = sub_211950A9C(v60, v61, v102);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    swift_bridgeObjectRetain();
    v103 = sub_211950A9C(v44, v46, v102);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v56, v57, "👀 FMFSecureLocCtrl: elected-subscribing %s for %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v59, -1, -1);
    v62 = v58;
    v23 = v98;
    MEMORY[0x212BE48A0](v62, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v79 = v105;
  v80 = swift_bridgeObjectRetain();
  v82 = v94;
  v81 = v95;
  sub_211A116E0(v80, 0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v23[4] = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23[5] = v82;
  v23[6] = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0D678(uint64_t *a1, uint64_t *a2, uint64_t a3, char a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  int v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = a4 & 1;
  v7 = type metadata accessor for FMFFriend();
  if ((*((_BYTE *)a1 + *(int *)(v7 + 36)) & 2) != 0)
  {
    swift_retain();
    v18 = sub_21194162C((uint64_t)a1);
    swift_release();
    if ((v18 & 1) != 0)
    {
      v20 = *a1;
      v19 = a1[1];
      swift_bridgeObjectRetain();
      sub_211959264(&v46, v20, v19);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *a2;
      v23 = *a1;
      v22 = a1[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = sub_211A0DBA8(v23, v22, v21);
      v26 = v25;
      v28 = v27;
      v29 = ~v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211A1AF6C(v24, v26, v28);
      if (v29)
      {
        sub_211958C38((uint64_t *)&unk_254ACC540);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_211A4A230;
        *(_QWORD *)(inited + 32) = v23;
        *(_QWORD *)(inited + 40) = v22;
        swift_bridgeObjectRetain();
        sub_211A0B3A0(inited, v6);
        swift_setDeallocating();
        return swift_arrayDestroy();
      }
      else
      {
        sub_211958C38(&qword_254ACA3B8);
        v31 = swift_initStackObject();
        *(_OWORD *)(v31 + 16) = xmmword_211A4A230;
        *(_QWORD *)(v31 + 32) = v23;
        *(_QWORD *)(v31 + 40) = v22;
        swift_bridgeObjectRetain();
        swift_retain();
        v32 = sub_2119F51F4(v31);
        v34 = v33;
        swift_release();
        swift_setDeallocating();
        sub_211958C38(&qword_254AC7C58);
        swift_arrayDestroy();
        if (qword_254AC7B80 != -1)
          swift_once();
        v35 = sub_211A47748();
        sub_21194F3E0(v35, (uint64_t)qword_254ADC7E8);
        swift_bridgeObjectRetain();
        v36 = sub_211A47724();
        v37 = sub_211A47D30();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v45 = swift_slowAlloc();
          v46 = v45;
          *(_DWORD *)v38 = 136315394;
          v44 = v32;
          v39 = v6;
          LOBYTE(v47) = v6;
          v40 = sub_211A47928();
          v47 = sub_211950A9C(v40, v41, &v46);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2080;
          swift_bridgeObjectRetain();
          v47 = sub_211950A9C(v44, v34, &v46);
          sub_211A47E2C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21190D000, v36, v37, "👀 FMFSecureLocCtrl: fallback to legacy (not capable) %s for %s", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v45, -1, -1);
          MEMORY[0x212BE48A0](v38, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          v39 = v6;
        }
        sub_211958C38((uint64_t *)&unk_254ACC540);
        v42 = swift_initStackObject();
        *(_OWORD *)(v42 + 16) = xmmword_211A4A230;
        v43 = a1[1];
        *(_QWORD *)(v42 + 32) = *a1;
        *(_QWORD *)(v42 + 40) = v43;
        swift_bridgeObjectRetain();
        sub_211A0B8AC(v42, v39);
        swift_setDeallocating();
        return swift_arrayDestroy();
      }
    }
  }
  else
  {
    v8 = v7;
    v9 = *a1;
    v10 = a1[1];
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    sub_211A1A2E8(v11, v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_211A1846C(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_211958C38(&qword_254ACA3C0);
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
      v16 = (v15 + 32) & ~v15;
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_211A4A230;
      sub_211934794((uint64_t)a1, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211A0E104(v17, v6);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unint64_t sub_211A0DBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  unint64_t result;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_211A48318();
    sub_211A4797C();
    v6 = sub_211A48348();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_211A48258() & 1) != 0)
        return v8;
      v14 = ~v7;
      v8 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
      {
        while (1)
        {
          v15 = (_QWORD *)(v10 + 16 * v8);
          v16 = *v15 == a1 && v15[1] == a2;
          if (v16 || (sub_211A48258() & 1) != 0)
            break;
          result = 0;
          v8 = (v8 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
            return result;
        }
        return v8;
      }
    }
  }
  return 0;
}

unint64_t sub_211A0DCFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v26;
  int v27;
  uint64_t v28;
  _BOOL4 v29;

  if (*(_QWORD *)(a4 + 16))
  {
    v7 = a3 & 1;
    v8 = a3 & 0x100;
    v9 = a3 & 0x10000;
    sub_211A48318();
    swift_bridgeObjectRetain();
    v28 = a1;
    sub_211A4797C();
    swift_bridgeObjectRelease();
    sub_211A48330();
    sub_211A48330();
    sub_211A48330();
    v10 = sub_211A48348();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = a4 + 56;
    if (((*(_QWORD *)(a4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      v14 = ~v11;
      v15 = *(_QWORD *)(a4 + 48);
      v16 = v28;
      v26 = v8;
      v27 = v9;
      do
      {
        v20 = v15 + 24 * v12;
        v21 = *(unsigned __int8 *)(v20 + 16);
        v22 = *(unsigned __int8 *)(v20 + 17);
        v23 = (v9 != 0) ^ *(unsigned __int8 *)(v20 + 18);
        if (*(_QWORD *)v20 == v16 && *(_QWORD *)(v20 + 8) == a2)
        {
          if ((((v7 != 0) ^ v21 | (v8 != 0) ^ v22 | v23) & 1) == 0)
            return v12;
        }
        else
        {
          v29 = v8 != 0;
          v17 = v13;
          v18 = v14;
          v19 = sub_211A48258();
          v14 = v18;
          v13 = v17;
          v16 = v28;
          v8 = v26;
          v9 = v27;
          if (!(((v7 != 0) ^ v21) & 1 | ((v19 & 1) == 0) | (v29 ^ v22 | v23) & 1))
            return v12;
        }
        v12 = (v12 + 1) & v14;
      }
      while (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_211A0DEE8(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  int64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[8];

  v7 = type metadata accessor for FMFFriend();
  if ((*((_BYTE *)a1 + *(int *)(v7 + 36)) & 2) != 0)
  {
    swift_retain();
    v18 = sub_21194162C((uint64_t)a1);
    result = swift_release();
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(a3 + 56);
      v20 = *(_BYTE *)(v19 + 32);
      v21 = 1 << v20;
      v22 = -1;
      if (1 << v20 < 64)
        v22 = ~(-1 << (1 << v20));
      if ((v22 & *(_QWORD *)(v19 + 56)) == 0)
      {
        v23 = v20 & 0x3F;
        if (v23 >= 7)
        {
          if (*(_QWORD *)(v19 + 64))
            return result;
          if (v23 >= 8)
          {
            if (*(_QWORD *)(v19 + 72) || *(_QWORD *)(v19 + 80))
              return result;
            if (v23 >= 9)
            {
              if (*(_QWORD *)(v19 + 88) || *(_QWORD *)(v19 + 96) || *(_QWORD *)(v19 + 104))
                return result;
              v24 = (unint64_t)(v21 + 63) >> 6;
              if (v24 <= 7)
                v24 = 7;
              v25 = v24 - 7;
              v26 = (uint64_t *)(v19 + 112);
              while (v25)
              {
                v27 = *v26++;
                --v25;
                if (v27)
                  return result;
              }
            }
          }
        }
        v29 = *a1;
        v28 = a1[1];
        swift_bridgeObjectRetain();
        sub_211A27624((uint64_t)v30, v29, v28, 0);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    v8 = v7;
    v9 = *a1;
    v10 = a1[1];
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    sub_211A1A48C(v11, v9, v10);
    v13 = v12;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
      sub_211958C38(&qword_254ACA3C0);
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
      v16 = (v15 + 32) & ~v15;
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_211A4A230;
      sub_211934794((uint64_t)a1, v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211A0E104(v17, a4 & 1);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_211A0E104(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v3 = v2;
  v5 = a2 & 1;
  v6 = sub_211A4779C();
  v20[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A477D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v2 + 136);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = v3;
  *(_BYTE *)(v16 + 32) = v5;
  aBlock[4] = sub_211A1AF10;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCE9C0;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_211A477B4();
  v20[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v14, v9, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v20[0] + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

void sub_211A0E308(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  _QWORD *v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int64_t v137;
  uint64_t v138;
  uint64_t aBlock[6];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v130 = sub_211A4779C();
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130, v6);
  v128 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_211A477D8();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127, v8);
  v125 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMFFriend();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v131 = (uint64_t *)((char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (uint64_t *)((char *)&v120 - v16);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = MEMORY[0x24BEE4AF8];
  v132 = a2;
  v124 = a1;
  v137 = v18;
  v135 = v11;
  if (v18)
  {
    LODWORD(v134) = a3;
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_211948C10(0, v18, 0);
    v20 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v21 = *(_QWORD *)(v11 + 72);
    v19 = aBlock[0];
    v22 = v18;
    v136 = v21;
    do
    {
      sub_211934794(v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v23 = *v17;
      v24 = v17[1];
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211948C10(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v21 = v136;
        v19 = aBlock[0];
      }
      v26 = *(_QWORD *)(v19 + 16);
      v25 = *(_QWORD *)(v19 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_211948C10(v25 > 1, v26 + 1, 1);
        v21 = v136;
        v19 = aBlock[0];
      }
      *(_QWORD *)(v19 + 16) = v26 + 1;
      v27 = v19 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v23;
      *(_QWORD *)(v27 + 40) = v24;
      v20 += v21;
      --v22;
    }
    while (v22);
    a2 = v132;
    LOBYTE(a3) = v134;
  }
  v28 = a3 & 1;
  v29 = sub_211A0B264(v19);
  swift_retain();
  v122 = sub_2119F51F4(v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v32 = sub_211A47748();
  v33 = sub_21194F3E0(v32, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v123 = v33;
  v34 = sub_211A47724();
  v35 = sub_211A47D30();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v136 = swift_slowAlloc();
    aBlock[0] = v136;
    *(_DWORD *)v36 = 136315394;
    LOBYTE(v142) = v28;
    v37 = sub_211A47928();
    v142 = sub_211950A9C(v37, v38, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain();
    v142 = sub_211950A9C(v122, v31, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v34, v35, "👀 FMFSecureLocCtrl: asked-unsubscribing %s for %s", (uint8_t *)v36, 0x16u);
    v39 = v136;
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v39, -1, -1);
    MEMORY[0x212BE48A0](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v40 = v137;
  v41 = v131;
  v42 = v135;
  sub_211A0BD78(v19, v28);
  sub_211A0B3A0(v19, v28);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v43 = a2[4];
    v142 = v43;
    v141 = MEMORY[0x24BEE4B08];
    if (v40)
    {
      v121 = v31;
      v44 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      v45 = *(_QWORD *)(v42 + 72);
      swift_bridgeObjectRetain();
      v46 = (uint64_t *)(v44 + swift_bridgeObjectRetain() + 8);
      do
      {
        v47 = v40;
        v48 = v142;
        v49 = *(v46 - 1);
        v50 = *v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51 = sub_211A0DBA8(v49, v50, v48);
        v53 = v52;
        v55 = v54;
        v56 = ~v54;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v56)
        {
          sub_211A194BC(v51, v53);
          sub_211A1AF6C(v51, v53, v55);
          swift_bridgeObjectRelease();
        }
        v46 = (uint64_t *)((char *)v46 + v45);
        swift_bridgeObjectRetain();
        sub_211959264(aBlock, v49, v50);
        swift_bridgeObjectRelease();
        v40 = v47 - 1;
      }
      while (v47 != 1);
      swift_bridgeObjectRelease();
      v85 = v142;
      a2 = v132;
      v43 = v132[4];
      v31 = v121;
    }
    else
    {
      swift_bridgeObjectRetain();
      v85 = v43;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = sub_211A0906C(v85, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v87 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v88 = sub_211A47724();
      v89 = sub_211A47D0C();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = swift_slowAlloc();
        v91 = swift_slowAlloc();
        v140 = v91;
        *(_DWORD *)v90 = 136315394;
        LOBYTE(aBlock[0]) = 0;
        v92 = sub_211A47928();
        aBlock[0] = sub_211950A9C(v92, v93, &v140);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2048;
        swift_beginAccess();
        v138 = *(_QWORD *)(v142 + 16);
        sub_211A47E2C();
        _os_log_impl(&dword_21190D000, v88, v89, "👀 FMFSecureLocCtrl: no change for unsubscribing %s for %ld handles", (uint8_t *)v90, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v91, -1, -1);
        MEMORY[0x212BE48A0](v90, -1, -1);
      }

    }
    else
    {
      swift_bridgeObjectRetain();
      v94 = sub_211A47724();
      v95 = sub_211A47D30();
      if (os_log_type_enabled(v94, v95))
      {
        v96 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        aBlock[0] = v97;
        *(_DWORD *)v96 = 136315394;
        LOBYTE(v140) = 0;
        v98 = sub_211A47928();
        v140 = sub_211950A9C(v98, v99, aBlock);
        sub_211A47E2C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2080;
        swift_bridgeObjectRetain();
        v140 = sub_211950A9C(v122, v31, aBlock);
        sub_211A47E2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21190D000, v94, v95, "👀 FMFSecureLocCtrl: unsubscribing %s for %s", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v97, -1, -1);
        MEMORY[0x212BE48A0](v96, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v114 = a2[5];
      v115 = a2[6];
      swift_bridgeObjectRetain();
      v116 = swift_bridgeObjectRetain();
      sub_211A128BC(v116, 0, 0, 0xE000000000000000, v114, v115);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2[4] = v142;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  v57 = a2[7];
  v142 = v57;
  v141 = MEMORY[0x24BEE4B08];
  if (v40)
  {
    v121 = v31;
    v58 = v124 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v133 = *(_QWORD *)(v42 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = 0;
    do
    {
      v62 = sub_211934794(v58, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v63 = v142;
      MEMORY[0x24BDAC7A8](v62, v64);
      *(&v120 - 2) = (uint64_t)v41;
      swift_bridgeObjectRetain();
      v65 = sub_211A08E24(sub_2119E13A4, (uint64_t)(&v120 - 4), v63);
      v67 = v66;
      v69 = v68;
      swift_bridgeObjectRelease();
      if (v67)
      {
        v134 = v59;
        v135 = v58;
        v137 = v40;
        v70 = v132;
        v71 = (void *)v132[18];
        v72 = swift_allocObject();
        *(_QWORD *)(v72 + 16) = v70;
        *(_QWORD *)(v72 + 24) = v65;
        *(_QWORD *)(v72 + 32) = v67;
        *(_BYTE *)(v72 + 40) = v69 & 1;
        *(_BYTE *)(v72 + 41) = BYTE1(v69) & 1;
        *(_BYTE *)(v72 + 42) = BYTE2(v69) & 1;
        aBlock[4] = (uint64_t)sub_211A1AF24;
        aBlock[5] = v72;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_21192382C;
        aBlock[3] = (uint64_t)&unk_24CCCEA10;
        v73 = _Block_copy(aBlock);
        v74 = v65;
        v75 = v71;
        swift_retain();
        swift_bridgeObjectRetain();
        v76 = v125;
        sub_211A477B4();
        v140 = MEMORY[0x24BEE4AF8];
        sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        sub_211958C38((uint64_t *)&unk_254ACC1D0);
        sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
        v77 = v128;
        v78 = v130;
        sub_211A47EA4();
        MEMORY[0x212BE3BC8](0, v76, v77, v73);
        _Block_release(v73);

        (*(void (**)(char *, uint64_t))(v129 + 8))(v77, v78);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v76, v127);
        swift_release();
        v79 = v142;
        LODWORD(v71) = v69 & 0x10101 | v136 & 0xFF000000;
        swift_bridgeObjectRetain();
        LODWORD(v136) = (_DWORD)v71;
        v80 = sub_211A0DCFC(v74, v67, (int)v71, v79);
        v82 = v81;
        v84 = v83;
        LODWORD(v71) = ~v83;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((_DWORD)v71)
        {
          sub_211A193A4(v80, v82);
          sub_211A1AF6C(v80, v82, v84);
          swift_bridgeObjectRelease();
        }
        v40 = v137;
        v41 = v131;
        v59 = v134;
        v58 = v135;
      }
      v60 = *v41;
      v61 = v41[1];
      swift_bridgeObjectRetain();
      sub_211959264(aBlock, v60, v61);
      swift_bridgeObjectRelease();
      sub_211934758((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v58 += v133;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    v86 = v142;
    a2 = v132;
    v57 = v132[7];
    v31 = v121;
  }
  else
  {
    swift_bridgeObjectRetain();
    v86 = v57;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v100 = sub_211A0930C(v86, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v100 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v108 = sub_211A47724();
    v109 = sub_211A47D30();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = swift_slowAlloc();
      v111 = swift_slowAlloc();
      aBlock[0] = v111;
      *(_DWORD *)v110 = 136315394;
      LOBYTE(v140) = 1;
      v112 = sub_211A47928();
      v140 = sub_211950A9C(v112, v113, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      swift_bridgeObjectRetain();
      v140 = sub_211950A9C(v122, v31, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v108, v109, "👀 FMFSecureLocCtrl: unsubscribing %s for %s", (uint8_t *)v110, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v111, -1, -1);
      MEMORY[0x212BE48A0](v110, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v117 = v141;
    v118 = a2[8];
    v119 = a2[9];
    swift_bridgeObjectRetain();
    sub_211A128BC(v117, 1, 0, 0xE000000000000000, v118, v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2[7] = v142;
LABEL_48:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v101 = sub_211A47724();
  v102 = sub_211A47D0C();
  if (os_log_type_enabled(v101, v102))
  {
    v103 = swift_slowAlloc();
    v104 = swift_slowAlloc();
    aBlock[0] = v104;
    *(_DWORD *)v103 = 136315394;
    LOBYTE(v140) = 1;
    v105 = sub_211A47928();
    v140 = sub_211950A9C(v105, v106, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v103 + 12) = 2048;
    v107 = *(_QWORD *)(v86 + 16);
    swift_bridgeObjectRelease();
    v140 = v107;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v101, v102, "👀 FMFSecureLocCtrl: no change for unsubscribing %s for %ld handles", (uint8_t *)v103, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v104, -1, -1);
    MEMORY[0x212BE48A0](v103, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_211A0F30C(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  char v4;
  uint64_t result;

  v4 = BYTE2(a4);
  result = MEMORY[0x212BE496C](a1 + 184);
  if (result)
  {
    sub_2119EC6A8(a2, a3, v4 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_211A0F370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v21[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_211A4779C();
  v21[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_211A477D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v13 = sub_211A47748();
  sub_21194F3E0(v13, (uint64_t)qword_254ADC7E8);
  v14 = sub_211A47724();
  v15 = sub_211A47D30();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21190D000, v14, v15, "👀 FMFSecureLocCtrl: start refreshing", v16, 2u);
    MEMORY[0x212BE48A0](v16, -1, -1);
  }

  sub_211A0A0A0();
  sub_211A0C808(a1, 0, 0, 0);
  v17 = *(void **)(v2 + 136);
  aBlock[4] = sub_211A1AD14;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCE740;
  v18 = _Block_copy(aBlock);
  v19 = v17;
  swift_retain();
  sub_211A477B4();
  v21[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v12, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v21[0] + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return swift_release();
}

uint64_t sub_211A0F614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_211A08A18(v0);
  v2 = sub_2119591D0(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A116E0(v2, 1, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0F6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_211A4779C();
  v19[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_211A477D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v11 = sub_211A47748();
  sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
  v12 = sub_211A47724();
  v13 = sub_211A47D30();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21190D000, v12, v13, "👀 FMFSecureLocCtrl: stop refreshing", v14, 2u);
    MEMORY[0x212BE48A0](v14, -1, -1);
  }

  v15 = *(void **)(v1 + 136);
  aBlock[4] = sub_211A1AD0C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCE718;
  v16 = _Block_copy(aBlock);
  v17 = v15;
  swift_retain();
  sub_211A477B4();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v10, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t sub_211A0F930(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[5];
  v3 = a1[6];
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  sub_211A128BC(v4, 0, 0, 0xE000000000000000, v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_211A08A18(v5);
  v7 = sub_2119591D0(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1[8];
  v9 = a1[9];
  swift_bridgeObjectRetain();
  sub_211A128BC(v7, 1, 0, 0xE000000000000000, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x24BEE4B08];
  a1[4] = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  a1[7] = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_211A0FA28(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  void *v43;
  BOOL v44;
  unint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  int v80;
  unsigned int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  size_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unsigned __int8 *v90;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  id v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  uint8_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[3];
  uint64_t v153;
  int64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t *v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int64_t v173;
  unint64_t v174;
  void *v175;
  int v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181[5];
  uint64_t v182;

  v156 = a2;
  v6 = a3 & 1;
  v7 = type metadata accessor for FMFLocation();
  v167 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v163 = (_QWORD *)((char *)v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v166 = (uint64_t)v152 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v165 = (uint64_t)v152 - v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (uint64_t)v152 - v18;
  v157 = v6;
  v169 = v3;
  sub_211A0C264(a1, v6);
  v20 = (id)(a1 >> 62);
  if (a1 >> 62)
    goto LABEL_162;
  v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v22 = MEMORY[0x24BEE4AF8];
    v170 = v21;
    v171 = a1;
    v154 = v21 & ~(v21 >> 63);
    if (!v21)
      goto LABEL_12;
    v181[0] = MEMORY[0x24BEE4AF8];
    result = sub_211948C10(0, v21 & ~(v21 >> 63), 0);
    if (v170 < 0)
      break;
    v24 = 0;
    v22 = v181[0];
    v25 = a1 & 0xC000000000000001;
    do
    {
      v26 = v22;
      if (v25)
        v27 = (id)MEMORY[0x212BE3DA8](v24, a1);
      else
        v27 = *(id *)(a1 + 8 * v24 + 32);
      v28 = v27;
      v29 = objc_msgSend(v27, sel_findMyId);
      v30 = sub_211A47910();
      v32 = v31;

      v22 = v26;
      v181[0] = v26;
      v33 = *(_QWORD *)(v26 + 16);
      v34 = *(_QWORD *)(v22 + 24);
      if (v33 >= v34 >> 1)
      {
        sub_211948C10(v34 > 1, v33 + 1, 1);
        v22 = v181[0];
      }
      ++v24;
      *(_QWORD *)(v22 + 16) = v33 + 1;
      v35 = v22 + 16 * v33;
      *(_QWORD *)(v35 + 32) = v30;
      *(_QWORD *)(v35 + 40) = v32;
      a1 = v171;
    }
    while (v170 != v24);
LABEL_12:
    v36 = v22;
    v37 = v157;
    sub_211A0B3A0(v22, v157);
    v155 = v36;
    sub_211A0BD78(v36, v37);
    if (v20)
    {
      swift_bridgeObjectRetain();
      v39 = sub_211A480A8();
    }
    else
    {
      v38 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v39 = v38;
    }
    if (v39)
    {
      v162 = a1 & 0xC000000000000001;
      v161 = v39;
      v160 = (uint64_t *)(v169 + 104);
      swift_beginAccess();
      v40 = 0;
      v41 = a1;
      a1 = 0;
      v159 = v41 & 0xFFFFFFFFFFFFFF8;
      v158 = v41 + 32;
      while (1)
      {
        if (v162)
        {
          v42 = (id)MEMORY[0x212BE3DA8](v40, v171);
        }
        else
        {
          if (v40 >= *(_QWORD *)(v159 + 16))
            goto LABEL_158;
          v42 = *(id *)(v158 + 8 * v40);
        }
        v43 = v42;
        v44 = __OFADD__(v40, 1);
        v45 = v40 + 1;
        if (v44)
          goto LABEL_157;
        v168 = v45;
        if (objc_msgSend(v42, sel_publishReason) == (id)6)
        {
          v46 = v43;
          v47 = objc_msgSend(v43, sel_findMyId);
          v20 = (id)sub_211A47910();
          v49 = v48;

          v50 = *v160;
          if (!*(_QWORD *)(*v160 + 16))
          {

LABEL_98:
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          v51 = sub_21195BB68((uint64_t)v20, v49);
          if ((v52 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_98;
          }
          v20 = *(id *)(*(_QWORD *)(v50 + 56) + 8 * v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v20, sel_invalidate);

        }
        else
        {
          if (objc_msgSend(v43, (SEL)&selRef_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_speed_timestamp_+ 6) == (id)7)
          {
            v53 = *(_QWORD *)(v169 + 56);
            v54 = *(_QWORD *)(v53 + 56);
            v172 = v53 + 56;
            v55 = 1 << *(_BYTE *)(v53 + 32);
            if (v55 < 64)
              v56 = ~(-1 << v55);
            else
              v56 = -1;
            v57 = v56 & v54;
            v173 = (unint64_t)(v55 + 63) >> 6;
            v177 = v53;
            swift_bridgeObjectRetain();
            v58 = 0;
            v59 = 0;
            v175 = v43;
            v176 = v4;
            if (v57)
            {
LABEL_33:
              v60 = __clz(__rbit64(v57));
              v61 = (v57 - 1) & v57;
              v62 = v60 | (v59 << 6);
              v63 = v58 + 1;
              if (!__OFADD__(v58, 1))
                goto LABEL_51;
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
              goto LABEL_159;
            }
            while (1)
            {
              v44 = __OFADD__(v59++, 1);
              if (v44)
                goto LABEL_156;
              if (v59 >= v173)
                goto LABEL_95;
              v64 = *(_QWORD *)(v172 + 8 * v59);
              if (!v64)
              {
                v65 = v59 + 1;
                if (v59 + 1 >= v173)
                  goto LABEL_95;
                v64 = *(_QWORD *)(v172 + 8 * v65);
                if (!v64)
                {
                  v65 = v59 + 2;
                  if (v59 + 2 >= v173)
                    goto LABEL_95;
                  v64 = *(_QWORD *)(v172 + 8 * v65);
                  if (!v64)
                  {
                    v65 = v59 + 3;
                    if (v59 + 3 >= v173)
                      goto LABEL_95;
                    v64 = *(_QWORD *)(v172 + 8 * v65);
                    if (!v64)
                    {
                      v65 = v59 + 4;
                      if (v59 + 4 >= v173)
                        goto LABEL_95;
                      v64 = *(_QWORD *)(v172 + 8 * v65);
                      if (!v64)
                      {
                        v65 = v59 + 5;
                        if (v59 + 5 >= v173)
                        {
LABEL_95:

                          swift_release();
                          goto LABEL_18;
                        }
                        v64 = *(_QWORD *)(v172 + 8 * v65);
                        if (!v64)
                        {
                          while (1)
                          {
                            v59 = v65 + 1;
                            if (__OFADD__(v65, 1))
                              goto LABEL_160;
                            if (v59 >= v173)
                              goto LABEL_95;
                            v64 = *(_QWORD *)(v172 + 8 * v59);
                            ++v65;
                            if (v64)
                              goto LABEL_50;
                          }
                        }
                      }
                    }
                  }
                }
                v59 = v65;
              }
LABEL_50:
              v61 = (v64 - 1) & v64;
              v62 = __clz(__rbit64(v64)) + (v59 << 6);
              v63 = v58 + 1;
              if (__OFADD__(v58, 1))
                goto LABEL_155;
LABEL_51:
              v178 = v63;
              v179 = v61;
              v174 = v58;
              v180 = v59;
              v66 = *(_QWORD *)(v177 + 48) + 24 * v62;
              v20 = *(id *)v66;
              v67 = *(_QWORD *)(v66 + 8);
              v68 = *(unsigned __int8 *)(v66 + 16);
              v69 = *(unsigned __int8 *)(v66 + 17);
              v70 = *(unsigned __int8 *)(v66 + 18);
              swift_bridgeObjectRetain_n();
              v71 = objc_msgSend(v43, sel_findMyId);
              v72 = sub_211A47910();
              v74 = v73;

              if (v20 == (id)v72 && v67 == v74)
              {
                v77 = swift_bridgeObjectRelease_n();
                LODWORD(v4) = v176;
              }
              else
              {
                v76 = sub_211A48258();
                swift_bridgeObjectRelease();
                v77 = swift_bridgeObjectRelease();
                LODWORD(v4) = v176;
                if ((v76 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  v58 = v178;
                  v57 = v179;
                  v43 = v175;
                  v59 = v180;
                  if (v179)
                    goto LABEL_33;
                  continue;
                }
              }
              if ((*(_BYTE *)(v169 + 208) & 1) != 0)
              {
                v182 = 0x403E000000000000;
                if (qword_254AC7B90 != -1)
                  v77 = swift_once();
                MEMORY[0x24BDAC7A8](v77, v78);
                LOBYTE(v152[-2]) = 3;
                v152[-1] = &v182;
                sub_211A47DA8();
                v79 = *(double *)v181;
              }
              else
              {
                v79 = *(double *)(v169 + 200);
              }
              if (v69)
                v80 = 256;
              else
                v80 = 0;
              v81 = v164 & 0xFF000000 | v68 | v80;
              if (v70)
                v82 = 0x10000;
              else
                v82 = 0;
              v164 = v81 | v82;
              sub_211A16A44((uint64_t)v20, v67, v81 | v82, 1, v79);
              if ((v68 | v69) == 1)
              {
                v83 = *(_QWORD *)(v169 + 56);
                v84 = *(_QWORD *)(v83 + 16);
                if (v84)
                {
                  sub_211958C38(&qword_254ACA960);
                  v85 = (_QWORD *)swift_allocObject();
                  v86 = j__malloc_size(v85);
                  v85[2] = v84;
                  v85[3] = 2 * ((uint64_t)(v86 - 32) / 24);
                  v87 = sub_211A19BC4((uint64_t)v181, (uint64_t)(v85 + 4), v84, v83);
                  v153 = v181[2];
                  v152[2] = v181[3];
                  v152[1] = v181[4];
                  swift_bridgeObjectRetain_n();
                  result = sub_211973358();
                  if (v87 != v84)
                    goto LABEL_166;
                  swift_bridgeObjectRelease();
                  LODWORD(v4) = v176;
                }
                else
                {
                  v85 = (_QWORD *)MEMORY[0x24BEE4AF8];
                }
                result = swift_isUniquelyReferenced_nonNull_native();
                if ((result & 1) == 0)
                {
                  result = (uint64_t)sub_211A18CD4(v85);
                  v85 = (_QWORD *)result;
                }
                if (v174 >= v85[2])
                  goto LABEL_165;
                v88 = &v85[3 * v174];
                v88[4] = v20;
                v88[5] = v67;
                *((_WORD *)v88 + 24) = 0;
                *((_BYTE *)v88 + 50) = 1;
                swift_bridgeObjectRelease();
                v89 = v85[2];
                sub_211A19DE0();
                v182 = sub_211A47C58();
                v153 = (uint64_t)v85;
                if (v89)
                {
                  v90 = (unsigned __int8 *)v85 + 50;
                  do
                  {
                    v91 = *(_QWORD *)(v90 - 18);
                    v20 = *(id *)(v90 - 10);
                    v92 = *(v90 - 2);
                    v93 = *(v90 - 1);
                    v95 = *v90;
                    v90 += 24;
                    v94 = v95;
                    v96 = v4 & 0xFF000000 | v92;
                    if (v93)
                      v97 = 256;
                    else
                      v97 = 0;
                    v98 = v96 | v97;
                    if (v94)
                      v99 = 0x10000;
                    else
                      v99 = 0;
                    LODWORD(v4) = v98 | v99;
                    swift_bridgeObjectRetain();
                    sub_211A27624((uint64_t)v181, v91, (uint64_t)v20, v4);
                    swift_bridgeObjectRelease();
                    --v89;
                  }
                  while (v89);
                }
                swift_bridgeObjectRelease();
                *(_QWORD *)(v169 + 56) = v182;
                swift_bridgeObjectRelease();
                v43 = v175;
                v57 = v179;
                v59 = v180;
                v58 = v178;
                v176 = v4;
                if (v179)
                  goto LABEL_33;
              }
              else
              {
                swift_bridgeObjectRelease();
                v43 = v175;
                v57 = v179;
                v59 = v180;
                v58 = v178;
                if (v179)
                  goto LABEL_33;
              }
            }
          }

        }
LABEL_18:
        v40 = v168;
        if (v168 == v161)
        {
          swift_bridgeObjectRelease();
          goto LABEL_101;
        }
      }
    }
    swift_bridgeObjectRelease();
    a1 = 0;
LABEL_101:
    v100 = MEMORY[0x24BEE4AF8];
    if (v170)
    {
      v181[0] = MEMORY[0x24BEE4AF8];
      result = sub_211942004(0, v154, 0);
      if (v170 < 0)
        goto LABEL_164;
      v101 = 0;
      v100 = v181[0];
      v102 = v171 & 0xC000000000000001;
      do
      {
        if (v102)
          v103 = (id)MEMORY[0x212BE3DA8](v101, v171);
        else
          v103 = *(id *)(v171 + 8 * v101 + 32);
        sub_211983E70(v103, v19);
        v181[0] = v100;
        v105 = *(_QWORD *)(v100 + 16);
        v104 = *(_QWORD *)(v100 + 24);
        if (v105 >= v104 >> 1)
        {
          sub_211942004(v104 > 1, v105 + 1, 1);
          v100 = v181[0];
        }
        ++v101;
        *(_QWORD *)(v100 + 16) = v105 + 1;
        sub_211942810(v19, v100+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(_QWORD *)(v167 + 72) * v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      }
      while (v170 != v101);
    }
    v180 = swift_allocObject();
    *(_QWORD *)(v180 + 16) = v100;
    v106 = v156;
    if (!v156 || v157)
    {
      swift_bridgeObjectRelease();
LABEL_141:
      v128 = *(_QWORD *)(v180 + 16);
      v129 = *(_QWORD *)(v128 + 16);
      v130 = MEMORY[0x24BEE4AF8];
      if (v129)
      {
        v181[0] = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_211A26860(0, v129, 0);
        v131 = *(unsigned __int8 *)(v167 + 80);
        v179 = v128;
        v132 = v128 + ((v131 + 32) & ~v131);
        v133 = *(_QWORD *)(v167 + 72);
        v130 = v181[0];
        do
        {
          v134 = v163;
          sub_211934794(v132, (uint64_t)v163, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          v135 = *v134;
          v136 = v134[1];
          swift_bridgeObjectRetain();
          sub_211934758((uint64_t)v134, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_211A26860(0, *(_QWORD *)(v130 + 16) + 1, 1);
            v130 = v181[0];
          }
          v138 = *(_QWORD *)(v130 + 16);
          v137 = *(_QWORD *)(v130 + 24);
          if (v138 >= v137 >> 1)
          {
            sub_211A26860(v137 > 1, v138 + 1, 1);
            v130 = v181[0];
          }
          *(_QWORD *)(v130 + 16) = v138 + 1;
          v139 = v130 + 16 * v138;
          *(_QWORD *)(v139 + 32) = v135;
          *(_QWORD *)(v139 + 40) = v136;
          v132 += v133;
          --v129;
        }
        while (v129);
        swift_bridgeObjectRelease();
      }
      swift_retain();
      v140 = sub_2119F51F4(v130);
      v142 = v141;
      swift_bridgeObjectRelease();
      swift_release();
      if (qword_254AC7B80 != -1)
        swift_once();
      v143 = sub_211A47748();
      sub_21194F3E0(v143, (uint64_t)qword_254ADC7E8);
      swift_bridgeObjectRetain();
      v144 = sub_211A47724();
      v145 = sub_211A47D30();
      if (os_log_type_enabled(v144, v145))
      {
        v146 = (uint8_t *)swift_slowAlloc();
        v147 = swift_slowAlloc();
        v181[0] = v147;
        *(_DWORD *)v146 = 136315138;
        swift_bridgeObjectRetain();
        v182 = sub_211950A9C(v140, v142, v181);
        sub_211A47E2C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21190D000, v144, v145, "👀 FMFSecureLocCtrl: shifting locations for %s", v146, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x212BE48A0](v147, -1, -1);
        MEMORY[0x212BE48A0](v146, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v148 = v169;
      v149 = v180;
      v150 = *(_QWORD *)(v180 + 16);
      v151 = swift_allocObject();
      *(_QWORD *)(v151 + 16) = v148;
      *(_QWORD *)(v151 + 24) = v149;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_21193220C(v150, (uint64_t)sub_211A1AC44, v151);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRetain();
    v107 = sub_2119591D0(v155);
    swift_bridgeObjectRelease();
    v181[0] = v106;
    sub_211A1959C(v107);
    v108 = 0;
    v109 = v181[0];
    v110 = *(_QWORD *)(v181[0] + 56);
    v179 = v181[0] + 56;
    v111 = 1 << *(_BYTE *)(v181[0] + 32);
    v112 = -1;
    if (v111 < 64)
      v112 = ~(-1 << v111);
    v19 = v112 & v110;
    v20 = (id)((unint64_t)(v111 + 63) >> 6);
    if ((v112 & v110) != 0)
    {
LABEL_115:
      v113 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v114 = v113 | (v108 << 6);
      goto LABEL_127;
    }
    while (1)
    {
      v44 = __OFADD__(v108++, 1);
      if (v44)
        break;
      if (v108 >= (uint64_t)v20)
        goto LABEL_140;
      v115 = *(_QWORD *)(v179 + 8 * v108);
      if (!v115)
      {
        v116 = v108 + 1;
        if (v108 + 1 >= (uint64_t)v20)
          goto LABEL_140;
        v115 = *(_QWORD *)(v179 + 8 * v116);
        if (!v115)
        {
          v116 = v108 + 2;
          if (v108 + 2 >= (uint64_t)v20)
            goto LABEL_140;
          v115 = *(_QWORD *)(v179 + 8 * v116);
          if (!v115)
          {
            v116 = v108 + 3;
            if (v108 + 3 >= (uint64_t)v20)
            {
LABEL_140:
              swift_release();
              goto LABEL_141;
            }
            v115 = *(_QWORD *)(v179 + 8 * v116);
            if (!v115)
            {
              while (1)
              {
                v108 = v116 + 1;
                if (__OFADD__(v116, 1))
                  goto LABEL_161;
                if (v108 >= (uint64_t)v20)
                  goto LABEL_140;
                v115 = *(_QWORD *)(v179 + 8 * v108);
                ++v116;
                if (v115)
                  goto LABEL_126;
              }
            }
          }
        }
        v108 = v116;
      }
LABEL_126:
      v19 = (v115 - 1) & v115;
      v114 = __clz(__rbit64(v115)) + (v108 << 6);
LABEL_127:
      v117 = (uint64_t *)(*(_QWORD *)(v109 + 48) + 16 * v114);
      v118 = *v117;
      v119 = v117[1];
      v182 = 0x403E000000000000;
      v120 = qword_254AC7B90;
      v121 = swift_bridgeObjectRetain();
      if (v120 != -1)
        v121 = swift_once();
      MEMORY[0x24BDAC7A8](v121, v122);
      LOBYTE(v152[-2]) = 4;
      v152[-1] = &v182;
      sub_211A47DA8();
      sub_211A15918(v118, v119, 0, *(double *)v181);
      LOBYTE(v181[0]) = 0;
      v123 = v165;
      sub_21198472C(v118, v119, (char *)v181, 0, v165);
      sub_211934794(v123, v166, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v124 = v180;
      v125 = *(_QWORD *)(v180 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v124 + 16) = v125;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v125 = sub_21194B098(0, *(_QWORD *)(v125 + 16) + 1, 1, v125);
        *(_QWORD *)(v180 + 16) = v125;
      }
      v4 = *(_QWORD *)(v125 + 16);
      v127 = *(_QWORD *)(v125 + 24);
      if (v4 >= v127 >> 1)
      {
        v125 = sub_21194B098(v127 > 1, v4 + 1, 1, v125);
        *(_QWORD *)(v180 + 16) = v125;
      }
      *(_QWORD *)(v125 + 16) = v4 + 1;
      sub_211942810(v166, v125+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(_QWORD *)(v167 + 72) * v4, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211934758(v165, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if (v19)
        goto LABEL_115;
    }
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    swift_bridgeObjectRetain();
    v21 = sub_211A480A8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
  return result;
}

uint64_t sub_211A10B90()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v2;
  if (!v1)
  {
    v6 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_26;
    v7 = (unint64_t)(v0[2] + 64) >> 6;
    if (v6 < v7)
    {
      v8 = v0[1];
      v9 = *(_QWORD *)(v8 + 8 * v6);
      if (v9)
      {
LABEL_8:
        v4 = (v9 - 1) & v9;
        v3 = v6;
        goto LABEL_3;
      }
      v10 = v2 + 2;
      v3 = v2 + 1;
      if (v2 + 2 < v7)
      {
        v9 = *(_QWORD *)(v8 + 8 * v10);
        if (v9)
        {
LABEL_11:
          v6 = v10;
          goto LABEL_8;
        }
        v3 = v2 + 2;
        if (v2 + 3 < v7)
        {
          v9 = *(_QWORD *)(v8 + 8 * (v2 + 3));
          if (v9)
          {
            v6 = v2 + 3;
            goto LABEL_8;
          }
          v10 = v2 + 4;
          v3 = v2 + 3;
          if (v2 + 4 < v7)
          {
            v9 = *(_QWORD *)(v8 + 8 * v10);
            if (v9)
              goto LABEL_11;
            v6 = v2 + 5;
            v3 = v2 + 4;
            if (v2 + 5 < v7)
            {
              v9 = *(_QWORD *)(v8 + 8 * v6);
              if (v9)
                goto LABEL_8;
              v3 = v7 - 1;
              v11 = v2 + 6;
              while (v7 != v11)
              {
                v9 = *(_QWORD *)(v8 + 8 * v11++);
                if (v9)
                {
                  v6 = v11 - 1;
                  goto LABEL_8;
                }
              }
            }
          }
        }
      }
    }
    v5 = 0;
    v0[3] = v3;
    v0[4] = 0;
    return v5;
  }
  v4 = (v1 - 1) & v1;
LABEL_3:
  v0[3] = v3;
  v0[4] = v4;
  v5 = v0[5];
  if (!__OFADD__(v5, 1))
  {
    v0[5] = v5 + 1;
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_211A10D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v44 = a3;
  v42 = a2;
  v49 = sub_211958C38(&qword_254ACA218);
  v4 = *(_QWORD *)(v49 - 8);
  v6 = MEMORY[0x24BDAC7A8](v49, v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v39 - v10;
  v12 = type metadata accessor for FMFLocation();
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_211A4779C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v46 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_211A477D8();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v20);
  v41 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v39 = v17;
    v40 = v16;
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_211942004(0, v22, 0);
    v23 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v47 = *(_QWORD *)(v4 + 72);
    v24 = aBlock[0];
    do
    {
      sub_21192C6B8(v23, (uint64_t)v11, &qword_254ACA218);
      v25 = *(int *)(v49 + 48);
      v26 = (uint64_t)&v8[v25];
      v27 = (uint64_t)&v11[v25];
      sub_211934794((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_21192C6B8(v27, v26, (uint64_t *)&unk_254AC8CB0);
      sub_211942810((uint64_t)v8, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      sub_211923EE8(v26, (uint64_t *)&unk_254AC8CB0);
      sub_211923EE8((uint64_t)v11, &qword_254ACA218);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211942004(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v24 = aBlock[0];
      }
      v29 = *(_QWORD *)(v24 + 16);
      v28 = *(_QWORD *)(v24 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_211942004(v28 > 1, v29 + 1, 1);
        v24 = aBlock[0];
      }
      *(_QWORD *)(v24 + 16) = v29 + 1;
      sub_211942810((uint64_t)v15, v24+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v23 += v47;
      --v22;
    }
    while (v22);
    v17 = v39;
    v16 = v40;
    v30 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v30 = MEMORY[0x24BEE4AF8];
    v24 = MEMORY[0x24BEE4AF8];
  }
  v31 = v42;
  v32 = *(void **)(v42 + 136);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v31;
  v33[3] = v24;
  v33[4] = v44;
  aBlock[4] = sub_211A1ACB4;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCE6A0;
  v34 = _Block_copy(aBlock);
  v35 = v32;
  swift_retain();
  swift_retain();
  v36 = v41;
  sub_211A477B4();
  v50 = v30;
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v37 = v46;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v36, v37, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v16);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v45);
  return swift_release();
}

uint64_t sub_211A11158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v42 = a1;
  v43 = a3;
  v4 = type metadata accessor for FMFLocation();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_211A4779C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v48 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v45 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 + 16);
  v44 = a2;
  if (v16)
  {
    v40 = v10;
    v41 = v9;
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_211A26860(0, v16, 0);
    v17 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v18 = *(_QWORD *)(v5 + 72);
    v19 = aBlock[0];
    v49 = v18;
    do
    {
      sub_211934794(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      v21 = *v8;
      v20 = v8[1];
      swift_bridgeObjectRetain();
      sub_211934758((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FMFLocation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_211A26860(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v18 = v49;
        v19 = aBlock[0];
      }
      v23 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v19 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_211A26860(v22 > 1, v23 + 1, 1);
        v18 = v49;
        v19 = aBlock[0];
      }
      *(_QWORD *)(v19 + 16) = v23 + 1;
      v24 = v19 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v20;
      v17 += v18;
      --v16;
    }
    while (v16);
    v10 = v40;
    v9 = v41;
    v25 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v25 = MEMORY[0x24BEE4AF8];
    v19 = MEMORY[0x24BEE4AF8];
  }
  v26 = v42;
  swift_retain();
  v27 = sub_2119F51F4(v19);
  v29 = v28;
  swift_bridgeObjectRelease();
  swift_release();
  v30 = *(void **)(v26 + 144);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v27;
  v31[3] = v29;
  v33 = v43;
  v32 = v44;
  v31[4] = v26;
  v31[5] = v33;
  v31[6] = v32;
  aBlock[4] = sub_211A1ACFC;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21192382C;
  aBlock[3] = &unk_24CCCE6F0;
  v34 = _Block_copy(aBlock);
  v35 = v30;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v36 = v45;
  sub_211A477B4();
  v50 = v25;
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v37 = v48;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v36, v37, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v9);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v47);
  return swift_release();
}

uint64_t sub_211A114DC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[3];

  if (qword_254AC7B80 != -1)
    swift_once();
  v9 = sub_211A47748();
  sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v10 = sub_211A47724();
  v11 = sub_211A47D30();
  if (os_log_type_enabled(v10, v11))
  {
    v17 = a5;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v18[0] = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_211950A9C(a1, a2, v18);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v10, v11, "👀 FMFSecureLocCtrl: telling FMFManager we got locations for %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v13, -1, -1);
    v14 = v12;
    a5 = v17;
    MEMORY[0x212BE48A0](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  result = MEMORY[0x212BE496C](a3 + 168);
  if (result)
  {
    swift_beginAccess();
    v16 = swift_bridgeObjectRetain();
    sub_2119EB2D0(v16, a5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_211A116E0(uint64_t result, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t aBlock[7];
  _QWORD *v48;

  if (*(_QWORD *)(result + 16))
  {
    v5 = v4;
    v8 = result;
    v46 = a2 & 1;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_21194FDA0(v9);
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v10;
    v11 = sub_211A0B264((uint64_t)v10);
    swift_retain();
    v43 = sub_2119F51F4(v11);
    v13 = v12;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_254AC7B80 != -1)
      swift_once();
    v14 = sub_211A47748();
    sub_21194F3E0(v14, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v15 = sub_211A47724();
    v16 = sub_211A47D30();
    v44 = v8;
    v42 = v5;
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      aBlock[0] = v18;
      *(_DWORD *)v17 = 136315650;
      swift_bridgeObjectRetain();
      v48 = (_QWORD *)sub_211950A9C(a3, a4, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      LOBYTE(v48) = v46;
      v19 = sub_211A47928();
      v48 = (_QWORD *)sub_211950A9C(v19, v20, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      swift_bridgeObjectRetain();
      v48 = (_QWORD *)sub_211950A9C(v43, v13, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v15, v16, "👀 FMFSecureLocCtrl: %sregistering subscription %s for %s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v18, -1, -1);
      v21 = v17;
      v5 = v42;
      MEMORY[0x212BE48A0](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C08]), sel_init);
    swift_bridgeObjectRetain();
    v23 = (void *)sub_211A478EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_setClientApp_, v23);

    if (v46)
    {
      objc_msgSend(v22, sel_setSubscriptionMode_, 2);
      sub_211958C38(&qword_254AC8378);
      v24 = (void *)sub_211A47844();
      objc_msgSend(v22, sel_setPushIdentifiers_, v24);

    }
    else
    {
      objc_msgSend(v22, sel_setSubscriptionMode_, 1);
    }
    v48 = (_QWORD *)MEMORY[0x24BEE4AF8];
    swift_retain();
    v25 = v22;
    sub_211A1A0EC(v44, v5, &v48, v46, v25);
    swift_release();

    if (v48[2])
    {
      v26 = swift_bridgeObjectRetain();
      sub_211A0AC24(v26, v46);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain_n();
    v27 = sub_211A47724();
    v28 = sub_211A47D30();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v41 = v25;
      v30 = swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136315394;
      v31 = sub_211A47928();
      sub_211950A9C(v31, v32, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(v43, v13, aBlock);
      v5 = v42;
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v27, v28, "👀 FMFSecureLocCtrl: calling SPSecureLocMgr.subscribe %s for %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      v33 = v30;
      v25 = v41;
      MEMORY[0x212BE48A0](v33, -1, -1);
      MEMORY[0x212BE48A0](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v34 = *(id *)(v5 + 24);
    v35 = (void *)sub_211A47A90();
    v36 = swift_allocObject();
    swift_weakInit();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v36;
    *(_BYTE *)(v37 + 24) = v46;
    *(_QWORD *)(v37 + 32) = v43;
    *(_QWORD *)(v37 + 40) = v13;
    *(_QWORD *)(v37 + 48) = v45;
    *(_QWORD *)(v37 + 56) = v44;
    aBlock[4] = (uint64_t)sub_211A1AB94;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_211A12848;
    aBlock[3] = (uint64_t)&unk_24CCCE5B0;
    v38 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_subscribeAndFetchLocationForIds_context_completion_, v35, v25, v38);
    _Block_release(v38);

    if (!v46)
    {
      if (qword_254AC7B90 != -1)
        v39 = swift_once();
      MEMORY[0x24BDAC7A8](v39, v40);
      sub_211A47DA8();
      sub_211A14B1C(v45, 0, *(double *)aBlock);
    }
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_211A11E4C(uint64_t *a1, uint64_t a2, _QWORD **a3, char a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;

  v9 = *a1;
  v8 = a1[1];
  swift_retain();
  v10 = sub_2119F4BE8(v9, v8);
  swift_release();
  if (v10)
  {
    v11 = *a3;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_2119B02DC(0, v11[2] + 1, 1, v11);
      *a3 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_2119B02DC((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *a3 = v11;
    }
    v11[2] = v14 + 1;
    v15 = &v11[2 * v14];
    v15[4] = v9;
    v15[5] = v8;
  }
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v16 = sub_2119F4790(v9, v8);
    swift_release();
    v17 = objc_msgSend(a5, sel_pushIdentifiers);
    sub_211958C38(&qword_254AC8378);
    sub_211A4785C();

    if (v16)
    {
      v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_211A44834(v16, v9, v8, v18);
    }
    else
    {
      sub_211A410D4(v9, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_211A47844();
    swift_bridgeObjectRelease();
    objc_msgSend(a5, sel_setPushIdentifiers_, v19);

  }
}

uint64_t sub_211A1208C(void *a1, void *a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  const void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v34 = a5;
  v35 = a8;
  v13 = sub_211A4779C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_211A477D8();
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v23 = result;
    v33 = v14;
    v24 = *(void **)(result + 136);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    *(_BYTE *)(v25 + 24) = a4 & 1;
    v26 = v34;
    *(_QWORD *)(v25 + 32) = a2;
    *(_QWORD *)(v25 + 40) = v26;
    *(_QWORD *)(v25 + 48) = a6;
    *(_QWORD *)(v25 + 56) = a7;
    v27 = v13;
    *(_QWORD *)(v25 + 64) = v35;
    *(_QWORD *)(v25 + 72) = a1;
    aBlock[4] = sub_211A1ABF4;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCE600;
    v34 = _Block_copy(aBlock);
    v32 = v24;
    swift_retain();
    v28 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = a1;
    sub_211A477B4();
    v38 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    v30 = v34;
    v31 = v32;
    MEMORY[0x212BE3BC8](0, v21, v17, v34);
    _Block_release(v30);
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v27);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
    return swift_release();
  }
  return result;
}

void sub_211A12314(uint64_t a1, char a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  int v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  unint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v14 = a2 & 1;
  sub_211A15770();
  if (a3)
  {
    v15 = a3;
    if (qword_254AC7B80 != -1)
      swift_once();
    v16 = sub_211A47748();
    sub_21194F3E0(v16, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v17 = a3;
    swift_bridgeObjectRetain();
    v18 = a3;
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    if (os_log_type_enabled(v19, v20))
    {
      v37 = a4;
      v21 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v38 = v35;
      *(_DWORD *)v21 = 136315650;
      v22 = sub_211A47928();
      sub_211950A9C(v22, v23, &v38);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(v37, a5, &v38);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 22) = 2080;
      swift_getErrorValue();
      v24 = sub_211A482DC();
      sub_211950A9C(v24, v25, &v38);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v19, v20, "👀 FMFSecureLocCtrl: failed SPSecureLocMgr.subscribe %s for %s: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v35, -1, -1);
      MEMORY[0x212BE48A0](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    sub_211A13AE4(v14, 15.0);
    sub_211A0B3A0(a6, v14);
    sub_211A0FA28(MEMORY[0x24BEE4AF8], a7, v14);
    if (!v14)
      sub_211A0B8AC(a6, 0);

  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v26 = sub_211A47748();
    sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain_n();
    v27 = sub_211A47724();
    v28 = sub_211A47D30();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v38 = v36;
      *(_DWORD *)v29 = 136315394;
      v30 = sub_211A47928();
      sub_211950A9C(v30, v31, &v38);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(a4, a5, &v38);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v27, v28, "👀 FMFSecureLocCtrl: succeeded SPSecureLocMgr.subscribe %s for %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v36, -1, -1);
      MEMORY[0x212BE48A0](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = objc_msgSend(a8, sel_locations);
    sub_211911824(0, &qword_254ACABC0);
    v33 = sub_211A47AA8();

    objc_msgSend(a8, sel_expiresIn);
    sub_211A13AE4(v14, v34);
    sub_211A0FA28(v33, a7, v14);
    swift_bridgeObjectRelease();
  }
}

void sub_211A12848(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

void sub_211A128BC(uint64_t isUniquelyReferenced_nonNull_native, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  unint64_t v47;
  BOOL v48;
  unint64_t v49;
  int64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  char v74;
  char v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  int v106;
  int64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t aBlock[8];

  v7 = v6;
  v115 = a6;
  v113 = a5;
  v106 = a2 & 1;
  v11 = sub_211958C38(&qword_254AC8870);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for FMFFriend();
  v110 = *(_QWORD *)(v104 - 8);
  v16 = MEMORY[0x24BDAC7A8](v104, v15);
  v18 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v103 = (uint64_t)&v99 - v20;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_21194FDA0(v21);
  swift_bridgeObjectRelease();
  v101 = v22;
  v23 = sub_211A0B264((uint64_t)v22);
  swift_retain();
  v102 = sub_2119F51F4(v23);
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    goto LABEL_97;
LABEL_2:
  v26 = sub_211A47748();
  v27 = sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v99 = v27;
  v28 = sub_211A47724();
  v29 = sub_211A47D30();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v108 = v7;
  v109 = isUniquelyReferenced_nonNull_native;
  v105 = v14;
  v100 = v25;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v32 = 136315650;
    LODWORD(v114) = v30;
    swift_bridgeObjectRetain();
    v116 = sub_211950A9C(a3, a4, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    v34 = v106;
    LOBYTE(v116) = v106;
    v35 = sub_211A47928();
    v116 = sub_211950A9C(v35, v36, aBlock);
    a3 = (uint64_t)aBlock;
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 22) = 2080;
    v7 = v108;
    swift_bridgeObjectRetain();
    v116 = sub_211950A9C(v102, v25, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v28, (os_log_type_t)v114, "👀 FMFSecureLocCtrl: %sunregistering subscription %s for %s", (uint8_t *)v32, 0x20u);
    swift_arrayDestroy();
    v37 = v33;
    isUniquelyReferenced_nonNull_native = v109;
    MEMORY[0x212BE48A0](v37, -1, -1);
    MEMORY[0x212BE48A0](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v34 = v106;
  }
  v14 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE82C08]), sel_init);
  swift_bridgeObjectRetain();
  v38 = (void *)sub_211A478EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setClientApp_, v38);

  if (v34)
  {
    objc_msgSend(v14, sel_setSubscriptionMode_, 2);
    sub_211958C38(&qword_254AC8378);
    v39 = (void *)sub_211A47844();
    objc_msgSend(v14, sel_setPushIdentifiers_, v39);

  }
  else
  {
    objc_msgSend(v14, sel_setSubscriptionMode_, 1);
  }
  v40 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
  v115 = isUniquelyReferenced_nonNull_native + 56;
  v41 = 1 << *(_BYTE *)(isUniquelyReferenced_nonNull_native + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  a4 = v42 & v40;
  v107 = (unint64_t)(v41 + 63) >> 6;
  swift_bridgeObjectRetain();
  v43 = 0;
  v25 = 0;
  v114 = v14;
  while (1)
  {
    while (a4)
    {
      v46 = __clz(__rbit64(a4));
      a4 &= a4 - 1;
      v47 = v46 | (v43 << 6);
      if (v34)
      {
LABEL_32:
        v111 = a4;
        v112 = v43;
        v51 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v47);
        a4 = *v51;
        v52 = v51[1];
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_211958C38(&qword_254ACABB8);
        sub_211A47DA8();
        v53 = *(_QWORD *)(aBlock[0] + 16);
        v113 = v25;
        if (v53)
        {
          v54 = v110;
          v55 = aBlock[0]
              + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
          swift_bridgeObjectRetain();
          v56 = *(_QWORD *)(v54 + 72);
          while (1)
          {
            sub_211934794(v55, v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v57 = a4 == *(_QWORD *)v18 && v52 == *(_QWORD *)(v18 + 8);
            if (v57 || (sub_211A48258() & 1) != 0)
              break;
            sub_211934758(v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
            v55 += v56;
            if (!--v53)
            {
              v58 = v108;
              swift_bridgeObjectRelease();
              v59 = 1;
              v25 = v109;
              goto LABEL_43;
            }
          }
          v58 = v108;
          swift_bridgeObjectRelease();
          v60 = (uint64_t)v105;
          sub_211942810(v18, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v59 = 0;
          v25 = v109;
        }
        else
        {
          v25 = isUniquelyReferenced_nonNull_native;
          v58 = v7;
          v59 = 1;
LABEL_43:
          v60 = (uint64_t)v105;
        }
        v7 = v110;
        v61 = v104;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v60, v59, 1, v104);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v60, 1, v61) == 1)
        {
          sub_211923EE8(v60, &qword_254AC8870);
          v14 = 0;
        }
        else
        {
          v62 = v103;
          sub_211942810(v60, v103, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
          v14 = *(char **)(v62 + 40);
          swift_bridgeObjectRetain();
          sub_211934758(v62, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        }
        swift_release();
        v63 = objc_msgSend(v114, sel_pushIdentifiers);
        a3 = sub_211958C38(&qword_254AC8378);
        v64 = sub_211A4785C();

        if (v14)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v64;
          v66 = sub_21195BB68(a4, v52);
          v67 = *(_QWORD *)(v64 + 16);
          v68 = (v65 & 1) == 0;
          v69 = v67 + v68;
          if (__OFADD__(v67, v68))
            goto LABEL_94;
          v7 = v65;
          if (*(_QWORD *)(v64 + 24) >= v69)
          {
            v25 = v113;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_211A4619C();
          }
          else
          {
            sub_211A42C98(v69, isUniquelyReferenced_nonNull_native);
            v70 = sub_21195BB68(a4, v52);
            v25 = v113;
            if ((v7 & 1) != (v71 & 1))
              goto LABEL_99;
            v66 = v70;
          }
          isUniquelyReferenced_nonNull_native = v109;
          v76 = (_QWORD *)aBlock[0];
          if ((v7 & 1) != 0)
          {
            v44 = *(_QWORD *)(aBlock[0] + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v44 + 8 * v66) = v14;
          }
          else
          {
            *(_QWORD *)(aBlock[0] + 8 * (v66 >> 6) + 64) |= 1 << v66;
            v77 = (uint64_t *)(v76[6] + 16 * v66);
            *v77 = a4;
            v77[1] = v52;
            *(_QWORD *)(v76[7] + 8 * v66) = v14;
            v78 = v76[2];
            v48 = __OFADD__(v78, 1);
            v79 = v78 + 1;
            if (v48)
              goto LABEL_95;
            v76[2] = v79;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v7 = v108;
          v14 = v114;
        }
        else
        {
          v7 = v58;
          swift_bridgeObjectRetain();
          v72 = sub_21195BB68(a4, v52);
          v74 = v73;
          swift_bridgeObjectRelease();
          if ((v74 & 1) != 0)
          {
            v75 = swift_isUniquelyReferenced_nonNull_native();
            aBlock[0] = v64;
            v14 = v114;
            isUniquelyReferenced_nonNull_native = v25;
            if ((v75 & 1) == 0)
            {
              sub_211A4619C();
              v64 = aBlock[0];
            }
            swift_bridgeObjectRelease();
            sub_211A43AE8(v72, v64);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v14 = v114;
            isUniquelyReferenced_nonNull_native = v25;
          }
          v25 = v113;
        }
        v45 = (void *)sub_211A47844();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setPushIdentifiers_, v45);
        swift_bridgeObjectRelease();

        v34 = v106;
        a4 = v111;
        v43 = v112;
      }
    }
    v48 = __OFADD__(v43++, 1);
    if (v48)
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    if (v43 >= v107)
      goto LABEL_67;
    v49 = *(_QWORD *)(v115 + 8 * v43);
    if (!v49)
      break;
LABEL_31:
    a4 = (v49 - 1) & v49;
    v47 = __clz(__rbit64(v49)) + (v43 << 6);
    if (v34)
      goto LABEL_32;
  }
  v50 = v43 + 1;
  if (v43 + 1 >= v107)
    goto LABEL_67;
  v49 = *(_QWORD *)(v115 + 8 * v50);
  if (v49)
    goto LABEL_30;
  v50 = v43 + 2;
  if (v43 + 2 >= v107)
    goto LABEL_67;
  v49 = *(_QWORD *)(v115 + 8 * v50);
  if (v49)
    goto LABEL_30;
  v50 = v43 + 3;
  if (v43 + 3 >= v107)
    goto LABEL_67;
  v49 = *(_QWORD *)(v115 + 8 * v50);
  if (v49)
    goto LABEL_30;
  v50 = v43 + 4;
  if (v43 + 4 >= v107)
    goto LABEL_67;
  v49 = *(_QWORD *)(v115 + 8 * v50);
  if (v49)
    goto LABEL_30;
  v50 = v43 + 5;
  if (v43 + 5 >= v107)
  {
LABEL_67:
    swift_release();
    v80 = v100;
    swift_bridgeObjectRetain_n();
    v81 = sub_211A47724();
    v82 = sub_211A47D30();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc();
      v113 = swift_slowAlloc();
      aBlock[0] = v113;
      *(_DWORD *)v83 = 136315394;
      LOBYTE(v116) = v34;
      v84 = sub_211A47928();
      v116 = sub_211950A9C(v84, v85, aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 12) = 2080;
      swift_bridgeObjectRetain();
      v86 = v102;
      v116 = sub_211950A9C(v102, v80, aBlock);
      isUniquelyReferenced_nonNull_native = v109;
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v81, v82, "👀 FMFSecureLocCtrl: calling SPSecureLocMgr.unsubscribe %s for %s", (uint8_t *)v83, 0x16u);
      v87 = v113;
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v87, -1, -1);
      MEMORY[0x212BE48A0](v83, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v86 = v102;
    }
    a4 = (uint64_t)*(id *)(v7 + 24);
    v88 = (void *)sub_211A47A90();
    swift_release();
    v89 = swift_allocObject();
    *(_BYTE *)(v89 + 16) = v34;
    *(_QWORD *)(v89 + 24) = v86;
    *(_QWORD *)(v89 + 32) = v80;
    aBlock[4] = (uint64_t)sub_211A1AB4C;
    aBlock[5] = v89;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_211A1BAB4;
    aBlock[3] = (uint64_t)&unk_24CCCE560;
    v90 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend((id)a4, sel_unsubscribeForIds_context_completion_, v88, v114, v90);
    _Block_release(v90);

    sub_211A148CC(v34);
    v91 = 1 << *(_BYTE *)(isUniquelyReferenced_nonNull_native + 32);
    v92 = -1;
    if (v91 < 64)
      v92 = ~(-1 << v91);
    a3 = v92 & *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
    v14 = (char *)((unint64_t)(v91 + 63) >> 6);
    swift_bridgeObjectRetain();
    v18 = 0;
    while (1)
    {
      if (a3)
      {
        v93 = __clz(__rbit64(a3));
        a3 &= a3 - 1;
        v94 = v93 | (v18 << 6);
      }
      else
      {
        v48 = __OFADD__(v18++, 1);
        if (v48)
          goto LABEL_93;
        if (v18 >= (uint64_t)v14)
        {
LABEL_91:
          swift_release();
          sub_211A15770();

          return;
        }
        v97 = *(_QWORD *)(v115 + 8 * v18);
        if (!v97)
        {
          v98 = v18 + 1;
          if (v18 + 1 >= (uint64_t)v14)
            goto LABEL_91;
          v97 = *(_QWORD *)(v115 + 8 * v98);
          if (!v97)
          {
            v98 = v18 + 2;
            if (v18 + 2 >= (uint64_t)v14)
              goto LABEL_91;
            v97 = *(_QWORD *)(v115 + 8 * v98);
            if (!v97)
            {
              v98 = v18 + 3;
              if (v18 + 3 >= (uint64_t)v14)
                goto LABEL_91;
              v97 = *(_QWORD *)(v115 + 8 * v98);
              if (!v97)
              {
                while (1)
                {
                  v18 = v98 + 1;
                  if (__OFADD__(v98, 1))
                    break;
                  if (v18 >= (uint64_t)v14)
                    goto LABEL_91;
                  v97 = *(_QWORD *)(v115 + 8 * v18);
                  ++v98;
                  if (v97)
                    goto LABEL_86;
                }
LABEL_96:
                __break(1u);
LABEL_97:
                swift_once();
                goto LABEL_2;
              }
            }
          }
          v18 = v98;
        }
LABEL_86:
        a3 = (v97 - 1) & v97;
        v94 = __clz(__rbit64(v97)) + (v18 << 6);
      }
      v95 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v94);
      a4 = *v95;
      v96 = v95[1];
      swift_bridgeObjectRetain();
      sub_211A166F0(a4, v96);
      swift_bridgeObjectRelease();
    }
  }
  v49 = *(_QWORD *)(v115 + 8 * v50);
  if (v49)
  {
LABEL_30:
    v43 = v50;
    goto LABEL_31;
  }
  while (1)
  {
    v43 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v43 >= v107)
      goto LABEL_67;
    v49 = *(_QWORD *)(v115 + 8 * v43);
    ++v50;
    if (v49)
      goto LABEL_31;
  }
  __break(1u);
LABEL_99:
  sub_211A48294();
  __break(1u);
}

void sub_211A1368C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *oslog;
  uint64_t v26;

  if (a1)
  {
    v7 = a1;
    if (qword_254AC7B80 != -1)
      swift_once();
    v8 = sub_211A47748();
    sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain();
    v9 = a1;
    swift_bridgeObjectRetain();
    v10 = a1;
    oslog = sub_211A47724();
    v11 = sub_211A47D30();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v26 = v13;
      *(_DWORD *)v12 = 136315650;
      v14 = sub_211A47928();
      sub_211950A9C(v14, v15, &v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(a3, a4, &v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 22) = 2080;
      swift_getErrorValue();
      v16 = sub_211A482DC();
      sub_211950A9C(v16, v17, &v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, oslog, v11, "👀 FMFSecureLocCtrl: failed SPSecureLocMgr.unsubscribe %s for %s: %s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v13, -1, -1);
      MEMORY[0x212BE48A0](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v18 = sub_211A47748();
    sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
    swift_bridgeObjectRetain_n();
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136315394;
      v23 = sub_211A47928();
      sub_211950A9C(v23, v24, &v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_211950A9C(a3, a4, &v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v19, v20, "👀 FMFSecureLocCtrl: succeeded SPSecureLocMgr.unsubscribe %s for %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v22, -1, -1);
      MEMORY[0x212BE48A0](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_211A13AE4(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  char isUniquelyReferenced_nonNull_native;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t aBlock;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;

  v3 = v2;
  v6 = sub_211A4779C();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v59 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v14 = swift_bridgeObjectRetain();
    v15 = sub_211A08A18(v14);
    v13 = sub_2119591D0(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
  }
  v16 = a1 & 1;
  v17 = sub_21194FDA0(v13);
  swift_bridgeObjectRelease();
  v18 = sub_211A0B264((uint64_t)v17);
  swift_release();
  swift_retain();
  v62 = sub_2119F51F4(v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v21 = sub_211A47748();
  sub_21194F3E0(v21, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v22 = sub_211A47724();
  v23 = sub_211A47D30();
  v24 = os_log_type_enabled(v22, v23);
  v63 = v16;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock = v26;
    *(_DWORD *)v25 = 134218498;
    if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
    {
      if (a2 > -9.22337204e18)
      {
        if (a2 < 9.22337204e18)
        {
          v27 = v26;
          v71 = (uint64_t)a2;
          sub_211A47E2C();
          *(_WORD *)(v25 + 12) = 2080;
          v56 = v3;
          LOBYTE(v71) = v16;
          v28 = sub_211A47928();
          v71 = sub_211950A9C(v28, v29, &aBlock);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 22) = 2080;
          swift_bridgeObjectRetain();
          v71 = sub_211950A9C(v62, v20, &aBlock);
          v3 = v56;
          sub_211A47E2C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21190D000, v22, v23, "👀 FMFSecureLocCtrl: setting up %ld-sec %s re-subscription timer for %s)", (uint8_t *)v25, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v27, -1, -1);
          MEMORY[0x212BE48A0](v25, -1, -1);

          if (a2 <= 0.0)
            goto LABEL_11;
          goto LABEL_14;
        }
LABEL_21:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }

  swift_bridgeObjectRelease_n();
  if (a2 <= 0.0)
  {
LABEL_11:
    swift_bridgeObjectRetain();
    v30 = sub_211A47724();
    v31 = sub_211A47D30();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      aBlock = v33;
      *(_DWORD *)v32 = 136315394;
      LOBYTE(v71) = v63;
      v34 = sub_211A47928();
      v71 = sub_211950A9C(v34, v35, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      v71 = sub_211950A9C(v62, v20, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v30, v31, "👀 FMFSecureLocCtrl: discarding (interval too short) %s re-subscription timer for %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v33, -1, -1);
      MEMORY[0x212BE48A0](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v36 = *(_QWORD *)(v3 + 152);
  v37 = v63;
  if (*(_QWORD *)(v36 + 16))
  {
    v38 = sub_2119B1D04(v63);
    if ((v39 & 1) != 0)
      objc_msgSend(*(id *)(*(_QWORD *)(v36 + 56) + 8 * v38), sel_invalidate);
  }
  v40 = swift_allocObject();
  swift_weakInit();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v40;
  *(_BYTE *)(v41 + 24) = v37;
  v69 = sub_211A1AAEC;
  v70 = v41;
  v42 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v66 = 1107296256;
  v67 = sub_211A1487C;
  v68 = &unk_24CCCE470;
  v43 = _Block_copy(&aBlock);
  v44 = (void *)objc_opt_self();
  swift_retain();
  v45 = objc_msgSend(v44, sel_timerWithTimeInterval_repeats_block_, 0, v43, a2);
  _Block_release(v43);
  swift_release();
  swift_release();
  swift_beginAccess();
  v46 = v45;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v64 = *(_QWORD *)(v3 + 152);
  *(_QWORD *)(v3 + 152) = 0x8000000000000000;
  sub_211A44700((uint64_t)v46, v37, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 152) = v64;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  v48 = (void *)sub_211A47D9C();
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v46;
  v69 = (uint64_t (*)(uint64_t))sub_211A1B0F0;
  v70 = v49;
  aBlock = v42;
  v66 = 1107296256;
  v67 = sub_21192382C;
  v68 = &unk_24CCCE4C0;
  v50 = _Block_copy(&aBlock);
  v51 = v46;
  swift_release();
  sub_211A477B4();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  v52 = v12;
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v53 = v59;
  v54 = v61;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v52, v53, v50);
  _Block_release(v50);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
}

uint64_t sub_211A142D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = sub_211A4779C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_211A477D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v22 = v5;
    v16 = *(void **)(result + 136);
    v17 = swift_allocObject();
    *(_BYTE *)(v17 + 16) = a3 & 1;
    *(_QWORD *)(v17 + 24) = v15;
    aBlock[4] = sub_211A1AB1C;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCE510;
    v18 = _Block_copy(aBlock);
    v21 = v9;
    v19 = v18;
    v20 = v16;
    swift_retain();
    sub_211A477B4();
    v23 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v13, v8, v19);
    _Block_release(v19);
    swift_release();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_211A14504(char a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  uint64_t v31;

  if ((a1 & 1) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    v6 = sub_211A08A18(v5);
    v4 = sub_2119591D0(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = a2[4];
    swift_bridgeObjectRetain();
  }
  v7 = a1 & 1;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_21194FDA0(v8);
  swift_bridgeObjectRelease();
  v10 = sub_211A0B264((uint64_t)v9);
  swift_release();
  swift_retain();
  v11 = sub_2119F51F4(v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v14 = sub_211A47748();
  sub_21194F3E0(v14, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  v30 = v7;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v17 = 136315394;
    v18 = sub_211A47928();
    sub_211950A9C(v18, v19, &v31);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v11, v13, &v31);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v15, v16, "👀 FMFSecureLocCtrl: 🔥 firing up %s re-subscription timer for %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v29, -1, -1);
    MEMORY[0x212BE48A0](v17, -1, -1);

    if (*(_QWORD *)(v4 + 16))
      goto LABEL_8;
LABEL_11:
    swift_bridgeObjectRelease();
    if (!v7)
      goto LABEL_9;
LABEL_12:
    v25 = swift_bridgeObjectRetain();
    v26 = sub_211A08A18(v25);
    v27 = sub_2119591D0(v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = a2[8];
    v22 = a2[9];
    swift_bridgeObjectRetain();
    v23 = v27;
    v24 = 1;
    goto LABEL_13;
  }

  swift_bridgeObjectRelease_n();
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_11;
LABEL_8:
  v20 = sub_21194FDA0(v4);
  swift_bridgeObjectRelease();
  sub_211A0BD78((uint64_t)v20, v30);
  swift_release();
  if (v30)
    goto LABEL_12;
LABEL_9:
  v21 = a2[5];
  v22 = a2[6];
  swift_bridgeObjectRetain();
  v23 = swift_bridgeObjectRetain();
  v24 = 0;
LABEL_13:
  sub_211A116E0(v23, v24, 2975090, 0xE300000000000000, v21, v22);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_211A1487C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_211A148CC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23[3];

  v2 = v1;
  v3 = a1 & 1;
  if (qword_254AC7B80 != -1)
    swift_once();
  v4 = sub_211A47748();
  sub_21194F3E0(v4, (uint64_t)qword_254ADC7E8);
  v5 = sub_211A47724();
  v6 = sub_211A47D30();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_211A47928();
    sub_211950A9C(v9, v10, v23);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v5, v6, "👀 FMFSecureLocCtrl: cancelling %s re-subscription timer for all", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }

  v11 = (uint64_t *)(v2 + 152);
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 152);
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = sub_2119B1D04(v3);
    if ((v14 & 1) != 0)
      objc_msgSend(*(id *)(*(_QWORD *)(v12 + 56) + 8 * v13), sel_invalidate);
  }
  swift_beginAccess();
  v15 = sub_2119B1D04(v3);
  if ((v16 & 1) != 0)
  {
    v17 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v11;
    v22 = *v11;
    *v11 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_211A45FFC();
      v19 = v22;
    }
    v20 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v17);
    sub_211A43CBC(v17, v19);
    *v11 = v19;

    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

void sub_211A14B1C(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;

  v4 = v3;
  v7 = a2 & 1;
  v8 = sub_211A4779C();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v53 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_211A477D8();
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_bridgeObjectRetain();
  v16 = sub_211A0B264(v15);
  swift_bridgeObjectRelease();
  swift_retain();
  v56 = sub_2119F51F4(v16);
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v19 = sub_211A47748();
  v20 = sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v21 = sub_211A47724();
  v22 = sub_211A47D30();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    aBlock = v24;
    *(_DWORD *)v23 = 134218498;
    if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0)
    {
      if (a3 > -9.22337204e18)
      {
        if (a3 < 9.22337204e18)
        {
          v63 = (uint64_t)a3;
          v49[0] = v24;
          sub_211A47E2C();
          *(_WORD *)(v23 + 12) = 2080;
          v49[1] = v20;
          v50 = a1;
          LOBYTE(v63) = v7;
          v25 = sub_211A47928();
          v63 = sub_211950A9C(v25, v26, &aBlock);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 22) = 2080;
          swift_bridgeObjectRetain();
          v63 = sub_211950A9C(v56, v18, &aBlock);
          a1 = v50;
          sub_211A47E2C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21190D000, v21, v22, "👀 FMFSecureLocCtrl: setting up %ld-sec no-result-when-subscribing %s->legacy fallback timer for %s", (uint8_t *)v23, 0x20u);
          v27 = v49[0];
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v27, -1, -1);
          MEMORY[0x212BE48A0](v23, -1, -1);

          goto LABEL_9;
        }
LABEL_16:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }

  swift_bridgeObjectRelease_n();
LABEL_9:
  objc_msgSend(*(id *)(v4 + 120), sel_invalidate);
  if (a3 <= 0.0)
  {
    swift_bridgeObjectRetain();
    v43 = sub_211A47724();
    v44 = sub_211A47D30();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      aBlock = v46;
      *(_DWORD *)v45 = 136315394;
      LOBYTE(v63) = v7;
      v47 = sub_211A47928();
      v63 = sub_211950A9C(v47, v48, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      v63 = sub_211950A9C(v56, v18, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v43, v44, "👀 FMFSecureLocCtrl: discarding (interval too short) no-result-when-subscribing %s->legacy fallback timer for %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v46, -1, -1);
      MEMORY[0x212BE48A0](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v28 = swift_allocObject();
    swift_weakInit();
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = a1;
    *(_BYTE *)(v29 + 32) = v7;
    *(_QWORD *)(v29 + 40) = v56;
    *(_QWORD *)(v29 + 48) = v18;
    v61 = sub_211A1AA98;
    v62 = v29;
    v30 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v58 = 1107296256;
    v59 = sub_211A1487C;
    v60 = &unk_24CCCE380;
    v31 = _Block_copy(&aBlock);
    v32 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    swift_retain();
    v33 = objc_msgSend(v32, sel_timerWithTimeInterval_repeats_block_, 0, v31, a3);
    _Block_release(v31);
    swift_release();
    swift_release();
    v34 = *(void **)(v4 + 120);
    *(_QWORD *)(v4 + 120) = v33;
    v35 = v33;

    sub_211911824(0, (unint64_t *)&qword_254ACC300);
    v36 = (void *)sub_211A47D9C();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v35;
    v61 = (uint64_t (*)(uint64_t))sub_211A1B0F0;
    v62 = v37;
    aBlock = v30;
    v58 = 1107296256;
    v59 = sub_21192382C;
    v60 = &unk_24CCCE3D0;
    v38 = _Block_copy(&aBlock);
    v39 = v35;
    swift_release();
    sub_211A477B4();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    v40 = v14;
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    v41 = v53;
    v42 = v55;
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v40, v41, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v52);
  }
}

uint64_t sub_211A15234(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v10 = sub_211A4779C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_211A477D8();
  v15 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v25 = v11;
    v21 = *(void **)(result + 136);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = a3;
    *(_BYTE *)(v22 + 32) = a4 & 1;
    *(_QWORD *)(v22 + 40) = a5;
    *(_QWORD *)(v22 + 48) = a6;
    aBlock[4] = sub_211A1AABC;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCE420;
    v23 = _Block_copy(aBlock);
    v24 = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_211A477B4();
    v27 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v18, v14, v23);
    _Block_release(v23);
    swift_release();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_211A15480(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v8 = a3 & 1;
  swift_retain();
  v9 = sub_2119F49D4(a2);
  swift_release();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_211A0B264(v10);
  swift_bridgeObjectRelease();
  swift_retain();
  v12 = sub_2119F51F4(v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v15 = sub_211A47748();
  sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v16 = sub_211A47724();
  v17 = sub_211A47D30();
  if (os_log_type_enabled(v16, v17))
  {
    v23 = v12;
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24 = v19;
    *(_DWORD *)v18 = 136315650;
    v20 = sub_211A47928();
    sub_211950A9C(v20, v21, &v24);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v23, v14, &v24);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(a4, a5, &v24);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v16, v17, "👀 FMFSecureLocCtrl: 🔥 firing up no-result-when-subscribing (spd crash?) %s->legacy fallback timer for %s from %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v19, -1, -1);
    MEMORY[0x212BE48A0](v18, -1, -1);

    if (!v9[2])
      return swift_bridgeObjectRelease();
    goto LABEL_7;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v9[2])
LABEL_7:
    sub_211A0B8AC((uint64_t)v9, v8);
  return swift_bridgeObjectRelease();
}

void sub_211A15770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_211A47928();
    sub_211950A9C(v7, v8, &v10);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "👀 FMFSecureLocCtrl: cancelling no-result-when-subscribing %s->legacy fallback timer for all", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v6, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }

  objc_msgSend(*(id *)(v1 + 120), sel_invalidate);
  v9 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = 0;

}

void sub_211A15918(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t inited;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  char isUniquelyReferenced_nonNull_native;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;

  v5 = v4;
  v9 = a3 & 1;
  v10 = sub_211A4779C();
  v56 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_211A477D8();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211958C38(&qword_254ACA3B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  v62 = a1;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  v57 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v60 = sub_2119F51F4(inited);
  v19 = v18;
  swift_release();
  swift_setDeallocating();
  sub_211958C38(&qword_254AC7C58);
  swift_arrayDestroy();
  if (qword_254AC7B80 != -1)
    swift_once();
  v20 = sub_211A47748();
  sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v21 = sub_211A47724();
  v22 = sub_211A47D30();
  v23 = os_log_type_enabled(v21, v22);
  v61 = v9;
  if (v23)
  {
    v55 = v13;
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    aBlock = v25;
    *(_DWORD *)v24 = 134218498;
    if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
    {
      if (a4 > -9.22337204e18)
      {
        if (a4 < 9.22337204e18)
        {
          v70 = (uint64_t)a4;
          v53 = v25;
          sub_211A47E2C();
          *(_WORD *)(v24 + 12) = 2080;
          v54 = v16;
          LOBYTE(v70) = v9;
          v26 = sub_211A47928();
          v70 = sub_211950A9C(v26, v27, &aBlock);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 22) = 2080;
          swift_bridgeObjectRetain();
          v70 = sub_211950A9C(v60, v19, &aBlock);
          v16 = v54;
          sub_211A47E2C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21190D000, v21, v22, "👀 FMFSecureLocCtrl: setting up %ld-sec no-location %s->legacy fallback timer for %s", (uint8_t *)v24, 0x20u);
          v28 = v53;
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v28, -1, -1);
          MEMORY[0x212BE48A0](v24, -1, -1);

          v13 = v55;
          if (a4 <= 0.0)
            goto LABEL_8;
          goto LABEL_11;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }

  swift_bridgeObjectRelease_n();
  if (a4 <= 0.0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    v29 = sub_211A47724();
    v30 = sub_211A47D30();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock = v32;
      *(_DWORD *)v31 = 136315394;
      LOBYTE(v70) = v61;
      v33 = sub_211A47928();
      v70 = sub_211950A9C(v33, v34, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      v70 = sub_211950A9C(v60, v19, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v29, v30, "👀 FMFSecureLocCtrl: discarding (interval too short) no-location %s->legacy fallback timer for %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v32, -1, -1);
      MEMORY[0x212BE48A0](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v35 = *(_QWORD *)(v5 + 104);
  v36 = v57;
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = sub_21195BB68(v62, v36);
    if ((v38 & 1) != 0)
    {
      v39 = *(id *)(*(_QWORD *)(v35 + 56) + 8 * v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_invalidate);

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v40 = swift_allocObject();
  swift_weakInit();
  v41 = swift_allocObject();
  v42 = v62;
  *(_QWORD *)(v41 + 16) = v40;
  *(_QWORD *)(v41 + 24) = v42;
  *(_QWORD *)(v41 + 32) = v36;
  *(_BYTE *)(v41 + 40) = v61;
  v68 = sub_211A1AA38;
  v69 = v41;
  aBlock = MEMORY[0x24BDAC760];
  v65 = 1107296256;
  v66 = sub_211A1487C;
  v67 = &unk_24CCCE290;
  v43 = _Block_copy(&aBlock);
  v44 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  v45 = objc_msgSend(v44, sel_timerWithTimeInterval_repeats_block_, 0, v43, a4);
  _Block_release(v43);
  swift_release();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v46 = v45;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v63 = *(_QWORD *)(v5 + 104);
  *(_QWORD *)(v5 + 104) = 0x8000000000000000;
  sub_211A446F4((uint64_t)v46, v42, v36, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 104) = v63;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  v48 = (void *)sub_211A47D9C();
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v46;
  v68 = (uint64_t (*)(uint64_t))sub_211A1B0F0;
  v69 = v49;
  aBlock = MEMORY[0x24BDAC760];
  v65 = 1107296256;
  v66 = sub_21192382C;
  v67 = &unk_24CCCE2E0;
  v50 = _Block_copy(&aBlock);
  v51 = v46;
  swift_release();
  sub_211A477B4();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v16, v13, v50);
  _Block_release(v50);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v59);
}

uint64_t sub_211A161AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v8 = sub_211A4779C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_211A477D8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    v25 = v9;
    v20 = *(void **)(result + 136);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v21 + 24) = a3;
    *(_QWORD *)(v21 + 32) = a4;
    *(_BYTE *)(v21 + 40) = a5 & 1;
    aBlock[4] = sub_211A1AA74;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_21192382C;
    aBlock[3] = &unk_24CCCE330;
    v22 = _Block_copy(aBlock);
    v23 = v20;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_211A477B4();
    v26 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    v24 = v13;
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v17, v12, v22);
    _Block_release(v22);
    swift_release();

    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v8);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v24);
    return swift_release();
  }
  return result;
}

uint64_t sub_211A163F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v6;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = a4 & 1;
  sub_211958C38((uint64_t *)&unk_254ACC540);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = sub_2119F49D4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_release();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_211A0B264(v9);
  swift_bridgeObjectRelease();
  swift_retain();
  v11 = sub_2119F51F4(v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254AC7B80 != -1)
    swift_once();
  v14 = sub_211A47748();
  sub_21194F3E0(v14, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v15 = sub_211A47724();
  v16 = sub_211A47D30();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v23 = v18;
    *(_DWORD *)v17 = 136315394;
    v19 = sub_211A47928();
    sub_211950A9C(v19, v20, &v23);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v11, v13, &v23);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v15, v16, "👀 FMFSecureLocCtrl: 🔥 firing up no-location %s->legacy fallback timer for %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v18, -1, -1);
    MEMORY[0x212BE48A0](v17, -1, -1);

    if (!v8[2])
      return swift_bridgeObjectRelease();
    goto LABEL_7;
  }

  swift_bridgeObjectRelease_n();
  if (v8[2])
  {
LABEL_7:
    v21 = swift_bridgeObjectRetain();
    sub_211A0B8AC(v21, v6);
    swift_bridgeObjectRelease();
    sub_211A0B3A0((uint64_t)v8, v6);
  }
  return swift_bridgeObjectRelease();
}

void sub_211A166F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22[3];

  v3 = v2;
  sub_211958C38(&qword_254ACA3B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_2119F51F4(inited);
  v9 = v8;
  swift_release();
  swift_setDeallocating();
  sub_211958C38(&qword_254AC7C58);
  swift_arrayDestroy();
  if (qword_254AC7B80 != -1)
    swift_once();
  v10 = sub_211A47748();
  sub_21194F3E0(v10, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain();
  v11 = sub_211A47724();
  v12 = sub_211A47D30();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22[0] = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = sub_211A47928();
    sub_211950A9C(v15, v16, v22);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_211950A9C(v7, v9, v22);
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v11, v12, "👀 FMFSecureLocCtrl: cancelling no-location %s->legacy fallback timer for %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v14, -1, -1);
    MEMORY[0x212BE48A0](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(v3 + 104);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_21195BB68(a1, a2);
    if ((v19 & 1) != 0)
    {
      v20 = *(id *)(*(_QWORD *)(v17 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_invalidate);

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v21 = (void *)sub_211A40FEC(a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();

}

void sub_211A16A44(uint64_t a1, uint64_t a2, int a3, char a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  char isUniquelyReferenced_nonNull_native;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t aBlock;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;

  v6 = v5;
  v61 = a3;
  v10 = a4 & 1;
  v11 = sub_211A4779C();
  v62 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_211A477D8();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_211958C38(&qword_254ACA3B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_211A4A230;
  v65 = a1;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v66 = sub_2119F51F4(inited);
  v20 = v19;
  swift_release();
  swift_setDeallocating();
  sub_211958C38(&qword_254AC7C58);
  swift_arrayDestroy();
  if (qword_254AC7B80 != -1)
    swift_once();
  v21 = sub_211A47748();
  v22 = sub_21194F3E0(v21, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v60 = v22;
  v23 = v20;
  v24 = sub_211A47724();
  v25 = sub_211A47D30();
  if (os_log_type_enabled(v24, v25))
  {
    v59 = v23;
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    aBlock = v27;
    *(_DWORD *)v26 = 134218498;
    if ((~*(_QWORD *)&a5 & 0x7FF0000000000000) != 0)
    {
      if (a5 > -9.22337204e18)
      {
        if (a5 < 9.22337204e18)
        {
          v74 = (uint64_t)a5;
          v56 = v27;
          sub_211A47E2C();
          *(_WORD *)(v26 + 12) = 2080;
          v57 = a2;
          LOBYTE(v74) = v10;
          v58 = v6;
          v28 = sub_211A47928();
          v74 = sub_211950A9C(v28, v29, &aBlock);
          sub_211A47E2C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 22) = 2080;
          v30 = v59;
          swift_bridgeObjectRetain();
          v74 = sub_211950A9C(v66, v30, &aBlock);
          v6 = v58;
          a2 = v57;
          sub_211A47E2C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21190D000, v24, v25, "👀 FMFSecureLocCtrl: setting up %ld-sec %s pause timer for %s", (uint8_t *)v26, 0x20u);
          v31 = v56;
          swift_arrayDestroy();
          MEMORY[0x212BE48A0](v31, -1, -1);
          MEMORY[0x212BE48A0](v26, -1, -1);

          v32 = v30;
          if (a5 <= 0.0)
            goto LABEL_8;
          goto LABEL_11;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }

  swift_bridgeObjectRelease_n();
  v32 = v23;
  if (a5 <= 0.0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    v33 = sub_211A47724();
    v34 = sub_211A47D30();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      aBlock = v36;
      *(_DWORD *)v35 = 136315394;
      LOBYTE(v74) = v10;
      v37 = sub_211A47928();
      v74 = sub_211950A9C(v37, v38, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v74 = sub_211950A9C(v66, v32, &aBlock);
      sub_211A47E2C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21190D000, v33, v34, "👀 FMFSecureLocCtrl: discarding (interval too short) %s pause timer for %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v36, -1, -1);
      MEMORY[0x212BE48A0](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
LABEL_11:
  swift_beginAccess();
  v39 = *(_QWORD *)(v6 + 96);
  if (*(_QWORD *)(v39 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_21195BB68(v65, a2);
    if ((v41 & 1) != 0)
    {
      v42 = *(id *)(*(_QWORD *)(v39 + 56) + 8 * v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_invalidate);

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v43 = swift_allocObject();
  swift_weakInit();
  v44 = swift_allocObject();
  *(_BYTE *)(v44 + 16) = v10;
  v45 = v65;
  *(_QWORD *)(v44 + 24) = v66;
  *(_QWORD *)(v44 + 32) = v32;
  *(_QWORD *)(v44 + 40) = v43;
  *(_QWORD *)(v44 + 48) = v45;
  *(_QWORD *)(v44 + 56) = a2;
  v46 = v61;
  *(_BYTE *)(v44 + 64) = v61 & 1;
  *(_BYTE *)(v44 + 65) = BYTE1(v46) & 1;
  *(_BYTE *)(v44 + 66) = BYTE2(v46) & 1;
  v72 = sub_211A1838C;
  v73 = v44;
  aBlock = MEMORY[0x24BDAC760];
  v69 = 1107296256;
  v70 = sub_211A1487C;
  v71 = &unk_24CCCE150;
  v47 = _Block_copy(&aBlock);
  v48 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  v49 = objc_msgSend(v48, sel_timerWithTimeInterval_repeats_block_, 0, v47, a5);
  _Block_release(v47);
  swift_release();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v50 = v49;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v67 = *(_QWORD *)(v6 + 96);
  *(_QWORD *)(v6 + 96) = 0x8000000000000000;
  sub_211A446F4((uint64_t)v50, v45, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v6 + 96) = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_211911824(0, (unint64_t *)&qword_254ACC300);
  v52 = (void *)sub_211A47D9C();
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v50;
  v72 = sub_211A183CC;
  v73 = v53;
  aBlock = MEMORY[0x24BDAC760];
  v69 = 1107296256;
  v70 = sub_21192382C;
  v71 = &unk_24CCCE1A0;
  v54 = _Block_copy(&aBlock);
  v55 = v50;
  swift_release();
  sub_211A477B4();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v17, v14, v54);
  _Block_release(v54);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v64);
}

uint64_t sub_211A17318(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t aBlock[6];
  uint64_t v52;

  v44 = a6;
  v49 = a3;
  v11 = a2 & 1;
  v12 = sub_211A4779C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_211A477D8();
  v47 = *(_QWORD *)(v17 - 8);
  v48 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v46 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254AC7B80 != -1)
    swift_once();
  v20 = sub_211A47748();
  sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
  swift_bridgeObjectRetain_n();
  v21 = sub_211A47724();
  v22 = sub_211A47D30();
  v23 = os_log_type_enabled(v21, v22);
  v45 = v11;
  if (v23)
  {
    v24 = swift_slowAlloc();
    v41 = a8;
    v25 = v24;
    v26 = swift_slowAlloc();
    v43 = v16;
    v40 = v26;
    aBlock[0] = v26;
    *(_DWORD *)v25 = 136315394;
    LOBYTE(v52) = v11;
    v42 = a7;
    v27 = sub_211A47928();
    v52 = sub_211950A9C(v27, v28, aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    v52 = sub_211950A9C(v49, a4, aBlock);
    a7 = v42;
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v21, v22, "👀 FMFSecureLocCtrl: 🔥 firing up %s pause timer for %s", (uint8_t *)v25, 0x16u);
    v29 = v40;
    swift_arrayDestroy();
    v16 = v43;
    MEMORY[0x212BE48A0](v29, -1, -1);
    v30 = v25;
    a8 = v41;
    MEMORY[0x212BE48A0](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v32 = result;
    v33 = *(void **)(result + 136);
    v34 = swift_allocObject();
    v35 = v44;
    *(_QWORD *)(v34 + 16) = v32;
    *(_QWORD *)(v34 + 24) = v35;
    *(_QWORD *)(v34 + 32) = a7;
    *(_BYTE *)(v34 + 40) = a8 & 1;
    *(_BYTE *)(v34 + 41) = BYTE1(a8) & 1;
    *(_BYTE *)(v34 + 42) = BYTE2(a8) & 1;
    *(_BYTE *)(v34 + 43) = v45;
    *(_QWORD *)(v34 + 48) = v49;
    *(_QWORD *)(v34 + 56) = a4;
    aBlock[4] = (uint64_t)sub_211A18418;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_21192382C;
    aBlock[3] = (uint64_t)&unk_24CCCE1F0;
    v36 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v37 = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    v38 = v46;
    sub_211A477B4();
    v50 = MEMORY[0x24BEE4AF8];
    sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_211958C38((uint64_t *)&unk_254ACC1D0);
    sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
    sub_211A47EA4();
    MEMORY[0x212BE3BC8](0, v38, v16, v36);
    _Block_release(v36);
    swift_release();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v48);
    return swift_release();
  }
  return result;
}

uint64_t sub_211A17774(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, uint64_t a6, unint64_t a7)
{
  int v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  size_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  uint64_t v58;
  int v59;
  void *v60;
  id v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE v66[4];
  int v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[5];
  uint64_t aBlock;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  void *v87;
  uint64_t (*v88)();
  uint64_t v89;

  v69 = a7;
  v68 = a6;
  v70 = a4;
  v67 = a5 & 1;
  v11 = sub_211A4779C();
  v75 = *(_QWORD *)(v11 - 8);
  v76 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v74 = &v66[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = sub_211A477D8();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73, v14);
  v71 = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = -1 << *(_BYTE *)(*(_QWORD *)(a1 + 56) + 32);
  v17 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(v17 + 56);
  v18 = v17 + 56;
  v19 = v20;
  v21 = ~v16;
  v22 = -v16;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  aBlock = *(_QWORD *)(a1 + 56);
  v85 = v18;
  v86 = (uint64_t (*)(uint64_t))v21;
  v87 = 0;
  v88 = (uint64_t (*)())(v23 & v19);
  v89 = 0;
  swift_bridgeObjectRetain();
  v81 = a1;
  while (1)
  {
    v25 = sub_211A10B90();
    if (!v27)
      break;
    v28 = v25;
    if (v26 == a2 && v27 == a3)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      v29 = *(_QWORD *)(a1 + 56);
      v30 = *(_QWORD *)(v29 + 16);
      if (v30)
      {
        sub_211958C38(&qword_254ACA960);
        v31 = (_QWORD *)swift_allocObject();
        v32 = j__malloc_size(v31);
        v31[2] = v30;
        v31[3] = 2 * ((uint64_t)(v32 - 32) / 24);
        v33 = sub_211A19BC4((uint64_t)v83, (uint64_t)(v31 + 4), v30, v29);
        v79 = v83[0];
        v80 = v33;
        a1 = v83[2];
        v77 = v83[4];
        v78 = v83[3];
        swift_bridgeObjectRetain_n();
        sub_211973358();
        if (v80 != v30)
          goto LABEL_37;
        swift_bridgeObjectRelease();
        a1 = v81;
      }
      else
      {
        v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        if ((v28 & 0x8000000000000000) != 0)
          goto LABEL_30;
      }
      else
      {
        v31 = sub_211A18CD4(v31);
        if ((v28 & 0x8000000000000000) != 0)
        {
LABEL_30:
          __break(1u);
          break;
        }
      }
      if (v28 >= v31[2])
      {
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v34 = &v31[3 * v28];
      v34[4] = a2;
      v34[5] = a3;
      *((_WORD *)v34 + 24) = 256;
      *((_BYTE *)v34 + 50) = 0;
      swift_bridgeObjectRelease();
      sub_211A19DE0();
      v35 = sub_211A47C58();
      v82 = v35;
      v36 = v31[2];
      if (v36)
      {
        v37 = (unsigned __int8 *)v31 + 50;
        do
        {
          v38 = *(_QWORD *)(v37 - 18);
          v39 = *(_QWORD *)(v37 - 10);
          v40 = *(v37 - 2);
          v41 = *(v37 - 1);
          v43 = *v37;
          v37 += 24;
          v42 = v43;
          v44 = v7 & 0xFF000000 | v40;
          if (v41)
            v45 = 256;
          else
            v45 = 0;
          v46 = v44 | v45;
          if (v42)
            v47 = 0x10000;
          else
            v47 = 0;
          v7 = v46 | v47;
          swift_bridgeObjectRetain();
          sub_211A27624((uint64_t)v83, v38, v39, v7);
          swift_bridgeObjectRelease();
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease();
        a1 = v81;
        v48 = v82;
      }
      else
      {
        v48 = v35;
        swift_bridgeObjectRelease();
      }
      *(_QWORD *)(a1 + 56) = v48;
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = sub_211A48258();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_10;
    }
  }
  sub_211973358();
  if (qword_254AC7B80 == -1)
    goto LABEL_32;
LABEL_38:
  swift_once();
LABEL_32:
  v49 = sub_211A47748();
  sub_21194F3E0(v49, (uint64_t)qword_254ADC7E8);
  v50 = v69;
  swift_bridgeObjectRetain_n();
  v51 = sub_211A47724();
  v52 = sub_211A47D30();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    aBlock = v54;
    *(_DWORD *)v53 = 136315394;
    LOBYTE(v83[0]) = v67;
    v55 = sub_211A47928();
    v83[0] = sub_211950A9C(v55, v56, &aBlock);
    sub_211A47E2C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    swift_bridgeObjectRetain();
    v83[0] = sub_211950A9C(v68, v50, &aBlock);
    a1 = v81;
    sub_211A47E2C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21190D000, v51, v52, "👀 FMFSecureLocCtrl: telling FMFManager pausing for %s for %s", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v54, -1, -1);
    MEMORY[0x212BE48A0](v53, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v57 = *(void **)(a1 + 144);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = a1;
  *(_QWORD *)(v58 + 24) = a2;
  *(_QWORD *)(v58 + 32) = a3;
  v59 = v70;
  *(_BYTE *)(v58 + 40) = v70 & 1;
  *(_BYTE *)(v58 + 41) = BYTE1(v59) & 1;
  *(_BYTE *)(v58 + 42) = BYTE2(v59) & 1;
  v88 = sub_211A18460;
  v89 = v58;
  aBlock = MEMORY[0x24BDAC760];
  v85 = 1107296256;
  v86 = sub_21192382C;
  v87 = &unk_24CCCE240;
  v60 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v61 = v57;
  swift_retain();
  v62 = v71;
  sub_211A477B4();
  v83[0] = MEMORY[0x24BEE4AF8];
  sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_211958C38((uint64_t *)&unk_254ACC1D0);
  sub_21193AC34((unint64_t *)&qword_254ACC350, (uint64_t *)&unk_254ACC1D0);
  v63 = v74;
  v64 = v76;
  sub_211A47EA4();
  MEMORY[0x212BE3BC8](0, v62, v63, v60);
  _Block_release(v60);

  (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v63, v64);
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v62, v73);
  return swift_release();
}

uint64_t sub_211A17E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t inited;

  result = MEMORY[0x212BE496C](a1 + 184);
  if (result)
  {
    sub_211958C38((uint64_t *)&unk_254ACC540);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_211A4A230;
    *(_QWORD *)(inited + 32) = a2;
    *(_QWORD *)(inited + 40) = a3;
    swift_bridgeObjectRetain();
    sub_2119EBDD4(inited);
    swift_unknownObjectRelease();
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  return result;
}

void sub_211A17EE4(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
  objc_msgSend(v2, sel_addTimer_forMode_, a1, *MEMORY[0x24BDBCB80]);

}

id *sub_211A17F4C()
{
  id *v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_211962AB8((uint64_t)(v0 + 21));
  sub_211962AB8((uint64_t)(v0 + 23));

  return v0;
}

uint64_t sub_211A17FF8()
{
  sub_211A17F4C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFSecureLocationRefreshController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for FMFSecureLocationMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_211A18084 + 4 * byte_211A51265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_211A180B8 + 4 * byte_211A51260[v4]))();
}

uint64_t sub_211A180B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A180C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x211A180C8);
  return result;
}

uint64_t sub_211A180D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x211A180DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_211A180E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_211A180E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFSecureLocationMode()
{
  return &type metadata for FMFSecureLocationMode;
}

uint64_t sub_211A18108(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LiveFriend(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 initializeWithTake for LiveFriend(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LiveFriend(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveFriend(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 19))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveFriend(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 19) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveFriend()
{
  return &type metadata for LiveFriend;
}

unint64_t sub_211A182A8()
{
  unint64_t result;

  result = qword_254ACE740;
  if (!qword_254ACE740)
  {
    result = MEMORY[0x212BE47C8](&unk_211A51404, &type metadata for LiveFriend);
    atomic_store(result, (unint64_t *)&qword_254ACE740);
  }
  return result;
}

unint64_t sub_211A182F0()
{
  unint64_t result;

  result = qword_254ACE748;
  if (!qword_254ACE748)
  {
    result = MEMORY[0x212BE47C8](&unk_211A514AC, &type metadata for FMFSecureLocationMode);
    atomic_store(result, (unint64_t *)&qword_254ACE748);
  }
  return result;
}

uint64_t sub_211A18334()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_211A18358()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1838C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 65))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 64);
  if (*(_BYTE *)(v1 + 66))
    v4 = 0x10000;
  else
    v4 = 0;
  return sub_211A17318(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v3 | v4);
}

void sub_211A183CC()
{
  uint64_t v0;

  sub_211A17EE4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_211A183E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A18418()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v0 + 41))
    v1 = 256;
  else
    v1 = 0;
  v2 = v1 | *(unsigned __int8 *)(v0 + 40);
  if (*(_BYTE *)(v0 + 42))
    v3 = 0x10000;
  else
    v3 = 0;
  return sub_211A17774(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v2 | v3, *(_BYTE *)(v0 + 43), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_211A18458()
{
  return sub_2119FC6AC();
}

uint64_t sub_211A18460()
{
  return sub_211A1AF30((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_211A17E38);
}

uint64_t sub_211A1846C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_211A48318();
  swift_bridgeObjectRetain();
  sub_211A4797C();
  v6 = sub_211A48348();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_211A48258() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_211A48258() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_211A2994C();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_211A1888C(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_211A185F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_211958C38(&qword_254ACCB38);
  result = sub_211A47F4C();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_211A48318();
    swift_bridgeObjectRetain();
    sub_211A4797C();
    result = sub_211A48348();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_211A1888C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_211A47EB0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        v10 = sub_211A48348();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_211A18A50(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_211A47EB0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v21 = v3;
      v22 = v4;
      do
      {
        v11 = 24 * v6;
        v12 = v2;
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        sub_211A48330();
        sub_211A48330();
        sub_211A48330();
        v13 = sub_211A48348();
        swift_bridgeObjectRelease();
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
          {
            v3 = v21;
            v4 = v22;
          }
          else
          {
            v3 = v21;
            v4 = v22;
            if (v2 >= (uint64_t)v14)
              goto LABEL_12;
          }
        }
        else
        {
          v3 = v21;
          v4 = v22;
          if (v14 >= v9 || v2 >= (uint64_t)v14)
          {
LABEL_12:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = v15 + 24 * v2;
            v17 = (__int128 *)(v15 + v11);
            if (24 * v2 < v11 || v16 >= (unint64_t)v17 + 24 || (v2 = v6, v12 != v6))
            {
              v10 = *v17;
              *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
              *(_OWORD *)v16 = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

_QWORD *sub_211A18C98(_QWORD *a1)
{
  return sub_2119B02DC(0, a1[2], 0, a1);
}

_QWORD *sub_211A18CAC(_QWORD *a1)
{
  return sub_2119B0AC4(0, a1[2], 0, a1);
}

uint64_t sub_211A18CC0(unint64_t a1)
{
  return sub_21194B098(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_211A18CD4(_QWORD *a1)
{
  return sub_2119B0BE8(0, a1[2], 0, a1);
}

uint64_t sub_211A18CE8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_211A18E68((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_211A18E68((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x212BE48A0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_211A18E68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_211A48318();
        swift_bridgeObjectRetain();
        sub_211A4797C();
        v20 = sub_211A48348();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_211A48258() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_211A48258() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_211A48318();
    swift_bridgeObjectRetain();
    sub_211A4797C();
    v47 = sub_211A48348();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_211A48258() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_211A185F8(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_211A48258() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_211A193A4(unint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_211A2A0A0();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 24 * a1);
  sub_211A18A50(a1);
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_211A194BC(unint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v7 = *v3, 1 << *(_BYTE *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_211A2994C();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * a1);
  sub_211A1888C(a1);
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_211A1959C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = result;
  i = 0;
  v4 = result + 56;
  v5 = -1 << *(_BYTE *)(result + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(63 - v5) >> 6;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v11 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v11 < v8)
    {
      v12 = *(_QWORD *)(v4 + 8 * v11);
      v13 = i + 1;
      if (v12)
        goto LABEL_21;
      v13 = i + 2;
      if (i + 2 >= v8)
        return sub_211973358();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
        goto LABEL_21;
      v13 = i + 3;
      if (i + 3 >= v8)
        return sub_211973358();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
      {
LABEL_21:
        v7 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        for (i = v13; ; v10 = v9 | (i << 6))
        {
          v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
          v17 = *v15;
          v16 = v15[1];
          v18 = *v1;
          swift_bridgeObjectRetain();
          if ((sub_211A09628(v17, v16, v18) & 1) != 0)
          {
            sub_211A1846C(v17, v16);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if (!v7)
              goto LABEL_8;
          }
          else
          {
            sub_211959264(&v19, v17, v16);
            result = swift_bridgeObjectRelease();
            if (!v7)
              goto LABEL_8;
          }
LABEL_7:
          v9 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = i + 4;
      if (i + 4 < v8)
      {
        v12 = *(_QWORD *)(v4 + 8 * v14);
        if (v12)
        {
          v13 = i + 4;
          goto LABEL_21;
        }
        while (1)
        {
          v13 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_27;
          if (v13 >= v8)
            return sub_211973358();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          ++v14;
          if (v12)
            goto LABEL_21;
        }
      }
    }
    return sub_211973358();
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_211A19758(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 32 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 24);
    v25 = *(_BYTE *)(v20 + 25);
    LOBYTE(v20) = *(_BYTE *)(v20 + 26);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_QWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 24) = v24;
    *(_BYTE *)(v11 + 25) = v25;
    *(_BYTE *)(v11 + 26) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 32;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_211A19988(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 56) + 32 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 24);
    v25 = *(_BYTE *)(v20 + 25);
    LOBYTE(v20) = *(_BYTE *)(v20 + 26);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_QWORD *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 24) = v24;
    *(_BYTE *)(v11 + 25) = v25;
    *(_BYTE *)(v11 + 26) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 32;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_211A19BB8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21194BF50(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
}

uint64_t sub_211A19BC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    v23 = *(_BYTE *)(v20 + 16);
    v24 = *(_BYTE *)(v20 + 17);
    LOBYTE(v20) = *(_BYTE *)(v20 + 18);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_BYTE *)(v11 + 16) = v23;
    *(_BYTE *)(v11 + 17) = v24;
    *(_BYTE *)(v11 + 18) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v25;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_211A19DE0()
{
  unint64_t result;

  result = qword_254ACE750;
  if (!qword_254ACE750)
  {
    result = MEMORY[0x212BE47C8](&unk_211A5142C, &type metadata for LiveFriend);
    atomic_store(result, (unint64_t *)&qword_254ACE750);
  }
  return result;
}

void sub_211A19E24(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = sub_211A474D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v34 - v16;
  v41 = a4;
  v20 = *(_QWORD *)(a4 + 56);
  v19 = a4 + 56;
  v18 = v20;
  v39 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 24);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
LABEL_37:
    v33 = v39;
    *a1 = v41;
    a1[1] = v33;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v36 = -1 << *(_BYTE *)(v19 - 24);
  v37 = a1;
  v24 = 0;
  v25 = 0;
  v38 = (unint64_t)(63 - v21) >> 6;
  v35 = v38 - 1;
  v40 = a3;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v12, *(_QWORD *)(v41 + 48) + v31 * v27, v8, v15);
    v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v32(v17, v12, v8);
    v32(a2, v17, v8);
    if (v25 == v40)
      goto LABEL_36;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v28 >= v38)
      goto LABEL_32;
    v29 = *(_QWORD *)(v39 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v38)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v39 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v38)
    goto LABEL_32;
  v29 = *(_QWORD *)(v39 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v38)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v39 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v38)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    v21 = v36;
    a1 = v37;
    goto LABEL_37;
  }
  v29 = *(_QWORD *)(v39 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v38)
    {
      v23 = 0;
      v24 = v35;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v39 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_211A1A0EC(uint64_t a1, uint64_t a2, _QWORD **a3, char a4, void *a5)
{
  uint64_t v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25[2];
  int64_t v26;

  v10 = a4 & 1;
  v24 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v26 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v22 = v21[1];
    v25[0] = *v21;
    v25[1] = v22;
    swift_bridgeObjectRetain();
    sub_211A11E4C(v25, a2, a3, v10, a5);
    if (v5)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v26)
      return swift_release();
    v19 = *(_QWORD *)(v24 + 8 * v15);
    if (!v19)
    {
      v20 = v15 + 1;
      if (v15 + 1 >= v26)
        return swift_release();
      v19 = *(_QWORD *)(v24 + 8 * v20);
      if (v19)
        goto LABEL_14;
      v20 = v15 + 2;
      if (v15 + 2 >= v26)
        return swift_release();
      v19 = *(_QWORD *)(v24 + 8 * v20);
      if (v19)
        goto LABEL_14;
      v20 = v15 + 3;
      if (v15 + 3 >= v26)
        return swift_release();
      v19 = *(_QWORD *)(v24 + 8 * v20);
      if (v19)
      {
LABEL_14:
        v15 = v20;
        goto LABEL_15;
      }
      v23 = v15 + 4;
      if (v15 + 4 >= v26)
        return swift_release();
      v19 = *(_QWORD *)(v24 + 8 * v23);
      v15 += 4;
      if (!v19)
        break;
    }
LABEL_15:
    v13 = (v19 - 1) & v19;
  }
  while (1)
  {
    v15 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v15 >= v26)
      return swift_release();
    v19 = *(_QWORD *)(v24 + 8 * v15);
    ++v23;
    if (v19)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_211A1A2E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v5 = result;
  v6 = 0;
  v7 = result + 56;
  v8 = 1 << *(_BYTE *)(result + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(result + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_22;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v11)
      return 0;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        return 0;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          return 0;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v6 = v14 + 3;
          if (v14 + 3 >= v11)
            return 0;
          v15 = *(_QWORD *)(v7 + 8 * v6);
          if (!v15)
            break;
        }
      }
    }
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    v18 = *v17;
    if (*v17 == a2 && v17[1] == a3)
    {
      v18 = a2;
LABEL_29:
      swift_bridgeObjectRetain();
      return v18;
    }
    result = sub_211A48258();
    if ((result & 1) != 0)
      goto LABEL_29;
  }
  v16 = v14 + 4;
  if (v16 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return 0;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_211A1A48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  int64_t v21;

  v5 = 0;
  v8 = *(_QWORD *)(a1 + 56);
  result = a1 + 56;
  v7 = v8;
  v20 = result;
  v9 = 1 << *(_BYTE *)(result - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v21 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_22;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v21)
      return 0;
    v15 = *(_QWORD *)(v20 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v21)
        return 0;
      v15 = *(_QWORD *)(v20 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v21)
          return 0;
        v15 = *(_QWORD *)(v20 + 8 * v5);
        if (!v15)
        {
          v5 = v14 + 3;
          if (v14 + 3 >= v21)
            return 0;
          v15 = *(_QWORD *)(v20 + 8 * v5);
          if (!v15)
            break;
        }
      }
    }
LABEL_21:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 24 * v13);
    v18 = *v17;
    if (*v17 == a2 && v17[1] == a3)
    {
      v18 = a2;
LABEL_29:
      swift_bridgeObjectRetain();
      return v18;
    }
    result = sub_211A48258();
    if ((result & 1) != 0)
      goto LABEL_29;
  }
  v16 = v14 + 4;
  if (v16 >= v21)
    return 0;
  v15 = *(_QWORD *)(v20 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v21)
      return 0;
    v15 = *(_QWORD *)(v20 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_211A1A6A0(uint64_t a1)
{
  int v1;
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  _BYTE v17[8];
  uint64_t v18;

  v3 = *(_QWORD *)(a1 + 16);
  sub_211A1AE6C();
  result = sub_211A47C58();
  v18 = result;
  if (v3)
  {
    v5 = (unsigned __int8 *)(a1 + 58);
    do
    {
      v6 = *(_QWORD *)(v5 - 26);
      v7 = *(_QWORD *)(v5 - 18);
      v8 = *(_QWORD *)(v5 - 10);
      v9 = *(v5 - 2);
      v10 = *(v5 - 1);
      v12 = *v5;
      v5 += 32;
      v11 = v12;
      v13 = v1 & 0xFF000000 | v9;
      if (v10)
        v14 = 256;
      else
        v14 = 0;
      v15 = v13 | v14;
      if (v11)
        v16 = 0x10000;
      else
        v16 = 0;
      v1 = v15 | v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_211A26EE4((uint64_t)v17, v6, v7, v8, v1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    return v18;
  }
  return result;
}

uint64_t sub_211A1A794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v2 = sub_211A474D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, MEMORY[0x24BE32118]);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v16 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  sub_211910908(&qword_254ACE760, v11, MEMORY[0x24BE32128]);
  result = sub_211A47C58();
  v17 = result;
  if (v10)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v15(v5, v13, v2);
      sub_211A273C8((uint64_t)v9, v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v13 += v14;
      --v10;
    }
    while (v10);
    return v17;
  }
  return result;
}

uint64_t sub_211A1A8BC(uint64_t a1)
{
  int v1;
  uint64_t v3;
  uint64_t result;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  sub_211A19DE0();
  result = sub_211A47C58();
  v17 = result;
  if (v3)
  {
    v5 = (unsigned __int8 *)(a1 + 50);
    do
    {
      v6 = *(_QWORD *)(v5 - 18);
      v7 = *(_QWORD *)(v5 - 10);
      v8 = *(v5 - 2);
      v9 = *(v5 - 1);
      v11 = *v5;
      v5 += 24;
      v10 = v11;
      v12 = v1 & 0xFF000000 | v8;
      if (v9)
        v13 = 256;
      else
        v13 = 0;
      v14 = v12 | v13;
      if (v10)
        v15 = 0x10000;
      else
        v15 = 0;
      v1 = v14 | v15;
      swift_bridgeObjectRetain();
      sub_211A27624((uint64_t)&v16, v6, v7, v1);
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    return v17;
  }
  return result;
}

uint64_t sub_211A1A990(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_211958C38(&qword_254AC7C58);
  sub_211A1AFFC();
  result = sub_211A47C58();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_211A278E8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_211A1AA30()
{
  return sub_2119FC6AC();
}

uint64_t sub_211A1AA38(uint64_t a1)
{
  uint64_t v1;

  return sub_211A161AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_211A1AA48()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_211A1AA6C()
{
  return sub_2119FC6AC();
}

uint64_t sub_211A1AA74()
{
  uint64_t v0;

  return sub_211A163F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_211A1AA84()
{
  return sub_211A1AF98((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_211A1AA98(uint64_t a1)
{
  uint64_t v1;

  return sub_211A15234(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_211A1AAA8()
{
  return sub_211A1AF98((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_211A1AABC()
{
  return sub_211A1AFE8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_211A15480);
}

uint64_t sub_211A1AAC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211A1AAEC(uint64_t a1)
{
  uint64_t v1;

  return sub_211A142D4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_211A1AAF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211A1AB1C()
{
  uint64_t v0;

  return sub_211A14504(*(_BYTE *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_211A1AB28()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_211A1AB4C(void *a1)
{
  uint64_t v1;

  sub_211A1368C(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_211A1AB58()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1AB94(void *a1, void *a2)
{
  uint64_t v2;

  return sub_211A1208C(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_211A1ABA8()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_211A1ABF4()
{
  uint64_t v0;

  sub_211A12314(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_211A1AC0C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1AC30()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_211A1AC44(uint64_t a1)
{
  uint64_t v1;

  return sub_211A10D3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_211A1AC4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_21190F6A4(*(unsigned __int8 *)(v1 + 16));
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_211A1AC80()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_211A1ACB4()
{
  uint64_t *v0;

  return sub_211A11158(v0[2], v0[3], v0[4]);
}

uint64_t sub_211A1ACC0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1ACFC()
{
  uint64_t v0;

  return sub_211A114DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_211A1AD0C()
{
  _QWORD *v0;

  return sub_211A0F930(v0);
}

uint64_t sub_211A1AD14()
{
  return sub_211A0F614();
}

uint64_t sub_211A1AD1C()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_211A1AD34()
{
  uint64_t v0;

  return sub_211A0C20C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_2119EBC00);
}

uint64_t sub_211A1AD54()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_211A1AD6C()
{
  uint64_t v0;

  return sub_211A0C20C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_2119EBBEC);
}

uint64_t sub_211A1AD90()
{
  uint64_t v0;

  return sub_211A0B834(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (void (*)(uint64_t))sub_2119EC298, (void (*)(uint64_t))sub_2119EBDA4);
}

uint64_t sub_211A1ADC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1ADEC()
{
  uint64_t v0;

  return sub_211A0B834(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (void (*)(uint64_t))sub_2119EBDBC, (void (*)(uint64_t))sub_2119EBD8C);
}

uint64_t sub_211A1AE18(unint64_t a1)
{
  return sub_211A0A2B8(a1);
}

uint64_t sub_211A1AE20(uint64_t a1)
{
  return sub_211A0A79C(a1);
}

uint64_t sub_211A1AE28()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_211A1AE40()
{
  return sub_211A0A9CC();
}

uint64_t sub_211A1AE48()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_211A1AE60()
{
  uint64_t v0;

  return sub_211A0A59C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

unint64_t sub_211A1AE6C()
{
  unint64_t result;

  result = qword_254ACE758;
  if (!qword_254ACE758)
  {
    result = MEMORY[0x212BE47C8](&unk_211A4C25C, &type metadata for SecureFriend);
    atomic_store(result, (unint64_t *)&qword_254ACE758);
  }
  return result;
}

uint64_t sub_211A1AEB0()
{
  return sub_211A1AEC8((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_211A1AEC8(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

void sub_211A1AF10()
{
  uint64_t v0;

  sub_211A0E308(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_211A1AF1C()
{
  return sub_2119FC6AC();
}

uint64_t sub_211A1AF24()
{
  return sub_211A1AF30((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_211A0F30C);
}

uint64_t sub_211A1AF30(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 41))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 40);
  if (*(_BYTE *)(v1 + 42))
    v4 = 0x10000;
  else
    v4 = 0;
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v3 | v4);
}

uint64_t sub_211A1AF6C(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2119A0BB0(result, a2, a3 & 1);
  return result;
}

uint64_t sub_211A1AF84()
{
  return sub_211A1AF98((void (*)(_QWORD))MEMORY[0x24BEE4BC0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_211A1AF98(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_211A1AFDC()
{
  return sub_211A1AFE8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_211A0CA20);
}

uint64_t sub_211A1AFE8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

unint64_t sub_211A1AFFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254ACE768;
  if (!qword_254ACE768)
  {
    v1 = sub_21195E2C0(&qword_254AC7C58);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x212BE47C8](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254ACE768);
  }
  return result;
}

uint64_t FMFGetURLInfoAction.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC7FMFCore19FMFGetURLInfoAction_url;
  v4 = sub_211A4713C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  *(_BYTE *)(v2 + 16) = 0;
  return v2;
}

uint64_t FMFGetURLInfoAction.init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC7FMFCore19FMFGetURLInfoAction_url;
  v4 = sub_211A4713C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  *(_BYTE *)(v1 + 16) = 0;
  return v1;
}

uint64_t sub_211A1B21C()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211A4713C();
  sub_211A1B360();
  sub_211A4821C();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

unint64_t sub_211A1B360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254ACE770;
  if (!qword_254ACE770)
  {
    v1 = sub_211A4713C();
    result = MEMORY[0x212BE47C8](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_254ACE770);
  }
  return result;
}

void FMFGetURLInfoAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFGetURLInfoAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211A1B400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore19FMFGetURLInfoAction_url;
  v2 = sub_211A4713C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t FMFGetURLInfoAction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore19FMFGetURLInfoAction_url;
  v2 = sub_211A4713C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FMFGetURLInfoAction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC7FMFCore19FMFGetURLInfoAction_url;
  v2 = sub_211A4713C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_211A1B4D0()
{
  return type metadata accessor for FMFGetURLInfoAction();
}

uint64_t type metadata accessor for FMFGetURLInfoAction()
{
  uint64_t result;

  result = qword_254ACE7A0;
  if (!qword_254ACE7A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_211A1B514()
{
  uint64_t result;
  unint64_t v1;

  result = sub_211A4713C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FMFGetURLInfoAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFGetURLInfoAction.__allocating_init(url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FMFRespondToInviteAction.__allocating_init(friendId:accepted:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 24) = a1;
  *(_QWORD *)(result + 32) = a2;
  *(_BYTE *)(result + 40) = a3;
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t FMFRespondToInviteAction.init(friendId:accepted:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  *(_BYTE *)(v3 + 40) = a3;
  *(_BYTE *)(v3 + 16) = 0;
  return v3;
}

uint64_t sub_211A1B5F0()
{
  sub_211A483A8();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  sub_211930ED4();
  sub_211A47A30();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_211A479B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 60;
}

void FMFRespondToInviteAction.__allocating_init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FMFRespondToInviteAction.init(requiresRefresh:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_211A1B81C()
{
  return swift_bridgeObjectRelease();
}

uint64_t FMFRespondToInviteAction.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FMFRespondToInviteAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFRespondToInviteAction()
{
  return objc_opt_self();
}

uint64_t method lookup function for FMFRespondToInviteAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FMFRespondToInviteAction.__allocating_init(friendId:accepted:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_211A1B898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  int v11;
  int v12;
  char v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v3 = sub_211A474D8();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v19[1] = v1;
  v24 = MEMORY[0x24BEE4AF8];
  sub_211947C68(0, v7, 0);
  v8 = v24;
  result = sub_2119483E8(a1);
  v10 = result;
  v12 = v11;
  v14 = v13 & 1;
  v20 = a1 + 56;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v20 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != v12)
      goto LABEL_14;
    v23 = v14;
    swift_bridgeObjectRetain_n();
    sub_211A264C0(MEMORY[0x24BEE4AF8]);
    sub_211A474C0();
    swift_bridgeObjectRelease();
    v24 = v8;
    v16 = *(_QWORD *)(v8 + 16);
    v15 = *(_QWORD *)(v8 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_211947C68(v15 > 1, v16 + 1, 1);
      v8 = v24;
    }
    *(_QWORD *)(v8 + 16) = v16 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v8+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v16, v6, v22);
    result = sub_211947D78(v10, v12, v23 & 1, a1);
    v10 = result;
    v12 = v17;
    v14 = v18 & 1;
    if (!--v7)
    {
      sub_2119A0BB0(result, v17, v14);
      return v8;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_211A1BAB4(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t FMFActionStatus.rawValue.getter()
{
  char *v0;

  return qword_211A51768[*v0];
}

FMFCore::FMFActionStatus_optional __swiftcall FMFActionStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  if (rawValue == 200)
    v2 = 2;
  else
    v2 = 3;
  if (rawValue)
    v3 = v2;
  else
    v3 = 1;
  if (rawValue == -1)
    v3 = 0;
  *v1 = v3;
  return (FMFCore::FMFActionStatus_optional)rawValue;
}

BOOL sub_211A1BB48(char *a1, char *a2)
{
  return qword_211A51768[*a1] == qword_211A51768[*a2];
}

uint64_t sub_211A1BB6C()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

uint64_t sub_211A1BBB8()
{
  return sub_211A48324();
}

uint64_t sub_211A1BBEC()
{
  sub_211A48318();
  sub_211A48324();
  return sub_211A48348();
}

FMFCore::FMFActionStatus_optional sub_211A1BC34(Swift::Int *a1)
{
  return FMFActionStatus.init(rawValue:)(*a1);
}

void sub_211A1BC3C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_211A51768[*v1];
}

uint64_t sub_211A1BC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  if (qword_254AC7B80 != -1)
    swift_once();
  v2 = sub_211A47748();
  sub_21194F3E0(v2, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v5 = 136315138;
    v6 = *(_QWORD *)(v1 + 16);
    v7 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    v8 = sub_21193707C(0xCuLL, v6, v7);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x212BE376C](v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_211950A9C(v15, v17, &v20);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v3, v4, "FMFActionsController<%s>.deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v19, -1, -1);
    MEMORY[0x212BE48A0](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_bridgeObjectRelease();
  sub_211962AB8(v1 + 32);
  swift_release();

  sub_211931C34(v1 + 64);
  swift_release();
  return v1;
}

uint64_t sub_211A1BE90()
{
  sub_211A1BC5C();
  return swift_deallocClassInstance();
}

uint64_t sub_211A1BEB0(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_211A18CAC(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_211A2B2B8(v5);
  *a1 = v2;
  return result;
}

void sub_211A1BF1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  void *v75;
  uint64_t v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD v113[2];
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint8_t *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  __int128 aBlock;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;

  v4 = v3;
  v121 = a3;
  v120 = a2;
  v6 = sub_211958C38(qword_254AC8A78);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_211A474D8();
  v131 = *(_QWORD *)(v10 - 8);
  v132 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_211958C38(&qword_254AC9FD0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v117 = (char *)v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_211A4779C();
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129, v17);
  v127 = (char *)v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_211A477D8();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126, v19);
  v124 = (char *)v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_211958C38((uint64_t *)&unk_254AC8CB0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_211958C38(&qword_254ACA278);
  MEMORY[0x24BDAC7A8](v25, v26);
  v119 = (char *)v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_211958C38(&qword_254AC8870);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v116 = (uint64_t)v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v32);
  v133 = (_QWORD *)((char *)v113 - v33);
  v34 = type metadata accessor for FMFFriend();
  v135 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v115 = (_QWORD *)((char *)v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v41 = (_QWORD *)((char *)v113 - v40);
  MEMORY[0x24BDAC7A8](v39, v42);
  v114 = (uint64_t)v113 - v43;
  if (qword_254AC7B80 != -1)
    swift_once();
  v44 = sub_211A47748();
  sub_21194F3E0(v44, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v45 = sub_211A47724();
  v46 = sub_211A47D30();
  v47 = os_log_type_enabled(v45, v46);
  v122 = a1;
  v130 = v13;
  v118 = v9;
  v134 = v34;
  if (v47)
  {
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v49;
    *(_DWORD *)v48 = 136315138;
    v123 = v48 + 4;
    v142 = *v4;
    sub_211958C38(&qword_254ACEAD8);
    v50 = sub_211A47928();
    v142 = sub_211950A9C(v50, v51, (uint64_t *)&aBlock);
    v13 = v130;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v45, v46, "%s: shareLocation action initiated", v48, 0xCu);
    swift_arrayDestroy();
    v52 = v49;
    a1 = v122;
    MEMORY[0x212BE48A0](v52, -1, -1);
    MEMORY[0x212BE48A0](v48, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v53 = a1[5];
  v123 = (uint8_t *)v4;
  if (v53)
  {
    v54 = a1[4];
    v55 = v4[6];
    sub_211958C38(&qword_254ACABB8);
    v113[1] = v55;
    sub_211A47DA8();
    v56 = *(_QWORD *)(aBlock + 16);
    if (v56)
    {
      v113[0] = v24;
      v57 = aBlock + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
      v58 = *(_QWORD *)(v135 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_211934794(v57, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v59 = v41[1];
        *(_QWORD *)&aBlock = *v41;
        *((_QWORD *)&aBlock + 1) = v59;
        v142 = v54;
        v143 = v53;
        sub_21194FDB4();
        if ((sub_211A47E80() & 1) != 0)
          break;
        sub_211934758((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
        v57 += v58;
        if (!--v56)
        {
          swift_bridgeObjectRelease();
          a1 = v122;
          v13 = v130;
          v24 = (char *)v113[0];
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      v64 = (uint64_t)v41;
      v63 = (uint64_t)v133;
      sub_211942810(v64, (uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v61 = v134;
      v60 = v135;
      v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
      v62(v63, 0, 1, v134);
      a1 = v122;
      v13 = v130;
      v24 = (char *)v113[0];
    }
    else
    {
LABEL_12:
      v61 = v134;
      v60 = v135;
      v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
      v63 = (uint64_t)v133;
      v62((uint64_t)v133, 1, 1, v134);
    }
    swift_bridgeObjectRelease();
    v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v63, 1, v61);
    v4 = (uint64_t *)v123;
    if (v65 != 1)
    {
      v78 = v114;
      sub_211942810(v63, v114, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v79 = v116;
      sub_211934794(v78, v116, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      v62(v79, 0, 1, v61);
      v80 = type metadata accessor for FMFIntermediateFriend();
      v81 = (uint64_t)v119;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v119, 1, 1, v80);
      v142 = 1;
      LOBYTE(v143) = 0;
      v140 = 0;
      v141 = 1;
      v82 = type metadata accessor for FMFLocation();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v24, 1, 1, v82);
      v139 = 0;
      v137 = 0u;
      v138 = 0u;
      aBlock = 0u;
      v83 = v115;
      sub_211956D54(v79, v81, (unint64_t)&v142, (uint64_t)&v140, (uint64_t)v24, 0, 1, (uint64_t *)&aBlock, v115, 0, 0, 2u, 2u, 2);
      sub_211934758(v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      sub_211942810((uint64_t)v83, v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      LOBYTE(aBlock) = 2;
      sub_2119F8570(v78, &aBlock);
      sub_211934758(v78, (uint64_t (*)(_QWORD))type metadata accessor for FMFFriend);
      goto LABEL_23;
    }
    sub_211923EE8(v63, &qword_254AC8870);
  }
  v119 = (char *)a1[3];
  v66 = *((_QWORD *)v119 + 2);
  if (v66)
  {
    v133 = v4 + 4;
    v67 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v68 = v124;
    v69 = v127;
    do
    {
      v70 = *(v67 - 1);
      v71 = *v67;
      v72 = MEMORY[0x212BE496C](v133);
      if (v72)
      {
        v73 = *(_QWORD *)(v72 + 88);
        v135 = *(_QWORD *)(v73 + 56);
        v74 = (_QWORD *)swift_allocObject();
        v74[2] = v73;
        v74[3] = v70;
        v74[4] = v71;
        *(_QWORD *)&v138 = sub_211A2C0C4;
        *((_QWORD *)&v138 + 1) = v74;
        *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v137 = sub_21192382C;
        *((_QWORD *)&v137 + 1) = &unk_24CCCEE00;
        v75 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        sub_211A477B4();
        v142 = MEMORY[0x24BEE4AF8];
        sub_211910908((unint64_t *)&qword_254ACC340, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        sub_211958C38((uint64_t *)&unk_254ACC1D0);
        sub_211969B94();
        v134 = v71;
        v76 = v129;
        sub_211A47EA4();
        MEMORY[0x212BE3BC8](0, v68, v69, v75);
        v77 = v75;
        v13 = v130;
        _Block_release(v77);
        (*(void (**)(char *, uint64_t))(v128 + 8))(v69, v76);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v68, v126);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      v67 += 2;
      --v66;
    }
    while (v66);
    swift_bridgeObjectRelease();
    a1 = v122;
    v4 = (uint64_t *)v123;
  }
LABEL_23:
  v84 = sub_211A46F08();
  *((_QWORD *)&v137 + 1) = v84;
  *(_QWORD *)&v138 = sub_211910908((unint64_t *)&qword_254AC81D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE319D0], MEMORY[0x24BE319B8]);
  v85 = sub_211969B08((uint64_t *)&aBlock);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v84 - 8) + 104))(v85, *MEMORY[0x24BE319C8], v84);
  LOBYTE(v84) = MEMORY[0x212BE2D10](&aBlock);
  sub_211931C34((uint64_t)&aBlock);
  if ((v84 & 1) != 0)
  {
    v86 = a1[3];
    v87 = *(_QWORD *)(v86 + 16);
    if (v87)
    {
      *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_211947C68(0, v87, 0);
      v88 = aBlock;
      v89 = v86 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_211A474C0();
        *(_QWORD *)&aBlock = v88;
        v91 = *(_QWORD *)(v88 + 16);
        v90 = *(_QWORD *)(v88 + 24);
        if (v91 >= v90 >> 1)
        {
          sub_211947C68(v90 > 1, v91 + 1, 1);
          v88 = aBlock;
        }
        v89 += 16;
        *(_QWORD *)(v88 + 16) = v91 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))(v88+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(_QWORD *)(v131 + 72) * v91, v13, v132);
        --v87;
      }
      while (v87);
      swift_bridgeObjectRelease();
      a1 = v122;
    }
    else
    {
      v88 = MEMORY[0x24BEE4AF8];
    }
    v109 = sub_211A47B8C();
    v110 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v117, 1, 1, v109);
    v111 = (_QWORD *)swift_allocObject();
    v111[2] = 0;
    v111[3] = 0;
    v111[4] = v88;
    v111[5] = a1;
    v112 = v120;
    v111[6] = v123;
    v111[7] = v112;
    v111[8] = v121;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2119E2088(v110, (uint64_t)&unk_254ACEAF8, (uint64_t)v111);
    swift_release();
  }
  else
  {
    v142 = MEMORY[0x24BEE4B08];
    v92 = a1[3];
    v93 = *(_QWORD *)(v92 + 16);
    if (v93)
    {
      v94 = (void *)objc_opt_self();
      swift_bridgeObjectRetain_n();
      v95 = v92 + 40;
      do
      {
        swift_bridgeObjectRetain();
        v96 = (void *)sub_211A478EC();
        v97 = objc_msgSend(v94, sel_handleWithId_, v96);

        if (v97)
        {
          sub_211A2712C(&aBlock, v97);
          v98 = (void *)aBlock;
          swift_bridgeObjectRelease();

        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v95 += 16;
        --v93;
      }
      while (v93);
      swift_bridgeObjectRelease_n();
      v4 = (uint64_t *)v123;
    }
    v99 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FED0]), sel_init);
    v100 = swift_bridgeObjectRetain();
    sub_211A1D45C(v100);
    swift_bridgeObjectRelease();
    v101 = (void *)sub_211A47C34();
    swift_bridgeObjectRelease();
    v102 = (uint64_t)v118;
    sub_211978A44((uint64_t)v118);
    v103 = sub_211A47208();
    v104 = *(_QWORD *)(v103 - 8);
    v105 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103) != 1)
    {
      v105 = (void *)sub_211A471A8();
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v102, v103);
    }
    v106 = (_QWORD *)swift_allocObject();
    v106[2] = a1;
    v106[3] = v4;
    v107 = v121;
    v106[4] = v120;
    v106[5] = v107;
    *(_QWORD *)&v138 = sub_211A2C0D4;
    *((_QWORD *)&v138 + 1) = v106;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v137 = sub_211A1DCBC;
    *((_QWORD *)&v137 + 1) = &unk_24CCCEE50;
    v108 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v99, sel_sendFriendshipOfferToHandles_groupId_callerId_endDate_completion_, v101, 0, 0, v105, v108);
    _Block_release(v108);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_211A1CD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  sub_211958C38(&qword_254ACEB00);
  v8[8] = swift_task_alloc();
  v9 = sub_211A47424();
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  sub_211A4743C();
  v8[12] = swift_task_alloc();
  v10 = sub_211A47484();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A1CE04()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[16] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: perform offer location", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[11];
  v6 = v0[9];
  v7 = v0[10];

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  *v8 = v0;
  v8[1] = sub_211A1CF5C;
  return sub_211A4758C();
}

uint64_t sub_211A1CF5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A1CFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v3;
  *v3 = v0;
  v3[1] = sub_211A1D06C;
  return sub_211A47514();
}

uint64_t sub_211A1D06C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_211923EE8(v2[8], &qword_254ACEB00);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v4 = v2[14];
    v3 = v2[15];
    v5 = v2[13];
    v6 = v2[8];
    swift_bridgeObjectRelease();
    swift_release();
    sub_211923EE8(v6, &qword_254ACEB00);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_211A1D144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(char *, _QWORD);
  char v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  if (v2)
    sub_2119F8B98(*(_QWORD *)(v1 + 32), v2, 0);
  if (MEMORY[0x212BE496C](*(_QWORD *)(v0 + 40) + 32))
  {
    sub_2119E4194();
    swift_unknownObjectRelease();
  }
  v3 = sub_211A47724();
  v4 = sub_211A47D30();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21190D000, v3, v4, "FMFActionsController: share location operation completed.", v5, 2u);
    MEMORY[0x212BE48A0](v5, -1, -1);
  }
  v6 = *(void (**)(char *, _QWORD))(v0 + 48);

  v8 = 2;
  v6(&v8, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1D26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void (*v15)(char *, void *);
  id v16;
  char v18;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  if (v2)
    sub_2119F8B98(*(_QWORD *)(v1 + 32), v2, 1);
  v3 = *(void **)(v0 + 160);
  v4 = v3;
  v5 = v3;
  v6 = sub_211A47724();
  v7 = sub_211A47D30();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 160);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v13;
    sub_211A47E2C();
    *v11 = v13;

    _os_log_impl(&dword_21190D000, v6, v7, "FMFActionsController: error offering location: %@", v10, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v11, -1, -1);
    MEMORY[0x212BE48A0](v10, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 160);
  v15 = *(void (**)(char *, void *))(v0 + 48);
  v18 = 0;
  v16 = v14;
  v15(&v18, v14);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1D45C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_211A47ED4())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v30 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_211958C38(&qword_254ACEB18);
  v3 = sub_211A47F4C();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_211A47EC8();
  sub_211911824(0, (unint64_t *)&qword_254AC8CC0);
  sub_211A2C178();
  result = sub_211A47C7C();
  v1 = v34;
  v30 = v35;
  v5 = v36;
  v6 = v37;
  v7 = v38;
LABEL_11:
  v29 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 56;
  while (v1 < 0)
  {
    v16 = sub_211A47EEC();
    if (!v16)
      goto LABEL_45;
    *(_QWORD *)&v31 = v16;
    sub_211911824(0, (unint64_t *)&qword_254AC8CC0);
    swift_dynamicCast();
LABEL_36:
    sub_211911824(0, (unint64_t *)&qword_254AC8CC0);
    swift_dynamicCast();
    result = sub_211A47F04();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v3 + 48) + 40 * v12;
    *(_OWORD *)v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(_QWORD *)(v13 + 32) = v33;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29)
      goto LABEL_45;
    v18 = *(_QWORD *)(v30 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v29)
        goto LABEL_45;
      v18 = *(_QWORD *)(v30 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v29)
          goto LABEL_45;
        v18 = *(_QWORD *)(v30 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v29)
            goto LABEL_45;
          v18 = *(_QWORD *)(v30 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v29)
              goto LABEL_45;
            v18 = *(_QWORD *)(v30 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v29 != v20)
              {
                v18 = *(_QWORD *)(v30 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_211973358();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_211A1D880(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, void *))
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v29;

  v8 = *(_QWORD *)(a3 + 40);
  if (v8)
    sub_2119F8B98(*(_QWORD *)(a3 + 32), v8, a2 != 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v9 = sub_211A47748();
    sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v10 = a2;
    swift_retain();
    v11 = a2;
    v12 = sub_211A47724();
    v13 = sub_211A47D30();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v14 = 136315394;
      v29 = v15;
      sub_211958C38(&qword_254ACEAD8);
      v16 = sub_211A47928();
      sub_211950A9C(v16, v17, &v29);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v18 = sub_211A47E08();
      sub_211950A9C(v18, v19, &v29);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v12, v13, "%s: error when sharing location: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v15, -1, -1);
      MEMORY[0x212BE48A0](v14, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v29) = 0;
    v27 = a2;
  }
  else
  {
    if (MEMORY[0x212BE496C](a4 + 32))
    {
      sub_2119E4194();
      swift_unknownObjectRelease();
    }
    if (qword_254AC7B80 != -1)
      swift_once();
    v20 = sub_211A47748();
    sub_21194F3E0(v20, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v21 = sub_211A47724();
    v22 = sub_211A47D30();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      v29 = v24;
      sub_211958C38(&qword_254ACEAD8);
      v25 = sub_211A47928();
      sub_211950A9C(v25, v26, &v29);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v21, v22, "%s: share location operation completed.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v24, -1, -1);
      MEMORY[0x212BE48A0](v23, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v29) = 2;
    v27 = 0;
  }
  return a5(&v29, v27);
}

uint64_t sub_211A1DCBC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_211A4785C();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_211A1DD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  sub_211958C38(&qword_254ACEB00);
  v8[8] = swift_task_alloc();
  v9 = sub_211A47424();
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  sub_211A4743C();
  v8[12] = swift_task_alloc();
  v10 = sub_211A47484();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A1DE24()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[16] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: perform stop sharing my location", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[11];
  v6 = v0[9];
  v7 = v0[10];

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v8 = (_QWORD *)swift_task_alloc();
  v0[17] = v8;
  *v8 = v0;
  v8[1] = sub_211A1DF7C;
  return sub_211A4758C();
}

uint64_t sub_211A1DF7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A1DFD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[8];
  v2 = swift_bridgeObjectRetain();
  v0[19] = sub_2119A566C(v2);
  swift_bridgeObjectRelease();
  v3 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[20] = v4;
  *v4 = v0;
  v4[1] = sub_211A1E088;
  return sub_211A474E4();
}

uint64_t sub_211A1E088()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_211923EE8(v2[8], &qword_254ACEB00);
    swift_release();
    swift_release();
  }
  else
  {
    v4 = v2[14];
    v3 = v2[15];
    v5 = v2[13];
    v6 = v2[8];
    swift_release();
    swift_release();
    sub_211923EE8(v6, &qword_254ACEB00);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_211A1E15C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void (*v5)(char *, _QWORD);
  char v7;

  v1 = *(_QWORD *)(v0 + 32);
  sub_2119F8B98(*(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend), *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend + 8), 0);
  if (MEMORY[0x212BE496C](v1 + 32))
  {
    sub_2119E4194();
    swift_unknownObjectRelease();
  }
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: Stop share completed successfully.", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = *(void (**)(char *, _QWORD))(v0 + 48);

  v7 = 2;
  v5(&v7, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1E284()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(char *, void *);
  id v14;
  char v16;

  v1 = *(void **)(v0 + 168);
  sub_2119F8B98(*(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend), *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend + 8), 1);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: Stop share completed with error: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 168);

  }
  v12 = *(void **)(v0 + 168);
  v13 = *(void (**)(char *, void *))(v0 + 48);
  v16 = 0;
  v14 = v12;
  v13(&v16, v12);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1E47C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, void *))
{
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v28;

  sub_2119F8B98(*(_QWORD *)(a5 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend), *(_QWORD *)(a5 + OBJC_IVAR____TtC7FMFCore20FMFStopSharingAction_friend + 8), a3 != 0);
  if (a3)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v9 = sub_211A47748();
    sub_21194F3E0(v9, (uint64_t)qword_254ADC7E8);
    v10 = a3;
    v11 = a3;
    v12 = sub_211A47724();
    v13 = sub_211A47D30();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v28 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = a3;
      sub_211958C38(&qword_254ACDE90);
      v17 = sub_211A47928();
      sub_211950A9C(v17, v18, &v28);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v12, v13, "Stop share completed with error - %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v15, -1, -1);
      MEMORY[0x212BE48A0](v14, -1, -1);
    }
    else
    {

    }
    LOBYTE(v28) = 0;
    v26 = a3;
  }
  else
  {
    if (MEMORY[0x212BE496C](a4 + 32))
    {
      sub_2119E4194();
      swift_unknownObjectRelease();
    }
    if (qword_254AC7B80 != -1)
      swift_once();
    v19 = sub_211A47748();
    sub_21194F3E0(v19, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v20 = sub_211A47724();
    v21 = sub_211A47D30();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_DWORD *)v22 = 136315138;
      v28 = v23;
      sub_211958C38(&qword_254ACEAD8);
      v24 = sub_211A47928();
      sub_211950A9C(v24, v25, &v28);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v20, v21, "%s: Stop share completed successfully.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v23, -1, -1);
      MEMORY[0x212BE48A0](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v28) = 2;
    v26 = 0;
  }
  return a6(&v28, v26);
}

uint64_t sub_211A1E82C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_211A47910();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_211A1E8AC(uint64_t a1, void *a2, uint64_t a3, NSObject *a4)
{
  void *v7;
  id v8;

  swift_beginAccess();
  v7 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a2;
  v8 = a2;

  dispatch_group_leave(a4);
}

void sub_211A1E914(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, id), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  id *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t *v38;
  id *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  id v63;
  uint64_t *v64;
  id v65;
  uint64_t v66;
  uint64_t type;
  os_log_type_t typea;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  uint64_t v72[3];
  uint64_t v73[3];
  uint64_t v74[3];

  v14 = (id *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
  {
    sub_2119F93C0(*(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend), *(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend + 8), 1);
    if (qword_254AC7B80 != -1)
      swift_once();
    v15 = sub_211A47748();
    sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    swift_retain_n();
    v16 = sub_211A47724();
    v17 = sub_211A47D30();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v74[0] = v19;
      *(_DWORD *)v18 = 136315394;
      sub_211958C38(&qword_254ACEAD8);
      v20 = sub_211A47928();
      v73[0] = sub_211950A9C(v20, v21, v74);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      swift_beginAccess();
      v22 = *(id *)(a1 + 16);
      sub_211958C38(&qword_254ACDE90);
      v23 = sub_211A47928();
      v72[0] = sub_211950A9C(v23, v24, v74);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v16, v17, "%s: removeFollower error: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v19, -1, -1);
      MEMORY[0x212BE48A0](v18, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    LOBYTE(v72[0]) = 0;
    swift_beginAccess();
    v36 = *v14;
    v37 = *v14;
    v38 = v72;
LABEL_20:
    a4(v38, v36);
    v50 = v36;
LABEL_21:

    return;
  }
  v25 = (id *)(a6 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a6 + 16))
  {
    sub_2119F93C0(*(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend), *(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend + 8), 1);
    if (qword_254AC7B80 != -1)
      swift_once();
    v26 = sub_211A47748();
    sub_21194F3E0(v26, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    swift_retain_n();
    v27 = sub_211A47724();
    v28 = sub_211A47D30();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v73[0] = v30;
      *(_DWORD *)v29 = 136315394;
      sub_211958C38(&qword_254ACEAD8);
      v31 = sub_211A47928();
      v72[0] = sub_211950A9C(v31, v32, v73);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      swift_beginAccess();
      v33 = *(id *)(a6 + 16);
      sub_211958C38(&qword_254ACDE90);
      v34 = sub_211A47928();
      v71[0] = sub_211950A9C(v34, v35, v73);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v27, v28, "%s: removeFollowingError error: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v30, -1, -1);
      MEMORY[0x212BE48A0](v29, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    LOBYTE(v71[0]) = 0;
    swift_beginAccess();
    v36 = *v25;
    v49 = *v25;
    v38 = v71;
    goto LABEL_20;
  }
  v39 = (id *)(a7 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a7 + 16))
  {
    sub_2119F93C0(*(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend), *(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend + 8), 1);
    if (qword_254AC7B80 != -1)
      swift_once();
    v40 = sub_211A47748();
    sub_21194F3E0(v40, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    swift_retain_n();
    v41 = sub_211A47724();
    v42 = sub_211A47D30();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      type = swift_slowAlloc();
      v72[0] = type;
      *(_DWORD *)v43 = 136315394;
      sub_211958C38(&qword_254ACEAD8);
      v44 = sub_211A47928();
      v71[0] = sub_211950A9C(v44, v45, v72);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_beginAccess();
      v46 = *(id *)(a7 + 16);
      sub_211958C38(&qword_254ACDE90);
      v47 = sub_211A47928();
      v70 = sub_211950A9C(v47, v48, v72);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v41, v42, "%s: removeFutureFollowingError error: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](type, -1, -1);
      MEMORY[0x212BE48A0](v43, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    LOBYTE(v70) = 0;
    swift_beginAccess();
    v62 = *v39;
    v63 = *v39;
    v64 = &v70;
LABEL_32:
    a4(v64, v62);
    v50 = v62;
    goto LABEL_21;
  }
  swift_beginAccess();
  v51 = *(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend);
  v52 = *(_QWORD *)(a3 + OBJC_IVAR____TtC7FMFCore21FMFRemoveFriendAction_friend + 8);
  if (*(_QWORD *)(a8 + 16))
  {
    sub_2119F93C0(v51, v52, 1);
    if (qword_254AC7B80 != -1)
      swift_once();
    v53 = sub_211A47748();
    sub_21194F3E0(v53, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    swift_retain_n();
    v54 = sub_211A47724();
    v55 = sub_211A47D30();
    if (os_log_type_enabled(v54, v55))
    {
      typea = v55;
      v56 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v71[0] = v66;
      *(_DWORD *)v56 = 136315394;
      sub_211958C38(&qword_254ACEAD8);
      v57 = sub_211A47928();
      v70 = sub_211950A9C(v57, v58, v71);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 12) = 2080;
      swift_beginAccess();
      v59 = *(id *)(a8 + 16);
      sub_211958C38(&qword_254ACDE90);
      v60 = sub_211A47928();
      v69 = sub_211950A9C(v60, v61, v71);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v54, typea, "%s: removeFutureFollowerError error: %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v66, -1, -1);
      MEMORY[0x212BE48A0](v56, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    LOBYTE(v69) = 0;
    swift_beginAccess();
    v62 = *v39;
    v65 = *v39;
    v64 = &v69;
    goto LABEL_32;
  }
  sub_2119F93C0(v51, v52, 0);
  LOBYTE(v71[0]) = 2;
  a4(v71, 0);
}

uint64_t sub_211A1F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[7] = a8;
  v8[8] = v12;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  sub_211958C38(&qword_254ACEB00);
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  v9 = sub_211A47424();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = swift_task_alloc();
  sub_211A4743C();
  v8[14] = swift_task_alloc();
  v10 = sub_211A47484();
  v8[15] = v10;
  v8[16] = *(_QWORD *)(v10 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A1F4A8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[19] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: performing respond to friendship invite", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[13];
  v6 = v0[11];
  v7 = v0[12];
  v8 = v0[3];

  LODWORD(v8) = *(unsigned __int8 *)(v8 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v9 = (_QWORD *)swift_task_alloc();
  v0[20] = v9;
  *v9 = v0;
  if ((_DWORD)v8 == 1)
    v10 = sub_211A1F620;
  else
    v10 = sub_211A1F884;
  v9[1] = v10;
  return sub_211A4758C();
}

uint64_t sub_211A1F620(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A1F67C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[10];
  v2 = swift_bridgeObjectRetain();
  v0[22] = sub_2119A566C(v2);
  swift_bridgeObjectRelease();
  v3 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_211A1F72C;
  return sub_211A474FC();
}

uint64_t sub_211A1F72C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_211923EE8(v2[10], &qword_254ACEB00);
    swift_release();
    swift_release();
  }
  else
  {
    v3 = v2[18];
    v4 = v2[15];
    v5 = v2[16];
    v6 = v2[10];
    swift_release();
    swift_release();
    sub_211923EE8(v6, &qword_254ACEB00);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_task_switch();
}

uint64_t sub_211A1F800()
{
  uint64_t v0;

  sub_2119F8B98(**(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8), 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1F884(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A1F8E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[9];
  v2 = swift_bridgeObjectRetain();
  v0[26] = sub_2119A566C(v2);
  swift_bridgeObjectRelease();
  v3 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[27] = v4;
  *v4 = v0;
  v4[1] = sub_211A1F990;
  return sub_211A47508();
}

uint64_t sub_211A1F990()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_211923EE8(v2[9], &qword_254ACEB00);
    swift_release();
    swift_release();
  }
  else
  {
    v4 = v2[16];
    v3 = v2[17];
    v5 = v2[15];
    v6 = v2[9];
    swift_release();
    swift_release();
    sub_211923EE8(v6, &qword_254ACEB00);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_211A1FA64()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  id v11;
  char v13;

  v1 = *(void **)(v0 + 192);
  sub_2119F8B98(**(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8), 1);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = v1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_211A47E2C();
    *v7 = v9;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: error when performing respond to friendship invite action: %@", v6, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v7, -1, -1);
    MEMORY[0x212BE48A0](v6, -1, -1);
  }
  else
  {

  }
  v10 = *(void (**)(char *, void *))(v0 + 56);
  v13 = 0;
  v11 = v1;
  v10(&v13, v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1FC50()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  id v11;
  char v13;

  v1 = *(void **)(v0 + 224);
  sub_2119F8B98(**(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8), 1);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = v1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_211A47E2C();
    *v7 = v9;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: error when performing respond to friendship invite action: %@", v6, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v7, -1, -1);
    MEMORY[0x212BE48A0](v6, -1, -1);
  }
  else
  {

  }
  v10 = *(void (**)(char *, void *))(v0 + 56);
  v13 = 0;
  v11 = v1;
  v10(&v13, v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A1FE3C(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t *, void *))
{
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v27;

  sub_2119F8B98(*a4, a4[1], a2 != 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v7 = sub_211A47748();
    sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v8 = a2;
    swift_retain();
    v9 = a2;
    v10 = sub_211A47724();
    v11 = sub_211A47D30();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      *(_DWORD *)v12 = 136315394;
      v27 = v13;
      sub_211958C38(&qword_254ACEAD8);
      v14 = sub_211A47928();
      sub_211950A9C(v14, v15, &v27);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v16 = sub_211A47E08();
      sub_211950A9C(v16, v17, &v27);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v10, v11, "%s: error when respoding to invite: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v13, -1, -1);
      MEMORY[0x212BE48A0](v12, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v27) = 0;
    v25 = a2;
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v18 = sub_211A47748();
    sub_21194F3E0(v18, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v19 = sub_211A47724();
    v20 = sub_211A47D30();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v21 = 136315138;
      v27 = v22;
      sub_211958C38(&qword_254ACEAD8);
      v23 = sub_211A47928();
      sub_211950A9C(v23, v24, &v27);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v19, v20, "%s: invite respond completed successfully.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v22, -1, -1);
      MEMORY[0x212BE48A0](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v27) = 2;
    v25 = 0;
  }
  return a5(&v27, v25);
}

uint64_t sub_211A20248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  sub_211958C38(&qword_254ACEB00);
  v6[7] = swift_task_alloc();
  v7 = sub_211A47424();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_211A4743C();
  v6[11] = swift_task_alloc();
  v8 = sub_211A47484();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A20318()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[15] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: performing now now action", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[10];
  v6 = v0[8];
  v7 = v0[9];

  v8 = swift_bridgeObjectRetain();
  v9 = sub_211A1B898(v8);
  swift_bridgeObjectRelease();
  v0[16] = sub_211A1A794(v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v10 = (_QWORD *)swift_task_alloc();
  v0[17] = v10;
  *v10 = v0;
  v10[1] = sub_211A204C8;
  return sub_211A4758C();
}

uint64_t sub_211A204C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A20524()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  v0[19] = sub_2119A566C(v0[16]);
  swift_bridgeObjectRelease();
  v2 = sub_211A474D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  *v3 = v0;
  v3[1] = sub_211A205D0;
  return sub_211A474F0();
}

uint64_t sub_211A205D0()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  (*v1)[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_211923EE8(v2[7], &qword_254ACEB00);
    swift_release();
    swift_release();
  }
  else
  {
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    v6 = v2[7];
    swift_release();
    swift_release();
    sub_211923EE8(v6, &qword_254ACEB00);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_211A206A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void (*v4)(char *, _QWORD);
  char v6;

  v1 = sub_211A47724();
  v2 = sub_211A47D30();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21190D000, v1, v2, "FMFActionsController: finished not now action", v3, 2u);
    MEMORY[0x212BE48A0](v3, -1, -1);
  }
  v4 = *(void (**)(char *, _QWORD))(v0 + 40);

  v6 = 2;
  v4(&v6, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A2078C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(char *, void *);
  id v14;
  char v16;

  v1 = *(void **)(v0 + 168);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: error when performing not now action: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 168);

  }
  v12 = *(void **)(v0 + 168);
  v13 = *(void (**)(char *, void *))(v0 + 40);

  v16 = 0;
  v14 = v12;
  v13(&v16, v12);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A2095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[7] = a8;
  v8[8] = v13;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  sub_211958C38(&qword_254ACEB00);
  v8[9] = swift_task_alloc();
  v9 = sub_211A474D8();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v10 = sub_211A47424();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  sub_211A4743C();
  v8[16] = swift_task_alloc();
  v11 = sub_211A47484();
  v8[17] = v11;
  v8[18] = *(_QWORD *)(v11 - 8);
  v8[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A20A5C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[20] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: performing ask to follow friendship invite", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[15];
  v6 = v0[13];
  v7 = v0[14];

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v8 = (_QWORD *)swift_task_alloc();
  v0[21] = v8;
  *v8 = v0;
  v8[1] = sub_211A20BB4;
  return sub_211A4758C();
}

uint64_t sub_211A20BB4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A20C10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[11];
  v3 = v0[9];
  v2 = v0[10];
  swift_bridgeObjectRetain();
  sub_211A264C0(MEMORY[0x24BEE4AF8]);
  sub_211A474C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v3, 1, 1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_211A20CE8;
  return sub_211A4752C();
}

uint64_t sub_211A20CE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_release();
  sub_211923EE8(v6, &qword_254ACEB00);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[18] + 8))(v2[19], v2[17]);
  return swift_task_switch();
}

uint64_t sub_211A20DA4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void (*v4)(char *, _QWORD);
  uint64_t v5;
  char v7;

  v1 = sub_211A47724();
  v2 = sub_211A47D30();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21190D000, v1, v2, "FMFActionsController: finished performing ask to follow friendship invite", v3, 2u);
    MEMORY[0x212BE48A0](v3, -1, -1);
  }
  v4 = *(void (**)(char *, _QWORD))(v0 + 56);
  v5 = *(_QWORD *)(v0 + 48);

  sub_2119F8B98(*(_QWORD *)(v5 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend), *(_QWORD *)(v5 + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend + 8), 0);
  v7 = 2;
  v4(&v7, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A20EC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(char *, void *);
  id v14;
  char v16;

  v1 = *(void **)(v0 + 192);
  sub_2119F8B98(*(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend), *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC7FMFCore20FMFAskToFollowAction_friend + 8), 1);
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 192);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: error when performing ask to follow action: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 192);

  }
  v12 = *(void **)(v0 + 192);
  v13 = *(void (**)(char *, void *))(v0 + 56);
  v16 = 0;
  v14 = v12;
  v13(&v16, v12);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A210C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, void *), uint64_t a6, _QWORD *a7, const char *a8, const char *a9)
{
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v32;

  sub_2119F8B98(*(_QWORD *)(a4 + *a7), *(_QWORD *)(a4 + *a7 + 8), a2 != 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v12 = sub_211A47748();
    sub_21194F3E0(v12, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v13 = a2;
    swift_retain();
    v14 = a2;
    v15 = sub_211A47724();
    v16 = sub_211A47D30();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v32 = v18;
      sub_211958C38(&qword_254ACEAD8);
      v19 = sub_211A47928();
      sub_211950A9C(v19, v20, &v32);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v21 = sub_211A47E08();
      sub_211950A9C(v21, v22, &v32);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v15, v16, a9, (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v18, -1, -1);
      MEMORY[0x212BE48A0](v17, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v32) = 0;
    v30 = a2;
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v23 = sub_211A47748();
    sub_21194F3E0(v23, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v24 = sub_211A47724();
    v25 = sub_211A47D30();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_DWORD *)v26 = 136315138;
      v32 = v27;
      sub_211958C38(&qword_254ACEAD8);
      v28 = sub_211A47928();
      sub_211950A9C(v28, v29, &v32);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v24, v25, a8, v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v27, -1, -1);
      MEMORY[0x212BE48A0](v26, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v32) = 2;
    v30 = 0;
  }
  return a5(&v32, v30);
}

uint64_t sub_211A214D0(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(_OWORD *, void *))
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  _OWORD v24[2];

  memset(v24, 0, sizeof(v24));
  sub_2119F986C((uint64_t *)v24, 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v6 = sub_211A47748();
    sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
    v7 = a2;
    v8 = a2;
    v9 = sub_211A47724();
    v10 = sub_211A47D30();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_QWORD *)&v24[0] = v12;
      *(_DWORD *)v11 = 136315138;
      sub_211958C38(&qword_254ACDE90);
      v13 = sub_211A47E08();
      sub_211950A9C(v13, v14, (uint64_t *)v24);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v9, v10, "FMFActionsController: error when show/hide location: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v12, -1, -1);
      MEMORY[0x212BE48A0](v11, -1, -1);
    }
    else
    {

    }
    LOBYTE(v24[0]) = 0;
    v22 = a2;
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v15 = sub_211A47748();
    sub_21194F3E0(v15, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v16 = sub_211A47724();
    v17 = sub_211A47D30();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v18 = 136315138;
      *(_QWORD *)&v24[0] = v19;
      sub_211958C38(&qword_254ACEAD8);
      v20 = sub_211A47928();
      sub_211950A9C(v20, v21, (uint64_t *)v24);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v16, v17, "%s: show/hide location operation completed.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v19, -1, -1);
      MEMORY[0x212BE48A0](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v24[0]) = 2;
    v22 = 0;
  }
  return a4(v24, v22);
}

uint64_t sub_211A21840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v8 = sub_211A47424();
  v7[7] = v8;
  v7[8] = *(_QWORD *)(v8 - 8);
  v7[9] = swift_task_alloc();
  sub_211A4743C();
  v7[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_211A218C4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_254AC7B80 != -1)
    swift_once();
  v1 = sub_211A47748();
  v0[11] = sub_21194F3E0(v1, (uint64_t)qword_254ADC7E8);
  v2 = sub_211A47724();
  v3 = sub_211A47D30();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21190D000, v2, v3, "FMFActionsController: performing update me device", v4, 2u);
    MEMORY[0x212BE48A0](v4, -1, -1);
  }
  v5 = v0[9];
  v6 = v0[7];
  v7 = v0[8];

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BE31D60], v6);
  sub_211A47448();
  sub_211A47580();
  swift_allocObject();
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_211A21A1C;
  return sub_211A4758C();
}

uint64_t sub_211A21A1C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_211A21A78()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_211A21ADC;
  return sub_211A47574();
}

uint64_t sub_211A21ADC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_211A21B48()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void (*v4)(_OWORD *, _QWORD);
  _OWORD v6[4];

  v1 = sub_211A47724();
  v2 = sub_211A47D30();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21190D000, v1, v2, "FMFActionsController: finsihed performing update me device", v3, 2u);
    MEMORY[0x212BE48A0](v3, -1, -1);
  }
  v4 = *(void (**)(_OWORD *, _QWORD))(v0 + 40);

  memset(v6, 0, 57);
  sub_2119F9E84((uint64_t)v6, 0);
  LOBYTE(v6[0]) = 2;
  v4(v6, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A21C40()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void (*v13)(char *, void *);
  id v14;
  char v16;

  v1 = *(void **)(v0 + 120);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_211A47724();
  v5 = sub_211A47D30();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_211A47E2C();
    *v8 = v10;

    _os_log_impl(&dword_21190D000, v4, v5, "FMFActionsController: error when setting active location sharing device: %@", v7, 0xCu);
    sub_211958C38(&qword_254AC8868);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v8, -1, -1);
    MEMORY[0x212BE48A0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  v12 = *(void **)(v0 + 120);
  v13 = *(void (**)(char *, void *))(v0 + 40);
  v16 = 0;
  v14 = v12;
  v13(&v16, v12);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_211A21E00(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(_OWORD *, void *))
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  _OWORD v26[4];

  memset(v26, 0, 57);
  sub_2119F9E84((uint64_t)v26, 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v6 = sub_211A47748();
    sub_21194F3E0(v6, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v7 = a2;
    swift_retain();
    v8 = a2;
    v9 = sub_211A47724();
    v10 = sub_211A47D30();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315394;
      *(_QWORD *)&v26[0] = v12;
      sub_211958C38(&qword_254ACEAD8);
      v13 = sub_211A47928();
      sub_211950A9C(v13, v14, (uint64_t *)v26);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v15 = sub_211A47E08();
      sub_211950A9C(v15, v16, (uint64_t *)v26);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v9, v10, "%s: error when show/hide location: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v12, -1, -1);
      MEMORY[0x212BE48A0](v11, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v26[0]) = 0;
    v24 = a2;
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v17 = sub_211A47748();
    sub_21194F3E0(v17, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v18 = sub_211A47724();
    v19 = sub_211A47D30();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)&v26[0] = v21;
      sub_211958C38(&qword_254ACEAD8);
      v22 = sub_211A47928();
      sub_211950A9C(v22, v23, (uint64_t *)v26);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v18, v19, "%s: show/hide location operation completed.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v21, -1, -1);
      MEMORY[0x212BE48A0](v20, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v26[0]) = 2;
    v24 = 0;
  }
  return a4(v26, v24);
}

uint64_t sub_211A22218(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(_OWORD *, void *), uint64_t a5, const char *a6, const char *a7)
{
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  _OWORD v31[2];

  memset(v31, 0, sizeof(v31));
  sub_2119F986C((uint64_t *)v31, 0);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v11 = sub_211A47748();
    sub_21194F3E0(v11, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v12 = a2;
    swift_retain();
    v13 = a2;
    v14 = sub_211A47724();
    v15 = sub_211A47D30();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315394;
      *(_QWORD *)&v31[0] = v17;
      sub_211958C38(&qword_254ACEAD8);
      v18 = sub_211A47928();
      sub_211950A9C(v18, v19, (uint64_t *)v31);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_211958C38(&qword_254ACDE90);
      v20 = sub_211A47E08();
      sub_211950A9C(v20, v21, (uint64_t *)v31);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v14, v15, a7, (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v17, -1, -1);
      MEMORY[0x212BE48A0](v16, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v31[0]) = 0;
    v29 = a2;
  }
  else
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v22 = sub_211A47748();
    sub_21194F3E0(v22, (uint64_t)qword_254ADC7E8);
    swift_retain_n();
    v23 = sub_211A47724();
    v24 = sub_211A47D30();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_DWORD *)v25 = 136315138;
      *(_QWORD *)&v31[0] = v26;
      sub_211958C38(&qword_254ACEAD8);
      v27 = sub_211A47928();
      sub_211950A9C(v27, v28, (uint64_t *)v31);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21190D000, v23, v24, a6, v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v26, -1, -1);
      MEMORY[0x212BE48A0](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v31[0]) = 2;
    v29 = 0;
  }
  return a4(v31, v29);
}

uint64_t sub_211A22620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  void (*v59)(_QWORD *, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t refreshed;
  _QWORD v62[2];
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  id v73[45];
  uint64_t v74[2];
  __int16 v75;
  _QWORD v76[45];
  _QWORD v77[45];
  uint64_t v78[43];
  uint64_t v79;

  v4 = v3;
  v70 = a3;
  v66 = type metadata accessor for FMFLabelledLocation();
  v71 = *(_QWORD **)(v66 - 8);
  v8 = MEMORY[0x24BDAC7A8](v66, v7);
  v67 = (uint64_t)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v69 = (uint64_t)v62 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v62 - v14;
  v16 = sub_211958C38(&qword_254AC89F8);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)v62 - v22;
  if (qword_254AC7B80 != -1)
    swift_once();
  v24 = sub_211A47748();
  sub_21194F3E0(v24, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v25 = sub_211A47724();
  v26 = sub_211A47D30();
  v27 = os_log_type_enabled(v25, v26);
  v68 = v4;
  v72 = v23;
  if (v27)
  {
    v28 = swift_slowAlloc();
    v64 = v20;
    v29 = (uint8_t *)v28;
    v30 = swift_slowAlloc();
    v63 = a1;
    v31 = v30;
    v78[0] = v30;
    v65 = a2;
    *(_DWORD *)v29 = 136315138;
    v77[0] = *v4;
    sub_211958C38(&qword_254ACEAD8);
    v32 = sub_211A47928();
    v77[0] = sub_211950A9C(v32, v33, v78);
    v23 = v72;
    a2 = v65;
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v25, v26, "%s: adding or updating label action initiated", v29, 0xCu);
    swift_arrayDestroy();
    v34 = v31;
    a1 = v63;
    MEMORY[0x212BE48A0](v34, -1, -1);
    v35 = v29;
    v20 = v64;
    MEMORY[0x212BE48A0](v35, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v36 = (uint64_t *)(a1 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_locationToLabel);
  v37 = type metadata accessor for FMFLocation();
  sub_211A2C058((uint64_t)v36 + *(int *)(v37 + 44), (uint64_t)v77);
  sub_211A2C058((uint64_t)v77, (uint64_t)v78);
  if (sub_2119724C8((uint64_t)v78) == 1 || !v79)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v71[7])(v23, 1, 1, v66);
  }
  else
  {
    v63 = a1;
    v64 = v20;
    v65 = a2;
    v38 = *(_QWORD *)(v79 + 16);
    v62[1] = v79;
    if (v38)
    {
      v39 = v79 + ((*((unsigned __int8 *)v71 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v71 + 80));
      v40 = v71[9];
      swift_bridgeObjectRetain();
      do
      {
        sub_211934794(v39, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
        if (*((_QWORD *)v15 + 3))
          __asm { BR              X9 }
        sub_211934758((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
        v39 += v40;
        --v38;
      }
      while (v38);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v71[7])(v23, 1, 1, v66);
    swift_bridgeObjectRelease();
    v20 = v64;
    a2 = v65;
    a1 = v63;
  }
  sub_21192C6B8((uint64_t)v23, (uint64_t)v20, &qword_254AC89F8);
  v41 = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label + 8);
  v42 = *(_WORD *)(a1 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label + 16);
  v74[0] = *(_QWORD *)(a1 + OBJC_IVAR____TtC7FMFCore23FMFAddUpdateLabelAction_label);
  v74[1] = v41;
  v75 = v42;
  v43 = *v36;
  v44 = v36[1];
  sub_211A2C058((uint64_t)v77, (uint64_t)v76);
  v45 = sub_2119724C8((uint64_t)v76);
  if (v45 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = 0;
    v47 = 0;
  }
  else
  {
    v48 = (void *)v76[38];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    objc_msgSend(v48, sel_coordinate);
    v47 = v49;
    sub_211A2C058((uint64_t)v77, (uint64_t)v73);
    objc_msgSend(v73[38], sel_coordinate);
    v46 = v50;
  }
  v51 = v69;
  FMFLabelledLocation.init(labelledLocation:label:userId:latitude:longitude:)((uint64_t)v20, v74, v43, v44, v47, v45 == 1, v46, v45 == 1, v69);
  v52 = v67;
  sub_211934794(v51, v67, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
  type metadata accessor for FMFAddUpdateLabelRequest();
  v53 = swift_allocObject();
  sub_211934794(v52, v53 + qword_254ADC758, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
  v54 = sub_21193BD18();
  sub_211934758(v52, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
  v55 = v68;
  v56 = v68[11];
  v57 = v68[12];
  v71 = sub_211931DB4(v68 + 8, v56);
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = v55;
  v58[3] = a2;
  v58[4] = v70;
  v59 = *(void (**)(_QWORD *, void (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t))(v57 + 64);
  refreshed = type metadata accessor for FMFInitRefreshClientResponse();
  swift_retain();
  swift_retain();
  v59(v54, sub_211A2C0AC, v58, refreshed, v56, v57);
  swift_release();
  swift_release();
  sub_211934758(v51, (uint64_t (*)(_QWORD))type metadata accessor for FMFLabelledLocation);
  return sub_211923EE8((uint64_t)v72, &qword_254AC89F8);
}

void sub_211A22CB4(uint64_t a1, void *a2, uint64_t *a3, void (*a4)(uint64_t *, void *), void (*a5)(uint64_t *, void *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t *, void *);
  uint64_t v50;
  uint64_t v51;

  v10 = sub_211958C38(&qword_254AC8360);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (uint64_t *)((char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (uint64_t *)((char *)&v48 - v17);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (uint64_t *)((char *)&v48 - v20);
  if (a2)
  {
    if (qword_254AC7B80 != -1)
      swift_once();
    v22 = sub_211A47748();
    sub_21194F3E0(v22, (uint64_t)qword_254ADC7E8);
    swift_retain();
    v23 = a2;
    swift_retain();
    v24 = a2;
    v25 = sub_211A47724();
    v26 = sub_211A47D30();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v49 = a5;
      v29 = v28;
      *(_DWORD *)v27 = 136315394;
      v50 = *a3;
      v51 = v28;
      sub_211958C38(&qword_254ACEAD8);
      v30 = sub_211A47928();
      v50 = sub_211950A9C(v30, v31, &v51);
      sub_211A47E2C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v50 = (uint64_t)a2;
      sub_211958C38(&qword_254ACDE90);
      v32 = sub_211A47E08();
      v50 = sub_211950A9C(v32, v33, &v51);
      sub_211A47E2C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21190D000, v25, v26, "%s: error when updating labels: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x212BE48A0](v29, -1, -1);
      MEMORY[0x212BE48A0](v27, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    LOBYTE(v51) = 0;
    a4(&v51, a2);
    return;
  }
  v49 = a4;
  if (a1)
  {
    sub_21192C6B8(a1 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse, (uint64_t)&v48 - v20, &qword_254AC8360);
    v34 = type metadata accessor for FMFCommandResponseFragment();
    v35 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
    if (v35(v21, 1, v34) == 1)
    {
      sub_211923EE8((uint64_t)v21, &qword_254AC8360);
    }
    else
    {
      v36 = *v21;
      sub_211934758((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FMFCommandResponseFragment);
      if (v36 == 529)
        goto LABEL_18;
    }
    sub_21192C6B8(a1 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse, (uint64_t)v18, &qword_254AC8360);
    if (v35(v18, 1, v34) == 1)
    {
      sub_211923EE8((uint64_t)v18, &qword_254AC8360);
    }
    else
    {
      v37 = *v18;
      sub_211934758((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FMFCommandResponseFragment);
      if (v37 == 530)
        goto LABEL_18;
    }
    sub_21192C6B8(a1 + OBJC_IVAR____TtC7FMFCore15FMFBaseResponse_commandResponse, (uint64_t)v14, &qword_254AC8360);
    if (v35(v14, 1, v34) == 1)
    {
      sub_211923EE8((uint64_t)v14, &qword_254AC8360);
      goto LABEL_19;
    }
    v38 = *v14;
    sub_211934758((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FMFCommandResponseFragment);
    if (v38 != 531)
      goto LABEL_19;
LABEL_18:
    LOBYTE(v51) = 0;
    sub_211A2BF8C();
    v39 = (void *)swift_allocError();
    *(_QWORD *)v40 = 3;
    *(_WORD *)(v40 + 8) = 256;
    v49(&v51, v39);

    return;
  }
LABEL_19:
  if (qword_254AC7B80 != -1)
    swift_once();
  v41 = sub_211A47748();
  sub_21194F3E0(v41, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v42 = sub_211A47724();
  v43 = sub_211A47D30();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    *(_DWORD *)v44 = 136315138;
    v50 = *a3;
    v51 = v45;
    sub_211958C38(&qword_254ACEAD8);
    v46 = sub_211A47928();
    v50 = sub_211950A9C(v46, v47, &v51);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v42, v43, "%s: Updated labels.", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v45, -1, -1);
    MEMORY[0x212BE48A0](v44, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v51) = 2;
  v49(&v51, 0);
}

uint64_t sub_211A232B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t refreshed;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  if (qword_254AC7B80 != -1)
    swift_once();
  v8 = sub_211A47748();
  sub_21194F3E0(v8, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v9 = sub_211A47724();
  v10 = sub_211A47D30();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v24 = a2;
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136315138;
    v25 = v12;
    sub_211958C38(&qword_254ACEAD8);
    v13 = sub_211A47928();
    sub_211950A9C(v13, v14, &v25);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v9, v10, "%s: removing labels action initiated", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    a2 = v24;
    MEMORY[0x212BE48A0](v15, -1, -1);
    MEMORY[0x212BE48A0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v16 = *(_QWORD *)(a1 + 24);
  type metadata accessor for FMFRemoveLabelsRequest();
  *(_QWORD *)(swift_allocObject() + qword_254ADC8B8) = v16;
  swift_bridgeObjectRetain();
  v17 = sub_21193BD18();
  v18 = v4[11];
  v19 = v4[12];
  sub_211931DB4(v4 + 8, v18);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v4;
  v20[3] = a2;
  v20[4] = a3;
  v21 = *(void (**)(_QWORD *, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t, uint64_t))(v19 + 64);
  refreshed = type metadata accessor for FMFInitRefreshClientResponse();
  swift_retain();
  swift_retain();
  v21(v17, sub_211A2C024, v20, refreshed, v18, v19);
  swift_release();
  return swift_release();
}

void sub_211A23574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  uint64_t aBlock[6];

  v4 = v3;
  if (qword_254AC7B80 != -1)
    swift_once();
  v7 = sub_211A47748();
  sub_21194F3E0(v7, (uint64_t)qword_254ADC7E8);
  swift_retain_n();
  v8 = sub_211A47724();
  v9 = sub_211A47D30();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    aBlock[0] = v11;
    sub_211958C38(&qword_254ACEAD8);
    v12 = sub_211A47928();
    sub_211950A9C(v12, v13, aBlock);
    sub_211A47E2C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21190D000, v8, v9, "%s: remoging location alert action initiated", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BE48A0](v11, -1, -1);
    MEMORY[0x212BE48A0](v10, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE2FED0]), sel_init);
  FMFLocationAlert.fence.getter();
  v16 = v15;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v4;
  v17[3] = a2;
  v17[4] = a3;
  aBlock[4] = (uint64_t)sub_211A2C00C;
  aBlock[5] = (uint64_t)v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_211A1BAB4;
  aBlock[3] = (uint64_t)&unk_24CCCED60;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_deleteFence_completion_, v16, v18);
  _Block_release(v18);

}

